<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="XObject.xml" source-language="en-US" target-language="ru-RU">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac521d2fddfb97fd2308d0e542f7e64ec71a761941f.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">21d2fddfb97fd2308d0e542f7e64ec71a761941f</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Xml.Linq.XObject">
          <source>Represents a node or an attribute in an XML tree.</source>
          <target state="translated">Представляет узел или атрибут в дереве XML.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XObject">
          <source>This class is the abstract common base class for <ph id="ph1">&lt;xref:System.Xml.Linq.XNode&gt;</ph> and <ph id="ph2">&lt;xref:System.Xml.Linq.XAttribute&gt;</ph>.</source>
          <target state="translated">Этот класс является абстрактным общий базовый класс для <ph id="ph1">&lt;xref:System.Xml.Linq.XNode&gt;</ph> и <ph id="ph2">&lt;xref:System.Xml.Linq.XAttribute&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XObject">
          <source>It provides some basic functionality that is common to both classes, such as annotations, and raising events when nodes have changed.</source>
          <target state="translated">Он предоставляет несколько базовых функциональных возможностей, который является общим для обоих классов, например заметки и порождает события при изменениях в узлах.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XObject">
          <source>Note that annotations are not part of the XML infoset; they are not serialized or deserialized.</source>
          <target state="translated">Обратите внимание, что заметки не являются частью набора сведений XML, они не могут быть сериализованы или десериализованы.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XObject.AddAnnotation(System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> that contains the annotation to add.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>, содержащий добавляемое примечание.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XObject.AddAnnotation(System.Object)">
          <source>Adds an object to the annotation list of this <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XObject" /&gt;</ph>.</source>
          <target state="translated">Добавление объекта в список примечаний данного <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XObject" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XObject.AddAnnotation(System.Object)">
          <source>Note that annotations are not part of the infoset; they are not persisted, or displayed by <ph id="ph1">&lt;xref:System.Xml.Linq.XNode.ToString%2A&gt;</ph>.</source>
          <target state="translated">Обратите внимание, что заметки не являются частью набора сведений; они не сохраняются, и отобразить <ph id="ph1">&lt;xref:System.Xml.Linq.XNode.ToString%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XObject.AddAnnotation(System.Object)">
          <source>Also, if you import an XML Namespace into your VB project and call AddAnnotation with the SaveOptions.OmitDuplicateNamespaces enumeration value, then only one element will contain the XML Namespace attribute instead of every element.</source>
          <target state="translated">Кроме того Если в проекте VB импорт пространства имен XML и вызвать AddAnnotation со значением перечисления SaveOptions.OmitDuplicateNamespaces только один элемент будет содержать атрибут пространства имен XML вместо каждого элемента.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XObject.AddAnnotation(System.Object)">
          <source>For more information, see <bpt id="p1">[</bpt>Removing duplicate namespaces in XML Literals<ept id="p1">](http://blogs.msdn.com/b/vbteam/archive/2010/06/09/removing-duplicate-namespaces-in-xml-literals-shyam-namboodiripad.aspx)</ept>.</source>
          <target state="translated">Дополнительные сведения см. в разделе <bpt id="p1">[</bpt>удаляя дубликаты пространств имен в XML-литералах<ept id="p1">](http://blogs.msdn.com/b/vbteam/archive/2010/06/09/removing-duplicate-namespaces-in-xml-literals-shyam-namboodiripad.aspx)</ept>.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XObject.AddAnnotation(System.Object)">
          <source>The following example adds an annotation to an <ph id="ph1">&lt;xref:System.Xml.Linq.XElement&gt;</ph>.</source>
          <target state="translated">В следующем примере добавляется заметку, которая <ph id="ph1">&lt;xref:System.Xml.Linq.XElement&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XObject.AddAnnotation(System.Object)">
          <source>This example produces the following output:</source>
          <target state="translated">В этом примере выводятся следующие данные:</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XObject.Annotation(System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of the annotation to retrieve.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> извлекаемого примечания.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XObject.Annotation(System.Type)">
          <source>Gets the first annotation object of the specified type from this <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XObject" /&gt;</ph>.</source>
          <target state="translated">Получение первого объекта примечаний заданного типа из данного <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XObject" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XObject.Annotation(System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> that contains the first annotation object that matches the specified type, or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if no annotation is of the specified type.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>, который содержит первый объект примечаний, который соответствует заданному типу, или <ph id="ph2">&lt;see langword="null" /&gt;</ph>, если примечаний заданного типа нет.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XObject.Annotation(System.Type)">
          <source>The following example adds an annotation to an <ph id="ph1">&lt;xref:System.Xml.Linq.XElement&gt;</ph>.</source>
          <target state="translated">В следующем примере добавляется заметку, которая <ph id="ph1">&lt;xref:System.Xml.Linq.XElement&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XObject.Annotation(System.Type)">
          <source>It then retrieves the annotation, specifying the type to retrieve.</source>
          <target state="translated">Затем извлекается аннотации, указывающие тип для получения.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XObject.Annotation(System.Type)">
          <source>This example produces the following output:</source>
          <target state="translated">В этом примере выводятся следующие данные:</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XObject.Annotation``1">
          <source>The type of the annotation to retrieve.</source>
          <target state="translated">Тип извлекаемого примечания.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XObject.Annotation``1">
          <source>Get the first annotation object of the specified type from this <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XObject" /&gt;</ph>.</source>
          <target state="translated">Получение первого объекта примечаний заданного типа из данного <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XObject" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XObject.Annotation``1">
          <source>The first annotation object that matches the specified type, or <ph id="ph1">&lt;see langword="null" /&gt;</ph> if no annotation is of the specified type.</source>
          <target state="translated">Первый объект примечаний, который соответствует заданному типу, или <ph id="ph1">&lt;see langword="null" /&gt;</ph>, если примечаний заданного типа нет.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XObject.Annotation``1">
          <source>The following example adds an annotation to an element, and then retrieves it through this method.</source>
          <target state="translated">Следующий пример добавляет заметки к элементу, а затем извлекает его через этот метод.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XObject.Annotation``1">
          <source>This example produces the following output:</source>
          <target state="translated">В этом примере выводятся следующие данные:</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XObject.Annotations(System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of the annotations to retrieve.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> извлекаемого примечания.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XObject.Annotations(System.Type)">
          <source>Gets a collection of annotations of the specified type for this <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XObject" /&gt;</ph>.</source>
          <target state="translated">Получение коллекции примечаний заданного типа для данного <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XObject" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XObject.Annotations(System.Type)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.Object" /&gt;</ph> that contains the annotations that match the specified type for this <ph id="ph3">&lt;see cref="T:System.Xml.Linq.XObject" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph><ph id="ph2">&lt;see cref="T:System.Object" /&gt;</ph>, содержащий примечания, которые соответствуют заданному типу для данного <ph id="ph3">&lt;see cref="T:System.Xml.Linq.XObject" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XObject.Annotations(System.Type)">
          <source>The following example adds some annotations to an <ph id="ph1">&lt;xref:System.Xml.Linq.XElement&gt;</ph>, then retrieves a collection of annotations by using this method.</source>
          <target state="translated">В следующем примере добавляется несколько заметок к <ph id="ph1">&lt;xref:System.Xml.Linq.XElement&gt;</ph>, затем извлекает коллекцию заметок с помощью этого метода.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XObject.Annotations(System.Type)">
          <source>This example produces the following output:</source>
          <target state="translated">В этом примере выводятся следующие данные:</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XObject.Annotations``1">
          <source>The type of the annotations to retrieve.</source>
          <target state="translated">Тип извлекаемого примечания.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XObject.Annotations``1">
          <source>Gets a collection of annotations of the specified type for this <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XObject" /&gt;</ph>.</source>
          <target state="translated">Получение коллекции примечаний заданного типа для данного <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XObject" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XObject.Annotations``1">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> that contains the annotations for this <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XObject" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph>, содержащий добавляемые примечания <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XObject" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XObject.Annotations``1">
          <source>The following example uses this method to retrieve annotations on an element.</source>
          <target state="translated">В следующем примере этот метод используется для извлечения примечания по элементу.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XObject.Annotations``1">
          <source>This example produces the following output:</source>
          <target state="translated">В этом примере выводятся следующие данные:</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="P:System.Xml.Linq.XObject.BaseUri">
          <source>Gets the base URI for this <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XObject" /&gt;</ph>.</source>
          <target state="translated">Получение базового URI для данного <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XObject" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XObject.BaseUri">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> that contains the base URI for this <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XObject" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>, содержащий базовый URI для данного <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XObject" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XObject.BaseUri">
          <source>Using LINQ to XML, you can deserialize XML in a number of fashions.</source>
          <target state="translated">С помощью LINQ to XML, выполнить десериализацию XML различными способами.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XObject.BaseUri">
          <source>You can parse it from a string, load it from a file, or read it from a <ph id="ph1">&lt;xref:System.IO.TextReader&gt;</ph> or an <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph>.</source>
          <target state="translated">Можно проанализировать его из строки, загрузить его из файла или прочитать его из <ph id="ph1">&lt;xref:System.IO.TextReader&gt;</ph> или <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XObject.BaseUri">
          <source>In all of these cases, LINQ to XML uses one or another of the concrete subclasses of <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>.</source>
          <target state="translated">Во всех этих случаях LINQ to XML используется один или другой подклассам из <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XObject.BaseUri">
          <source>Sometimes the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> has the base URI, and sometimes it does not.</source>
          <target state="translated">Иногда <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> имеет базовый универсальный код Ресурса, а иногда нет.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XObject.BaseUri">
          <source>For instance, when loading from a file, the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> knows the base URI, but when reading from an <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> that was created because of calling the <ph id="ph3">&lt;xref:System.Xml.Linq.XElement.Parse%2A&gt;</ph> method, there is no possibility of the <ph id="ph4">&lt;xref:System.Xml.XmlReader&gt;</ph> reporting a base URI; the XML was in a string.</source>
          <target state="translated">Для экземпляра, при загрузке из файла, <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> известен базовый URI-адрес, но при чтении из <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> , созданного из-за вызова <ph id="ph3">&lt;xref:System.Xml.Linq.XElement.Parse%2A&gt;</ph> метод, нет шанса из <ph id="ph4">&lt;xref:System.Xml.XmlReader&gt;</ph> reporting базовый URI; XML был в Строка.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XObject.BaseUri">
          <source>If, when parsing or loading the XML, you specify <ph id="ph1">&lt;xref:System.Xml.Linq.LoadOptions.SetBaseUri&gt;</ph>, LINQ to XML will request the base URI for each node as the <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> returns the node.</source>
          <target state="translated">Если при синтаксическом анализе или загрузки XML, необходимо указать <ph id="ph1">&lt;xref:System.Xml.Linq.LoadOptions.SetBaseUri&gt;</ph>, LINQ to XML будет запрашивать базовый URI для каждого узла как <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> возвращает узел.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XObject.BaseUri">
          <source>If the reader has the base URI, LINQ to XML will save the information with the LINQ to XML node.</source>
          <target state="translated">Если средство чтения базовый URI, эти сведения будут сохранены LINQ to XML с помощью LINQ to XML-узел.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XObject.BaseUri">
          <source>This property returns that information.</source>
          <target state="translated">Это свойство возвращает эти сведения.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XObject.BaseUri">
          <source>If the underlying <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> does not have the base URI, then this property will return an empty string.</source>
          <target state="translated">Если базовый <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> не имеет базовый URI-адрес, то это свойство будет возвращать пустую строку.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XObject.BaseUri">
          <source>Setting <ph id="ph1">&lt;xref:System.Xml.Linq.LoadOptions.SetBaseUri&gt;</ph> when loading an XML tree will result in slower parsing.</source>
          <target state="translated">Параметр <ph id="ph1">&lt;xref:System.Xml.Linq.LoadOptions.SetBaseUri&gt;</ph> при загрузке XML-дерева анализ будет производиться медленнее.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XObject.BaseUri">
          <source>When setting the base URI for an XML tree, LINQ to XML puts an annotation on the root of the tree.</source>
          <target state="translated">При задании базовый URI для XML-дерева, корнем дерева LINQ to XML помещает Примечание.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XObject.BaseUri">
          <source>This property is a computed property, and navigates up the tree to find the base URI.</source>
          <target state="translated">Это свойство является вычисляемым и перемещается вверх по дереву, чтобы найти базовый URI.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XObject.BaseUri">
          <source>The following example loads the base URI and line information as it loads the file.</source>
          <target state="translated">В следующем примере загружаются данные базового URI и строки, при загрузке файла.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XObject.BaseUri">
          <source>It then prints the base URI and the line information.</source>
          <target state="translated">Затем выводятся на печать базовый URI и сведения о строке.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XObject.BaseUri">
          <source>This example uses the following XML document: <bpt id="p1">[</bpt>Sample XML File: Typical Purchase Order (LINQ to XML)<ept id="p1">](http://msdn.microsoft.com/library/0606c09f-6e43-4f8d-95c8-e8e2e08d2348)</ept>.</source>
          <target state="translated">В этом примере используется следующий XML-документ: <bpt id="p1">[</bpt>Пример XML-файла. Стандартный заказ на покупку (LINQ to XML)<ept id="p1">](http://msdn.microsoft.com/library/0606c09f-6e43-4f8d-95c8-e8e2e08d2348)</ept>.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XObject.BaseUri">
          <source>This example produces the following output:</source>
          <target state="translated">В этом примере выводятся следующие данные:</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="E:System.Xml.Linq.XObject.Changed">
          <source>Raised when this <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XObject" /&gt;</ph> or any of its descendants have changed.</source>
          <target state="translated">Возникновение в случае изменения данного <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XObject" /&gt;</ph> или одного из его подчиненных элементов.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Xml.Linq.XObject.Changed">
          <source>Events are raised only when an XML tree is modified, not when it is constructed.</source>
          <target state="translated">События вызываются только при изменении XML-дерева, не при построении.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Xml.Linq.XObject.Changed">
          <source>This is because you have to add an event handler to an event before you can receive events, and you cannot add an event handler before you have a reference to an <ph id="ph1">&lt;xref:System.Xml.Linq.XObject&gt;</ph>.</source>
          <target state="translated">Это так, как вам нужно добавить в событие перед получением событий, а не удается добавить обработчик событий до того, как вы ссылку на обработчик событий <ph id="ph1">&lt;xref:System.Xml.Linq.XObject&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Xml.Linq.XObject.Changed">
          <source>You cannot get a reference to an <ph id="ph1">&lt;xref:System.Xml.Linq.XObject&gt;</ph> before the XML tree is constructed.</source>
          <target state="translated">Не удается получить ссылку на <ph id="ph1">&lt;xref:System.Xml.Linq.XObject&gt;</ph> перед XML создается дерево.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Xml.Linq.XObject.Changed">
          <source>This means that during functional construction of an XML tree, you will not receive events.</source>
          <target state="translated">Это означает, что во время функционального построения XML-дерева, пользователь не будет получать события.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Xml.Linq.XObject.Changed">
          <source>You should be careful when modifying an XML tree within one of these events, because doing this might lead to unexpected results.</source>
          <target state="translated">Следует соблюдать осторожность при изменении XML-дерева в одном из этих событий, так как это может привести к непредвиденным результатам.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Xml.Linq.XObject.Changed">
          <source>For example, if you receive a <ph id="ph1">&lt;xref:System.Xml.Linq.XObject.Changing&gt;</ph> event, and while the event is being processed you remove the node from the tree, you might not receive the <ph id="ph2">&lt;xref:System.Xml.Linq.XObject.Changed&gt;</ph> event.</source>
          <target state="translated">Например, если вы получаете <ph id="ph1">&lt;xref:System.Xml.Linq.XObject.Changing&gt;</ph> события и при обработке события удаления узла из дерева, не сможет получать <ph id="ph2">&lt;xref:System.Xml.Linq.XObject.Changed&gt;</ph> событий.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Xml.Linq.XObject.Changed">
          <source>When an event is being processed, it is valid to modify an XML tree other than the one that contains the node that is receiving the event; it is even valid to modify the same tree provided the modifications do not affect the specific nodes on which the event was raised.</source>
          <target state="translated">При обработке события, он допустим для изменения XML-дерева, содержащий узел, получающий события; допустимо даже для изменения то же самое дерево, если изменения не влияют на конкретные узлы, на которых было вызвано событие.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Xml.Linq.XObject.Changed">
          <source>However, if you modify the area of the tree that contains the node receiving the event, the events that you receive and the impact to the tree are undefined.</source>
          <target state="translated">Однако если изменить область дерева, содержащий узел получает событие, получаемые события и их влиянии на дереве не определены.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Xml.Linq.XObject.Changed">
          <source>The following example adds an event handler to the root element of an XML tree.</source>
          <target state="translated">В следующем примере добавляется обработчик событий в корневой элемент дерева XML.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Xml.Linq.XObject.Changed">
          <source>It then modifies the tree, causing LINQ to XML to raise some events.</source>
          <target state="translated">Затем он изменяет дерева, что заставляет LINQ to XML вызывать некоторые события.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Xml.Linq.XObject.Changed">
          <source>This example produces the following output:</source>
          <target state="translated">В этом примере выводятся следующие данные:</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Xml.Linq.XObject.Changed">
          <source>Events are useful when you want to maintain some aggregate information in an XML tree.</source>
          <target state="translated">События полезны, когда нужно поддержать какие-либо статистические данные в дереве XML.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Xml.Linq.XObject.Changed">
          <source>For example, you may want maintain an invoice total that is the sum of the line items of the invoice.</source>
          <target state="translated">Например, нужно рассчитать сумму элементов строки.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Xml.Linq.XObject.Changed">
          <source>This example uses events to maintain the total of all of the child elements under the complex element <ph id="ph1">`Items`</ph>.</source>
          <target state="translated">Следующий пример использует события для подсчета суммы всех дочерних элементов сложного элемента <ph id="ph1">`Items`</ph>.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Xml.Linq.XObject.Changed">
          <source>This code produces the following output:</source>
          <target state="translated">Этот код выводит следующие результаты:</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="E:System.Xml.Linq.XObject.Changing">
          <source>Raised when this <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XObject" /&gt;</ph> or any of its descendants are about to change.</source>
          <target state="translated">Возникновение в случае возможного изменения данного <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XObject" /&gt;</ph> или одного из его подчиненных элементов.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Xml.Linq.XObject.Changing">
          <source>Events are raised only from modification of an XML tree, not from construction of an XML tree.</source>
          <target state="translated">События возникают только при изменении XML-дерева, а не с построения XML-дерева.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Xml.Linq.XObject.Changing">
          <source>You have to add an event handler to an event before you can receive events, and you can't add an event handler before you have a reference to an <ph id="ph1">&lt;xref:System.Xml.Linq.XObject&gt;</ph>.</source>
          <target state="translated">Необходимо добавить обработчик событий для события перед получением событий, а не удается добавить обработчик событий до того, как вы ссылку на <ph id="ph1">&lt;xref:System.Xml.Linq.XObject&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Xml.Linq.XObject.Changing">
          <source>You can't get a reference to an <ph id="ph1">&lt;xref:System.Xml.Linq.XObject&gt;</ph> before the XML tree is constructed.</source>
          <target state="translated">Не удается получить ссылку на <ph id="ph1">&lt;xref:System.Xml.Linq.XObject&gt;</ph> перед XML создается дерево.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Xml.Linq.XObject.Changing">
          <source>This means that during functional construction of an XML tree, you will not receive events.</source>
          <target state="translated">Это означает, что во время функционального построения XML-дерева, пользователь не будет получать события.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Xml.Linq.XObject.Changing">
          <source>You should be careful when modifying an XML tree within one of these events, because doing this might lead to unexpected results.</source>
          <target state="translated">Следует соблюдать осторожность при изменении XML-дерева в одном из этих событий, так как это может привести к непредвиденным результатам.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Xml.Linq.XObject.Changing">
          <source>For example, if you receive a <ph id="ph1">&lt;xref:System.Xml.Linq.XObject.Changing&gt;</ph> event, and while the event is being processed you remove the node from the tree, you might not receive the <ph id="ph2">&lt;xref:System.Xml.Linq.XObject.Changed&gt;</ph> event.</source>
          <target state="translated">Например, если вы получаете <ph id="ph1">&lt;xref:System.Xml.Linq.XObject.Changing&gt;</ph> события и при обработке события удаления узла из дерева, не сможет получать <ph id="ph2">&lt;xref:System.Xml.Linq.XObject.Changed&gt;</ph> событий.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Xml.Linq.XObject.Changing">
          <source>When an event is being processed, it is valid to modify an XML tree other than the one that contains the node that is receiving the event; it is even valid to modify the same tree provided the modifications do not affect the specific nodes on which the event was raised.</source>
          <target state="translated">При обработке события, он допустим для изменения XML-дерева, содержащий узел, получающий события; допустимо даже для изменения то же самое дерево, если изменения не влияют на конкретные узлы, на которых было вызвано событие.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Xml.Linq.XObject.Changing">
          <source>However, if you modify the area of the tree that contains the node receiving the event, the events that you receive and the impact to the tree are undefined.</source>
          <target state="translated">Однако если изменить область дерева, содержащий узел получает событие, получаемые события и их влиянии на дереве не определены.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Xml.Linq.XObject.Changing">
          <source>The following example adds an event handler to the root element of an XML tree.</source>
          <target state="translated">В следующем примере добавляется обработчик событий в корневой элемент дерева XML.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Xml.Linq.XObject.Changing">
          <source>It then modifies the tree, causing LINQ to XML to raise some events.</source>
          <target state="translated">Затем он изменяет дерева, что заставляет LINQ to XML вызывать некоторые события.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Xml.Linq.XObject.Changing">
          <source>This example produces the following output:</source>
          <target state="translated">В этом примере выводятся следующие данные:</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="P:System.Xml.Linq.XObject.Document">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph> for this <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XObject" /&gt;</ph>.</source>
          <target state="translated">Возвращает объект <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph> для данного объекта <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XObject" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XObject.Document">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph> for this <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XObject" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph> для этой службы <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XObject" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XObject.Document">
          <source>The following example creates a document with some complex content.</source>
          <target state="translated">В следующем примере создается документ со сложным содержимым.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XObject.Document">
          <source>It then uses this property to retrieve the document for the <ph id="ph1">`Child`</ph> element.</source>
          <target state="translated">Затем использует это свойство, чтобы извлечь документ для <ph id="ph1">`Child`</ph> элемента.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XObject.Document">
          <source>This example produces the following output:</source>
          <target state="translated">В этом примере выводятся следующие данные:</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="P:System.Xml.Linq.XObject.NodeType">
          <source>Gets the node type for this <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XObject" /&gt;</ph>.</source>
          <target state="translated">Получение типа узла для данного <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XObject" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XObject.NodeType">
          <source>The node type for this <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XObject" /&gt;</ph>.</source>
          <target state="translated">Тип узла для данного <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XObject" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XObject.NodeType">
          <source>Because all classes that derive from <ph id="ph1">&lt;xref:System.Xml.Linq.XObject&gt;</ph> contain a <ph id="ph2">&lt;xref:System.Xml.Linq.XObject.NodeType%2A&gt;</ph> property, you can write code that operates on collections of concrete subclass of <ph id="ph3">&lt;xref:System.Xml.Linq.XObject&gt;</ph>.</source>
          <target state="translated">Так как все классы, производные от <ph id="ph1">&lt;xref:System.Xml.Linq.XObject&gt;</ph> содержат <ph id="ph2">&lt;xref:System.Xml.Linq.XObject.NodeType%2A&gt;</ph> свойства, можно написать код, который работает с коллекциями конкретный подкласс <ph id="ph3">&lt;xref:System.Xml.Linq.XObject&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XObject.NodeType">
          <source>Your code can then test for the node type of each node in the collection.</source>
          <target state="translated">Затем можно проверить код для типа узла каждого узла в коллекции.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XObject.NodeType">
          <source>The following example uses this method to retrieve the node type for a variety of nodes.</source>
          <target state="translated">В следующем примере этот метод используется для извлечения типа узла для различных узлов.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XObject.NodeType">
          <source>This example produces the following output:</source>
          <target state="translated">В этом примере выводятся следующие данные:</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="P:System.Xml.Linq.XObject.Parent">
          <source>Gets the parent <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> of this <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XObject" /&gt;</ph>.</source>
          <target state="translated">Возвращает родительский объект <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> этого объекта <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XObject" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XObject.Parent">
          <source>The parent <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> of this <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XObject" /&gt;</ph>.</source>
          <target state="translated">Родительский элемент <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> данного объекта <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XObject" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XObject.Parent">
          <source>If this <ph id="ph1">&lt;xref:System.Xml.Linq.XObject&gt;</ph> has no parent element, this property returns <ph id="ph2">`null`</ph>.</source>
          <target state="translated">Если этот <ph id="ph1">&lt;xref:System.Xml.Linq.XObject&gt;</ph> не имеет родительского элемента, это свойство возвращает <ph id="ph2">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XObject.Parent">
          <source>This property returns the parent element, and as children nodes of an <ph id="ph1">&lt;xref:System.Xml.Linq.XDocument&gt;</ph> have no parent element, this property returns <ph id="ph2">`null`</ph> for them.</source>
          <target state="translated">Это свойство возвращает родительский элемент и как дочерние узлы <ph id="ph1">&lt;xref:System.Xml.Linq.XDocument&gt;</ph> не имеют родительского элемента, это свойство возвращает <ph id="ph2">`null`</ph> для них.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XObject.Parent">
          <source>The following example uses this method.</source>
          <target state="translated">В следующем примере этот метод.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XObject.Parent">
          <source>This example produces the following output:</source>
          <target state="translated">В этом примере выводятся следующие данные:</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XObject.RemoveAnnotations(System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of annotations to remove.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> удаляемых примечаний.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XObject.RemoveAnnotations(System.Type)">
          <source>Removes the annotations of the specified type from this <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XObject" /&gt;</ph>.</source>
          <target state="translated">Удаление примечаний заданного типа из данного <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XObject" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XObject.RemoveAnnotations(System.Type)">
          <source>The following example creates an element with four annotations on it.</source>
          <target state="translated">В следующем примере создается элемент с четырьмя примечаниями по нему.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XObject.RemoveAnnotations(System.Type)">
          <source>It then uses this method to remove two of them.</source>
          <target state="translated">Затем этот метод используется для удаления две из них.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XObject.RemoveAnnotations(System.Type)">
          <source>This example produces the following output:</source>
          <target state="translated">В этом примере выводятся следующие данные:</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XObject.RemoveAnnotations``1">
          <source>The type of annotations to remove.</source>
          <target state="translated">Тип удаляемых примечаний.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XObject.RemoveAnnotations``1">
          <source>Removes the annotations of the specified type from this <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XObject" /&gt;</ph>.</source>
          <target state="translated">Удаление примечаний заданного типа из данного <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XObject" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XObject.RemoveAnnotations``1">
          <source>The following example creates an element with four annotations on it.</source>
          <target state="translated">В следующем примере создается элемент с четырьмя примечаниями по нему.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XObject.RemoveAnnotations``1">
          <source>It then uses this method to remove two of them.</source>
          <target state="translated">Затем этот метод используется для удаления две из них.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XObject.RemoveAnnotations``1">
          <source>This example produces the following output:</source>
          <target state="translated">В этом примере выводятся следующие данные:</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XObject.System#Xml#IXmlLineInfo#HasLineInfo">
          <source>Gets a value indicating whether or not this <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XObject" /&gt;</ph> has line information.</source>
          <target state="translated">Получение значения, указывающего, есть ли у данного <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XObject" /&gt;</ph> сведения строки.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XObject.System#Xml#IXmlLineInfo#HasLineInfo">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XObject" /&gt;</ph> has line information, otherwise <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, если <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XObject" /&gt;</ph> имеет сведения строки, в противном случае <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XObject.System#Xml#IXmlLineInfo#HasLineInfo">
          <source>You can call this method to determine whether the <ph id="ph1">&lt;xref:System.Xml.Linq.XObject&gt;</ph> contains valid line information.</source>
          <target state="translated">Можно вызвать этот метод, чтобы определить, является ли <ph id="ph1">&lt;xref:System.Xml.Linq.XObject&gt;</ph> содержит сведения о допустимых строках.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XObject.System#Xml#IXmlLineInfo#HasLineInfo">
          <source>This method is an explicit interface member implementation of a method in the <ph id="ph1">&lt;xref:System.Xml.IXmlLineInfo&gt;</ph> interface, so in order to call this method, it is necessary to cast to <ph id="ph2">&lt;xref:System.Xml.IXmlLineInfo&gt;</ph>.</source>
          <target state="translated">Этот метод является явную реализацию члена интерфейса метода в <ph id="ph1">&lt;xref:System.Xml.IXmlLineInfo&gt;</ph> интерфейс для вызова этого метода, не требуется для приведения к <ph id="ph2">&lt;xref:System.Xml.IXmlLineInfo&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XObject.System#Xml#IXmlLineInfo#HasLineInfo">
          <source>This example loads a small XML tree from a file, setting the options to set base URI and retain line information.</source>
          <target state="translated">В этом примере загружает небольшое XML-дерево из файла, настройку параметров задания базового URI и сохранение информации строки.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XObject.System#Xml#IXmlLineInfo#HasLineInfo">
          <source>It then adds another element that does not have line information.</source>
          <target state="translated">Затем он добавляет еще один элемент, не имеет сведений о строке.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XObject.System#Xml#IXmlLineInfo#HasLineInfo">
          <source>It then prints the line information for each element in the tree.</source>
          <target state="translated">Затем выводятся на печать сведения о строке для каждого элемента в дереве.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XObject.System#Xml#IXmlLineInfo#HasLineInfo">
          <source>This example produces the following output:</source>
          <target state="translated">В этом примере выводятся следующие данные:</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="P:System.Xml.Linq.XObject.System#Xml#IXmlLineInfo#LineNumber">
          <source>Gets the line number that the underlying <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> reported for this <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XObject" /&gt;</ph>.</source>
          <target state="translated">Получения номера строки, которую базовый <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> сообщил для данного <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XObject" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XObject.System#Xml#IXmlLineInfo#LineNumber">
          <source>An <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> that contains the line number reported by the <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> for this <ph id="ph3">&lt;see cref="T:System.Xml.Linq.XObject" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph>, содержащий номер строки, сообщенный <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> для данного <ph id="ph3">&lt;see cref="T:System.Xml.Linq.XObject" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XObject.System#Xml#IXmlLineInfo#LineNumber">
          <source>This method is an explicit interface member implementation of a method in the <ph id="ph1">&lt;xref:System.Xml.IXmlLineInfo&gt;</ph> interface, so in order to call this method, it is necessary to cast to <ph id="ph2">&lt;xref:System.Xml.IXmlLineInfo&gt;</ph>.</source>
          <target state="translated">Этот метод является явную реализацию члена интерфейса метода в <ph id="ph1">&lt;xref:System.Xml.IXmlLineInfo&gt;</ph> интерфейс для вызова этого метода, не требуется для приведения к <ph id="ph2">&lt;xref:System.Xml.IXmlLineInfo&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XObject.System#Xml#IXmlLineInfo#LineNumber">
          <source>This example loads a small XML tree from a file, setting the options to set base URI and retain line information.</source>
          <target state="translated">В этом примере загружает небольшое XML-дерево из файла, настройку параметров задания базового URI и сохранение информации строки.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XObject.System#Xml#IXmlLineInfo#LineNumber">
          <source>It then adds another element that does not have line information.</source>
          <target state="translated">Затем он добавляет еще один элемент, не имеет сведений о строке.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XObject.System#Xml#IXmlLineInfo#LineNumber">
          <source>It then prints the line information for each element in the tree.</source>
          <target state="translated">Затем выводятся на печать сведения о строке для каждого элемента в дереве.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XObject.System#Xml#IXmlLineInfo#LineNumber">
          <source>This example produces the following output:</source>
          <target state="translated">В этом примере выводятся следующие данные:</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="P:System.Xml.Linq.XObject.System#Xml#IXmlLineInfo#LinePosition">
          <source>Gets the line position that the underlying <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> reported for this <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XObject" /&gt;</ph>.</source>
          <target state="translated">Получения номера позиции, которую базовый <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> сообщил для данного <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XObject" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XObject.System#Xml#IXmlLineInfo#LinePosition">
          <source>An <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> that contains the line position reported by the <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> for this <ph id="ph3">&lt;see cref="T:System.Xml.Linq.XObject" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph>, содержащий номер позиции, сообщенный <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> для данного <ph id="ph3">&lt;see cref="T:System.Xml.Linq.XObject" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XObject.System#Xml#IXmlLineInfo#LinePosition">
          <source>This method is an explicit interface member implementation of a method in the <ph id="ph1">&lt;xref:System.Xml.IXmlLineInfo&gt;</ph> interface, so in order to call this method, it is necessary to cast to <ph id="ph2">&lt;xref:System.Xml.IXmlLineInfo&gt;</ph>.</source>
          <target state="translated">Этот метод является явную реализацию члена интерфейса метода в <ph id="ph1">&lt;xref:System.Xml.IXmlLineInfo&gt;</ph> интерфейс для вызова этого метода, не требуется для приведения к <ph id="ph2">&lt;xref:System.Xml.IXmlLineInfo&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XObject.System#Xml#IXmlLineInfo#LinePosition">
          <source>This example loads a small XML tree from a file, setting the options to set base URI and retain line information.</source>
          <target state="translated">В этом примере загружает небольшое XML-дерево из файла, настройку параметров задания базового URI и сохранение информации строки.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XObject.System#Xml#IXmlLineInfo#LinePosition">
          <source>It then adds another element that does not have line information.</source>
          <target state="translated">Затем он добавляет еще один элемент, не имеет сведений о строке.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XObject.System#Xml#IXmlLineInfo#LinePosition">
          <source>It then prints the line information for each element in the tree.</source>
          <target state="translated">Затем выводятся на печать сведения о строке для каждого элемента в дереве.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XObject.System#Xml#IXmlLineInfo#LinePosition">
          <source>This example produces the following output:</source>
          <target state="translated">В этом примере выводятся следующие данные:</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>