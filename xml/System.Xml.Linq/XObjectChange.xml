<Type Name="XObjectChange" FullName="System.Xml.Linq.XObjectChange">
  <TypeSignature Language="C#" Value="public enum XObjectChange" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed XObjectChange extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Linq.XObjectChange" />
  <TypeSignature Language="VB.NET" Value="Public Enum XObjectChange" />
  <TypeSignature Language="C++ CLI" Value="public enum class XObjectChange" />
  <AssemblyInfo>
    <AssemblyName>System.Xml.XDocument</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.Linq</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary><span data-ttu-id="53bbf-101">Задает тип события, когда событие вызывается объектом <see cref="T:System.Xml.Linq.XObject" />.</span><span class="sxs-lookup"><span data-stu-id="53bbf-101">Specifies the event type when an event is raised for an <see cref="T:System.Xml.Linq.XObject" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="53bbf-102">Это `enum` указывает тип события, когда происходит событие для <xref:System.Xml.Linq.XObject>.</span><span class="sxs-lookup"><span data-stu-id="53bbf-102">This `enum` specifies the event type when an event is raised for an <xref:System.Xml.Linq.XObject>.</span></span>  
  
 <span data-ttu-id="53bbf-103">Все операции, изменять XML-дерево разбить на ряд примитивов.</span><span class="sxs-lookup"><span data-stu-id="53bbf-103">All operations that modify the XML tree break down to a series of primitives.</span></span> <span data-ttu-id="53bbf-104">Существует четыре типа примитивов.</span><span class="sxs-lookup"><span data-stu-id="53bbf-104">There are four types of primitives.</span></span> <span data-ttu-id="53bbf-105">Два типа примитивов (Добавление и удаление) воздействуют на коллекции.</span><span class="sxs-lookup"><span data-stu-id="53bbf-105">Two of the primitives (Add and Remove) act on collections.</span></span> <span data-ttu-id="53bbf-106">Два из них (имя и значение) воздействуют на экземпляры.</span><span class="sxs-lookup"><span data-stu-id="53bbf-106">Two of them (Name and Value) act on instances.</span></span> <span data-ttu-id="53bbf-107">Отсутствует соответствующее событие для каждого из этих примитивов.</span><span class="sxs-lookup"><span data-stu-id="53bbf-107">There is a corresponding event for each of these primitives.</span></span>  
  
 <span data-ttu-id="53bbf-108">Следует соблюдать осторожность при изменении XML-дерева в одном из этих событий, так как это может привести к непредвиденным результатам.</span><span class="sxs-lookup"><span data-stu-id="53bbf-108">You should be careful when modifying an XML tree within one of these events, because doing this might lead to unexpected results.</span></span> <span data-ttu-id="53bbf-109">Например, если вы получаете <xref:System.Xml.Linq.XObject.Changing> события и при обработке события удаления узла из дерева, не сможет получать <xref:System.Xml.Linq.XObject.Changed> событий.</span><span class="sxs-lookup"><span data-stu-id="53bbf-109">For example, if you receive a <xref:System.Xml.Linq.XObject.Changing> event, and while the event is being processed you remove the node from the tree, you might not receive the <xref:System.Xml.Linq.XObject.Changed> event.</span></span> <span data-ttu-id="53bbf-110">При обработке события, он допустим для изменения XML-дерева, содержащий узел, получающий события; допустимо даже для изменения то же самое дерево, если изменения не влияют на конкретные узлы, на которых было вызвано событие.</span><span class="sxs-lookup"><span data-stu-id="53bbf-110">When an event is being processed, it is valid to modify an XML tree other than the one that contains the node that is receiving the event; it is even valid to modify the same tree provided the modifications do not affect the specific nodes on which the event was raised.</span></span> <span data-ttu-id="53bbf-111">Однако если изменить область дерева, содержащий узел получает событие, получаемые события и их влиянии на дереве не определены.</span><span class="sxs-lookup"><span data-stu-id="53bbf-111">However, if you modify the area of the tree that contains the node receiving the event, the events that you receive and the impact to the tree are undefined.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="53bbf-112">Следующий пример создает событие, добавив элемент в дерево.</span><span class="sxs-lookup"><span data-stu-id="53bbf-112">The following example raises an event by adding an element to the tree.</span></span>  
  
```csharp  
XElement root = new XElement("Root", "content");  
root.Changing += (sender, e) =>  
    {  
        Console.WriteLine("Changing event raised");  
        Console.WriteLine("  Sender: " + sender.GetType());  
        Console.WriteLine("  Changing: " + e.ObjectChange);  
    };  
root.Changed += (sender, e) =>  
    {  
        Console.WriteLine("Changed event raised");  
        Console.WriteLine("  Sender: " + sender.GetType());  
        Console.WriteLine("  Changed: " + e.ObjectChange);  
    };  
root.Add(new XElement("Child", "child content"));  
```  
  
 <span data-ttu-id="53bbf-113">В этом примере выводятся следующие данные:</span><span class="sxs-lookup"><span data-stu-id="53bbf-113">This example produces the following output:</span></span>  
  
```  
Changing event raised  
  Sender: System.Xml.Linq.XElement  
  Changing: Add  
Changed event raised  
  Sender: System.Xml.Linq.XElement  
  Changed: Add  
```  
  
 <span data-ttu-id="53bbf-114">Следующий пример вызывает событие при удалении элемента из дерева.</span><span class="sxs-lookup"><span data-stu-id="53bbf-114">The following example raises an event by removing an element from the tree.</span></span>  
  
```csharp  
XElement root = new XElement("Root",  
    new XElement("Child", "content")  
);  
root.Changing += (sender, e) =>  
    {  
        Console.WriteLine("Changing event raised");  
        Console.WriteLine("  Sender: " + sender.GetType());  
        Console.WriteLine("  Changing: " + e.ObjectChange);  
    };  
root.Changed += (sender, e) =>  
    {  
        Console.WriteLine("Changed event raised");  
        Console.WriteLine("  Sender: " + sender.GetType());  
        Console.WriteLine("  Changed: " + e.ObjectChange);  
    };  
root.Element("Child").Remove();  
```  
  
 <span data-ttu-id="53bbf-115">В этом примере выводятся следующие данные:</span><span class="sxs-lookup"><span data-stu-id="53bbf-115">This example produces the following output:</span></span>  
  
```  
Changing event raised  
  Sender: System.Xml.Linq.XElement  
  Changing: Remove  
Changed event raised  
  Sender: System.Xml.Linq.XElement  
  Changed: Remove  
```  
  
 <span data-ttu-id="53bbf-116">Следующий пример вызывает событие, путем изменения имени элемента.</span><span class="sxs-lookup"><span data-stu-id="53bbf-116">The following example raises an event by changing the name of an element.</span></span>  
  
```csharp  
XElement root = new XElement("Root", "content");  
root.Changing += (sender, e) =>  
    {  
        Console.WriteLine("Changing event raised");  
        Console.WriteLine("  Sender: " + sender.GetType());  
        Console.WriteLine("  Changing: " + e.ObjectChange);  
    };  
root.Changed += (sender, e) =>  
    {  
        Console.WriteLine("Changed event raised");  
        Console.WriteLine("  Sender: " + sender.GetType());  
        Console.WriteLine("  Changed: " + e.ObjectChange);  
    };  
root.Name = "NewName";  
```  
  
 <span data-ttu-id="53bbf-117">В этом примере выводятся следующие данные:</span><span class="sxs-lookup"><span data-stu-id="53bbf-117">This example produces the following output:</span></span>  
  
```  
Changing event raised  
  Sender: System.Xml.Linq.XElement  
  Changing: Name  
Changed event raised  
  Sender: System.Xml.Linq.XElement  
  Changed: Name  
```  
  
 <span data-ttu-id="53bbf-118">Следующий пример создает событие, установив значение атрибута.</span><span class="sxs-lookup"><span data-stu-id="53bbf-118">The following example raises an event by setting the value of an attribute.</span></span>  
  
```csharp  
XElement root = new XElement("Root",  
    new XAttribute("Att", "att value")  
);  
root.Changing += (sender, e) =>  
    {  
        Console.WriteLine("Changing event raised");  
        Console.WriteLine("  Sender: " + sender.GetType());  
        Console.WriteLine("  Changing: " + e.ObjectChange);  
    };  
root.Changed += (sender, e) =>  
    {  
        Console.WriteLine("Changed event raised");  
        Console.WriteLine("  Sender: " + sender.GetType());  
        Console.WriteLine("  Changed: " + e.ObjectChange);  
    };  
root.FirstAttribute.Value = "new contents";  
```  
  
 <span data-ttu-id="53bbf-119">В этом примере выводятся следующие данные:</span><span class="sxs-lookup"><span data-stu-id="53bbf-119">This example produces the following output:</span></span>  
  
```  
Changing event raised  
  Sender: System.Xml.Linq.XAttribute  
  Changing: Value  
Changed event raised  
  Sender: System.Xml.Linq.XAttribute  
  Changed: Value  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="Add" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Xml.Linq.XObjectChange Add = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Xml.Linq.XObjectChange.Add" />
      <MemberSignature Language="VB.NET" Value="Add" />
      <MemberSignature Language="C++ CLI" Value="Add" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Linq.XObjectChange</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary><span data-ttu-id="53bbf-120"><see cref="T:System.Xml.Linq.XObject" /> был или будет добавлен к <see cref="T:System.Xml.Linq.XContainer" />.</span><span class="sxs-lookup"><span data-stu-id="53bbf-120">An <see cref="T:System.Xml.Linq.XObject" /> has been or will be added to an <see cref="T:System.Xml.Linq.XContainer" />.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="Name" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Xml.Linq.XObjectChange Name = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.Xml.Linq.XObjectChange.Name" />
      <MemberSignature Language="VB.NET" Value="Name" />
      <MemberSignature Language="C++ CLI" Value="Name" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Linq.XObjectChange</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary><span data-ttu-id="53bbf-121"><see cref="T:System.Xml.Linq.XObject" /> был или будет переименован.</span><span class="sxs-lookup"><span data-stu-id="53bbf-121">An <see cref="T:System.Xml.Linq.XObject" /> has been or will be renamed.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="Remove" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Xml.Linq.XObjectChange Remove = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Xml.Linq.XObjectChange.Remove" />
      <MemberSignature Language="VB.NET" Value="Remove" />
      <MemberSignature Language="C++ CLI" Value="Remove" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Linq.XObjectChange</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary><span data-ttu-id="53bbf-122"><see cref="T:System.Xml.Linq.XObject" /> был или будет удален из <see cref="T:System.Xml.Linq.XContainer" />.</span><span class="sxs-lookup"><span data-stu-id="53bbf-122">An <see cref="T:System.Xml.Linq.XObject" /> has been or will be removed from an <see cref="T:System.Xml.Linq.XContainer" />.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="Value" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Xml.Linq.XObjectChange Value = int32(3)" />
      <MemberSignature Language="DocId" Value="F:System.Xml.Linq.XObjectChange.Value" />
      <MemberSignature Language="VB.NET" Value="Value" />
      <MemberSignature Language="C++ CLI" Value="Value" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Linq.XObjectChange</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary><span data-ttu-id="53bbf-123">Значение <see cref="T:System.Xml.Linq.XObject" /> было или будет изменено.</span><span class="sxs-lookup"><span data-stu-id="53bbf-123">The value of an <see cref="T:System.Xml.Linq.XObject" /> has been or will be changed.</span></span> <span data-ttu-id="53bbf-124">Дополнительно это событие вызывается сериализацией пустого элемента (или из пустого тега в пару тегов "начало/окончание" или наоборот).</span><span class="sxs-lookup"><span data-stu-id="53bbf-124">In addition, a change in the serialization of an empty element (either from an empty tag to start/end tag pair or vice versa) raises this event.</span></span></summary>
      </Docs>
    </Member>
  </Members>
</Type>