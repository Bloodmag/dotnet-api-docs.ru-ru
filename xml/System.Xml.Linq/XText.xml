<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="XText.xml" source-language="en-US" target-language="ru-RU">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5245a09a0817a51dfb4d1be16c89c4bc0aa549cf5.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">245a09a0817a51dfb4d1be16c89c4bc0aa549cf5</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Xml.Linq.XText">
          <source>Represents a text node.</source>
          <target state="translated">Представляет текстовый узел.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XText">
          <source>XML elements can contain text content.</source>
          <target state="translated">Элементы XML могут содержать текстовое содержимое.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XText">
          <source>Sometimes the content is simple (the element only contains text content), and sometimes the content is mixed (the contents of the element contains both text and other elements).</source>
          <target state="translated">Иногда содержимое может быть простым (элемент содержит только текстовое содержимое), а иногда смешанного содержимого (содержимое элемента содержит текст и другие элементы).</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XText">
          <source>In either case, each chunk of text is represented as an <ph id="ph1">&lt;xref:System.Xml.Linq.XText&gt;</ph> node.</source>
          <target state="translated">В любом случае каждый блок текста, представляется как <ph id="ph1">&lt;xref:System.Xml.Linq.XText&gt;</ph> узла.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XText">
          <source><ph id="ph1">[!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)]</ph> developers will often have to write code to work with arbitrary <ph id="ph2">[!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)]</ph> trees that they did not create.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)]</ph> Разработчики часто приходится писать код, чтобы работать с произвольной <ph id="ph2">[!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)]</ph> деревьев, которые созданы не ими.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XText">
          <source>If you are writing code that has to work with <ph id="ph1">[!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)]</ph> trees that you have no control over creating, you should be aware of certain behaviors of <ph id="ph2">&lt;xref:System.Xml.Linq.XText&gt;</ph> nodes.</source>
          <target state="translated">Если вы пишете код, который должен работать с <ph id="ph1">[!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)]</ph> деревьев, которые у вас нет контроля над созданием, которые необходимо учитывать определенные поведения <ph id="ph2">&lt;xref:System.Xml.Linq.XText&gt;</ph> узлов.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XText">
          <source>When processing the contents of an XML tree at the node level, you should be prepared for multiple <ph id="ph1">&lt;xref:System.Xml.Linq.XText&gt;</ph> nodes to be adjacent to each other.</source>
          <target state="translated">При обработке содержимого XML-дерева на уровне узла, должно быть подготовлено для нескольких <ph id="ph1">&lt;xref:System.Xml.Linq.XText&gt;</ph> узлы рядом друг с другом.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XText">
          <source>Further, you should be prepared for <ph id="ph1">&lt;xref:System.Xml.Linq.XText&gt;</ph> nodes that contain no text.</source>
          <target state="translated">Кроме того, можно подготовить для <ph id="ph1">&lt;xref:System.Xml.Linq.XText&gt;</ph> узлов, содержащих текст.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XText">
          <source>It is possible through <ph id="ph1">[!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)]</ph> methods to remove the content of a text node.</source>
          <target state="translated">Это возможно благодаря <ph id="ph1">[!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)]</ph> методов, чтобы удалить содержимое текстового узла.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XText">
          <source>However, <ph id="ph1">[!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)]</ph> does not automatically delete the node.</source>
          <target state="translated">Однако <ph id="ph1">[!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)]</ph> автоматически не удаляет узел.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XText">
          <source>The node has identity, and might have annotations, so <ph id="ph1">[!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)]</ph> allows for zero-length nodes in the tree.</source>
          <target state="translated">Узел имеет идентификацию и может иметь заметки, поэтому <ph id="ph1">[!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)]</ph> допускает пустые узлы в дереве.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XText">
          <source>For more information, see <bpt id="p1">[</bpt>Programming with Nodes<ept id="p1">](http://msdn.microsoft.com/library/18680d1c-6e7c-4645-8d53-27b5a96f2d3f)</ept>.</source>
          <target state="translated">Дополнительные сведения см. в разделе <bpt id="p1">[</bpt>программирование с узлами<ept id="p1">](http://msdn.microsoft.com/library/18680d1c-6e7c-4645-8d53-27b5a96f2d3f)</ept>.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="T:System.Xml.Linq.XText">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XText" /&gt;</ph> class.</source>
          <target state="translated">Инициализирует новый экземпляр класса <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XText" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XText.#ctor(System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> that contains the value of the <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XText" /&gt;</ph> node.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>, содержащий значение узла <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XText" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XText.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XText" /&gt;</ph> class.</source>
          <target state="translated">Инициализирует новый экземпляр класса <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XText" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XText.#ctor(System.String)">
          <source>You typically do not create text nodes by using the <ph id="ph1">&lt;xref:System.Xml.Linq.XText&gt;</ph> constructors.</source>
          <target state="translated">Обычно не создаются текстовых узлов с помощью <ph id="ph1">&lt;xref:System.Xml.Linq.XText&gt;</ph> конструкторы.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XText.#ctor(System.String)">
          <source>When you pass text content when constructing an <ph id="ph1">&lt;xref:System.Xml.Linq.XElement&gt;</ph>, text nodes are automatically created.</source>
          <target state="translated">При передаче текстового содержимого при создании <ph id="ph1">&lt;xref:System.Xml.Linq.XElement&gt;</ph>, текстовые узлы создаются автоматически.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XText.#ctor(System.String)">
          <source>The following example creates an element that contains a text node.</source>
          <target state="translated">В следующем примере создается элемент, содержащий текстовый узел.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XText.#ctor(System.String)">
          <source>This example produces the following output:</source>
          <target state="translated">В этом примере выводятся следующие данные:</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XText.#ctor(System.Xml.Linq.XText)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XText" /&gt;</ph> node to copy from.</source>
          <target state="translated">Узел <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XText" /&gt;</ph>, из которого следует выполнить копирование.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XText.#ctor(System.Xml.Linq.XText)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XText" /&gt;</ph> class from another <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XText" /&gt;</ph> object.</source>
          <target state="translated">Инициализирует новый экземпляр класса <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XText" /&gt;</ph> из другого объекта <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XText" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XText.#ctor(System.Xml.Linq.XText)">
          <source>This constructor is primarily used internally to make a deep copy of an XML tree.</source>
          <target state="translated">Этот конструктор в основном используется внутри для создания глубокой копии дерева XML.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="P:System.Xml.Linq.XText.NodeType">
          <source>Gets the node type for this node.</source>
          <target state="translated">Возвращает тип узла для этого узла.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XText.NodeType">
          <source>The node type.</source>
          <target state="translated">Тип узла.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XText.NodeType">
          <source>For <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XText" /&gt;</ph> objects, this value is <ph id="ph2">&lt;see cref="F:System.Xml.XmlNodeType.Text" /&gt;</ph>.</source>
          <target state="translated">Для объектов <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XText" /&gt;</ph> это значение равно <ph id="ph2">&lt;see cref="F:System.Xml.XmlNodeType.Text" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XText.NodeType">
          <source>Because all classes that derive from <ph id="ph1">&lt;xref:System.Xml.Linq.XObject&gt;</ph> contain a <ph id="ph2">&lt;xref:System.Xml.Linq.XObject.NodeType%2A&gt;</ph> property, you can write code that operates on collections of concrete subclass of <ph id="ph3">&lt;xref:System.Xml.Linq.XObject&gt;</ph>.</source>
          <target state="translated">Так как все классы, производные от <ph id="ph1">&lt;xref:System.Xml.Linq.XObject&gt;</ph> содержат <ph id="ph2">&lt;xref:System.Xml.Linq.XObject.NodeType%2A&gt;</ph> свойства, можно написать код, который работает с коллекциями конкретный подкласс <ph id="ph3">&lt;xref:System.Xml.Linq.XObject&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XText.NodeType">
          <source>Your code can then test for the node type of each node in the collection.</source>
          <target state="translated">Затем можно проверить код для типа узла каждого узла в коллекции.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XText.NodeType">
          <source>The following example creates an XML tree that contains a number of types of nodes.</source>
          <target state="translated">Следующий пример создает XML-дерева, содержащий несколько типов узлов.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XText.NodeType">
          <source>It then iterates through the tree, outputting the node type of each node.</source>
          <target state="translated">Затем выполняется итерация по дереву и вывод типа узла каждого узла.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XText.NodeType">
          <source>Note that <ph id="ph1">`Child2`</ph> contains an <ph id="ph2">&lt;xref:System.Xml.Linq.XText&gt;</ph> node, implicitly converted from the string content.</source>
          <target state="translated">Обратите внимание, что <ph id="ph1">`Child2`</ph> содержит <ph id="ph2">&lt;xref:System.Xml.Linq.XText&gt;</ph> узел, неявное преобразование из строкового содержимого.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XText.NodeType">
          <source>This example produces the following output:</source>
          <target state="translated">В этом примере выводятся следующие данные:</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="P:System.Xml.Linq.XText.Value">
          <source>Gets or sets the value of this node.</source>
          <target state="translated">Возвращает или задает значение этого узла.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XText.Value">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> that contains the value of this node.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>, содержащий значение данного узла.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XText.Value">
          <source>Setting this property will raise the <ph id="ph1">&lt;xref:System.Xml.Linq.XObject.Changed&gt;</ph> and the <ph id="ph2">&lt;xref:System.Xml.Linq.XObject.Changing&gt;</ph> events.</source>
          <target state="translated">Параметр этого свойства вызовет <ph id="ph1">&lt;xref:System.Xml.Linq.XObject.Changed&gt;</ph> и <ph id="ph2">&lt;xref:System.Xml.Linq.XObject.Changing&gt;</ph> события.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XText.Value">
          <source>The following example shows getting and setting this property.</source>
          <target state="translated">В следующем примере показано получение и задание этого свойства.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XText.Value">
          <source>This example produces the following output:</source>
          <target state="translated">В этом примере выводятся следующие данные:</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XText.WriteTo(System.Xml.XmlWriter)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> into which this method will write.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>, в который данный метод будет выполнять запись.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XText.WriteTo(System.Xml.XmlWriter)">
          <source>Writes this node to an <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>.</source>
          <target state="translated">Записывает данный узел в объект <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XText.WriteTo(System.Xml.XmlWriter)">
          <source>This method is primarily used internally by the methods that write an XML tree to an <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph>.</source>
          <target state="translated">Этот метод в основном используется внутри методов, которые записывают XML-дерево <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>