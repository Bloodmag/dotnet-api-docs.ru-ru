<Type Name="XmlSchemaInference" FullName="System.Xml.Schema.XmlSchemaInference">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="42dbabff920f5482d6f67fbb43526916a3163a22" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30720528" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class XmlSchemaInference" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit XmlSchemaInference extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Schema.XmlSchemaInference" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class XmlSchemaInference" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlSchemaInference sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Определяет схему языка объявления схем XML (XSD — XML Schema Definition Language) на основе документа XML. Класс <see cref="T:System.Xml.Schema.XmlSchemaInference" /> не поддерживает наследование.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  -   Не используйте схем из неизвестных или ненадежных источников или расположения. Это приведет к компрометации вашего кода.  
> -   XML-схем (включая встроенные схемы) по своей природе уязвимы для атак; не принимать их в недоверенных сценариях.  
> -   Сообщения об ошибках проверки схемы и исключения могут предоставлять конфиденциальных сведений о модели содержимого или пути URI к файлу схемы. Будьте внимательны и не предоставлять эту информацию для ненадежных вызывающих объектов.  
  
 <xref:System.Xml.Schema.XmlSchemaInference> Класса в <xref:System.Xml.Schema?displayProperty=nameWithType> пространства имен позволяет выводить схему языка определения схем XML (XSD) на основе структуры XML-документа. Класс <xref:System.Xml.Schema.XmlSchemaInference> выводит схему XML, которая может проверять XML-документ.  
  
 <xref:System.Xml.Schema.XmlSchemaInference> Класс поддерживает стандарты консорциума W3C XML и XML-схем. Он может использоваться для создания новой схемы или уточнения существующей схемы.  
  
   
  
## Examples  
 В этом примере в качестве входного файла XML и создает схему, которая может проверять пример XML-кода.  
  
 [!code-cpp[XmlSchemaInferenceExamples#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlSchemaInferenceExamples/CPP/XmlSchemaInferenceExamples.cpp#1)]
 [!code-csharp[XmlSchemaInferenceExamples#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlSchemaInferenceExamples/CS/XmlSchemaInferenceExamples.cs#1)]
 [!code-vb[XmlSchemaInferenceExamples#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlSchemaInferenceExamples/VB/XmlSchemaInferenceExamples.vb#1)]  
  
 Ниже приведен входной XML-файл.  
  
 [!code-xml[XmlSchemaInferenceExamples#5](~/samples/snippets/xml/VS_Snippets_Data/XmlSchemaInferenceExamples/XML/contosoBooks.xml#5)]  
  
 Ниже представлена схема, выведенная из XML-документа.  
  
 [!code-xml[XmlSchemaInferenceExamples#6](~/samples/snippets/xml/VS_Snippets_Data/XmlSchemaInferenceExamples/XML/contosoBooks.xsd#6)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlSchemaInference ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaInference.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlSchemaInference();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.Schema.XmlSchemaInference" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="InferSchema">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Определяет схему языка определения схем XML (XSD) на основе заданного документа XML.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="InferSchema">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchemaSet InferSchema (System.Xml.XmlReader instanceDocument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.Schema.XmlSchemaSet InferSchema(class System.Xml.XmlReader instanceDocument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaInference.InferSchema(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Function InferSchema (instanceDocument As XmlReader) As XmlSchemaSet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::Schema::XmlSchemaSet ^ InferSchema(System::Xml::XmlReader ^ instanceDocument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaSet</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceDocument" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="instanceDocument">Объект <see cref="T:System.Xml.XmlReader" />, содержащий документ XML, на основе которого будет определяться схема.</param>
        <summary>Определяет схему языка определения схем XML (XSD) на основе документа XML, содержащегося в указанном объекте <see cref="T:System.Xml.XmlReader" />.</summary>
        <returns>Объект <see cref="T:System.Xml.Schema.XmlSchemaSet" />, содержащий определенные схемы.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xml.Schema.XmlSchemaInference.InferSchema%2A> Метод выводит один или несколько схем языка определения схемы (XSD) XML W3C из XML экземпляра, документ, содержащийся в <xref:System.Xml.XmlReader> указанного объекта. Если XML-документ содержит элементы и атрибуты из нескольких пространств имен, то создается несколько схем,: один для каждого пространства имен, используемых в документе. Первичной схемой является схема, можно проверить всего XML-документа, а ее целевое пространство имен совпадает с именем пространства имен элемента документа XML-документа.  
  
 Ниже перечислены важные замечания, которые необходимо учитывать при использовании <xref:System.Xml.Schema.XmlSchemaInference.InferSchema%2A> метода.  
  
-   <xref:System.Xml.Schema.XmlSchemaInference.InferSchema%2A> Метод игнорирует любые `xsi:type`, `xsi:schemaLocation`, или `xsi:noNamespaceSchemaLocation` атрибутов в XML-документе.  
  
-   Если <xref:System.Xml.XmlReader> типизированного объекта, он содержит сведения о типе игнорируется.  
  
-   Если <xref:System.Xml.XmlReader> объект находится на элемент, который не является корневой элемент XML-документа, то схема определяется только для этого элемента. Если <xref:System.Xml.XmlReader> объект находится на элементе, <xref:System.Xml.XmlReader.Read%2A> метод будет вызван на <xref:System.Xml.XmlReader> параметра, пока не будет обнаружен элемент (например, в том случае, когда <xref:System.Xml.XmlReader.NodeType%2A> — <xref:System.Xml.XmlNodeType.Element>). В этот момент процесс определения начнется с такого элемента. Если элемент не обнаружен до конца документа, <xref:System.ArgumentException> возникает исключение.  
  
   
  
## Examples  
 В этом примере в качестве входного файла XML и создает схему, которая может проверять пример XML-кода.  
  
 [!code-cpp[XmlSchemaInferenceExamples#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlSchemaInferenceExamples/CPP/XmlSchemaInferenceExamples.cpp#1)]
 [!code-csharp[XmlSchemaInferenceExamples#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlSchemaInferenceExamples/CS/XmlSchemaInferenceExamples.cs#1)]
 [!code-vb[XmlSchemaInferenceExamples#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlSchemaInferenceExamples/VB/XmlSchemaInferenceExamples.vb#1)]  
  
 Ниже приведен входной XML-файл.  
  
 [!code-xml[XmlSchemaInferenceExamples#5](~/samples/snippets/xml/VS_Snippets_Data/XmlSchemaInferenceExamples/XML/contosoBooks.xml#5)]  
  
 Ниже представлена схема, выведенная из XML-документа.  
  
 [!code-xml[XmlSchemaInferenceExamples#6](~/samples/snippets/xml/VS_Snippets_Data/XmlSchemaInferenceExamples/XML/contosoBooks.xsd#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException">Документ XML не является правильно сформированным.</exception>
        <exception cref="T:System.Xml.Schema.XmlSchemaInferenceException">Объект <see cref="T:System.Xml.XmlReader" /> не расположен на корневом узле или на элементе. Во время процесса выведения схемы происходит ошибка.</exception>
      </Docs>
    </Member>
    <Member MemberName="InferSchema">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchemaSet InferSchema (System.Xml.XmlReader instanceDocument, System.Xml.Schema.XmlSchemaSet schemas);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.Schema.XmlSchemaSet InferSchema(class System.Xml.XmlReader instanceDocument, class System.Xml.Schema.XmlSchemaSet schemas) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaInference.InferSchema(System.Xml.XmlReader,System.Xml.Schema.XmlSchemaSet)" />
      <MemberSignature Language="VB.NET" Value="Public Function InferSchema (instanceDocument As XmlReader, schemas As XmlSchemaSet) As XmlSchemaSet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::Schema::XmlSchemaSet ^ InferSchema(System::Xml::XmlReader ^ instanceDocument, System::Xml::Schema::XmlSchemaSet ^ schemas);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaSet</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceDocument" Type="System.Xml.XmlReader" />
        <Parameter Name="schemas" Type="System.Xml.Schema.XmlSchemaSet" />
      </Parameters>
      <Docs>
        <param name="instanceDocument">Объект <see cref="T:System.Xml.XmlReader" />, содержащий документ XML, на основе которого будет определяться схема.</param>
        <param name="schemas">Объект <see cref="T:System.Xml.Schema.XmlSchemaSet" />, содержащий существующую схему, которая используется для уточнения определяемой схемы.</param>
        <summary>Определяет схему языка определения схем XML (XSD) на основе документа XML, содержащегося в заданном объекте <see cref="T:System.Xml.XmlReader" />, а также уточняет определенную схему, используя существующую схему из объекта <see cref="T:System.Xml.Schema.XmlSchemaSet" />, заданную для того же целевого пространства имен.</summary>
        <returns>Объект <see cref="T:System.Xml.Schema.XmlSchemaSet" />, содержащий определенные схемы.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xml.Schema.XmlSchemaInference.InferSchema%2A> Метод выводит один или несколько схем языка определения схемы (XSD) XML W3C из XML экземпляра, документ, содержащийся в <xref:System.Xml.XmlReader> указанного объекта. Если XML-документ содержит элементы и атрибуты из нескольких пространств имен, создается несколько схем,: один для каждого пространства имен, используемых в документе. Первичной схемой является схема, можно проверить всего XML-документа, а ее целевое пространство имен совпадает с именем пространства имен элемента документа XML-документа.  
  
 Ниже перечислены важные замечания, которые необходимо учитывать при использовании <xref:System.Xml.Schema.XmlSchemaInference.InferSchema%2A> метода.  
  
-   <xref:System.Xml.Schema.XmlSchemaInference.InferSchema%2A> Метод игнорирует любые `xsi:type`, `xsi:schemaLocation`, или `xsi:noNamespaceSchemaLocation` атрибутов в XML-документе.  
  
-   Если <xref:System.Xml.XmlReader> типизированного объекта, он содержит сведения о типе игнорируется.  
  
-   Если <xref:System.Xml.XmlReader> объект находится на элемент, который не является корневой элемент XML-документа, то схема определяется только для этого элемента. Если <xref:System.Xml.XmlReader> объект находится на элементе, <xref:System.Xml.XmlReader.Read%2A> метод будет вызван на <xref:System.Xml.XmlReader> параметра, пока не будет обнаружен элемент (например, в том случае, когда <xref:System.Xml.XmlReader.NodeType%2A> — <xref:System.Xml.XmlNodeType.Element>). В этот момент процесс определения начнется с такого элемента. Если элемент не обнаружен до конца документа, <xref:System.ArgumentException> возникает исключение.  
  
-   Если <xref:System.Xml.Schema.XmlSchemaSet> объект передается в качестве параметра и элемент, на котором <xref:System.Xml.XmlReader> позиционируется объект определен в одной из схем в <xref:System.Xml.Schema.XmlSchemaSet>, созданная схема используется для уточнения существующей схемы в <xref:System.Xml.Schema.XmlSchemaSet> параметр с помощью того же целевого пространства имен; в противном случае создается новая схема выводится для пространства имен.  
  
   
  
## Examples  
 В следующем примере кода XML-документ №1 в качестве входных данных и создает схему, которая может проверять XML-документа 1. Затем в примере кода XML-документ 2, уточняет схема, созданная из XML-документа 1, на основе изменений, найден в XML-документе 2.  
  
 Ниже приведен XML-документа 1.  
  
 [!code-xml[XmlSchemaInferenceExamples#13](~/samples/snippets/xml/VS_Snippets_Data/XmlSchemaInferenceExamples/XML/item1.xml#13)]  
  
 Ниже приведен XML-документ 2.  
  
 [!code-xml[XmlSchemaInferenceExamples#14](~/samples/snippets/xml/VS_Snippets_Data/XmlSchemaInferenceExamples/XML/item2.xml#14)]  
  
 В следующем примере кода выводит схему из первого XML-документ, содержащийся в `reader`и затем уточняет выводимой схеме изменениями, выполненными в второй XML-документ, содержащийся в `reader1`. В примере кода используется первый перегруженный <xref:System.Xml.Schema.XmlSchemaInference.InferSchema%2A> перегруженный метод, чтобы определить схему, а вторая <xref:System.Xml.Schema.XmlSchemaInference.InferSchema%2A> метод для уточнения в существующую схему <xref:System.Xml.Schema.XmlSchemaSet> объекта.  
  
 [!code-cpp[XmlSchemaInferenceExamples#4](~/samples/snippets/cpp/VS_Snippets_Data/XmlSchemaInferenceExamples/CPP/XmlSchemaInferenceExamples.cpp#4)]
 [!code-csharp[XmlSchemaInferenceExamples#4](~/samples/snippets/csharp/VS_Snippets_Data/XmlSchemaInferenceExamples/CS/XmlSchemaInferenceExamples.cs#4)]
 [!code-vb[XmlSchemaInferenceExamples#4](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlSchemaInferenceExamples/VB/XmlSchemaInferenceExamples.vb#4)]  
  
 Следующая схема представлена схема, выведенная из XML-документа 1.  
  
 [!code-xml[XmlSchemaInferenceExamples#15](~/samples/snippets/xml/VS_Snippets_Data/XmlSchemaInferenceExamples/XML/InferSchema1.xml#15)]  
  
 Следующая схема является более точно распределить ресурсы версия предыдущей схемы, на основе документа XML 2.  
  
 [!code-xml[XmlSchemaInferenceExamples#16](~/samples/snippets/xml/VS_Snippets_Data/XmlSchemaInferenceExamples/XML/InferSchema2.xml#16)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException">Документ XML не является правильно сформированным.</exception>
        <exception cref="T:System.Xml.Schema.XmlSchemaInferenceException">Объект <see cref="T:System.Xml.XmlReader" /> не расположен на корневом узле или на элементе. Во время процесса выведения схемы происходит ошибка.</exception>
      </Docs>
    </Member>
    <Member MemberName="Occurrence">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchemaInference.InferenceOption Occurrence { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.Schema.XmlSchemaInference/InferenceOption Occurrence" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Schema.XmlSchemaInference.Occurrence" />
      <MemberSignature Language="VB.NET" Value="Public Property Occurrence As XmlSchemaInference.InferenceOption" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Schema::XmlSchemaInference::InferenceOption Occurrence { System::Xml::Schema::XmlSchemaInference::InferenceOption get(); void set(System::Xml::Schema::XmlSchemaInference::InferenceOption value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaInference+InferenceOption</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает значение <see cref="T:System.Xml.Schema.XmlSchemaInference.InferenceOption" />, влияющее на объявления вхождения схем, определяемые на основе документа XML.</summary>
        <value>Объект <see cref="T:System.Xml.Schema.XmlSchemaInference.InferenceOption" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если <xref:System.Xml.Schema.XmlSchemaInference.Occurrence%2A> свойству <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption.Restricted>, первые элементы времени встречаются в XML-документ, объявление схемы выводится как `minOccurs="1"`. Если обнаруживаются атрибуты, объявление схемы выводится как `use="required"`.  
  
 Если <xref:System.Xml.Schema.XmlSchemaInference.Occurrence%2A> свойству <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption.Relaxed>, объявлений элементов схемы выводятся как `minOccurs="0"`, и объявления атрибутов схемы выводятся как `use="optional"`.  
  
 Значение по умолчанию <xref:System.Xml.Schema.XmlSchemaInference.Occurrence%2A> свойство <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption.Restricted>.  
  
   
  
## Examples  
 В этом примере показано, как влияет вхождения <xref:System.Xml.Schema.XmlSchemaInference.Occurrence%2A> свойство. В примере кода предполагается вывод из XML-файла двумя разными способами: нестрогим и строгим. Ниже приведен пример XML-файла.  
  
 [!code-xml[XmlSchemaInferenceExamples#7](~/samples/snippets/xml/VS_Snippets_Data/XmlSchemaInferenceExamples/XML/Occurrence1.xml#7)]  
  
 Указывает, что в следующем примере кода <xref:System.Xml.Schema.XmlSchemaInference> класс вывести вхождения элементы и атрибуты ослабленной способом.  
  
 [!code-cpp[XmlSchemaInferenceExamples#2](~/samples/snippets/cpp/VS_Snippets_Data/XmlSchemaInferenceExamples/CPP/XmlSchemaInferenceExamples.cpp#2)]
 [!code-csharp[XmlSchemaInferenceExamples#2](~/samples/snippets/csharp/VS_Snippets_Data/XmlSchemaInferenceExamples/CS/XmlSchemaInferenceExamples.cs#2)]
 [!code-vb[XmlSchemaInferenceExamples#2](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlSchemaInferenceExamples/VB/XmlSchemaInferenceExamples.vb#2)]  
  
 Поскольку <xref:System.Xml.Schema.XmlSchemaInference.Occurrence%2A> было задано значение <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption.Relaxed>, следующая схема была сформирована.  
  
 [!code-xml[XmlSchemaInferenceExamples#8](~/samples/snippets/xml/VS_Snippets_Data/XmlSchemaInferenceExamples/XML/Occurrence2.xml#8)]  
  
 В примере выше при <xref:System.Xml.Schema.XmlSchemaInference.Occurrence%2A> не было задано значение <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption.Relaxed>, <xref:System.Xml.Schema.XmlSchemaInference> класса может установлено значение по умолчанию <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption.Restricted> и созданы следующие схемы.  
  
 [!code-xml[XmlSchemaInferenceExamples#9](~/samples/snippets/xml/VS_Snippets_Data/XmlSchemaInferenceExamples/XML/Occurrence3.xml#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeInference">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchemaInference.InferenceOption TypeInference { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.Schema.XmlSchemaInference/InferenceOption TypeInference" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Schema.XmlSchemaInference.TypeInference" />
      <MemberSignature Language="VB.NET" Value="Public Property TypeInference As XmlSchemaInference.InferenceOption" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Schema::XmlSchemaInference::InferenceOption TypeInference { System::Xml::Schema::XmlSchemaInference::InferenceOption get(); void set(System::Xml::Schema::XmlSchemaInference::InferenceOption value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaInference+InferenceOption</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает значение <see cref="T:System.Xml.Schema.XmlSchemaInference.InferenceOption" />, влияющее на способ определения типов на основе обрабатываемого документа XML.</summary>
        <value>Объект <see cref="T:System.Xml.Schema.XmlSchemaInference.InferenceOption" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если <xref:System.Xml.Schema.XmlSchemaInference.TypeInference%2A> свойству <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption.Relaxed>, всегда является тип выводимых элементов и атрибутов в XML-документ с простым содержимым `xs:string`. Если <xref:System.Xml.Schema.XmlSchemaInference.TypeInference%2A> свойству <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption.Restricted>, выводятся более конкретные типы, такие как `xs:date`, `xs:decimal`, `xs:unsignedByte`, и т. д.  
  
 Значение по умолчанию <xref:System.Xml.Schema.XmlSchemaInference.TypeInference%2A> свойство <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption.Restricted>.  
  
   
  
## Examples  
 В этом примере показано, как влияют на определение типа <xref:System.Xml.Schema.XmlSchemaInference.TypeInference%2A> свойство. Пример кода определяет типы из XML-файла двумя разными способами: нестрогим и строгим. Ниже приведен пример XML-файла.  
  
 [!code-xml[XmlSchemaInferenceExamples#10](~/samples/snippets/xml/VS_Snippets_Data/XmlSchemaInferenceExamples/XML/TypeInference1.xml#10)]  
  
 Указывает, что в следующем примере кода <xref:System.Xml.Schema.XmlSchemaInference> класс вывести `xs:string` элементов и атрибутов с простым содержимым.  
  
 [!code-cpp[XmlSchemaInferenceExamples#3](~/samples/snippets/cpp/VS_Snippets_Data/XmlSchemaInferenceExamples/CPP/XmlSchemaInferenceExamples.cpp#3)]
 [!code-csharp[XmlSchemaInferenceExamples#3](~/samples/snippets/csharp/VS_Snippets_Data/XmlSchemaInferenceExamples/CS/XmlSchemaInferenceExamples.cs#3)]
 [!code-vb[XmlSchemaInferenceExamples#3](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlSchemaInferenceExamples/VB/XmlSchemaInferenceExamples.vb#3)]  
  
 Поскольку <xref:System.Xml.Schema.XmlSchemaInference.TypeInference%2A> было задано значение <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption.Relaxed>, следующая схема была сформирована.  
  
 [!code-xml[XmlSchemaInferenceExamples#11](~/samples/snippets/xml/VS_Snippets_Data/XmlSchemaInferenceExamples/XML/TypeInference2.xml#11)]  
  
 В примере выше при <xref:System.Xml.Schema.XmlSchemaInference.TypeInference%2A> не было задано значение <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption.Relaxed>, <xref:System.Xml.Schema.XmlSchemaInference> класса может установлено значение по умолчанию <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption.Restricted> и созданы следующие схемы.  
  
 [!code-xml[XmlSchemaInferenceExamples#12](~/samples/snippets/xml/VS_Snippets_Data/XmlSchemaInferenceExamples/XML/TypeInference3.xml#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>