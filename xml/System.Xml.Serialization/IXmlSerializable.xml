<Type Name="IXmlSerializable" FullName="System.Xml.Serialization.IXmlSerializable">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="8155c578ca3a365629ee4d705a95789ebfd67428" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30719828" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IXmlSerializable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IXmlSerializable" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Serialization.IXmlSerializable" />
  <TypeSignature Language="VB.NET" Value="Public Interface IXmlSerializable" />
  <TypeSignature Language="C++ CLI" Value="public interface class IXmlSerializable" />
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Предоставляет пользовательский формат для сериализации и десериализации XML.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Существует две причины для реализации этого интерфейса. Первый способ управлять сериализовать или десериализовать объект <xref:System.Xml.Serialization.XmlSerializer>. Например можно фрагмент данных в байтах вместо буферизации больших наборов данных и также избежать увеличение, при которой данные кодируются с использованием кодировки Base64. Для управления сериализацией следует реализовать <xref:System.Xml.Serialization.IXmlSerializable.ReadXml%2A> и <xref:System.Xml.Serialization.IXmlSerializable.WriteXml%2A> методы для управления <xref:System.Xml.XmlReader> и <xref:System.Xml.XmlWriter> классы, используемые для чтения и записи XML. Пример этого см. в разделе [как: соответствующий](~/docs/standard/serialization/how-to-chunk-serialized-data.md).  
  
 Вторая причина является возможность управления схемой. Чтобы включить эту возможность, необходимо применить <xref:System.Xml.Serialization.XmlSchemaProviderAttribute> сериализуемые типа и укажите имя статического члена, который возвращается схема. В разделе <xref:System.Xml.Serialization.XmlSchemaProviderAttribute> в качестве примера.  
  
 Класс, реализующий интерфейс должен иметь конструктор без параметров. Это требование <xref:System.Xml.Serialization.XmlSerializer> класса.  
  
   
  
## Examples  
 В следующем примере кода показана реализация <xref:System.Xml.Serialization.IXmlSerializable> интерфейс, который выполняет сериализацию закрытое поле.  
  
 [!code-cpp[XmlSerialization_IXmlSerializable#0](~/samples/snippets/cpp/VS_Snippets_Remoting/XmlSerialization_IXmlSerializable/CPP/person.cpp#0)]
 [!code-csharp[XmlSerialization_IXmlSerializable#0](~/samples/snippets/csharp/VS_Snippets_Remoting/XmlSerialization_IXmlSerializable/CS/person.cs#0)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="GetSchema">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchema GetSchema ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.Schema.XmlSchema GetSchema() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.IXmlSerializable.GetSchema" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSchema () As XmlSchema" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::Schema::XmlSchema ^ GetSchema();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchema</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Данный метод зарезервирован и не используется. При реализации интерфейса <see langword="IXmlSerializable" /> этот метод должен возвращать значение <see langword="null" /> (<see langword="Nothing" /> в Visual Basic), а если необходимо указать пользовательскую схему, то вместо использования метода следует применить <see cref="T:System.Xml.Serialization.XmlSchemaProviderAttribute" /> к классу.</summary>
        <returns>
          <see cref="T:System.Xml.Schema.XmlSchema" />, описывающая представление XML объекта, полученного из метода <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" /> и включенного в метод <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При сериализации или десериализации объекта, <xref:System.Xml.Serialization.XmlSerializer> класса не выполняет проверку XML. По этой причине часто бывает безопасно опустить сведения о схеме, предоставляя пример простой реализации этого метода, например, возвращая `null` (`Nothing` в Visual Basic).  
  
 Если необходимо предоставление сведений о схеме, следует использовать <xref:System.Xml.Serialization.XmlSchemaProviderAttribute> атрибута. `GetSchema` Метод должен возвращать по-прежнему `null` (или `Nothing`).  
  
 Некоторые [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] типов, а также устаревший пользовательские типы, реализующие `IXmlSerializable` может использовать интерфейс `GetSchema` вместо `XmlSchemaProvider`. В этом случае метод возвращает точные XML-схемы, описывающий XML-представление объекта, созданные <xref:System.Data.DataSet.WriteXml%2A> метод.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadXml">
      <MemberSignature Language="C#" Value="public void ReadXml (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReadXml(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReadXml (reader As XmlReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReadXml(System::Xml::XmlReader ^ reader);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader">Поток <see cref="T:System.Xml.XmlReader" />, из которого выполняется десериализация объекта.</param>
        <summary>Создает объект из представления XML.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xml.Serialization.IXmlSerializable.ReadXml%2A> Метод должен воссоздания объекта по данным, который был записан с <xref:System.Xml.Serialization.IXmlSerializable.WriteXml%2A> метод.  
  
 При вызове этого метода средство чтения расположено на открывающий тег, который включает сведения о типе. То есть непосредственно на открывающий тег, который указывает начало сериализованного объекта. По возвращении из этого метода он должен прочитать весь элемент от начала до конца, включая все его содержимое. В отличие от <xref:System.Xml.Serialization.IXmlSerializable.WriteXml%2A> метод, платформа автоматически обрабатывает элемент программы-оболочки. Такой реализации необходимо сделать это. При невыполнении этих правил позиционирования может вызвать код, чтобы создать непредвиденные исключения времени выполнения или поврежденные данные.  
  
 При реализации этого метода, следует рассмотреть возможность, пользователь-злоумышленник может предоставить синтаксически правильное, но недопустимое XML-представление для отключения или другим образом изменить поведение приложения.  
  
   
  
## Examples  
 В следующем примере демонстрируется реализация <xref:System.Xml.Serialization.IXmlSerializable.ReadXml%2A> метода.  
  
 [!code-cpp[XmlSerialization_IXmlSerializable#2](~/samples/snippets/cpp/VS_Snippets_Remoting/XmlSerialization_IXmlSerializable/CPP/person.cpp#2)]
 [!code-csharp[XmlSerialization_IXmlSerializable#2](~/samples/snippets/csharp/VS_Snippets_Remoting/XmlSerialization_IXmlSerializable/CS/person.cs#2)]  
  
 Следующий пример иллюстрирует использование <xref:System.Xml.Serialization.XmlSerializer> класса, чтобы десериализовать этот объект.  
  
 [!code-cpp[XmlSerialization_IXmlSerializable#20](~/samples/snippets/cpp/VS_Snippets_Remoting/XmlSerialization_IXmlSerializable/CPP/reader.cpp#20)]
 [!code-csharp[XmlSerialization_IXmlSerializable#20](~/samples/snippets/csharp/VS_Snippets_Remoting/XmlSerialization_IXmlSerializable/CS/reader.cs#20)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteXml">
      <MemberSignature Language="C#" Value="public void WriteXml (System.Xml.XmlWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteXml(class System.Xml.XmlWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteXml (writer As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteXml(System::Xml::XmlWriter ^ writer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="writer">Поток <see cref="T:System.Xml.XmlWriter" />, в который выполняется сериализация объекта.</param>
        <summary>Преобразует объект в представление XML.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xml.Serialization.IXmlSerializable.WriteXml%2A> Указать реализацию следует записать XML-представление объекта. Платформа записывает элемент программы-оболочки и позиционирует средство записи XML после его запуска. В реализации может записываться его содержимое, включая дочерние элементы. После этого платформа закрывает элемент программы-оболочки.  
  
 Достаточное количество сведений для записи <xref:System.Xml.XmlWriter> потока, чтобы разрешить <xref:System.Xml.Serialization.IXmlSerializable.ReadXml%2A> метод для воссоздания объекта.  
  
 Например если состояние объекта входит переменная массива, не забудьте записать длину массива или использовать родительский элемент для хранения элементов, которые описывают значения массива, чтобы знать, сколько значений для чтения при воссоздании объекта.  
  
   
  
## Examples  
 В следующем примере демонстрируется реализация <xref:System.Xml.Serialization.IXmlSerializable.WriteXml%2A> метода.  
  
 [!code-cpp[XmlSerialization_IXmlSerializable#1](~/samples/snippets/cpp/VS_Snippets_Remoting/XmlSerialization_IXmlSerializable/CPP/person.cpp#1)]
 [!code-csharp[XmlSerialization_IXmlSerializable#1](~/samples/snippets/csharp/VS_Snippets_Remoting/XmlSerialization_IXmlSerializable/CS/person.cs#1)]  
  
 Следующий пример иллюстрирует использование <xref:System.Xml.Serialization.XmlSerializer> класса, чтобы десериализовать этот объект.  
  
 [!code-cpp[XmlSerialization_IXmlSerializable#10](~/samples/snippets/cpp/VS_Snippets_Remoting/XmlSerialization_IXmlSerializable/CPP/writer.cpp#10)]
 [!code-csharp[XmlSerialization_IXmlSerializable#10](~/samples/snippets/csharp/VS_Snippets_Remoting/XmlSerialization_IXmlSerializable/CS/writer.cs#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>