<Type Name="SoapElementAttribute" FullName="System.Xml.Serialization.SoapElementAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b96e74fc288833600d09f9be4359e85b22ae93ad" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36440345" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class SoapElementAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SoapElementAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Serialization.SoapElementAttribute" />
  <TypeSignature Language="VB.NET" Value="Public Class SoapElementAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class SoapElementAttribute : Attribute" />
  <TypeSignature Language="F#" Value="type SoapElementAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Field | System.AttributeTargets.Parameter | System.AttributeTargets.Property | System.AttributeTargets.ReturnValue)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Указывает, что данный общий член будет сериализован посредством <see cref="T:System.Xml.Serialization.XmlSerializer" /> как кодированный XML-элемент SOAP.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xml.Serialization.SoapElementAttribute> Класс принадлежит к семейству атрибутов, управляющих как <xref:System.Xml.Serialization.XmlSerializer> сериализует или десериализует объект как закодированный SOAP XML. Получаемый код XML соответствует разделу 5 документа консорциума World Wide Web (www.w3.org), «Simple Object Access Protocol (SOAP) 1.1». Полный список аналогичных атрибутов см. в разделе [атрибуты, управляющие кодированной SOAP сериализацией](~/docs/standard/serialization/attributes-that-control-encoded-soap-serialization.md).  
  
 Чтобы сериализовать объект как закодированное сообщение SOAP, следует создать <xref:System.Xml.Serialization.XmlSerializer> с помощью <xref:System.Xml.Serialization.XmlTypeMapping> с <xref:System.Xml.Serialization.SoapReflectionImporter.ImportTypeMapping%2A> метод <xref:System.Xml.Serialization.SoapReflectionImporter> класса.  
  
 Применить <xref:System.Xml.Serialization.SoapElementAttribute> к открытому полю, чтобы направить <xref:System.Xml.Serialization.XmlSerializer> для сериализации поле как закодированный SOAP элемент XML.  
  
 Дополнительные сведения об использовании атрибутов см. в разделе [атрибуты](~/docs/standard/attributes/index.md).  
  
   
  
## Examples  
 В следующем примере сериализуется экземпляр класса с именем `Transportation` , содержащий поле с именем `Vehicle`. Объект <xref:System.Xml.Serialization.SoapElementAttribute> применяется к полю. При сериализации поля имени XML-элемента является «Wheels» вместо «Машина». `SerializeOverride` Метод создает <xref:System.Xml.Serialization.SoapElementAttribute> и задает <xref:System.Xml.Serialization.SoapAttributes.SoapElement%2A> свойство <xref:System.Xml.Serialization.SoapAttributes> для <xref:System.Xml.Serialization.SoapElementAttribute>. <xref:System.Xml.Serialization.SoapAttributes> Добавляется <xref:System.Xml.Serialization.SoapAttributeOverrides> , используемый для создания <xref:System.Xml.Serialization.XmlTypeMapping>. <xref:System.Xml.Serialization.XmlSerializer> Создан с параметром <xref:System.Xml.Serialization.XmlTypeMapping>и экземпляр `Transportation` попытку сериализации класса. Поскольку <xref:System.Xml.Serialization.SoapElementAttribute> — используется для переопределения сериализации, созданный XML элемент теперь называется «Грузовик» вместо «Wheels».  
  
 [!code-cpp[SoapElementOverrides#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapElementOverrides/CPP/soapelementoverrides.cpp#1)]
 [!code-csharp[SoapElementOverrides#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapElementOverrides/CS/soapelementoverrides.cs#1)]
 [!code-vb[SoapElementOverrides#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapElementOverrides/VB/soapelementoverrides.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.Serialization.SoapElementAttribute" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SoapElementAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.SoapElementAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SoapElementAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.Serialization.SoapElementAttribute" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 В следующем примере сериализуется экземпляр класса с именем `Transportation` , содержащий поле с именем `Vehicle`. Объект <xref:System.Xml.Serialization.SoapElementAttribute> применяется к полю. При сериализации поля имени XML-элемента является «Wheels» вместо «Машина». `SerializeOverride` Метод создает <xref:System.Xml.Serialization.SoapElementAttribute> и задает <xref:System.Xml.Serialization.SoapAttributes.SoapElement%2A> свойство <xref:System.Xml.Serialization.SoapAttributes> для <xref:System.Xml.Serialization.SoapElementAttribute>. <xref:System.Xml.Serialization.SoapAttributes> Добавляется <xref:System.Xml.Serialization.SoapAttributeOverrides> , используемый для создания <xref:System.Xml.Serialization.XmlTypeMapping>. <xref:System.Xml.Serialization.XmlSerializer> Создан с параметром <xref:System.Xml.Serialization.XmlTypeMapping>и экземпляр `Transportation` попытку сериализации класса. Поскольку <xref:System.Xml.Serialization.SoapElementAttribute> — используется для переопределения сериализации, созданный XML элемент теперь называется «Грузовик» вместо «Wheels».  
  
 [!code-cpp[SoapElementOverrides#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapElementOverrides/CPP/soapelementoverrides.cpp#1)]
 [!code-csharp[SoapElementOverrides#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapElementOverrides/CS/soapelementoverrides.cs#1)]
 [!code-vb[SoapElementOverrides#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapElementOverrides/VB/soapelementoverrides.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SoapElementAttribute (string elementName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string elementName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.SoapElementAttribute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (elementName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SoapElementAttribute(System::String ^ elementName);" />
      <MemberSignature Language="F#" Value="new System.Xml.Serialization.SoapElementAttribute : string -&gt; System.Xml.Serialization.SoapElementAttribute" Usage="new System.Xml.Serialization.SoapElementAttribute elementName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="elementName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="elementName">Имя XML-элемента сериализованного члена.</param>
        <summary>Инициализация нового экземпляра  класса <see cref="T:System.Xml.Serialization.SoapElementAttribute" /> и указывает имя элемента XML.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 В следующем примере сериализуется экземпляр класса с именем `Transportation` , содержащий поле с именем `Vehicle`. Объект <xref:System.Xml.Serialization.SoapElementAttribute> применяется к полю. При сериализации поля имени XML-элемента является «Wheels» вместо «Машина». `SerializeOverride` Метод создает <xref:System.Xml.Serialization.SoapElementAttribute> и задает <xref:System.Xml.Serialization.SoapAttributes.SoapElement%2A> свойство <xref:System.Xml.Serialization.SoapAttributes> для <xref:System.Xml.Serialization.SoapElementAttribute>. <xref:System.Xml.Serialization.SoapAttributes> Добавляется <xref:System.Xml.Serialization.SoapAttributeOverrides> , используемый для создания <xref:System.Xml.Serialization.XmlTypeMapping>. <xref:System.Xml.Serialization.XmlSerializer> Создан с параметром <xref:System.Xml.Serialization.XmlTypeMapping>и экземпляр `Transportation` попытку сериализации класса. Поскольку <xref:System.Xml.Serialization.SoapElementAttribute> — используется для переопределения сериализации, созданный XML элемент теперь называется «Грузовик» вместо «Wheels».  
  
 [!code-cpp[SoapElementOverrides#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapElementOverrides/CPP/soapelementoverrides.cpp#1)]
 [!code-csharp[SoapElementOverrides#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapElementOverrides/CS/soapelementoverrides.cs#1)]
 [!code-vb[SoapElementOverrides#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapElementOverrides/VB/soapelementoverrides.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataType">
      <MemberSignature Language="C#" Value="public string DataType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataType" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.SoapElementAttribute.DataType" />
      <MemberSignature Language="VB.NET" Value="Public Property DataType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DataType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataType : string with get, set" Usage="System.Xml.Serialization.SoapElementAttribute.DataType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает тип данных языка определения схемы XML (XSD) созданного XML-элемента.</summary>
        <value>Один из типов данных XML-схемы.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ниже перечислены типы простых данных схемы XML с их эквивалентами .NET.  
  
 XML-схемы `base64Binary` и `hexBinary` типов данных, используйте массив <xref:System.Byte> структуры и применения <xref:System.Xml.Serialization.SoapElementAttribute> с <xref:System.Xml.Serialization.SoapAttributeAttribute.DataType%2A> присвоено значение «base64Binary» или «hexBinary». XML-схемы `time` и `date` типов данных используйте <xref:System.DateTime> введите и применить <xref:System.Xml.Serialization.SoapElementAttribute> с <xref:System.Xml.Serialization.SoapElementAttribute.DataType%2A> присвоено значение «date» или «время».  
  
 Для каждого типа данных схемы XML, отраженного в строке, примените <xref:System.Xml.Serialization.SoapElementAttribute> с его <xref:System.Xml.Serialization.SoapElementAttribute.DataType%2A> значение свойства типа схемы XML. Обратите внимание, что это не изменяет формат сериализации, а только схему для члена.  
  
> [!NOTE]
>  Свойство учитывает регистр, поэтому его необходимо задать ровно на один из типов данных схемы XML.  
  
> [!NOTE]
>  Передача двоичных данных в виде XML-элемент является более эффективным, чем передача в качестве атрибута XML.  
  
 Дополнительные сведения о типах данных см. в документе консорциума World Wide Web (www.w3.org), «XML схема часть 2: типы данных».  
  
|Тип данных XSD|Тип данных .NET|  
|-------------------|--------------------|  
|anyURI|<xref:System.String>|  
|base64Binary|Массив <xref:System.Byte> объектов|  
|boolean|<xref:System.Boolean>|  
|byte|<xref:System.SByte>|  
|date|<xref:System.DateTime>|  
|dateTime|<xref:System.DateTime>|  
|decimal|<xref:System.Decimal>|  
|double|<xref:System.Double>|  
|ENTITY|<xref:System.String>|  
|СУЩНОСТИ|<xref:System.String>|  
|float|<xref:System.Single>|  
|gDay|<xref:System.String>|  
|gMonth|<xref:System.String>|  
|gMonthDay|<xref:System.String>|  
|типа gYear|<xref:System.String>|  
|gYearMonth|<xref:System.String>|  
|hexBinary|Массив <xref:System.Byte> объектов|  
|ID|<xref:System.String>|  
|IDREF|<xref:System.String>|  
|IDREFS|<xref:System.String>|  
|int|<xref:System.Int32>|  
|целочисленный|<xref:System.String>|  
|язык|<xref:System.String>|  
|long|<xref:System.Int64>|  
|name|<xref:System.String>|  
|NCName|<xref:System.String>|  
|negativeInteger|<xref:System.String>|  
|NMTOKEN|<xref:System.String>|  
|NMTOKENS|<xref:System.String>|  
|normalizedString|<xref:System.String>|  
|nonNegativeInteger|<xref:System.String>|  
|Тип nonPositiveInteger|<xref:System.String>|  
|NOTATION|<xref:System.String>|  
|positiveInteger|<xref:System.String>|  
|QName|<xref:System.Xml.XmlQualifiedName>|  
|длительность|<xref:System.String>|  
|string|<xref:System.String>|  
|short|<xref:System.Int16>|  
|время|<xref:System.DateTime>|  
|token|<xref:System.String>|  
|unsignedByte|<xref:System.Byte>|  
|unsignedInt|<xref:System.UInt32>|  
|unsignedLong|<xref:System.UInt64>|  
|unsignedShort|<xref:System.UInt16>|  
  
   
  
## Examples  
 В следующем примере сериализуется экземпляр класса с именем `Transportation` , содержащий поле с именем `Vehicle`. Объект <xref:System.Xml.Serialization.SoapElementAttribute> применяется к полю. При сериализации поля имени XML-элемента является «Wheels» вместо «Машина». `SerializeOverride` Метод создает <xref:System.Xml.Serialization.SoapElementAttribute> и задает <xref:System.Xml.Serialization.SoapAttributes.SoapElement%2A> свойство <xref:System.Xml.Serialization.SoapAttributes> для <xref:System.Xml.Serialization.SoapElementAttribute>. <xref:System.Xml.Serialization.SoapAttributes> Добавляется <xref:System.Xml.Serialization.SoapAttributeOverrides> , используемый для создания <xref:System.Xml.Serialization.XmlTypeMapping>. <xref:System.Xml.Serialization.XmlSerializer> Создан с параметром <xref:System.Xml.Serialization.XmlTypeMapping>и экземпляр `Transportation` попытку сериализации класса. Поскольку <xref:System.Xml.Serialization.SoapElementAttribute> — используется для переопределения сериализации, созданный XML элемент теперь называется «Грузовик» вместо «Wheels».  
  
 [!code-cpp[SoapElementOverrides#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapElementOverrides/CPP/soapelementoverrides.cpp#1)]
 [!code-csharp[SoapElementOverrides#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapElementOverrides/CS/soapelementoverrides.cs#1)]
 [!code-vb[SoapElementOverrides#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapElementOverrides/VB/soapelementoverrides.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ElementName">
      <MemberSignature Language="C#" Value="public string ElementName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ElementName" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.SoapElementAttribute.ElementName" />
      <MemberSignature Language="VB.NET" Value="Public Property ElementName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ElementName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ElementName : string with get, set" Usage="System.Xml.Serialization.SoapElementAttribute.ElementName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает имя созданного XML-элемента</summary>
        <value>Имя созданного XML-элемента. По умолчанию используется идентификатор члена</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 В следующем примере сериализуется экземпляр класса с именем `Transportation` , содержащий поле с именем `Vehicle`. Объект <xref:System.Xml.Serialization.SoapElementAttribute> применяется к полю. При сериализации поля имени XML-элемента является «Wheels» вместо «Машина». `SerializeOverride` Метод создает <xref:System.Xml.Serialization.SoapElementAttribute> и задает <xref:System.Xml.Serialization.SoapAttributes.SoapElement%2A> свойство <xref:System.Xml.Serialization.SoapAttributes> для <xref:System.Xml.Serialization.SoapElementAttribute>. <xref:System.Xml.Serialization.SoapAttributes> Добавляется <xref:System.Xml.Serialization.SoapAttributeOverrides> , используемый для создания <xref:System.Xml.Serialization.XmlTypeMapping>. <xref:System.Xml.Serialization.XmlSerializer> Создан с параметром <xref:System.Xml.Serialization.XmlTypeMapping>и экземпляр `Transportation` попытку сериализации класса. Поскольку <xref:System.Xml.Serialization.SoapElementAttribute> — используется для переопределения сериализации, созданный XML элемент теперь называется «Грузовик» вместо «Wheels».  
  
 [!code-cpp[SoapElementOverrides#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapElementOverrides/CPP/soapelementoverrides.cpp#1)]
 [!code-csharp[SoapElementOverrides#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapElementOverrides/CS/soapelementoverrides.cs#1)]
 [!code-vb[SoapElementOverrides#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapElementOverrides/VB/soapelementoverrides.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNullable">
      <MemberSignature Language="C#" Value="public bool IsNullable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNullable" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.SoapElementAttribute.IsNullable" />
      <MemberSignature Language="VB.NET" Value="Public Property IsNullable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsNullable { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsNullable : bool with get, set" Usage="System.Xml.Serialization.SoapElementAttribute.IsNullable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает значение, указывающее, должен ли <see cref="T:System.Xml.Serialization.XmlSerializer" /> выполнять сериализацию члена с заданным для атрибута <see langword="xsi:null" /> значением "1".</summary>
        <value>
          <see langword="true" />, если <see cref="T:System.Xml.Serialization.XmlSerializer" /> создает атрибут <see langword="xsi:null" />; в противном случае — <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Спецификация схемы XML для структур позволяет явным образом указывать, что отсутствует содержимое элемента в XML-документа. Такой элемент содержит атрибут `xsi:null` значение «1». Дополнительные сведения см. в спецификации консорциума World Wide Web (www.w3.org) с именем «XML-схема часть 1: структуры».  
  
 Если <xref:System.Xml.Serialization.SoapElementAttribute.IsNullable%2A> свойству `true`, `xsi:null` атрибут создается для членов класса, имеющих значение `null`. Например, если значение поля с именем `MyStringArray` для `null`, <xref:System.Xml.Serialization.XmlSerializer> создает следующий код XML.  
  
```  
<MyStringArray xsi:null = "1" />  
```  
  
 Если <xref:System.Xml.Serialization.XmlElementAttribute.IsNullable%2A> свойство `false`, формирование элемента не XML.  
  
> [!NOTE]
>  Не удается применить <xref:System.Xml.Serialization.XmlElementAttribute.IsNullable%2A> свойство члену имеющему тип значения, потому что тип значения не может содержать `null`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>