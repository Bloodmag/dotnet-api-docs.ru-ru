<Type Name="XmlAnyElementAttribute" FullName="System.Xml.Serialization.XmlAnyElementAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a98aa130890eb05c5962405024a99b6cfcac833e" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30720748" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class XmlAnyElementAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlAnyElementAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Serialization.XmlAnyElementAttribute" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlAnyElementAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlAnyElementAttribute : Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Field | System.AttributeTargets.Parameter | System.AttributeTargets.Property | System.AttributeTargets.ReturnValue, AllowMultiple=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Указывает, что член (поле, возвращающее массив объектов <see cref="T:System.Xml.XmlElement" /> или <see cref="T:System.Xml.XmlNode" />) содержит объекты, представляющие любые элементы XML, не имеющие соответствующего члена в сериализуемом или десериализуемом объекте.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!TIP]
>  При работе в переносимой библиотеке классов, например в Silverlight, Windows Phone или проект приложения для магазина Windows и платформу .NET Framework 4.0.3 и более поздней версии, используйте <xref:System.Xml.Linq.XElement> или <xref:System.Xml.Linq.XNode> вместо <xref:System.Xml.XmlElement> и <xref:System.Xml.XmlNode>.  
  
 Используйте <xref:System.Xml.Serialization.XmlAnyElementAttribute> содержать произвольные данные (как элементы XML), которые могут отправляться как часть XML-документа, такие как метаданные, переданные как часть документа.  
  
 Применить <xref:System.Xml.Serialization.XmlAnyElementAttribute> к полю, которое возвращает массив <xref:System.Xml.XmlElement> или <xref:System.Xml.XmlNode> объектов. Это поле можно использовать двумя способами, в зависимости от того, объект сериализации или десериализации. При сериализации объекта создается как XML-элементов или узлов, даже если они не имеют соответствующего члена (или членов) в объекте сериализации. При указании <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> значение свойства при применении атрибута, все <xref:System.Xml.XmlElement> или <xref:System.Xml.XmlNode> объекты, добавляемые в массив должен иметь то же элемент по умолчанию имя и пространство имен, или выдается исключение. Если задать <xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A> значение свойства, необходимо задать <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> , свойства и <xref:System.Xml.XmlElement> или <xref:System.Xml.XmlNode> объекты также должны иметь одинаковые значения имени и пространства имен. Если не <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> значение указано, <xref:System.Xml.XmlElement> или <xref:System.Xml.XmlNode> объекты могут иметь любые имена элементов.  
  
 При вызове <xref:System.Xml.Serialization.XmlSerializer.Deserialize%2A> метод <xref:System.Xml.Serialization.XmlSerializer> класса, все элементы, у которых нет соответствующего члена в десериализуемого объекта собираются в массиве. После десериализации прохода по коллекции <xref:System.Xml.XmlElement> элементов для обработки данных. При указании <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> значение, массив содержит только элементы XML с таким именем. Если вы не укажете <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> значение, массив содержит все элементы, имеющие нет соответствующего члена в классе. Если класс содержит более одного поля, к которому применяется атрибут, используйте <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A>, или <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> и <xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A> свойства, чтобы различать содержимое массивов. Если такой класс (с несколькими полями) также содержит поле, для которого не заданы значения свойств, заданные (другими словами, <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> и <xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A>) во время десериализации, этот массив содержит все неизвестные элементы XML, которые не содержатся в массивах. Если класс содержит несколько полей, у которого нет дифференцирования <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A>, или <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> и <xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A> значение не задано, то поведение во время десериализации не определено.  
  
 Можно также применить <xref:System.Xml.Serialization.XmlAnyElementAttribute> к полю, которое возвращает одиночный <xref:System.Xml.XmlElement> объекта. Если сделать это, необходимо использовать свойства и методы <xref:System.Xml.XmlElement> для рекурсивного перебора неизвестных элементов.  
  
 Можно применить несколько экземпляров <xref:System.Xml.Serialization.XmlAnyElementAttribute> к классу член, но каждый экземпляр должен иметь различные <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> значение свойства. Либо, если же <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> свойство имеет значение для каждого экземпляра, уникальным <xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A> свойство должно иметь значение для каждого экземпляра.  
  
 <xref:System.Xml.Serialization.XmlSerializer.UnknownNode> И <xref:System.Xml.Serialization.XmlSerializer.UnknownAttribute> события <xref:System.Xml.Serialization.XmlSerializer> не происходит при применении <xref:System.Xml.Serialization.XmlAnyElementAttribute> к члену класса.  
  
> [!NOTE]
>  Можно использовать слово `XmlAnyElement` в коде вместо более длинного <xref:System.Xml.Serialization.XmlAnyElementAttribute>.  
  
 Дополнительные сведения об использовании атрибутов см. в разделе [атрибуты](~/docs/standard/attributes/index.md).  
  
   
  
## Examples  
 В следующем примере применяется <xref:System.Xml.Serialization.XmlAnyElementAttribute> поле с именем `AllElements` , возвращающий массив <xref:System.Xml.XmlElement> объектов.  
  
 [!code-cpp[Classic XmlAnyElementAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlAnyElementAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlAnyElementAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlAnyElementAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic XmlAnyElementAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlAnyElementAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xml.Serialization.XmlAnyAttributeAttribute" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlAnyElementAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlAnyElementAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlAnyElementAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте <xref:System.Xml.Serialization.XmlAnyElementAttribute> конструктор переопределяя сериализации поля. Дополнительные сведения о переопределении сериализации см. в разделе <xref:System.Xml.Serialization.XmlAttributeOverrides> класса.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlAnyElementAttribute (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlAnyElementAttribute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlAnyElementAttribute(System::String ^ name);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Имя XML-элемента, созданного при помощи <see cref="T:System.Xml.Serialization.XmlSerializer" />.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> и указывает имя XML-элемента, сгенерированного в документе XML.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте <xref:System.Xml.Serialization.XmlAnyElementAttribute> конструктор переопределяя сериализации поля. Дополнительные сведения о переопределении сериализации см. в разделе <xref:System.Xml.Serialization.XmlAttributeOverrides> класса.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlAnyElementAttribute (string name, string ns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, string ns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlAnyElementAttribute.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, ns As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlAnyElementAttribute(System::String ^ name, System::String ^ ns);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Имя XML-элемента, созданного при помощи <see cref="T:System.Xml.Serialization.XmlSerializer" />.</param>
        <param name="ns">Пространство имен XML XML-элемента.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> и указывает имя XML-элемента, сгенерированного в документе XML, и его пространство имен XML.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте <xref:System.Xml.Serialization.XmlAnyElementAttribute> конструктор переопределяя сериализации поля. Дополнительные сведения о переопределении сериализации см. в разделе <xref:System.Xml.Serialization.XmlAttributeOverrides> класса.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAnyElementAttribute.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает имя XML-элемента.</summary>
        <value>Имя элемента XML.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При указании <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> значение свойства при применении атрибута, все <xref:System.Xml.XmlElement> или <xref:System.Xml.XmlNode> объекты, добавляемые в массив должен иметь то же элемент по умолчанию имя и пространство имен, или выдается исключение. Если задать <xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A> значение свойства, необходимо задать <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> , свойства и <xref:System.Xml.XmlElement> или <xref:System.Xml.XmlNode> объекты также должны иметь одинаковые значения имени и пространства имен. Если не <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> значение указано, <xref:System.Xml.XmlElement> или <xref:System.Xml.XmlNode> объекты могут иметь любые имена элементов.  
  
 При вызове <xref:System.Xml.Serialization.XmlSerializer.Deserialize%2A> метод <xref:System.Xml.Serialization.XmlSerializer> класса, все атрибуты, которые не имеют соответствующих членов в десериализуемого объекта собираются в массиве. При указании <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> значение, массив содержит только элементы XML с таким именем. Если вы не укажете <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> значение, массив содержит все элементы, имеющие нет соответствующего члена в классе. Если класс содержит более одного поля, к которому применяется атрибут, используйте <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> и <xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A> свойства, чтобы различать содержимое массивов. Если такой класс (с несколькими полями) также содержит поле, для которого не заданы значения свойств, заданные (то есть <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> и <xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A>) во время десериализации, массив содержит все элементы XML, которые не содержатся в другой массивы. При добавлении более одного поля, у которого нет дифференцирования <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> или <xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A> значение не задано, последнее поле в классе содержит все неизвестные элементы, которые не содержатся в других массивах, а все остальные поля задаются `null`.  
  
 Можно применить несколько экземпляров <xref:System.Xml.Serialization.XmlAnyElementAttribute> к классу член, но каждый экземпляр должен иметь различные <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> значение свойства. Либо, если же <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> свойство имеет значение для каждого экземпляра, уникальным <xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A> свойство должно иметь значение для каждого экземпляра.  
  
   
  
## Examples  
 [!code-cpp[XmlAnyElementAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/XmlAnyElementAttribute Example/CPP/anyelement.cpp#1)]
 [!code-csharp[XmlAnyElementAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/XmlAnyElementAttribute Example/CS/anyelement.cs#1)]
 [!code-vb[XmlAnyElementAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/XmlAnyElementAttribute Example/VB/anyelement.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Имя элемента члена массива не соответствует имени элемента, указанному свойством <see cref="P:System.Xml.Serialization.XmlAnyElementAttribute.Name" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Namespace">
      <MemberSignature Language="C#" Value="public string Namespace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Namespace" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAnyElementAttribute.Namespace" />
      <MemberSignature Language="VB.NET" Value="Public Property Namespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Namespace { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает пространство имен XML, созданное в документе XML.</summary>
        <value>Пространство имен XML.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A> Свойство позволяет задать уникальное имя для атрибута XML. <xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A> Свойства соответствует правилам создания пространств имен, изложенным в документе консорциума World Wide Web (www.w3.org) «Namespaces in XML».  
  
 Чтобы задать <xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A> создать свойство для имени с префиксом <xref:System.Xml.Serialization.XmlSerializerNamespaces> , содержащий пространства имен и префиксы, используемые в XML-документе. Задать <xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A> в одно из пространств имен в <xref:System.Xml.Serialization.XmlSerializerNamespaces>. При генерации XML, имя атрибута правильно указывается префикс, связанный с указанным пространством имен.  
  
   
  
## Examples  
 [!code-cpp[XmlAnyElementAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/XmlAnyElementAttribute Example/CPP/anyelement.cpp#1)]
 [!code-csharp[XmlAnyElementAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/XmlAnyElementAttribute Example/CS/anyelement.cs#1)]
 [!code-vb[XmlAnyElementAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/XmlAnyElementAttribute Example/VB/anyelement.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Order">
      <MemberSignature Language="C#" Value="public int Order { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Order" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAnyElementAttribute.Order" />
      <MemberSignature Language="VB.NET" Value="Public Property Order As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Order { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает явный порядок сериализации или десериализации элементов.</summary>
        <value>Порядок генерирования кода.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте <xref:System.Xml.Serialization.CodeGenerationOptions.GenerateOrder> перечисления, чтобы дать указание <xref:System.Web.Services.Description.ServiceDescriptionImporter> для создания кода, который задает <xref:System.Xml.Serialization.XmlElementAttribute.Order%2A> свойства.  
  
> [!IMPORTANT]
>  Один раз <xref:System.Xml.Serialization.XmlElementAttribute.Order%2A> свойство было использовано для одного общего свойства или поля в типе, применимые ко всем открытым свойствам и полям для этого типа и всех наследуемых типов.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>