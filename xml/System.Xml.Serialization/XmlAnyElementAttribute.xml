<Type Name="XmlAnyElementAttribute" FullName="System.Xml.Serialization.XmlAnyElementAttribute">
  <TypeSignature Language="C#" Value="public class XmlAnyElementAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlAnyElementAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Serialization.XmlAnyElementAttribute" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlAnyElementAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlAnyElementAttribute : Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Field | System.AttributeTargets.Parameter | System.AttributeTargets.Property | System.AttributeTargets.ReturnValue, AllowMultiple=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="759e0-101">Указывает, что член (поле, возвращающее массив объектов <see cref="T:System.Xml.XmlElement" /> или <see cref="T:System.Xml.XmlNode" />) содержит объекты, представляющие любые элементы XML, не имеющие соответствующего члена в сериализуемом или десериализуемом объекте.</span><span class="sxs-lookup"><span data-stu-id="759e0-101">Specifies that the member (a field that returns an array of <see cref="T:System.Xml.XmlElement" /> or <see cref="T:System.Xml.XmlNode" /> objects) contains objects that represent any XML element that has no corresponding member in the object being serialized or deserialized.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!TIP]
>  <span data-ttu-id="759e0-102">При работе в переносимой библиотеке классов, например в Silverlight, Windows Phone или проект приложения для магазина Windows и платформу .NET Framework 4.0.3 и более поздней версии, используйте <xref:System.Xml.Linq.XElement> или <xref:System.Xml.Linq.XNode> вместо <xref:System.Xml.XmlElement> и <xref:System.Xml.XmlNode>.</span><span class="sxs-lookup"><span data-stu-id="759e0-102">When working in a portable class library, such as in Silverlight, Windows Phone or Windows Store App project, and you are using the .NET Framework 4.0.3 and above, use <xref:System.Xml.Linq.XElement> or <xref:System.Xml.Linq.XNode> in place of <xref:System.Xml.XmlElement> and <xref:System.Xml.XmlNode>.</span></span>  
  
 <span data-ttu-id="759e0-103">Используйте <xref:System.Xml.Serialization.XmlAnyElementAttribute> содержать произвольные данные (как элементы XML), которые могут отправляться как часть XML-документа, такие как метаданные, переданные как часть документа.</span><span class="sxs-lookup"><span data-stu-id="759e0-103">Use the <xref:System.Xml.Serialization.XmlAnyElementAttribute> to contain arbitrary data (as XML elements) that can be sent as part of an XML document, such as metadata sent as part of the document.</span></span>  
  
 <span data-ttu-id="759e0-104">Применить <xref:System.Xml.Serialization.XmlAnyElementAttribute> к полю, которое возвращает массив <xref:System.Xml.XmlElement> или <xref:System.Xml.XmlNode> объектов.</span><span class="sxs-lookup"><span data-stu-id="759e0-104">Apply the <xref:System.Xml.Serialization.XmlAnyElementAttribute> to a field that returns an array of <xref:System.Xml.XmlElement> or <xref:System.Xml.XmlNode> objects.</span></span> <span data-ttu-id="759e0-105">Это поле можно использовать двумя способами, в зависимости от того, объект сериализации или десериализации.</span><span class="sxs-lookup"><span data-stu-id="759e0-105">Such a field can be used in two ways, depending on whether an object is being serialized or deserialized.</span></span> <span data-ttu-id="759e0-106">При сериализации объекта создается как XML-элементов или узлов, даже если они не имеют соответствующего члена (или членов) в объекте сериализации.</span><span class="sxs-lookup"><span data-stu-id="759e0-106">When serialized, the object is generated as XML elements or nodes, even though they have no corresponding member (or members) in the object being serialized.</span></span> <span data-ttu-id="759e0-107">При указании <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> значение свойства при применении атрибута, все <xref:System.Xml.XmlElement> или <xref:System.Xml.XmlNode> объекты, добавляемые в массив должен иметь то же элемент по умолчанию имя и пространство имен, или выдается исключение.</span><span class="sxs-lookup"><span data-stu-id="759e0-107">If you specify a <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> property value when applying the attribute, all <xref:System.Xml.XmlElement> or <xref:System.Xml.XmlNode> objects inserted into the array must have the same element name and default namespace, or an exception is thrown.</span></span> <span data-ttu-id="759e0-108">Если задать <xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A> значение свойства, необходимо задать <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> , свойства и <xref:System.Xml.XmlElement> или <xref:System.Xml.XmlNode> объекты также должны иметь одинаковые значения имени и пространства имен.</span><span class="sxs-lookup"><span data-stu-id="759e0-108">If you set the <xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A> property value, you must set the <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> property as well, and the <xref:System.Xml.XmlElement> or <xref:System.Xml.XmlNode> objects must also have the same name and namespace values.</span></span> <span data-ttu-id="759e0-109">Если не <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> значение указано, <xref:System.Xml.XmlElement> или <xref:System.Xml.XmlNode> объекты могут иметь любые имена элементов.</span><span class="sxs-lookup"><span data-stu-id="759e0-109">If no <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> value is specified, the <xref:System.Xml.XmlElement> or <xref:System.Xml.XmlNode> objects can have any element name.</span></span>  
  
 <span data-ttu-id="759e0-110">При вызове <xref:System.Xml.Serialization.XmlSerializer.Deserialize%2A> метод <xref:System.Xml.Serialization.XmlSerializer> класса, все элементы, у которых нет соответствующего члена в десериализуемого объекта собираются в массиве.</span><span class="sxs-lookup"><span data-stu-id="759e0-110">When you call the <xref:System.Xml.Serialization.XmlSerializer.Deserialize%2A> method of the <xref:System.Xml.Serialization.XmlSerializer> class, all elements that do not have a corresponding member in the object being deserialized are collected in the array.</span></span> <span data-ttu-id="759e0-111">После десериализации прохода по коллекции <xref:System.Xml.XmlElement> элементов для обработки данных.</span><span class="sxs-lookup"><span data-stu-id="759e0-111">After deserialization, iterate through the collection of <xref:System.Xml.XmlElement> items to process the data.</span></span> <span data-ttu-id="759e0-112">При указании <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> значение, массив содержит только элементы XML с таким именем.</span><span class="sxs-lookup"><span data-stu-id="759e0-112">If you specify a <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> value, the array contains only XML elements with that name.</span></span> <span data-ttu-id="759e0-113">Если вы не укажете <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> значение, массив содержит все элементы, имеющие нет соответствующего члена в классе.</span><span class="sxs-lookup"><span data-stu-id="759e0-113">If you do not specify a <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> value, the array contains all elements that have no corresponding member in the class.</span></span> <span data-ttu-id="759e0-114">Если класс содержит более одного поля, к которому применяется атрибут, используйте <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A>, или <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> и <xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A> свойства, чтобы различать содержимое массивов.</span><span class="sxs-lookup"><span data-stu-id="759e0-114">If a class contains more than one field to which the attribute is applied, use the <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A>, or <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> and <xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A> properties to differentiate between the contents of the arrays.</span></span> <span data-ttu-id="759e0-115">Если такой класс (с несколькими полями) также содержит поле, для которого не заданы значения свойств, заданные (другими словами, <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> и <xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A>) во время десериализации, этот массив содержит все неизвестные элементы XML, которые не содержатся в массивах.</span><span class="sxs-lookup"><span data-stu-id="759e0-115">If such a class (with multiple fields) also contains one field that has no differentiating property values set (in other words, <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> and <xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A>) during deserialization, this array contains any unknown XML elements that are not already contained in the other arrays.</span></span> <span data-ttu-id="759e0-116">Если класс содержит несколько полей, у которого нет дифференцирования <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A>, или <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> и <xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A> значение не задано, то поведение во время десериализации не определено.</span><span class="sxs-lookup"><span data-stu-id="759e0-116">If a class contains more than one field that does not have a differentiating <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A>, or <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> and <xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A> value set, the behavior during deserialization is unspecified.</span></span>  
  
 <span data-ttu-id="759e0-117">Можно также применить <xref:System.Xml.Serialization.XmlAnyElementAttribute> к полю, которое возвращает одиночный <xref:System.Xml.XmlElement> объекта.</span><span class="sxs-lookup"><span data-stu-id="759e0-117">You can also apply the <xref:System.Xml.Serialization.XmlAnyElementAttribute> to a field that returns a single <xref:System.Xml.XmlElement> object.</span></span> <span data-ttu-id="759e0-118">Если сделать это, необходимо использовать свойства и методы <xref:System.Xml.XmlElement> для рекурсивного перебора неизвестных элементов.</span><span class="sxs-lookup"><span data-stu-id="759e0-118">If you do so, you must use the properties and methods of the <xref:System.Xml.XmlElement> class to recursively iterate through the unknown elements.</span></span>  
  
 <span data-ttu-id="759e0-119">Можно применить несколько экземпляров <xref:System.Xml.Serialization.XmlAnyElementAttribute> к классу член, но каждый экземпляр должен иметь различные <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> значение свойства.</span><span class="sxs-lookup"><span data-stu-id="759e0-119">You can apply multiple instances of the <xref:System.Xml.Serialization.XmlAnyElementAttribute> to a class member, but each instance must have a distinct <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> property value.</span></span> <span data-ttu-id="759e0-120">Либо, если же <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> свойство имеет значение для каждого экземпляра, уникальным <xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A> свойство должно иметь значение для каждого экземпляра.</span><span class="sxs-lookup"><span data-stu-id="759e0-120">Or, if the same <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> property is set for each instance, a distinct <xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A> property value must be set for each instance.</span></span>  
  
 <span data-ttu-id="759e0-121"><xref:System.Xml.Serialization.XmlSerializer.UnknownNode> И <xref:System.Xml.Serialization.XmlSerializer.UnknownAttribute> события <xref:System.Xml.Serialization.XmlSerializer> не происходит при применении <xref:System.Xml.Serialization.XmlAnyElementAttribute> к члену класса.</span><span class="sxs-lookup"><span data-stu-id="759e0-121">The <xref:System.Xml.Serialization.XmlSerializer.UnknownNode> and <xref:System.Xml.Serialization.XmlSerializer.UnknownAttribute> events of the <xref:System.Xml.Serialization.XmlSerializer> do not occur if you apply the <xref:System.Xml.Serialization.XmlAnyElementAttribute> to a member of a class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="759e0-122">Можно использовать слово `XmlAnyElement` в коде вместо более длинного <xref:System.Xml.Serialization.XmlAnyElementAttribute>.</span><span class="sxs-lookup"><span data-stu-id="759e0-122">You can use the word `XmlAnyElement` in your code instead of the longer <xref:System.Xml.Serialization.XmlAnyElementAttribute>.</span></span>  
  
 <span data-ttu-id="759e0-123">Дополнительные сведения об использовании атрибутов см. в разделе [атрибуты](~/docs/standard/attributes/index.md).</span><span class="sxs-lookup"><span data-stu-id="759e0-123">For more information about using attributes, see [Attributes](~/docs/standard/attributes/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="759e0-124">В следующем примере применяется <xref:System.Xml.Serialization.XmlAnyElementAttribute> поле с именем `AllElements` , возвращающий массив <xref:System.Xml.XmlElement> объектов.</span><span class="sxs-lookup"><span data-stu-id="759e0-124">The following example applies the <xref:System.Xml.Serialization.XmlAnyElementAttribute> to a field named `AllElements` that returns an array of <xref:System.Xml.XmlElement> objects.</span></span>  
  
 [!code-cpp[Classic XmlAnyElementAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlAnyElementAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlAnyElementAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlAnyElementAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic XmlAnyElementAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlAnyElementAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xml.Serialization.XmlAnyAttributeAttribute" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="759e0-125">Инициализирует новый экземпляр класса <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />.</span><span class="sxs-lookup"><span data-stu-id="759e0-125">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlAnyElementAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlAnyElementAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlAnyElementAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="759e0-126">Инициализирует новый экземпляр класса <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />.</span><span class="sxs-lookup"><span data-stu-id="759e0-126">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="759e0-127">Используйте <xref:System.Xml.Serialization.XmlAnyElementAttribute> конструктор переопределяя сериализации поля.</span><span class="sxs-lookup"><span data-stu-id="759e0-127">Use the <xref:System.Xml.Serialization.XmlAnyElementAttribute> constructor when you are overriding the serialization of a field.</span></span> <span data-ttu-id="759e0-128">Дополнительные сведения о переопределении сериализации см. в разделе <xref:System.Xml.Serialization.XmlAttributeOverrides> класса.</span><span class="sxs-lookup"><span data-stu-id="759e0-128">For more details about overriding serialization, see the <xref:System.Xml.Serialization.XmlAttributeOverrides> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlAnyElementAttribute (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlAnyElementAttribute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlAnyElementAttribute(System::String ^ name);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="759e0-129">Имя XML-элемента, созданного при помощи <see cref="T:System.Xml.Serialization.XmlSerializer" />.</span><span class="sxs-lookup"><span data-stu-id="759e0-129">The name of the XML element that the <see cref="T:System.Xml.Serialization.XmlSerializer" /> generates.</span></span></param>
        <summary><span data-ttu-id="759e0-130">Инициализирует новый экземпляр класса <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> и указывает имя XML-элемента, сгенерированного в документе XML.</span><span class="sxs-lookup"><span data-stu-id="759e0-130">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> class and specifies the XML element name generated in the XML document.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="759e0-131">Используйте <xref:System.Xml.Serialization.XmlAnyElementAttribute> конструктор переопределяя сериализации поля.</span><span class="sxs-lookup"><span data-stu-id="759e0-131">Use the <xref:System.Xml.Serialization.XmlAnyElementAttribute> constructor when you are overriding the serialization of a field.</span></span> <span data-ttu-id="759e0-132">Дополнительные сведения о переопределении сериализации см. в разделе <xref:System.Xml.Serialization.XmlAttributeOverrides> класса.</span><span class="sxs-lookup"><span data-stu-id="759e0-132">For more details about overriding serialization, see the <xref:System.Xml.Serialization.XmlAttributeOverrides> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlAnyElementAttribute (string name, string ns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, string ns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlAnyElementAttribute.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, ns As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlAnyElementAttribute(System::String ^ name, System::String ^ ns);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="759e0-133">Имя XML-элемента, созданного при помощи <see cref="T:System.Xml.Serialization.XmlSerializer" />.</span><span class="sxs-lookup"><span data-stu-id="759e0-133">The name of the XML element that the <see cref="T:System.Xml.Serialization.XmlSerializer" /> generates.</span></span></param>
        <param name="ns"><span data-ttu-id="759e0-134">Пространство имен XML XML-элемента.</span><span class="sxs-lookup"><span data-stu-id="759e0-134">The XML namespace of the XML element.</span></span></param>
        <summary><span data-ttu-id="759e0-135">Инициализирует новый экземпляр класса <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> и указывает имя XML-элемента, сгенерированного в документе XML, и его пространство имен XML.</span><span class="sxs-lookup"><span data-stu-id="759e0-135">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> class and specifies the XML element name generated in the XML document and its XML namespace.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="759e0-136">Используйте <xref:System.Xml.Serialization.XmlAnyElementAttribute> конструктор переопределяя сериализации поля.</span><span class="sxs-lookup"><span data-stu-id="759e0-136">Use the <xref:System.Xml.Serialization.XmlAnyElementAttribute> constructor when you are overriding the serialization of a field.</span></span> <span data-ttu-id="759e0-137">Дополнительные сведения о переопределении сериализации см. в разделе <xref:System.Xml.Serialization.XmlAttributeOverrides> класса.</span><span class="sxs-lookup"><span data-stu-id="759e0-137">For more details about overriding serialization, see the <xref:System.Xml.Serialization.XmlAttributeOverrides> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAnyElementAttribute.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="759e0-138">Возвращает или задает имя XML-элемента.</span><span class="sxs-lookup"><span data-stu-id="759e0-138">Gets or sets the XML element name.</span></span></summary>
        <value><span data-ttu-id="759e0-139">Имя элемента XML.</span><span class="sxs-lookup"><span data-stu-id="759e0-139">The name of the XML element.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="759e0-140">При указании <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> значение свойства при применении атрибута, все <xref:System.Xml.XmlElement> или <xref:System.Xml.XmlNode> объекты, добавляемые в массив должен иметь то же элемент по умолчанию имя и пространство имен, или выдается исключение.</span><span class="sxs-lookup"><span data-stu-id="759e0-140">If you specify a <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> property value when applying the attribute, all <xref:System.Xml.XmlElement> or <xref:System.Xml.XmlNode> objects inserted into the array must have the same element name and default namespace, or an exception is thrown.</span></span> <span data-ttu-id="759e0-141">Если задать <xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A> значение свойства, необходимо задать <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> , свойства и <xref:System.Xml.XmlElement> или <xref:System.Xml.XmlNode> объекты также должны иметь одинаковые значения имени и пространства имен.</span><span class="sxs-lookup"><span data-stu-id="759e0-141">If you set the <xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A> property value, you must set the <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> property as well, and the <xref:System.Xml.XmlElement> or <xref:System.Xml.XmlNode> objects must also have the same name and namespace values.</span></span> <span data-ttu-id="759e0-142">Если не <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> значение указано, <xref:System.Xml.XmlElement> или <xref:System.Xml.XmlNode> объекты могут иметь любые имена элементов.</span><span class="sxs-lookup"><span data-stu-id="759e0-142">If no <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> value is specified, the <xref:System.Xml.XmlElement> or <xref:System.Xml.XmlNode> objects can have any element name.</span></span>  
  
 <span data-ttu-id="759e0-143">При вызове <xref:System.Xml.Serialization.XmlSerializer.Deserialize%2A> метод <xref:System.Xml.Serialization.XmlSerializer> класса, все атрибуты, которые не имеют соответствующих членов в десериализуемого объекта собираются в массиве.</span><span class="sxs-lookup"><span data-stu-id="759e0-143">When you call the <xref:System.Xml.Serialization.XmlSerializer.Deserialize%2A> method of the <xref:System.Xml.Serialization.XmlSerializer> class, all attributes that do not have a corresponding member in the object being deserialized are collected in the array.</span></span> <span data-ttu-id="759e0-144">При указании <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> значение, массив содержит только элементы XML с таким именем.</span><span class="sxs-lookup"><span data-stu-id="759e0-144">If you specify a <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> value, the array contains only XML elements with that name.</span></span> <span data-ttu-id="759e0-145">Если вы не укажете <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> значение, массив содержит все элементы, имеющие нет соответствующего члена в классе.</span><span class="sxs-lookup"><span data-stu-id="759e0-145">If you do not specify a <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> value, the array contains all elements that have no corresponding member in the class.</span></span> <span data-ttu-id="759e0-146">Если класс содержит более одного поля, к которому применяется атрибут, используйте <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> и <xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A> свойства, чтобы различать содержимое массивов.</span><span class="sxs-lookup"><span data-stu-id="759e0-146">If a class contains more than one field to which the attribute is applied, use the <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> and <xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A> properties to differentiate between the contents of the arrays.</span></span> <span data-ttu-id="759e0-147">Если такой класс (с несколькими полями) также содержит поле, для которого не заданы значения свойств, заданные (то есть <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> и <xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A>) во время десериализации, массив содержит все элементы XML, которые не содержатся в другой массивы.</span><span class="sxs-lookup"><span data-stu-id="759e0-147">If such a class (with multiple fields) also contains one field that has no differentiating property values set (that is, <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> and <xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A>) during deserialization, the array contains any XML elements that are not already contained in the other arrays.</span></span> <span data-ttu-id="759e0-148">При добавлении более одного поля, у которого нет дифференцирования <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> или <xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A> значение не задано, последнее поле в классе содержит все неизвестные элементы, которые не содержатся в других массивах, а все остальные поля задаются `null`.</span><span class="sxs-lookup"><span data-stu-id="759e0-148">If you add more than one field that does not have a differentiating <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> or <xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A> value set, the last field in the class contains all unknown elements that are not already contained in the other arrays, and any other fields are set to `null`.</span></span>  
  
 <span data-ttu-id="759e0-149">Можно применить несколько экземпляров <xref:System.Xml.Serialization.XmlAnyElementAttribute> к классу член, но каждый экземпляр должен иметь различные <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> значение свойства.</span><span class="sxs-lookup"><span data-stu-id="759e0-149">You can apply multiple instances of the <xref:System.Xml.Serialization.XmlAnyElementAttribute> to a class member, but each instance must have a distinct <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> property value.</span></span> <span data-ttu-id="759e0-150">Либо, если же <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> свойство имеет значение для каждого экземпляра, уникальным <xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A> свойство должно иметь значение для каждого экземпляра.</span><span class="sxs-lookup"><span data-stu-id="759e0-150">Or, if the same <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> property is set for each instance, a distinct <xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A> property value must be set for each instance.</span></span>  
  
   
  
## Examples  
 [!code-cpp[XmlAnyElementAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/XmlAnyElementAttribute Example/CPP/anyelement.cpp#1)]
 [!code-csharp[XmlAnyElementAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/XmlAnyElementAttribute Example/CS/anyelement.cs#1)]
 [!code-vb[XmlAnyElementAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/XmlAnyElementAttribute Example/VB/anyelement.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="759e0-151">Имя элемента члена массива не соответствует имени элемента, указанному свойством <see cref="P:System.Xml.Serialization.XmlAnyElementAttribute.Name" />.</span><span class="sxs-lookup"><span data-stu-id="759e0-151">The element name of an array member does not match the element name specified by the <see cref="P:System.Xml.Serialization.XmlAnyElementAttribute.Name" /> property.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Namespace">
      <MemberSignature Language="C#" Value="public string Namespace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Namespace" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAnyElementAttribute.Namespace" />
      <MemberSignature Language="VB.NET" Value="Public Property Namespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Namespace { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="759e0-152">Возвращает или задает пространство имен XML, созданное в документе XML.</span><span class="sxs-lookup"><span data-stu-id="759e0-152">Gets or sets the XML namespace generated in the XML document.</span></span></summary>
        <value><span data-ttu-id="759e0-153">Пространство имен XML.</span><span class="sxs-lookup"><span data-stu-id="759e0-153">An XML namespace.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="759e0-154"><xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A> Свойство позволяет задать уникальное имя для атрибута XML.</span><span class="sxs-lookup"><span data-stu-id="759e0-154">The <xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A> property allows you to set a unique name for the XML attribute.</span></span> <span data-ttu-id="759e0-155"><xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A> Свойства соответствует правилам создания пространств имен, изложенным в документе консорциума World Wide Web (www.w3.org) «Namespaces in XML».</span><span class="sxs-lookup"><span data-stu-id="759e0-155">The <xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A> property conforms to the rules for creating an XML namespace as found in the World Wide Web Consortium (www.w3.org) document, "Namespaces in XML."</span></span>  
  
 <span data-ttu-id="759e0-156">Чтобы задать <xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A> создать свойство для имени с префиксом <xref:System.Xml.Serialization.XmlSerializerNamespaces> , содержащий пространства имен и префиксы, используемые в XML-документе.</span><span class="sxs-lookup"><span data-stu-id="759e0-156">To set the <xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A> property to a prefixed name, create an <xref:System.Xml.Serialization.XmlSerializerNamespaces> that contains the namespaces and prefixes used in the XML document.</span></span> <span data-ttu-id="759e0-157">Задать <xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A> в одно из пространств имен в <xref:System.Xml.Serialization.XmlSerializerNamespaces>.</span><span class="sxs-lookup"><span data-stu-id="759e0-157">Set the <xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A> property to one of the namespaces in the <xref:System.Xml.Serialization.XmlSerializerNamespaces>.</span></span> <span data-ttu-id="759e0-158">При генерации XML, имя атрибута правильно указывается префикс, связанный с указанным пространством имен.</span><span class="sxs-lookup"><span data-stu-id="759e0-158">When the XML is generated, the attribute name is correctly prefixed with the prefix associated with the specified namespace.</span></span>  
  
   
  
## Examples  
 [!code-cpp[XmlAnyElementAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/XmlAnyElementAttribute Example/CPP/anyelement.cpp#1)]
 [!code-csharp[XmlAnyElementAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/XmlAnyElementAttribute Example/CS/anyelement.cs#1)]
 [!code-vb[XmlAnyElementAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/XmlAnyElementAttribute Example/VB/anyelement.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Order">
      <MemberSignature Language="C#" Value="public int Order { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Order" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAnyElementAttribute.Order" />
      <MemberSignature Language="VB.NET" Value="Public Property Order As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Order { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="759e0-159">Возвращает или задает явный порядок сериализации или десериализации элементов.</span><span class="sxs-lookup"><span data-stu-id="759e0-159">Gets or sets the explicit order in which the elements are serialized or deserialized.</span></span></summary>
        <value><span data-ttu-id="759e0-160">Порядок генерирования кода.</span><span class="sxs-lookup"><span data-stu-id="759e0-160">The order of the code generation.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="759e0-161">Используйте <xref:System.Xml.Serialization.CodeGenerationOptions.GenerateOrder> перечисления, чтобы дать указание <xref:System.Web.Services.Description.ServiceDescriptionImporter> для создания кода, который задает <xref:System.Xml.Serialization.XmlElementAttribute.Order%2A> свойства.</span><span class="sxs-lookup"><span data-stu-id="759e0-161">Use the <xref:System.Xml.Serialization.CodeGenerationOptions.GenerateOrder> enumeration to instruct the <xref:System.Web.Services.Description.ServiceDescriptionImporter> to generate code that sets the <xref:System.Xml.Serialization.XmlElementAttribute.Order%2A> property.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="759e0-162">Один раз <xref:System.Xml.Serialization.XmlElementAttribute.Order%2A> свойство было использовано для одного общего свойства или поля в типе, применимые ко всем открытым свойствам и полям для этого типа и всех наследуемых типов.</span><span class="sxs-lookup"><span data-stu-id="759e0-162">Once the <xref:System.Xml.Serialization.XmlElementAttribute.Order%2A> property has been used on one public property or field in a type, it must be applied to all public properties and fields for that type and all inherited types.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>