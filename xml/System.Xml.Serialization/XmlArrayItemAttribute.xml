<Type Name="XmlArrayItemAttribute" FullName="System.Xml.Serialization.XmlArrayItemAttribute">
  <TypeSignature Language="C#" Value="public class XmlArrayItemAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlArrayItemAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Serialization.XmlArrayItemAttribute" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlArrayItemAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlArrayItemAttribute : Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Field | System.AttributeTargets.Parameter | System.AttributeTargets.Property | System.AttributeTargets.ReturnValue, AllowMultiple=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="aeb33-101">Представляет атрибут, который определяет производные типы, которые могут быть размещены <see cref="T:System.Xml.Serialization.XmlSerializer" /> в сериализованном массиве.</span><span class="sxs-lookup"><span data-stu-id="aeb33-101">Represents an attribute that specifies the derived types that the <see cref="T:System.Xml.Serialization.XmlSerializer" /> can place in a serialized array.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aeb33-102"><xref:System.Xml.Serialization.XmlArrayItemAttribute> Принадлежит к семейству атрибутов, управляющих как <xref:System.Xml.Serialization.XmlSerializer> сериализует или десериализует объект.</span><span class="sxs-lookup"><span data-stu-id="aeb33-102">The <xref:System.Xml.Serialization.XmlArrayItemAttribute> belongs to a family of attributes that controls how the <xref:System.Xml.Serialization.XmlSerializer> serializes or deserializes an object.</span></span> <span data-ttu-id="aeb33-103">Полный список аналогичных атрибутов см. в разделе [атрибуты, управляющие сериализацией XML](~/docs/standard/serialization/attributes-that-control-xml-serialization.md).</span><span class="sxs-lookup"><span data-stu-id="aeb33-103">For a complete list of similar attributes, see [Attributes That Control XML Serialization](~/docs/standard/serialization/attributes-that-control-xml-serialization.md).</span></span>  
  
 <span data-ttu-id="aeb33-104">Можно применить <xref:System.Xml.Serialization.XmlArrayItemAttribute> к любому элементу чтения записи, который возвращает массив или предоставляет доступ к одному.</span><span class="sxs-lookup"><span data-stu-id="aeb33-104">You can apply the <xref:System.Xml.Serialization.XmlArrayItemAttribute> to any public read/write member that returns an array, or provides access to one.</span></span> <span data-ttu-id="aeb33-105">Например, поле, возвращающее массив объектов в коллекции, <xref:System.Collections.ArrayList>, или любой класс, реализующий <xref:System.Collections.IEnumerable> интерфейса.</span><span class="sxs-lookup"><span data-stu-id="aeb33-105">For example, a field that returns an array of objects, a collection, an <xref:System.Collections.ArrayList>, or any class that implements the <xref:System.Collections.IEnumerable> interface.</span></span>  
  
 <span data-ttu-id="aeb33-106"><xref:System.Xml.Serialization.XmlArrayItemAttribute> Поддерживает полиморфизм — другими словами, он позволяет <xref:System.Xml.Serialization.XmlSerializer> добавлять производные объекты в массив.</span><span class="sxs-lookup"><span data-stu-id="aeb33-106">The <xref:System.Xml.Serialization.XmlArrayItemAttribute> supports polymorphism--in other words, it allows the <xref:System.Xml.Serialization.XmlSerializer> to add derived objects to an array.</span></span> <span data-ttu-id="aeb33-107">Например, предположим, что класс с именем `Mammal` является производным от базового класса с именем `Animal`.</span><span class="sxs-lookup"><span data-stu-id="aeb33-107">For example, suppose a class named `Mammal` is derived from a base class named `Animal`.</span></span> <span data-ttu-id="aeb33-108">Кроме того, предположим, что класс с именем `MyAnimals` содержит поле, возвращающее массив `Animal` объектов.</span><span class="sxs-lookup"><span data-stu-id="aeb33-108">Further suppose that a class named `MyAnimals` contains a field that returns an array of `Animal` objects.</span></span> <span data-ttu-id="aeb33-109">Чтобы разрешить <xref:System.Xml.Serialization.XmlSerializer> для сериализации и `Animal` и `Mammal` типа, примените <xref:System.Xml.Serialization.XmlArrayItemAttribute> полю дважды, каждый раз указывая один из двух типов.</span><span class="sxs-lookup"><span data-stu-id="aeb33-109">To allow the <xref:System.Xml.Serialization.XmlSerializer> to serialize both the `Animal` and `Mammal` type, apply the <xref:System.Xml.Serialization.XmlArrayItemAttribute> to the field twice, each time specifying one of the two acceptable types.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="aeb33-110">Можно применить несколько экземпляров <xref:System.Xml.Serialization.XmlArrayItemAttribute> или <xref:System.Xml.Serialization.XmlElementAttribute> позволяет указать типы объектов, которые могут быть вставлены в массив.</span><span class="sxs-lookup"><span data-stu-id="aeb33-110">You can apply multiple instances of the <xref:System.Xml.Serialization.XmlArrayItemAttribute> or <xref:System.Xml.Serialization.XmlElementAttribute> to specify types of objects that can be inserted into the array.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="aeb33-111">Сериализация поле или свойство, которое возвращает интерфейс или массив интерфейсов не поддерживается.</span><span class="sxs-lookup"><span data-stu-id="aeb33-111">The serialization of a field or property that returns an interface or array of interfaces is not supported.</span></span>  
  
 <span data-ttu-id="aeb33-112">Дополнительные сведения об использовании атрибутов см. в разделе [атрибуты](~/docs/standard/attributes/index.md).</span><span class="sxs-lookup"><span data-stu-id="aeb33-112">For more information about using attributes, see [Attributes](~/docs/standard/attributes/index.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="aeb33-113">Можно использовать слово `XmlArrayItem` в коде вместо более длинного <xref:System.Xml.Serialization.XmlArrayItemAttribute>.</span><span class="sxs-lookup"><span data-stu-id="aeb33-113">You can use the word `XmlArrayItem` in your code instead of the longer <xref:System.Xml.Serialization.XmlArrayItemAttribute>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aeb33-114">В следующем примере сериализуется класс с именем `Group` , содержащий поле с именем `Employees` , возвращающий массив `Employee` объектов.</span><span class="sxs-lookup"><span data-stu-id="aeb33-114">The following example serializes a class named `Group` that contains a field named `Employees` that returns an array of `Employee` objects.</span></span> <span data-ttu-id="aeb33-115">В примере применяется <xref:System.Xml.Serialization.XmlArrayItemAttribute> с полем, тем самым указывая <xref:System.Xml.Serialization.XmlSerializer> , его можно вставить объекты базового класса (`Employee`) типа и типа производного класса (`Manager`) в сериализованном массиве.</span><span class="sxs-lookup"><span data-stu-id="aeb33-115">The example applies the <xref:System.Xml.Serialization.XmlArrayItemAttribute> to the field, thereby instructing the <xref:System.Xml.Serialization.XmlSerializer> that it can insert objects of both the base class (`Employee`) type and derived class type (`Manager`) into the serialized array.</span></span>  
  
 [!code-cpp[Classic XmlArrayItemAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlArrayItemAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlArrayItemAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlArrayItemAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic XmlArrayItemAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlArrayItemAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xml.Serialization.XmlArrayAttribute" />
    <altmember cref="T:System.Xml.Serialization.XmlSerializer" />
    <altmember cref="P:System.Xml.Serialization.XmlAttributes.XmlArrayItems" />
    <altmember cref="T:System.Xml.Serialization.XmlAttributeOverrides" />
    <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="aeb33-116">Инициализирует новый экземпляр класса <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" />.</span><span class="sxs-lookup"><span data-stu-id="aeb33-116">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlArrayItemAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlArrayItemAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlArrayItemAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="aeb33-117">Инициализирует новый экземпляр класса <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" />.</span><span class="sxs-lookup"><span data-stu-id="aeb33-117">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="aeb33-118">В следующем примере сериализуется класс с именем `Transportation` , содержащий поле с именем `MyVehicles` , возвращающий массив `Vehicle` объектов.</span><span class="sxs-lookup"><span data-stu-id="aeb33-118">The following example serializes a class named `Transportation` that contains a field named `MyVehicles` that returns an array of `Vehicle` objects.</span></span> <span data-ttu-id="aeb33-119">В примере применяется <xref:System.Xml.Serialization.XmlArrayItemAttribute> с полем, позволяя <xref:System.Xml.Serialization.XmlSerializer> вставляемый экземпляров `Car` класс, который является производным от `Vehicle` класса в массив.</span><span class="sxs-lookup"><span data-stu-id="aeb33-119">The example applies the <xref:System.Xml.Serialization.XmlArrayItemAttribute> to the field, allowing the <xref:System.Xml.Serialization.XmlSerializer> to insert instances of the `Car` class, which is derived from the `Vehicle` class, into the array.</span></span>  
  
 [!code-cpp[Classic XmlArrayItemAttribute.XmlArrayItemAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.XmlArrayItemAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlArrayItemAttribute.XmlArrayItemAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.XmlArrayItemAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic XmlArrayItemAttribute.XmlArrayItemAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.XmlArrayItemAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlArrayItemAttribute (string elementName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string elementName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlArrayItemAttribute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (elementName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlArrayItemAttribute(System::String ^ elementName);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="elementName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="elementName"><span data-ttu-id="aeb33-120">Имя элемента XML.</span><span class="sxs-lookup"><span data-stu-id="aeb33-120">The name of the XML element.</span></span></param>
        <summary><span data-ttu-id="aeb33-121">Инициализация нового экземпляра  класса <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> и указывает имя элемента XML, сгенерированного в документе XML.</span><span class="sxs-lookup"><span data-stu-id="aeb33-121">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> class and specifies the name of the XML element generated in the XML document.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aeb33-122">Эта перегрузка задает <xref:System.Xml.Serialization.XmlArrayItemAttribute.ElementName%2A> свойства.</span><span class="sxs-lookup"><span data-stu-id="aeb33-122">This overload sets the <xref:System.Xml.Serialization.XmlArrayItemAttribute.ElementName%2A> property.</span></span>  
  
 <span data-ttu-id="aeb33-123">Используйте этот перегруженный метод, если требуется, чтобы имя создаваемого элемента XML отличалось от идентификатора члена.</span><span class="sxs-lookup"><span data-stu-id="aeb33-123">Use this overload if you want the name of the generated XML element to differ from the member's identifier.</span></span>  
  
 <span data-ttu-id="aeb33-124">XML-документ, содержащий пространства имен может содержать более одной версии имени элемента.</span><span class="sxs-lookup"><span data-stu-id="aeb33-124">An XML document that includes namespaces can contain more than one version of an element name.</span></span> <span data-ttu-id="aeb33-125">Дополнительные сведения см. в свойстве <xref:System.Xml.Serialization.XmlArrayItemAttribute.ElementName%2A>.</span><span class="sxs-lookup"><span data-stu-id="aeb33-125">For details, see the <xref:System.Xml.Serialization.XmlArrayItemAttribute.ElementName%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aeb33-126">В следующем примере сериализуется класс с именем `Transportation` , содержащий поле с именем `MyVehicles` , возвращающий массив `Vehicle` объектов.</span><span class="sxs-lookup"><span data-stu-id="aeb33-126">The following example serializes a class named `Transportation` that contains a field named `MyVehicles` that returns an array of `Vehicle` objects.</span></span> <span data-ttu-id="aeb33-127">В примере применяется <xref:System.Xml.Serialization.XmlArrayItemAttribute> с полем, позволяя <xref:System.Xml.Serialization.XmlSerializer> вставляемый экземпляров `Car` класс, который является производным от `Vehicle` класса в массив.</span><span class="sxs-lookup"><span data-stu-id="aeb33-127">The example applies the <xref:System.Xml.Serialization.XmlArrayItemAttribute> to the field, allowing the <xref:System.Xml.Serialization.XmlSerializer> to insert instances of the `Car` class, which is derived from the `Vehicle` class, into the array.</span></span> <span data-ttu-id="aeb33-128">При применении атрибута, в этом примере <xref:System.Xml.Serialization.XmlArrayItemAttribute.ElementName%2A> с использованием параметра `elementName` параметр.</span><span class="sxs-lookup"><span data-stu-id="aeb33-128">While applying the attribute, the example sets the <xref:System.Xml.Serialization.XmlArrayItemAttribute.ElementName%2A> property using the `elementName` parameter.</span></span>  
  
 [!code-cpp[Classic XmlArrayItemAttribute.XmlArrayItemAttribute1 Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.XmlArrayItemAttribute1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlArrayItemAttribute.XmlArrayItemAttribute1 Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.XmlArrayItemAttribute1 Example/CS/source.cs#1)]
 [!code-vb[Classic XmlArrayItemAttribute.XmlArrayItemAttribute1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.XmlArrayItemAttribute1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlArrayItemAttribute (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlArrayItemAttribute.#ctor(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlArrayItemAttribute(Type ^ type);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="aeb33-129">Тип <see cref="T:System.Type" /> сериализуемого объекта.</span><span class="sxs-lookup"><span data-stu-id="aeb33-129">The <see cref="T:System.Type" /> of the object to serialize.</span></span></param>
        <summary><span data-ttu-id="aeb33-130">Инициализация нового экземпляра  класса <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> и определяет <see cref="T:System.Type" />, который может быть вставлен в сериализованный массив.</span><span class="sxs-lookup"><span data-stu-id="aeb33-130">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> class and specifies the <see cref="T:System.Type" /> that can be inserted into the serialized array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="aeb33-131">В следующем примере сериализуется класс с именем `Transportation` , содержащий поле с именем `MyVehicles` , возвращающий массив `Vehicle` объектов.</span><span class="sxs-lookup"><span data-stu-id="aeb33-131">The following example serializes a class named `Transportation` that contains a field named `MyVehicles` that returns an array of `Vehicle` objects.</span></span> <span data-ttu-id="aeb33-132">В примере применяется <xref:System.Xml.Serialization.XmlArrayItemAttribute> с полем, позволяя <xref:System.Xml.Serialization.XmlSerializer> вставляемый экземпляров `Car` класс, который является производным от `Vehicle` класса в массив.</span><span class="sxs-lookup"><span data-stu-id="aeb33-132">The example applies the <xref:System.Xml.Serialization.XmlArrayItemAttribute> to the field, allowing the <xref:System.Xml.Serialization.XmlSerializer> to insert instances of the `Car` class, which is derived from the `Vehicle` class, into the array.</span></span> <span data-ttu-id="aeb33-133">При применении атрибута, в этом примере <xref:System.Xml.Serialization.XmlArrayItemAttribute.Type%2A> с использованием параметра `type` параметр.</span><span class="sxs-lookup"><span data-stu-id="aeb33-133">While applying the attribute, the example sets the <xref:System.Xml.Serialization.XmlArrayItemAttribute.Type%2A> property using the `type` parameter.</span></span>  
  
 [!code-cpp[Classic XmlArrayItemAttribute.XmlArrayItemAttribute2 Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.XmlArrayItemAttribute2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlArrayItemAttribute.XmlArrayItemAttribute2 Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.XmlArrayItemAttribute2 Example/CS/source.cs#1)]
 [!code-vb[Classic XmlArrayItemAttribute.XmlArrayItemAttribute2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.XmlArrayItemAttribute2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlArrayItemAttribute (string elementName, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string elementName, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlArrayItemAttribute.#ctor(System.String,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlArrayItemAttribute(System::String ^ elementName, Type ^ type);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="elementName" Type="System.String" />
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="elementName"><span data-ttu-id="aeb33-134">Имя элемента XML.</span><span class="sxs-lookup"><span data-stu-id="aeb33-134">The name of the XML element.</span></span></param>
        <param name="type"><span data-ttu-id="aeb33-135">Тип <see cref="T:System.Type" /> сериализуемого объекта.</span><span class="sxs-lookup"><span data-stu-id="aeb33-135">The <see cref="T:System.Type" /> of the object to serialize.</span></span></param>
        <summary><span data-ttu-id="aeb33-136">Инициализация нового экземпляра  класса <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> и определяет имя элемента XML, сгенерированного в документе XML, и <see cref="T:System.Type" />, который может быть вставлен в сгенерированный документ XML.</span><span class="sxs-lookup"><span data-stu-id="aeb33-136">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> class and specifies the name of the XML element generated in the XML document and the <see cref="T:System.Type" /> that can be inserted into the generated XML document.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aeb33-137">Эта перегрузка задает <xref:System.Xml.Serialization.XmlArrayItemAttribute.ElementName%2A> и <xref:System.Xml.Serialization.XmlArrayItemAttribute.Type%2A> свойства.</span><span class="sxs-lookup"><span data-stu-id="aeb33-137">This overload sets the <xref:System.Xml.Serialization.XmlArrayItemAttribute.ElementName%2A> and the <xref:System.Xml.Serialization.XmlArrayItemAttribute.Type%2A> properties.</span></span>  
  
 <span data-ttu-id="aeb33-138">Используйте этот перегруженный метод, если требуется, чтобы имя создаваемого элемента XML отличалось от идентификатора члена.</span><span class="sxs-lookup"><span data-stu-id="aeb33-138">Use this overload if you want the name of the generated XML element to differ from the member's identifier.</span></span>  
  
 <span data-ttu-id="aeb33-139">XML-документ, содержащий пространства имен может содержать более одной версии имени элемента.</span><span class="sxs-lookup"><span data-stu-id="aeb33-139">An XML document that includes namespaces can contain more than one version of an element name.</span></span> <span data-ttu-id="aeb33-140">Дополнительные сведения см. в свойстве <xref:System.Xml.Serialization.XmlArrayItemAttribute.ElementName%2A>.</span><span class="sxs-lookup"><span data-stu-id="aeb33-140">For details, see the <xref:System.Xml.Serialization.XmlArrayItemAttribute.ElementName%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aeb33-141">В следующем примере сериализуется класс с именем `Transportation` , содержащий поле с именем `MyVehicles` , возвращающий массив `Vehicle` объектов.</span><span class="sxs-lookup"><span data-stu-id="aeb33-141">The following example serializes a class named `Transportation` that contains a field named `MyVehicles` that returns an array of `Vehicle` objects.</span></span> <span data-ttu-id="aeb33-142">В примере применяется <xref:System.Xml.Serialization.XmlArrayItemAttribute> с полем, позволяя <xref:System.Xml.Serialization.XmlSerializer> вставляемый экземпляров `Car` класс, который является производным от `Vehicle` класса в массив.</span><span class="sxs-lookup"><span data-stu-id="aeb33-142">The example applies the <xref:System.Xml.Serialization.XmlArrayItemAttribute> to the field, allowing the <xref:System.Xml.Serialization.XmlSerializer> to insert instances of the `Car` class, which is derived from the `Vehicle` class, into the array.</span></span> <span data-ttu-id="aeb33-143">При применении атрибута, в этом примере <xref:System.Xml.Serialization.XmlArrayItemAttribute.ElementName%2A> свойства с помощью `elementName` параметра и <xref:System.Xml.Serialization.XmlArrayItemAttribute.Type%2A> с использованием параметра `type` параметр.</span><span class="sxs-lookup"><span data-stu-id="aeb33-143">While applying the attribute, the example sets the <xref:System.Xml.Serialization.XmlArrayItemAttribute.ElementName%2A> property using the `elementName` parameter, and the <xref:System.Xml.Serialization.XmlArrayItemAttribute.Type%2A> property using the `type` parameter.</span></span>  
  
 [!code-cpp[Classic XmlArrayItemAttribute.XmlArrayItemAttribute3 Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.XmlArrayItemAttribute3 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlArrayItemAttribute.XmlArrayItemAttribute3 Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.XmlArrayItemAttribute3 Example/CS/source.cs#1)]
 [!code-vb[Classic XmlArrayItemAttribute.XmlArrayItemAttribute3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.XmlArrayItemAttribute3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataType">
      <MemberSignature Language="C#" Value="public string DataType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataType" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlArrayItemAttribute.DataType" />
      <MemberSignature Language="VB.NET" Value="Public Property DataType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DataType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="aeb33-144">Возвращает или задает тип данных XML сгенерированного элемента XML.</span><span class="sxs-lookup"><span data-stu-id="aeb33-144">Gets or sets the XML data type of the generated XML element.</span></span></summary>
        <value><span data-ttu-id="aeb33-145">Тип данных определения схемы XML (XSD) согласно документу "Схема XML, часть 2: типы данных" консорциума World Wide Web (www.w3.org).</span><span class="sxs-lookup"><span data-stu-id="aeb33-145">An XML schema definition (XSD) data type, as defined by the World Wide Web Consortium (www.w3.org) document "XML Schema Part 2: DataTypes".</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aeb33-146">Ниже перечислены типы простых данных схемы XML с их эквивалентами .NET.</span><span class="sxs-lookup"><span data-stu-id="aeb33-146">The following table lists the XML Schema simple data types with their .NET equivalents.</span></span>  
  
 <span data-ttu-id="aeb33-147">XML-схемы `base64Binary` и `hexBinary` типов данных, используйте массив <xref:System.Byte> объектов и применить <xref:System.Xml.Serialization.XmlArrayItemAttribute> с <xref:System.Xml.Serialization.XmlArrayItemAttribute.DataType%2A> свойством, имеющим значение «base64Binary» или «hexBinary».</span><span class="sxs-lookup"><span data-stu-id="aeb33-147">For the XML Schema `base64Binary` and `hexBinary` data types, use an array of <xref:System.Byte> objects, and apply an <xref:System.Xml.Serialization.XmlArrayItemAttribute> with the <xref:System.Xml.Serialization.XmlArrayItemAttribute.DataType%2A> property set to "base64Binary" or "hexBinary", as appropriate.</span></span> <span data-ttu-id="aeb33-148">XML-схемы `time` и `date` типов данных используйте <xref:System.DateTime> введите и применить <xref:System.Xml.Serialization.XmlArrayItemAttribute> с <xref:System.Xml.Serialization.XmlArrayItemAttribute.DataType%2A> присвоено значение «date» или «время».</span><span class="sxs-lookup"><span data-stu-id="aeb33-148">For the XML Schema `time` and `date` data types, use the <xref:System.DateTime> type and apply the <xref:System.Xml.Serialization.XmlArrayItemAttribute> with the <xref:System.Xml.Serialization.XmlArrayItemAttribute.DataType%2A> set to "date" or "time".</span></span>  
  
 <span data-ttu-id="aeb33-149">Для каждого типа схемы XML, отраженного в строке, примените <xref:System.Xml.Serialization.XmlArrayItemAttribute> с его <xref:System.Xml.Serialization.XmlArrayItemAttribute.DataType%2A> значение свойства типа схемы XML.</span><span class="sxs-lookup"><span data-stu-id="aeb33-149">For every XML Schema type that is mapped to a string, apply the <xref:System.Xml.Serialization.XmlArrayItemAttribute> with its <xref:System.Xml.Serialization.XmlArrayItemAttribute.DataType%2A> property set to the XML Schema type.</span></span> <span data-ttu-id="aeb33-150">Однако это не изменяет формат сериализации, а только схему для члена.</span><span class="sxs-lookup"><span data-stu-id="aeb33-150">However, this does not change the serialization format, only the schema for the member.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="aeb33-151">Свойство учитывает регистр, поэтому его необходимо задать ровно на один из типов данных схемы XML.</span><span class="sxs-lookup"><span data-stu-id="aeb33-151">The property is case-sensitive, so you must set it exactly to one of the XML Schema data types.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="aeb33-152">Передача двоичных данных в виде XML-элемент является более эффективно передавать как атрибут XML.</span><span class="sxs-lookup"><span data-stu-id="aeb33-152">Passing binary data as an XML element is more efficient then passing it as an XML attribute.</span></span>  
  
 <span data-ttu-id="aeb33-153">Дополнительные сведения о типах данных схемы XML, см. в документе консорциума World Wide Web (www.w3.org) «XML Schema Part 2: Datatypes.»</span><span class="sxs-lookup"><span data-stu-id="aeb33-153">For more information about XML Schema data types, see the World Wide Web Consortium (www.w3.org) document "XML Schema Part 2: Datatypes."</span></span>  
  
|<span data-ttu-id="aeb33-154">Тип данных XSD</span><span class="sxs-lookup"><span data-stu-id="aeb33-154">XSD data type</span></span>|<span data-ttu-id="aeb33-155">Тип данных .NET</span><span class="sxs-lookup"><span data-stu-id="aeb33-155">.NET data type</span></span>|  
|-------------------|--------------------|  
|<span data-ttu-id="aeb33-156">anyURI</span><span class="sxs-lookup"><span data-stu-id="aeb33-156">anyURI</span></span>|<xref:System.String>|  
|<span data-ttu-id="aeb33-157">base64Binary</span><span class="sxs-lookup"><span data-stu-id="aeb33-157">base64Binary</span></span>|<span data-ttu-id="aeb33-158">Массив <xref:System.Byte> объектов</span><span class="sxs-lookup"><span data-stu-id="aeb33-158">Array of <xref:System.Byte> objects</span></span>|  
|<span data-ttu-id="aeb33-159">boolean</span><span class="sxs-lookup"><span data-stu-id="aeb33-159">boolean</span></span>|<xref:System.Boolean>|  
|<span data-ttu-id="aeb33-160">byte</span><span class="sxs-lookup"><span data-stu-id="aeb33-160">byte</span></span>|<xref:System.SByte>|  
|<span data-ttu-id="aeb33-161">date</span><span class="sxs-lookup"><span data-stu-id="aeb33-161">date</span></span>|<xref:System.DateTime>|  
|<span data-ttu-id="aeb33-162">dateTime</span><span class="sxs-lookup"><span data-stu-id="aeb33-162">dateTime</span></span>|<xref:System.DateTime>|  
|<span data-ttu-id="aeb33-163">decimal</span><span class="sxs-lookup"><span data-stu-id="aeb33-163">decimal</span></span>|<xref:System.Decimal>|  
|<span data-ttu-id="aeb33-164">double</span><span class="sxs-lookup"><span data-stu-id="aeb33-164">double</span></span>|<xref:System.Double>|  
|<span data-ttu-id="aeb33-165">ENTITY</span><span class="sxs-lookup"><span data-stu-id="aeb33-165">ENTITY</span></span>|<xref:System.String>|  
|<span data-ttu-id="aeb33-166">СУЩНОСТИ</span><span class="sxs-lookup"><span data-stu-id="aeb33-166">ENTITIES</span></span>|<xref:System.String>|  
|<span data-ttu-id="aeb33-167">float</span><span class="sxs-lookup"><span data-stu-id="aeb33-167">float</span></span>|<xref:System.Single>|  
|<span data-ttu-id="aeb33-168">gDay</span><span class="sxs-lookup"><span data-stu-id="aeb33-168">gDay</span></span>|<xref:System.String>|  
|<span data-ttu-id="aeb33-169">gMonth</span><span class="sxs-lookup"><span data-stu-id="aeb33-169">gMonth</span></span>|<xref:System.String>|  
|<span data-ttu-id="aeb33-170">gMonthDay</span><span class="sxs-lookup"><span data-stu-id="aeb33-170">gMonthDay</span></span>|<xref:System.String>|  
|<span data-ttu-id="aeb33-171">типа gYear</span><span class="sxs-lookup"><span data-stu-id="aeb33-171">gYear</span></span>|<xref:System.String>|  
|<span data-ttu-id="aeb33-172">gYearMonth</span><span class="sxs-lookup"><span data-stu-id="aeb33-172">gYearMonth</span></span>|<xref:System.String>|  
|<span data-ttu-id="aeb33-173">hexBinary</span><span class="sxs-lookup"><span data-stu-id="aeb33-173">hexBinary</span></span>|<span data-ttu-id="aeb33-174">Массив <xref:System.Byte> объектов</span><span class="sxs-lookup"><span data-stu-id="aeb33-174">Array of <xref:System.Byte> objects</span></span>|  
|<span data-ttu-id="aeb33-175">ID</span><span class="sxs-lookup"><span data-stu-id="aeb33-175">ID</span></span>|<xref:System.String>|  
|<span data-ttu-id="aeb33-176">IDREF</span><span class="sxs-lookup"><span data-stu-id="aeb33-176">IDREF</span></span>|<xref:System.String>|  
|<span data-ttu-id="aeb33-177">IDREFS</span><span class="sxs-lookup"><span data-stu-id="aeb33-177">IDREFS</span></span>|<xref:System.String>|  
|<span data-ttu-id="aeb33-178">int</span><span class="sxs-lookup"><span data-stu-id="aeb33-178">int</span></span>|<xref:System.Int32>|  
|<span data-ttu-id="aeb33-179">целочисленный</span><span class="sxs-lookup"><span data-stu-id="aeb33-179">integer</span></span>|<xref:System.String>|  
|<span data-ttu-id="aeb33-180">язык</span><span class="sxs-lookup"><span data-stu-id="aeb33-180">language</span></span>|<xref:System.String>|  
|<span data-ttu-id="aeb33-181">long</span><span class="sxs-lookup"><span data-stu-id="aeb33-181">long</span></span>|<xref:System.Int64>|  
|<span data-ttu-id="aeb33-182">name</span><span class="sxs-lookup"><span data-stu-id="aeb33-182">Name</span></span>|<xref:System.String>|  
|<span data-ttu-id="aeb33-183">NCName</span><span class="sxs-lookup"><span data-stu-id="aeb33-183">NCName</span></span>|<xref:System.String>|  
|<span data-ttu-id="aeb33-184">negativeInteger</span><span class="sxs-lookup"><span data-stu-id="aeb33-184">negativeInteger</span></span>|<xref:System.String>|  
|<span data-ttu-id="aeb33-185">NMTOKEN</span><span class="sxs-lookup"><span data-stu-id="aeb33-185">NMTOKEN</span></span>|<xref:System.String>|  
|<span data-ttu-id="aeb33-186">NMTOKENS</span><span class="sxs-lookup"><span data-stu-id="aeb33-186">NMTOKENS</span></span>|<xref:System.String>|  
|<span data-ttu-id="aeb33-187">normalizedString</span><span class="sxs-lookup"><span data-stu-id="aeb33-187">normalizedString</span></span>|<xref:System.String>|  
|<span data-ttu-id="aeb33-188">nonNegativeInteger</span><span class="sxs-lookup"><span data-stu-id="aeb33-188">nonNegativeInteger</span></span>|<xref:System.String>|  
|<span data-ttu-id="aeb33-189">nonPositiveInteger</span><span class="sxs-lookup"><span data-stu-id="aeb33-189">nonPositiveInteger</span></span>|<xref:System.String>|  
|<span data-ttu-id="aeb33-190">NOTATION</span><span class="sxs-lookup"><span data-stu-id="aeb33-190">NOTATION</span></span>|<xref:System.String>|  
|<span data-ttu-id="aeb33-191">positiveInteger</span><span class="sxs-lookup"><span data-stu-id="aeb33-191">positiveInteger</span></span>|<xref:System.String>|  
|<span data-ttu-id="aeb33-192">QName</span><span class="sxs-lookup"><span data-stu-id="aeb33-192">QName</span></span>|<xref:System.Xml.XmlQualifiedName>|  
|<span data-ttu-id="aeb33-193">длительность</span><span class="sxs-lookup"><span data-stu-id="aeb33-193">duration</span></span>|<xref:System.String>|  
|<span data-ttu-id="aeb33-194">string</span><span class="sxs-lookup"><span data-stu-id="aeb33-194">string</span></span>|<xref:System.String>|  
|<span data-ttu-id="aeb33-195">short</span><span class="sxs-lookup"><span data-stu-id="aeb33-195">short</span></span>|<xref:System.Int16>|  
|<span data-ttu-id="aeb33-196">время</span><span class="sxs-lookup"><span data-stu-id="aeb33-196">time</span></span>|<xref:System.DateTime>|  
|<span data-ttu-id="aeb33-197">token</span><span class="sxs-lookup"><span data-stu-id="aeb33-197">token</span></span>|<xref:System.String>|  
|<span data-ttu-id="aeb33-198">unsignedByte</span><span class="sxs-lookup"><span data-stu-id="aeb33-198">unsignedByte</span></span>|<xref:System.Byte>|  
|<span data-ttu-id="aeb33-199">unsignedInt</span><span class="sxs-lookup"><span data-stu-id="aeb33-199">unsignedInt</span></span>|<xref:System.UInt32>|  
|<span data-ttu-id="aeb33-200">unsignedLong</span><span class="sxs-lookup"><span data-stu-id="aeb33-200">unsignedLong</span></span>|<xref:System.UInt64>|  
|<span data-ttu-id="aeb33-201">unsignedShort</span><span class="sxs-lookup"><span data-stu-id="aeb33-201">unsignedShort</span></span>|<xref:System.UInt16>|  
  
   
  
## Examples  
 <span data-ttu-id="aeb33-202">В следующем примере сериализуется класс с именем `PurchaseOrder`.</span><span class="sxs-lookup"><span data-stu-id="aeb33-202">The following example serializes a class named `PurchaseOrder`.</span></span> <span data-ttu-id="aeb33-203">Несколько экземпляров <xref:System.Xml.Serialization.XmlArrayItemAttribute> класса применяются к трем членам и <xref:System.Xml.Serialization.XmlArrayItemAttribute.DataType%2A> для каждого экземпляра присваивается тип, допустимый в массиве.</span><span class="sxs-lookup"><span data-stu-id="aeb33-203">Several instances of the <xref:System.Xml.Serialization.XmlArrayItemAttribute> class are applied to three members, and the <xref:System.Xml.Serialization.XmlArrayItemAttribute.DataType%2A> property for each instance is set to a type allowed in the array.</span></span>  
  
 [!code-cpp[XmlArrayItemAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/XmlArrayItemAttribute Example/CPP/arrayitem.cpp#1)]
 [!code-csharp[XmlArrayItemAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/XmlArrayItemAttribute Example/CS/arrayitem.cs#1)]
 [!code-vb[XmlArrayItemAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/XmlArrayItemAttribute Example/VB/arrayitem.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ElementName">
      <MemberSignature Language="C#" Value="public string ElementName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ElementName" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlArrayItemAttribute.ElementName" />
      <MemberSignature Language="VB.NET" Value="Public Property ElementName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ElementName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="aeb33-204">Получает или задает имя созданного XML-элемента</span><span class="sxs-lookup"><span data-stu-id="aeb33-204">Gets or sets the name of the generated XML element.</span></span></summary>
        <value><span data-ttu-id="aeb33-205">Имя созданного XML-элемента.</span><span class="sxs-lookup"><span data-stu-id="aeb33-205">The name of the generated XML element.</span></span> <span data-ttu-id="aeb33-206">По умолчанию используется идентификатор члена</span><span class="sxs-lookup"><span data-stu-id="aeb33-206">The default is the member identifier.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aeb33-207">Укажите <xref:System.Xml.Serialization.XmlArrayItemAttribute.ElementName%2A> Если требуется, чтобы имя создаваемого элемента XML отличалось от идентификатора члена.</span><span class="sxs-lookup"><span data-stu-id="aeb33-207">Specify an <xref:System.Xml.Serialization.XmlArrayItemAttribute.ElementName%2A> if you want the name of the generated XML element to differ from the member's identifier.</span></span>  
  
 <span data-ttu-id="aeb33-208">Можно задать же <xref:System.Xml.Serialization.XmlArrayAttribute.ElementName%2A> значение на более чем один член класса, если создаваемый документ XML использует пространства имен XML для различения идентично именованные члены.</span><span class="sxs-lookup"><span data-stu-id="aeb33-208">You can set the same <xref:System.Xml.Serialization.XmlArrayAttribute.ElementName%2A> value to more than one class member if the generated XML document uses XML namespaces to distinguish between identically named members.</span></span> <span data-ttu-id="aeb33-209">Дополнительные сведения об использовании пространства имен и имен с префиксами в документе XML см. в разделе <xref:System.Xml.Serialization.XmlSerializerNamespaces> класса.</span><span class="sxs-lookup"><span data-stu-id="aeb33-209">For details about how to use namespaces and prefixed names in the XML document, see the <xref:System.Xml.Serialization.XmlSerializerNamespaces> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aeb33-210">В следующем примере задается <xref:System.Xml.Serialization.XmlArrayItemAttribute.ElementName%2A> свойство `Vehicle` и `Car` класса--тем самым изменив имена элементов XML, <xref:System.Xml.Serialization.XmlSerializer> приводит к возникновению ошибки для этих классов.</span><span class="sxs-lookup"><span data-stu-id="aeb33-210">The following example sets the <xref:System.Xml.Serialization.XmlArrayItemAttribute.ElementName%2A> property for the `Vehicle` and `Car` class--thereby changing the names of XML elements that the <xref:System.Xml.Serialization.XmlSerializer> generates for those classes.</span></span>  
  
 [!code-cpp[Classic XmlArrayItemAttribute.ElementName Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.ElementName Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlArrayItemAttribute.ElementName Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.ElementName Example/CS/source.cs#1)]
 [!code-vb[Classic XmlArrayItemAttribute.ElementName Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.ElementName Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Form">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchemaForm Form { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.Schema.XmlSchemaForm Form" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlArrayItemAttribute.Form" />
      <MemberSignature Language="VB.NET" Value="Public Property Form As XmlSchemaForm" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Schema::XmlSchemaForm Form { System::Xml::Schema::XmlSchemaForm get(); void set(System::Xml::Schema::XmlSchemaForm value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaForm</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="aeb33-211">Возвращает или задает значение, которое указывает, является ли имя сгенерированного элемента XML полным.</span><span class="sxs-lookup"><span data-stu-id="aeb33-211">Gets or sets a value that indicates whether the name of the generated XML element is qualified.</span></span></summary>
        <value><span data-ttu-id="aeb33-212">Одно из значений перечисления <see cref="T:System.Xml.Schema.XmlSchemaForm" />.</span><span class="sxs-lookup"><span data-stu-id="aeb33-212">One of the <see cref="T:System.Xml.Schema.XmlSchemaForm" /> values.</span></span> <span data-ttu-id="aeb33-213">Значение по умолчанию: <see langword="XmlSchemaForm.None" />.</span><span class="sxs-lookup"><span data-stu-id="aeb33-213">The default is <see langword="XmlSchemaForm.None" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aeb33-214"><xref:System.Xml.Serialization.XmlAttributeAttribute.Form%2A> Свойство определяет, является ли имя элемента XML полным, на основе спецификации консорциума World Wide Web (www.w3.org) «Namespaces in XML».</span><span class="sxs-lookup"><span data-stu-id="aeb33-214">The <xref:System.Xml.Serialization.XmlAttributeAttribute.Form%2A> property determines whether an XML element name is qualified, based on the World Wide Web Consortium (www.w3.org) specification "Namespaces in XML."</span></span>  
  
 <span data-ttu-id="aeb33-215">Если <xref:System.Xml.Serialization.XmlAttributeAttribute.Namespace%2A> задано любое значение, попытка задать <xref:System.Xml.Serialization.XmlElementAttribute.Form%2A> свойства `XmlSchemaForm.Unqualified` приводит к возникновению исключения.</span><span class="sxs-lookup"><span data-stu-id="aeb33-215">If the <xref:System.Xml.Serialization.XmlAttributeAttribute.Namespace%2A> property is set to any value, attempting to set the <xref:System.Xml.Serialization.XmlElementAttribute.Form%2A> property to `XmlSchemaForm.Unqualified` throws an exception.</span></span>  
  
 <span data-ttu-id="aeb33-216">Значение по умолчанию `XmlSchemaForm.None`, указывает, что <xref:System.Xml.Serialization.XmlSerializer> для проверки схемы для XML-документа определить, является ли пространство имен полным.</span><span class="sxs-lookup"><span data-stu-id="aeb33-216">The default value, `XmlSchemaForm.None`, instructs the <xref:System.Xml.Serialization.XmlSerializer> to check the schema for the XML document to determine whether the namespace is qualified.</span></span> <span data-ttu-id="aeb33-217">Для элементов <xref:System.Xml.Serialization.XmlSerializer> проверяет значение атрибута элемента схемы `elementFormDefault`.</span><span class="sxs-lookup"><span data-stu-id="aeb33-217">For elements, the <xref:System.Xml.Serialization.XmlSerializer> checks the value of the schema-element attribute `elementFormDefault`.</span></span> <span data-ttu-id="aeb33-218">Для атрибутов, он проверяет значение атрибута элемента схемы `attributeFormDefault`.</span><span class="sxs-lookup"><span data-stu-id="aeb33-218">For attributes, it checks the value of the schema-element attribute `attributeFormDefault`.</span></span> <span data-ttu-id="aeb33-219">Например, следующая схема XML указывает, что `Name` элемент квалификатор, пока `Number` элемент является неполным.</span><span class="sxs-lookup"><span data-stu-id="aeb33-219">For example, the following XML Schema indicates that the `Name` element is qualified, while the `Number` element is unqualified.</span></span>  
  
```  
<schema elementFormDefault="qualified"   
attributeFormDefault="unqualified">  
   <element name="Name"/>  
   <attribute name="Number"/>  
</schema>  
```  
  
   
  
## Examples  
 <span data-ttu-id="aeb33-220">В следующем примере задается <xref:System.Xml.Serialization.XmlArrayItemAttribute.Form%2A> свойство `Vehicle` класса `XmlSchemaForm.Unqualified`и <xref:System.Xml.Serialization.XmlArrayItemAttribute.Form%2A> свойство для `Car` класса `XmlSchemaForm.Qualified`.</span><span class="sxs-lookup"><span data-stu-id="aeb33-220">The following example sets the <xref:System.Xml.Serialization.XmlArrayItemAttribute.Form%2A> property for the `Vehicle` class to `XmlSchemaForm.Unqualified`, and the <xref:System.Xml.Serialization.XmlArrayItemAttribute.Form%2A> property for the `Car` class to `XmlSchemaForm.Qualified`.</span></span>  
  
 [!code-cpp[Classic XmlArrayItemAttribute.Form Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.Form Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlArrayItemAttribute.Form Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.Form Example/CS/source.cs#1)]
 [!code-vb[Classic XmlArrayItemAttribute.Form Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.Form Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception"><span data-ttu-id="aeb33-221">Свойство <see cref="P:System.Xml.Serialization.XmlArrayItemAttribute.Form" /> имеет значение <see langword="XmlSchemaForm.Unqualified" />, а свойство <see cref="P:System.Xml.Serialization.XmlArrayItemAttribute.Namespace" /> задано.</span><span class="sxs-lookup"><span data-stu-id="aeb33-221">The <see cref="P:System.Xml.Serialization.XmlArrayItemAttribute.Form" /> property is set to <see langword="XmlSchemaForm.Unqualified" /> and a <see cref="P:System.Xml.Serialization.XmlArrayItemAttribute.Namespace" /> value is specified.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsNullable">
      <MemberSignature Language="C#" Value="public bool IsNullable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNullable" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlArrayItemAttribute.IsNullable" />
      <MemberSignature Language="VB.NET" Value="Public Property IsNullable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsNullable { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="aeb33-222">Получает или задает значение, которое показывает, должен ли <see cref="T:System.Xml.Serialization.XmlSerializer" /> выполнить сериализацию члена как пустого тега XML с атрибутом <see langword="xsi:nil" />, для которого установлено значение <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="aeb33-222">Gets or sets a value that indicates whether the <see cref="T:System.Xml.Serialization.XmlSerializer" /> must serialize a member as an empty XML tag with the <see langword="xsi:nil" /> attribute set to <see langword="true" />.</span></span></summary>
        <value>
          <span data-ttu-id="aeb33-223"><see langword="true" />, если <see cref="T:System.Xml.Serialization.XmlSerializer" /> генерирует атрибут <see langword="xsi:nil" />, в противном случае <see langword="false" />, а экземпляр не генерируется.</span><span class="sxs-lookup"><span data-stu-id="aeb33-223"><see langword="true" /> if the <see cref="T:System.Xml.Serialization.XmlSerializer" /> generates the <see langword="xsi:nil" /> attribute; otherwise, <see langword="false" />, and no instance is generated.</span></span> <span data-ttu-id="aeb33-224">Значение по умолчанию: <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="aeb33-224">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aeb33-225">Спецификация схемы XML для структур позволяет явным образом указывать, что отсутствует содержимое элемента в XML-документа.</span><span class="sxs-lookup"><span data-stu-id="aeb33-225">The XML schema specification for structures allows an XML document to explicitly signal that an element's content is missing.</span></span> <span data-ttu-id="aeb33-226">Такой элемент содержит атрибут `xsi:nil` значение `true`.</span><span class="sxs-lookup"><span data-stu-id="aeb33-226">Such an element contains the attribute `xsi:nil` set to `true`.</span></span> <span data-ttu-id="aeb33-227">Дополнительные сведения см. в спецификации консорциума World Wide Web (www.w3.org) под названием «схема XML, часть 1: структуры.»</span><span class="sxs-lookup"><span data-stu-id="aeb33-227">For more information, see the World Wide Web Consortium (www.w3.org) specification titled "XML Schema Part 1: Structures."</span></span>  
  
 <span data-ttu-id="aeb33-228">Если <xref:System.Xml.Serialization.XmlArrayItemAttribute.IsNullable%2A> свойство `true`, `xsi:nil` атрибут создается для членов класса, имеющих значение `null`.</span><span class="sxs-lookup"><span data-stu-id="aeb33-228">If the <xref:System.Xml.Serialization.XmlArrayItemAttribute.IsNullable%2A> property is `true`, the `xsi:nil` attribute is generated for class members that have been set to `null`.</span></span> <span data-ttu-id="aeb33-229">Например, если значение поля с именем `MyStringArray` для `null`, <xref:System.Xml.Serialization.XmlSerializer> создает следующий код XML.</span><span class="sxs-lookup"><span data-stu-id="aeb33-229">For example, if you set a field named `MyStringArray` to `null`, the <xref:System.Xml.Serialization.XmlSerializer> generates the following XML code.</span></span>  
  
```  
<MyStringArray xsi:nil = "true" />  
```  
  
 <span data-ttu-id="aeb33-230">Если <xref:System.Xml.Serialization.XmlArrayItemAttribute.IsNullable%2A> свойство `false`, формирование элемента не XML.</span><span class="sxs-lookup"><span data-stu-id="aeb33-230">If the <xref:System.Xml.Serialization.XmlArrayItemAttribute.IsNullable%2A> property is `false`, no XML element is generated.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="aeb33-231">Не удается применить <xref:System.Xml.Serialization.XmlArrayItemAttribute.IsNullable%2A> свойство члену имеющему тип значения, потому что тип значения не может содержать `null`.</span><span class="sxs-lookup"><span data-stu-id="aeb33-231">You cannot apply the <xref:System.Xml.Serialization.XmlArrayItemAttribute.IsNullable%2A> property to a member typed as a value type because a value type cannot contain `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aeb33-232">В следующем примере сериализуется класс с именем `Group`, которая содержит поле с именем `Employees` , возвращающий массив `Employee` объектов.</span><span class="sxs-lookup"><span data-stu-id="aeb33-232">The following example serializes a class named `Group`, which contains a field named `Employees` that returns an array of `Employee` objects.</span></span> <span data-ttu-id="aeb33-233">Второй класс с именем `Manager` является производным от `Employee`.</span><span class="sxs-lookup"><span data-stu-id="aeb33-233">A second class named `Manager` derives from `Employee`.</span></span> <span data-ttu-id="aeb33-234"><xref:System.Xml.Serialization.XmlArrayItemAttribute> Указывает, что <xref:System.Xml.Serialization.XmlSerializer> можно вставить оба `Employee` и `Manager` объекты в массиве.</span><span class="sxs-lookup"><span data-stu-id="aeb33-234">An <xref:System.Xml.Serialization.XmlArrayItemAttribute> specifies that the <xref:System.Xml.Serialization.XmlSerializer> can insert both `Employee` and `Manager` objects into the array.</span></span> <span data-ttu-id="aeb33-235">В примере устанавливается <xref:System.Xml.Serialization.XmlArrayItemAttribute.IsNullable%2A> свойства, поэтому <xref:System.Xml.Serialization.XmlSerializer> не для создания `xsi:nil` атрибутов объектов в массиве равно `null`.</span><span class="sxs-lookup"><span data-stu-id="aeb33-235">The example sets the <xref:System.Xml.Serialization.XmlArrayItemAttribute.IsNullable%2A> property, thereby telling the <xref:System.Xml.Serialization.XmlSerializer> not to generate the `xsi:nil` attribute objects in the array set to `null`.</span></span>  
  
 [!code-cpp[Classic XmlArrayItemAttribute.IsNullable Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.IsNullable Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlArrayItemAttribute.IsNullable Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.IsNullable Example/CS/source.cs#1)]
 [!code-vb[Classic XmlArrayItemAttribute.IsNullable Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.IsNullable Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Namespace">
      <MemberSignature Language="C#" Value="public string Namespace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Namespace" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlArrayItemAttribute.Namespace" />
      <MemberSignature Language="VB.NET" Value="Public Property Namespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Namespace { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="aeb33-236">Возвращает или задает пространство имен сгенерированного элемента XML.</span><span class="sxs-lookup"><span data-stu-id="aeb33-236">Gets or sets the namespace of the generated XML element.</span></span></summary>
        <value><span data-ttu-id="aeb33-237">Пространство имен сгенерированного элемента XML.</span><span class="sxs-lookup"><span data-stu-id="aeb33-237">The namespace of the generated XML element.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aeb33-238"><xref:System.Xml.Serialization.XmlArrayItemAttribute.Namespace%2A> Свойства соответствует спецификации консорциума World Wide Web (www.w3.org) «Namespaces in XML».</span><span class="sxs-lookup"><span data-stu-id="aeb33-238">The <xref:System.Xml.Serialization.XmlArrayItemAttribute.Namespace%2A> property conforms to the World Wide Web Consortium (www.w3.org) specification "Namespaces in XML."</span></span>  
  
 <span data-ttu-id="aeb33-239">Для создания пространства имен для использования в XML-документа и связанных с ними префиксов, необходимо создать <xref:System.Xml.Serialization.XmlSerializerNamespaces> , содержащий все пары префиксов и пространств имен.</span><span class="sxs-lookup"><span data-stu-id="aeb33-239">To create namespaces to use in the XML document and associated prefixes, you must create an <xref:System.Xml.Serialization.XmlSerializerNamespaces> that contains all the prefix and namespace pairs.</span></span> <span data-ttu-id="aeb33-240">Пространство имен, задаваемое для каждого <xref:System.Xml.Serialization.XmlArrayAttribute> должны содержаться в <xref:System.Xml.Serialization.XmlSerializerNamespaces>.</span><span class="sxs-lookup"><span data-stu-id="aeb33-240">The namespace you set for each <xref:System.Xml.Serialization.XmlArrayAttribute> must be contained in the <xref:System.Xml.Serialization.XmlSerializerNamespaces>.</span></span> <span data-ttu-id="aeb33-241">Когда <xref:System.Xml.Serialization.XmlSerializer> создает документ, он должен иметь правильный префикс имя элемента для каждого элемента массива.</span><span class="sxs-lookup"><span data-stu-id="aeb33-241">When the <xref:System.Xml.Serialization.XmlSerializer> generates the document, it correctly prefixes the element name for each array item.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aeb33-242">В следующем примере применяется <xref:System.Xml.Serialization.XmlArrayItemAttribute> и задает <xref:System.Xml.Serialization.XmlArrayItemAttribute.Namespace%2A> свойства.</span><span class="sxs-lookup"><span data-stu-id="aeb33-242">The following example applies an <xref:System.Xml.Serialization.XmlArrayItemAttribute> and sets the <xref:System.Xml.Serialization.XmlArrayItemAttribute.Namespace%2A> property.</span></span>  
  
 [!code-cpp[Classic XmlArrayItemAttribute.Namespace Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.Namespace Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlArrayItemAttribute.Namespace Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.Namespace Example/CS/source.cs#1)]
 [!code-vb[Classic XmlArrayItemAttribute.Namespace Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.Namespace Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NestingLevel">
      <MemberSignature Language="C#" Value="public int NestingLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 NestingLevel" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlArrayItemAttribute.NestingLevel" />
      <MemberSignature Language="VB.NET" Value="Public Property NestingLevel As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int NestingLevel { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="aeb33-243">Возвращает или задает уровень в иерархии элементов XML, на который воздействует <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" />.</span><span class="sxs-lookup"><span data-stu-id="aeb33-243">Gets or sets the level in a hierarchy of XML elements that the <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> affects.</span></span></summary>
        <value><span data-ttu-id="aeb33-244">Индекс, начинающийся с нуля, набора индексов в массиве массивов.</span><span class="sxs-lookup"><span data-stu-id="aeb33-244">The zero-based index of a set of indexes in an array of arrays.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aeb33-245">XML-документа может содержать иерархии элементов XML.</span><span class="sxs-lookup"><span data-stu-id="aeb33-245">An XML document can contain hierarchies of XML elements.</span></span> <span data-ttu-id="aeb33-246">Для представления такой иерархии используется массив массивов.</span><span class="sxs-lookup"><span data-stu-id="aeb33-246">To represent such a hierarchy, an array of arrays is used.</span></span> <span data-ttu-id="aeb33-247">В таком массиве каждый индекс представляет уровень в иерархии.</span><span class="sxs-lookup"><span data-stu-id="aeb33-247">In such an array, each index represents a level in the hierarchy.</span></span> <span data-ttu-id="aeb33-248">Таким образом <xref:System.Xml.Serialization.XmlArrayItemAttribute.NestingLevel%2A> свойство используется только при применении <xref:System.Xml.Serialization.XmlArrayItemAttribute> полю, которое возвращает массив массивов.</span><span class="sxs-lookup"><span data-stu-id="aeb33-248">Therefore, the <xref:System.Xml.Serialization.XmlArrayItemAttribute.NestingLevel%2A> property is only used when applying an <xref:System.Xml.Serialization.XmlArrayItemAttribute> to a field that returns an array of arrays.</span></span>  
  
 <span data-ttu-id="aeb33-249">При применении атрибута, указать, какой уровень иерархии, атрибут влияет, задав <xref:System.Xml.Serialization.XmlArrayItemAttribute.NestingLevel%2A>.</span><span class="sxs-lookup"><span data-stu-id="aeb33-249">When applying the attribute, specify which hierarchy level the attribute affects by setting the <xref:System.Xml.Serialization.XmlArrayItemAttribute.NestingLevel%2A>.</span></span> <span data-ttu-id="aeb33-250">Первый индекс всегда имеет значение 0; Поэтому он является необязательным для задания его <xref:System.Xml.Serialization.XmlArrayItemAttribute.NestingLevel%2A> -- <xref:System.Xml.Serialization.XmlArrayItemAttribute> без <xref:System.Xml.Serialization.XmlArrayItemAttribute.NestingLevel%2A> применяется значение первого индекса массива.</span><span class="sxs-lookup"><span data-stu-id="aeb33-250">The first index always has the value of 0; therefore it is optional to set its <xref:System.Xml.Serialization.XmlArrayItemAttribute.NestingLevel%2A> --an <xref:System.Xml.Serialization.XmlArrayItemAttribute> without a <xref:System.Xml.Serialization.XmlArrayItemAttribute.NestingLevel%2A> value is applied to the first array index.</span></span> <span data-ttu-id="aeb33-251">Только последующие <xref:System.Xml.Serialization.XmlArrayItemAttribute> объектов требуется <xref:System.Xml.Serialization.XmlArrayItemAttribute.NestingLevel%2A> значения (например, 1, 2, 3 и т. д.).</span><span class="sxs-lookup"><span data-stu-id="aeb33-251">Only the subsequent <xref:System.Xml.Serialization.XmlArrayItemAttribute> objects require <xref:System.Xml.Serialization.XmlArrayItemAttribute.NestingLevel%2A> values specified (as 1, 2, 3, and so forth).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aeb33-252">В следующем примере применяется три <xref:System.Xml.Serialization.XmlArrayItemAttribute> атрибуты массив массивов.</span><span class="sxs-lookup"><span data-stu-id="aeb33-252">The following example applies three <xref:System.Xml.Serialization.XmlArrayItemAttribute> attributes to an array of arrays.</span></span> <span data-ttu-id="aeb33-253">Чтобы указать, какие из массивов каждый атрибут, применяется <xref:System.Xml.Serialization.XmlArrayItemAttribute.NestingLevel%2A> свойству индекс массивов.</span><span class="sxs-lookup"><span data-stu-id="aeb33-253">To specify which of the arrays each attribute applies to, the <xref:System.Xml.Serialization.XmlArrayItemAttribute.NestingLevel%2A> property is set to the index of the arrays.</span></span>  
  
 [!code-cpp[NestingLevel#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NestingLevel/cpp/nestinglevel.cpp#1)]
 [!code-csharp[NestingLevel#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NestingLevel/CS/nestinglevel.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public Type Type { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type Type" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlArrayItemAttribute.Type" />
      <MemberSignature Language="VB.NET" Value="Public Property Type As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ Type { Type ^ get(); void set(Type ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="aeb33-254">Возвращает или задает тип, допустимый в массиве.</span><span class="sxs-lookup"><span data-stu-id="aeb33-254">Gets or sets the type allowed in an array.</span></span></summary>
        <value><span data-ttu-id="aeb33-255"><see cref="T:System.Type" />, допустимый в массиве.</span><span class="sxs-lookup"><span data-stu-id="aeb33-255">A <see cref="T:System.Type" /> that is allowed in the array.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aeb33-256">Используйте <xref:System.Xml.Serialization.XmlElementAttribute.Type%2A> свойство, чтобы указать переопределяемого типа для открытого поля или значения свойства чтения/записи.</span><span class="sxs-lookup"><span data-stu-id="aeb33-256">Use the <xref:System.Xml.Serialization.XmlElementAttribute.Type%2A> property to specify an overridden type for a public field or public read/write property value.</span></span>  
  
 <span data-ttu-id="aeb33-257">Если поле или свойство возвращает массив объектов типа <xref:System.Object>, применить несколько экземпляров <xref:System.Xml.Serialization.XmlArrayItemAttribute> к полю или свойству.</span><span class="sxs-lookup"><span data-stu-id="aeb33-257">If a field or property returns an array of type <xref:System.Object>, apply multiple instances of the <xref:System.Xml.Serialization.XmlArrayItemAttribute> to the field or property.</span></span> <span data-ttu-id="aeb33-258">Для каждого экземпляра, установите <xref:System.Xml.Serialization.XmlElementAttribute.Type%2A> свойство с типом объекта, который может быть вставлен в массив.</span><span class="sxs-lookup"><span data-stu-id="aeb33-258">For each instance, set the <xref:System.Xml.Serialization.XmlElementAttribute.Type%2A> property to a type of object that can be inserted into the array.</span></span>  
  
 <span data-ttu-id="aeb33-259">Если массив содержит только типы-примитивы, необходимо применить <xref:System.Xml.Serialization.XmlArrayItemAttribute>.</span><span class="sxs-lookup"><span data-stu-id="aeb33-259">If an array contains only primitive types, you do not need to apply the <xref:System.Xml.Serialization.XmlArrayItemAttribute>.</span></span> <span data-ttu-id="aeb33-260">По умолчанию <xref:System.Xml.Serialization.XmlSerializer> создает набор элементов, каждый с тем же именем элемента для каждого значения, но тип каждого элемента имеет значение типа данных схемы XML.</span><span class="sxs-lookup"><span data-stu-id="aeb33-260">By default, the <xref:System.Xml.Serialization.XmlSerializer> generates a series of elements, each with the same element name, for each value, but the type of each element is set to the XML Schema data type.</span></span> <span data-ttu-id="aeb33-261">Например, приведенный ниже код</span><span class="sxs-lookup"><span data-stu-id="aeb33-261">For example, the following code:</span></span>  
  
```  
' Visual Basic code  
Public Class Arrays  
   Public XSDTypes ()As Object= New Object(){"one", 2, 3.0}  
End Class  
// C# code  
public class MyArray{  
   // No XmlArrayItemAttribute is applied.  
   public object[] XSDTypes= new object[]{"one", 2, 3.2};  
}  
```  
  
 <span data-ttu-id="aeb33-262">результаты в этот XML-код:</span><span class="sxs-lookup"><span data-stu-id="aeb33-262">results in this XML:</span></span>  
  
```  
<?xml version="1.0" encoding="utf-8"?>  
<Arrays xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">  
  <XSDTypes>  
    <Object xsi:type="xsd:string">one</Object>  
    <Object xsi:type="xsd:int">2</Object>  
    <Object xsi:type="xsd:double">3</Object>  
  </XSDTypes>  
</Arrays>  
```  
  
 <span data-ttu-id="aeb33-263">Тем не менее при указании <xref:System.Xml.Serialization.XmlArrayItemAttribute.Type%2A> свойство для каждого типа-примитива, имя элемента для каждого значения создается с использованием имени типа .NET.</span><span class="sxs-lookup"><span data-stu-id="aeb33-263">However, if you specify the <xref:System.Xml.Serialization.XmlArrayItemAttribute.Type%2A> property for each primitive type, the element name for each value is generated using the .NET type name.</span></span> <span data-ttu-id="aeb33-264">Например следующий код:</span><span class="sxs-lookup"><span data-stu-id="aeb33-264">For example this code:</span></span>  
  
```  
' Visual Basic code  
Public Class Arrays  
   <XmlArrayItem(GetType(String)), _  
   XmlArrayItem(GetType(Integer)), _  
   XmlArrayItem(GetType(Double))> _  
   Public PrimitiveTypes () As Object = New Object(){"one", 2, 3.0}  
End Class  
// C# code  
public class Arrays{  
   [XmlArrayItem(typeof(string))]  
   [XmlArrayItem(typeof(int))]  
   [XmlArrayItem(typeof(double))]  
   public object [] PrimitiveTypes = new object[]{"one", 2, 3.0};  
}  
```  
  
 <span data-ttu-id="aeb33-265">результаты в этот XML-код:</span><span class="sxs-lookup"><span data-stu-id="aeb33-265">results in this XML:</span></span>  
  
```  
<?xml version="1.0" encoding="utf-8"?>  
<Arrays xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">  
  <PrimitiveTypes>  
    <string>one</string>  
    <int>2</int>  
    <double>3</double>  
  </PrimitiveTypes>  
</Arrays>  
```  
  
   
  
## Examples  
 <span data-ttu-id="aeb33-266">В следующем примере сериализуется в массив объектов.</span><span class="sxs-lookup"><span data-stu-id="aeb33-266">The following example serializes an array of objects.</span></span> <span data-ttu-id="aeb33-267">Поле, возвращающее массив применяется два <xref:System.Xml.Serialization.XmlArrayItemAttribute> экземпляров.</span><span class="sxs-lookup"><span data-stu-id="aeb33-267">The field that returns the array is attributed with two <xref:System.Xml.Serialization.XmlArrayItemAttribute> instances.</span></span> <span data-ttu-id="aeb33-268">Указывает, что каждый экземпляр <xref:System.Xml.Serialization.XmlSerializer> для принятия указанного <xref:System.Xml.Serialization.XmlArrayItemAttribute.Type%2A> в массиве.</span><span class="sxs-lookup"><span data-stu-id="aeb33-268">Each instance instructs the <xref:System.Xml.Serialization.XmlSerializer> to accept the specified <xref:System.Xml.Serialization.XmlArrayItemAttribute.Type%2A> in the array.</span></span>  
  
 [!code-cpp[Classic XmlArrayItemAttribute.Type Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.Type Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlArrayItemAttribute.Type Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.Type Example/CS/source.cs#1)]
 [!code-vb[Classic XmlArrayItemAttribute.Type Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.Type Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>