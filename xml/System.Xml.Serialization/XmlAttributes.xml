<Type Name="XmlAttributes" FullName="System.Xml.Serialization.XmlAttributes">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="edc9671be617b74dce18228bd8abdf746446c9c8" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30720988" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class XmlAttributes" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlAttributes extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Serialization.XmlAttributes" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlAttributes" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlAttributes" />
  <AssemblyInfo>
    <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="30173-101">Представление коллекции объектов атрибутов, управляющих сериализацией и десериализацией объекта с помощью <see cref="T:System.Xml.Serialization.XmlSerializer" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="30173-101">Represents a collection of attribute objects that control how the <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializes and deserializes an object.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="30173-102">Создание <xref:System.Xml.Serialization.XmlAttributes> является частью процесса, который переопределяет значение по умолчанию, каким образом <xref:System.Xml.Serialization.XmlSerializer> сериализует экземпляры класса.</span><span class="sxs-lookup"><span data-stu-id="30173-102">Creating the <xref:System.Xml.Serialization.XmlAttributes> is part of a process that overrides the default way the <xref:System.Xml.Serialization.XmlSerializer> serializes class instances.</span></span> <span data-ttu-id="30173-103">Например предположим, что необходимо сериализовать объект, созданный из библиотеки DLL, которая имеет недоступный источник.</span><span class="sxs-lookup"><span data-stu-id="30173-103">For example, suppose you want to serialize an object that is created from a DLL which has an inaccessible source.</span></span> <span data-ttu-id="30173-104">С помощью <xref:System.Xml.Serialization.XmlAttributeOverrides>, можно расширить или управлять сериализацией объекта.</span><span class="sxs-lookup"><span data-stu-id="30173-104">By using the <xref:System.Xml.Serialization.XmlAttributeOverrides>, you can augment or otherwise control how the object is serialized.</span></span>  
  
 <span data-ttu-id="30173-105">Члены <xref:System.Xml.Serialization.XmlAttributes> класса напрямую соответствуют семейству классов атрибутов, которые управляют сериализацией.</span><span class="sxs-lookup"><span data-stu-id="30173-105">The members of the <xref:System.Xml.Serialization.XmlAttributes> class correspond directly to a family of attribute classes that control serialization.</span></span> <span data-ttu-id="30173-106">Например <xref:System.Xml.Serialization.XmlAttributes.XmlText%2A> свойству необходимо присвоить значение <xref:System.Xml.Serialization.XmlTextAttribute>, позволяет переопределить сериализацию поля или свойства, предписывая <xref:System.Xml.Serialization.XmlSerializer> для сериализации значения свойства как XML-текст.</span><span class="sxs-lookup"><span data-stu-id="30173-106">For example, the <xref:System.Xml.Serialization.XmlAttributes.XmlText%2A> property must be set to an <xref:System.Xml.Serialization.XmlTextAttribute>, which allows you to override serialization of a field or property by instructing the <xref:System.Xml.Serialization.XmlSerializer> to serialize the property value as XML text.</span></span> <span data-ttu-id="30173-107">Полный список атрибутов, которые управляют сериализацией см. в разделе <xref:System.Xml.Serialization.XmlSerializer>.</span><span class="sxs-lookup"><span data-stu-id="30173-107">For a complete list of attributes that control serialization, see the <xref:System.Xml.Serialization.XmlSerializer>.</span></span>  
  
 <span data-ttu-id="30173-108">Дополнительные сведения об использовании <xref:System.Xml.Serialization.XmlAttributeOverrides> с <xref:System.Xml.Serialization.XmlAttributes> см. в описании [как: укажите альтернативное имя элемента для XML-поток](~/docs/standard/serialization/how-to-specify-an-alternate-element-name-for-an-xml-stream.md).</span><span class="sxs-lookup"><span data-stu-id="30173-108">For more details on using the <xref:System.Xml.Serialization.XmlAttributeOverrides> with the <xref:System.Xml.Serialization.XmlAttributes> class, see [How to: Specify an Alternate Element Name for an XML Stream](~/docs/standard/serialization/how-to-specify-an-alternate-element-name-for-an-xml-stream.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="30173-109">В следующем примере сериализуется экземпляр класса с именем `Orchestra`, который содержит одно поле с именем `Instruments` , возвращающий массив `Instrument` объектов.</span><span class="sxs-lookup"><span data-stu-id="30173-109">The following example serializes an instance of a class named `Orchestra`, which contains a single field named `Instruments` that returns an array of `Instrument` objects.</span></span> <span data-ttu-id="30173-110">Второй класс с именем `Brass` наследует от `Instrument` класса.</span><span class="sxs-lookup"><span data-stu-id="30173-110">A second class named `Brass` inherits from the `Instrument` class.</span></span> <span data-ttu-id="30173-111">В примере создается <xref:System.Xml.Serialization.XmlAttributes> для переопределения `Instrument` поле--позволяет полю принимать `Brass` объектов--и добавляет <xref:System.Xml.Serialization.XmlAttributes> объект в экземпляр <xref:System.Xml.Serialization.XmlAttributeOverrides> класса.</span><span class="sxs-lookup"><span data-stu-id="30173-111">The example creates an <xref:System.Xml.Serialization.XmlAttributes> object to override the `Instrument` field--allowing the field to accept `Brass` objects--and adds the <xref:System.Xml.Serialization.XmlAttributes> object to an instance of the <xref:System.Xml.Serialization.XmlAttributeOverrides> class.</span></span>  
  
 [!code-cpp[Classic XmlAttributes.XmlAttributes Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlAttributes.XmlAttributes Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlAttributes.XmlAttributes Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlAttributes.XmlAttributes Example/CS/source.cs#1)]
 [!code-vb[Classic XmlAttributes.XmlAttributes Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlAttributes.XmlAttributes Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xml.Serialization.XmlAttributeOverrides" />
    <altmember cref="T:System.Xml.Serialization.XmlSerializer" />
    <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="30173-112">Инициализирует новый экземпляр класса <see cref="T:System.Xml.Serialization.XmlAttributes" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30173-112">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlAttributes" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlAttributes ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlAttributes.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlAttributes();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="30173-113">Инициализирует новый экземпляр класса <see cref="T:System.Xml.Serialization.XmlAttributes" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30173-113">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlAttributes" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="30173-114">В следующем примере сериализуется экземпляр класса с именем `Orchestra`, который содержит одно поле с именем `Instruments` , возвращающий массив `Instrument` объектов.</span><span class="sxs-lookup"><span data-stu-id="30173-114">The following example serializes an instance of a class named `Orchestra`, which contains a single field named `Instruments` that returns an array of `Instrument` objects.</span></span> <span data-ttu-id="30173-115">Второй класс с именем `Brass` наследует от `Instrument` класса.</span><span class="sxs-lookup"><span data-stu-id="30173-115">A second class named `Brass` inherits from the `Instrument` class.</span></span> <span data-ttu-id="30173-116">В примере создается <xref:System.Xml.Serialization.XmlAttributes> для переопределения `Instrument` поле--позволяет полю принимать `Brass` объектов--и добавляет <xref:System.Xml.Serialization.XmlAttributes> объект в экземпляр <xref:System.Xml.Serialization.XmlAttributeOverrides> класса.</span><span class="sxs-lookup"><span data-stu-id="30173-116">The example creates an <xref:System.Xml.Serialization.XmlAttributes> object to override the `Instrument` field--allowing the field to accept `Brass` objects--and adds the <xref:System.Xml.Serialization.XmlAttributes> object to an instance of the <xref:System.Xml.Serialization.XmlAttributeOverrides> class.</span></span>  
  
 [!code-cpp[Classic XmlAttributes.XmlAttributes Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlAttributes.XmlAttributes Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlAttributes.XmlAttributes Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlAttributes.XmlAttributes Example/CS/source.cs#1)]
 [!code-vb[Classic XmlAttributes.XmlAttributes Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlAttributes.XmlAttributes Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlAttributes (System.Reflection.ICustomAttributeProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Reflection.ICustomAttributeProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlAttributes.#ctor(System.Reflection.ICustomAttributeProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (provider As ICustomAttributeProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlAttributes(System::Reflection::ICustomAttributeProvider ^ provider);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="provider" Type="System.Reflection.ICustomAttributeProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="30173-117">Класс, представляющий альтернативный вариант реализации атрибутов, управляющих сериализацией XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30173-117">A class that can provide alternative implementations of attributes that control XML serialization.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="30173-118">Инициализация нового экземпляра класса <see cref="T:System.Xml.Serialization.XmlAttributes" /> и настройка сериализации и десериализации объекта с помощью <see cref="T:System.Xml.Serialization.XmlSerializer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30173-118">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlAttributes" /> class and customizes how the <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializes and deserializes an object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="30173-119">Использовать конструктор по умолчанию для <xref:System.Xml.Serialization.XmlAttributes> класса, а не с помощью этого конструктора.</span><span class="sxs-lookup"><span data-stu-id="30173-119">Use the default constructor for the <xref:System.Xml.Serialization.XmlAttributes> class, rather than using this constructor.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlAnyAttribute">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.XmlAnyAttributeAttribute XmlAnyAttribute { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Serialization.XmlAnyAttributeAttribute XmlAnyAttribute" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAttributes.XmlAnyAttribute" />
      <MemberSignature Language="VB.NET" Value="Public Property XmlAnyAttribute As XmlAnyAttributeAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Serialization::XmlAnyAttributeAttribute ^ XmlAnyAttribute { System::Xml::Serialization::XmlAnyAttributeAttribute ^ get(); void set(System::Xml::Serialization::XmlAnyAttributeAttribute ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlAnyAttributeAttribute</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="30173-120">Получает или задает <see cref="T:System.Xml.Serialization.XmlAnyAttributeAttribute" /> для переопределения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30173-120">Gets or sets the <see cref="T:System.Xml.Serialization.XmlAnyAttributeAttribute" /> to override.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="30173-121">
            <see cref="T:System.Xml.Serialization.XmlAnyAttributeAttribute" /> для переопределения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30173-121">The <see cref="T:System.Xml.Serialization.XmlAnyAttributeAttribute" /> to override.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="30173-122"><xref:System.Xml.Serialization.XmlAnyAttributeAttribute> Может применяться к члену, который возвращает массив <xref:System.Xml.XmlAttribute> объектов во время десериализации.</span><span class="sxs-lookup"><span data-stu-id="30173-122">The <xref:System.Xml.Serialization.XmlAnyAttributeAttribute> can be applied to a member that returns an array of <xref:System.Xml.XmlAttribute> objects on deserialization.</span></span> <span data-ttu-id="30173-123">Это позволяет <xref:System.Xml.Serialization.XmlSerializer> десериализовать любые атрибуты, у которых нет соответствующего члена в объекте десериализуемом таким образом те элементы, которые «unknown» <xref:System.Xml.Serialization.XmlSerializer>.</span><span class="sxs-lookup"><span data-stu-id="30173-123">This allows the <xref:System.Xml.Serialization.XmlSerializer> to deserialize any attributes that do not have a corresponding member in the object being deserialized--thus those elements are "unknown" to the <xref:System.Xml.Serialization.XmlSerializer>.</span></span> <span data-ttu-id="30173-124">Это полезно при изменении XML-поток с помощью XML-веб-службы, или когда известно, что случайные данные всегда включается в поток XML.</span><span class="sxs-lookup"><span data-stu-id="30173-124">This is useful when the XML stream has been altered by an XML Web service, or when it is known that random data is always included with the XML stream.</span></span>  
  
 <span data-ttu-id="30173-125"><xref:System.Xml.Serialization.XmlAttributes.XmlAnyAttribute%2A> Свойство позволяет переопределить сериализацию членов, к которым <xref:System.Xml.Serialization.XmlAnyAttributeAttribute> был применен.</span><span class="sxs-lookup"><span data-stu-id="30173-125">The <xref:System.Xml.Serialization.XmlAttributes.XmlAnyAttribute%2A> property allows you to override the serialization of a member to which the <xref:System.Xml.Serialization.XmlAnyAttributeAttribute> has been applied.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlAnyElements">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.XmlAnyElementAttributes XmlAnyElements { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Serialization.XmlAnyElementAttributes XmlAnyElements" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAttributes.XmlAnyElements" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property XmlAnyElements As XmlAnyElementAttributes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Serialization::XmlAnyElementAttributes ^ XmlAnyElements { System::Xml::Serialization::XmlAnyElementAttributes ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlAnyElementAttributes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="30173-126">Получение коллекции объектов <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> для переопределения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30173-126">Gets the collection of <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> objects to override.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="30173-127">Объект <see cref="T:System.Xml.Serialization.XmlAnyElementAttributes" />, представляющий коллекцию объектов <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30173-127">An <see cref="T:System.Xml.Serialization.XmlAnyElementAttributes" /> object that represents the collection of <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> objects.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="30173-128"><xref:System.Xml.Serialization.XmlAnyElementAttribute> Может применяться к члену, который возвращает массив <xref:System.Xml.XmlElement> объектов во время десериализации.</span><span class="sxs-lookup"><span data-stu-id="30173-128">The <xref:System.Xml.Serialization.XmlAnyElementAttribute> can be applied to a member that returns an array of <xref:System.Xml.XmlElement> objects on deserialization.</span></span> <span data-ttu-id="30173-129">Это позволяет <xref:System.Xml.Serialization.XmlSerializer> для десериализации любые элементы, которые не имеют соответствующих членов в объекте десериализуемом таким образом те элементы, которые «unknown» <xref:System.Xml.Serialization.XmlSerializer>.</span><span class="sxs-lookup"><span data-stu-id="30173-129">This allows the <xref:System.Xml.Serialization.XmlSerializer> to deserialize any elements that do not have a corresponding member in the object being deserialized--thus those elements are "unknown" to the <xref:System.Xml.Serialization.XmlSerializer>.</span></span> <span data-ttu-id="30173-130">Это полезно при изменении XML-поток с помощью XML-веб-службы, или когда известно, что случайные данные всегда включается в поток XML.</span><span class="sxs-lookup"><span data-stu-id="30173-130">This is useful when the XML stream has been altered by an XML Web service, or when it is known that random data is always included with the XML stream.</span></span>  
  
 <span data-ttu-id="30173-131"><xref:System.Xml.Serialization.XmlAttributes.XmlAnyElements%2A> Свойство позволяет переопределить сериализации члена для функционирования в качестве членов, к которым <xref:System.Xml.Serialization.XmlAnyElementAttribute> был применен.</span><span class="sxs-lookup"><span data-stu-id="30173-131">The <xref:System.Xml.Serialization.XmlAttributes.XmlAnyElements%2A> property allows you to override the serialization of a member to function as a member to which the <xref:System.Xml.Serialization.XmlAnyElementAttribute> has been applied.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="30173-132">В следующем примере создается новый <xref:System.Xml.Serialization.XmlAnyElementAttribute> объекта и добавляет его в коллекцию объектов, доступных через <xref:System.Xml.Serialization.XmlAttributes.XmlAnyElements%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="30173-132">The following example creates a new <xref:System.Xml.Serialization.XmlAnyElementAttribute> object and adds it to the collection of objects accessed through the <xref:System.Xml.Serialization.XmlAttributes.XmlAnyElements%2A> property.</span></span> <span data-ttu-id="30173-133"><xref:System.Xml.Serialization.XmlAttributes> Объект затем добавляется <xref:System.Xml.Serialization.XmlAttributeOverrides> объект, который используется для создания <xref:System.Xml.Serialization.XmlSerializer> объекта.</span><span class="sxs-lookup"><span data-stu-id="30173-133">The <xref:System.Xml.Serialization.XmlAttributes> object is then added to a <xref:System.Xml.Serialization.XmlAttributeOverrides> object which is used to create an <xref:System.Xml.Serialization.XmlSerializer> object.</span></span> <span data-ttu-id="30173-134"><xref:System.Xml.Serialization.XmlSerializer> Используется для сериализации или десериализации объекта.</span><span class="sxs-lookup"><span data-stu-id="30173-134">The <xref:System.Xml.Serialization.XmlSerializer> is used to serialize or deserialize an object.</span></span> <span data-ttu-id="30173-135">Чтобы увидеть эффект от использования <xref:System.Xml.Serialization.XmlAnyElementAttributes> свойства, создайте XML-документ с именем «UnknownElements.xml», запустив `SerializeObject` метод в `Main` метод.</span><span class="sxs-lookup"><span data-stu-id="30173-135">To see the effect of using the <xref:System.Xml.Serialization.XmlAnyElementAttributes> property, create an XML document named "UnknownElements.xml" by running the `SerializeObject` method in the `Main` method.</span></span> <span data-ttu-id="30173-136">Отредактируйте полученный документ для включения других (неизвестных) элементов.</span><span class="sxs-lookup"><span data-stu-id="30173-136">Edit the resulting document to include other (unknown) elements.</span></span> <span data-ttu-id="30173-137">Закомментируйте `SerializeObject` вызов в `Main` метода, и раскомментируйте вызов `DeserializeObject` метод, который выводит имя и значение любого неизвестного элемента XML.</span><span class="sxs-lookup"><span data-stu-id="30173-137">Comment out the `SerializeObject` call in the `Main` method, and uncomment the call to the `DeserializeObject` method, which prints out the name and value of any unknown XML element.</span></span>  
  
 [!code-cpp[XmlAttributes.XmlAnyElements#1](~/samples/snippets/cpp/VS_Snippets_Remoting/XmlAttributes.XmlAnyElements/CPP/xmlanyover.cpp#1)]
 [!code-csharp[XmlAttributes.XmlAnyElements#1](~/samples/snippets/csharp/VS_Snippets_Remoting/XmlAttributes.XmlAnyElements/CS/xmlanyover.cs#1)]
 [!code-vb[XmlAttributes.XmlAnyElements#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/XmlAttributes.XmlAnyElements/VB/xmlanyover.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xml.Serialization.XmlAttributes.XmlAnyAttribute" />
      </Docs>
    </Member>
    <Member MemberName="XmlArray">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.XmlArrayAttribute XmlArray { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Serialization.XmlArrayAttribute XmlArray" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAttributes.XmlArray" />
      <MemberSignature Language="VB.NET" Value="Public Property XmlArray As XmlArrayAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Serialization::XmlArrayAttribute ^ XmlArray { System::Xml::Serialization::XmlArrayAttribute ^ get(); void set(System::Xml::Serialization::XmlArrayAttribute ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlArrayAttribute</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="30173-138">Получает или задает объект, задающий сериализацию с помощью <see cref="T:System.Xml.Serialization.XmlSerializer" /> для открытого поля или свойства чтения/записи, которое возвращает массив.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30173-138">Gets or sets an object that specifies how the <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializes a public field or read/write property that returns an array.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="30173-139">
            <see cref="T:System.Xml.Serialization.XmlArrayAttribute" />, задающий сериализацию с помощью <see cref="T:System.Xml.Serialization.XmlSerializer" /> для открытого поля или свойства чтения/записи, которое возвращает массив.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30173-139">An <see cref="T:System.Xml.Serialization.XmlArrayAttribute" /> that specifies how the <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializes a public field or read/write property that returns an array.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="30173-140">Существует два способа, в которых открытое поле или свойство чтения/записи, возвращающее массив сериализуется <xref:System.Xml.Serialization.XmlSerializer>: сериализации по умолчанию и управляемая сериализация.</span><span class="sxs-lookup"><span data-stu-id="30173-140">There are two ways in which a public field or public read/write property that returns an array is serialized by the <xref:System.Xml.Serialization.XmlSerializer>: the default serialization, and the controlled serialization.</span></span>  
  
 <span data-ttu-id="30173-141">При сериализации по умолчанию отсутствует атрибут применяется к элементу.</span><span class="sxs-lookup"><span data-stu-id="30173-141">In the default serialization, no attribute is applied to the member.</span></span> <span data-ttu-id="30173-142">При сериализации массив сериализуется как вложенная последовательность элементов XML с именем элемента XML вложенной последовательности берется из имени элемента.</span><span class="sxs-lookup"><span data-stu-id="30173-142">When serialized, the array is serialized as a nested sequence of XML elements with the XML element name of the nested sequence taken from the member name.</span></span>  
  
 <span data-ttu-id="30173-143">Для более точного управления сериализацией следует применить <xref:System.Xml.Serialization.XmlArrayAttribute> к полю или свойству.</span><span class="sxs-lookup"><span data-stu-id="30173-143">To control the serialization more precisely, apply an <xref:System.Xml.Serialization.XmlArrayAttribute> to the field or property.</span></span> <span data-ttu-id="30173-144">Например, можно изменить имя создаваемого элемента XML по умолчанию с другим именем, задав <xref:System.Xml.Serialization.XmlArrayAttribute.ElementName%2A> новое значение свойства.</span><span class="sxs-lookup"><span data-stu-id="30173-144">For example, you can change the generated XML element name from the default to a different name by setting the <xref:System.Xml.Serialization.XmlArrayAttribute.ElementName%2A> property to a new value.</span></span>  
  
 <span data-ttu-id="30173-145"><xref:System.Xml.Serialization.XmlAttributes.XmlArray%2A> Свойство позволяет переопределить стандартную сериализацию, а также управлять путем применения сериализацией <xref:System.Xml.Serialization.XmlArrayAttribute> к элементу.</span><span class="sxs-lookup"><span data-stu-id="30173-145">The <xref:System.Xml.Serialization.XmlAttributes.XmlArray%2A> property allows you to override the default serialization, as well as the serialization controlled by applying an <xref:System.Xml.Serialization.XmlArrayAttribute> to the member.</span></span> <span data-ttu-id="30173-146">Например можно изменить имя элемента XML, созданного по умолчанию (идентификатор члена) на новое значение.</span><span class="sxs-lookup"><span data-stu-id="30173-146">For example, you can change the XML element name generated from the default (the member identifier) to a new value.</span></span> <span data-ttu-id="30173-147">Кроме того, если применить <xref:System.Xml.Serialization.XmlArrayAttribute> к члену, он переопределяется атрибутом любой <xref:System.Xml.Serialization.XmlArrayAttribute> , которые назначены <xref:System.Xml.Serialization.XmlAttributes.XmlArray%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="30173-147">In addition, if you apply an <xref:System.Xml.Serialization.XmlArrayAttribute> to a member, it is overridden by any <xref:System.Xml.Serialization.XmlArrayAttribute> that is assigned to the <xref:System.Xml.Serialization.XmlAttributes.XmlArray%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="30173-148">В следующем примере сериализуется класс, который содержит поле с именем `Members` , возвращающее массив объектов.</span><span class="sxs-lookup"><span data-stu-id="30173-148">The following example serializes a class that contains a field named `Members` that returns an array of objects.</span></span> <span data-ttu-id="30173-149"><xref:System.Xml.Serialization.XmlArrayAttribute> Используется для переопределения сериализации поля и для переименования элемента `Staff`.</span><span class="sxs-lookup"><span data-stu-id="30173-149">The <xref:System.Xml.Serialization.XmlArrayAttribute> is used to override the serialization of the field, and rename the element name to `Staff`.</span></span>  
  
 [!code-cpp[Classic XmlAttributes.XmlArray Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlAttributes.XmlArray Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlAttributes.XmlArray Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlAttributes.XmlArray Example/CS/source.cs#1)]
 [!code-vb[Classic XmlAttributes.XmlArray Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlAttributes.XmlArray Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlArrayItems">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.XmlArrayItemAttributes XmlArrayItems { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Serialization.XmlArrayItemAttributes XmlArrayItems" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAttributes.XmlArrayItems" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property XmlArrayItems As XmlArrayItemAttributes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Serialization::XmlArrayItemAttributes ^ XmlArrayItems { System::Xml::Serialization::XmlArrayItemAttributes ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlArrayItemAttributes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="30173-150">Получает или задает коллекцию объектов, определяющих сериализацию с помощью <see cref="T:System.Xml.Serialization.XmlSerializer" /> для элементов, которые вставлены в массив, возвращенный открытым полем или свойством чтения/записи.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30173-150">Gets or sets a collection of objects that specify how the <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializes items inserted into an array returned by a public field or read/write property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="30173-151">Список <see cref="T:System.Xml.Serialization.XmlArrayItemAttributes" />, в котором содержится коллекция объектов <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30173-151">An <see cref="T:System.Xml.Serialization.XmlArrayItemAttributes" /> object that contains a collection of <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> objects.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="30173-152"><xref:System.Xml.Serialization.XmlAttributes.XmlArrayItems%2A> Позволяет определять производные типы, которые могут быть вставлены в массив, возвращенный открытое поле или свойство чтения/записи.</span><span class="sxs-lookup"><span data-stu-id="30173-152">The <xref:System.Xml.Serialization.XmlAttributes.XmlArrayItems%2A> property allows you to specify the derived types that can be inserted into an array returned by a public field or public read/write property.</span></span> <span data-ttu-id="30173-153">Для каждого нового типа требуется поле или свойство, чтобы принять создать <xref:System.Xml.Serialization.XmlArrayItemAttribute> объекта и <xref:System.Xml.Serialization.XmlArrayItemAttributes.Add%2A> его <xref:System.Xml.Serialization.XmlArrayItemAttributes>) возвращенные <xref:System.Xml.Serialization.XmlAttributes.XmlArrayItems%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="30173-153">For each new type you want the field or property to accept, create an <xref:System.Xml.Serialization.XmlArrayItemAttribute> object and <xref:System.Xml.Serialization.XmlArrayItemAttributes.Add%2A> it to the <xref:System.Xml.Serialization.XmlArrayItemAttributes>) returned by the <xref:System.Xml.Serialization.XmlAttributes.XmlArrayItems%2A> property.</span></span> <span data-ttu-id="30173-154">(Новый тип должен быть производным от типа, уже принятого поле или свойство). <xref:System.Xml.Serialization.XmlAttributeOverrides.Add%2A> <xref:System.Xml.Serialization.XmlAttributes> объект <xref:System.Xml.Serialization.XmlAttributeOverrides> и укажите тип объекта, который содержит поле или свойство и имя поля или свойства.</span><span class="sxs-lookup"><span data-stu-id="30173-154">(The new type must be derived from the type already accepted by the field or property.) <xref:System.Xml.Serialization.XmlAttributeOverrides.Add%2A> the <xref:System.Xml.Serialization.XmlAttributes> object to an <xref:System.Xml.Serialization.XmlAttributeOverrides> object and specify the type of the object that contains the field or property, and the name of the field or property.</span></span> <span data-ttu-id="30173-155">Создать <xref:System.Xml.Serialization.XmlSerializer> с <xref:System.Xml.Serialization.XmlAttributeOverrides> объект перед вызовом <xref:System.Xml.Serialization.XmlSerializer.Serialize%2A> или <xref:System.Xml.Serialization.XmlSerializer.Deserialize%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="30173-155">Construct an <xref:System.Xml.Serialization.XmlSerializer> with the <xref:System.Xml.Serialization.XmlAttributeOverrides> object before calling <xref:System.Xml.Serialization.XmlSerializer.Serialize%2A> or <xref:System.Xml.Serialization.XmlSerializer.Deserialize%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="30173-156">В следующем примере сериализуется класс, который содержит поле с именем `Members` , возвращающее массив объектов.</span><span class="sxs-lookup"><span data-stu-id="30173-156">The following example serializes a class that contains a field named `Members` that returns an array of objects.</span></span> <span data-ttu-id="30173-157">Два <xref:System.Xml.Serialization.XmlArrayItemAttribute> создаются объекты, чтобы разрешить полю принимать объекты, которые являются производными от базового класса с именем `Member`.</span><span class="sxs-lookup"><span data-stu-id="30173-157">Two <xref:System.Xml.Serialization.XmlArrayItemAttribute> objects are created to allow the field to accept objects that derive from the base class named `Member`.</span></span> <span data-ttu-id="30173-158">Каждый объект добавляется к <xref:System.Xml.Serialization.XmlAttributes> через <xref:System.Xml.Serialization.XmlAttributes.XmlArrayItems%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="30173-158">Each object is added to the <xref:System.Xml.Serialization.XmlAttributes> through the <xref:System.Xml.Serialization.XmlAttributes.XmlArrayItems%2A> property.</span></span>  
  
 [!code-cpp[Classic XmlAttributes.XmlArrayItems Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlAttributes.XmlArrayItems Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlAttributes.XmlArrayItems Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlAttributes.XmlArrayItems Example/CS/source.cs#1)]
 [!code-vb[Classic XmlAttributes.XmlArrayItems Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlAttributes.XmlArrayItems Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlAttribute">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.XmlAttributeAttribute XmlAttribute { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Serialization.XmlAttributeAttribute XmlAttribute" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAttributes.XmlAttribute" />
      <MemberSignature Language="VB.NET" Value="Public Property XmlAttribute As XmlAttributeAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Serialization::XmlAttributeAttribute ^ XmlAttribute { System::Xml::Serialization::XmlAttributeAttribute ^ get(); void set(System::Xml::Serialization::XmlAttributeAttribute ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlAttributeAttribute</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="30173-159">Получает или задает объект, задающий сериализацию с помощью <see cref="T:System.Xml.Serialization.XmlSerializer" /> для открытого поля или свойства чтения/записи как атрибута XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30173-159">Gets or sets an object that specifies how the <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializes a public field or public read/write property as an XML attribute.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="30173-160">
            <see cref="T:System.Xml.Serialization.XmlAttributeAttribute" />, управляющий сериализацией открытого поля или свойства чтения/записи как атрибута XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30173-160">An <see cref="T:System.Xml.Serialization.XmlAttributeAttribute" /> that controls the serialization of a public field or read/write property as an XML attribute.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="30173-161">По умолчанию если атрибут не применяется к открытое поле или свойство чтения/записи, он сериализуется как элемент XML.</span><span class="sxs-lookup"><span data-stu-id="30173-161">By default, if no attribute is applied to a public field or public read/write property, it is serialized as an XML element.</span></span> <span data-ttu-id="30173-162">Можно также указать <xref:System.Xml.Serialization.XmlSerializer> для создания атрибута XML, применяя <xref:System.Xml.Serialization.XmlAttributeAttribute> к полю или свойству.</span><span class="sxs-lookup"><span data-stu-id="30173-162">You can also instruct the <xref:System.Xml.Serialization.XmlSerializer> to generate an XML attribute by applying an <xref:System.Xml.Serialization.XmlAttributeAttribute> to the field or property.</span></span>  
  
 <span data-ttu-id="30173-163"><xref:System.Xml.Serialization.XmlAttributes.XmlAttribute%2A> Свойство позволяет переопределить стандартную сериализацию, а также управлять путем применения сериализацией <xref:System.Xml.Serialization.XmlAttributeAttribute> к элементу.</span><span class="sxs-lookup"><span data-stu-id="30173-163">The <xref:System.Xml.Serialization.XmlAttributes.XmlAttribute%2A> property allows you to override the default serialization, as well as the serialization controlled by applying an <xref:System.Xml.Serialization.XmlAttributeAttribute> to the member.</span></span> <span data-ttu-id="30173-164">Чтобы сделать это, создайте <xref:System.Xml.Serialization.XmlAttributeAttribute> и задать его свойства (такие как <xref:System.Xml.Serialization.XmlAttributeAttribute.AttributeName%2A>).</span><span class="sxs-lookup"><span data-stu-id="30173-164">To do this, create an <xref:System.Xml.Serialization.XmlAttributeAttribute> and set its properties (such as <xref:System.Xml.Serialization.XmlAttributeAttribute.AttributeName%2A>).</span></span> <span data-ttu-id="30173-165">Назначьте новый объект в <xref:System.Xml.Serialization.XmlAttributes.XmlAttribute%2A> свойство <xref:System.Xml.Serialization.XmlAttributes> объекта.</span><span class="sxs-lookup"><span data-stu-id="30173-165">Assign the new object to the <xref:System.Xml.Serialization.XmlAttributes.XmlAttribute%2A> property of an <xref:System.Xml.Serialization.XmlAttributes> object.</span></span> <span data-ttu-id="30173-166">Добавить <xref:System.Xml.Serialization.XmlAttributes> объект <xref:System.Xml.Serialization.XmlAttributeOverrides> и укажите тип объекта, который содержит поле или свойство и имя поля или свойства.</span><span class="sxs-lookup"><span data-stu-id="30173-166">Add the <xref:System.Xml.Serialization.XmlAttributes> object to an <xref:System.Xml.Serialization.XmlAttributeOverrides> object and specify the type of the object that contains the field or property, and the name of the field or property.</span></span> <span data-ttu-id="30173-167">Наконец, следует создать <xref:System.Xml.Serialization.XmlSerializer> с помощью <xref:System.Xml.Serialization.XmlAttributeOverrides> и вызовите <xref:System.Xml.Serialization.XmlSerializer.Serialize%2A> или <xref:System.Xml.Serialization.XmlSerializer.Deserialize%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="30173-167">Lastly, create an <xref:System.Xml.Serialization.XmlSerializer> using the <xref:System.Xml.Serialization.XmlAttributeOverrides> object and call the <xref:System.Xml.Serialization.XmlSerializer.Serialize%2A> or <xref:System.Xml.Serialization.XmlSerializer.Deserialize%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="30173-168">В следующем примере сериализуется класс с именем `Group` , содержащий свойство с именем `GroupName`; `GroupName` свойство сериализуется как атрибут XML.</span><span class="sxs-lookup"><span data-stu-id="30173-168">The following example serializes a class named `Group` that contains a property named `GroupName`; the `GroupName` property is serialized as an XML attribute.</span></span> <span data-ttu-id="30173-169">В примере создается <xref:System.Xml.Serialization.XmlAttributeOverrides> и <xref:System.Xml.Serialization.XmlAttributes> для переопределения сериализацию по умолчанию для поля.</span><span class="sxs-lookup"><span data-stu-id="30173-169">The example creates an <xref:System.Xml.Serialization.XmlAttributeOverrides> and an <xref:System.Xml.Serialization.XmlAttributes> object to override the default serialization of the field.</span></span> <span data-ttu-id="30173-170">Затем пример создает <xref:System.Xml.Serialization.XmlAttributeAttribute> специально переопределения свойства и объект имеет значение <xref:System.Xml.Serialization.XmlAttributes.XmlAttribute%2A> свойство <xref:System.Xml.Serialization.XmlAttributes> добавляется объект <xref:System.Xml.Serialization.XmlAttributeOverrides> объект с именем указанным переопределенным членом.</span><span class="sxs-lookup"><span data-stu-id="30173-170">The example then creates an <xref:System.Xml.Serialization.XmlAttributeAttribute> to specifically override the property, and the object is set to the <xref:System.Xml.Serialization.XmlAttributes.XmlAttribute%2A> property The <xref:System.Xml.Serialization.XmlAttributes> object is added to the <xref:System.Xml.Serialization.XmlAttributeOverrides> object with the name of the overridden member specified.</span></span> <span data-ttu-id="30173-171">Наконец <xref:System.Xml.Serialization.XmlSerializer> создается и возвращается с помощью <xref:System.Xml.Serialization.XmlAttributeOverrides> объекта.</span><span class="sxs-lookup"><span data-stu-id="30173-171">Finally, an <xref:System.Xml.Serialization.XmlSerializer> is constructed and returned using the <xref:System.Xml.Serialization.XmlAttributeOverrides> object.</span></span>  
  
 [!code-cpp[Classic XmlAttributes.XmlAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlAttributes.XmlAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlAttributes.XmlAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlAttributes.XmlAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic XmlAttributes.XmlAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlAttributes.XmlAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlChoiceIdentifier">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.XmlChoiceIdentifierAttribute XmlChoiceIdentifier { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Serialization.XmlChoiceIdentifierAttribute XmlChoiceIdentifier" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAttributes.XmlChoiceIdentifier" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property XmlChoiceIdentifier As XmlChoiceIdentifierAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Serialization::XmlChoiceIdentifierAttribute ^ XmlChoiceIdentifier { System::Xml::Serialization::XmlChoiceIdentifierAttribute ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlChoiceIdentifierAttribute</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="30173-172">Получает или задает объект, позволяющий определиться с выбором.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30173-172">Gets or sets an object that allows you to distinguish between a set of choices.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="30173-173">
            <see cref="T:System.Xml.Serialization.XmlChoiceIdentifierAttribute" />, который можно применить к члену класса, который сериализуется как элемент <see langword="xsi:choice" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30173-173">An <see cref="T:System.Xml.Serialization.XmlChoiceIdentifierAttribute" /> that can be applied to a class member that is serialized as an <see langword="xsi:choice" /> element.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlDefaultValue">
      <MemberSignature Language="C#" Value="public object XmlDefaultValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object XmlDefaultValue" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAttributes.XmlDefaultValue" />
      <MemberSignature Language="VB.NET" Value="Public Property XmlDefaultValue As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ XmlDefaultValue { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="30173-174">Получает или задает значение по умолчанию XML-элемента или атрибута.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30173-174">Gets or sets the default value of an XML element or attribute.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="30173-175">Объект <see cref="T:System.Object" />, представляющей значение по умолчанию элемента XML или атрибута.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30173-175">An <see cref="T:System.Object" /> that represents the default value of an XML element or attribute.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="30173-176">Можно указать значение по умолчанию XML-элемента или атрибута XML, применяя <xref:System.ComponentModel.DefaultValueAttribute> члену.</span><span class="sxs-lookup"><span data-stu-id="30173-176">You can specify the default value of an XML element or XML attribute by applying a <xref:System.ComponentModel.DefaultValueAttribute> to a member.</span></span> <span data-ttu-id="30173-177">Чтобы просмотреть результат применения значения, скомпилируйте приложение в DLL или исполняемый файл и передайте полученный файл в качестве аргумента инструмент определения схемы XML (XSD.exe).</span><span class="sxs-lookup"><span data-stu-id="30173-177">To examine the result of applying the value, compile the application into a DLL or executable, and pass the resulting file as an argument to the XML Schema Definition tool (XSD.exe).</span></span> <span data-ttu-id="30173-178">В документе схемы XML, присваивается значение по умолчанию `default` атрибута.</span><span class="sxs-lookup"><span data-stu-id="30173-178">In the XML schema document, a default value is assigned to the `default` attribute.</span></span> <span data-ttu-id="30173-179">В следующем примере значение по умолчанию для \<Animal > элемент является «Собаки».</span><span class="sxs-lookup"><span data-stu-id="30173-179">In the following example, the default for the \<Animal> element is "Dogs."</span></span>  
  
```  
<?xml version="1.0"?>  
 <schema attributeFormDefault="qualified"   
 elementFormDefault="qualified" targetNamespace=""   
 xmlns="http://www.w3.org/2000/10/XMLSchema">  
   <element name="Pets" nullable="true" type="Pets"/>  
   <complexType name="Pets">  
     <sequence>  
       <element default="Dogs" name="Animal" nullable="true"   
        type="string" minOccurs="0"/>  
     </sequence>  
   </complexType>  
 </schema>  
```  
  
 <span data-ttu-id="30173-180">Чтобы переопределить значение по умолчанию, создайте <xref:System.Object> и назначьте его <xref:System.Xml.Serialization.XmlAttributes.XmlDefaultValue%2A>.</span><span class="sxs-lookup"><span data-stu-id="30173-180">To override the default value, create an <xref:System.Object> and assign it to the <xref:System.Xml.Serialization.XmlAttributes.XmlDefaultValue%2A>.</span></span>  
  
 <span data-ttu-id="30173-181">Если значение, присвоенное полю или свойству значение по умолчанию для этого поля или свойства, равно <xref:System.Xml.Serialization.XmlSerializer> сериализовать значение для экземпляра XML.</span><span class="sxs-lookup"><span data-stu-id="30173-181">If the value assigned to a field or property is equal to the default value for that field or property, the <xref:System.Xml.Serialization.XmlSerializer> does not serialize the value to the XML-instance.</span></span> <span data-ttu-id="30173-182">Это происходит потому присваиваемого значения можно восстановить из схемы XML.</span><span class="sxs-lookup"><span data-stu-id="30173-182">This is because the assigned value can be recovered from the XML schema.</span></span> <span data-ttu-id="30173-183">Другими словами Установка поля или свойства к значению по умолчанию является эквивалентом не было установлено вообще.</span><span class="sxs-lookup"><span data-stu-id="30173-183">In other words, setting a field or property to its own default value is equivalent of not setting it at all.</span></span> <span data-ttu-id="30173-184">Аналогично, если не задано значение для поля или свойства, <xref:System.Xml.Serialization.XmlSerializer> использует значение по умолчанию, найденные в схеме.</span><span class="sxs-lookup"><span data-stu-id="30173-184">Likewise, if no value is set for the field or property, the <xref:System.Xml.Serialization.XmlSerializer> uses the default value found in the schema.</span></span> <span data-ttu-id="30173-185">Экземпляр XML-документа и случаи, (задание свойства по умолчанию, или не было установлено вообще), не содержит любое значение для свойства.</span><span class="sxs-lookup"><span data-stu-id="30173-185">In both cases, (setting the property to its default, or not setting it at all), the XML-document instance does not contain any value for the property.</span></span>  
  
 <span data-ttu-id="30173-186">Конструкторы класса можно использовать вместо схемы для присвоения значений по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="30173-186">You can use the class constructors instead of the schema to assign the default values.</span></span> <span data-ttu-id="30173-187">При использовании Xsd.exe для создания классов из схемы можно закомментируйте или удалите все атрибуты [System.ComponentModel.DefaultValueAttribute("myFieldName")] из файлов класса.</span><span class="sxs-lookup"><span data-stu-id="30173-187">If you are using Xsd.exe to generate a classes from schemas, you can comment out or remove all of the [System.ComponentModel.DefaultValueAttribute("myFieldName")] attributes from the class files.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="30173-188">В следующем примере показано класс с именем `Pet` , содержащий поле, содержащее значение по умолчанию равно «Dog».</span><span class="sxs-lookup"><span data-stu-id="30173-188">The following example shows a class named `Pet` that contains a field that has a default value set to "Dog".</span></span> <span data-ttu-id="30173-189">Однако в примере также создается <xref:System.Xml.Serialization.XmlAttributes> и устанавливается его <xref:System.Xml.Serialization.XmlAttributes.XmlDefaultValue%2A> свойства новое значение по умолчанию («Cat»).</span><span class="sxs-lookup"><span data-stu-id="30173-189">However, the example also creates an <xref:System.Xml.Serialization.XmlAttributes> object, and sets its <xref:System.Xml.Serialization.XmlAttributes.XmlDefaultValue%2A> property to a new default value ("Cat").</span></span> <span data-ttu-id="30173-190">Это переопределяет исходное значение по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="30173-190">This overrides the original default value.</span></span> <span data-ttu-id="30173-191">Таким образом, если поле имеет значение «Cat» <xref:System.Xml.Serialization.XmlSerializer> воспринимает его как значение по умолчанию, а не его сериализации.</span><span class="sxs-lookup"><span data-stu-id="30173-191">Thus, if the field value is set to "Cat", the <xref:System.Xml.Serialization.XmlSerializer> treats it as the default value, and not serialize it.</span></span> <span data-ttu-id="30173-192">Если установлено другое значение, <xref:System.Xml.Serialization.XmlSerializer> сериализует значение.</span><span class="sxs-lookup"><span data-stu-id="30173-192">If it is set to any other value, the <xref:System.Xml.Serialization.XmlSerializer> serializes the value.</span></span>  
  
 [!code-cpp[Classic XmlAttributes.XmlDefaultValue Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlAttributes.XmlDefaultValue Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlAttributes.XmlDefaultValue Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlAttributes.XmlDefaultValue Example/CS/source.cs#1)]
 [!code-vb[Classic XmlAttributes.XmlDefaultValue Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlAttributes.XmlDefaultValue Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlElements">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.XmlElementAttributes XmlElements { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Serialization.XmlElementAttributes XmlElements" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAttributes.XmlElements" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property XmlElements As XmlElementAttributes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Serialization::XmlElementAttributes ^ XmlElements { System::Xml::Serialization::XmlElementAttributes ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlElementAttributes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="30173-193">Получение коллекции объектов, задающих сериализацию с помощью <see cref="T:System.Xml.Serialization.XmlSerializer" /> для открытого поля или свойства чтения/записи как элемента XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30173-193">Gets a collection of objects that specify how the <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializes a public field or read/write property as an XML element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="30173-194">
            <see cref="T:System.Xml.Serialization.XmlElementAttributes" />, содержащий коллекцию объектов <see cref="T:System.Xml.Serialization.XmlElementAttribute" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30173-194">An <see cref="T:System.Xml.Serialization.XmlElementAttributes" /> that contains a collection of <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> objects.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="30173-195">Для каждого переопределенного члена, который сериализуется как элемент XML, необходимо добавить новый <xref:System.Xml.Serialization.XmlElementAttribute> для <xref:System.Xml.Serialization.XmlElementAttributes> путем вызова <xref:System.Xml.Serialization.XmlElementAttributes.Add%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="30173-195">For each overridden member that is serialized as an XML element, you must add a new <xref:System.Xml.Serialization.XmlElementAttribute> to an <xref:System.Xml.Serialization.XmlElementAttributes> by calling the <xref:System.Xml.Serialization.XmlElementAttributes.Add%2A> method.</span></span> <span data-ttu-id="30173-196">По умолчанию <xref:System.Xml.Serialization.XmlElementAttributes> объект создан и назначен <xref:System.Xml.Serialization.XmlAttributes.XmlElements%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="30173-196">By default, an <xref:System.Xml.Serialization.XmlElementAttributes> object is created and assigned to the <xref:System.Xml.Serialization.XmlAttributes.XmlElements%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="30173-197">В следующем примере сериализуется `Transportation` класс, который содержит одно поле с именем `Vehicles` , возвращающий <xref:System.Collections.ArrayList>.</span><span class="sxs-lookup"><span data-stu-id="30173-197">The following example serializes the `Transportation` class, which contains a single field named `Vehicles` that returns an <xref:System.Collections.ArrayList>.</span></span> <span data-ttu-id="30173-198">В примере применяется два <xref:System.Xml.Serialization.XmlElementAttribute> атрибуты `Vehicles` поля.</span><span class="sxs-lookup"><span data-stu-id="30173-198">The example applies two <xref:System.Xml.Serialization.XmlElementAttribute> attributes to the `Vehicles` field.</span></span> <span data-ttu-id="30173-199">В примере создаются два <xref:System.Xml.Serialization.XmlElementAttribute> объектов и добавляет их в <xref:System.Xml.Serialization.XmlElementAttributes> коллекцию <xref:System.Xml.Serialization.XmlAttributes> объекта.</span><span class="sxs-lookup"><span data-stu-id="30173-199">The example creates two <xref:System.Xml.Serialization.XmlElementAttribute> objects and adds them to the <xref:System.Xml.Serialization.XmlElementAttributes> collection of an <xref:System.Xml.Serialization.XmlAttributes> object.</span></span> <span data-ttu-id="30173-200">Чтобы разрешить доступ массива к различным типам объектов, <xref:System.Xml.Serialization.XmlAttributes> добавляется объект <xref:System.Xml.Serialization.XmlAttributeOverrides> объекта.</span><span class="sxs-lookup"><span data-stu-id="30173-200">To allow the array to accept different object types, the <xref:System.Xml.Serialization.XmlAttributes> object is added to the <xref:System.Xml.Serialization.XmlAttributeOverrides> object.</span></span>  
  
 [!code-cpp[Classic XmlAttributes.XmlElements Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlAttributes.XmlElements Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlAttributes.XmlElements Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlAttributes.XmlElements Example/CS/source.cs#1)]
 [!code-vb[Classic XmlAttributes.XmlElements Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlAttributes.XmlElements Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlEnum">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.XmlEnumAttribute XmlEnum { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Serialization.XmlEnumAttribute XmlEnum" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAttributes.XmlEnum" />
      <MemberSignature Language="VB.NET" Value="Public Property XmlEnum As XmlEnumAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Serialization::XmlEnumAttribute ^ XmlEnum { System::Xml::Serialization::XmlEnumAttribute ^ get(); void set(System::Xml::Serialization::XmlEnumAttribute ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlEnumAttribute</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="30173-201">Получает или задает объект, задающий сериализацию с помощью <see cref="T:System.Xml.Serialization.XmlSerializer" /> для члена перечисления.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30173-201">Gets or sets an object that specifies how the <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializes an enumeration member.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="30173-202">
            <see cref="T:System.Xml.Serialization.XmlEnumAttribute" />, задающий сериализацию с помощью <see cref="T:System.Xml.Serialization.XmlSerializer" /> для члена перечисления.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30173-202">An <see cref="T:System.Xml.Serialization.XmlEnumAttribute" /> that specifies how the <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializes an enumeration member.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="30173-203">Для каждого идентификатора, который необходимо переопределить, необходимо создать <xref:System.Xml.Serialization.XmlAttributes> и установить <xref:System.Xml.Serialization.XmlAttributes.XmlEnum%2A> свойства <xref:System.Xml.Serialization.XmlEnumAttribute> , переопределяющий идентификатор.</span><span class="sxs-lookup"><span data-stu-id="30173-203">For each identifier you want to override, you must create an <xref:System.Xml.Serialization.XmlAttributes> object, and set the <xref:System.Xml.Serialization.XmlAttributes.XmlEnum%2A> property to an <xref:System.Xml.Serialization.XmlEnumAttribute> that overrides the identifier.</span></span> <span data-ttu-id="30173-204">Добавить <xref:System.Xml.Serialization.XmlAttributes> объект <xref:System.Xml.Serialization.XmlAttributeOverrides> и укажите оба <xref:System.Type> класса, который содержит перечисление и имя переопределяемого члена.</span><span class="sxs-lookup"><span data-stu-id="30173-204">Add the <xref:System.Xml.Serialization.XmlAttributes> object to the <xref:System.Xml.Serialization.XmlAttributeOverrides> object and specify both the <xref:System.Type> of the class that contains the enumeration, and the overridden member name.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="30173-205">В следующем примере сериализуется два класса с именем `Food` и `FoodType`.</span><span class="sxs-lookup"><span data-stu-id="30173-205">The following example serializes two classes named `Food` and `FoodType`.</span></span> <span data-ttu-id="30173-206">`FoodType` Класс содержит два перечисления, которые переопределяются, и для каждого перечисления в примере создается <xref:System.Xml.Serialization.XmlEnumAttribute> объект, который назначается <xref:System.Xml.Serialization.XmlAttributes.XmlEnum%2A> свойство <xref:System.Xml.Serialization.XmlAttributes> объекта.</span><span class="sxs-lookup"><span data-stu-id="30173-206">The `FoodType` class contains two enumerations that are overridden and, for each enumeration, the example creates an <xref:System.Xml.Serialization.XmlEnumAttribute> object that it assigns to the <xref:System.Xml.Serialization.XmlAttributes.XmlEnum%2A> property of an <xref:System.Xml.Serialization.XmlAttributes> object.</span></span> <span data-ttu-id="30173-207">Затем в примере добавляется <xref:System.Xml.Serialization.XmlAttributes> объект <xref:System.Xml.Serialization.XmlAttributeOverrides> объект, который используется для создания <xref:System.Xml.Serialization.XmlSerializer>.</span><span class="sxs-lookup"><span data-stu-id="30173-207">The example then adds the <xref:System.Xml.Serialization.XmlAttributes> object to an <xref:System.Xml.Serialization.XmlAttributeOverrides> object, which is used to create an <xref:System.Xml.Serialization.XmlSerializer>.</span></span>  
  
 [!code-cpp[Classic XmlAttributes.XmlEnum Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlAttributes.XmlEnum Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlAttributes.XmlEnum Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlAttributes.XmlEnum Example/CS/source.cs#1)]
 [!code-vb[Classic XmlAttributes.XmlEnum Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlAttributes.XmlEnum Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlIgnore">
      <MemberSignature Language="C#" Value="public bool XmlIgnore { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool XmlIgnore" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAttributes.XmlIgnore" />
      <MemberSignature Language="VB.NET" Value="Public Property XmlIgnore As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool XmlIgnore { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="30173-208">Получает или задает значение, задающее то, будет ли выполнена сериализация с помощью <see cref="T:System.Xml.Serialization.XmlSerializer" /> для открытого поля или открытого свойства чтения/записи.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30173-208">Gets or sets a value that specifies whether or not the <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializes a public field or public read/write property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="30173-209">
            <see langword="true" />, если <see cref="T:System.Xml.Serialization.XmlSerializer" /> не должен сериализовать поле или свойство; в противном случае <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30173-209">
              <see langword="true" /> if the <see cref="T:System.Xml.Serialization.XmlSerializer" /> must not serialize the field or property; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="30173-210">По умолчанию все открытые поля и свойства чтения записи сериализуются <xref:System.Xml.Serialization.XmlSerializer>.</span><span class="sxs-lookup"><span data-stu-id="30173-210">By default, all public fields and public read/write properties are serialized by the <xref:System.Xml.Serialization.XmlSerializer>.</span></span> <span data-ttu-id="30173-211">То есть значение каждого открытого поля или свойства сохраняется как XML-элемент или атрибут XML в экземпляре XML-документа.</span><span class="sxs-lookup"><span data-stu-id="30173-211">That is, the value of each public field or property is persisted as an XML element or XML attribute in an XML-document instance.</span></span>  
  
 <span data-ttu-id="30173-212">Чтобы переопределить сериализацию по умолчанию для поля или свойства, создайте <xref:System.Xml.Serialization.XmlAttributes> и установить его <xref:System.Xml.Serialization.XmlAttributes.XmlIgnore%2A> свойства `true`.</span><span class="sxs-lookup"><span data-stu-id="30173-212">To override the default serialization of a field or property, create an <xref:System.Xml.Serialization.XmlAttributes> object, and set its <xref:System.Xml.Serialization.XmlAttributes.XmlIgnore%2A> property to `true`.</span></span> <span data-ttu-id="30173-213"><xref:System.Xml.Serialization.XmlAttributeOverrides.Add%2A> объект для <xref:System.Xml.Serialization.XmlAttributeOverrides> и укажите тип объекта, который содержит поле или свойство, чтобы игнорировать и имя поля или свойства, чтобы игнорировать.</span><span class="sxs-lookup"><span data-stu-id="30173-213"><xref:System.Xml.Serialization.XmlAttributeOverrides.Add%2A> the object to an <xref:System.Xml.Serialization.XmlAttributeOverrides> object and specify the type of the object that contains the field or property to ignore, and the name of the field or property to ignore.</span></span>  
  
 <span data-ttu-id="30173-214">Если <xref:System.Xml.Serialization.XmlIgnoreAttribute> применяется к полю или свойству, поле или свойство игнорируется.</span><span class="sxs-lookup"><span data-stu-id="30173-214">If an <xref:System.Xml.Serialization.XmlIgnoreAttribute> is applied to a field or property, the field or property is ignored.</span></span> <span data-ttu-id="30173-215">Однако можно переопределить это поведение, создав <xref:System.Xml.Serialization.XmlAttributes> объекта, присвоив его <xref:System.Xml.Serialization.XmlAttributes.XmlIgnore%2A> свойства `false`, добавляя его в <xref:System.Xml.Serialization.XmlAttributeOverrides> объект, указывающий тип объекта, который содержит поле или свойство и имя поле или свойство.</span><span class="sxs-lookup"><span data-stu-id="30173-215">However you can override that behavior by creating an <xref:System.Xml.Serialization.XmlAttributes> object, setting its <xref:System.Xml.Serialization.XmlAttributes.XmlIgnore%2A> property to `false`, adding it to an <xref:System.Xml.Serialization.XmlAttributeOverrides> object specifying the type of the object that contains the field or property, and the name of the field or property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="30173-216">В следующем примере сериализуется класс с именем `Group`, который содержит элемент с именем `Comment` к которому <xref:System.Xml.Serialization.XmlIgnoreAttribute> применяется.</span><span class="sxs-lookup"><span data-stu-id="30173-216">The following example serializes a class named `Group`, which contains a member named `Comment` to which the <xref:System.Xml.Serialization.XmlIgnoreAttribute> is applied.</span></span> <span data-ttu-id="30173-217">В примере создается <xref:System.Xml.Serialization.XmlAttributes> и устанавливается <xref:System.Xml.Serialization.XmlAttributes.XmlIgnore%2A> свойства `false`, тем самым переопределяя <xref:System.Xml.Serialization.XmlIgnoreAttribute>.</span><span class="sxs-lookup"><span data-stu-id="30173-217">The example creates an <xref:System.Xml.Serialization.XmlAttributes> object, and sets the <xref:System.Xml.Serialization.XmlAttributes.XmlIgnore%2A> property to `false`, thereby overriding the <xref:System.Xml.Serialization.XmlIgnoreAttribute>.</span></span>  
  
 [!code-cpp[Classic XmlAttributes.XmlIgnore Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlAttributes.XmlIgnore Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlAttributes.XmlIgnore Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlAttributes.XmlIgnore Example/CS/source.cs#1)]
 [!code-vb[Classic XmlAttributes.XmlIgnore Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlAttributes.XmlIgnore Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Serialization.XmlIgnoreAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Xmlns">
      <MemberSignature Language="C#" Value="public bool Xmlns { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Xmlns" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAttributes.Xmlns" />
      <MemberSignature Language="VB.NET" Value="Public Property Xmlns As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Xmlns { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="30173-218">Возвращает и задает значение, определяющее, стоит ли сохранить все объявления пространств имен, если объект с членом, возвращающим объект <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" />, переопределен.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30173-218">Gets or sets a value that specifies whether to keep all namespace declarations when an object containing a member that returns an <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" /> object is overridden.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="30173-219">
            <see langword="true" />, если объявления пространств имен следует сохранить, иначе <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30173-219">
              <see langword="true" /> if the namespace declarations should be kept; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="30173-220">В следующем примере показан класс с именем `Student`.</span><span class="sxs-lookup"><span data-stu-id="30173-220">The following example contains a class named `Student`.</span></span> <span data-ttu-id="30173-221">Этот класс содержит элемент с именем `MyNamespaces` , возвращающий <xref:System.Xml.Serialization.XmlSerializerNamespaces> объекта.</span><span class="sxs-lookup"><span data-stu-id="30173-221">The class contains a member named `MyNamespaces` that returns an <xref:System.Xml.Serialization.XmlSerializerNamespaces> object.</span></span> <span data-ttu-id="30173-222">В примере создается <xref:System.Xml.Serialization.XmlAttributes> объект, который добавляется в экземпляр <xref:System.Xml.Serialization.XmlAttributeOverrides> класса.</span><span class="sxs-lookup"><span data-stu-id="30173-222">The example creates an <xref:System.Xml.Serialization.XmlAttributes> object that is added to an instance of the <xref:System.Xml.Serialization.XmlAttributeOverrides> class.</span></span> <span data-ttu-id="30173-223"><xref:System.Xml.Serialization.XmlAttributes.Xmlns%2A> Свойству `true`, отдает <xref:System.Xml.Serialization.XmlSerializer> для сохранения пространства имен при сериализации `Student` переопределен.</span><span class="sxs-lookup"><span data-stu-id="30173-223">The <xref:System.Xml.Serialization.XmlAttributes.Xmlns%2A> property is set to `true`, which instructs the <xref:System.Xml.Serialization.XmlSerializer> to preserve the namespaces when the serialization of the `Student` object is overridden.</span></span>  
  
 [!code-cpp[XmlAttributes.Xmlns property example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/XmlAttributes.Xmlns property example/CPP/xmlns.cpp#1)]
 [!code-csharp[XmlAttributes.Xmlns property example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/XmlAttributes.Xmlns property example/CS/xmlns.cs#1)]
 [!code-vb[XmlAttributes.Xmlns property example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/XmlAttributes.Xmlns property example/VB/xmlns.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlRoot">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.XmlRootAttribute XmlRoot { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Serialization.XmlRootAttribute XmlRoot" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAttributes.XmlRoot" />
      <MemberSignature Language="VB.NET" Value="Public Property XmlRoot As XmlRootAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Serialization::XmlRootAttribute ^ XmlRoot { System::Xml::Serialization::XmlRootAttribute ^ get(); void set(System::Xml::Serialization::XmlRootAttribute ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlRootAttribute</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="30173-224">Получает или задает объект, задающий сериализацию с помощью <see cref="T:System.Xml.Serialization.XmlSerializer" /> для класса как корневого элемента XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30173-224">Gets or sets an object that specifies how the <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializes a class as an XML root element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="30173-225">
            <see cref="T:System.Xml.Serialization.XmlRootAttribute" />, переопределяющий класс с атрибутами корневого элемента XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30173-225">An <see cref="T:System.Xml.Serialization.XmlRootAttribute" /> that overrides a class attributed as an XML root element.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="30173-226">В следующем примере создается <xref:System.Xml.Serialization.XmlAttributeOverrides> объекта, <xref:System.Xml.Serialization.XmlAttributes> объекта и <xref:System.Xml.Serialization.XmlRootAttribute> объекта.</span><span class="sxs-lookup"><span data-stu-id="30173-226">The following example creates an <xref:System.Xml.Serialization.XmlAttributeOverrides> object, an <xref:System.Xml.Serialization.XmlAttributes> object, and an <xref:System.Xml.Serialization.XmlRootAttribute> object.</span></span> <span data-ttu-id="30173-227">Этот пример назначает <xref:System.Xml.Serialization.XmlRootAttribute> для <xref:System.Xml.Serialization.XmlAttributes.XmlRoot%2A> свойство <xref:System.Xml.Serialization.XmlAttributes> и добавляет <xref:System.Xml.Serialization.XmlAttributes> объект <xref:System.Xml.Serialization.XmlAttributeOverrides> объекта.</span><span class="sxs-lookup"><span data-stu-id="30173-227">The example assigns the <xref:System.Xml.Serialization.XmlRootAttribute> to the <xref:System.Xml.Serialization.XmlAttributes.XmlRoot%2A> property of the <xref:System.Xml.Serialization.XmlAttributes> object, and adds the <xref:System.Xml.Serialization.XmlAttributes> object to the <xref:System.Xml.Serialization.XmlAttributeOverrides> object.</span></span> <span data-ttu-id="30173-228">Наконец, в примере показано получение <xref:System.Xml.Serialization.XmlAttributes> путем передачи <xref:System.Type> сериализуемого класса для <xref:System.Xml.Serialization.XmlAttributeOverrides> объекта.</span><span class="sxs-lookup"><span data-stu-id="30173-228">Lastly, the example gets the <xref:System.Xml.Serialization.XmlAttributes> object by passing the <xref:System.Type> of the serialized class to the <xref:System.Xml.Serialization.XmlAttributeOverrides> object.</span></span> <span data-ttu-id="30173-229">(В этом примере <xref:System.Type> — `Group`.)</span><span class="sxs-lookup"><span data-stu-id="30173-229">(In this example, the <xref:System.Type> is `Group`.)</span></span>  
  
 [!code-cpp[Classic XmlAttributes.XmlRoot Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlAttributes.XmlRoot Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlAttributes.XmlRoot Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlAttributes.XmlRoot Example/CS/source.cs#1)]
 [!code-vb[Classic XmlAttributes.XmlRoot Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlAttributes.XmlRoot Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlText">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.XmlTextAttribute XmlText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Serialization.XmlTextAttribute XmlText" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAttributes.XmlText" />
      <MemberSignature Language="VB.NET" Value="Public Property XmlText As XmlTextAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Serialization::XmlTextAttribute ^ XmlText { System::Xml::Serialization::XmlTextAttribute ^ get(); void set(System::Xml::Serialization::XmlTextAttribute ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlTextAttribute</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="30173-230">Получает или задает объект, указывающий <see cref="T:System.Xml.Serialization.XmlSerializer" /> сериализовать открытое поле или свойство чтения/записи как текст XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30173-230">Gets or sets an object that instructs the <see cref="T:System.Xml.Serialization.XmlSerializer" /> to serialize a public field or public read/write property as XML text.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="30173-231">
            <see cref="T:System.Xml.Serialization.XmlTextAttribute" />, переопределяющий сериализацию по умолчанию для открытого свойства или поля.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30173-231">An <see cref="T:System.Xml.Serialization.XmlTextAttribute" /> that overrides the default serialization of a public property or field.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="30173-232">По умолчанию открытое поле или свойство чтения/записи сериализуется как элемент XML, <xref:System.Xml.Serialization.XmlSerializer>.</span><span class="sxs-lookup"><span data-stu-id="30173-232">By default, a public field or public read/write property is serialized as an XML element by the <xref:System.Xml.Serialization.XmlSerializer>.</span></span> <span data-ttu-id="30173-233">Однако он принудительно поле или свойство должно быть сериализовано как текст в формате XML, применяя <xref:System.Xml.Serialization.XmlTextAttribute> к полю или свойству.</span><span class="sxs-lookup"><span data-stu-id="30173-233">However, it can force the field or property to be serialized as XML text by applying an <xref:System.Xml.Serialization.XmlTextAttribute> to the field or property.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="30173-234"><xref:System.Xml.Serialization.XmlTextAttribute> Не может применяться в поле или свойство, возвращающее массив.</span><span class="sxs-lookup"><span data-stu-id="30173-234">The <xref:System.Xml.Serialization.XmlTextAttribute> cannot be applied to a field or property that returns an array.</span></span>  
  
 <span data-ttu-id="30173-235">Чтобы переопределить сериализацию по умолчанию для поля или свойства (которая не возвращает массив), создайте <xref:System.Xml.Serialization.XmlTextAttribute> и назначьте его <xref:System.Xml.Serialization.XmlAttributes.XmlText%2A> свойство <xref:System.Xml.Serialization.XmlAttributes> объекта.</span><span class="sxs-lookup"><span data-stu-id="30173-235">To override the default serialization of a field or property (that does not return an array), create an <xref:System.Xml.Serialization.XmlTextAttribute> and assign it to the <xref:System.Xml.Serialization.XmlAttributes.XmlText%2A> property of an <xref:System.Xml.Serialization.XmlAttributes> object.</span></span> <span data-ttu-id="30173-236">Добавить <xref:System.Xml.Serialization.XmlAttributes> объект <xref:System.Xml.Serialization.XmlAttributeOverrides> и укажите тип объекта, который содержит переопределенные поле или свойство и имя переопределенных поля или свойства.</span><span class="sxs-lookup"><span data-stu-id="30173-236">Add the <xref:System.Xml.Serialization.XmlAttributes> object to an <xref:System.Xml.Serialization.XmlAttributeOverrides> object and specify the type of the object that contains the overridden field or property, and the name of the overridden field or property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="30173-237">В следующем примере сериализуется класс с именем `Group`, которая содержит поле с именем `Comment`.</span><span class="sxs-lookup"><span data-stu-id="30173-237">The following example serializes the class named `Group`, which contains a field named `Comment`.</span></span> <span data-ttu-id="30173-238">Чтобы переопределить значение по умолчанию, каким образом <xref:System.Xml.Serialization.XmlSerializer> сериализации поля, в примере создается <xref:System.Xml.Serialization.XmlAttributeOverrides> и <xref:System.Xml.Serialization.XmlAttributes> объекта.</span><span class="sxs-lookup"><span data-stu-id="30173-238">To override the default way the <xref:System.Xml.Serialization.XmlSerializer> serializes the field, the example creates an <xref:System.Xml.Serialization.XmlAttributeOverrides> and an <xref:System.Xml.Serialization.XmlAttributes> object.</span></span> <span data-ttu-id="30173-239">Затем пример создает <xref:System.Xml.Serialization.XmlTextAttribute> объекта, который назначается <xref:System.Xml.Serialization.XmlAttributes.XmlText%2A> свойство и добавляет <xref:System.Xml.Serialization.XmlAttributes> объекта (с именем поля должно быть сериализовано как текст XML) для <xref:System.Xml.Serialization.XmlAttributeOverrides> объекта.</span><span class="sxs-lookup"><span data-stu-id="30173-239">The example then creates an <xref:System.Xml.Serialization.XmlTextAttribute> object, which it assigns to the <xref:System.Xml.Serialization.XmlAttributes.XmlText%2A> property, and adds the <xref:System.Xml.Serialization.XmlAttributes> object (with the name of the field to be serialized as XML text) to the <xref:System.Xml.Serialization.XmlAttributeOverrides> object.</span></span> <span data-ttu-id="30173-240">Наконец, в примере создается <xref:System.Xml.Serialization.XmlSerializer> с помощью <xref:System.Xml.Serialization.XmlAttributeOverrides> объекта.</span><span class="sxs-lookup"><span data-stu-id="30173-240">Lastly the example creates an <xref:System.Xml.Serialization.XmlSerializer> using the <xref:System.Xml.Serialization.XmlAttributeOverrides> object.</span></span>  
  
 [!code-cpp[Classic XmlAttributes.XmlText Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlAttributes.XmlText Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlAttributes.XmlText Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlAttributes.XmlText Example/CS/source.cs#1)]
 [!code-vb[Classic XmlAttributes.XmlText Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlAttributes.XmlText Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlType">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.XmlTypeAttribute XmlType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Serialization.XmlTypeAttribute XmlType" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAttributes.XmlType" />
      <MemberSignature Language="VB.NET" Value="Public Property XmlType As XmlTypeAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Serialization::XmlTypeAttribute ^ XmlType { System::Xml::Serialization::XmlTypeAttribute ^ get(); void set(System::Xml::Serialization::XmlTypeAttribute ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlTypeAttribute</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="30173-241">Получает или задает объект, задающий сериализацию с помощью <see cref="T:System.Xml.Serialization.XmlSerializer" /> для класса, к которому был применен <see cref="T:System.Xml.Serialization.XmlTypeAttribute" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30173-241">Gets or sets an object that specifies how the <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializes a class to which the <see cref="T:System.Xml.Serialization.XmlTypeAttribute" /> has been applied.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="30173-242">
            <see cref="T:System.Xml.Serialization.XmlTypeAttribute" />, который переопределяет <see cref="T:System.Xml.Serialization.XmlTypeAttribute" />, примененный к объявлению класса.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30173-242">An <see cref="T:System.Xml.Serialization.XmlTypeAttribute" /> that overrides an <see cref="T:System.Xml.Serialization.XmlTypeAttribute" /> applied to a class declaration.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="30173-243"><xref:System.Xml.Serialization.XmlTypeAttribute> Можно использовать для управления способом сериализации типа с <xref:System.Xml.Serialization.XmlSerializer>.</span><span class="sxs-lookup"><span data-stu-id="30173-243">The <xref:System.Xml.Serialization.XmlTypeAttribute> can be used to control how a type is serialized by the <xref:System.Xml.Serialization.XmlSerializer>.</span></span> <span data-ttu-id="30173-244">Например, по умолчанию при сериализации типа <xref:System.Xml.Serialization.XmlSerializer> использует имя класса в качестве имени элемента XML.</span><span class="sxs-lookup"><span data-stu-id="30173-244">For example, by default, when a type is serialized, the <xref:System.Xml.Serialization.XmlSerializer> uses the class name as the XML element name.</span></span> <span data-ttu-id="30173-245">Создав <xref:System.Xml.Serialization.XmlTypeAttribute>, параметр <xref:System.Xml.Serialization.XmlAttributes.XmlType%2A> свойства и создание <xref:System.Xml.Serialization.XmlAttributeOverrides> объекта можно изменить имя элемента XML.</span><span class="sxs-lookup"><span data-stu-id="30173-245">By creating an <xref:System.Xml.Serialization.XmlTypeAttribute>, setting the <xref:System.Xml.Serialization.XmlAttributes.XmlType%2A> property to it, and creating an <xref:System.Xml.Serialization.XmlAttributeOverrides> object, you can change the XML element name.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="30173-246">В следующем примере создается <xref:System.Xml.Serialization.XmlTypeAttribute> объекта и присваивает его <xref:System.Xml.Serialization.XmlAttributes.XmlType%2A> свойство <xref:System.Xml.Serialization.XmlAttributes> объекта.</span><span class="sxs-lookup"><span data-stu-id="30173-246">The following example creates an <xref:System.Xml.Serialization.XmlTypeAttribute> object, and assigns it to the <xref:System.Xml.Serialization.XmlAttributes.XmlType%2A> property of an <xref:System.Xml.Serialization.XmlAttributes> object.</span></span>  
  
 [!code-cpp[Classic XmlAttributes.XmlType Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlAttributes.XmlType Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlAttributes.XmlType Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlAttributes.XmlType Example/CS/source.cs#1)]
 [!code-vb[Classic XmlAttributes.XmlType Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlAttributes.XmlType Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>