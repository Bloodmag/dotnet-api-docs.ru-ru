<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="XmlElementAttribute.xml" source-language="en-US" target-language="ru-RU">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac543848081dc33d6961ce9a4aca16c8940293a9226.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">43848081dc33d6961ce9a4aca16c8940293a9226</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Xml.Serialization.XmlElementAttribute">
          <source>Indicates that a public field or property represents an XML element when the <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> serializes or deserializes the object that contains it.</source>
          
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlElementAttribute">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttribute&gt;</ph> belongs to a family of attributes that controls how the <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> serializes or deserializes an object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttribute&gt;</ph> Принадлежит к семейству атрибутов, управляющих как <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> сериализует или десериализует объект.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlElementAttribute">
          <source>For a complete list of similar attributes, see <bpt id="p1">[</bpt>Attributes That Control XML Serialization<ept id="p1">](~/docs/standard/serialization/attributes-that-control-xml-serialization.md)</ept>.</source>
          <target state="translated">Полный список аналогичных атрибутов см. в разделе <bpt id="p1">[</bpt>атрибуты, управляющие сериализацией XML<ept id="p1">](~/docs/standard/serialization/attributes-that-control-xml-serialization.md)</ept>.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlElementAttribute">
          <source>An XML document usually contains XML elements, each of which consists of three parts: an opening tag with possible attributes, a closing tag, and the data between the tags.</source>
          <target state="translated">XML-документ обычно содержит элементы XML, каждый из которых состоит из трех частей: открывающий тег с возможными атрибутами, закрывающий тег и данные между тегами.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlElementAttribute">
          <source>XML tags can be nested--that is, the data between tags can also be XML elements.</source>
          <target state="translated">XML-теги могут быть вложенными, т.е, данные между тегами также может быть XML-элементов.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlElementAttribute">
          <source>This capacity of one element to enclose another allows the document to contain hierarchies of data.</source>
          <target state="translated">Это способность одного элемента содержать другой позволяет документу содержать иерархии данных.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlElementAttribute">
          <source>An XML element can also include attributes.</source>
          <target state="translated">Элемент XML может также включать атрибуты.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlElementAttribute">
          <source>Apply the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttribute&gt;</ph> to public fields or public read/write properties to control characteristics of the XML elements such as the element name and namespace.</source>
          <target state="translated">Применить <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttribute&gt;</ph> открытые поля или свойства чтения/записи для управления характеристиками элементов XML, такие как имя элемента и пространства имен.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlElementAttribute">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttribute&gt;</ph> can be applied multiple times to a field that returns an array of objects.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttribute&gt;</ph> Может применяться несколько раз в поле, возвращающее массив объектов.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlElementAttribute">
          <source>The purpose of this is to specify (through the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttribute.Type%2A&gt;</ph> property) different types that can be inserted into the array.</source>
          <target state="translated">Это предназначено для указания (через <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttribute.Type%2A&gt;</ph> свойство) различных типов, которые могут быть вставлены в массив.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlElementAttribute">
          <source>For example, the array in the following C# code accepts both strings and integers.</source>
          <target state="translated">Например массив, в следующем коде C# принимает строки и целые числа.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlElementAttribute">
          <source>This results in XML that might resemble the following.</source>
          <target state="translated">Это приводит к XML-ФАЙЛ, как показано ниже.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlElementAttribute">
          <source>Note that when you apply the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttribute&gt;</ph> multiple times without specifying an <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlElementAttribute.ElementName%2A&gt;</ph> property value, the elements are named after the type of the acceptable objects.</source>
          <target state="translated">Обратите внимание, что при применении <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttribute&gt;</ph> несколько раз без указания <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlElementAttribute.ElementName%2A&gt;</ph> значение свойства элементов соответствуют именам тип допустимых объектов.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlElementAttribute">
          <source>If you apply the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttribute&gt;</ph> to a field or property that returns an array, the items in the array are encoded as a sequence of XML elements.</source>
          <target state="translated">Если применить <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttribute&gt;</ph> поле или свойство, которое возвращает массив, элементы массива кодируются как последовательность элементов XML.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlElementAttribute">
          <source>In contrast if an <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttribute&gt;</ph> is not applied to such a field or property, the items in the array are encoded as a sequence of elements, nested under an element named after the field or property.</source>
          <target state="translated">В противоположность этому при <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttribute&gt;</ph> не применяется для такого поля или свойства, элементы массива кодируются как последовательность элементов, вложенных в элемент с именем поля или свойства.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlElementAttribute">
          <source>(Use the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlArrayAttribute&gt;</ph> and <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlArrayItemAttribute&gt;</ph> attributes to control how an array is serialized.)</source>
          <target state="translated">(Используйте <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlArrayAttribute&gt;</ph> и <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlArrayItemAttribute&gt;</ph> атрибуты для управления способом сериализации массива.)</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlElementAttribute">
          <source>You can set the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttribute.Type%2A&gt;</ph> property to specify a type that is derived from the type of the original field or property--that is, the field or property to which you have applied the <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlElementAttribute&gt;</ph>.</source>
          <target state="translated">Можно задать <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttribute.Type%2A&gt;</ph> свойство, чтобы указать тип, который является производным от типа исходного поля или свойства — то есть, поле или свойство для которого установлен <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlElementAttribute&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlElementAttribute">
          <source>If a field or property returns an <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph>, you can apply multiple instances of the <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlElementAttribute&gt;</ph> to the member.</source>
          <target state="translated">Если поле или свойство возвращает <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph>, можно применить несколько экземпляров <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlElementAttribute&gt;</ph> к элементу.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlElementAttribute">
          <source>For each instance, set the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttribute.Type%2A&gt;</ph> property to a type of object that can be inserted into the array.</source>
          <target state="translated">Для каждого экземпляра, установите <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttribute.Type%2A&gt;</ph> свойство с типом объекта, который может быть вставлен в массив.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlElementAttribute">
          <source>For more information about using attributes, see <bpt id="p1">[</bpt>Attributes<ept id="p1">](~/docs/standard/attributes/index.md)</ept>.</source>
          <target state="translated">Дополнительные сведения об использовании атрибутов см. в разделе <bpt id="p1">[</bpt>атрибуты<ept id="p1">](~/docs/standard/attributes/index.md)</ept>.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlElementAttribute">
          <source>You can use the word <ph id="ph1">`XmlElement`</ph> in your code instead of the longer <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlElementAttribute&gt;</ph>.</source>
          <target state="translated">Можно использовать слово <ph id="ph1">`XmlElement`</ph> в коде вместо более длинного <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlElementAttribute&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlElementAttribute">
          <source>The following example serializes a class named <ph id="ph1">`Group`</ph> and applies the <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlElementAttribute&gt;</ph> to several of its members.</source>
          <target state="translated">В следующем примере сериализуется класс с именем <ph id="ph1">`Group`</ph> и применяет <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlElementAttribute&gt;</ph> в несколько его элементов.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlElementAttribute">
          <source>The field named <ph id="ph1">`Employees`</ph> returns an array of <ph id="ph2">`Employee`</ph> objects.</source>
          <target state="translated">Поля с названием <ph id="ph1">`Employees`</ph> возвращает массив <ph id="ph2">`Employee`</ph> объектов.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlElementAttribute">
          <source>In this case, the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttribute&gt;</ph> specifies that the resulting XML will not be nested (which is the default behavior of items in an array).</source>
          <target state="translated">В этом случае <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttribute&gt;</ph> указывает, что результирующий XML не будут вложены (это поведение по умолчанию элементов в массиве).</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="T:System.Xml.Serialization.XmlElementAttribute">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlElementAttribute" /&gt;</ph> class.</source>
          
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlElementAttribute.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlElementAttribute" /&gt;</ph> class.</source>
          
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlElementAttribute.#ctor">
          <source>The following example applies the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttribute&gt;</ph> to a class.</source>
          <target state="translated">В следующем примере применяется <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttribute&gt;</ph> к классу.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlElementAttribute.#ctor(System.String)">
          <source>The XML element name of the serialized member.</source>
          
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlElementAttribute.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlElementAttribute" /&gt;</ph> class and specifies the name of the XML element.</source>
          
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlElementAttribute.#ctor(System.String)">
          <source>By default, the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> uses the member name as the XML element name when serializing a class instance.</source>
          <target state="translated">По умолчанию <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> использует имя члена в качестве имени XML-элемента при сериализации экземпляра класса.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlElementAttribute.#ctor(System.String)">
          <source>For example, a field named <ph id="ph1">`Vehicle`</ph> generates an XML element named <ph id="ph2">`Vehicle`</ph>.</source>
          <target state="translated">Например, поле с именем <ph id="ph1">`Vehicle`</ph> создает XML-элемента с именем <ph id="ph2">`Vehicle`</ph>.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlElementAttribute.#ctor(System.String)">
          <source>However if you need a different element, such as <ph id="ph1">`Cars`</ph>, pass it in the <ph id="ph2">`elementName`</ph> parameter.</source>
          <target state="translated">Однако если требуется другой элемент, <ph id="ph1">`Cars`</ph>, передайте его в <ph id="ph2">`elementName`</ph> параметра.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlElementAttribute.#ctor(System.String)">
          <source>The following example shows a simple class that contains a single field named <ph id="ph1">`Vehicles`</ph>.</source>
          <target state="translated">В примере показан простой класс, который содержит одно поле с именем <ph id="ph1">`Vehicles`</ph>.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlElementAttribute.#ctor(System.String)">
          <source>The example applies the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttribute&gt;</ph> to the field and includes the <ph id="ph2">`elementName`</ph> parameter, thereby instructing the <ph id="ph3">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> to generate XML elements named "Cars" rather than "Vehicles".</source>
          <target state="translated">В примере применяется <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttribute&gt;</ph> полю и включает <ph id="ph2">`elementName`</ph> параметра, тем самым указывая <ph id="ph3">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> для создания XML-элементов с именем «Автомобили» вместо «Средства».</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlElementAttribute.#ctor(System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of an object derived from the member's type.</source>
          
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlElementAttribute.#ctor(System.Type)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlElementAttribute" /&gt;</ph> class and specifies a type for the member to which the <ph id="ph2">&lt;see cref="T:System.Xml.Serialization.XmlElementAttribute" /&gt;</ph> is applied.</source>
          
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlElementAttribute.#ctor(System.Type)">
          <source>This type is used by the <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> when serializing or deserializing object that contains it.</source>
          
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlElementAttribute.#ctor(System.Type)">
          <source>Use the <ph id="ph1">`type`</ph> parameter to specify a type that is derived from a base class.</source>
          <target state="translated">Используйте <ph id="ph1">`type`</ph> параметр, чтобы указать тип, производный от базового класса.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlElementAttribute.#ctor(System.Type)">
          <source>For example, suppose a property named <ph id="ph1">`MyAnimal`</ph> returns an <ph id="ph2">`Animal`</ph> object.</source>
          <target state="translated">Например, предположим, что свойство с именем <ph id="ph1">`MyAnimal`</ph> возвращает <ph id="ph2">`Animal`</ph> объекта.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlElementAttribute.#ctor(System.Type)">
          <source>You want to enhance the object, so you create a new class named <ph id="ph1">`Mammal`</ph> that inherits from the <ph id="ph2">`Animal`</ph> class.</source>
          <target state="translated">Чтобы улучшить объект, то создается новый класс с именем <ph id="ph1">`Mammal`</ph> , наследуемый от <ph id="ph2">`Animal`</ph> класса.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlElementAttribute.#ctor(System.Type)">
          <source>To instruct the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> to accept the <ph id="ph2">`Mammal`</ph> class when it serializes the <ph id="ph3">`MyAnimal`</ph> property, pass the <ph id="ph4">&lt;xref:System.Type&gt;</ph> of the <ph id="ph5">`Mammal`</ph> class to the constructor.</source>
          <target state="translated">Чтобы дать указание <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> принимать <ph id="ph2">`Mammal`</ph> класс при сериализации <ph id="ph3">`MyAnimal`</ph> свойства, передайте <ph id="ph4">&lt;xref:System.Type&gt;</ph> из <ph id="ph5">`Mammal`</ph> в конструктор.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlElementAttribute.#ctor(System.Type)">
          <source>The following example serializes a class named <ph id="ph1">`Orchestra`</ph> that contains a single field named <ph id="ph2">`Instruments`</ph>, which returns an array of <ph id="ph3">`Instrument`</ph> objects.</source>
          <target state="translated">В следующем примере сериализуется класс с именем <ph id="ph1">`Orchestra`</ph> , содержащий одно поле с именем <ph id="ph2">`Instruments`</ph>, который возвращает массив <ph id="ph3">`Instrument`</ph> объектов.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlElementAttribute.#ctor(System.Type)">
          <source>A second class named <ph id="ph1">`Brass`</ph> inherits from the <ph id="ph2">`Instrument`</ph> class.</source>
          <target state="translated">Второй класс с именем <ph id="ph1">`Brass`</ph> наследует от <ph id="ph2">`Instrument`</ph> класса.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlElementAttribute.#ctor(System.Type)">
          <source>The example applies the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttribute&gt;</ph> to the <ph id="ph2">`Instruments`</ph> field, and specifies the <ph id="ph3">`Brass`</ph> type, allowing the <ph id="ph4">`Instruments`</ph> field to accept <ph id="ph5">`Brass`</ph> objects.</source>
          <target state="translated">В примере применяется <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttribute&gt;</ph> для <ph id="ph2">`Instruments`</ph> и указывает <ph id="ph3">`Brass`</ph> типа, позволяя <ph id="ph4">`Instruments`</ph> полю принимать <ph id="ph5">`Brass`</ph> объектов.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlElementAttribute.#ctor(System.Type)">
          <source>The example also specifies the name of the XML element by setting the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttribute.ElementName%2A&gt;</ph> property.</source>
          <target state="translated">В примере также указывается имя элемента XML, задав <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttribute.ElementName%2A&gt;</ph> свойство.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlElementAttribute.#ctor(System.String,System.Type)">
          <source>The XML element name of the serialized member.</source>
          
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlElementAttribute.#ctor(System.String,System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of an object derived from the member's type.</source>
          
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlElementAttribute.#ctor(System.String,System.Type)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlElementAttribute" /&gt;</ph> and specifies the name of the XML element and a derived type for the member to which the <ph id="ph2">&lt;see cref="T:System.Xml.Serialization.XmlElementAttribute" /&gt;</ph> is applied.</source>
          
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlElementAttribute.#ctor(System.String,System.Type)">
          <source>This member type is used when the <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> serializes the object that contains it.</source>
          
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlElementAttribute.#ctor(System.String,System.Type)">
          <source>By default, the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> uses the member name as the XML element name when serializing a class instance.</source>
          <target state="translated">По умолчанию <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> использует имя члена в качестве имени XML-элемента при сериализации экземпляра класса.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlElementAttribute.#ctor(System.String,System.Type)">
          <source>For example, a field named <ph id="ph1">`Vehicle`</ph> generates an XML element named <ph id="ph2">`Vehicle`</ph>.</source>
          <target state="translated">Например, поле с именем <ph id="ph1">`Vehicle`</ph> создает XML-элемента с именем <ph id="ph2">`Vehicle`</ph>.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlElementAttribute.#ctor(System.String,System.Type)">
          <source>However, if you need a different element, such as <ph id="ph1">`Cars`</ph>, pass it in the <ph id="ph2">`elementName`</ph> parameter.</source>
          <target state="translated">Тем не менее если требуется другой элемент, <ph id="ph1">`Cars`</ph>, передайте его в <ph id="ph2">`elementName`</ph> параметра.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlElementAttribute.#ctor(System.String,System.Type)">
          <source>Use the <ph id="ph1">`type`</ph> parameter to specify a type that is derived from a base class.</source>
          <target state="translated">Используйте <ph id="ph1">`type`</ph> параметр, чтобы указать тип, производный от базового класса.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlElementAttribute.#ctor(System.String,System.Type)">
          <source>For example, suppose a property named <ph id="ph1">`MyAnimal`</ph> returns an <ph id="ph2">`Animal`</ph> object.</source>
          <target state="translated">Например, предположим, что свойство с именем <ph id="ph1">`MyAnimal`</ph> возвращает <ph id="ph2">`Animal`</ph> объекта.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlElementAttribute.#ctor(System.String,System.Type)">
          <source>You want to enhance the object, so you create a new class named <ph id="ph1">`Mammal`</ph> that inherits from the <ph id="ph2">`Animal`</ph> class.</source>
          <target state="translated">Чтобы улучшить объект, то создается новый класс с именем <ph id="ph1">`Mammal`</ph> , наследуемый от <ph id="ph2">`Animal`</ph> класса.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlElementAttribute.#ctor(System.String,System.Type)">
          <source>To instruct the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> to accept the <ph id="ph2">`Mammal`</ph> class when it serializes the <ph id="ph3">`MyAnimal`</ph> property, pass the <ph id="ph4">&lt;xref:System.Type&gt;</ph> of the <ph id="ph5">`Mammal`</ph> class to the constructor.</source>
          <target state="translated">Чтобы дать указание <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> принимать <ph id="ph2">`Mammal`</ph> класс при сериализации <ph id="ph3">`MyAnimal`</ph> свойства, передайте <ph id="ph4">&lt;xref:System.Type&gt;</ph> из <ph id="ph5">`Mammal`</ph> в конструктор.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlElementAttribute.#ctor(System.String,System.Type)">
          <source>The following example serializes a class named <ph id="ph1">`Orchestra`</ph> that contains a single field named <ph id="ph2">`Instruments`</ph>, which returns an array of <ph id="ph3">`Instrument`</ph> objects.</source>
          <target state="translated">В следующем примере сериализуется класс с именем <ph id="ph1">`Orchestra`</ph> , содержащий одно поле с именем <ph id="ph2">`Instruments`</ph>, который возвращает массив <ph id="ph3">`Instrument`</ph> объектов.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlElementAttribute.#ctor(System.String,System.Type)">
          <source>A second class named <ph id="ph1">`Brass`</ph> inherits from the <ph id="ph2">`Instrument`</ph> class.</source>
          <target state="translated">Второй класс с именем <ph id="ph1">`Brass`</ph> наследует от <ph id="ph2">`Instrument`</ph> класса.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlElementAttribute.#ctor(System.String,System.Type)">
          <source>The example applies the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttribute&gt;</ph> to the <ph id="ph2">`Instruments`</ph> field, and specifies the <ph id="ph3">`Brass`</ph> type, allowing the <ph id="ph4">`Instruments`</ph> field to accept <ph id="ph5">`Brass`</ph> objects.</source>
          <target state="translated">В примере применяется <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttribute&gt;</ph> для <ph id="ph2">`Instruments`</ph> и указывает <ph id="ph3">`Brass`</ph> типа, позволяя <ph id="ph4">`Instruments`</ph> полю принимать <ph id="ph5">`Brass`</ph> объектов.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlElementAttribute.#ctor(System.String,System.Type)">
          <source>The example also specifies the name of the XML element by setting the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttribute.ElementName%2A&gt;</ph> property.</source>
          <target state="translated">В примере также указывается имя элемента XML, задав <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttribute.ElementName%2A&gt;</ph> свойство.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="P:System.Xml.Serialization.XmlElementAttribute.DataType">
          <source>Gets or sets the XML Schema definition (XSD) data type of the XML element generated by the <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.DataType">
          <source>An XML Schema data type, as defined by the World Wide Web Consortium (www.w3.org) document named "XML Schema Part 2: Datatypes".</source>
          <target state="translated">Тип данных схемы XML, как определено документом консорциума World Wide Web (www.w3.org) с именем «XML схема часть 2: типы данных».</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.DataType">
          <source>The following table lists the XML Schema simple data types with their.NET equivalents.</source>
          <target state="translated">Ниже перечислены типы простых данных схемы XML с их эквивалентами.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.DataType">
          <source>For the XML Schema <ph id="ph1">`base64Binary`</ph> and <ph id="ph2">`hexBinary`</ph> data types, use an array of <ph id="ph3">&lt;xref:System.Byte&gt;</ph> structures, and apply a <ph id="ph4">&lt;xref:System.Xml.Serialization.XmlElementAttribute&gt;</ph> with the <ph id="ph5">&lt;xref:System.Xml.Serialization.XmlElementAttribute.DataType%2A&gt;</ph> set to "base64Binary" or "hexBinary", as appropriate.</source>
          <target state="translated">XML-схемы <ph id="ph1">`base64Binary`</ph> и <ph id="ph2">`hexBinary`</ph> типов данных, используйте массив <ph id="ph3">&lt;xref:System.Byte&gt;</ph> структуры и применения <ph id="ph4">&lt;xref:System.Xml.Serialization.XmlElementAttribute&gt;</ph> с <ph id="ph5">&lt;xref:System.Xml.Serialization.XmlElementAttribute.DataType%2A&gt;</ph> присвоено значение «base64Binary» или «hexBinary».</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.DataType">
          <source>For the XML Schema <ph id="ph1">`time`</ph> and <ph id="ph2">`date`</ph> data types, use the <ph id="ph3">&lt;xref:System.DateTime&gt;</ph> type and apply the <ph id="ph4">&lt;xref:System.Xml.Serialization.XmlElementAttribute&gt;</ph> with the <ph id="ph5">&lt;xref:System.Xml.Serialization.XmlElementAttribute.DataType%2A&gt;</ph> set to "date" or "time".</source>
          <target state="translated">XML-схемы <ph id="ph1">`time`</ph> и <ph id="ph2">`date`</ph> типов данных используйте <ph id="ph3">&lt;xref:System.DateTime&gt;</ph> введите и применить <ph id="ph4">&lt;xref:System.Xml.Serialization.XmlElementAttribute&gt;</ph> с <ph id="ph5">&lt;xref:System.Xml.Serialization.XmlElementAttribute.DataType%2A&gt;</ph> присвоено значение «date» или «время».</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.DataType">
          <source>For every XML Schema type that is mapped to a string, apply the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttribute&gt;</ph> with its <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlElementAttribute.DataType%2A&gt;</ph> property set to the XML Schema type.</source>
          <target state="translated">Для каждого типа схемы XML, отраженного в строке, примените <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttribute&gt;</ph> с его <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlElementAttribute.DataType%2A&gt;</ph> значение свойства типа схемы XML.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.DataType">
          <source>It is possible that this can change the serialization format, not only the schema for the member.</source>
          <target state="translated">Это возможно, это можно изменить формат сериализации, а не только схему для члена.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.DataType">
          <source>The property is case-sensitive, so you must set it exactly to one of the XML Schema data types.</source>
          <target state="translated">Свойство учитывает регистр, поэтому его необходимо задать ровно на один из типов данных схемы XML.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.DataType">
          <source>Passing binary data as an XML element is more efficient than passing it as an XML Schema attribute.</source>
          <target state="translated">Передача двоичных данных в виде XML-элемент является более эффективным, чем передача в качестве атрибута схемы XML.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.DataType">
          <source>For more information about XML data types, see the World Wide Web Consortium (www.w3.org) document named "XML Schema Part 2: Datatypes".</source>
          <target state="translated">Дополнительные сведения о типах данных см. в документе консорциума World Wide Web (www.w3.org) с именем «XML схема часть 2: типы данных».</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.DataType">
          <source>XSD data type</source>
          <target state="translated">Тип данных XSD</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.DataType">
          <source>.NET data type</source>
          <target state="translated">Тип данных .NET</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.DataType">
          <source>anyURI</source>
          <target state="translated">anyURI</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.DataType">
          <source>base64Binary</source>
          <target state="translated">base64Binary</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.DataType">
          <source>Array of <ph id="ph1">&lt;xref:System.Byte&gt;</ph> objects</source>
          <target state="translated">Массив <ph id="ph1">&lt;xref:System.Byte&gt;</ph> объектов</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.DataType">
          <source>boolean</source>
          <target state="translated">boolean</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.DataType">
          <source>byte</source>
          <target state="translated">byte</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.DataType">
          <source>date</source>
          <target state="translated">date</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.DataType">
          <source>dateTime</source>
          <target state="translated">dateTime</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.DataType">
          <source>decimal</source>
          <target state="translated">decimal</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.DataType">
          <source>double</source>
          <target state="translated">double</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.DataType">
          <source>ENTITY</source>
          <target state="translated">ENTITY</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.DataType">
          <source>ENTITIES</source>
          <target state="translated">СУЩНОСТИ</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.DataType">
          <source>float</source>
          <target state="translated">float</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.DataType">
          <source>gDay</source>
          <target state="translated">gDay</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.DataType">
          <source>gMonth</source>
          <target state="translated">gMonth</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.DataType">
          <source>gMonthDay</source>
          <target state="translated">gMonthDay</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.DataType">
          <source>gYear</source>
          <target state="translated">типа gYear</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.DataType">
          <source>gYearMonth</source>
          <target state="translated">gYearMonth</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.DataType">
          <source>hexBinary</source>
          <target state="translated">hexBinary</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.DataType">
          <source>Array of <ph id="ph1">&lt;xref:System.Byte&gt;</ph> objects</source>
          <target state="translated">Массив <ph id="ph1">&lt;xref:System.Byte&gt;</ph> объектов</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.DataType">
          <source>ID</source>
          <target state="translated">ID</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.DataType">
          <source>IDREF</source>
          <target state="translated">IDREF</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.DataType">
          <source>IDREFS</source>
          <target state="translated">IDREFS</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.DataType">
          <source>int</source>
          <target state="translated">int</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.DataType">
          <source>integer</source>
          <target state="translated">целочисленный</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.DataType">
          <source>language</source>
          <target state="translated">язык</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.DataType">
          <source>long</source>
          <target state="translated">long</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.DataType">
          <source>Name</source>
          <target state="translated">name</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.DataType">
          <source>NCName</source>
          <target state="translated">NCName</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.DataType">
          <source>negativeInteger</source>
          <target state="translated">negativeInteger</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.DataType">
          <source>NMTOKEN</source>
          <target state="translated">NMTOKEN</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.DataType">
          <source>NMTOKENS</source>
          <target state="translated">NMTOKENS</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.DataType">
          <source>normalizedString</source>
          <target state="translated">normalizedString</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.DataType">
          <source>nonNegativeInteger</source>
          <target state="translated">nonNegativeInteger</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.DataType">
          <source>nonPositiveInteger</source>
          <target state="translated">nonPositiveInteger</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.DataType">
          <source>NOTATION</source>
          <target state="translated">NOTATION</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.DataType">
          <source>positiveInteger</source>
          <target state="translated">positiveInteger</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.DataType">
          <source>QName</source>
          <target state="translated">QName</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.DataType">
          <source>duration</source>
          <target state="translated">длительность</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.DataType">
          <source>string</source>
          <target state="translated">string</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.DataType">
          <source>short</source>
          <target state="translated">short</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.DataType">
          <source>time</source>
          <target state="translated">время</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.DataType">
          <source>token</source>
          <target state="translated">token</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.DataType">
          <source>unsignedByte</source>
          <target state="translated">unsignedByte</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.DataType">
          <source>unsignedInt</source>
          <target state="translated">unsignedInt</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.DataType">
          <source>unsignedLong</source>
          <target state="translated">unsignedLong</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.DataType">
          <source>unsignedShort</source>
          <target state="translated">unsignedShort</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.DataType">
          <source>The following example serializes a class named <ph id="ph1">`Group`</ph> that contains a field named <ph id="ph2">`ExtraInfo`</ph>, which returns an <ph id="ph3">&lt;xref:System.Collections.ArrayList&gt;</ph>.</source>
          <target state="translated">В следующем примере сериализуется класс с именем <ph id="ph1">`Group`</ph> , содержащий поле с именем <ph id="ph2">`ExtraInfo`</ph>, который возвращает <ph id="ph3">&lt;xref:System.Collections.ArrayList&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.DataType">
          <source>The example applies two instances of the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttribute&gt;</ph> to the field and specifies different <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlElementAttribute.DataType%2A&gt;</ph> values for each instance.</source>
          <target state="translated">В примере применяются два экземпляра <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttribute&gt;</ph> в поле и определяет различные <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlElementAttribute.DataType%2A&gt;</ph> значений для каждого экземпляра.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.DataType">
          <source>Each instance enables the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> to serialize the specified types inserted into the array.</source>
          <target state="translated">Каждый экземпляр разрешает <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> для сериализации указанных типов, вставляемого в массив.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="P:System.Xml.Serialization.XmlElementAttribute.DataType">
          <source>The XML Schema data type you have specified cannot be mapped to the.NET data type.</source>
          
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="P:System.Xml.Serialization.XmlElementAttribute.ElementName">
          <source>Gets or sets the name of the generated XML element.</source>
          
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.ElementName">
          <source>The name of the generated XML element.</source>
          <target state="translated">Имя создаваемого элемента XML.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.ElementName">
          <source>The default is the member identifier.</source>
          <target state="translated">Значение по умолчанию — идентификатор элемента.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.ElementName">
          <source>Specify an <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlArrayItemAttribute.ElementName%2A&gt;</ph> if you want the name of the generated XML element to differ from the member's identifier.</source>
          <target state="translated">Укажите <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlArrayItemAttribute.ElementName%2A&gt;</ph> Если требуется, чтобы имя создаваемого элемента XML отличалось от идентификатора члена.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.ElementName">
          <source>You can set the same <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlArrayAttribute.ElementName%2A&gt;</ph> value to more than one class member if the generated XML document uses XML namespaces to distinguish between the identically named members.</source>
          <target state="translated">Можно задать же <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlArrayAttribute.ElementName%2A&gt;</ph> значение на более чем один член класса, если созданный XML-документ использует пространства имен XML, чтобы различать члены с одинаковыми именами.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.ElementName">
          <source>For details on how to use namespaces and prefixed names in the XML document, see the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializerNamespaces&gt;</ph> class.</source>
          <target state="translated">Дополнительные сведения об использовании пространства имен и имен с префиксами в документе XML см. в разделе <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializerNamespaces&gt;</ph> класса.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.ElementName">
          <source>The following example sets the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttribute.ElementName%2A&gt;</ph> property of an <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlElementAttribute&gt;</ph> to a new value.</source>
          <target state="translated">В следующем примере задается <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttribute.ElementName%2A&gt;</ph> свойство <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlElementAttribute&gt;</ph> новое значение.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="P:System.Xml.Serialization.XmlElementAttribute.Form">
          <source>Gets or sets a value that indicates whether the element is qualified.</source>
          
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.Form">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaForm" /&gt;</ph> values.</source>
          <target state="translated">Одно из значений перечисления <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaForm" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.Form">
          <source>The default is <ph id="ph1">&lt;see cref="F:System.Xml.Schema.XmlSchemaForm.None" /&gt;</ph>.</source>
          <target state="translated">Значение по умолчанию — <ph id="ph1">&lt;see cref="F:System.Xml.Schema.XmlSchemaForm.None" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.Form">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributeAttribute.Form%2A&gt;</ph> property determines whether an XML element is qualified or unqualified.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributeAttribute.Form%2A&gt;</ph> Свойство определяет, является ли элемент XML полным или неполным.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.Form">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributeAttribute.Form%2A&gt;</ph> property conforms to the World Wide Web Consortium (www.w3.org) 1999 specification, "Namespaces in XML".</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributeAttribute.Form%2A&gt;</ph> Свойства соответствует спецификации 1999 консорциума World Wide Web (www.w3.org), «Пространства имен в XML».</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.Form">
          <source>If the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributeAttribute.Namespace%2A&gt;</ph> property is set to any value, attempting to set the <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlElementAttribute.Form%2A&gt;</ph> property to <ph id="ph3">`XmlSchemaForm.Unqualified`</ph> throws an exception.</source>
          <target state="translated">Если <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributeAttribute.Namespace%2A&gt;</ph> задано любое значение, попытка задать <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlElementAttribute.Form%2A&gt;</ph> свойства <ph id="ph3">`XmlSchemaForm.Unqualified`</ph> приводит к возникновению исключения.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.Form">
          <source>The default setting, <ph id="ph1">`XmlSchemaForm.None`</ph>, instructs the <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> to check the schema for the XML document to determine whether the namespace is qualified.</source>
          <target state="translated">Значение по умолчанию <ph id="ph1">`XmlSchemaForm.None`</ph>, указывает, что <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> для проверки схемы для XML-документа определить, является ли пространство имен полным.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.Form">
          <source>If the schema does not specify a value for an individual element or attribute, the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> uses the <ph id="ph2">`elementFormDefault`</ph> and <ph id="ph3">`attributeFormDefault`</ph> values to determine whether an element or attribute is qualified.</source>
          <target state="translated">Если схема не задает значение для отдельного элемента или атрибута, <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> использует <ph id="ph2">`elementFormDefault`</ph> и <ph id="ph3">`attributeFormDefault`</ph> значения, чтобы определить, является ли элемент или атрибут полным.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.Form">
          <source>The following XML code shows a schema:</source>
          <target state="translated">Приведенный ниже код XML показывает схему:</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.Form">
          <source>When the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> reads the schema, the <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributeAttribute.Form%2A&gt;</ph> value for both the <ph id="ph3">`Name`</ph> and <ph id="ph4">`Number`</ph> is <ph id="ph5">`XmlSchemaForm.None`</ph>, but the <ph id="ph6">`Name`</ph> element is qualified, while the <ph id="ph7">`Number`</ph> element is unqualified.</source>
          <target state="translated">При <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> считывает схему, <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributeAttribute.Form%2A&gt;</ph> для обоих <ph id="ph3">`Name`</ph> и <ph id="ph4">`Number`</ph> — <ph id="ph5">`XmlSchemaForm.None`</ph>, но <ph id="ph6">`Name`</ph> полным элемента во время <ph id="ph7">`Number`</ph> элемент является неполным.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.Form">
          <source>The following example sets the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttribute.Form%2A&gt;</ph> property to <ph id="ph2">`XmlSchemaForm.Unqualified`</ph>.</source>
          <target state="translated">В следующем примере задается <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttribute.Form%2A&gt;</ph> свойства <ph id="ph2">`XmlSchemaForm.Unqualified`</ph>.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="P:System.Xml.Serialization.XmlElementAttribute.IsNullable">
          <source>Gets or sets a value that indicates whether the <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> must serialize a member that is set to <ph id="ph2">&lt;see langword="null" /&gt;</ph> as an empty tag with the <ph id="ph3">&lt;see langword="xsi:nil" /&gt;</ph> attribute set to <ph id="ph4">&lt;see langword="true" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.IsNullable">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> generates the <ph id="ph3">&lt;see langword="xsi:nil" /&gt;</ph> attribute; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Если <ph id="ph2">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> приводит к возникновению ошибки <ph id="ph3">&lt;see langword="xsi:nil" /&gt;</ph> атрибут; в противном случае <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.IsNullable">
          <source>The XML schema specification for structures allows an XML document to explicitly signal that an element's content is missing.</source>
          <target state="translated">Спецификация схемы XML для структур позволяет явным образом указывать, что отсутствует содержимое элемента в XML-документа.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.IsNullable">
          <source>Such an element contains the attribute <ph id="ph1">`xsi:nil`</ph> set to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">Такой элемент содержит атрибут <ph id="ph1">`xsi:nil`</ph> значение <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.IsNullable">
          <source>For more information, see the World Wide Web Consortium (www.w3.org) specification, "XML Schema Part 1: Structures".</source>
          <target state="translated">Дополнительные сведения см. в спецификации консорциума World Wide Web (www.w3.org), «XML-схема часть 1: структуры».</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.IsNullable">
          <source>If the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttribute.IsNullable%2A&gt;</ph> property is set to <ph id="ph2">`true`</ph>, the <ph id="ph3">`xsi:nil`</ph> attribute is generated for class members that have been set to <ph id="ph4">`null`</ph>.</source>
          <target state="translated">Если <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttribute.IsNullable%2A&gt;</ph> свойству <ph id="ph2">`true`</ph>, <ph id="ph3">`xsi:nil`</ph> атрибут создается для членов класса, имеющих значение <ph id="ph4">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.IsNullable">
          <source>For example if you set a field named <ph id="ph1">`MyStringArray`</ph> to <ph id="ph2">`null`</ph>, the <ph id="ph3">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> generates the following XML code.</source>
          <target state="translated">Например, если значение поля с именем <ph id="ph1">`MyStringArray`</ph> для <ph id="ph2">`null`</ph>, <ph id="ph3">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> создает следующий код XML.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.IsNullable">
          <source>If the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttribute.IsNullable%2A&gt;</ph> property is <ph id="ph2">`false`</ph>, no XML element is generated for class members that have been set to <ph id="ph3">`null`</ph>.</source>
          <target state="translated">Если <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttribute.IsNullable%2A&gt;</ph> свойство <ph id="ph2">`false`</ph>, элемент XML, создается для членов класса, имеющих значение <ph id="ph3">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.IsNullable">
          <source>You cannot apply the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttribute.IsNullable%2A&gt;</ph> property to a member typed as a value type because a value type cannot contain <ph id="ph2">`null`</ph>.</source>
          <target state="translated">Не удается применить <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttribute.IsNullable%2A&gt;</ph> свойство члену имеющему тип значения, потому что тип значения не может содержать <ph id="ph2">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.IsNullable">
          <source>Additionally, you cannot set this property to <ph id="ph1">`false`</ph> for nullable value types.</source>
          <target state="translated">Кроме того, невозможно задать это свойство <ph id="ph1">`false`</ph> для типов значений, допускающие значение NULL.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.IsNullable">
          <source>When such types are <ph id="ph1">`null`</ph>, they will be serialized by setting <ph id="ph2">`xsi:nil`</ph> to <ph id="ph3">`true`</ph>.</source>
          <target state="translated">Когда такие типы являются <ph id="ph1">`null`</ph>, они будут сериализованы, задав <ph id="ph2">`xsi:nil`</ph> для <ph id="ph3">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.IsNullable">
          <source>The following example shows a field with the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttribute&gt;</ph> applied to it, and the <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlElementAttribute.IsNullable%2A&gt;</ph> property set to <ph id="ph3">`false`</ph>.</source>
          <target state="translated">В следующем примере показано поле с <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttribute&gt;</ph> применяемый к нему и <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlElementAttribute.IsNullable%2A&gt;</ph> свойство <ph id="ph3">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="P:System.Xml.Serialization.XmlElementAttribute.Namespace">
          <source>Gets or sets the namespace assigned to the XML element that results when the class is serialized.</source>
          
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.Namespace">
          <source>The namespace of the XML element.</source>
          <target state="translated">Пространство имен элемента XML.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.Namespace">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlArrayItemAttribute.Namespace%2A&gt;</ph> property conforms to the World Wide Web Consortium (www.w3.org) specification, "Namespaces in XML".</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Serialization.XmlArrayItemAttribute.Namespace%2A&gt;</ph> Свойства соответствует спецификации консорциума World Wide Web (www.w3.org), «Пространства имен в XML».</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.Namespace">
          <source>To create namespaces that are associated with a prefix, you must create an <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializerNamespaces&gt;</ph> that contains the namespaces and prefixes used in the XML document.</source>
          <target state="translated">Для создания пространств имен, связанных с префиксом, необходимо создать <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializerNamespaces&gt;</ph> , содержащий пространства имен и префиксы, используемые в XML-документе.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.Namespace">
          <source>As you set the namespace for each <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlArrayAttribute&gt;</ph>, it must match one of the namespaces in the <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlSerializerNamespaces&gt;</ph>.</source>
          <target state="translated">Как задать пространство имен для каждого <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlArrayAttribute&gt;</ph>, он должен соответствовать одному из пространств имен в <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlSerializerNamespaces&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.Namespace">
          <source>When the XML is generated, each array is correctly prefixed with the prefix associated with the specified namespace.</source>
          <target state="translated">При генерации XML каждый массив получает префикс, связанный с указанным пространством имен.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="P:System.Xml.Serialization.XmlElementAttribute.Order">
          <source>Gets or sets the explicit order in which the elements are serialized or deserialized.</source>
          
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.Order">
          <source>The order of the code generation.</source>
          <target state="translated">Порядок создания кода.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.Order">
          <source>Use the <ph id="ph1">&lt;xref:System.Xml.Serialization.CodeGenerationOptions.GenerateOrder&gt;</ph> enumeration to instruct the <ph id="ph2">&lt;xref:System.Web.Services.Description.ServiceDescriptionImporter&gt;</ph> to generate code that sets the <ph id="ph3">&lt;xref:System.Xml.Serialization.XmlElementAttribute.Order%2A&gt;</ph> property.</source>
          <target state="translated">Используйте <ph id="ph1">&lt;xref:System.Xml.Serialization.CodeGenerationOptions.GenerateOrder&gt;</ph> перечисления, чтобы дать указание <ph id="ph2">&lt;xref:System.Web.Services.Description.ServiceDescriptionImporter&gt;</ph> для создания кода, который задает <ph id="ph3">&lt;xref:System.Xml.Serialization.XmlElementAttribute.Order%2A&gt;</ph> свойства.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.Order">
          <source>Once the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttribute.Order%2A&gt;</ph> property has been used on one public property or field in a type, it must be applied to all public properties and fields for that type and all inherited types.</source>
          <target state="translated">Один раз <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttribute.Order%2A&gt;</ph> свойство было использовано для одного общего свойства или поля в типе, применимые ко всем открытым свойствам и полям для этого типа и всех наследуемых типов.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="P:System.Xml.Serialization.XmlElementAttribute.Type">
          <source>Gets or sets the object type used to represent the XML element.</source>
          
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.Type">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of the member.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> Элемента.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.Type">
          <source>Use the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttribute.Type%2A&gt;</ph> property to specify a derived type for a field or property.</source>
          <target state="translated">Используйте <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttribute.Type%2A&gt;</ph> свойство, чтобы указать производного типа для поля или свойства.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.Type">
          <source>If a field or property returns an <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph>, you can apply multiple instances of the <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlElementAttribute&gt;</ph> to the member.</source>
          <target state="translated">Если поле или свойство возвращает <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph>, можно применить несколько экземпляров <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlElementAttribute&gt;</ph> к элементу.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.Type">
          <source>For each instance, set the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttribute.Type%2A&gt;</ph> property to a type of object that can be inserted into the array.</source>
          <target state="translated">Для каждого экземпляра, установите <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttribute.Type%2A&gt;</ph> свойство с типом объекта, который может быть вставлен в массив.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.Type">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttribute.Type%2A&gt;</ph> property to specify a derived object for an <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlElementAttribute&gt;</ph>.</source>
          <target state="translated">В следующем примере используется <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttribute.Type%2A&gt;</ph> для указания производного объекта для <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlElementAttribute&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.Type">
          <source>The example also applies three instances of the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttribute&gt;</ph> to a field that returns an <ph id="ph2">&lt;xref:System.Collections.ArrayList&gt;</ph>.</source>
          <target state="translated">В следующем примере применяются три экземпляра <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttribute&gt;</ph> к полю, которое возвращает <ph id="ph2">&lt;xref:System.Collections.ArrayList&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.Type">
          <source>Each instance specifies a type allowed in the field.</source>
          <target state="translated">Каждый экземпляр указывает тип, допустимый в поле.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>