<Type Name="XmlTextAttribute" FullName="System.Xml.Serialization.XmlTextAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="cd1d340d704f2f3871d98c0ff007f941da7ed18b" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30720768" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class XmlTextAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlTextAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Serialization.XmlTextAttribute" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlTextAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlTextAttribute : Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Field | System.AttributeTargets.Parameter | System.AttributeTargets.Property | System.AttributeTargets.ReturnValue)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Указывает на <see cref="T:System.Xml.Serialization.XmlSerializer" />, что член должен обрабатываться как текст XML, когда содержащий его класс сериализуется или десериализуется.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xml.Serialization.XmlTextAttribute> Принадлежит к семейству атрибутов, управляющих как <xref:System.Xml.Serialization.XmlSerializer> выполняет сериализацию и десериализацию объекта (через его <xref:System.Xml.Serialization.XmlSerializer.Serialize%2A> и <xref:System.Xml.Serialization.XmlSerializer.Deserialize%2A> методов). Полный список аналогичных атрибутов см. в разделе [атрибуты, управляющие сериализацией XML](~/docs/standard/serialization/attributes-that-control-xml-serialization.md).  
  
 Только один экземпляр <xref:System.Xml.Serialization.XmlTextAttribute> класс может быть применен в классе.  
  
 Можно применить <xref:System.Xml.Serialization.XmlTextAttribute> открытые поля и свойства чтения/записи, которые возвращают простые типы и типы перечисления.  
  
 Можно применить <xref:System.Xml.Serialization.XmlTextAttribute> поле или свойство, которое возвращает массив строк. Можно также применить атрибут к массиву типа <xref:System.Object> , но необходимо задать <xref:System.Xml.Serialization.XmlTextAttribute.Type%2A> строку. В этом случае любые строки, вставляемые в массив будут сериализованы как текст в формате XML.  
  
 <xref:System.Xml.Serialization.XmlTextAttribute> Могут также применяться к полю, которое возвращает <xref:System.Xml.XmlNode> или массив <xref:System.Xml.XmlNode> объектов.  
  
 По умолчанию <xref:System.Xml.Serialization.XmlSerializer> сериализует член класса как XML-элемента. Однако если применить <xref:System.Xml.Serialization.XmlTextAttribute> к члену, <xref:System.Xml.Serialization.XmlSerializer> переведет его значение в текст в формате XML. Это означает, что значение кодируется в содержимое элемента XML.  
  
 [Инструмент определения схемы XML (Xsd.exe)](~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md) иногда приводит к возникновению ошибки <xref:System.Xml.Serialization.XmlTextAttribute> при создании классов из файла схемы XML (XSD) определение. Это происходит, когда схема содержит `complexType` со смешанным содержимым; в этом случае соответствующий класс содержит член, который возвращает массив строк, для которого <xref:System.Xml.Serialization.XmlTextAttribute> применяется. Например, если `Xml Schema Definition` средство обработает эту схему:  
  
```  
<xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace=""   
xmlns:xs="http://www.w3.org/2001/XMLSchema">  
  <xs:element name="LinkList" type="LinkList" />  
  <xs:complexType name="LinkList" mixed="true">  
    <xs:sequence>  
      <xs:element minOccurs="1" maxOccurs="1" name="id" type="xs:int" />  
      <xs:element minOccurs="0" maxOccurs="1" name="name" type="xs:string" />  
      <xs:element minOccurs="0" maxOccurs="1" name="next" type="LinkList" />  
    </xs:sequence>  
  </xs:complexType>  
</xs:schema>  
```  
  
 Следующий класс создается (лишних пробелов и примечания были удалены):  
  
 [!code-csharp[XmlTextAttribute#0](~/samples/snippets/csharp/VS_Snippets_Remoting/XmlTextAttribute/cs/source.cs#0)]
 [!code-vb[XmlTextAttribute#0](~/samples/snippets/visualbasic/VS_Snippets_Remoting/XmlTextAttribute/vb/source.vb#0)]  
  
 Дополнительные сведения об использовании атрибутов см. в разделе [атрибуты](~/docs/standard/attributes/index.md).  
  
> [!NOTE]
>  Можно использовать слово `XmlText` в коде вместо более длинного <xref:System.Xml.Serialization.XmlTextAttribute>.  
  
   
  
## Examples  
 [!code-cpp[Classic XmlTextAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlTextAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlTextAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlTextAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic XmlTextAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlTextAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xml.Serialization.XmlAttributeOverrides" />
    <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
    <altmember cref="T:System.Xml.Serialization.XmlSerializer" />
    <altmember cref="P:System.Xml.Serialization.XmlAttributes.XmlText" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.Serialization.XmlTextAttribute" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlTextAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlTextAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlTextAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.Serialization.XmlTextAttribute" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Можно переопределить способ, <xref:System.Xml.Serialization.XmlSerializer> выполняет сериализацию открытого поля или свойства чтения/записи, создав <xref:System.Xml.Serialization.XmlAttributes>и присвоения его <xref:System.Xml.Serialization.XmlAttributes.XmlText%2A> свойства <xref:System.Xml.Serialization.XmlTextAttribute>. Дополнительные сведения см. в описании класса <xref:System.Xml.Serialization.XmlAttributeOverrides>.  
  
   
  
## Examples  
 В следующем примере сериализуется класс, содержащий открытое поле с именем `Comment`. В примере применяется <xref:System.Xml.Serialization.XmlTextAttribute> с полем, тем самым переопределяя его сериализацию в виде элемента XML и сериализацию его как XML-текст.  
  
 [!code-cpp[Classic XmlTextAttribute.XmlTextAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlTextAttribute.XmlTextAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlTextAttribute.XmlTextAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlTextAttribute.XmlTextAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic XmlTextAttribute.XmlTextAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlTextAttribute.XmlTextAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlTextAttribute (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlTextAttribute.#ctor(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlTextAttribute(Type ^ type);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">
          <see cref="T:System.Type" /> сериализуемого члена.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.Serialization.XmlTextAttribute" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Можно переопределить способ, <xref:System.Xml.Serialization.XmlSerializer> выполняет сериализацию открытого поля или свойства чтения/записи, создав <xref:System.Xml.Serialization.XmlAttributes>и присвоения его <xref:System.Xml.Serialization.XmlAttributes.XmlText%2A> свойства <xref:System.Xml.Serialization.XmlTextAttribute>. Дополнительные сведения см. в описании класса <xref:System.Xml.Serialization.XmlAttributeOverrides>.  
  
   
  
## Examples  
 [!code-cpp[Classic XmlTextAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlTextAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlTextAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlTextAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic XmlTextAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlTextAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataType">
      <MemberSignature Language="C#" Value="public string DataType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataType" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlTextAttribute.DataType" />
      <MemberSignature Language="VB.NET" Value="Public Property DataType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DataType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает тип данных языка определения схем XML (XSD) текста, сгенерированного <see cref="T:System.Xml.Serialization.XmlSerializer" />.</summary>
        <value>Тип данных схемы XML (XSD) согласно документу "Схема XML, часть 2: типы данных" консорциума World Wide Web (www.w3.org).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Параметр <xref:System.Xml.Serialization.XmlTextAttribute.DataType%2A> свойства XML-схема простой тип данных влияет на формат созданного кода XML. Например, присвоив свойству «date» вызывает генерируемый текст форматируются в обычный формат даты, например: 2001-08-31. В отличие от этого свойства значение «dateTime» результаты в указанном экземпляре, в соответствии с Международной организации стандартизации документа 8601 «Представления дат и времени», например: 2001-08-15T06:59:11.0508456-07:00.  
  
 Влияние параметра <xref:System.Xml.Serialization.XmlTextAttribute.DataType%2A> свойство также можно увидеть при использовании [инструмент определения схемы XML (Xsd.exe)](~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md) для создания схемы XML компилированного файла. Дополнительные сведения по использованию инструмента см. в разделе [инструмент определения схемы XML и XML-сериализация](~/docs/standard/serialization/the-xml-schema-definition-tool-and-xml-serialization.md).  
  
 Ниже перечислены типы простых данных схемы XML с их эквивалентами .NET.  
  
 XML-схемы `base64Binary` и `hexBinary` типов данных, используйте массив <xref:System.Byte> структуры и применения <xref:System.Xml.Serialization.XmlTextAttribute> с <xref:System.Xml.Serialization.XmlTextAttribute.DataType%2A> присвоено значение «base64Binary» или «hexBinary». XML-схемы `time` и `date` типов данных используйте <xref:System.DateTime> введите и применить <xref:System.Xml.Serialization.XmlTextAttribute> с <xref:System.Xml.Serialization.XmlTextAttribute.DataType%2A> присвоено значение «date» или «время».  
  
 Для каждого типа данных схемы XML, отраженного в строке, примените <xref:System.Xml.Serialization.XmlTextAttribute> с его <xref:System.Xml.Serialization.XmlTextAttribute.DataType%2A> значение свойства типа данных схемы XML. Обратите внимание, что это не изменяет формат сериализации, а только схему для члена.  
  
> [!NOTE]
>  Свойство учитывает регистр, поэтому его необходимо задать ровно на один из типов данных схемы XML.  
  
> [!NOTE]
>  Передача двоичных данных в виде XML-элемент является более эффективным, чем передача в качестве атрибута XML.  
  
 Дополнительные сведения о типах данных схемы XML см. в документе консорциума World Wide Web (www.w3.org) с именем «XML схема часть 2: типы данных».  
  
|Тип данных XSD|Тип данных .NET|  
|-------------------|--------------------|  
|anyURI|<xref:System.String>|  
|base64Binary|Массив <xref:System.Byte> объектов|  
|boolean|<xref:System.Boolean>|  
|byte|<xref:System.SByte>|  
|date|<xref:System.DateTime>|  
|dateTime|<xref:System.DateTime>|  
|decimal|<xref:System.Decimal>|  
|double|<xref:System.Double>|  
|ENTITY|<xref:System.String>|  
|СУЩНОСТИ|<xref:System.String>|  
|float|<xref:System.Single>|  
|gDay|<xref:System.String>|  
|gMonth|<xref:System.String>|  
|gMonthDay|<xref:System.String>|  
|типа gYear|<xref:System.String>|  
|gYearMonth|<xref:System.String>|  
|hexBinary|Массив <xref:System.Byte> объектов|  
|ID|<xref:System.String>|  
|IDREF|<xref:System.String>|  
|IDREFS|<xref:System.String>|  
|int|<xref:System.Int32>|  
|целочисленный|<xref:System.String>|  
|язык|<xref:System.String>|  
|long|<xref:System.Int64>|  
|name|<xref:System.String>|  
|NCName|<xref:System.String>|  
|negativeInteger|<xref:System.String>|  
|NMTOKEN|<xref:System.String>|  
|NMTOKENS|<xref:System.String>|  
|normalizedString|<xref:System.String>|  
|nonNegativeInteger|<xref:System.String>|  
|nonPositiveInteger|<xref:System.String>|  
|NOTATION|<xref:System.String>|  
|positiveInteger|<xref:System.String>|  
|QName|<xref:System.Xml.XmlQualifiedName>|  
|длительность|<xref:System.String>|  
|string|<xref:System.String>|  
|short|<xref:System.Int16>|  
|время|<xref:System.DateTime>|  
|token|<xref:System.String>|  
|unsignedByte|<xref:System.Byte>|  
|unsignedInt|<xref:System.UInt32>|  
|unsignedLong|<xref:System.UInt64>|  
|unsignedShort|<xref:System.UInt16>|  
  
   
  
## Examples  
 [!code-cpp[Classic XmlTextAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlTextAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlTextAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlTextAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic XmlTextAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlTextAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">Указанный тип данных XML-схемы не может иметь соответствия в типах данных .NET.</exception>
        <exception cref="T:System.InvalidOperationException">Указанный тип данных схемы XML неверен для свойства и не может быть преобразован в тип члена.</exception>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public Type Type { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type Type" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlTextAttribute.Type" />
      <MemberSignature Language="VB.NET" Value="Public Property Type As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ Type { Type ^ get(); void set(Type ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает тип члена.</summary>
        <value>
          <see cref="T:System.Type" /> члена.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Type> Свойство может устанавливаться только для типов-примитивов и перечисления.  
  
 <xref:System.Xml.Serialization.XmlTextAttribute> Могут также применяться к полю, которое возвращает <xref:System.Xml.XmlNode> или массив <xref:System.Xml.XmlNode> объектов.  
  
 Можно применить <xref:System.Xml.Serialization.XmlTextAttribute> поле или свойство, которое возвращает массив строк. Можно также применить атрибут к массиву типа <xref:System.Object> , но необходимо задать <xref:System.Xml.Serialization.XmlTextAttribute.Type%2A> строку. В этом случае любые строки, вставляемые в массив будут сериализованы как текст в формате XML.  
  
   
  
## Examples  
 [!code-cpp[Classic XmlTextAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlTextAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlTextAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlTextAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic XmlTextAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlTextAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>