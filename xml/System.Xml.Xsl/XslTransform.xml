<Type Name="XslTransform" FullName="System.Xml.Xsl.XslTransform">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="9fffe3df74f84922396e53ccd8afb19f9699356f" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30721428" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class XslTransform" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit XslTransform extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Xsl.XslTransform" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class XslTransform" />
  <TypeSignature Language="C++ CLI" Value="public ref class XslTransform sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Obsolete("This class has been deprecated. Please use System.Xml.Xsl.XslCompiledTransform instead. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Преобразует данные XML с помощью таблицы стилей XSLT.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <xref:System.Xml.Xsl.XslTransform> Класс не используется в Microsoft .NET Framework версии 2.0. <xref:System.Xml.Xsl.XslCompiledTransform> Класс — новый обработчик XSLT. Дополнительные сведения см. в разделе [использование класса XslCompiledTransform](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) и [Миграция с класса XslTransform](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).  
  
 <xref:System.Xml.Xsl.XslTransform> поддерживает синтаксис XSLT 1.0. Таблица стилей XSLT необходимо использовать пространство имен `http://www.w3.org/1999/XSL/Transform`.  
  
 Дополнительные аргументы также могут добавляться в таблицу стилей с помощью <xref:System.Xml.Xsl.XsltArgumentList> класса. Этот класс содержит входные параметры для стиля таблицы и объекты расширения, которые могут быть вызваны из таблицы стилей.  
  
 Для преобразования данных XML:  
  
1.  Создание <xref:System.Xml.Xsl.XslTransform> объекта.  
  
2.  Используйте <xref:System.Xml.Xsl.XslTransform.Load%2A> метод для загрузки таблицы стилей для преобразования. Этот метод имеет несколько перегрузок и можно загрузить таблицу стилей с помощью <xref:System.Xml.XmlReader>, <xref:System.Xml.XPath.XPathNavigator>, <xref:System.Xml.XPath.IXPathNavigable>, или URL-адрес расположения файла.  
  
3.  Используйте <xref:System.Xml.Xsl.XslTransform.Transform%2A> метод для преобразования данных XML. Этот метод имеет несколько перегрузок и может обрабатывать различные типы входных и выходных данных. Можно также указать <xref:System.Xml.Xsl.XsltArgumentList> содержащий дополнительные аргументы для использования в качестве входных данных во время преобразования.  
  
 **Вопросы безопасности**  
  
 При создании приложения, использующего класс <xref:System.Xml.Xsl.XslTransform>, помните о следующих особенностях и их последствиях:  
  
-   Объекты расширения по умолчанию включены. Если содержащие расширения объекты <xref:System.Xml.Xsl.XsltArgumentList> используются при передаче их в метод <xref:System.Xml.Xsl.XslTransform.Transform%2A>.  
  
-   Таблицы стилей XSLT могут содержать ссылки на другие файлы и внедренные блоки скриптов. Пользователь-злоумышленник может воспользоваться этим, предоставив данные или таблицы стилей, которые при выполнении приведет к системе для обработки, пока компьютер не хватает ресурсов.  
  
-   Приложения XSLT, которые выполняются в среде со смешанным уровнем доверия, могут привести к подделке таблицы стилей. Например, злонамеренный пользователь может загрузить объект с вредоносной таблицей стилей и передать ее другому пользователю, который впоследствии вызовет метод <xref:System.Xml.Xsl.XslTransform.Transform%2A> и выполнит преобразование.  
  
 Эти вопросы безопасности могут быть уменьшены, не принимая <xref:System.Xml.Xsl.XslTransform> объектов, таблиц стилей XSLT или исходные данные XML из ненадежных источников.  
  
 **Поддержка сценариев**  
  
 Этот класс поддерживает использование внедренных сценариев с помощью `msxsl:script` элемента.  
  
 В .NET Framework версии 1.1 свидетельство таблицы стилей определяет права, предоставляемые внедренным сценариям.  
  
-   Если таблица стилей была загружена из универсальный код ресурса (URI), URI используется для создания свидетельства. Это свидетельство включает URI вместе с его узла и зоны.  
  
-   Если таблица стилей была загружена из другого источника, можно предоставить свидетельство, передав <xref:System.Security.Policy.Evidence?displayProperty=nameWithType> объект <xref:System.Xml.Xsl.XslTransform.Load%2A> метод. В противном случае сборка скриптов имеет полное доверие.  
  
 Частично доверенным вызывающим объектам: `UnmanagedCode` разрешения, необходимые для компиляции встроенного сценария. `ControlEvidence` разрешение требуется для предоставления <xref:System.Security.Policy.Evidence> для <xref:System.Xml.Xsl.XslTransform.Load%2A> метод. Объект <xref:System.Security.SecurityException> создается, если вызывающий объект не имеет необходимых разрешений. Дополнительные сведения см. в разделах <xref:System.Security.Permissions.SecurityPermission?displayProperty=nameWithType> и <xref:System.Security.Permissions.SecurityPermissionFlag?displayProperty=nameWithType>.  
  
 `msxsl:script` Элемент имеет следующие требования:  
  
-   `msxsl:script` Элемент принадлежит `urn:schemas-microsoft-com:xslt` пространства имен. Таблица стилей должна включать объявление пространства имен `xmlns:msxsl=urn:schemas-microsoft-com:xslt`.  
  
-   `msxsl:script` Элемент может содержать `language` атрибут, указывающий используемый язык сценариев. Значение `language` атрибут должен быть одним из следующих: C#, c#, VB, VisualBasic, JScript или JavaScript. Поскольку имя языка не учитывается, JavaScript и javascript являются допустимы. Если `language` атрибут не указан, то по умолчанию используется язык JScript.  
  
-   `msxsl:script` Элемент должен включать `implements-prefix` атрибута, который содержит префикс, представляющий пространство имен, связанное с блоком сценария. Это пространство имен должны быть определены в таблице стилей. Таблица стилей может содержать несколько блоков скриптов, сгруппированных по пространствам имен. Не может иметь блоки сценариев с несколькими языками, в том же пространстве имен. Блоки сценариев могут вызывать функции, определенной в другой блок сценария, расположенных блоки сценариев в том же пространстве имен. Содержимое блока сценариев анализируется согласно правилам и синтаксису языка сценариев (предоставляемый `language` атрибута). Например, если у вас есть блок скрипта C#, комментарии будет стоять `//` символов. Комментарии должны быть допустимые XML-содержимое.  
  
 `Note` Рекомендуется заключать блоки сценариев в раздел CDATA.  
  
```  
<msxsl:script implements-prefix='xy' language='C#'>  
  <![CDATA[  
  // Add code here.  
  ]]]><![CDATA[]>  
</msxsl:script>  
```  
  
 Функции можно объявлять внутри элемента `msxsl:script`. В следующей таблице показаны пространства имен, поддерживаемые по умолчанию.  
  
|Поддерживаемые пространства имен|Описание:|  
|--------------------------|-----------------|  
|`System`|Классы в системе.|  
|`System.Collection`|Классы коллекций.|  
|`System.Text`|Классы для обработки текста.|  
|`System.Xml`|Основные классы XML.|  
|`System.Xml.Xsl`|Классы XSLT.|  
|`System.Xml.XPath`|Классы языка XPath.|  
  
 Указанные аргументы и возвращаемые значения, определенные функциями скрипта должен быть один из перечисленных ниже типов World Wide Web Consortium (W3C). В следующей таблице представлены сопоставления типов W3C XPath или XSLT и соответствующие классы .NET Framework.  
  
|Тип W3C|Эквивалентный класс .NET|  
|--------------|---------------------------|  
|Строка (XPath)|`System.String`|  
|Логическое значение (XPath)|`System.Boolean`|  
|Номер (XPath)|`System.Double`|  
|Фрагмент дерева результатов (XSLT)|`System.Xml.XPath.XPathNavigator`|  
|Набор узлов (XPath)|`System.Xml.XPath.XPathNodeIterator`|  
  
 Если функция скрипта использует один из числовых типов: Int16, UInt16, Int32, UInt32, Int64, UInt64, одной или Decimal, эти типы приводятся к типу Double, который сопоставлен с числовым типом W3C XPath.  
  
 Исключение при вызове функции не удается преобразовать аргумент результат в один из требуемых типов.  
  
> [!NOTE]
>  `msxsl:script` и `msxsl:node-list` — единственные функции из `urn:schemas-microsoft-com:xslt` пространство имен, поддерживаемых <xref:System.Xml.Xsl.XslTransform> класса.  
  
 <xref:System.Xml.Xsl.XslTransform> Имеется возможность использования кода среды выполнения (CLR) как механизм расширения. Это достигается путем передачи экземпляра класса, чтобы <xref:System.Xml.Xsl.XslTransform> класса и вызове его открытых методов из таблицы стилей XSLT. Методы, определенные с `params` ключевое слово, которое допускает неопределенное число параметров для передачи, не работают в этом сценарии. В разделе [params](~/docs/csharp/language-reference/keywords/params.md) для получения дополнительных сведений.  
  
 Дополнительные сведения см. [XSLT-преобразования с помощью класса XslTransform](~/docs/standard/data/xml/xslt-transformations-with-the-xsltransform-class.md).  
  
   
  
## Examples  
 Следующий пример преобразует указанный XML-документ и выдает результат на консоль.  
  
 [!code-csharp[Classic WebData XslTransform Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XslTransform Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XslTransform Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XslTransform Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <see cref="T:System.Xml.Xsl.XslTransform" /> объекты потокобезопасны только для операций преобразования. Другие операции не гарантируется потокобезопасность. Необходимо убедиться, что другие методы не вызываются для объекта во время операций загрузки.</threadsafe>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XslTransform ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XslTransform();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.Xsl.XslTransform" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Load">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Загружает таблицу стилей XSLT, включая любые таблицы стилей, на которые имеются ссылки в элементах <see langword="xsl:include" /> и <see langword="xsl:import" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <xref:System.Xml.Xsl.XslTransform> Класса является устаревшим в .NET Framework версии 2.0. <xref:System.Xml.Xsl.XslCompiledTransform> Класс — новый обработчик XSLT. Дополнительные сведения см. в разделе [использование класса XslCompiledTransform](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) и [Миграция с класса XslTransform](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (string url);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(string url) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (url As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::String ^ url);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="url">Адрес URL, задающий таблицу стилей XSLT для загрузки.</param>
        <summary>Загружает таблицу стилей XSLT с указанного URL.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <xref:System.Xml.Xsl.XslTransform> Класса является устаревшим в .NET Framework версии 2.0. <xref:System.Xml.Xsl.XslCompiledTransform> Класс — новый обработчик XSLT. Дополнительные сведения см. в разделе [использование класса XslCompiledTransform](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) и [Миграция с класса XslTransform](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).  
  
 <xref:System.Xml.Xsl.XslTransform> поддерживает синтаксис XSLT 1.0. Таблица стилей XSLT должна включать объявление пространства имен `xmlns:xsl="http://www.w3.org/1999/XSL/Transform"`.  
  
 Этот метод загружает таблицу стилей XSLT, включая любые таблицы стилей, на которые ссылается `xsl:include` и `xsl:import` элементы. Внешние ресурсы разрешаются с помощью <xref:System.Xml.XmlUrlResolver> без учетных данных пользователя. Если таблиц стилей расположены на сетевом ресурсе, который требует проверки подлинности, используйте перегрузку, которая принимает <xref:System.Xml.XmlResolver> как один из его аргументов и укажите <xref:System.Xml.XmlResolver> необходимые учетные данные.  
  
 Если таблица стилей содержит внедренный сценарий, скрипт компилируется в сборку. URI таблицы стилей, используется для создания свидетельства, которое применяется к сборке. Для устранения проблем с <xref:System.Xml.Xsl.XslTransform.Load%2A> метод и стиль листы с внедренными скриптами см. в статье Q316755 базы знаний Майкрософт на http://support.microsoft.com.  
  
> [!NOTE]
>  Если вызывающий объект не имеет `UnmanagedCode` разрешение встроенный скрипт не компилируется и <xref:System.Security.SecurityException> возникает исключение. Дополнительные сведения см. в разделах <xref:System.Security.Permissions.SecurityPermission> и <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType>.  
  
   
  
## Examples  
 В следующем примере преобразуется документ XML в документ HTML. Он отображает ISBN, название и цену каждой книги в таблице.  
  
 [!code-cpp[Classic WebData XslTransform.Transform7 Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XslTransform.Transform7 Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XslTransform.Transform7 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/VB/source.vb#1)]  
  
 Образец использует следующие два входных файла.  
  
 `books.xml`  
  
 [!code-xml[Classic WebData XslTransform.Transform7 Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/XML/books.xml#2)]  
  
 `output.xsl`  
  
 [!code-xml[Classic WebData XslTransform.Transform7 Example#3](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/XML/output.xsl#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException">Загружаемый ресурс не является допустимой таблицей стилей.</exception>
        <exception cref="T:System.Security.SecurityException">Таблица стилей содержит внедренные скрипты, а вызывающий оператор не имеет разрешения <see langword="UnmanagedCode" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XmlReader stylesheet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XmlReader stylesheet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (stylesheet As XmlReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XmlReader ^ stylesheet);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="stylesheet">Объект <see cref="T:System.Xml.XmlReader" />, содержащий таблицу стилей XSLT.</param>
        <summary>Загружает таблицу стилей XSLT, содержащуюся в классе <see cref="T:System.Xml.XmlReader" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <xref:System.Xml.Xsl.XslTransform> Класса является устаревшим в .NET Framework версии 2.0. <xref:System.Xml.Xsl.XslCompiledTransform> Класс — новый обработчик XSLT. Дополнительные сведения см. в разделе [использование класса XslCompiledTransform](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) и [Миграция с класса XslTransform](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).  
  
 <xref:System.Xml.Xsl.XslTransform> поддерживает синтаксис XSLT 1.0. Таблица стилей XSLT должна включать объявление пространства имен `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.  
  
 Этот метод загружает таблицу стилей XSLT, включая любые таблицы стилей, на которые ссылается `xsl:include` и `xsl:import` элементы. Внешние ресурсы разрешаются с помощью <xref:System.Xml.XmlUrlResolver> без учетных данных пользователя. Если таблиц стилей расположены на сетевом ресурсе, который требует проверки подлинности, используйте перегрузку, которая принимает <xref:System.Xml.XmlResolver> как один из его аргументов и укажите <xref:System.Xml.XmlResolver> необходимые учетные данные.  
  
 Таблица стилей загружается из текущего узла <xref:System.Xml.XmlReader> всех его потомков. Это позволяет использовать часть документа в качестве таблицы стилей. После <xref:System.Xml.Xsl.XslTransform.Load%2A> возвращает метод <xref:System.Xml.XmlReader> располагается на следующий узел после окончания таблицы стилей. По достижении конца документа объект <xref:System.Xml.XmlReader> позиционируется в конец файла (EOF).  
  
 Если таблица стилей содержит сущности, следует указать <xref:System.Xml.XmlReader> , можно разрешить сущности (<xref:System.Xml.XmlReader.CanResolveEntity%2A?displayProperty=nameWithType> возвращает `true`). В этом случае <xref:System.Xml.XmlValidatingReader> может использоваться.  
  
 Если таблица стилей содержит внедренный сценарий, скрипт компилируется в сборку. Сборка имеет полное доверие. Рекомендуется предоставлять основание, используя <xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XmlReader%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29> метод. Для устранения проблем с <xref:System.Xml.Xsl.XslTransform.Load%2A> метод и стиль листы с внедренными скриптами см. в статье Q316755 базы знаний Майкрософт на http://support.microsoft.com.  
  
> [!NOTE]
>  Если вызывающий объект не имеет `UnmanagedCode` разрешение встроенный скрипт не компилируется и <xref:System.Security.SecurityException> возникает исключение. Дополнительные сведения см. в разделах <xref:System.Security.Permissions.SecurityPermission> и <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType>.  
  
   
  
## Examples  
 В следующем примере преобразуется в XML-файл, сортировкой всех книг по названию.  
  
 [!code-cpp[XslTransform.Load3#1](~/samples/snippets/cpp/VS_Snippets_Data/XslTransform.Load3/CPP/trans3.cpp#1)]
 [!code-csharp[XslTransform.Load3#1](~/samples/snippets/csharp/VS_Snippets_Data/XslTransform.Load3/CS/trans3.cs#1)]
 [!code-vb[XslTransform.Load3#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslTransform.Load3/VB/trans3.vb#1)]  
  
 В примере следующие файлы данных в качестве входного.  
  
 `books.xml`  
  
 [!code-xml[XslTransform.Load3#2](~/samples/snippets/xml/VS_Snippets_Data/XslTransform.Load3/XML/books.xml#2)]  
  
 `titles.xsl`  
  
 [!code-xml[XslTransform.Load3#3](~/samples/snippets/xml/VS_Snippets_Data/XslTransform.Load3/XML/titles.xsl#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException">Текущий узел не соответствует допустимой таблице стилей.</exception>
        <exception cref="T:System.Security.SecurityException">Таблица стилей содержит внедренные скрипты, а вызывающий оператор не имеет разрешения <see langword="UnmanagedCode" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XPath.IXPathNavigable stylesheet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XPath.IXPathNavigable stylesheet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.IXPathNavigable)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (stylesheet As IXPathNavigable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XPath::IXPathNavigable ^ stylesheet);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XPath.IXPathNavigable" />
      </Parameters>
      <Docs>
        <param name="stylesheet">Объект, реализующий интерфейс <see cref="T:System.Xml.XPath.IXPathNavigable" />. В .NET Framework это может быть либо объект <see cref="T:System.Xml.XmlNode" /> (обычно <see cref="T:System.Xml.XmlDocument" />), либо объект <see cref="T:System.Xml.XPath.XPathDocument" />, содержащий таблицу стилей XSLT.</param>
        <summary>Загружает таблицу стилей XSLT, содержащуюся в классе <see cref="T:System.Xml.XPath.IXPathNavigable" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <xref:System.Xml.Xsl.XslTransform> Класса является устаревшим в .NET Framework версии 2.0. <xref:System.Xml.Xsl.XslCompiledTransform> Класс — новый обработчик XSLT. Дополнительные сведения см. в разделе [использование класса XslCompiledTransform](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) и [Миграция с класса XslTransform](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).  
  
 <xref:System.Xml.Xsl.XslTransform> поддерживает синтаксис XSLT 1.0. Таблица стилей XSLT должна включать объявление пространства имен `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.  
  
 Этот метод загружает таблицу стилей XSLT, включая любые таблицы стилей, на которые ссылается `xsl:include` и `xsl:import` элементы. Внешние ресурсы разрешаются с помощью <xref:System.Xml.XmlUrlResolver> без учетных данных пользователя. Если таблиц стилей расположены на сетевом ресурсе, который требует проверки подлинности, используйте перегрузку, которая принимает <xref:System.Xml.XmlResolver> как один из его аргументов и укажите <xref:System.Xml.XmlResolver> необходимые учетные данные.  
  
 Если таблица стилей содержит внедренный сценарий, скрипт компилируется в сборку. Сборка имеет полное доверие. Рекомендуется предоставлять основание, используя <xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.IXPathNavigable%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29> метод. Для устранения проблем с <xref:System.Xml.Xsl.XslTransform.Load%2A> метод и стиль листы с внедренными скриптами см. в статье Q316755 базы знаний Майкрософт на http://support.microsoft.com.  
  
> [!NOTE]
>  Если вызывающий объект не имеет `UnmanagedCode` разрешение встроенный скрипт не компилируется и <xref:System.Security.SecurityException> возникает исключение. Дополнительные сведения см. в разделах <xref:System.Security.Permissions.SecurityPermission> и <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException">Загружаемый ресурс не является допустимой таблицей стилей.</exception>
        <exception cref="T:System.Security.SecurityException">Таблица стилей содержит внедренные скрипты, а вызывающий оператор не имеет разрешения <see langword="UnmanagedCode" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XPath.XPathNavigator stylesheet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XPath.XPathNavigator stylesheet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.XPathNavigator)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (stylesheet As XPathNavigator)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XPath::XPathNavigator ^ stylesheet);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XPath.XPathNavigator" />
      </Parameters>
      <Docs>
        <param name="stylesheet">Объект <see cref="T:System.Xml.XPath.XPathNavigator" />, содержащий таблицу стилей XSLT.</param>
        <summary>Загружает таблицу стилей XSLT, содержащуюся в классе <see cref="T:System.Xml.XPath.XPathNavigator" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <xref:System.Xml.Xsl.XslTransform> Класса является устаревшим в .NET Framework версии 2.0. <xref:System.Xml.Xsl.XslCompiledTransform> Класс — новый обработчик XSLT. Дополнительные сведения см. в разделе [использование класса XslCompiledTransform](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) и [Миграция с класса XslTransform](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).  
  
 <xref:System.Xml.Xsl.XslTransform> поддерживает синтаксис XSLT 1.0. Таблица стилей XSLT должна включать объявление пространства имен `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.  
  
 Этот метод загружает таблицу стилей XSLT, включая любые таблицы стилей, на которые ссылается `xsl:include` и `xsl:import` элементы. Внешние ресурсы разрешаются с помощью <xref:System.Xml.XmlUrlResolver> без учетных данных пользователя. Если таблиц стилей расположены на сетевом ресурсе, который требует проверки подлинности, используйте перегрузку, которая принимает <xref:System.Xml.XmlResolver> как один из его аргументов и укажите <xref:System.Xml.XmlResolver> необходимые учетные данные.  
  
 Таблица стилей загружается из текущей позиции <xref:System.Xml.XPath.XPathNavigator>. Чтобы использовать только часть загруженного документа в качестве таблицы стилей, перейдите к узлу, соответствующему началу таблицы стилей. После <xref:System.Xml.Xsl.XslTransform.Load%2A> возвращает метод <xref:System.Xml.XPath.XPathNavigator> располагается в начале таблицы стилей (на `xsl:style sheet` узел).  
  
 Если таблица стилей содержит внедренный сценарий, скрипт компилируется в сборку. Сборка имеет полное доверие. Рекомендуется предоставлять основание, используя <xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.XPathNavigator%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29> метод. Для устранения проблем с <xref:System.Xml.Xsl.XslTransform.Load%2A> метод и стиль листы с внедренными скриптами см. в статье Q316755 базы знаний Майкрософт на http://support.microsoft.com.  
  
> [!NOTE]
>  Если вызывающий объект не имеет `UnmanagedCode` разрешение встроенный скрипт не компилируется и <xref:System.Security.SecurityException> возникает исключение. Дополнительные сведения см. в разделах <xref:System.Security.Permissions.SecurityPermission> и <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException">Текущий узел не соответствует допустимой таблице стилей.</exception>
        <exception cref="T:System.Security.SecurityException">Таблица стилей содержит внедренные скрипты, а вызывающий оператор не имеет разрешения <see langword="UnmanagedCode" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (string url, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(string url, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.String,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (url As String, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::String ^ url, System::Xml::XmlResolver ^ resolver);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="url">Адрес URL, задающий таблицу стилей XSLT для загрузки.</param>
        <param name="resolver">Объект <see cref="T:System.Xml.XmlResolver" /> используется для загрузки таблицы стилей и всех таблиц стилей, на которые имеются ссылки в элементах <c>xsl:import</c> и <c>xsl:include</c>.  
  
 Если он равен <see langword="null" />, то для открытия таблицы стилей используется объект <see cref="T:System.Xml.XmlUrlResolver" /> по умолчанию без указания учетных данных пользователя. Объект <see cref="T:System.Xml.XmlUrlResolver" /> по умолчанию не используется для разрешения внешних ресурсов в таблице стилей, поэтому элементы <c>xsl:import</c> и <c>xsl:include</c> не разрешаются.  
  
 <see cref="T:System.Xml.XmlResolver" /> не кэшируется после завершения метода <see cref="M:System.Xml.Xsl.XslTransform.Load(System.String,System.Xml.XmlResolver)" />.</param>
        <summary>Загружает таблицу стилей XSLT с указанного URL.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <xref:System.Xml.Xsl.XslTransform> Класса является устаревшим в .NET Framework версии 2.0. <xref:System.Xml.Xsl.XslCompiledTransform> Класс — новый обработчик XSLT. Дополнительные сведения см. в разделе [использование класса XslCompiledTransform](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) и [Миграция с класса XslTransform](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).  
  
 <xref:System.Xml.Xsl.XslTransform> поддерживает синтаксис XSLT 1.0. Таблица стилей XSLT должна включать объявление пространства имен `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.  
  
 Если таблица стилей содержит внедренный сценарий, скрипт компилируется в сборку. URI таблицы стилей, используется для создания свидетельства, которое применяется к сборке. Для устранения проблем с <xref:System.Xml.Xsl.XslTransform.Load%2A> метод и стиль листы с внедренными скриптами см. в статье Q316755 базы знаний Майкрософт на http://support.microsoft.com.  
  
> [!NOTE]
>  Если вызывающий объект не имеет `UnmanagedCode` разрешение встроенный скрипт не компилируется и <xref:System.Security.SecurityException> возникает исключение. Дополнительные сведения см. в разделах <xref:System.Security.Permissions.SecurityPermission> и <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType>.  
  
   
  
## Examples  
 В следующем примере преобразуется документ XML в документ HTML. В примере загружаются в таблицу стилей XSLT, который содержит `xsl:include` ссылающийся на другую таблицу стилей. <xref:System.Xml.XmlUrlResolver> Передается <xref:System.Xml.Xsl.XslTransform.Load%2A> метод, который задает учетные данные, необходимые для доступа к сетевому ресурсу для включенной таблицы стилей.  
  
 [!code-csharp[XslTransform.Load2#1](~/samples/snippets/csharp/VS_Snippets_Data/XslTransform.Load2/CS/trans2.cs#1)]
 [!code-vb[XslTransform.Load2#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslTransform.Load2/VB/trans2.vb#1)]  
  
 В примере следующие файлы данных в качестве входного.  
  
 `books.xml`  
  
 [!code-xml[XslTransform.Load2#2](~/samples/snippets/xml/VS_Snippets_Data/XslTransform.Load2/XML/books.xml#2)]  
  
 `sort.xsl`  
  
 [!code-xml[XslTransform.Load2#3](~/samples/snippets/xml/VS_Snippets_Data/XslTransform.Load2/XML/sort.xsl#3)]  
  
 `includefile.xsl`  
  
 [!code-xml[XslTransform.Load2#4](~/samples/snippets/xml/VS_Snippets_Data/XslTransform.Load2/XML/includefile.xsl#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException">Загружаемый ресурс не является допустимой таблицей стилей.</exception>
        <exception cref="T:System.Security.SecurityException">Таблица стилей содержит внедренные скрипты, а вызывающий оператор не имеет разрешения <see langword="UnmanagedCode" />.</exception>
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Net.NetworkCredential" />
        <altmember cref="T:System.Xml.XmlSecureResolver" />
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XmlReader stylesheet, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XmlReader stylesheet, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XmlReader,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (stylesheet As XmlReader, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XmlReader ^ stylesheet, System::Xml::XmlResolver ^ resolver);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XmlReader" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="stylesheet">Объект <see cref="T:System.Xml.XmlReader" />, содержащий таблицу стилей XSLT.</param>
        <param name="resolver">Объект <see cref="T:System.Xml.XmlResolver" /> используется для загрузки всех таблиц стилей, на которые имеются ссылки в элементах <c>xsl:import</c> и <c>xsl:include</c>. Если его значение равно <see langword="null" />, внешние ресурсы не определяются.  
  
 <see cref="T:System.Xml.XmlResolver" /> не кэшируется после завершения метода <see cref="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XmlReader,System.Xml.XmlResolver)" />.</param>
        <summary>Загружает таблицу стилей XSLT, содержащуюся в классе <see cref="T:System.Xml.XmlReader" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <xref:System.Xml.Xsl.XslTransform> Класса является устаревшим в .NET Framework версии 2.0. <xref:System.Xml.Xsl.XslCompiledTransform> Класс — новый обработчик XSLT. Дополнительные сведения см. в разделе [использование класса XslCompiledTransform](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) и [Миграция с класса XslTransform](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).  
  
 <xref:System.Xml.Xsl.XslTransform> поддерживает синтаксис XSLT 1.0. Таблица стилей XSLT должна включать объявление пространства имен `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.  
  
 Этот метод загружает таблицу стилей XSLT, включая любые таблицы стилей, на которые ссылается `xsl:include` и `xsl:import` элементы. Таблица стилей загружается из текущего узла <xref:System.Xml.XmlReader> всех его потомков. Это позволяет использовать часть документа в качестве таблицы стилей.  
  
 После <xref:System.Xml.Xsl.XslTransform.Load%2A> возвращает метод <xref:System.Xml.XmlReader> располагается на следующий узел после окончания таблицы стилей. По достижении конца документа объект <xref:System.Xml.XmlReader> позиционируется в конец файла (EOF).  
  
 Если таблица стилей содержит сущности, следует указать <xref:System.Xml.XmlReader> , можно разрешить сущности (<xref:System.Xml.XmlReader.CanResolveEntity%2A?displayProperty=nameWithType> возвращает `true`). В этом случае <xref:System.Xml.XmlValidatingReader> может использоваться.  
  
 Если таблица стилей содержит внедренный сценарий, скрипт компилируется в сборку. Сборка имеет полное доверие. Рекомендуется предоставлять основание, используя <xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XmlReader%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29> метод. Для устранения проблем с <xref:System.Xml.Xsl.XslTransform.Load%2A> метод и стиль листы с внедренными скриптами см. в статье Q316755 базы знаний Майкрософт на http://support.microsoft.com.  
  
> [!NOTE]
>  Если вызывающий объект не имеет `UnmanagedCode` разрешение встроенный скрипт не компилируется и <xref:System.Security.SecurityException> возникает исключение. Дополнительные сведения см. в разделах <xref:System.Security.Permissions.SecurityPermission> и <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException">Текущий узел не соответствует допустимой таблице стилей.</exception>
        <exception cref="T:System.Security.SecurityException">Таблица стилей содержит внедренные скрипты, а вызывающий оператор не имеет разрешения <see langword="UnmanagedCode" />.</exception>
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Net.NetworkCredential" />
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XPath.IXPathNavigable stylesheet, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XPath.IXPathNavigable stylesheet, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.IXPathNavigable,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (stylesheet As IXPathNavigable, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XPath::IXPathNavigable ^ stylesheet, System::Xml::XmlResolver ^ resolver);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="stylesheet">Объект, реализующий интерфейс <see cref="T:System.Xml.XPath.IXPathNavigable" />. В .NET Framework это может быть либо объект <see cref="T:System.Xml.XmlNode" /> (обычно <see cref="T:System.Xml.XmlDocument" />), либо объект <see cref="T:System.Xml.XPath.XPathDocument" />, содержащий таблицу стилей XSLT.</param>
        <param name="resolver">Объект <see cref="T:System.Xml.XmlResolver" /> используется для загрузки всех таблиц стилей, на которые имеются ссылки в элементах <c>xsl:import</c> и <c>xsl:include</c>. Если его значение равно <see langword="null" />, внешние ресурсы не определяются.  
  
 <see cref="T:System.Xml.XmlResolver" /> не кэшируется после завершения метода <see cref="Overload:System.Xml.Xsl.XslTransform.Load" />.</param>
        <summary>Загружает таблицу стилей XSLT, содержащуюся в классе <see cref="T:System.Xml.XPath.IXPathNavigable" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <xref:System.Xml.Xsl.XslTransform> Класса является устаревшим в .NET Framework версии 2.0. <xref:System.Xml.Xsl.XslCompiledTransform> Класс — новый обработчик XSLT. Дополнительные сведения см. в разделе [использование класса XslCompiledTransform](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) и [Миграция с класса XslTransform](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).  
  
 <xref:System.Xml.Xsl.XslTransform> поддерживает синтаксис XSLT 1.0. Таблица стилей XSLT должна включать объявление пространства имен `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.  
  
 Если таблица стилей содержит внедренный сценарий, скрипт компилируется в сборку. Сборка имеет полное доверие. Рекомендуется предоставлять основание, используя <xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.IXPathNavigable%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29> метод. Для устранения проблем с <xref:System.Xml.Xsl.XslTransform.Load%2A> метод и стиль листы с внедренными скриптами см. в статье Q316755 базы знаний Майкрософт на http://support.microsoft.com.  
  
> [!NOTE]
>  Если вызывающий объект не имеет `UnmanagedCode` разрешение встроенный скрипт не компилируется и <xref:System.Security.SecurityException> возникает исключение. Дополнительные сведения см. в разделах <xref:System.Security.Permissions.SecurityPermission> и <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException">Загружаемый ресурс не является допустимой таблицей стилей.</exception>
        <exception cref="T:System.Security.SecurityException">Таблица стилей содержит внедренные скрипты, а вызывающий оператор не имеет разрешения <see langword="UnmanagedCode" />.</exception>
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Net.NetworkCredential" />
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XPath.XPathNavigator stylesheet, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XPath.XPathNavigator stylesheet, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.XPathNavigator,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (stylesheet As XPathNavigator, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XPath::XPathNavigator ^ stylesheet, System::Xml::XmlResolver ^ resolver);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="stylesheet">Объект <see cref="T:System.Xml.XPath.XPathNavigator" />, содержащий таблицу стилей XSLT.</param>
        <param name="resolver">Объект <see cref="T:System.Xml.XmlResolver" /> используется для загрузки всех таблиц стилей, на которые имеются ссылки в элементах <c>xsl:import</c> и <c>xsl:include</c>. Если его значение равно <see langword="null" />, внешние ресурсы не определяются.  
  
 <see cref="T:System.Xml.XmlResolver" /> не кэшируется после завершения метода <see cref="Overload:System.Xml.Xsl.XslTransform.Load" />.</param>
        <summary>Загружает таблицу стилей XSLT, содержащуюся в классе <see cref="T:System.Xml.XPath.XPathNavigator" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <xref:System.Xml.Xsl.XslTransform> Класса является устаревшим в .NET Framework версии 2.0. <xref:System.Xml.Xsl.XslCompiledTransform> Класс — новый обработчик XSLT. Дополнительные сведения см. в разделе [использование класса XslCompiledTransform](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) и [Миграция с класса XslTransform](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).  
  
 <xref:System.Xml.Xsl.XslTransform> поддерживает синтаксис XSLT 1.0. Таблица стилей XSLT должна включать объявление пространства имен `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.  
  
 Таблица стилей загружается из текущей позиции <xref:System.Xml.XPath.XPathNavigator>. Чтобы использовать часть загруженного документа в качестве таблицы стилей, перейдите к узлу, соответствующему началу таблицы стилей. После <xref:System.Xml.Xsl.XslTransform.Load%2A> возвращает метод <xref:System.Xml.XPath.XPathNavigator> располагается в начале таблицы стилей (на `xsl:style sheet` узел).  
  
 Если таблица стилей содержит внедренный сценарий, скрипт компилируется в сборку. Сборка имеет полное доверие. Рекомендуется предоставлять основание, используя <xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.XPathNavigator%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29>. Для устранения проблем с <xref:System.Xml.Xsl.XslTransform.Load%2A> метод и стиль листы с внедренными скриптами см. в статье Q316755 базы знаний Майкрософт на http://support.microsoft.com.  
  
> [!NOTE]
>  Если вызывающий объект не имеет `UnmanagedCode` разрешение встроенный скрипт не компилируется и <xref:System.Security.SecurityException> возникает исключение. Дополнительные сведения см. в разделах <xref:System.Security.Permissions.SecurityPermission> и <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException">Текущий узел не соответствует допустимой таблице стилей.</exception>
        <exception cref="T:System.Security.SecurityException">Таблица стилей содержит внедренные скрипты, а вызывающий оператор не имеет разрешения <see langword="UnmanagedCode" />.</exception>
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Net.NetworkCredential" />
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XmlReader stylesheet, System.Xml.XmlResolver resolver, System.Security.Policy.Evidence evidence);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XmlReader stylesheet, class System.Xml.XmlResolver resolver, class System.Security.Policy.Evidence evidence) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XmlReader,System.Xml.XmlResolver,System.Security.Policy.Evidence)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XmlReader ^ stylesheet, System::Xml::XmlResolver ^ resolver, System::Security::Policy::Evidence ^ evidence);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XmlReader" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
        <Parameter Name="evidence" Type="System.Security.Policy.Evidence" />
      </Parameters>
      <Docs>
        <param name="stylesheet">Объект <see cref="T:System.Xml.XmlReader" />, содержащий загружаемую таблицу стилей.</param>
        <param name="resolver">Объект <see cref="T:System.Xml.XmlResolver" /> используется для загрузки всех таблиц стилей, на которые имеются ссылки в элементах <c>xsl:import</c> и <c>xsl:include</c>. Если его значение равно <see langword="null" />, внешние ресурсы не определяются.  
  
 <see cref="T:System.Xml.XmlResolver" /> не кэшируется после завершения метода <see cref="Overload:System.Xml.Xsl.XslTransform.Load" />.</param>
        <param name="evidence">Свидетельство <see cref="T:System.Security.Policy.Evidence" />, устанавливаемое для сборки, созданной для блока скриптов таблицы стилей XSLT.  
  
 Если значение этого параметра равно <see langword="null" />, то блоки скриптов не обрабатываются, XSLT-функция <c>document()</c> не поддерживается и использование привилегированных объектов расширения запрещено.  
  
 Чтобы передать свидетельство сборке скриптов, вызывающий оператор должен иметь разрешение <see langword="ControlEvidence" />. Вызывающие объекты, не имеющие полного доверия, могут установить для этого параметра значение <see langword="null" />.</param>
        <summary>Загружает таблицу стилей XSLT, содержащуюся в классе <see cref="T:System.Xml.XmlReader" />. Этот метод позволяет ограничивать разрешения для таблиц стилей путем указания свидетельства.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <xref:System.Xml.Xsl.XslTransform> Класса является устаревшим в .NET Framework версии 2.0. <xref:System.Xml.Xsl.XslCompiledTransform> Класс — новый обработчик XSLT. Дополнительные сведения см. в разделе [использование класса XslCompiledTransform](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) и [Миграция с класса XslTransform](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).  
  
 <xref:System.Xml.Xsl.XslTransform> поддерживает синтаксис XSLT 1.0. Таблица стилей XSLT должна включать объявление пространства имен `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.  
  
 Этот метод загружает таблицу стилей XSLT, включая любые таблицы стилей, на которые ссылается `xsl:include` и `xsl:import` элементы. Таблица стилей загружается из текущего узла <xref:System.Xml.XmlReader> всех его потомков. Это позволяет использовать часть документа в качестве таблицы стилей.  
  
 После <xref:System.Xml.Xsl.XslTransform.Load%2A> возвращает метод <xref:System.Xml.XmlReader> располагается на следующий узел после окончания таблицы стилей. По достижении конца документа объект <xref:System.Xml.XmlReader> позиционируется в конец файла (EOF).  
  
 Если таблица стилей содержит сущности, следует указать <xref:System.Xml.XmlReader> , можно разрешить сущности (<xref:System.Xml.XmlReader.CanResolveEntity%2A?displayProperty=nameWithType> возвращает `true`). В этом случае <xref:System.Xml.XmlValidatingReader> может использоваться.  
  
 Для устранения проблем с <xref:System.Xml.Xsl.XslTransform.Load%2A> метод и стиль листы с внедренными скриптами см. в статье Q316755 базы знаний Майкрософт на http://support.microsoft.com.  
  
 Существуют различные способы предоставления свидетельства. Следующая таблица описывает тип свидетельства для распространенных сценариев пользователя.  
  
    
  
## Examples  
 В следующем примере выполняется преобразование XSLT где `xsltReader` — <xref:System.Xml.XmlReader> содержащий таблицу стилей и `secureURL` доверенных URL-адрес, который может использоваться для создания <xref:System.Security.Policy.Evidence>. <xref:System.Xml.XmlSecureResolver.CreateEvidenceForUrl%2A?displayProperty=nameWithType> Метод используется для создания <xref:System.Security.Policy.Evidence> применяемого к таблице стилей.  
  
 [!code-cpp[XslTransform.Load4#1](~/samples/snippets/cpp/VS_Snippets_Data/XslTransform.Load4/CPP/trans_ev.cpp#1)]
 [!code-csharp[XslTransform.Load4#1](~/samples/snippets/csharp/VS_Snippets_Data/XslTransform.Load4/CS/trans_ev.cs#1)]
 [!code-vb[XslTransform.Load4#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslTransform.Load4/VB/trans_ev.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException">Текущий узел не соответствует допустимой таблице стилей.</exception>
        <exception cref="T:System.Security.SecurityException">Указанной таблице стилей требуется произвести действия, не позволенные в рамках предоставленного свидетельства.  
  
 Вызывающий оператор пытается передать свидетельство, не имея разрешения <see langword="ControlEvidence" />.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">для предоставления основания. Связанное перечисление: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></permission>
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <altmember cref="T:System.Net.NetworkCredential" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Security.SecurityZone" />
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <altmember cref="M:System.Xml.XmlSecureResolver.CreateEvidenceForUrl(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XPath.IXPathNavigable stylesheet, System.Xml.XmlResolver resolver, System.Security.Policy.Evidence evidence);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XPath.IXPathNavigable stylesheet, class System.Xml.XmlResolver resolver, class System.Security.Policy.Evidence evidence) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.IXPathNavigable,System.Xml.XmlResolver,System.Security.Policy.Evidence)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XPath::IXPathNavigable ^ stylesheet, System::Xml::XmlResolver ^ resolver, System::Security::Policy::Evidence ^ evidence);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
        <Parameter Name="evidence" Type="System.Security.Policy.Evidence" />
      </Parameters>
      <Docs>
        <param name="stylesheet">Объект, реализующий интерфейс <see cref="T:System.Xml.XPath.IXPathNavigable" />. В .NET Framework это может быть либо объект <see cref="T:System.Xml.XmlNode" /> (обычно <see cref="T:System.Xml.XmlDocument" />), либо объект <see cref="T:System.Xml.XPath.XPathDocument" />, содержащий таблицу стилей XSLT.</param>
        <param name="resolver">Объект <see cref="T:System.Xml.XmlResolver" /> используется для загрузки всех таблиц стилей, на которые имеются ссылки в элементах <c>xsl:import</c> и <c>xsl:include</c>. Если его значение равно <see langword="null" />, внешние ресурсы не определяются.  
  
 <see cref="T:System.Xml.XmlResolver" /> не кэшируется после завершения метода <see cref="Overload:System.Xml.Xsl.XslTransform.Load" />.</param>
        <param name="evidence">Свидетельство <see cref="T:System.Security.Policy.Evidence" />, устанавливаемое для сборки, созданной для блока скриптов таблицы стилей XSLT.  
  
 Если значение этого параметра равно <see langword="null" />, то блоки скриптов не обрабатываются, XSLT-функция <c>document()</c> не поддерживается и использование привилегированных объектов расширения запрещено.  
  
 Чтобы передать свидетельство сборке скриптов, вызывающий оператор должен иметь разрешение <see langword="ControlEvidence" />. Вызывающие объекты, не имеющие полного доверия, могут установить для этого параметра значение <see langword="null" />.</param>
        <summary>Загружает таблицу стилей XSLT, содержащуюся в классе <see cref="T:System.Xml.XPath.IXPathNavigable" />. Этот метод позволяет ограничивать разрешения для таблиц стилей путем указания свидетельства.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <xref:System.Xml.Xsl.XslTransform> Класса является устаревшим в .NET Framework версии 2.0. <xref:System.Xml.Xsl.XslCompiledTransform> Класс — новый обработчик XSLT. Дополнительные сведения см. в разделе [использование класса XslCompiledTransform](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) и [Миграция с класса XslTransform](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).  
  
 <xref:System.Xml.Xsl.XslTransform> поддерживает синтаксис XSLT 1.0. Таблица стилей XSLT должна включать объявление пространства имен `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.  
  
 Для устранения проблем с <xref:System.Xml.Xsl.XslTransform.Load%2A> метод и стиль листы с внедренными скриптами см. в статье Q316755 базы знаний Майкрософт на http://support.microsoft.com.  
  
 Существуют различные способы предоставления свидетельства. Следующая таблица описывает тип свидетельства для распространенных сценариев пользователя.  
  
  ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException">Загружаемый ресурс не является допустимой таблицей стилей.</exception>
        <exception cref="T:System.Security.SecurityException">Указанной таблице стилей требуется произвести действия, не позволенные в рамках предоставленного свидетельства.  
  
 Вызывающий оператор пытается передать свидетельство, не имея разрешения <see langword="ControlEvidence" />.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">для предоставления основания. Связанное перечисление: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></permission>
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <altmember cref="T:System.Net.NetworkCredential" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Security.SecurityZone" />
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <altmember cref="M:System.Xml.XmlSecureResolver.CreateEvidenceForUrl(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XPath.XPathNavigator stylesheet, System.Xml.XmlResolver resolver, System.Security.Policy.Evidence evidence);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XPath.XPathNavigator stylesheet, class System.Xml.XmlResolver resolver, class System.Security.Policy.Evidence evidence) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.XPathNavigator,System.Xml.XmlResolver,System.Security.Policy.Evidence)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XPath::XPathNavigator ^ stylesheet, System::Xml::XmlResolver ^ resolver, System::Security::Policy::Evidence ^ evidence);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
        <Parameter Name="evidence" Type="System.Security.Policy.Evidence" />
      </Parameters>
      <Docs>
        <param name="stylesheet">Объект <see cref="T:System.Xml.XPath.XPathNavigator" />, содержащий загружаемую таблицу стилей.</param>
        <param name="resolver">Объект <see cref="T:System.Xml.XmlResolver" /> используется для загрузки всех таблиц стилей, на которые имеются ссылки в элементах <c>xsl:import</c> и <c>xsl:include</c>. Если его значение равно <see langword="null" />, внешние ресурсы не определяются.  
  
 <see cref="T:System.Xml.XmlResolver" /> не кэшируется после завершения метода <see cref="Overload:System.Xml.Xsl.XslTransform.Load" />.</param>
        <param name="evidence">Свидетельство <see cref="T:System.Security.Policy.Evidence" />, устанавливаемое для сборки, созданной для блока скриптов таблицы стилей XSLT.  
  
 Если значение этого параметра равно <see langword="null" />, то блоки скриптов не обрабатываются, XSLT-функция <c>document()</c> не поддерживается и использование привилегированных объектов расширения запрещено.  
  
 Чтобы передать свидетельство сборке скриптов, вызывающий оператор должен иметь разрешение <see langword="ControlEvidence" />. Вызывающие объекты, не имеющие полного доверия, могут установить для этого параметра значение <see langword="null" />.</param>
        <summary>Загружает таблицу стилей XSLT, содержащуюся в классе <see cref="T:System.Xml.XPath.XPathNavigator" />. Этот метод позволяет ограничивать разрешения для таблиц стилей путем указания свидетельства.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <xref:System.Xml.Xsl.XslTransform> Класса является устаревшим в .NET Framework версии 2.0. <xref:System.Xml.Xsl.XslCompiledTransform> Класс — новый обработчик XSLT. Дополнительные сведения см. в разделе [использование класса XslCompiledTransform](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) и [Миграция с класса XslTransform](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).  
  
 <xref:System.Xml.Xsl.XslTransform> поддерживает синтаксис XSLT 1.0. Таблица стилей XSLT должна включать объявление пространства имен `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.  
  
 Таблица стилей загружается из текущей позиции <xref:System.Xml.XPath.XPathNavigator>. Чтобы использовать часть загруженного документа в качестве таблицы стилей, перейдите к узлу, соответствующему началу таблицы стилей. После <xref:System.Xml.Xsl.XslTransform.Load%2A> возвращает метод <xref:System.Xml.XPath.XPathNavigator> располагается в начале таблицы стилей (на `xsl:style sheet` узел).  
  
 Для устранения проблем с <xref:System.Xml.Xsl.XslTransform.Load%2A> метод и стиль листы с внедренными скриптами см. в статье Q316755 базы знаний Майкрософт на http://support.microsoft.com.  
  
 Существуют различные способы предоставления свидетельства. Следующая таблица описывает тип свидетельства для распространенных сценариев пользователя.  
  
    
  
## Examples  
 В следующем примере выполняется преобразование XSLT с помощью таблицы стилей из внешнего источника. Поскольку таблица стилей получена из ненадежного источника, `resolver` и `evidence` параметры имеют значение `null`.  
  
 [!code-csharp[XslTransform.Load5#1](~/samples/snippets/csharp/VS_Snippets_Data/XslTransform.Load5/CS/trans_noev.cs#1)]
 [!code-vb[XslTransform.Load5#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslTransform.Load5/VB/trans_noev.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException">Текущий узел не соответствует допустимой таблице стилей.</exception>
        <exception cref="T:System.Security.SecurityException">Указанной таблице стилей требуется произвести действия, не позволенные в рамках предоставленного свидетельства.  
  
 Вызывающий оператор пытается передать свидетельство, не имея разрешения <see langword="ControlEvidence" />.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">для предоставления основания. Связанное перечисление: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></permission>
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <altmember cref="T:System.Net.NetworkCredential" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Security.SecurityZone" />
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <altmember cref="M:System.Xml.XmlSecureResolver.CreateEvidenceForUrl(System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Transform">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Преобразует данные XML с помощью таблицы стилей XSLT.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <xref:System.Xml.Xsl.XslTransform> Класса является устаревшим в .NET Framework версии 2.0. <xref:System.Xml.Xsl.XslCompiledTransform> Класс — новый обработчик XSLT. Дополнительные сведения см. в разделе [использование класса XslCompiledTransform](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) и [Миграция с класса XslTransform](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (string inputfile, string outputfile);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(string inputfile, string outputfile) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (inputfile As String, outputfile As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::String ^ inputfile, System::String ^ outputfile);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputfile" Type="System.String" />
        <Parameter Name="outputfile" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="inputfile">URL-адрес исходного документа для преобразования.</param>
        <param name="outputfile">URL-адрес выходного файла.</param>
        <summary>Преобразует данные XML во входном файле и выводит результат в выходной файл.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <xref:System.Xml.Xsl.XslTransform> Класса является устаревшим в .NET Framework версии 2.0. <xref:System.Xml.Xsl.XslCompiledTransform> Класс — новый обработчик XSLT. Дополнительные сведения см. в разделе [использование класса XslCompiledTransform](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) и [Миграция с класса XslTransform](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).  
  
 <xref:System.Xml.Xsl.XslTransform> поддерживает синтаксис XSLT 1.0. Таблица стилей XSLT должна включать объявление пространства имен `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.  
  
> [!NOTE]
>  Этот метод является устаревшим в .NET Framework версии 1.1. Параметр <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> свойство определяет, каким образом XSLT `document()` функции разрешается. Рекомендуется использовать <xref:System.Xml.Xsl.XslTransform.Transform%2A> метода, принимающую <xref:System.Xml.XmlResolver> объекта в виде одного из своих аргументов.  
  
   
  
## Examples  
 В следующем примере `books.xml` текстовый файл с помощью `output.xsl` таблицы стилей и выводит результаты в `books.html` файла.  
  
 [!code-cpp[XslTransform.Transform3#1](~/samples/snippets/cpp/VS_Snippets_Data/xsltransform.transform3/CPP/trans_snip2.cpp#1)]
 [!code-csharp[XslTransform.Transform3#1](~/samples/snippets/csharp/VS_Snippets_Data/xsltransform.transform3/CS/trans_snip2.cs#1)]
 [!code-vb[XslTransform.Transform3#1](~/samples/snippets/visualbasic/VS_Snippets_Data/xsltransform.transform3/VB/trans_snip2.vb#1)]  
  
 Образец использует следующие два входных файла:  
  
 `books.xml`  
  
 [!code-xml[Classic WebData XslTransform.Transform7 Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/XML/books.xml#2)]  
  
 `output.xsl`  
  
 [!code-xml[Classic WebData XslTransform.Transform7 Example#3](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/XML/output.xsl#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public System.Xml.XmlReader Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlReader Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.Xsl.XsltArgumentList args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList)" />
      <MemberSignature Language="VB.NET" Value="Public Function Transform (input As IXPathNavigable, args As XsltArgumentList) As XmlReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlReader ^ Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::Xsl::XsltArgumentList ^ args);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
      </Parameters>
      <Docs>
        <param name="input">Объект, реализующий интерфейс <see cref="T:System.Xml.XPath.IXPathNavigable" />. В платформе .NET Framework это может быть либо объект <see cref="T:System.Xml.XmlNode" /> (обычно <see cref="T:System.Xml.XmlDocument" />), либо объект <see cref="T:System.Xml.XPath.XPathDocument" />, содержащий преобразуемые данные.</param>
        <param name="args">Объект <see cref="T:System.Xml.Xsl.XsltArgumentList" />, содержащий имена аргументов с указанием пространства имен, используемый в качестве входных данных для преобразования.</param>
        <summary>Преобразует данные XML в <see cref="T:System.Xml.XPath.IXPathNavigable" />, используя указанные аргументы <paramref name="args" />, результат выводит в <see cref="T:System.Xml.XmlReader" />.</summary>
        <returns>Объект <see cref="T:System.Xml.XmlReader" />, содержащий результат преобразования.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <xref:System.Xml.Xsl.XslTransform> Класса является устаревшим в .NET Framework версии 2.0. <xref:System.Xml.Xsl.XslCompiledTransform> Класс — новый обработчик XSLT. Дополнительные сведения см. в разделе [использование класса XslCompiledTransform](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) и [Миграция с класса XslTransform](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).  
  
 <xref:System.Xml.Xsl.XslTransform> поддерживает синтаксис XSLT 1.0. Таблица стилей XSLT должна включать объявление пространства имен `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.  
  
> [!NOTE]
>  Этот метод устарел. Параметр <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> свойство определяет, каким образом XSLT `document()` функции разрешается. Рекомендуется использовать <xref:System.Xml.Xsl.XslTransform.Transform%2A> метода, принимающую <xref:System.Xml.XmlResolver> объекта в виде одного из своих аргументов.  
  
 `args` Сопоставляются с `xsl:param` элементы, определенные в таблице стилей. `xsl:output` Элемент не поддерживается при выводе в <xref:System.Xml.XmlReader> ( `xsl:output` элемент игнорируется). В разделе [выходные данные XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) для получения дополнительной информации.  
  
 Этот метод позволяет осуществлять асинхронные преобразования исходного документа.  
  
 Преобразования применяются к документу в целом. Иными словами, если передать узел, отличный от корневого узла документа, это не помешает процессу преобразования обратиться ко всем узлам загружаемого документа. Чтобы преобразовать фрагмент узла, необходимо создать <xref:System.Xml.XmlDocument> содержащий только узел фрагмента и передать этот <xref:System.Xml.XmlDocument> для <xref:System.Xml.Xsl.XslTransform.Transform%2A> метод.  
  
 В следующем примере выполняется преобразование фрагмента узла.  
  
```  
XslTransform xslt = new XslTransform();       
xslt.Load("print_root.xsl");  
XmlDocument doc = new XmlDocument();  
doc.Load("library.xml");  
// Create a new document containing just the node fragment.  
XmlNode testNode = doc.DocumentElement.FirstChild;   
XmlDocument tmpDoc = new XmlDocument();   
tmpDoc.LoadXml(testNode.OuterXml);  
// Pass the document containing the node fragment   
// to the Transform method.  
Console.WriteLine("Passing " + tmpDoc.OuterXml + " to print_root.xsl");  
xslt.Transform(tmpDoc, null, Console.Out);  
```  
  
 В этом примере `library.xml` и `print_root.xsl` файлы в качестве входных данных и выводит на консоль следующее.  
  
```  
Passing <book genre="novel" ISBN="1-861001-57-5"><title>Pride And Prejudice</title></book> to print_root.xsl   
Root node is book.  
```  
  
 `library.xml`  
  
```  
<library>  
  <book genre='novel' ISBN='1-861001-57-5'>  
     <title>Pride And Prejudice</title>  
  </book>  
  <book genre='novel' ISBN='1-81920-21-2'>  
     <title>Hook</title>  
  </book>  
</library>  
```  
  
 `print_root.xsl`  
  
```  
<style sheet version="1.0" xmlns="http://www.w3.org/1999/XSL/Transform" >  
  <output method="text" />   
  <template match="/">  
     Root node is  <value-of select="local-name(//*[position() = 1])" />   
  </template>  
</style sheet>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public System.Xml.XmlReader Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlReader Transform(class System.Xml.XPath.XPathNavigator input, class System.Xml.Xsl.XsltArgumentList args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList)" />
      <MemberSignature Language="VB.NET" Value="Public Function Transform (input As XPathNavigator, args As XsltArgumentList) As XmlReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlReader ^ Transform(System::Xml::XPath::XPathNavigator ^ input, System::Xml::Xsl::XsltArgumentList ^ args);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
      </Parameters>
      <Docs>
        <param name="input">Объект <see cref="T:System.Xml.XPath.XPathNavigator" />, содержащий преобразуемые данные.</param>
        <param name="args">Объект <see cref="T:System.Xml.Xsl.XsltArgumentList" />, содержащий имена аргументов с указанием пространства имен, используемый в качестве входных данных для преобразования.</param>
        <summary>Преобразует данные XML в <see cref="T:System.Xml.XPath.XPathNavigator" />, используя указанные аргументы <paramref name="args" />, результат выводит в <see cref="T:System.Xml.XmlReader" />.</summary>
        <returns>Объект <see cref="T:System.Xml.XmlReader" />, содержащий результат преобразования.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <xref:System.Xml.Xsl.XslTransform> Класса является устаревшим в .NET Framework версии 2.0. <xref:System.Xml.Xsl.XslCompiledTransform> Класс — новый обработчик XSLT. Дополнительные сведения см. в разделе [использование класса XslCompiledTransform](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) и [Миграция с класса XslTransform](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).  
  
 <xref:System.Xml.Xsl.XslTransform> поддерживает синтаксис XSLT 1.0. Таблица стилей XSLT должна включать объявление пространства имен `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.  
  
 `args` Сопоставляются с `xsl:param` элементы, определенные в таблице стилей. Выбранные преобразования применяются к документу в целом. Другими словами Если текущий узел имеет значение узла дерева, отличный от корневого узла документа, это не помешает процессу преобразования обратиться ко всем узлам загружаемого документа. После выполнения преобразования <xref:System.Xml.XPath.XPathNavigator> остается в своем исходном состоянии. Это означает, что узел, который является текущим до начала процесса преобразования, останется текущим после <xref:System.Xml.Xsl.XslTransform.Transform%2A> был вызван метод.  
  
 Поскольку <xref:System.Xml.XmlReader> предоставляет выходные данные только для чтения, `xsl:output` элемент игнорируется. В разделе [выходные данные XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) для получения дополнительной информации.  
  
 Этот метод позволяет осуществлять асинхронные преобразования исходного документа.  
  
> [!NOTE]
>  Этот метод устарел. Параметр <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> свойство определяет, как разрешить функции document() XSLT. Рекомендуется использовать <xref:System.Xml.Xsl.XslTransform.Transform%2A> метода, принимающую <xref:System.Xml.XmlResolver> объекта в виде одного из своих аргументов.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">При обработке преобразования XSLT возникла ошибка.  
  
 Примечание. Это поведение было изменено по сравнению с предыдущими версиями. Исключение <see cref="T:System.Xml.Xsl.XsltException" /> создается при использовании версии 1.1 или более ранней версии платформы Microsoft .NET Framework.</exception>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (string inputfile, string outputfile, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(string inputfile, string outputfile, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.String,System.String,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (inputfile As String, outputfile As String, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::String ^ inputfile, System::String ^ outputfile, System::Xml::XmlResolver ^ resolver);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputfile" Type="System.String" />
        <Parameter Name="outputfile" Type="System.String" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="inputfile">URL-адрес исходного документа для преобразования.</param>
        <param name="outputfile">URL-адрес выходного файла.</param>
        <param name="resolver">Объект <see cref="T:System.Xml.XmlResolver" />, используемый для разрешения функции XSLT <c>document()</c>. Если значение равно <see langword="null" />, функция <c>document()</c> не разрешается.  
  
 <see cref="T:System.Xml.XmlResolver" /> не кэшируется после завершения метода <see cref="Overload:System.Xml.Xsl.XslTransform.Transform" />.</param>
        <summary>Преобразует данные XML во входном файле и выводит результат в выходной файл.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <xref:System.Xml.Xsl.XslTransform> Класса является устаревшим в .NET Framework версии 2.0. <xref:System.Xml.Xsl.XslCompiledTransform> Класс — новый обработчик XSLT. Дополнительные сведения см. в разделе [использование класса XslCompiledTransform](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) и [Миграция с класса XslTransform](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).  
  
 <xref:System.Xml.Xsl.XslTransform> поддерживает синтаксис XSLT 1.0. Таблица стилей XSLT должна включать объявление пространства имен `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.  
  
   
  
## Examples  
 В следующем примере выполняется преобразование XSLT и результат записывается в файл. <xref:System.Xml.XmlUrlResolver> Учетные данные по умолчанию используются разрешения внешних ресурсов. Подробные сведения см. в разделе <xref:System.Net.CredentialCache.DefaultCredentials%2A>.  
  
 [!code-cpp[XslTransform.Transform7#1](~/samples/snippets/cpp/VS_Snippets_Data/XslTRansform.Transform7/CPP/trans_snip4.cpp#1)]
 [!code-csharp[XslTransform.Transform7#1](~/samples/snippets/csharp/VS_Snippets_Data/XslTRansform.Transform7/CS/trans_snip4.cs#1)]
 [!code-vb[XslTransform.Transform7#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslTRansform.Transform7/VB/trans_snip4.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.NetworkCredential" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Xml.XmlSecureResolver" />
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args, System.IO.Stream output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.Xsl.XsltArgumentList args, class System.IO.Stream output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As IXPathNavigable, args As XsltArgumentList, output As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::IO::Stream ^ output);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="input">Объект, реализующий интерфейс <see cref="T:System.Xml.XPath.IXPathNavigable" />. В платформе .NET Framework это может быть либо объект <see cref="T:System.Xml.XmlNode" /> (обычно <see cref="T:System.Xml.XmlDocument" />), либо объект <see cref="T:System.Xml.XPath.XPathDocument" />, содержащий преобразуемые данные.</param>
        <param name="args">Объект <see cref="T:System.Xml.Xsl.XsltArgumentList" />, содержащий имена аргументов с указанием пространства имен, используемый в качестве входных данных для преобразования.</param>
        <param name="output">Поток, в который требуется направить вывод.</param>
        <summary>Преобразует данные XML в <see cref="T:System.Xml.XPath.IXPathNavigable" />, используя указанные аргументы <paramref name="args" />, результат выводит в <see cref="T:System.IO.Stream" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <xref:System.Xml.Xsl.XslTransform> Класса является устаревшим в .NET Framework версии 2.0. <xref:System.Xml.Xsl.XslCompiledTransform> Класс — новый обработчик XSLT. Дополнительные сведения см. в разделе [использование класса XslCompiledTransform](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) и [Миграция с класса XslTransform](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).  
  
 <xref:System.Xml.Xsl.XslTransform> поддерживает синтаксис XSLT 1.0. Таблица стилей XSLT должна включать объявление пространства имен `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.  
  
> [!NOTE]
>  Этот метод устарел. Параметр <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> свойство определяет, каким образом XSLT `document()` функции разрешается. Рекомендуется использовать <xref:System.Xml.Xsl.XslTransform.Transform%2A> метода, принимающую <xref:System.Xml.XmlResolver> объекта в виде одного из своих аргументов.  
  
 `args` Сопоставляются с `xsl:param` элементы, определенные в таблице стилей.  
  
 Преобразования применяются к документу в целом. Иными словами, если передать узел, отличный от корневого узла документа, это не помешает процессу преобразования обратиться ко всем узлам загружаемого документа. Чтобы преобразовать фрагмент узла, необходимо создать <xref:System.Xml.XmlDocument> содержащий только узел фрагмента и передать этот <xref:System.Xml.XmlDocument> для <xref:System.Xml.Xsl.XslTransform.Transform%2A> метод.  
  
 В следующем примере выполняется преобразование фрагмента узла.  
  
```  
XslTransform xslt = new XslTransform();       
xslt.Load("print_root.xsl");  
XmlDocument doc = new XmlDocument();  
doc.Load("library.xml");  
// Create a new document containing just the node fragment.  
XmlNode testNode = doc.DocumentElement.FirstChild;   
XmlDocument tmpDoc = new XmlDocument();   
tmpDoc.LoadXml(testNode.OuterXml);  
// Pass the document containing the node fragment   
// to the Transform method.  
Console.WriteLine("Passing " + tmpDoc.OuterXml + " to print_root.xsl");  
xslt.Transform(tmpDoc, null, Console.Out);  
```  
  
 В этом примере `library.xml` и `print_root.xsl` файлы в качестве входных данных и выводит на консоль следующее.  
  
```  
Passing <book genre="novel" ISBN="1-861001-57-5"><title>Pride And Prejudice</title></book> to print_root.xsl   
Root node is book.  
```  
  
 `library.xml`  
  
```  
<library>  
  <book genre='novel' ISBN='1-861001-57-5'>  
     <title>Pride And Prejudice</title>  
  </book>  
  <book genre='novel' ISBN='1-81920-21-2'>  
     <title>Hook</title>  
  </book>  
</library>  
```  
  
 `print_root.xsl`  
  
```  
<style sheet version="1.0" xmlns="http://www.w3.org/1999/XSL/Transform" >  
  <output method="text" />   
  <template match="/">  
     Root node is  <value-of select="local-name(//*[position() = 1])" />   
  </template>  
</style sheet>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">При обработке преобразования XSLT возникла ошибка.  
  
 Примечание. Это поведение было изменено по сравнению с предыдущими версиями. Исключение <see cref="T:System.Xml.Xsl.XsltException" /> создается при использовании версии 1.1 или более ранней версии платформы Microsoft .NET Framework.</exception>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args, System.IO.TextWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.Xsl.XsltArgumentList args, class System.IO.TextWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As IXPathNavigable, args As XsltArgumentList, output As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::IO::TextWriter ^ output);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="input">Объект, реализующий интерфейс <see cref="T:System.Xml.XPath.IXPathNavigable" />. В платформе .NET Framework это может быть либо объект <see cref="T:System.Xml.XmlNode" /> (обычно <see cref="T:System.Xml.XmlDocument" />), либо объект <see cref="T:System.Xml.XPath.XPathDocument" />, содержащий преобразуемые данные.</param>
        <param name="args">Объект <see cref="T:System.Xml.Xsl.XsltArgumentList" />, содержащий имена аргументов с указанием пространства имен, используемый в качестве входных данных для преобразования.</param>
        <param name="output">Модуль записи <see cref="T:System.IO.TextWriter" />, в который нужно направить выход.</param>
        <summary>Преобразует данные XML в <see cref="T:System.Xml.XPath.IXPathNavigable" />, используя указанные аргументы <paramref name="args" />, результат выводит в <see cref="T:System.IO.TextWriter" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <xref:System.Xml.Xsl.XslTransform> Класса является устаревшим в .NET Framework версии 2.0. <xref:System.Xml.Xsl.XslCompiledTransform> Класс — новый обработчик XSLT. Дополнительные сведения см. в разделе [использование класса XslCompiledTransform](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) и [Миграция с класса XslTransform](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).  
  
 <xref:System.Xml.Xsl.XslTransform> поддерживает синтаксис XSLT 1.0. Таблица стилей XSLT должна включать объявление пространства имен `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.  
  
> [!NOTE]
>  Этот метод устарел. Параметр <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> свойство определяет, каким образом XSLT `document()` функции разрешается. Рекомендуется использовать <xref:System.Xml.Xsl.XslTransform.Transform%2A> метода, принимающую <xref:System.Xml.XmlResolver> объекта в виде одного из своих аргументов.  
  
 `args` Сопоставляются с `xsl:param` элементы, определенные в таблице стилей.  
  
 Атрибут кодировки в `xsl:output` элемент не поддерживается при выводе в <xref:System.IO.TextWriter>. В разделе [выходные данные XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) конкретные сведения, на котором `xsl:output` атрибуты поддерживаются.  
  
 Преобразования применяются к документу в целом. Иными словами, если передать узел, отличный от корневого узла документа, это не помешает процессу преобразования обратиться ко всем узлам загружаемого документа. Чтобы преобразовать фрагмент узла, необходимо создать <xref:System.Xml.XmlDocument> содержащий только узел фрагмент и передать этот <xref:System.Xml.XmlDocument> для <xref:System.Xml.Xsl.XslTransform.Transform%2A> метод.  
  
 В следующем примере выполняется преобразование фрагмента узла.  
  
```  
XslTransform xslt = new XslTransform();       
xslt.Load("print_root.xsl");  
XmlDocument doc = new XmlDocument();  
doc.Load("library.xml");  
// Create a new document containing just the node fragment.  
XmlNode testNode = doc.DocumentElement.FirstChild;   
XmlDocument tmpDoc = new XmlDocument();   
tmpDoc.LoadXml(testNode.OuterXml);  
// Pass the document containing the node fragment   
// to the Transform method.  
Console.WriteLine("Passing " + tmpDoc.OuterXml + " to print_root.xsl");  
xslt.Transform(tmpDoc, null, Console.Out);  
```  
  
 В этом примере `library.xml` и `print_root.xsl` файлы в качестве входных данных и выводит на консоль следующее.  
  
```  
Passing <book genre="novel" ISBN="1-861001-57-5"><title>Pride And Prejudice</title></book> to print_root.xsl   
Root node is book.  
```  
  
 `library.xml`  
  
```  
<library>  
  <book genre='novel' ISBN='1-861001-57-5'>  
     <title>Pride And Prejudice</title>  
  </book>  
  <book genre='novel' ISBN='1-81920-21-2'>  
     <title>Hook</title>  
  </book>  
</library>  
```  
  
 `print_root.xsl`  
  
```  
<style sheet version="1.0" xmlns="http://www.w3.org/1999/XSL/Transform" >  
  <output method="text" />   
  <template match="/">  
     Root node is  <value-of select="local-name(//*[position() = 1])" />   
  </template>  
</style sheet>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">При обработке преобразования XSLT возникла ошибка.  
  
 Примечание. Это поведение было изменено по сравнению с предыдущими версиями. Исключение <see cref="T:System.Xml.Xsl.XsltException" /> создается при использовании версии 1.1 или более ранней версии платформы Microsoft .NET Framework.</exception>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public System.Xml.XmlReader Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlReader Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.Xsl.XsltArgumentList args, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Function Transform (input As IXPathNavigable, args As XsltArgumentList, resolver As XmlResolver) As XmlReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlReader ^ Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::Xml::XmlResolver ^ resolver);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="input">Объект, реализующий интерфейс <see cref="T:System.Xml.XPath.IXPathNavigable" />. В платформе .NET Framework это может быть либо объект <see cref="T:System.Xml.XmlNode" /> (обычно <see cref="T:System.Xml.XmlDocument" />), либо объект <see cref="T:System.Xml.XPath.XPathDocument" />, содержащий преобразуемые данные.</param>
        <param name="args">Объект <see cref="T:System.Xml.Xsl.XsltArgumentList" />, содержащий имена аргументов с указанием пространства имен, используемый в качестве входных данных для преобразования.</param>
        <param name="resolver">Объект <see cref="T:System.Xml.XmlResolver" />, используемый для разрешения функции XSLT <c>document()</c>. Если значение равно <see langword="null" />, функция <c>document()</c> не разрешается.  
  
 <see cref="T:System.Xml.XmlResolver" /> не кэшируется после завершения метода <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)" />.</param>
        <summary>Преобразует данные XML в <see cref="T:System.Xml.XPath.IXPathNavigable" />, используя указанные аргументы <paramref name="args" />, результат выводит в <see cref="T:System.Xml.XmlReader" />.</summary>
        <returns>Объект <see cref="T:System.Xml.XmlReader" />, содержащий результат преобразования.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <xref:System.Xml.Xsl.XslTransform> Класса является устаревшим в .NET Framework версии 2.0. <xref:System.Xml.Xsl.XslCompiledTransform> Класс — новый обработчик XSLT. Дополнительные сведения см. в разделе [использование класса XslCompiledTransform](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) и [Миграция с класса XslTransform](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).  
  
 <xref:System.Xml.Xsl.XslTransform> поддерживает синтаксис XSLT 1.0. Таблица стилей XSLT должна включать объявление пространства имен `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.  
  
 `args` Сопоставляются с `xsl:param` элементы, определенные в таблице стилей. `xsl:output` Элемент не поддерживается при выводе в <xref:System.Xml.XmlReader> ( `xsl:output` элемент игнорируется). В разделе [выходные данные XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) для получения дополнительной информации.  
  
 Этот метод позволяет осуществлять асинхронные преобразования исходного документа.  
  
 Преобразования применяются к документу в целом. Иными словами, если передать узел, отличный от корневого узла документа, это не помешает процессу преобразования обратиться ко всем узлам загружаемого документа. Чтобы преобразовать фрагмент узла, необходимо создать <xref:System.Xml.XmlDocument> содержащий только узел фрагмент и передать этот <xref:System.Xml.XmlDocument> для <xref:System.Xml.Xsl.XslTransform.Transform%2A> метод.  
  
 В следующем примере выполняется преобразование фрагмента узла.  
  
```  
XslTransform xslt = new XslTransform();       
xslt.Load("print_root.xsl");  
XmlDocument doc = new XmlDocument();  
doc.Load("library.xml");  
// Create a new document containing just the node fragment.  
XmlNode testNode = doc.DocumentElement.FirstChild;   
XmlDocument tmpDoc = new XmlDocument();   
tmpDoc.LoadXml(testNode.OuterXml);  
// Pass the document containing the node fragment   
// to the Transform method.  
Console.WriteLine("Passing " + tmpDoc.OuterXml + " to print_root.xsl");  
xslt.Transform(tmpDoc, null, Console.Out, null);  
```  
  
 В этом примере `library.xml` и `print_root.xsl` файлы в качестве входных данных и выводит на консоль следующее.  
  
```  
Passing <book genre="novel" ISBN="1-861001-57-5"><title>Pride And Prejudice</title></book> to print_root.xsl   
Root node is book.  
```  
  
 `library.xml`  
  
```  
<library>  
  <book genre='novel' ISBN='1-861001-57-5'>  
     <title>Pride And Prejudice</title>  
  </book>  
  <book genre='novel' ISBN='1-81920-21-2'>  
     <title>Hook</title>  
  </book>  
</library>  
```  
  
 `print_root.xsl`  
  
```  
<style sheet version="1.0" xmlns="http://www.w3.org/1999/XSL/Transform" >  
  <output method="text" />   
  <template match="/">  
     Root node is  <value-of select="local-name(//*[position() = 1])" />   
  </template>  
</style sheet>  
```  
  
   
  
## Examples  
 В следующем примере преобразуется документ XML и выводит результаты в `XmlReader`. <xref:System.Xml.XmlUrlResolver> Необходимых учетных данных используется для обработки преобразования XSLT `document()` функции.  
  
 [!code-cpp[XslTransform.Transform4#1](~/samples/snippets/cpp/VS_Snippets_Data/XslTransform.Transform4/CPP/trans_snip3.cpp#1)]
 [!code-csharp[XslTransform.Transform4#1](~/samples/snippets/csharp/VS_Snippets_Data/XslTransform.Transform4/CS/trans_snip3.cs#1)]
 [!code-vb[XslTransform.Transform4#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslTransform.Transform4/VB/trans_snip3.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlSecureResolver" />
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args, System.Xml.XmlWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.Xsl.XsltArgumentList args, class System.Xml.XmlWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As IXPathNavigable, args As XsltArgumentList, output As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::Xml::XmlWriter ^ output);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="input">Объект, реализующий интерфейс <see cref="T:System.Xml.XPath.IXPathNavigable" />. В платформе .NET Framework это может быть либо объект <see cref="T:System.Xml.XmlNode" /> (обычно <see cref="T:System.Xml.XmlDocument" />), либо объект <see cref="T:System.Xml.XPath.XPathDocument" />, содержащий преобразуемые данные.</param>
        <param name="args">Объект <see cref="T:System.Xml.Xsl.XsltArgumentList" />, содержащий имена аргументов с указанием пространства имен, используемый в качестве входных данных для преобразования.</param>
        <param name="output">Модуль записи <see cref="T:System.Xml.XmlWriter" />, в который нужно направить выход.</param>
        <summary>Преобразует данные XML в <see cref="T:System.Xml.XPath.IXPathNavigable" />, используя указанные аргументы <paramref name="args" />, результат выводит в <see cref="T:System.Xml.XmlWriter" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <xref:System.Xml.Xsl.XslTransform> Класса является устаревшим в .NET Framework версии 2.0. <xref:System.Xml.Xsl.XslCompiledTransform> Класс — новый обработчик XSLT. Дополнительные сведения см. в разделе [использование класса XslCompiledTransform](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) и [Миграция с класса XslTransform](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).  
  
 <xref:System.Xml.Xsl.XslTransform> поддерживает синтаксис XSLT 1.0. Таблица стилей XSLT должна включать объявление пространства имен `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.  
  
> [!NOTE]
>  Этот метод устарел. Параметр <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> свойство определяет, каким образом XSLT `document()` функции разрешается. Рекомендуется использовать <xref:System.Xml.Xsl.XslTransform.Transform%2A> метода, принимающую <xref:System.Xml.XmlResolver> объекта в виде одного из своих аргументов.  
  
 `args` Сопоставляются с `xsl:param` элементы, определенные в таблице стилей. `xsl:output` Элемент не поддерживается при выводе в <xref:System.Xml.XmlWriter> (`xsl:output` учитывается). В разделе [выходные данные XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) для получения дополнительной информации.  
  
 Преобразования применяются к документу в целом. Иными словами, если передать узел, отличный от корневого узла документа, это не помешает процессу преобразования обратиться ко всем узлам загружаемого документа. Чтобы преобразовать фрагмент узла, необходимо создать <xref:System.Xml.XmlDocument> содержащий только узел фрагмента и передать этот <xref:System.Xml.XmlDocument> для <xref:System.Xml.Xsl.XslTransform.Transform%2A> метод.  
  
 В следующем примере выполняется преобразование фрагмента узла.  
  
```  
XslTransform xslt = new XslTransform();       
xslt.Load("print_root.xsl");  
XmlDocument doc = new XmlDocument();  
doc.Load("library.xml");  
// Create a new document containing just the node fragment.  
XmlNode testNode = doc.DocumentElement.FirstChild;   
XmlDocument tmpDoc = new XmlDocument();   
tmpDoc.LoadXml(testNode.OuterXml);  
// Pass the document containing the node fragment   
// to the Transform method.  
Console.WriteLine("Passing " + tmpDoc.OuterXml + " to print_root.xsl");  
xslt.Transform(tmpDoc, null, Console.Out);  
```  
  
 В этом примере `library.xml` и `print_root.xsl` файлы в качестве входных данных и выводит на консоль следующее.  
  
```  
Passing <book genre="novel" ISBN="1-861001-57-5"><title>Pride And Prejudice</title></book> to print_root.xsl   
Root node is book.  
```  
  
 `library.xml`  
  
```  
<library>  
  <book genre='novel' ISBN='1-861001-57-5'>  
     <title>Pride And Prejudice</title>  
  </book>  
  <book genre='novel' ISBN='1-81920-21-2'>  
     <title>Hook</title>  
  </book>  
</library>  
```  
  
 `print_root.xsl`  
  
```  
<style sheet version="1.0" xmlns="http://www.w3.org/1999/XSL/Transform" >  
  <output method="text" />  
  <template match="/">  
  Root node is  <value-of select="local-name(//*[position() = 1])" />   
  </template>  
</style sheet>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">При обработке преобразования XSLT возникла ошибка.  
  
 Примечание. Это поведение было изменено по сравнению с предыдущими версиями. Исключение <see cref="T:System.Xml.Xsl.XsltException" /> создается при использовании версии 1.1 или более ранней версии платформы Microsoft .NET Framework.</exception>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args, System.IO.Stream output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.XPathNavigator input, class System.Xml.Xsl.XsltArgumentList args, class System.IO.Stream output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As XPathNavigator, args As XsltArgumentList, output As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::XPathNavigator ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::IO::Stream ^ output);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="input">Объект <see cref="T:System.Xml.XPath.XPathNavigator" />, содержащий преобразуемые данные.</param>
        <param name="args">Объект <see cref="T:System.Xml.Xsl.XsltArgumentList" />, содержащий имена аргументов с указанием пространства имен, используемый в качестве входных данных для преобразования.</param>
        <param name="output">Поток, в который требуется направить вывод.</param>
        <summary>Преобразует данные XML в <see cref="T:System.Xml.XPath.XPathNavigator" />, используя указанные аргументы <paramref name="args" />, результат выводит в <see cref="T:System.IO.Stream" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <xref:System.Xml.Xsl.XslTransform> Класса является устаревшим в .NET Framework версии 2.0. <xref:System.Xml.Xsl.XslCompiledTransform> Класс — новый обработчик XSLT. Дополнительные сведения см. в разделе [использование класса XslCompiledTransform](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) и [Миграция с класса XslTransform](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).  
  
 <xref:System.Xml.Xsl.XslTransform> поддерживает синтаксис XSLT 1.0. Таблица стилей XSLT должна включать объявление пространства имен `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.  
  
 `args` Сопоставляются с `xsl:param` элементы, определенные в таблице стилей. Выбранные преобразования применяются к документу в целом. Другими словами Если текущий узел имеет значение узла дерева, отличный от корневого узла документа, это не помешает процессу преобразования обратиться ко всем узлам загружаемого документа. После выполнения преобразования <xref:System.Xml.XPath.XPathNavigator> остается в своем исходном состоянии. Это означает, что узел, который является текущим до начала процесса преобразования, останется текущим после <xref:System.Xml.Xsl.XslTransform.Transform%2A> был вызван метод.  
  
 В разделе [выходные данные XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) конкретные сведения, на котором `xsl:output` атрибуты поддерживаются.  
  
> [!NOTE]
>  Этот метод устарел. Параметр <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> свойство определяет, каким образом XSLT `document()` функции разрешается. Рекомендуется использовать <xref:System.Xml.Xsl.XslTransform.Transform%2A> метода, принимающую <xref:System.Xml.XmlResolver> объекта в виде одного из своих аргументов.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">При обработке преобразования XSLT возникла ошибка.  
  
 Примечание. Это поведение было изменено по сравнению с предыдущими версиями. Исключение <see cref="T:System.Xml.Xsl.XsltException" /> создается при использовании версии 1.1 или более ранней версии платформы Microsoft .NET Framework.</exception>
        <altmember cref="T:System.Xml.Xsl.XsltArgumentList" />
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args, System.IO.TextWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.XPathNavigator input, class System.Xml.Xsl.XsltArgumentList args, class System.IO.TextWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As XPathNavigator, args As XsltArgumentList, output As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::XPathNavigator ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::IO::TextWriter ^ output);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="input">Объект <see cref="T:System.Xml.XPath.XPathNavigator" />, содержащий преобразуемые данные.</param>
        <param name="args">Объект <see cref="T:System.Xml.Xsl.XsltArgumentList" />, содержащий имена аргументов с указанием пространства имен, используемый в качестве входных данных для преобразования.</param>
        <param name="output">Модуль записи <see cref="T:System.IO.TextWriter" />, в который нужно направить выход.</param>
        <summary>Преобразует данные XML в <see cref="T:System.Xml.XPath.XPathNavigator" />, используя указанные аргументы <paramref name="args" />, результат выводит в <see cref="T:System.IO.TextWriter" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <xref:System.Xml.Xsl.XslTransform> Класса является устаревшим в .NET Framework версии 2.0. <xref:System.Xml.Xsl.XslCompiledTransform> Класс — новый обработчик XSLT. Дополнительные сведения см. в разделе [использование класса XslCompiledTransform](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) и [Миграция с класса XslTransform](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).  
  
 <xref:System.Xml.Xsl.XslTransform> поддерживает синтаксис XSLT 1.0. Таблица стилей XSLT должна включать объявление пространства имен `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.  
  
 `args` Сопоставляются с `xsl:param` элементы, определенные в таблице стилей. Выбранные преобразования применяются к документу в целом. Другими словами Если текущий узел имеет значение узла дерева, отличный от корневого узла документа, это не помешает процессу преобразования обратиться ко всем узлам загружаемого документа. После преобразования выполняются, <xref:System.Xml.XPath.XPathNavigator> остается в своем исходном состоянии. Это означает, что узел, который является текущим до начала процесса преобразования, останется текущим после <xref:System.Xml.Xsl.XslTransform.Transform%2A> был вызван метод.  
  
 Атрибут кодировки в `xsl:output` элемент не поддерживается при выводе в <xref:System.IO.TextWriter>. В разделе [выходные данные XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) конкретные сведения, на котором `xsl:output` атрибуты поддерживаются.  
  
> [!NOTE]
>  Этот метод устарел. Параметр <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> свойство определяет, каким образом XSLT `document()` функции разрешается. Рекомендуется использовать <xref:System.Xml.Xsl.XslTransform.Transform%2A> метода, принимающую <xref:System.Xml.XmlResolver> объекта в виде одного из своих аргументов.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">При обработке преобразования XSLT возникла ошибка.  
  
 Примечание. Это поведение было изменено по сравнению с предыдущими версиями. Исключение <see cref="T:System.Xml.Xsl.XsltException" /> создается при использовании версии 1.1 или более ранней версии платформы Microsoft .NET Framework.</exception>
        <altmember cref="T:System.Xml.Xsl.XsltArgumentList" />
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public System.Xml.XmlReader Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlReader Transform(class System.Xml.XPath.XPathNavigator input, class System.Xml.Xsl.XsltArgumentList args, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Function Transform (input As XPathNavigator, args As XsltArgumentList, resolver As XmlResolver) As XmlReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlReader ^ Transform(System::Xml::XPath::XPathNavigator ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::Xml::XmlResolver ^ resolver);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="input">Объект <see cref="T:System.Xml.XPath.XPathNavigator" />, содержащий преобразуемые данные.</param>
        <param name="args">Объект <see cref="T:System.Xml.Xsl.XsltArgumentList" />, содержащий имена аргументов с указанием пространства имен, используемый в качестве входных данных для преобразования.</param>
        <param name="resolver">Объект <see cref="T:System.Xml.XmlResolver" />, используемый для разрешения функции XSLT <c>document()</c>. Если значение равно <see langword="null" />, функция <c>document()</c> не разрешается.  
  
 <see cref="T:System.Xml.XmlResolver" /> не кэшируется после завершения метода <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)" />.</param>
        <summary>Преобразует данные XML в <see cref="T:System.Xml.XPath.XPathNavigator" />, используя указанные аргументы <paramref name="args" />, результат выводит в <see cref="T:System.Xml.XmlReader" />.</summary>
        <returns>Объект <see cref="T:System.Xml.XmlReader" />, содержащий результат преобразования.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <xref:System.Xml.Xsl.XslTransform> Класса является устаревшим в .NET Framework версии 2.0. <xref:System.Xml.Xsl.XslCompiledTransform> Класс — новый обработчик XSLT. Дополнительные сведения см. в разделе [использование класса XslCompiledTransform](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) и [Миграция с класса XslTransform](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).  
  
 <xref:System.Xml.Xsl.XslTransform> поддерживает синтаксис XSLT 1.0. Таблица стилей XSLT должна включать объявление пространства имен `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.  
  
 `args` Сопоставляются с `xsl:param` элементы, определенные в таблице стилей. Выбранные преобразования применяются к документу в целом. Другими словами Если текущий узел имеет значение узла дерева, отличный от корневого узла документа, это не помешает процессу преобразования обратиться ко всем узлам загружаемого документа. После выполнения преобразования <xref:System.Xml.XPath.XPathNavigator> остается в своем исходном состоянии. Это означает, что узел, который является текущим до начала процесса преобразования, останется текущим после <xref:System.Xml.Xsl.XslTransform.Transform%2A> был вызван метод.  
  
 Поскольку <xref:System.Xml.XmlReader> предоставляет выходные данные только для чтения, `xsl:output` элемент игнорируется. В разделе [выходные данные XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) для получения дополнительной информации.  
  
 Этот метод позволяет осуществлять асинхронные преобразования исходного документа.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">При обработке преобразования XSLT возникла ошибка.  
  
 Примечание. Это поведение было изменено по сравнению с предыдущими версиями. Исключение <see cref="T:System.Xml.Xsl.XsltException" /> создается при использовании версии 1.1 или более ранней версии платформы Microsoft .NET Framework.</exception>
        <altmember cref="T:System.Xml.XmlSecureResolver" />
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args, System.Xml.XmlWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.XPathNavigator input, class System.Xml.Xsl.XsltArgumentList args, class System.Xml.XmlWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As XPathNavigator, args As XsltArgumentList, output As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::XPathNavigator ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::Xml::XmlWriter ^ output);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="input">Объект <see cref="T:System.Xml.XPath.XPathNavigator" />, содержащий преобразуемые данные.</param>
        <param name="args">Объект <see cref="T:System.Xml.Xsl.XsltArgumentList" />, содержащий имена аргументов с указанием пространства имен, используемый в качестве входных данных для преобразования.</param>
        <param name="output">Модуль записи <see cref="T:System.Xml.XmlWriter" />, в который нужно направить выход.</param>
        <summary>Преобразует данные XML в <see cref="T:System.Xml.XPath.XPathNavigator" />, используя указанные аргументы, и результат выводит в <see cref="T:System.Xml.XmlWriter" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <xref:System.Xml.Xsl.XslTransform> Класса является устаревшим в .NET Framework версии 2.0. <xref:System.Xml.Xsl.XslCompiledTransform> Класс — новый обработчик XSLT. Дополнительные сведения см. в разделе [использование класса XslCompiledTransform](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) и [Миграция с класса XslTransform](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).  
  
 <xref:System.Xml.Xsl.XslTransform> поддерживает синтаксис XSLT 1.0. Таблица стилей XSLT должна включать объявление пространства имен `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.  
  
 `args` Сопоставляются с `xsl:param` элементы, определенные в таблице стилей. Выбранные преобразования применяются к документу в целом. Другими словами Если текущий узел имеет значение узла дерева, отличный от корневого узла документа, это не помешает процессу преобразования обратиться ко всем узлам загружаемого документа. После преобразования выполняются, <xref:System.Xml.XPath.XPathNavigator> остается в своем исходном состоянии. Это означает, что узел, который является текущим до начала процесса преобразования, останется текущим после <xref:System.Xml.Xsl.XslTransform.Transform%2A> был вызван метод.  
  
 `xsl:output` Элемент не поддерживается при выводе в <xref:System.Xml.XmlWriter> (`xsl:output` учитывается). В разделе [выходные данные XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) для получения дополнительной информации.  
  
> [!NOTE]
>  Этот метод устарел. Параметр <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> свойство определяет, каким образом XSLT `document()` функции разрешается. Рекомендуется использовать <xref:System.Xml.Xsl.XslTransform.Transform%2A> метода, принимающую <xref:System.Xml.XmlResolver> объекта в виде одного из своих аргументов.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">При обработке преобразования XSLT возникла ошибка.  
  
 Примечание. Это поведение было изменено по сравнению с предыдущими версиями. Исключение <see cref="T:System.Xml.Xsl.XsltException" /> создается при использовании версии 1.1 или более ранней версии платформы Microsoft .NET Framework.</exception>
        <altmember cref="T:System.Xml.Xsl.XsltArgumentList" />
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args, System.IO.Stream output, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.Xsl.XsltArgumentList args, class System.IO.Stream output, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.Stream,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As IXPathNavigable, args As XsltArgumentList, output As Stream, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::IO::Stream ^ output, System::Xml::XmlResolver ^ resolver);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.IO.Stream" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="input">Объект, реализующий интерфейс <see cref="T:System.Xml.XPath.IXPathNavigable" />. В платформе .NET Framework это может быть либо объект <see cref="T:System.Xml.XmlNode" /> (обычно <see cref="T:System.Xml.XmlDocument" />), либо объект <see cref="T:System.Xml.XPath.XPathDocument" />, содержащий преобразуемые данные.</param>
        <param name="args">Объект <see cref="T:System.Xml.Xsl.XsltArgumentList" />, содержащий имена аргументов с указанием пространства имен, используемый в качестве входных данных для преобразования.</param>
        <param name="output">Поток, в который требуется направить вывод.</param>
        <param name="resolver">Объект <see cref="T:System.Xml.XmlResolver" />, используемый для разрешения функции XSLT <c>document()</c>. Если значение равно <see langword="null" />, функция <c>document()</c> не разрешается.  
  
 <see cref="T:System.Xml.XmlResolver" /> не кэшируется после завершения метода <see cref="Overload:System.Xml.Xsl.XslTransform.Transform" />.</param>
        <summary>Преобразует данные XML в <see cref="T:System.Xml.XPath.IXPathNavigable" />, используя указанные аргументы <paramref name="args" />, результат выводит в <see cref="T:System.IO.Stream" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <xref:System.Xml.Xsl.XslTransform> Класса является устаревшим в .NET Framework версии 2.0. <xref:System.Xml.Xsl.XslCompiledTransform> Класс — новый обработчик XSLT. Дополнительные сведения см. в разделе [использование класса XslCompiledTransform](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) и [Миграция с класса XslTransform](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).  
  
 <xref:System.Xml.Xsl.XslTransform> поддерживает синтаксис XSLT 1.0. Таблица стилей XSLT должна включать объявление пространства имен `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.  
  
 `args` Сопоставляются с `xsl:param` элементы, определенные в таблице стилей.  
  
 Преобразования применяются к документу в целом. Иными словами, если передать узел, отличный от корневого узла документа, это не помешает процессу преобразования обратиться ко всем узлам загружаемого документа. Чтобы преобразовать фрагмент узла, необходимо создать <xref:System.Xml.XmlDocument> содержащий только узел фрагмента и передать этот <xref:System.Xml.XmlDocument> для <xref:System.Xml.Xsl.XslTransform.Transform%2A> метод.  
  
 В следующем примере выполняется преобразование фрагмента узла.  
  
```  
XslTransform xslt = new XslTransform();       
xslt.Load("print_root.xsl");  
XmlDocument doc = new XmlDocument();  
doc.Load("library.xml");  
// Create a new document containing just the node fragment.  
XmlNode testNode = doc.DocumentElement.FirstChild;   
XmlDocument tmpDoc = new XmlDocument();   
tmpDoc.LoadXml(testNode.OuterXml);  
// Pass the document containing the node fragment   
// to the Transform method.  
Console.WriteLine("Passing " + tmpDoc.OuterXml + " to print_root.xsl");  
xslt.Transform(tmpDoc, null, Console.Out, null);  
```  
  
 В этом примере `library.xml` и `print_root.xsl` файлы в качестве входных данных и выводит на консоль следующее.  
  
```  
Passing <book genre="novel" ISBN="1-861001-57-5"><title>Pride And Prejudice</title></book> to print_root.xsl   
Root node is book.  
```  
  
 `library.xml`  
  
```  
<library>  
  <book genre='novel' ISBN='1-861001-57-5'>  
     <title>Pride And Prejudice</title>  
  </book>  
  <book genre='novel' ISBN='1-81920-21-2'>  
     <title>Hook</title>  
  </book>  
</library>  
```  
  
 `print_root.xsl`  
  
```  
<style sheet version="1.0" xmlns="http://www.w3.org/1999/XSL/Transform" >  
  <output method="text" />   
  <template match="/">  
     Root node is  <value-of select="local-name(//*[position() = 1])" />   
  </template>  
</style sheet>  
```  
  
   
  
## Examples  
 В следующем примере выполняется преобразование внутри страницы ASP.NET.  
  
 [!code-aspx-csharp[XslTransform.Transform5#1](~/samples/snippets/csharp/VS_Snippets_Data/XslTransform.Transform5/CS/transcs.aspx#1)]
 [!code-aspx-vb[XslTransform.Transform5#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslTransform.Transform5/VB/transvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">При обработке преобразования XSLT возникла ошибка.  
  
 Примечание. Это поведение было изменено по сравнению с предыдущими версиями. Исключение <see cref="T:System.Xml.Xsl.XsltException" /> создается при использовании версии 1.1 или более ранней версии платформы Microsoft .NET Framework.</exception>
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args, System.IO.TextWriter output, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.Xsl.XsltArgumentList args, class System.IO.TextWriter output, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As IXPathNavigable, args As XsltArgumentList, output As TextWriter, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::IO::TextWriter ^ output, System::Xml::XmlResolver ^ resolver);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.IO.TextWriter" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="input">Объект, реализующий интерфейс <see cref="T:System.Xml.XPath.IXPathNavigable" />. В платформе .NET Framework это может быть либо объект <see cref="T:System.Xml.XmlNode" /> (обычно <see cref="T:System.Xml.XmlDocument" />), либо объект <see cref="T:System.Xml.XPath.XPathDocument" />, содержащий преобразуемые данные.</param>
        <param name="args">Объект <see cref="T:System.Xml.Xsl.XsltArgumentList" />, содержащий имена аргументов с указанием пространства имен, используемый в качестве входных данных для преобразования.</param>
        <param name="output">Модуль записи <see cref="T:System.IO.TextWriter" />, в который нужно направить выход.</param>
        <param name="resolver">Объект <see cref="T:System.Xml.XmlResolver" />, используемый для разрешения функции XSLT <c>document()</c>. Если значение равно <see langword="null" />, функция <c>document()</c> не разрешается.  
  
 <see cref="T:System.Xml.XmlResolver" /> не кэшируется после завершения метода <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)" />.</param>
        <summary>Преобразует данные XML в <see cref="T:System.Xml.XPath.IXPathNavigable" />, используя указанные аргументы <paramref name="args" />, результат выводит в <see cref="T:System.IO.TextWriter" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <xref:System.Xml.Xsl.XslTransform> Класса является устаревшим в .NET Framework версии 2.0. <xref:System.Xml.Xsl.XslCompiledTransform> Класс — новый обработчик XSLT. Дополнительные сведения см. в разделе [использование класса XslCompiledTransform](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) и [Миграция с класса XslTransform](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).  
  
 <xref:System.Xml.Xsl.XslTransform> поддерживает синтаксис XSLT 1.0. Таблица стилей XSLT должна включать объявление пространства имен `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.  
  
 `args` Сопоставляются с `xsl:param` элементы, определенные в таблице стилей.  
  
 Атрибут кодировки в `xsl:output` элемент не поддерживается при выводе в <xref:System.IO.TextWriter>. В разделе [выходные данные XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) конкретные сведения, на котором `xsl:output` атрибуты поддерживаются.  
  
 Преобразования применяются к документу в целом. Иными словами, если передать узел, отличный от корневого узла документа, это не помешает процессу преобразования обратиться ко всем узлам загружаемого документа. Чтобы преобразовать фрагмент узла, необходимо создать <xref:System.Xml.XmlDocument> содержащий только узел фрагмента и передать этот <xref:System.Xml.XmlDocument> для <xref:System.Xml.Xsl.XslTransform.Transform%2A> метод.  
  
 В следующем примере выполняется преобразование фрагмента узла.  
  
```  
XslTransform xslt = new XslTransform();       
xslt.Load("print_root.xsl");  
XmlDocument doc = new XmlDocument();  
doc.Load("library.xml");  
// Create a new document containing just the node fragment.  
XmlNode testNode = doc.DocumentElement.FirstChild;   
XmlDocument tmpDoc = new XmlDocument();   
tmpDoc.LoadXml(testNode.OuterXml);  
// Pass the document containing the node fragment   
// to the Transform method.  
Console.WriteLine("Passing " + tmpDoc.OuterXml + " to print_root.xsl");  
xslt.Transform(tmpDoc, null, Console.Out, null);  
```  
  
 В этом примере `library.xml` и `print_root.xsl` файлы в качестве входных данных и выводит на консоль следующее.  
  
```  
Passing <book genre="novel" ISBN="1-861001-57-5"><title>Pride And Prejudice</title></book> to print_root.xsl   
Root node is book.  
```  
  
 `library.xml`  
  
```  
<library>  
  <book genre='novel' ISBN='1-861001-57-5'>  
     <title>Pride And Prejudice</title>  
  </book>  
  <book genre='novel' ISBN='1-81920-21-2'>  
     <title>Hook</title>  
  </book>  
</library>  
```  
  
 `print_root.xsl`  
  
```  
<style sheet version="1.0" xmlns="http://www.w3.org/1999/XSL/Transform" >  
  <output method="text" />   
  <template match="/">  
     Root node is  <value-of select="local-name(//*[position() = 1])" />   
  </template>  
</style sheet>  
```  
  
   
  
## Examples  
 Следующий пример преобразует XML-файл и выводит строку HTML. <xref:System.IO.StringReader> И <xref:System.IO.StringWriter> классы используются для чтения и записи строк.  
  
 [!code-csharp[XslTransform.Transform6#1](~/samples/snippets/csharp/VS_Snippets_Data/XslTransform.Transform6/CS/transstring.cs#1)]
 [!code-vb[XslTransform.Transform6#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslTransform.Transform6/VB/transstring.vb#1)]  
  
 В примере в качестве входных данных используется файл `books.xml`.  
  
 [!code-xml[XslTransform.Transform6#2](~/samples/snippets/xml/VS_Snippets_Data/XslTransform.Transform6/XML/books.xml#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">При обработке преобразования XSLT возникла ошибка.  
  
 Примечание. Это поведение было изменено по сравнению с предыдущими версиями. Исключение <see cref="T:System.Xml.Xsl.XsltException" /> создается при использовании версии 1.1 или более ранней версии платформы Microsoft .NET Framework.</exception>
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args, System.Xml.XmlWriter output, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.Xsl.XsltArgumentList args, class System.Xml.XmlWriter output, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As IXPathNavigable, args As XsltArgumentList, output As XmlWriter, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::Xml::XmlWriter ^ output, System::Xml::XmlResolver ^ resolver);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.Xml.XmlWriter" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="input">Объект, реализующий интерфейс <see cref="T:System.Xml.XPath.IXPathNavigable" />. В платформе .NET Framework это может быть либо объект <see cref="T:System.Xml.XmlNode" /> (обычно <see cref="T:System.Xml.XmlDocument" />), либо объект <see cref="T:System.Xml.XPath.XPathDocument" />, содержащий преобразуемые данные.</param>
        <param name="args">Объект <see cref="T:System.Xml.Xsl.XsltArgumentList" />, содержащий имена аргументов с указанием пространства имен, используемый в качестве входных данных для преобразования.</param>
        <param name="output">Модуль записи <see cref="T:System.Xml.XmlWriter" />, в который нужно направить выход.</param>
        <param name="resolver">Объект <see cref="T:System.Xml.XmlResolver" />, используемый для разрешения функции XSLT <c>document()</c>. Если значение равно <see langword="null" />, функция <c>document()</c> не разрешается.  
  
 <see cref="T:System.Xml.XmlResolver" /> не кэшируется после завершения метода <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)" />.</param>
        <summary>Преобразует данные XML в <see cref="T:System.Xml.XPath.IXPathNavigable" />, используя указанные аргументы <paramref name="args" />, результат выводит в <see cref="T:System.Xml.XmlWriter" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <xref:System.Xml.Xsl.XslTransform> Класса является устаревшим в .NET Framework версии 2.0. <xref:System.Xml.Xsl.XslCompiledTransform> Класс — новый обработчик XSLT. Дополнительные сведения см. в разделе [использование класса XslCompiledTransform](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) и [Миграция с класса XslTransform](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).  
  
 <xref:System.Xml.Xsl.XslTransform> поддерживает синтаксис XSLT 1.0. Таблица стилей XSLT должна включать объявление пространства имен `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.  
  
 `args` Сопоставляются с `xsl:param` элементы, определенные в таблице стилей. `xsl:output` Элемент не поддерживается при выводе в <xref:System.Xml.XmlWriter> (`xsl:output` учитывается). В разделе [выходные данные XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) для получения дополнительной информации.  
  
 Преобразования применяются к документу в целом. Иными словами, если передать узел, отличный от корневого узла документа, это не помешает процессу преобразования обратиться ко всем узлам загружаемого документа. Чтобы преобразовать фрагмент узла, необходимо создать <xref:System.Xml.XmlDocument> содержащий только узел фрагмента и передать этот <xref:System.Xml.XmlDocument> для <xref:System.Xml.Xsl.XslTransform.Transform%2A> метод.  
  
 В следующем примере выполняется преобразование фрагмента узла.  
  
```  
XslTransform xslt = new XslTransform();       
xslt.Load("print_root.xsl");  
XmlDocument doc = new XmlDocument();  
doc.Load("library.xml");  
// Create a new document containing just the node fragment.  
XmlNode testNode = doc.DocumentElement.FirstChild;   
XmlDocument tmpDoc = new XmlDocument();   
tmpDoc.LoadXml(testNode.OuterXml);  
// Pass the document containing the node fragment   
// to the Transform method.  
Console.WriteLine("Passing " + tmpDoc.OuterXml + " to print_root.xsl");  
xslt.Transform(tmpDoc, null, Console.Out, null);  
```  
  
 В этом примере `library.xml` и `print_root.xsl` файлы в качестве входных данных и выводит на консоль следующее.  
  
```  
Passing <book genre="novel" ISBN="1-861001-57-5"><title>Pride And Prejudice</title></book> to print_root.xsl   
Root node is book.  
```  
  
 `library.xml`  
  
```  
<library>  
  <book genre='novel' ISBN='1-861001-57-5'>  
     <title>Pride And Prejudice</title>  
  </book>  
  <book genre='novel' ISBN='1-81920-21-2'>  
     <title>Hook</title>  
  </book>  
</library>  
```  
  
 `print_root.xsl`  
  
```  
<style sheet version="1.0" xmlns="http://www.w3.org/1999/XSL/Transform" >  
  <output method="text" />  
  <template match="/">  
  Root node is  <value-of select="local-name(//*[position() = 1])" />   
  </template>  
</style sheet>  
```  
  
   
  
## Examples  
 В следующем примере преобразуется документ XML в документ HTML. Он отображает ISBN, название и цену каждой книги в таблице.  
  
 [!code-cpp[Classic WebData XslTransform.Transform7 Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XslTransform.Transform7 Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XslTransform.Transform7 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/VB/source.vb#1)]  
  
 Образец использует следующие два входных файла.  
  
 `books.xml`  
  
 [!code-xml[Classic WebData XslTransform.Transform7 Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/XML/books.xml#2)]  
  
 `output.xsl`  
  
 [!code-xml[Classic WebData XslTransform.Transform7 Example#3](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/XML/output.xsl#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">При обработке преобразования XSLT возникла ошибка.  
  
 Примечание. Это поведение было изменено по сравнению с предыдущими версиями. Исключение <see cref="T:System.Xml.Xsl.XsltException" /> создается при использовании версии 1.1 или более ранней версии платформы Microsoft .NET Framework.</exception>
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args, System.IO.Stream output, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.XPathNavigator input, class System.Xml.Xsl.XsltArgumentList args, class System.IO.Stream output, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.Stream,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As XPathNavigator, args As XsltArgumentList, output As Stream, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::XPathNavigator ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::IO::Stream ^ output, System::Xml::XmlResolver ^ resolver);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.IO.Stream" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="input">Объект <see cref="T:System.Xml.XPath.XPathNavigator" />, содержащий преобразуемые данные.</param>
        <param name="args">Объект <see cref="T:System.Xml.Xsl.XsltArgumentList" />, содержащий имена аргументов с указанием пространства имен, используемый в качестве входных данных для преобразования.</param>
        <param name="output">Поток, в который требуется направить вывод.</param>
        <param name="resolver">Объект <see cref="T:System.Xml.XmlResolver" />, используемый для разрешения функции XSLT <c>document()</c>. Если значение равно <see langword="null" />, функция <c>document()</c> не разрешается.  
  
 <see cref="T:System.Xml.XmlResolver" /> не кэшируется после завершения метода <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.Stream,System.Xml.XmlResolver)" />.</param>
        <summary>Преобразует данные XML в <see cref="T:System.Xml.XPath.XPathNavigator" />, используя указанные аргументы <paramref name="args" />, результат выводит в <see cref="T:System.IO.Stream" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <xref:System.Xml.Xsl.XslTransform> Класса является устаревшим в .NET Framework версии 2.0. <xref:System.Xml.Xsl.XslCompiledTransform> Класс — новый обработчик XSLT. Дополнительные сведения см. в разделе [использование класса XslCompiledTransform](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) и [Миграция с класса XslTransform](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).  
  
 <xref:System.Xml.Xsl.XslTransform> поддерживает синтаксис XSLT 1.0. Таблица стилей XSLT должна включать объявление пространства имен `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.  
  
 `args` Сопоставляются с `xsl:param` элементы, определенные в таблице стилей. Выбранные преобразования применяются к документу в целом. Другими словами Если текущий узел имеет значение узла дерева, отличный от корневого узла документа, это не помешает процессу преобразования обратиться ко всем узлам загружаемого документа. После выполнения преобразования <xref:System.Xml.XPath.XPathNavigator> остается в своем исходном состоянии. Это означает, что узел, который является текущим до начала процесса преобразования, останется текущим после <xref:System.Xml.Xsl.XslTransform.Transform%2A> был вызван метод.  
  
 В разделе [выходные данные XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) конкретные сведения, на котором `xsl:output` атрибуты поддерживаются.  
  
   
  
## Examples  
 В следующем примере загружаются таблицы customer в <xref:System.Xml.XmlDataDocument> и выполняет преобразование XSLT, чтобы вытолкнуть данные о покупателях в таблицу HTML. В примере базы данных Microsoft SQL Server 2000 Northwind.  
  
 [!code-csharp[XmlDataDocument.CreateNavigator#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlDataDocument.CreateNavigator/CS/dataset_trans.cs#1)]
 [!code-vb[XmlDataDocument.CreateNavigator#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlDataDocument.CreateNavigator/VB/dataset_trans.vb#1)]  
  
 В примере в качестве входных данных используется файл `customers.xsl`.  
  
 [!code-xml[XmlDataDocument.CreateNavigator#2](~/samples/snippets/xml/VS_Snippets_Data/XmlDataDocument.CreateNavigator/XML/customers.xsl#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">При обработке преобразования XSLT возникла ошибка.  
  
 Примечание. Это поведение было изменено по сравнению с предыдущими версиями. Исключение <see cref="T:System.Xml.Xsl.XsltException" /> создается при использовании версии 1.1 или более ранней версии платформы Microsoft .NET Framework.</exception>
        <altmember cref="T:System.Xml.Xsl.XsltArgumentList" />
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args, System.IO.TextWriter output, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.XPathNavigator input, class System.Xml.Xsl.XsltArgumentList args, class System.IO.TextWriter output, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As XPathNavigator, args As XsltArgumentList, output As TextWriter, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::XPathNavigator ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::IO::TextWriter ^ output, System::Xml::XmlResolver ^ resolver);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.IO.TextWriter" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="input">Объект <see cref="T:System.Xml.XPath.XPathNavigator" />, содержащий преобразуемые данные.</param>
        <param name="args">Объект <see cref="T:System.Xml.Xsl.XsltArgumentList" />, содержащий имена аргументов с указанием пространства имен, используемый в качестве входных данных для преобразования.</param>
        <param name="output">Модуль записи <see cref="T:System.IO.TextWriter" />, в который нужно направить выход.</param>
        <param name="resolver">Объект <see cref="T:System.Xml.XmlResolver" />, используемый для разрешения функции XSLT <c>document()</c>. Если значение равно <see langword="null" />, функция <c>document()</c> не разрешается.  
  
 <see cref="T:System.Xml.XmlResolver" /> не кэшируется после завершения метода <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)" />.</param>
        <summary>Преобразует данные XML в <see cref="T:System.Xml.XPath.XPathNavigator" />, используя указанные аргументы <paramref name="args" />, результат выводит в <see cref="T:System.IO.TextWriter" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <xref:System.Xml.Xsl.XslTransform> Класса является устаревшим в .NET Framework версии 2.0. <xref:System.Xml.Xsl.XslCompiledTransform> Класс — новый обработчик XSLT. Дополнительные сведения см. в разделе [использование класса XslCompiledTransform](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) и [Миграция с класса XslTransform](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).  
  
 <xref:System.Xml.Xsl.XslTransform> поддерживает синтаксис XSLT 1.0. Таблица стилей XSLT должна включать объявление пространства имен `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.  
  
 `args` Сопоставляются с `xsl:param` элементы, определенные в таблице стилей. Выбранные преобразования применяются к документу в целом. Другими словами Если текущий узел имеет значение узла дерева, отличный от корневого узла документа, это не помешает процессу преобразования обратиться ко всем узлам загружаемого документа. После преобразования выполняются, <xref:System.Xml.XPath.XPathNavigator> остается в своем исходном состоянии. Это означает, что узел, который является текущим до начала процесса преобразования, останется текущим после <xref:System.Xml.Xsl.XslTransform.Transform%2A> был вызван метод.  
  
 Атрибут кодировки в `xsl:output` элемент не поддерживается при выводе в <xref:System.IO.TextWriter>. В разделе [выходные данные XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) конкретные сведения, на котором `xsl:output` атрибуты поддерживаются.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">При обработке преобразования XSLT возникла ошибка.  
  
 Примечание. Это поведение было изменено по сравнению с предыдущими версиями. Исключение <see cref="T:System.Xml.Xsl.XsltException" /> создается при использовании версии 1.1 или более ранней версии платформы Microsoft .NET Framework.</exception>
        <altmember cref="T:System.Xml.Xsl.XsltArgumentList" />
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args, System.Xml.XmlWriter output, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.XPathNavigator input, class System.Xml.Xsl.XsltArgumentList args, class System.Xml.XmlWriter output, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As XPathNavigator, args As XsltArgumentList, output As XmlWriter, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::XPathNavigator ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::Xml::XmlWriter ^ output, System::Xml::XmlResolver ^ resolver);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.Xml.XmlWriter" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="input">Объект <see cref="T:System.Xml.XPath.XPathNavigator" />, содержащий преобразуемые данные.</param>
        <param name="args">Объект <see cref="T:System.Xml.Xsl.XsltArgumentList" />, содержащий имена аргументов с указанием пространства имен, используемый в качестве входных данных для преобразования.</param>
        <param name="output">Модуль записи <see cref="T:System.Xml.XmlWriter" />, в который нужно направить выход.</param>
        <param name="resolver">Объект <see cref="T:System.Xml.XmlResolver" />, используемый для разрешения функции XSLT <c>document()</c>. Если значение равно <see langword="null" />, функция <c>document()</c> не разрешается.  
  
 <see cref="T:System.Xml.XmlResolver" /> не кэшируется после завершения метода <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)" />.</param>
        <summary>Преобразует данные XML в <see cref="T:System.Xml.XPath.XPathNavigator" />, используя указанные аргументы, и результат выводит в <see cref="T:System.Xml.XmlWriter" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <xref:System.Xml.Xsl.XslTransform> Класса является устаревшим в .NET Framework версии 2.0. <xref:System.Xml.Xsl.XslCompiledTransform> Класс — новый обработчик XSLT. Дополнительные сведения см. в разделе [использование класса XslCompiledTransform](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) и [Миграция с класса XslTransform](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).  
  
 <xref:System.Xml.Xsl.XslTransform> поддерживает синтаксис XSLT 1.0. Таблица стилей XSLT должна включать объявление пространства имен `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.  
  
 `args` Сопоставляются с `xsl:param` элементы, определенные в таблице стилей. Выбранные преобразования применяются к документу в целом. Другими словами Если текущий узел имеет значение узла дерева, отличный от корневого узла документа, это не помешает процессу преобразования обратиться ко всем узлам загружаемого документа. После преобразования выполняются, <xref:System.Xml.XPath.XPathNavigator> остается в своем исходном состоянии. Это означает, что узел, который является текущим до начала процесса преобразования, останется текущим после <xref:System.Xml.Xsl.XslTransform.Transform%2A> был вызван метод.  
  
 `xsl:output` Элемент не поддерживается при выводе в <xref:System.Xml.XmlWriter> (`xsl:output` учитывается). В разделе [выходные данные XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) для получения дополнительной информации.  
  
   
  
## Examples  
 Приведенный ниже показана загрузка и изменение XML-документа перед выполнением XSLT-преобразования.  
  
 [!code-cpp[XslTransform.Transform2#1](~/samples/snippets/cpp/VS_Snippets_Data/XslTransform.Transform2/CPP/trans_snip.cpp#1)]
 [!code-csharp[XslTransform.Transform2#1](~/samples/snippets/csharp/VS_Snippets_Data/XslTransform.Transform2/CS/trans_snip.cs#1)]
 [!code-vb[XslTransform.Transform2#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslTransform.Transform2/VB/trans_snip.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">При обработке преобразования XSLT возникла ошибка.  
  
 Примечание. Это поведение было изменено по сравнению с предыдущими версиями. Исключение <see cref="T:System.Xml.Xsl.XsltException" /> создается при использовании версии 1.1 или более ранней версии платформы Microsoft .NET Framework.</exception>
        <altmember cref="T:System.Xml.Xsl.XsltArgumentList" />
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
      </Docs>
    </Member>
    <Member MemberName="XmlResolver">
      <MemberSignature Language="C#" Value="public System.Xml.XmlResolver XmlResolver { set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlResolver XmlResolver" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Xsl.XslTransform.XmlResolver" />
      <MemberSignature Language="VB.NET" Value="Public Property XmlResolver As XmlResolver" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::XmlResolver ^ XmlResolver {  void set(System::Xml::XmlResolver ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlResolver</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Устанавливает значение свойства <see cref="T:System.Xml.XmlResolver" />, используемого для обработки внешних ресурсов при вызове метода<see cref="Overload:System.Xml.Xsl.XslTransform.Transform" />.</summary>
        <value>Объект <see cref="T:System.Xml.XmlResolver" /> для использования во время преобразования. Если значение <see langword="null" />, XSLT <c>document()</c> функция не будет устранена.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <xref:System.Xml.Xsl.XslTransform> Класса является устаревшим в .NET Framework версии 2.0. <xref:System.Xml.Xsl.XslCompiledTransform> Класс — новый обработчик XSLT. Дополнительные сведения см. в разделе [использование класса XslCompiledTransform](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) и [Миграция с класса XslTransform](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).  
  
 В .NET Framework версии 1.1 уровень доверия приложения определяет поведение по умолчанию:  
  
 `Fully trusted code:` Значение по умолчанию <xref:System.Xml.XmlUrlResolver> без пользователем учетных данных используется для разрешения `document()` функции. Если для доступа к внешнему ресурсу требуется проверка подлинности, это свойство используется для указания <xref:System.Xml.XmlResolver> необходимые учетные данные.  
  
 `Semi-trusted code:` Свойство имеет значение `null`, означающее, что `document()` функция не будет устранена. Поскольку полного доверия, необходимо указать <xref:System.Xml.XmlResolver>, это свойство также не может быть задано.  
  
 Данный Сопоставитель используется при XSLT `document()` функция вызывается. Он не используется для разрешения `xsl:import` и `xsl:include` элементы, ссылка в таблице стилей. Чтобы указать <xref:System.Xml.XmlResolver> для разрешения `xsl:import` и `xsl:include` использовать элементы, ссылка в таблице стилей <xref:System.Xml.Xsl.XslTransform.Load%2A> перегрузки, который принимает <xref:System.Xml.XmlResolver> как один из его аргументов.  
  
> [!NOTE]
>  Это свойство является устаревшим в .NET Framework версии 1.1. Указание <xref:System.Xml.XmlResolver> с помощью <xref:System.Xml.Xsl.XslTransform.Transform%2A> метод рекомендуется. В этом случае <xref:System.Xml.XmlResolver> не кэшируется после <xref:System.Xml.Xsl.XslTransform.Transform%2A> метод завершения.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Net.NetworkCredential" />
      </Docs>
    </Member>
  </Members>
</Type>