<Type Name="XmlDocument" FullName="System.Xml.XmlDocument">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="04b0abd24bacbd8b2a4c938ad8b380cbba54839e" />
    <Meta Name="ms.sourcegitcommit" Value="3907f9a5780957d9c85af2e54c0a5bc2a5bf19ab" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="06/14/2018" />
    <Meta Name="ms.locfileid" Value="34255340" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class XmlDocument : System.Xml.XmlNode" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlDocument extends System.Xml.XmlNode" />
  <TypeSignature Language="DocId" Value="T:System.Xml.XmlDocument" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlDocument&#xA;Inherits XmlNode" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlDocument : System::Xml::XmlNode" />
  <AssemblyInfo>
    <AssemblyName>System.Xml.XmlDocument</AssemblyName>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Xml.XmlNode</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="235d4-101">Представляет XML-документ.</span>
      <span class="sxs-lookup">
        <span data-stu-id="235d4-101">Represents an XML document.</span>
      </span>
      <span data-ttu-id="235d4-102">Этот класс можно использовать для загрузки, проверки, изменения, добавления и размещения XML-кода в документе.</span>
      <span class="sxs-lookup">
        <span data-stu-id="235d4-102">You can use this class to load, validate, edit, add, and position XML in a document.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="Remarks"></a> <span data-ttu-id="235d4-103"><xref:System.Xml.XmlDocument> Класс представляет собой в памяти представление XML-документа.</span><span class="sxs-lookup"><span data-stu-id="235d4-103">The <xref:System.Xml.XmlDocument> class is an in-memory representation of an XML document.</span></span> <span data-ttu-id="235d4-104">Он реализует W3C [XML объекта модели (DOM)](~/docs/standard/data/xml/xml-document-object-model-dom.md) базового уровня 1 и базового уровня 2.</span><span class="sxs-lookup"><span data-stu-id="235d4-104">It implements the W3C [XML Document Object Model (DOM)](~/docs/standard/data/xml/xml-document-object-model-dom.md) Level 1 Core and the Core DOM Level 2.</span></span>  
  
 <span data-ttu-id="235d4-105">*DOM* расшифровывается *объектной модели документов*.</span><span class="sxs-lookup"><span data-stu-id="235d4-105">*DOM* stands for *document object model*.</span></span> <span data-ttu-id="235d4-106">Дополнительные сведения, см. [XML объекта модели (DOM)](~/docs/standard/data/xml/xml-document-object-model-dom.md).</span><span class="sxs-lookup"><span data-stu-id="235d4-106">To read more about it, see [XML Document Object Model (DOM)](~/docs/standard/data/xml/xml-document-object-model-dom.md).</span></span>  
  
 <span data-ttu-id="235d4-107">Можно загрузить в модель DOM XML с помощью <xref:System.Xml.XmlDocument> класса и затем программными средствами чтения, изменения и удаления XML в документе.</span><span class="sxs-lookup"><span data-stu-id="235d4-107">You can load XML into the DOM by using the <xref:System.Xml.XmlDocument> class, and then programmatically read, modify, and remove XML in the document.</span></span>  
  
 <span data-ttu-id="235d4-108">Если вы хотите извлечь откройте <xref:System.Xml.XmlDocument> класса и его реализация см [ссылки на источник](https://referencesource.microsoft.com/#System.Xml/Xml/System/Xml/Dom/XmlDocument.cs#f82a4c1bd1f0ee12).</span><span class="sxs-lookup"><span data-stu-id="235d4-108">If you want to pry open the <xref:System.Xml.XmlDocument> class and see how it’s implemented, see the [Reference Source](https://referencesource.microsoft.com/#System.Xml/Xml/System/Xml/Dom/XmlDocument.cs#f82a4c1bd1f0ee12).</span></span>  
  
<a name="Common"></a>   
## <a name="tasks"></a><span data-ttu-id="235d4-109">Задачи</span><span class="sxs-lookup"><span data-stu-id="235d4-109">Tasks</span></span>  
  
-   [<span data-ttu-id="235d4-110">Загрузка XML в объектной модели документов</span><span class="sxs-lookup"><span data-stu-id="235d4-110">Load XML into the document object model</span></span>](#Load)  
  
-   [<span data-ttu-id="235d4-111">Его проверки по схеме</span><span class="sxs-lookup"><span data-stu-id="235d4-111">Validate it against a schema</span></span>](#Validation)  
  
-   [<span data-ttu-id="235d4-112">Перемещаться по дереву документов</span><span class="sxs-lookup"><span data-stu-id="235d4-112">Navigate the document tree</span></span>](#Navigate)  
  
-   [<span data-ttu-id="235d4-113">Поиск узлов</span><span class="sxs-lookup"><span data-stu-id="235d4-113">Find nodes</span></span>](#Find)  
  
-   [<span data-ttu-id="235d4-114">Изменение узлов</span><span class="sxs-lookup"><span data-stu-id="235d4-114">Edit nodes</span></span>](#Edit)  
  
-   [<span data-ttu-id="235d4-115">Добавление узлов</span><span class="sxs-lookup"><span data-stu-id="235d4-115">Add nodes</span></span>](#Add)  
  
-   [<span data-ttu-id="235d4-116">Удаление узлов</span><span class="sxs-lookup"><span data-stu-id="235d4-116">Remove nodes</span></span>](#Remove)  
  
-   [<span data-ttu-id="235d4-117">Положение узлов</span><span class="sxs-lookup"><span data-stu-id="235d4-117">Position nodes</span></span>](#Position)  
  
<a name="Load"></a>   
## <a name="load-xml-into-the-document-object-model"></a><span data-ttu-id="235d4-118">Загрузка XML в объектной модели документов</span><span class="sxs-lookup"><span data-stu-id="235d4-118">Load XML into the document object model</span></span>  
 <span data-ttu-id="235d4-119">Начните с XML-документа, похожее на следующее.</span><span class="sxs-lookup"><span data-stu-id="235d4-119">Start with an XML document like this one.</span></span> <span data-ttu-id="235d4-120">Это просто несколько книг в коллекции.</span><span class="sxs-lookup"><span data-stu-id="235d4-120">It’s just a few books in a collection.</span></span> <span data-ttu-id="235d4-121">Но он содержит основные возможности, которые можно найти в любой XML-документа. пространство имен, элементы, представляющие данные и атрибуты, описывающие данные.</span><span class="sxs-lookup"><span data-stu-id="235d4-121">But it does contain the basic things that you’d find in any XML document; a namespace, elements that represent data and attributes that describe the data.</span></span>  
  
```xml  
<?xml version="1.0" encoding="utf-8"?>  
<books xmlns="http://www.contoso.com/books">  
  <book genre="novel" ISBN="1-861001-57-8" publicationdate="1823-01-28">  
    <title>Pride And Prejudice</title>  
    <price>24.95</price>  
  </book>  
  <book genre="novel" ISBN="1-861002-30-1" publicationdate="1985-01-01">  
    <title>The Handmaid's Tale</title>  
    <price>29.95</price>  
  </book>  
  <book genre="novel" ISBN="1-861001-45-3" publicationdate="1811-01-01">  
    <title>Sense and Sensibility</title>  
    <price>19.95</price>  
  </book>  
</books>  
```  
  
 <span data-ttu-id="235d4-122">Затем загрузите эти данные в модель DOM, чтобы вы могли работать с ним в памяти.</span><span class="sxs-lookup"><span data-stu-id="235d4-122">Next, load this data into the DOM so that you can work with it in memory.</span></span> <span data-ttu-id="235d4-123">Чаще всего для этого будет ссылаться на файл на локальном компьютере или в сети.</span><span class="sxs-lookup"><span data-stu-id="235d4-123">The most popular way to do this is refer to a file on your local computer or on a network.</span></span>  
  
 <span data-ttu-id="235d4-124">В этом примере показана загрузка XML из файла.</span><span class="sxs-lookup"><span data-stu-id="235d4-124">This example loads XML from a file.</span></span> <span data-ttu-id="235d4-125">Если файл не существует, он просто создает XML- и загружает.</span><span class="sxs-lookup"><span data-stu-id="235d4-125">If the file doesn’t exist, it just generates some XML and loads that.</span></span>  
  
 [!code-cpp[XMLProcessingApp#1](~/samples/snippets/cpp/VS_Snippets_Data/xmlprocessingapp/cpp/xmldomprocessing.cpp#1)]
 [!code-csharp[XMLProcessingApp#1](~/samples/snippets/csharp/VS_Snippets_Data/xmlprocessingapp/cs/xmlhelpermethods.cs#1)]
 [!code-vb[XMLProcessingApp#1](~/samples/snippets/visualbasic/VS_Snippets_Data/xmlprocessingapp/vb/xmlhelpermethods.vb#1)]  
  
 <span data-ttu-id="235d4-126">**Полный пример:** [работы с XML в памяти с помощью класса XmlDocument и других связанных типов](https://code.msdn.microsoft.com/windowsdesktop/Manipulate-XML-in-memory-4b612d6b/view/SourceCode)</span><span class="sxs-lookup"><span data-stu-id="235d4-126">**Complete sample:** [Manipulate XML in-Memory by using the XmlDocument class and other related types](https://code.msdn.microsoft.com/windowsdesktop/Manipulate-XML-in-memory-4b612d6b/view/SourceCode)</span></span>  
  
 <span data-ttu-id="235d4-127">**Дополнительные сведения:** [считывание XML-документа в DOM](~/docs/standard/data/xml/reading-an-xml-document-into-the-dom.md)</span><span class="sxs-lookup"><span data-stu-id="235d4-127">**Learn more:** [Reading an XML Document into the DOM](~/docs/standard/data/xml/reading-an-xml-document-into-the-dom.md)</span></span>  
  
<a name="Validation"></a>   
## <a name="validate-it-against-a-schema"></a><span data-ttu-id="235d4-128">Его проверки по схеме</span><span class="sxs-lookup"><span data-stu-id="235d4-128">Validate it against a schema</span></span>  
 <span data-ttu-id="235d4-129">Начните с XML-схемы такого рода.</span><span class="sxs-lookup"><span data-stu-id="235d4-129">Start with an XML schema like this one.</span></span> <span data-ttu-id="235d4-130">Эта схема определяет типы данных в XML и какие атрибуты не требуются.</span><span class="sxs-lookup"><span data-stu-id="235d4-130">This schema defines the data types in the XML and which attributes are required.</span></span>  
  
```xml  
<?xml version="1.0" encoding="utf-8"?>  
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema"  
  attributeFormDefault="unqualified"   
  elementFormDefault="qualified"  
  targetNamespace="http://www.contoso.com/books">   
  <xs:element name="books">  
    <xs:complexType>  
      <xs:sequence>  
        <xs:element maxOccurs="unbounded" name="book">  
          <xs:complexType>  
            <xs:sequence>  
              <xs:element name="title" type="xs:string" />  
              <xs:element name="price" type="xs:decimal" />  
            </xs:sequence>  
            <xs:attribute name="genre" type="xs:string" use="required" />  
            <xs:attribute name="ISBN" type="xs:string" use="required" />  
            <xs:attribute name="publicationdate" type="xs:date" use="required" />  
          </xs:complexType>  
        </xs:element>  
      </xs:sequence>  
    </xs:complexType>  
  </xs:element>  
</xs:schema>  
```  
  
 <span data-ttu-id="235d4-131">Создание <xref:System.Xml.XmlReader> объекта с помощью схемы, а затем загрузите этот объект в модель DOM.</span><span class="sxs-lookup"><span data-stu-id="235d4-131">Create an <xref:System.Xml.XmlReader> object by using your schema, and then load that object into the DOM.</span></span> <span data-ttu-id="235d4-132">Создайте обработчик событий, которое выполняется, когда код пытается изменить XML-файл таким образом, чтобы не нарушает схему.</span><span class="sxs-lookup"><span data-stu-id="235d4-132">Create an event handler that executes when code attempts to modify your XML file in ways that violate the rules of the schema.</span></span>  
  
 <span data-ttu-id="235d4-133">Эти блоки кода показывают вспомогательные методы, которые выполняют все это.</span><span class="sxs-lookup"><span data-stu-id="235d4-133">These blocks of code show helper methods that do all of this.</span></span>  
  
 [!code-cpp[XMLProcessingApp#2](~/samples/snippets/cpp/VS_Snippets_Data/xmlprocessingapp/cpp/xmldomprocessing.cpp#2)]
 [!code-csharp[XMLProcessingApp#2](~/samples/snippets/csharp/VS_Snippets_Data/xmlprocessingapp/cs/xmlhelpermethods.cs#2)]
 [!code-vb[XMLProcessingApp#2](~/samples/snippets/visualbasic/VS_Snippets_Data/xmlprocessingapp/vb/xmlhelpermethods.vb#2)]  
  
 <span data-ttu-id="235d4-134">**Полный пример:** [работы с XML в памяти с помощью класса XmlDocument и других связанных типов](https://code.msdn.microsoft.com/windowsdesktop/Manipulate-XML-in-memory-4b612d6b/view/SourceCode)</span><span class="sxs-lookup"><span data-stu-id="235d4-134">**Complete sample:** [Manipulate XML in-Memory by using the XmlDocument class and other related types](https://code.msdn.microsoft.com/windowsdesktop/Manipulate-XML-in-memory-4b612d6b/view/SourceCode)</span></span>  
  
 <span data-ttu-id="235d4-135">**Дополнительные сведения:** [проверки XML-документа в DOM](~/docs/standard/data/xml/validating-an-xml-document-in-the-dom.md)</span><span class="sxs-lookup"><span data-stu-id="235d4-135">**Learn more:** [Validating an XML Document in the DOM](~/docs/standard/data/xml/validating-an-xml-document-in-the-dom.md)</span></span>  
  
<a name="Navigate"></a>   
## <a name="navigate-the-document-tree"></a><span data-ttu-id="235d4-136">Перемещаться по дереву документов</span><span class="sxs-lookup"><span data-stu-id="235d4-136">Navigate the document tree</span></span>  
 <span data-ttu-id="235d4-137">Свойства можно использовать для навигации по XML-документа.</span><span class="sxs-lookup"><span data-stu-id="235d4-137">You can use properties to navigate around an XML document.</span></span> <span data-ttu-id="235d4-138">Но прежде чем использовать любой из них, давайте ознакомимся несколько терминов.</span><span class="sxs-lookup"><span data-stu-id="235d4-138">But before you use any of them, let’s quickly review a few terms.</span></span> <span data-ttu-id="235d4-139">Документ состоит из узлов.</span><span class="sxs-lookup"><span data-stu-id="235d4-139">Your document is composed of nodes.</span></span> <span data-ttu-id="235d4-140">Каждый узел совпадает с одним *родительского* узел, непосредственно над ним.</span><span class="sxs-lookup"><span data-stu-id="235d4-140">Each node has as single *parent* node directly above it.</span></span> <span data-ttu-id="235d4-141">Единственным узлом, не имеет родительского узла — корневой узел документа, как он представляет узел верхнего уровня.</span><span class="sxs-lookup"><span data-stu-id="235d4-141">The only node that does not have a parent node is the document root, as it is the top-level node.</span></span> <span data-ttu-id="235d4-142">Большинства узлов может быть *дочерних* узлы, которые являются узлами непосредственно под ними.</span><span class="sxs-lookup"><span data-stu-id="235d4-142">Most nodes can have *child* nodes, which are nodes directly below them.</span></span> <span data-ttu-id="235d4-143">Узлы, которые находятся на одном уровне — *одноуровневых элементов*.</span><span class="sxs-lookup"><span data-stu-id="235d4-143">Nodes that are at the same level are *siblings*.</span></span>  
  
 <span data-ttu-id="235d4-144">Следующие примеры демонстрируют получения корневого узла перехода к первым дочерним узлом корневого узла, доступ к любым из его дочерних узлов, вернуться родительскому узлу, и перейдите по узлам того же уровня.</span><span class="sxs-lookup"><span data-stu-id="235d4-144">The following examples, show you how to obtain the root node, jump to the first child node of the root node, access any of its child nodes, get back out to the parent node, and then navigate across sibling nodes.</span></span>  
  
 <span data-ttu-id="235d4-145">**Запуск с корневого узла**</span><span class="sxs-lookup"><span data-stu-id="235d4-145">**Start with the root node**</span></span>  
  
 <span data-ttu-id="235d4-146">В этом примере возвращает корневой узел, а затем использует этот узел для вывода содержимого документа в консоль.</span><span class="sxs-lookup"><span data-stu-id="235d4-146">This example gets the root node and then uses that node to output the contents of the document to the console.</span></span>  
  
 [!code-cpp[Classic WebData XmlDocument.DocumentElement Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlDocument.DocumentElement Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlDocument.DocumentElement Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlDocument.DocumentElement Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlDocument.DocumentElement Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlDocument.DocumentElement Example/VB/source.vb#1)]  
  
 <span data-ttu-id="235d4-147">**Получить дочерние узлы**</span><span class="sxs-lookup"><span data-stu-id="235d4-147">**Get child nodes**</span></span>  
  
 <span data-ttu-id="235d4-148">В этом примере выполняется переход к первым дочерним узлом корневого узла и затем перебор дочерних узлов данного узла, если они существуют.</span><span class="sxs-lookup"><span data-stu-id="235d4-148">This example jumps to the first child node of the root node and then iterates through the child nodes of that node if any exist.</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.HasChildNodes Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.HasChildNodes Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.HasChildNodes Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.HasChildNodes Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.HasChildNodes Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.HasChildNodes Example/VB/source.vb#1)]  
  
 <span data-ttu-id="235d4-149">**Вернуться к родительским узлом**</span><span class="sxs-lookup"><span data-stu-id="235d4-149">**Get back to the parent node**</span></span>  
  
 <span data-ttu-id="235d4-150">Используйте свойство <xref:System.Xml.XmlDocument.ParentNode%2A>.</span><span class="sxs-lookup"><span data-stu-id="235d4-150">Use the <xref:System.Xml.XmlDocument.ParentNode%2A> property.</span></span>  
  
 <span data-ttu-id="235d4-151">**Указывают на последний дочерний узел**</span><span class="sxs-lookup"><span data-stu-id="235d4-151">**Refer to the last child node**</span></span>  
  
 <span data-ttu-id="235d4-152">Этот пример записывает цены книги на консоль (это последний дочерний узел узла книги).</span><span class="sxs-lookup"><span data-stu-id="235d4-152">This example writes the price of a book to the console (which is the last child node of a book node).</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.LastChild Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.LastChild Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.LastChild Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.LastChild Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.LastChild Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.LastChild Example/VB/source.vb#1)]  
  
 <span data-ttu-id="235d4-153">**Переход вперед по одноуровневых элементов**</span><span class="sxs-lookup"><span data-stu-id="235d4-153">**Navigate forward across siblings**</span></span>  
  
 <span data-ttu-id="235d4-154">Этот пример выполняет переход из книги к книге.</span><span class="sxs-lookup"><span data-stu-id="235d4-154">This example moves forward from book to book.</span></span> <span data-ttu-id="235d4-155">Узлы книг имеют общего родителя друг с другом.</span><span class="sxs-lookup"><span data-stu-id="235d4-155">Book nodes are siblings to one another.</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.NextSibling Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.NextSibling Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.NextSibling Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.NextSibling Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.NextSibling Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.NextSibling Example/VB/source.vb#1)]  
  
 <span data-ttu-id="235d4-156">**Переход вперед через одноуровневых элементов**</span><span class="sxs-lookup"><span data-stu-id="235d4-156">**Navigate backwards across siblings**</span></span>  
  
 <span data-ttu-id="235d4-157">В этом примере перемещается вперед из книги к книге.</span><span class="sxs-lookup"><span data-stu-id="235d4-157">This example moves backwards from book to book.</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.PreviousSibling Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.PreviousSibling Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.PreviousSibling Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.PreviousSibling Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.PreviousSibling Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.PreviousSibling Example/VB/source.vb#1)]  
  
<a name="Find"></a>   
## <a name="find-nodes"></a><span data-ttu-id="235d4-158">Поиск узлов</span><span class="sxs-lookup"><span data-stu-id="235d4-158">Find nodes</span></span>  
 <span data-ttu-id="235d4-159">Чаще всего для поиска одного или нескольких узлов данных является использование строку запроса XPath, но существуют также методы, которые не требуются.</span><span class="sxs-lookup"><span data-stu-id="235d4-159">The most popular way to find one or more nodes of data is to use an XPath query string, but there are also methods that don’t require one.</span></span>  
  
 <span data-ttu-id="235d4-160">**Получить один узел**</span><span class="sxs-lookup"><span data-stu-id="235d4-160">**Get a single node**</span></span>  
  
 <span data-ttu-id="235d4-161">Этот пример находит книги с помощью номера ISBN.</span><span class="sxs-lookup"><span data-stu-id="235d4-161">This example locates a book by using the ISBN number.</span></span>  
  
 [!code-cpp[XMLProcessingApp#3](~/samples/snippets/cpp/VS_Snippets_Data/xmlprocessingapp/cpp/xmldomprocessing.cpp#3)]
 [!code-csharp[XMLProcessingApp#3](~/samples/snippets/csharp/VS_Snippets_Data/xmlprocessingapp/cs/xmlhelpermethods.cs#3)]
 [!code-vb[XMLProcessingApp#3](~/samples/snippets/visualbasic/VS_Snippets_Data/xmlprocessingapp/vb/xmlhelpermethods.vb#3)]  
  
 <span data-ttu-id="235d4-162">Строка, используемая в этом примере приводится запроса Xpath.</span><span class="sxs-lookup"><span data-stu-id="235d4-162">The string used in this example is an Xpath query.</span></span> <span data-ttu-id="235d4-163">Можно найти здесь дополнительные примеры: [примеров XPath](https://msdn.microsoft.com/library/ms256086.aspx).</span><span class="sxs-lookup"><span data-stu-id="235d4-163">You can find more examples of them here:   [XPath examples](https://msdn.microsoft.com/library/ms256086.aspx).</span></span>  
  
 <span data-ttu-id="235d4-164">Можно также использовать <xref:System.Xml.XmlDocument.GetElementById%2A> для извлечения узлов.</span><span class="sxs-lookup"><span data-stu-id="235d4-164">You can also use the <xref:System.Xml.XmlDocument.GetElementById%2A> to retrieve nodes.</span></span> <span data-ttu-id="235d4-165">Чтобы использовать этот подход, необходимо определить идентификаторы в объявления определения типа документа в XML-файл.</span><span class="sxs-lookup"><span data-stu-id="235d4-165">To use this approach, you’ll have to define ID’s in the document type definition declarations of your XML file.</span></span>  
  
 <span data-ttu-id="235d4-166">После получения узла можно получить значение атрибутов или дочерних узлов.</span><span class="sxs-lookup"><span data-stu-id="235d4-166">After you get a node, you get the value of attributes or child nodes.</span></span> <span data-ttu-id="235d4-167">Этот пример делает это с узла книги.</span><span class="sxs-lookup"><span data-stu-id="235d4-167">This example does that with a book node.</span></span>  
  
 [!code-cpp[XMLProcessingApp#4](~/samples/snippets/cpp/VS_Snippets_Data/xmlprocessingapp/cpp/xmldomprocessing.cpp#4)]
 [!code-csharp[XMLProcessingApp#4](~/samples/snippets/csharp/VS_Snippets_Data/xmlprocessingapp/cs/xmlhelpermethods.cs#4)]
 [!code-vb[XMLProcessingApp#4](~/samples/snippets/visualbasic/VS_Snippets_Data/xmlprocessingapp/vb/xmlhelpermethods.vb#4)]  
  
 <span data-ttu-id="235d4-168">**Возвращает коллекцию узлов**</span><span class="sxs-lookup"><span data-stu-id="235d4-168">**Get a collection of nodes**</span></span>  
  
 <span data-ttu-id="235d4-169">В этом примере выделяются все книги, где Фамилия автора **Остин**и затем изменяет цену этих книг.</span><span class="sxs-lookup"><span data-stu-id="235d4-169">This example selects all books where the author's last name is **Austen**, and then changes the price of those books.</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.SelectNodes Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.SelectNodes Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.SelectNodes Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.SelectNodes Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.SelectNodes Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.SelectNodes Example/VB/source.vb#1)]  
  
 <span data-ttu-id="235d4-170">Можно также получить коллекцию узлов, используя имя узла.</span><span class="sxs-lookup"><span data-stu-id="235d4-170">You can also get a collection of nodes by using the name of the node.</span></span> <span data-ttu-id="235d4-171">Например в этом примере возвращает коллекцию всех заголовков книг.</span><span class="sxs-lookup"><span data-stu-id="235d4-171">For example, this example gets a collection of all book titles.</span></span>  
  
 [!code-cpp[Classic WebData XmlDocument.GetElementsByTagName Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlDocument.GetElementsByTagName Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlDocument.GetElementsByTagName Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlDocument.GetElementsByTagName Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlDocument.GetElementsByTagName Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlDocument.GetElementsByTagName Example/VB/source.vb#1)]  
  
 <span data-ttu-id="235d4-172">**Полный пример:** [работы с XML в памяти с помощью класса XmlDocument и других связанных типов](https://code.msdn.microsoft.com/windowsdesktop/Manipulate-XML-in-memory-4b612d6b/view/SourceCode)</span><span class="sxs-lookup"><span data-stu-id="235d4-172">**Complete sample:** [Manipulate XML in-Memory by using the XmlDocument class and other related types](https://code.msdn.microsoft.com/windowsdesktop/Manipulate-XML-in-memory-4b612d6b/view/SourceCode)</span></span>  
  
 <span data-ttu-id="235d4-173">**Дополнительные сведения:** [Выбор узлов с помощью XPath-навигации](~/docs/standard/data/xml/select-nodes-using-xpath-navigation.md)</span><span class="sxs-lookup"><span data-stu-id="235d4-173">**Learn more:** [Select Nodes Using XPath Navigation](~/docs/standard/data/xml/select-nodes-using-xpath-navigation.md)</span></span>  
  
<a name="Edit"></a>   
## <a name="edit-nodes"></a><span data-ttu-id="235d4-174">Изменение узлов</span><span class="sxs-lookup"><span data-stu-id="235d4-174">Edit nodes</span></span>  
 <span data-ttu-id="235d4-175">Этот пример изменяет узел книги и его атрибуты.</span><span class="sxs-lookup"><span data-stu-id="235d4-175">This example edits a book node and its attributes.</span></span>  
  
 [!code-cpp[XMLProcessingApp#7](~/samples/snippets/cpp/VS_Snippets_Data/xmlprocessingapp/cpp/xmldomprocessing.cpp#7)]
 [!code-csharp[XMLProcessingApp#7](~/samples/snippets/csharp/VS_Snippets_Data/xmlprocessingapp/cs/xmlhelpermethods.cs#7)]
 [!code-vb[XMLProcessingApp#7](~/samples/snippets/visualbasic/VS_Snippets_Data/xmlprocessingapp/vb/xmlhelpermethods.vb#7)]  
  
 <span data-ttu-id="235d4-176">**Дополнительные сведения:** [изменение узлов, содержимого и значений в XML-документа](~/docs/standard/data/xml/modifying-nodes-content-and-values-in-an-xml-document.md)</span><span class="sxs-lookup"><span data-stu-id="235d4-176">**Learn more:** [Modifying Nodes, Content, and Values in an XML Document](~/docs/standard/data/xml/modifying-nodes-content-and-values-in-an-xml-document.md)</span></span>  
  
 <span data-ttu-id="235d4-177">**Полный пример:** [работы с XML в памяти с помощью класса XmlDocument и других связанных типов](https://code.msdn.microsoft.com/windowsdesktop/Manipulate-XML-in-memory-4b612d6b/view/SourceCode)</span><span class="sxs-lookup"><span data-stu-id="235d4-177">**Complete sample:** [Manipulate XML in-Memory by using the XmlDocument class and other related types](https://code.msdn.microsoft.com/windowsdesktop/Manipulate-XML-in-memory-4b612d6b/view/SourceCode)</span></span>  
  
<a name="Add"></a>   
## <a name="add-nodes"></a><span data-ttu-id="235d4-178">Добавление узлов</span><span class="sxs-lookup"><span data-stu-id="235d4-178">Add nodes</span></span>  
 <span data-ttu-id="235d4-179">Чтобы добавить узел, используйте <xref:System.Xml.XmlDocument.CreateElement%2A> метода или <xref:System.Xml.XmlDocument.CreateNode%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="235d4-179">To add a node, use the <xref:System.Xml.XmlDocument.CreateElement%2A> method or the <xref:System.Xml.XmlDocument.CreateNode%2A> method.</span></span>  
  
 <span data-ttu-id="235d4-180">Чтобы добавить узел данных, такие как книги, используйте <xref:System.Xml.XmlDocument.CreateElement%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="235d4-180">To add a data node such as a book, use the <xref:System.Xml.XmlDocument.CreateElement%2A> method.</span></span>  
  
 <span data-ttu-id="235d4-181">Для любого другого типа узла, например комментария, пробела или узел CDATA, используйте <xref:System.Xml.XmlDocument.CreateNode%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="235d4-181">For any other type of node such as a comment, whitespace node, or CDATA node, use the <xref:System.Xml.XmlDocument.CreateNode%2A> method.</span></span>  
  
 <span data-ttu-id="235d4-182">В этом примере создает узел книги, добавляет к данному узлу attrubutes и затем добавляет этот узел в документ.</span><span class="sxs-lookup"><span data-stu-id="235d4-182">This example creates a book node, adds attrubutes to that node, and then adds that node to the document.</span></span>  
  
 [!code-cpp[XMLProcessingApp#5](~/samples/snippets/cpp/VS_Snippets_Data/xmlprocessingapp/cpp/xmldomprocessing.cpp#5)]
 [!code-csharp[XMLProcessingApp#5](~/samples/snippets/csharp/VS_Snippets_Data/xmlprocessingapp/cs/xmlhelpermethods.cs#5)]
 [!code-vb[XMLProcessingApp#5](~/samples/snippets/visualbasic/VS_Snippets_Data/xmlprocessingapp/vb/xmlhelpermethods.vb#5)]  
  
 <span data-ttu-id="235d4-183">**Полный пример:** [работы с XML в памяти с помощью класса XmlDocument и других связанных типов](https://code.msdn.microsoft.com/windowsdesktop/Manipulate-XML-in-memory-4b612d6b/view/SourceCode)</span><span class="sxs-lookup"><span data-stu-id="235d4-183">**Complete sample:** [Manipulate XML in-Memory by using the XmlDocument class and other related types](https://code.msdn.microsoft.com/windowsdesktop/Manipulate-XML-in-memory-4b612d6b/view/SourceCode)</span></span>  
  
 <span data-ttu-id="235d4-184">**Дополнительные сведения:** [Вставка узлов в XML-документа](~/docs/standard/data/xml/inserting-nodes-into-an-xml-document.md)</span><span class="sxs-lookup"><span data-stu-id="235d4-184">**Learn more:** [Inserting Nodes into an XML Document](~/docs/standard/data/xml/inserting-nodes-into-an-xml-document.md)</span></span>  
  
<a name="Remove"></a>   
## <a name="remove-nodes"></a><span data-ttu-id="235d4-185">Удаление узлов</span><span class="sxs-lookup"><span data-stu-id="235d4-185">Remove nodes</span></span>  
 <span data-ttu-id="235d4-186">Чтобы удалить узел, используйте <xref:System.Xml.XmlNode.RemoveChild%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="235d4-186">To remove a node, use the <xref:System.Xml.XmlNode.RemoveChild%2A> method.</span></span>  
  
 <span data-ttu-id="235d4-187">Этот пример удаляет книгу из документа и пробелов, который отображается перед узлом книги.</span><span class="sxs-lookup"><span data-stu-id="235d4-187">This example removes a book from the document and any whitespace that appears just before the book node.</span></span>  
  
 [!code-cpp[XMLProcessingApp#6](~/samples/snippets/cpp/VS_Snippets_Data/xmlprocessingapp/cpp/xmldomprocessing.cpp#6)]
 [!code-csharp[XMLProcessingApp#6](~/samples/snippets/csharp/VS_Snippets_Data/xmlprocessingapp/cs/xmlhelpermethods.cs#6)]
 [!code-vb[XMLProcessingApp#6](~/samples/snippets/visualbasic/VS_Snippets_Data/xmlprocessingapp/vb/xmlhelpermethods.vb#6)]  
  
 <span data-ttu-id="235d4-188">**Полный пример:** [работы с XML в памяти с помощью класса XmlDocument и других связанных типов](https://code.msdn.microsoft.com/windowsdesktop/Manipulate-XML-in-memory-4b612d6b/view/SourceCode)</span><span class="sxs-lookup"><span data-stu-id="235d4-188">**Complete sample:** [Manipulate XML in-Memory by using the XmlDocument class and other related types](https://code.msdn.microsoft.com/windowsdesktop/Manipulate-XML-in-memory-4b612d6b/view/SourceCode)</span></span>  
  
 <span data-ttu-id="235d4-189">**Дополнительные сведения:** [удаление узлов, содержимого и значений из XML-документа](~/docs/standard/data/xml/removing-nodes-content-and-values-from-an-xml-document.md)</span><span class="sxs-lookup"><span data-stu-id="235d4-189">**Learn more:** [Removing Nodes, Content, and Values from an XML Document](~/docs/standard/data/xml/removing-nodes-content-and-values-from-an-xml-document.md)</span></span>  
  
<a name="Position"></a>   
## <a name="position-nodes"></a><span data-ttu-id="235d4-190">Положение узлов</span><span class="sxs-lookup"><span data-stu-id="235d4-190">Position nodes</span></span>  
 <span data-ttu-id="235d4-191">Можно выбрать место узел, чтобы отобразился в документе с помощью <xref:System.Xml.XmlNode.InsertBefore%2A> и <xref:System.Xml.XmlNode.InsertAfter%2A> методы.</span><span class="sxs-lookup"><span data-stu-id="235d4-191">You can choose where you want a node to appear in your document by using the <xref:System.Xml.XmlNode.InsertBefore%2A> and <xref:System.Xml.XmlNode.InsertAfter%2A> methods.</span></span>  
  
 <span data-ttu-id="235d4-192">В этом примере показано два вспомогательных метода.</span><span class="sxs-lookup"><span data-stu-id="235d4-192">This example shows two helper methods.</span></span> <span data-ttu-id="235d4-193">Один из них перемещает узел выше в списке.</span><span class="sxs-lookup"><span data-stu-id="235d4-193">One of them moves a node higher in a list.</span></span> <span data-ttu-id="235d4-194">Другой способ перемещает ниже узла.</span><span class="sxs-lookup"><span data-stu-id="235d4-194">The other one moves a node lower.</span></span>  
  
 <span data-ttu-id="235d4-195">Эти методы могут использоваться в приложении, которое дает пользователям возможность перемещать книги вверх и вниз в списке книг.</span><span class="sxs-lookup"><span data-stu-id="235d4-195">These methods could be used in an application that enables users to move books up and down in a list of books.</span></span> <span data-ttu-id="235d4-196">Когда пользователь выбирает книги и нажимает вверх или вниз, код может вызывать методы подобные разместить соответствующий узел книги до или после других узлов книги.</span><span class="sxs-lookup"><span data-stu-id="235d4-196">When a user chooses a book and presses an up or down button, your code could call methods like these to position the corresponding book node before or after other book nodes.</span></span>  
  
 [!code-cpp[XMLProcessingApp#8](~/samples/snippets/cpp/VS_Snippets_Data/xmlprocessingapp/cpp/xmldomprocessing.cpp#8)]
 [!code-csharp[XMLProcessingApp#8](~/samples/snippets/csharp/VS_Snippets_Data/xmlprocessingapp/cs/xmlhelpermethods.cs#8)]
 [!code-vb[XMLProcessingApp#8](~/samples/snippets/visualbasic/VS_Snippets_Data/xmlprocessingapp/vb/xmlhelpermethods.vb#8)]  
  
 <span data-ttu-id="235d4-197">**Полный пример:** [работы с XML в памяти с помощью класса XmlDocument и других связанных типов](https://code.msdn.microsoft.com/windowsdesktop/Manipulate-XML-in-memory-4b612d6b/view/SourceCode)</span><span class="sxs-lookup"><span data-stu-id="235d4-197">**Complete sample:** [Manipulate XML in-Memory by using the XmlDocument class and other related types](https://code.msdn.microsoft.com/windowsdesktop/Manipulate-XML-in-memory-4b612d6b/view/SourceCode)</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xml.XmlNodeChangedEventHandler" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="235d4-198">Инициализирует новый экземпляр класса <see cref="T:System.Xml.XmlDocument" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-198">Initializes a new instance of the <see cref="T:System.Xml.XmlDocument" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlDocument ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlDocument();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="235d4-199">Инициализирует новый экземпляр класса <see cref="T:System.Xml.XmlDocument" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-199">Initializes a new instance of the <see cref="T:System.Xml.XmlDocument" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="235d4-200">Ниже приведен пример проверки во время загрузки.</span><span class="sxs-lookup"><span data-stu-id="235d4-200">The following is an example of load-time validation.</span></span> <span data-ttu-id="235d4-201">Определения DTD типа документа проверяющего <xref:System.Xml.XmlReader> передается <xref:System.Xml.XmlDocument.Load%2A> метод и <xref:System.Xml.Schema.ValidationEventHandler> предоставляется для уведомления пользователей об ошибках проверки.</span><span class="sxs-lookup"><span data-stu-id="235d4-201">A document type definition (DTD) validating <xref:System.Xml.XmlReader> is passed to the <xref:System.Xml.XmlDocument.Load%2A> method and a <xref:System.Xml.Schema.ValidationEventHandler> is provided to notify users of any validation errors.</span></span> <span data-ttu-id="235d4-202">В этом примере обнаружена ошибка проверки, но по-прежнему загружается документ.</span><span class="sxs-lookup"><span data-stu-id="235d4-202">In this example a validation error is found, but the document is still loaded.</span></span> <span data-ttu-id="235d4-203">Кроме того, можно определить проверяющего <xref:System.Xml.XmlReader> для создания исключения и остановки процесса загрузки при обнаружении ошибки проверки, не указывая <xref:System.Xml.Schema.ValidationEventHandler>.</span><span class="sxs-lookup"><span data-stu-id="235d4-203">Alternatively, you can define a validating <xref:System.Xml.XmlReader> to throw an exception and stop the load process when a validation error is found by not specifying the <xref:System.Xml.Schema.ValidationEventHandler>.</span></span> <span data-ttu-id="235d4-204">Дополнительные сведения о проверке данных XML см. в подразделе примечаний на справочной странице <xref:System.Xml.XmlReader>.</span><span class="sxs-lookup"><span data-stu-id="235d4-204">For more information about validating XML data, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 [!code-cpp[XmlDocument.cctor#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlDocument.cctor/CPP/docload.cpp#1)]
 [!code-csharp[XmlDocument.cctor#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlDocument.cctor/CS/docload.cs#1)]
 [!code-vb[XmlDocument.cctor#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlDocument.cctor/VB/docload.vb#1)]  
  
 <span data-ttu-id="235d4-205">В примере в качестве входных данных используется файл `bookDTD.xml`.</span><span class="sxs-lookup"><span data-stu-id="235d4-205">The example uses the `bookDTD.xml` file as input.</span></span>  
  
 [!code-xml[XmlDocument.cctor#2](~/samples/snippets/xml/VS_Snippets_Data/XmlDocument.cctor/XML/bookdtd.xml#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Xml.XmlDocument.Load(System.String)" />
        <altmember cref="M:System.Xml.XmlDocument.LoadXml(System.String)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal XmlDocument (System.Xml.XmlImplementation imp);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(class System.Xml.XmlImplementation imp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.#ctor(System.Xml.XmlImplementation)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub New (imp As XmlImplementation)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; XmlDocument(System::Xml::XmlImplementation ^ imp);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="imp" Type="System.Xml.XmlImplementation" />
      </Parameters>
      <Docs>
        <param name="imp">
          <span data-ttu-id="235d4-206">Используемый <see langword="XmlImplementation" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-206">The <see langword="XmlImplementation" /> to use.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="235d4-207">Инициализирует новый экземпляр класса <see langword="XmlDocument" /> указанным значением <see cref="T:System.Xml.XmlImplementation" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-207">Initializes a new instance of the <see langword="XmlDocument" /> class with the specified <see cref="T:System.Xml.XmlImplementation" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlDocument (System.Xml.XmlNameTable nt);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.XmlNameTable nt) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.#ctor(System.Xml.XmlNameTable)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (nt As XmlNameTable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlDocument(System::Xml::XmlNameTable ^ nt);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="nt" Type="System.Xml.XmlNameTable" />
      </Parameters>
      <Docs>
        <param name="nt">
          <span data-ttu-id="235d4-208">Используемый <see langword="XmlNameTable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-208">The <see langword="XmlNameTable" /> to use.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="235d4-209">Инициализирует новый экземпляр класса <see langword="XmlDocument" /> указанным значением <see cref="T:System.Xml.XmlNameTable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-209">Initializes a new instance of the <see langword="XmlDocument" /> class with the specified <see cref="T:System.Xml.XmlNameTable" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BaseURI">
      <MemberSignature Language="C#" Value="public override string BaseURI { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BaseURI" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlDocument.BaseURI" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property BaseURI As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ BaseURI { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="235d4-210">Возвращает базовый URI текущего узла.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-210">Gets the base URI of the current node.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="235d4-211">Расположение, из которого загружен узел.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-211">The location from which the node was loaded.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="235d4-212">Сетевой XML-документ состоит из фрагментов данных, объединяемых с помощью различных механизмов включения стандарта W3C и поэтому содержит узлы, полученные из различных мест.</span><span class="sxs-lookup"><span data-stu-id="235d4-212">A networked XML document is comprised of chunks of data aggregated using various W3C standard inclusion mechanisms and therefore contains nodes that come from different places.</span></span> <span data-ttu-id="235d4-213">`BaseURI` Сообщает, откуда получены эти узлы.</span><span class="sxs-lookup"><span data-stu-id="235d4-213">The `BaseURI` tells you where these nodes came from.</span></span>  
  
 <span data-ttu-id="235d4-214">Для узлов документа `BaseURI` возвращает расположение XML-документа.</span><span class="sxs-lookup"><span data-stu-id="235d4-214">For Document nodes, `BaseURI` returns the location of the XML document.</span></span> <span data-ttu-id="235d4-215">Например если `XmlDocument` был загружен с помощью следующего вызова doc. Загрузка («http://server/mydata.xml»), `BaseURI` для документа узел является http://server/mydata.xml.</span><span class="sxs-lookup"><span data-stu-id="235d4-215">For example, if the `XmlDocument` was loaded using the following call doc.Load("http://server/mydata.xml"), the `BaseURI` for the document node is http://server/mydata.xml.</span></span> <span data-ttu-id="235d4-216">Однако если <xref:System.Xml.XmlDocument.Load%2A> метод перенаправлен сервером на другой URI `BaseURI` возвращает исходный URI, переданный в `Load` метод.</span><span class="sxs-lookup"><span data-stu-id="235d4-216">However, if the <xref:System.Xml.XmlDocument.Load%2A> method is redirected by server to a different URI, `BaseURI` returns the original URI passed to the `Load` method.</span></span>  
  
 <span data-ttu-id="235d4-217">Это свойство является расширением Microsoft для объектной модели документа (DOM).</span><span class="sxs-lookup"><span data-stu-id="235d4-217">This property is a Microsoft extension to the Document Object Model (DOM).</span></span> <span data-ttu-id="235d4-218">Дополнительные сведения о `BaseURI` и ведет себя с другими типами узлов, в разделе <xref:System.Xml.XmlNode.BaseURI%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="235d4-218">For additional information on `BaseURI` and how it behaves with other node types, see <xref:System.Xml.XmlNode.BaseURI%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneNode">
      <MemberSignature Language="C#" Value="public override System.Xml.XmlNode CloneNode (bool deep);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Xml.XmlNode CloneNode(bool deep) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.CloneNode(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CloneNode (deep As Boolean) As XmlNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Xml::XmlNode ^ CloneNode(bool deep);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deep" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="deep">
          <span data-ttu-id="235d4-219">Значение <see langword="true" /> для рекурсивного клонирования поддерева указанного узла; значение <see langword="false" /> для клонирования только самого узла.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-219">
              <see langword="true" /> to recursively clone the subtree under the specified node; <see langword="false" /> to clone only the node itself.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="235d4-220">Создает дубликат этого узла.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-220">Creates a duplicate of this node.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="235d4-221">Клонированный узел <see langword="XmlDocument" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-221">The cloned <see langword="XmlDocument" /> node.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="235d4-222">Этот метод служит конструктор копии для узлов.</span><span class="sxs-lookup"><span data-stu-id="235d4-222">This method serves as a copy constructor for nodes.</span></span> <span data-ttu-id="235d4-223">Точная копия узла не имеет родителя (<xref:System.Xml.XmlNode.ParentNode%2A> возвращает `null`).</span><span class="sxs-lookup"><span data-stu-id="235d4-223">The cloned node has no parent (<xref:System.Xml.XmlNode.ParentNode%2A> returns `null`).</span></span>  
  
 <span data-ttu-id="235d4-224">Если `deep` — `true`, точная копия узла включает в себя все дочерние узлы, в противном случае только `XmlDocument` узел клонирован.</span><span class="sxs-lookup"><span data-stu-id="235d4-224">If `deep` is `true`, the cloned node includes all the child nodes, otherwise only the `XmlDocument` node is cloned.</span></span> <span data-ttu-id="235d4-225">В разделе <xref:System.Xml.XmlNode.CloneNode%2A?displayProperty=nameWithType> метода, чтобы увидеть, как этот метод работает с другими типами узлов.</span><span class="sxs-lookup"><span data-stu-id="235d4-225">See the <xref:System.Xml.XmlNode.CloneNode%2A?displayProperty=nameWithType> method to see how this method behaves on other node types.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="235d4-226">В следующем примере показано различие между полной и неполной копией.</span><span class="sxs-lookup"><span data-stu-id="235d4-226">The following example shows the difference between a deep and shallow clone.</span></span>  
  
 [!code-cpp[Classic WebData XmlDocument.CloneNode Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlDocument.CloneNode Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlDocument.CloneNode Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlDocument.CloneNode Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlDocument.CloneNode Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlDocument.CloneNode Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateAttribute">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="235d4-227">Создает объект <see cref="T:System.Xml.XmlAttribute" /> с указанным именем.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-227">Creates an <see cref="T:System.Xml.XmlAttribute" /> with the specified name.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateAttribute">
      <MemberSignature Language="C#" Value="public System.Xml.XmlAttribute CreateAttribute (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlAttribute CreateAttribute(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.CreateAttribute(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateAttribute (name As String) As XmlAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlAttribute ^ CreateAttribute(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlAttribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="235d4-228">Полное имя атрибута.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-228">The qualified name of the attribute.</span>
          </span>
          <span data-ttu-id="235d4-229">Если имя содержит двоеточие, свойство <see cref="P:System.Xml.XmlNode.Prefix" /> отражает часть имени, предшествующую ему, а свойство <see cref="P:System.Xml.XmlDocument.LocalName" /> — ту часть, которая следует за первым двоеточием.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-229">If the name contains a colon, the <see cref="P:System.Xml.XmlNode.Prefix" /> property reflects the part of the name preceding the first colon and the <see cref="P:System.Xml.XmlDocument.LocalName" /> property reflects the part of the name following the first colon.</span>
          </span>
          <span data-ttu-id="235d4-230">Свойство <see cref="P:System.Xml.XmlNode.NamespaceURI" /> остается пустым, если префикс не является распознаваемым встроенным префиксом, например xmlns.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-230">The <see cref="P:System.Xml.XmlNode.NamespaceURI" /> remains empty unless the prefix is a recognized built-in prefix such as xmlns.</span>
          </span>
          <span data-ttu-id="235d4-231">В этом случае <see langword="NamespaceURI" /> имеет значение http://www.w3.org/2000/xmlns/.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-231">In this case <see langword="NamespaceURI" /> has a value of http://www.w3.org/2000/xmlns/.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="235d4-232">Создает объект <see cref="T:System.Xml.XmlAttribute" /> с указанным <see cref="P:System.Xml.XmlDocument.Name" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-232">Creates an <see cref="T:System.Xml.XmlAttribute" /> with the specified <see cref="P:System.Xml.XmlDocument.Name" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="235d4-233">Новый объект <see langword="XmlAttribute" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-233">The new <see langword="XmlAttribute" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="235d4-234">`XmlAttribute` Можно добавить <xref:System.Xml.XmlElement> с помощью <xref:System.Xml.XmlElement.SetAttributeNode%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="235d4-234">The `XmlAttribute` can be added to an <xref:System.Xml.XmlElement> using the <xref:System.Xml.XmlElement.SetAttributeNode%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="235d4-235">Следующие создает атрибут и добавляет его в XML-документ.</span><span class="sxs-lookup"><span data-stu-id="235d4-235">The following creates an attribute and adds it to an XML document.</span></span>  
  
 [!code-cpp[Classic WebData XmlDocument.CreateAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlDocument.CreateAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlDocument.CreateAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlDocument.CreateAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlDocument.CreateAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlDocument.CreateAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateAttribute">
      <MemberSignature Language="C#" Value="public System.Xml.XmlAttribute CreateAttribute (string qualifiedName, string namespaceURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlAttribute CreateAttribute(string qualifiedName, string namespaceURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.CreateAttribute(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateAttribute (qualifiedName As String, namespaceURI As String) As XmlAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlAttribute ^ CreateAttribute(System::String ^ qualifiedName, System::String ^ namespaceURI);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlAttribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="qualifiedName" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="qualifiedName">
          <span data-ttu-id="235d4-236">Полное имя атрибута.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-236">The qualified name of the attribute.</span>
          </span>
          <span data-ttu-id="235d4-237">Если имя содержит двоеточие, свойство <see cref="P:System.Xml.XmlNode.Prefix" /> отражает часть имени, предшествующую ему, а свойство <see cref="P:System.Xml.XmlDocument.LocalName" /> — ту часть, которая следует за двоеточием.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-237">If the name contains a colon then the <see cref="P:System.Xml.XmlNode.Prefix" /> property will reflect the part of the name preceding the colon and the <see cref="P:System.Xml.XmlDocument.LocalName" /> property will reflect the part of the name after the colon.</span>
          </span>
        </param>
        <param name="namespaceURI">
          <span data-ttu-id="235d4-238">URI пространства имен атрибута.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-238">The namespaceURI of the attribute.</span>
          </span>
          <span data-ttu-id="235d4-239">Если полное имя содержит префикс xmlns, то этот параметр должен иметь значение http://www.w3.org/2000/xmlns/.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-239">If the qualified name includes a prefix of xmlns, then this parameter must be http://www.w3.org/2000/xmlns/.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="235d4-240">Создает <see cref="T:System.Xml.XmlAttribute" /> с помощью указанного полного имени и <see cref="P:System.Xml.XmlNode.NamespaceURI" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-240">Creates an <see cref="T:System.Xml.XmlAttribute" /> with the specified qualified name and <see cref="P:System.Xml.XmlNode.NamespaceURI" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="235d4-241">Новый объект <see langword="XmlAttribute" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-241">The new <see langword="XmlAttribute" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="235d4-242">`XmlAttribute` Можно добавить <xref:System.Xml.XmlElement> с помощью <xref:System.Xml.XmlElement.SetAttributeNode%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="235d4-242">The `XmlAttribute` can be added to an <xref:System.Xml.XmlElement> using the <xref:System.Xml.XmlElement.SetAttributeNode%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateAttribute">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlAttribute CreateAttribute (string prefix, string localName, string namespaceURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlAttribute CreateAttribute(string prefix, string localName, string namespaceURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.CreateAttribute(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateAttribute (prefix As String, localName As String, namespaceURI As String) As XmlAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlAttribute ^ CreateAttribute(System::String ^ prefix, System::String ^ localName, System::String ^ namespaceURI);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlAttribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="prefix">
          <span data-ttu-id="235d4-243">Префикс атрибута (если имеется).</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-243">The prefix of the attribute (if any).</span>
          </span>
          <span data-ttu-id="235d4-244">String.Empty равно значению <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-244">String.Empty and <see langword="null" /> are equivalent.</span>
          </span>
        </param>
        <param name="localName">
          <span data-ttu-id="235d4-245">Локальное имя атрибута.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-245">The local name of the attribute.</span>
          </span>
        </param>
        <param name="namespaceURI">
          <span data-ttu-id="235d4-246">URI пространства имен атрибута (если имеется).</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-246">The namespace URI of the attribute (if any).</span>
          </span>
          <span data-ttu-id="235d4-247">String.Empty равно значению <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-247">String.Empty and <see langword="null" /> are equivalent.</span>
          </span>
          <span data-ttu-id="235d4-248">Если значение параметра <c>prefix</c> равно xmlns, этот параметр должен иметь значение http://www.w3.org/2000/xmlns/. В противном случае возникает исключение.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-248">If <c>prefix</c> is xmlns, then this parameter must be http://www.w3.org/2000/xmlns/; otherwise an exception is thrown.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="235d4-249">Создает объект <see cref="T:System.Xml.XmlAttribute" /> с помощью указанных значений <see cref="P:System.Xml.XmlNode.Prefix" />, <see cref="P:System.Xml.XmlDocument.LocalName" /> и <see cref="P:System.Xml.XmlNode.NamespaceURI" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-249">Creates an <see cref="T:System.Xml.XmlAttribute" /> with the specified <see cref="P:System.Xml.XmlNode.Prefix" />, <see cref="P:System.Xml.XmlDocument.LocalName" />, and <see cref="P:System.Xml.XmlNode.NamespaceURI" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="235d4-250">Новый объект <see langword="XmlAttribute" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-250">The new <see langword="XmlAttribute" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="235d4-251">`XmlAttribute` Можно добавить <xref:System.Xml.XmlElement> с помощью <xref:System.Xml.XmlElement.SetAttributeNode%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="235d4-251">The `XmlAttribute` can be added to an <xref:System.Xml.XmlElement> using the <xref:System.Xml.XmlElement.SetAttributeNode%2A> method.</span></span>  
  
 <span data-ttu-id="235d4-252">Этот метод является расширением Microsoft для модели объекта документа (DOM).</span><span class="sxs-lookup"><span data-stu-id="235d4-252">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateCDataSection">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlCDataSection CreateCDataSection (string data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlCDataSection CreateCDataSection(string data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.CreateCDataSection(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateCDataSection (data As String) As XmlCDataSection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlCDataSection ^ CreateCDataSection(System::String ^ data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlCDataSection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="data">
          <span data-ttu-id="235d4-253">Содержимое нового класса <see langword="XmlCDataSection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-253">The content of the new <see langword="XmlCDataSection" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="235d4-254">Создает объект <see cref="T:System.Xml.XmlCDataSection" />, содержащий указанные данные.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-254">Creates an <see cref="T:System.Xml.XmlCDataSection" /> containing the specified data.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="235d4-255">Новый объект <see langword="XmlCDataSection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-255">The new <see langword="XmlCDataSection" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="235d4-256">Несмотря на то, что этот метод создает новый объект в контексте документа, он не добавляет автоматически новый объект в дереве документа.</span><span class="sxs-lookup"><span data-stu-id="235d4-256">Although this method creates the new object in the context of the document, it does not automatically add the new object to the document tree.</span></span> <span data-ttu-id="235d4-257">Чтобы добавить новый объект, необходимо явно вызвать один из методов вставки узла.</span><span class="sxs-lookup"><span data-stu-id="235d4-257">To add the new object, you must explicitly call one of the node insert methods.</span></span>  
  
 <span data-ttu-id="235d4-258">Согласно рекомендации W3C языка (XML) 1.0 (www.w3.org/TR/1998/REC-xml-19980210) CDataSection узлы разрешены в пределах узлов элементов и узлов EntityReference при узел EntityReference не является потомком узла атрибута .</span><span class="sxs-lookup"><span data-stu-id="235d4-258">According to the W3C Extensible Markup Language (XML) 1.0 recommendation (www.w3.org/TR/1998/REC-xml-19980210), CDataSection nodes are allowed within Element nodes and in EntityReference nodes when the EntityReference node is not a child of an Attribute node.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="235d4-259">Следующий пример создает узел CDATA и добавляет его в документ.</span><span class="sxs-lookup"><span data-stu-id="235d4-259">The following example creates a CDATA node and adds it to the document.</span></span>  
  
 [!code-cpp[Classic WebData XmlDocument.CreateCDataSection Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlDocument.CreateCDataSection Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlDocument.CreateCDataSection Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlDocument.CreateCDataSection Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlDocument.CreateCDataSection Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlDocument.CreateCDataSection Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateComment">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlComment CreateComment (string data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlComment CreateComment(string data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.CreateComment(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateComment (data As String) As XmlComment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlComment ^ CreateComment(System::String ^ data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlComment</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="data">
          <span data-ttu-id="235d4-260">Содержимое нового класса <see langword="XmlComment" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-260">The content of the new <see langword="XmlComment" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="235d4-261">Создает объект <see cref="T:System.Xml.XmlComment" />, содержащий указанные данные.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-261">Creates an <see cref="T:System.Xml.XmlComment" /> containing the specified data.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="235d4-262">Новый объект <see langword="XmlComment" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-262">The new <see langword="XmlComment" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="235d4-263">Несмотря на то, что этот метод создает новый объект в контексте документа, он не добавляет автоматически новый объект в дереве документа.</span><span class="sxs-lookup"><span data-stu-id="235d4-263">Although this method creates the new object in the context of the document, it does not automatically add the new object to the document tree.</span></span> <span data-ttu-id="235d4-264">Чтобы добавить новый объект, необходимо явно вызвать один из методов вставки узла.</span><span class="sxs-lookup"><span data-stu-id="235d4-264">To add the new object, you must explicitly call one of the node insert methods.</span></span>  
  
 <span data-ttu-id="235d4-265">Согласно рекомендации W3C языка (XML) 1.0 (www.w3.org/TR/1998/REC-xml-19980210) узлы комментариев, допустимы только в узлы документа, элемента и EntityReference, если узел EntityReference не является дочерним атрибута узел.</span><span class="sxs-lookup"><span data-stu-id="235d4-265">According to the W3C Extensible Markup Language (XML) 1.0 recommendation (www.w3.org/TR/1998/REC-xml-19980210), Comment nodes are only allowed within Document, Element and EntityReference nodes, when the EntityReference node is not a child of an Attribute node.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="235d4-266">Следующий пример создает комментарий и добавляет его в XML-документ.</span><span class="sxs-lookup"><span data-stu-id="235d4-266">The following example creates a comment and adds it to an XML document.</span></span>  
  
 [!code-cpp[Classic WebData XmlDocument.CreateComment Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlDocument.CreateComment Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlDocument.CreateComment Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlDocument.CreateComment Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlDocument.CreateComment Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlDocument.CreateComment Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDefaultAttribute">
      <MemberSignature Language="C#" Value="protected internal virtual System.Xml.XmlAttribute CreateDefaultAttribute (string prefix, string localName, string namespaceURI);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.Xml.XmlAttribute CreateDefaultAttribute(string prefix, string localName, string namespaceURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.CreateDefaultAttribute(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function CreateDefaultAttribute (prefix As String, localName As String, namespaceURI As String) As XmlAttribute" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::Xml::XmlAttribute ^ CreateDefaultAttribute(System::String ^ prefix, System::String ^ localName, System::String ^ namespaceURI);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlAttribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="prefix">
          <span data-ttu-id="235d4-267">Префикс атрибута (если имеется).</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-267">The prefix of the attribute (if any).</span>
          </span>
        </param>
        <param name="localName">
          <span data-ttu-id="235d4-268">Локальное имя атрибута.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-268">The local name of the attribute.</span>
          </span>
        </param>
        <param name="namespaceURI">
          <span data-ttu-id="235d4-269">URI пространства имен атрибута (если имеется).</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-269">The namespace URI of the attribute (if any).</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="235d4-270">Создает атрибут по умолчанию с помощью указанного префикса, локального имени и URI пространства имен.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-270">Creates a default attribute with the specified prefix, local name and namespace URI.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="235d4-271">Новый объект <see cref="T:System.Xml.XmlAttribute" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-271">The new <see cref="T:System.Xml.XmlAttribute" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="235d4-272">Этот метод является расширением Microsoft для модели объекта документа (DOM).</span><span class="sxs-lookup"><span data-stu-id="235d4-272">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDocumentFragment">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlDocumentFragment CreateDocumentFragment ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlDocumentFragment CreateDocumentFragment() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.CreateDocumentFragment" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateDocumentFragment () As XmlDocumentFragment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlDocumentFragment ^ CreateDocumentFragment();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDocumentFragment</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="235d4-273">Создает <see cref="T:System.Xml.XmlDocumentFragment" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-273">Creates an <see cref="T:System.Xml.XmlDocumentFragment" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="235d4-274">Новый объект <see langword="XmlDocumentFragment" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-274">The new <see langword="XmlDocumentFragment" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="235d4-275">Узлы DocumentFragment нельзя вставлять в документ.</span><span class="sxs-lookup"><span data-stu-id="235d4-275">DocumentFragment nodes cannot be inserted into a document.</span></span> <span data-ttu-id="235d4-276">Однако дочерние узлы фрагмент документа можно вставить в документ.</span><span class="sxs-lookup"><span data-stu-id="235d4-276">However, you can insert children of the DocumentFragment node into a document.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="235d4-277">В следующем примере добавляется новых узлов в XML-документ.</span><span class="sxs-lookup"><span data-stu-id="235d4-277">The following example adds new nodes to an XML document.</span></span>  
  
 [!code-cpp[Classic WebData XmlDocument.CreateDocumentFragment Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlDocument.CreateDocumentFragment Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlDocument.CreateDocumentFragment Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlDocument.CreateDocumentFragment Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlDocument.CreateDocumentFragment Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlDocument.CreateDocumentFragment Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDocumentType">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlDocumentType CreateDocumentType (string name, string publicId, string systemId, string internalSubset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlDocumentType CreateDocumentType(string name, string publicId, string systemId, string internalSubset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.CreateDocumentType(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateDocumentType (name As String, publicId As String, systemId As String, internalSubset As String) As XmlDocumentType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlDocumentType ^ CreateDocumentType(System::String ^ name, System::String ^ publicId, System::String ^ systemId, System::String ^ internalSubset);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDocumentType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="publicId" Type="System.String" />
        <Parameter Name="systemId" Type="System.String" />
        <Parameter Name="internalSubset" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="235d4-278">Имя типа документа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-278">Name of the document type.</span>
          </span>
        </param>
        <param name="publicId">
          <span data-ttu-id="235d4-279">Общий идентификатор типа документа или значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-279">The public identifier of the document type or <see langword="null" />.</span>
          </span>
          <span data-ttu-id="235d4-280">Вы можете указать общий URI и идентификатор системы для определения местоположения внешнего поднабора DTD.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-280">You can specify a public URI and also a system identifier to identify the location of the external DTD subset.</span>
          </span>
        </param>
        <param name="systemId">
          <span data-ttu-id="235d4-281">Системный идентификатор типа документа или значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-281">The system identifier of the document type or <see langword="null" />.</span>
          </span>
          <span data-ttu-id="235d4-282">Задает URL-адрес местоположения файла внешнего поднабора DTD.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-282">Specifies the URL of the file location for the external DTD subset.</span>
          </span>
        </param>
        <param name="internalSubset">
          <span data-ttu-id="235d4-283">Внутреннее подмножество DTD типа документа или значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-283">The DTD internal subset of the document type or <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="235d4-284">Возвращает новый объект <see cref="T:System.Xml.XmlDocumentType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-284">Returns a new <see cref="T:System.Xml.XmlDocumentType" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="235d4-285">Новый объект <see langword="XmlDocumentType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-285">The new <see langword="XmlDocumentType" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="235d4-286">Возвращаемый узел будет содержать проанализированные <xref:System.Xml.XmlDocumentType.Entities%2A> и <xref:System.Xml.XmlDocumentType.Notations%2A> коллекции.</span><span class="sxs-lookup"><span data-stu-id="235d4-286">The returned node will have parsed <xref:System.Xml.XmlDocumentType.Entities%2A> and <xref:System.Xml.XmlDocumentType.Notations%2A> collections.</span></span>  
  
 <span data-ttu-id="235d4-287">Несмотря на то, что этот метод создает новый объект в контексте документа, он не добавляет автоматически новый объект в дереве документа.</span><span class="sxs-lookup"><span data-stu-id="235d4-287">Although this method creates the new object in the context of the document, it does not automatically add the new object to the document tree.</span></span> <span data-ttu-id="235d4-288">Чтобы добавить новый объект, необходимо явно вызвать один из методов вставки узла.</span><span class="sxs-lookup"><span data-stu-id="235d4-288">To add the new object, you must explicitly call one of the node insert methods.</span></span>  
  
 <span data-ttu-id="235d4-289">Согласно рекомендации W3C языка (XML) 1.0 (www.w3.org/TR/1998/REC-xml-19980210) узлы DocumentType разрешены только в пределах узлов документа.</span><span class="sxs-lookup"><span data-stu-id="235d4-289">According to the W3C Extensible Markup Language (XML) 1.0 recommendation (www.w3.org/TR/1998/REC-xml-19980210), DocumentType nodes are only allowed within Document nodes.</span></span> <span data-ttu-id="235d4-290">Каждый <xref:System.Xml.XmlDocument> может иметь только один узел DocumentType.</span><span class="sxs-lookup"><span data-stu-id="235d4-290">Each <xref:System.Xml.XmlDocument> can have only one DocumentType node.</span></span> <span data-ttu-id="235d4-291">Узел DocumentType должен также быть вставлен перед корневым элементом `XmlDocument` (если документ уже имеет корневой элемент, не может добавить узел DocumentType).</span><span class="sxs-lookup"><span data-stu-id="235d4-291">The DocumentType node must also be inserted before the root element of the `XmlDocument` (if the document already has a root element, you cannot add a DocumentType node).</span></span>  
  
 <span data-ttu-id="235d4-292">Если переданные параметры не объединены для построения допустимого `XmlDocumentType`, создается исключение.</span><span class="sxs-lookup"><span data-stu-id="235d4-292">If the passed parameters do not combine to build a valid `XmlDocumentType`, an exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="235d4-293">Следующий пример создает узел DocumentType и добавляет его в XML-документ.</span><span class="sxs-lookup"><span data-stu-id="235d4-293">The following example creates a DocumentType node and adds it to an XML document.</span></span>  
  
 [!code-cpp[Classic WebData XmlDocument.CreateDocumentType Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlDocument.CreateDocumentType Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlDocument.CreateDocumentType Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlDocument.CreateDocumentType Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlDocument.CreateDocumentType Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlDocument.CreateDocumentType Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="235d4-294">
            <para>Этот метод имеет требования наследования. Требуется полное доверие для переопределения <see langword="CreateDocumentType" /> метод.  Этот метод является расширением Microsoft для модели объекта документа (DOM).</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-294">
              <para>This method has an inheritance demand. Full trust is required to override the <see langword="CreateDocumentType" /> method.  This method is a Microsoft extension to the Document Object Model (DOM).</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateElement">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="235d4-295">Создает <see cref="T:System.Xml.XmlElement" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-295">Creates an <see cref="T:System.Xml.XmlElement" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateElement">
      <MemberSignature Language="C#" Value="public System.Xml.XmlElement CreateElement (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlElement CreateElement(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.CreateElement(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateElement (name As String) As XmlElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlElement ^ CreateElement(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="235d4-296">Полное имя элемента.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-296">The qualified name of the element.</span>
          </span>
          <span data-ttu-id="235d4-297">Если имя содержит двоеточие, свойство <see cref="P:System.Xml.XmlNode.Prefix" /> отражает часть имени, предшествующую ему, а свойство <see cref="P:System.Xml.XmlDocument.LocalName" /> — ту часть, которая следует за двоеточием.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-297">If the name contains a colon then the <see cref="P:System.Xml.XmlNode.Prefix" /> property reflects the part of the name preceding the colon and the <see cref="P:System.Xml.XmlDocument.LocalName" /> property reflects the part of the name after the colon.</span>
          </span>
          <span data-ttu-id="235d4-298">Полное имя не может содержать префикс "xmlns".</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-298">The qualified name cannot include a prefix of'xmlns'.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="235d4-299">Создает элемент с указанным именем.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-299">Creates an element with the specified name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="235d4-300">Новый объект <see langword="XmlElement" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-300">The new <see langword="XmlElement" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="235d4-301">Обратите внимание, что экземпляр возвращается реализует `XmlElement` интерфейс, поэтому атрибуты по умолчанию будет создан непосредственно в возвращаемом объекте.</span><span class="sxs-lookup"><span data-stu-id="235d4-301">Note that the instance returned implements the `XmlElement` interface, so default attributes would be created directly on the returned object.</span></span>  
  
 <span data-ttu-id="235d4-302">Несмотря на то, что этот метод создает новый объект в контексте документа, он не добавляет автоматически новый объект в дереве документа.</span><span class="sxs-lookup"><span data-stu-id="235d4-302">Although this method creates the new object in the context of the document, it does not automatically add the new object to the document tree.</span></span> <span data-ttu-id="235d4-303">Чтобы добавить новый объект, необходимо явно вызвать один из методов вставки узла.</span><span class="sxs-lookup"><span data-stu-id="235d4-303">To add the new object, you must explicitly call one of the node insert methods.</span></span>  
  
 <span data-ttu-id="235d4-304">Согласно рекомендации W3C языка (XML) 1.0 (www.w3.org/TR/1998/REC-xml-19980210), узлы элемента разрешены внутри узлов документа и элемента и в узлов EntityReference при узел EntityReference, не является потомком Узел атрибута.</span><span class="sxs-lookup"><span data-stu-id="235d4-304">According to the W3C Extensible Markup Language (XML) 1.0 recommendation (www.w3.org/TR/1998/REC-xml-19980210), Element nodes are allowed within Document and Element nodes, and in EntityReference nodes when the EntityReference node is not a child of an Attribute node.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="235d4-305">Следующий пример создает новый элемент и добавляет его в документ.</span><span class="sxs-lookup"><span data-stu-id="235d4-305">The following example creates a new element and adds it to the document.</span></span>  
  
 [!code-cpp[Classic WebData XmlDocument.CreateElement Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlDocument.CreateElement Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlDocument.CreateElement Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlDocument.CreateElement Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlDocument.CreateElement Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlDocument.CreateElement Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateElement">
      <MemberSignature Language="C#" Value="public System.Xml.XmlElement CreateElement (string qualifiedName, string namespaceURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlElement CreateElement(string qualifiedName, string namespaceURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.CreateElement(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateElement (qualifiedName As String, namespaceURI As String) As XmlElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlElement ^ CreateElement(System::String ^ qualifiedName, System::String ^ namespaceURI);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="qualifiedName" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="qualifiedName">
          <span data-ttu-id="235d4-306">Полное имя элемента.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-306">The qualified name of the element.</span>
          </span>
          <span data-ttu-id="235d4-307">Если имя содержит двоеточие, свойство <see cref="P:System.Xml.XmlNode.Prefix" /> отражает часть имени, предшествующую ему, а свойство <see cref="P:System.Xml.XmlDocument.LocalName" /> — ту часть, которая следует за двоеточием.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-307">If the name contains a colon then the <see cref="P:System.Xml.XmlNode.Prefix" /> property will reflect the part of the name preceding the colon and the <see cref="P:System.Xml.XmlDocument.LocalName" /> property will reflect the part of the name after the colon.</span>
          </span>
          <span data-ttu-id="235d4-308">Полное имя не может содержать префикс "xmlns".</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-308">The qualified name cannot include a prefix of'xmlns'.</span>
          </span>
        </param>
        <param name="namespaceURI">
          <span data-ttu-id="235d4-309">Универсальный код ресурса (URI) пространства имен элемента.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-309">The namespace URI of the element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="235d4-310">Создает <see cref="T:System.Xml.XmlElement" /> с помощью полного имени и <see cref="P:System.Xml.XmlNode.NamespaceURI" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-310">Creates an <see cref="T:System.Xml.XmlElement" /> with the qualified name and <see cref="P:System.Xml.XmlNode.NamespaceURI" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="235d4-311">Новый объект <see langword="XmlElement" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-311">The new <see langword="XmlElement" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="235d4-312">Следующий код C#</span><span class="sxs-lookup"><span data-stu-id="235d4-312">The following C# code</span></span>  
  
```csharp  
XmlElement elem;  
elem=doc.CreateElement("xy:item", "urn:abc");  
```  
  
 <span data-ttu-id="235d4-313">Возвращает элемент, эквивалентный следующему тексту XML.</span><span class="sxs-lookup"><span data-stu-id="235d4-313">results in an element that is equivalent to the following XML text.</span></span>  
  
```  
<xy:item  
       xmlns:xy="urn:abc"/>  
```  
  
 <span data-ttu-id="235d4-314">Несмотря на то, что этот метод создает новый объект в контексте документа, он не добавляет автоматически новый объект в дереве документа.</span><span class="sxs-lookup"><span data-stu-id="235d4-314">Although this method creates the new object in the context of the document, it does not automatically add the new object to the document tree.</span></span> <span data-ttu-id="235d4-315">Чтобы добавить новый объект, необходимо явно вызвать один из методов вставки узла.</span><span class="sxs-lookup"><span data-stu-id="235d4-315">To add the new object, you must explicitly call one of the node insert methods.</span></span>  
  
 <span data-ttu-id="235d4-316">Согласно рекомендации W3C языка (XML) 1.0 (www.w3.org/TR/1998/REC-xml-19980210), узлы элемента разрешены внутри узлов документа и элемента и в узлов EntityReference при узел EntityReference, не является потомком Узел атрибута.</span><span class="sxs-lookup"><span data-stu-id="235d4-316">According to the W3C Extensible Markup Language (XML) 1.0 recommendation (www.w3.org/TR/1998/REC-xml-19980210), Element nodes are allowed within Document and Element nodes, and in EntityReference nodes when the EntityReference node is not a child of an Attribute node.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateElement">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlElement CreateElement (string prefix, string localName, string namespaceURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlElement CreateElement(string prefix, string localName, string namespaceURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.CreateElement(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateElement (prefix As String, localName As String, namespaceURI As String) As XmlElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlElement ^ CreateElement(System::String ^ prefix, System::String ^ localName, System::String ^ namespaceURI);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="prefix">
          <span data-ttu-id="235d4-317">Префикс нового элемента (если имеется).</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-317">The prefix of the new element (if any).</span>
          </span>
          <span data-ttu-id="235d4-318">String.Empty равно значению <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-318">String.Empty and <see langword="null" /> are equivalent.</span>
          </span>
        </param>
        <param name="localName">
          <span data-ttu-id="235d4-319">Локальное имя нового элемента.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-319">The local name of the new element.</span>
          </span>
        </param>
        <param name="namespaceURI">
          <span data-ttu-id="235d4-320">URI пространства имен нового элемента (если имеется).</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-320">The namespace URI of the new element (if any).</span>
          </span>
          <span data-ttu-id="235d4-321">String.Empty равно значению <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-321">String.Empty and <see langword="null" /> are equivalent.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="235d4-322">Создает элемент с помощью указанных <see cref="P:System.Xml.XmlNode.Prefix" />, <see cref="P:System.Xml.XmlDocument.LocalName" /> и <see cref="P:System.Xml.XmlNode.NamespaceURI" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-322">Creates an element with the specified <see cref="P:System.Xml.XmlNode.Prefix" />, <see cref="P:System.Xml.XmlDocument.LocalName" />, and <see cref="P:System.Xml.XmlNode.NamespaceURI" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="235d4-323">Новый объект <see cref="T:System.Xml.XmlElement" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-323">The new <see cref="T:System.Xml.XmlElement" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="235d4-324">Следующий код C#</span><span class="sxs-lookup"><span data-stu-id="235d4-324">The following C# code</span></span>  
  
```csharp  
XmlElement elem;  
elem=doc.CreateElement("xy", "item", "urn:abc");  
```  
  
 <span data-ttu-id="235d4-325">Создает элемент, эквивалентный следующему тексту XML:</span><span class="sxs-lookup"><span data-stu-id="235d4-325">creates an element equivalent to the following XML text:</span></span>  
  
```  
<xy:item xmlns:xy="urn:abc"/>  
```  
  
 <span data-ttu-id="235d4-326">Несмотря на то, что этот метод создает новый объект в контексте документа, он не добавляет автоматически новый объект в дереве документа.</span><span class="sxs-lookup"><span data-stu-id="235d4-326">Although this method creates the new object in the context of the document, it does not automatically add the new object to the document tree.</span></span> <span data-ttu-id="235d4-327">Чтобы добавить новый объект, необходимо явно вызвать один из методов вставки узла.</span><span class="sxs-lookup"><span data-stu-id="235d4-327">To add the new object, you must explicitly call one of the node insert methods.</span></span>  
  
 <span data-ttu-id="235d4-328">Согласно рекомендации W3C языка (XML) 1.0 (www.w3.org/TR/1998/REC-xml-19980210) узлы элемента разрешены внутри узлов документа и элемента и в узлов EntityReference EntityReference находится вне узла атрибута.</span><span class="sxs-lookup"><span data-stu-id="235d4-328">According to the W3C Extensible Markup Language (XML) 1.0 recommendation (www.w3.org/TR/1998/REC-xml-19980210), Element nodes are allowed within Document and Element nodes, and in EntityReference nodes when the EntityReference is outside an Attribute node.</span></span>  
  
 <span data-ttu-id="235d4-329">Этот метод является расширением Microsoft для модели объекта документа (DOM).</span><span class="sxs-lookup"><span data-stu-id="235d4-329">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="235d4-330">Следующий пример добавляет новый элемент, существующий XML-документ.</span><span class="sxs-lookup"><span data-stu-id="235d4-330">The following example adds a new element to the existing XML document.</span></span>  
  
 [!code-cpp[Classic WebData XmlDocument.CreateElement2 Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlDocument.CreateElement2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlDocument.CreateElement2 Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlDocument.CreateElement2 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlDocument.CreateElement2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlDocument.CreateElement2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateEntityReference">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlEntityReference CreateEntityReference (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlEntityReference CreateEntityReference(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.CreateEntityReference(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateEntityReference (name As String) As XmlEntityReference" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlEntityReference ^ CreateEntityReference(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlEntityReference</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="235d4-331">Имя ссылки на сущность.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-331">The name of the entity reference.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="235d4-332">Создает объект <see cref="T:System.Xml.XmlEntityReference" /> с указанным именем.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-332">Creates an <see cref="T:System.Xml.XmlEntityReference" /> with the specified name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="235d4-333">Новый объект <see langword="XmlEntityReference" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-333">The new <see langword="XmlEntityReference" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="235d4-334">Если упоминаемая сущность известно, к дочернему списку `XmlEntityReference` становится таким же, как и для соответствующего узла <xref:System.Xml.XmlEntity> узла.</span><span class="sxs-lookup"><span data-stu-id="235d4-334">If the referenced entity is known, the child list of the `XmlEntityReference` node is made the same as that of the corresponding <xref:System.Xml.XmlEntity> node.</span></span>  
  
 <span data-ttu-id="235d4-335">Пространства имен, используемые при замене текста для ссылки на сущность, привязываются к моменту изначально устанавливается родительского узла ссылки на сущность (например, при вставке узла ссылки на сущность в документ).</span><span class="sxs-lookup"><span data-stu-id="235d4-335">The namespaces used in the replacement text for the entity reference are bound at the time the parent of the entity reference node is first set (for example, when the entity reference node is inserted into the document).</span></span> <span data-ttu-id="235d4-336">Рассмотрим следующие сущности:</span><span class="sxs-lookup"><span data-stu-id="235d4-336">For example, given the following entity:</span></span>  
  
```  
<!ENTITY a "<b>test</b>">  
```  
  
 <span data-ttu-id="235d4-337">При вызове метода `CreateEntityReference("a")` возвращается один узел с типом EntityReference без дочерних узлов.</span><span class="sxs-lookup"><span data-stu-id="235d4-337">If you call `CreateEntityReference("a")` you get back a single node of type EntityReference with no children.</span></span> <span data-ttu-id="235d4-338">Если добавить этот узел как дочерний следующий узел:</span><span class="sxs-lookup"><span data-stu-id="235d4-338">If you append this node as a child of the following node,</span></span>  
  
```  
<item xmlns="urn:1"/>  
```  
  
 <span data-ttu-id="235d4-339">Затем, во время вызова метода <xref:System.Xml.XmlNode.AppendChild%2A>, задать родительский узел ссылки на созданную сущность и дочерние элементы будут развернуты в данном контексте пространства имен.</span><span class="sxs-lookup"><span data-stu-id="235d4-339">then, at the time of calling <xref:System.Xml.XmlNode.AppendChild%2A>, the parent of the newly created entity reference node is set and the children are expanded in this namespace context.</span></span> <span data-ttu-id="235d4-340">Дочерний узел элемента `b` будет иметь NamespaceURI равно `urn:1`.</span><span class="sxs-lookup"><span data-stu-id="235d4-340">The child element node `b` will have NamespaceURI equal to `urn:1`.</span></span> <span data-ttu-id="235d4-341">Дочерние узлы ссылки на сущность остаются одинаковыми, даже при перемещении ссылки на сущность в место в документе, который содержит пространство имен по умолчанию другой контекст.</span><span class="sxs-lookup"><span data-stu-id="235d4-341">The child nodes of the entity reference remain the same even if you move the entity reference to a place in the document that has a different default namespace context.</span></span> <span data-ttu-id="235d4-342">Этого не происходит для существующих узлов ссылки сущности при удалении и добавлении или для ссылок на сущности, можно клонировать с <xref:System.Xml.XmlDocument.CloneNode%2A>.</span><span class="sxs-lookup"><span data-stu-id="235d4-342">This does not happen for existing entity reference nodes when you remove and insert them or for entity references that you clone with <xref:System.Xml.XmlDocument.CloneNode%2A>.</span></span> <span data-ttu-id="235d4-343">Это происходит только для вновь созданных ссылок на сущности.</span><span class="sxs-lookup"><span data-stu-id="235d4-343">It only happens for newly created entity references.</span></span>  
  
 <span data-ttu-id="235d4-344">Если соответствующая сущность не определен в DocumentType при добавлении узла ссылки на сущность, так как ссылки на сущности не определен, его только дочерний узел будет пустым текстовым узлом.</span><span class="sxs-lookup"><span data-stu-id="235d4-344">If the corresponding entity is not defined in the DocumentType when the entity reference node is added, because the entity reference is not defined, its only child node will be an empty text node.</span></span>  
  
 <span data-ttu-id="235d4-345">Встроенные сущности amp, lt, gt, apos и quot также разрешены, и они будут иметь дочерний текстовый узел с соответствующим развернутым символьным значением.</span><span class="sxs-lookup"><span data-stu-id="235d4-345">The built-in entities amp, lt, gt, apos, and quot are also allowed, and they will have a child text node with the appropriate expanded character value.</span></span>  
  
 <span data-ttu-id="235d4-346">Несмотря на то, что этот метод создает новый объект в контексте документа, он не добавляет автоматически новый объект в дереве документа.</span><span class="sxs-lookup"><span data-stu-id="235d4-346">Although this method creates the new object in the context of the document, it does not automatically add the new object to the document tree.</span></span> <span data-ttu-id="235d4-347">Чтобы добавить новый объект, необходимо явно вызвать один из методов вставки узла.</span><span class="sxs-lookup"><span data-stu-id="235d4-347">To add the new object, you must explicitly call one of the node insert methods.</span></span>  
  
 <span data-ttu-id="235d4-348">Согласно рекомендации W3C языка (XML) 1.0 (www.w3.org/TR/1998/REC-xml-19980210) узлов EntityReference разрешены только в пределах узлов элементов, атрибутов и EntityReference.</span><span class="sxs-lookup"><span data-stu-id="235d4-348">According to the W3C Extensible Markup Language (XML) 1.0 recommendation (www.w3.org/TR/1998/REC-xml-19980210), EntityReference nodes are only allowed within Element, Attribute and EntityReference nodes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="235d4-349">Следующий пример создает две ссылки на сущности и вставляет их в XML-документа.</span><span class="sxs-lookup"><span data-stu-id="235d4-349">The following example creates two entity reference nodes and inserts them into an XML document.</span></span>  
  
 [!code-cpp[Classic WebData XmlDocument.CreateEntityReference Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlDocument.CreateEntityReference Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlDocument.CreateEntityReference Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlDocument.CreateEntityReference Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlDocument.CreateEntityReference Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlDocument.CreateEntityReference Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="235d4-350">Недопустимое имя (например, имена, начинающиеся с символа "#", являются недопустимыми.)</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-350">The name is invalid (for example, names starting with'#' are invalid.)</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateNavigator">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="235d4-351">Создает новый объект <see cref="T:System.Xml.XPath.XPathNavigator" /> для навигации в данном документе.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-351">Creates a new <see cref="T:System.Xml.XPath.XPathNavigator" /> object for navigating this document.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateNavigator">
      <MemberSignature Language="C#" Value="public override System.Xml.XPath.XPathNavigator CreateNavigator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Xml.XPath.XPathNavigator CreateNavigator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.CreateNavigator" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreateNavigator () As XPathNavigator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Xml::XPath::XPathNavigator ^ CreateNavigator();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XPath.XPathNavigator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="235d4-352">Создает новый объект <see cref="T:System.Xml.XPath.XPathNavigator" /> для навигации в данном документе.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-352">Creates a new <see cref="T:System.Xml.XPath.XPathNavigator" /> object for navigating this document.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="235d4-353">Объект <see cref="T:System.Xml.XPath.XPathNavigator" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-353">An <see cref="T:System.Xml.XPath.XPathNavigator" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="235d4-354">Этот метод является расширением Microsoft для модели объекта документа (DOM).</span><span class="sxs-lookup"><span data-stu-id="235d4-354">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="235d4-355">В разделе <xref:System.Xml.XmlNode.CreateNavigator%2A?displayProperty=nameWithType> пример использования этого метода.</span><span class="sxs-lookup"><span data-stu-id="235d4-355">See <xref:System.Xml.XmlNode.CreateNavigator%2A?displayProperty=nameWithType> for an example using this method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateNavigator">
      <MemberSignature Language="C#" Value="protected internal virtual System.Xml.XPath.XPathNavigator CreateNavigator (System.Xml.XmlNode node);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.Xml.XPath.XPathNavigator CreateNavigator(class System.Xml.XmlNode node) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.CreateNavigator(System.Xml.XmlNode)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function CreateNavigator (node As XmlNode) As XPathNavigator" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::Xml::XPath::XPathNavigator ^ CreateNavigator(System::Xml::XmlNode ^ node);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XPath.XPathNavigator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Xml.XmlNode" />
      </Parameters>
      <Docs>
        <param name="node">
          <span data-ttu-id="235d4-356">Узел <see cref="T:System.Xml.XmlNode" />, который будет служить исходной позицией навигатора.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-356">The <see cref="T:System.Xml.XmlNode" /> you want the navigator initially positioned on.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="235d4-357">Создает объект <see cref="T:System.Xml.XPath.XPathNavigator" /> для навигации в данном документе, расположенном в указанном узле <see cref="T:System.Xml.XmlNode" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-357">Creates an <see cref="T:System.Xml.XPath.XPathNavigator" /> object for navigating this document positioned on the <see cref="T:System.Xml.XmlNode" /> specified.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="235d4-358">Объект <see cref="T:System.Xml.XPath.XPathNavigator" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-358">An <see cref="T:System.Xml.XPath.XPathNavigator" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="235d4-359">Этот метод является расширением Microsoft для модели объекта документа (DOM).</span><span class="sxs-lookup"><span data-stu-id="235d4-359">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="235d4-360">В разделе <xref:System.Xml.XmlNode.CreateNavigator%2A?displayProperty=nameWithType> пример использования этого метода.</span><span class="sxs-lookup"><span data-stu-id="235d4-360">See <xref:System.Xml.XmlNode.CreateNavigator%2A?displayProperty=nameWithType> for an example using this method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateNode">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="235d4-361">Создает <see cref="T:System.Xml.XmlNode" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-361">Creates an <see cref="T:System.Xml.XmlNode" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateNode">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlNode CreateNode (string nodeTypeString, string name, string namespaceURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlNode CreateNode(string nodeTypeString, string name, string namespaceURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.CreateNode(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateNode (nodeTypeString As String, name As String, namespaceURI As String) As XmlNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlNode ^ CreateNode(System::String ^ nodeTypeString, System::String ^ name, System::String ^ namespaceURI);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nodeTypeString" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="nodeTypeString">
          <span data-ttu-id="235d4-362">Строковая версия типа <see cref="T:System.Xml.XmlNodeType" /> нового узла.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-362">String version of the <see cref="T:System.Xml.XmlNodeType" /> of the new node.</span>
          </span>
          <span data-ttu-id="235d4-363">Этот параметр должен принимать одно из значений, перечисленных в следующей таблице.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-363">This parameter must be one of the values listed in the table below.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="235d4-364">Полное имя нового узла.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-364">The qualified name of the new node.</span>
          </span>
          <span data-ttu-id="235d4-365">Если имя содержит двоеточие, оно разбивается на компоненты <see cref="P:System.Xml.XmlNode.Prefix" /> и <see cref="P:System.Xml.XmlDocument.LocalName" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-365">If the name contains a colon, it is parsed into <see cref="P:System.Xml.XmlNode.Prefix" /> and <see cref="P:System.Xml.XmlDocument.LocalName" /> components.</span>
          </span>
        </param>
        <param name="namespaceURI">
          <span data-ttu-id="235d4-366">URI пространства имен нового узла.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-366">The namespace URI of the new node.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="235d4-367">Создает <see cref="T:System.Xml.XmlNode" /> с помощью указанного типа узла, а также свойств <see cref="P:System.Xml.XmlDocument.Name" /> и <see cref="P:System.Xml.XmlNode.NamespaceURI" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-367">Creates an <see cref="T:System.Xml.XmlNode" /> with the specified node type, <see cref="P:System.Xml.XmlDocument.Name" />, and <see cref="P:System.Xml.XmlNode.NamespaceURI" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="235d4-368">Новый объект <see langword="XmlNode" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-368">The new <see langword="XmlNode" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="235d4-369">`nodeTypeString` Параметр учитывается регистр символов и должен иметь одно из значений в таблице ниже.</span><span class="sxs-lookup"><span data-stu-id="235d4-369">The `nodeTypeString` parameter is case sensitive and must be one of the values in the following table.</span></span>  
  
|<span data-ttu-id="235d4-370">nodeTypeString</span><span class="sxs-lookup"><span data-stu-id="235d4-370">nodeTypeString</span></span>|<span data-ttu-id="235d4-371">Тип узла XML</span><span class="sxs-lookup"><span data-stu-id="235d4-371">XmlNodeType</span></span>|  
|--------------------|-----------------|  
|<span data-ttu-id="235d4-372">Атрибут</span><span class="sxs-lookup"><span data-stu-id="235d4-372">attribute</span></span>|<span data-ttu-id="235d4-373">Атрибут</span><span class="sxs-lookup"><span data-stu-id="235d4-373">Attribute</span></span>|  
|<span data-ttu-id="235d4-374">cdatasection</span><span class="sxs-lookup"><span data-stu-id="235d4-374">cdatasection</span></span>|<span data-ttu-id="235d4-375">CDATA</span><span class="sxs-lookup"><span data-stu-id="235d4-375">CDATA</span></span>|  
|<span data-ttu-id="235d4-376">комментарий</span><span class="sxs-lookup"><span data-stu-id="235d4-376">comment</span></span>|<span data-ttu-id="235d4-377">Комментарий</span><span class="sxs-lookup"><span data-stu-id="235d4-377">Comment</span></span>|  
|<span data-ttu-id="235d4-378">документ</span><span class="sxs-lookup"><span data-stu-id="235d4-378">document</span></span>|<span data-ttu-id="235d4-379">Document</span><span class="sxs-lookup"><span data-stu-id="235d4-379">Document</span></span>|  
|<span data-ttu-id="235d4-380">фрагмент документа</span><span class="sxs-lookup"><span data-stu-id="235d4-380">documentfragment</span></span>|<span data-ttu-id="235d4-381">DocumentFragment</span><span class="sxs-lookup"><span data-stu-id="235d4-381">DocumentFragment</span></span>|  
|<span data-ttu-id="235d4-382">Тип документа</span><span class="sxs-lookup"><span data-stu-id="235d4-382">documenttype</span></span>|<span data-ttu-id="235d4-383">DocumentType;</span><span class="sxs-lookup"><span data-stu-id="235d4-383">DocumentType</span></span>|  
|<span data-ttu-id="235d4-384">элемент</span><span class="sxs-lookup"><span data-stu-id="235d4-384">element</span></span>|<span data-ttu-id="235d4-385">Элемент</span><span class="sxs-lookup"><span data-stu-id="235d4-385">Element</span></span>|  
|<span data-ttu-id="235d4-386">EntityReference</span><span class="sxs-lookup"><span data-stu-id="235d4-386">entityreference</span></span>|<span data-ttu-id="235d4-387">EntityReference</span><span class="sxs-lookup"><span data-stu-id="235d4-387">EntityReference</span></span>|  
|<span data-ttu-id="235d4-388">ProcessingInstruction</span><span class="sxs-lookup"><span data-stu-id="235d4-388">processinginstruction</span></span>|<span data-ttu-id="235d4-389">ProcessingInstruction;</span><span class="sxs-lookup"><span data-stu-id="235d4-389">ProcessingInstruction</span></span>|  
|<span data-ttu-id="235d4-390">SignificantWhitespace</span><span class="sxs-lookup"><span data-stu-id="235d4-390">significantwhitespace</span></span>|<span data-ttu-id="235d4-391">SignificantWhitespace</span><span class="sxs-lookup"><span data-stu-id="235d4-391">SignificantWhitespace</span></span>|  
|<span data-ttu-id="235d4-392">текст</span><span class="sxs-lookup"><span data-stu-id="235d4-392">text</span></span>|<span data-ttu-id="235d4-393">Text</span><span class="sxs-lookup"><span data-stu-id="235d4-393">Text</span></span>|  
|<span data-ttu-id="235d4-394">whitespace</span><span class="sxs-lookup"><span data-stu-id="235d4-394">whitespace</span></span>|<span data-ttu-id="235d4-395">Whitespace</span><span class="sxs-lookup"><span data-stu-id="235d4-395">Whitespace</span></span>|  
  
 <span data-ttu-id="235d4-396">Несмотря на то, что этот метод создает новый объект в контексте документа, он не добавляет автоматически новый объект в дереве документа.</span><span class="sxs-lookup"><span data-stu-id="235d4-396">Although this method creates the new object in the context of the document, it does not automatically add the new object to the document tree.</span></span> <span data-ttu-id="235d4-397">Чтобы добавить новый объект, необходимо явно вызвать один из методов вставки узла.</span><span class="sxs-lookup"><span data-stu-id="235d4-397">To add the new object, you must explicitly call one of the node insert methods.</span></span>  
  
 <span data-ttu-id="235d4-398">Следующая таблица показывает, какой тип узла [строка] допускается внутри другой NodeType [столбец] в соответствии с рекомендацией W3C языка (XML) 1.0 (www.w3.org/TR/1998/REC-xml-19980210).</span><span class="sxs-lookup"><span data-stu-id="235d4-398">The following table shows you what NodeType[row] is allowed inside another NodeType[column] according to the W3C Extensible Markup Language (XML) 1.0 recommendation (www.w3.org/TR/1998/REC-xml-19980210).</span></span>  
  
||<span data-ttu-id="235d4-399">Document</span><span class="sxs-lookup"><span data-stu-id="235d4-399">Document</span></span>|<span data-ttu-id="235d4-400">DocumentType;</span><span class="sxs-lookup"><span data-stu-id="235d4-400">DocumentType</span></span>|<span data-ttu-id="235d4-401">XmlDeclaration</span><span class="sxs-lookup"><span data-stu-id="235d4-401">XmlDeclaration</span></span>|<span data-ttu-id="235d4-402">Элемент</span><span class="sxs-lookup"><span data-stu-id="235d4-402">Element</span></span>|<span data-ttu-id="235d4-403">Атрибут</span><span class="sxs-lookup"><span data-stu-id="235d4-403">Attribute</span></span>|<span data-ttu-id="235d4-404">Text</span><span class="sxs-lookup"><span data-stu-id="235d4-404">Text</span></span>|<span data-ttu-id="235d4-405">CDATA</span><span class="sxs-lookup"><span data-stu-id="235d4-405">CDATA</span></span>|<span data-ttu-id="235d4-406">Разметка</span><span class="sxs-lookup"><span data-stu-id="235d4-406">Markup</span></span>|<span data-ttu-id="235d4-407">EntityReference</span><span class="sxs-lookup"><span data-stu-id="235d4-407">EntityReference</span></span>|  
|------|--------------|------------------|--------------------|-------------|---------------|----------|-----------|------------|---------------------|  
|`Document`|<span data-ttu-id="235d4-408">Нет</span><span class="sxs-lookup"><span data-stu-id="235d4-408">no</span></span>|<span data-ttu-id="235d4-409">Нет</span><span class="sxs-lookup"><span data-stu-id="235d4-409">no</span></span>|<span data-ttu-id="235d4-410">Нет</span><span class="sxs-lookup"><span data-stu-id="235d4-410">no</span></span>|<span data-ttu-id="235d4-411">Нет</span><span class="sxs-lookup"><span data-stu-id="235d4-411">no</span></span>|<span data-ttu-id="235d4-412">Нет</span><span class="sxs-lookup"><span data-stu-id="235d4-412">no</span></span>|<span data-ttu-id="235d4-413">Нет</span><span class="sxs-lookup"><span data-stu-id="235d4-413">no</span></span>|<span data-ttu-id="235d4-414">Нет</span><span class="sxs-lookup"><span data-stu-id="235d4-414">no</span></span>|<span data-ttu-id="235d4-415">Нет</span><span class="sxs-lookup"><span data-stu-id="235d4-415">no</span></span>|<span data-ttu-id="235d4-416">Нет</span><span class="sxs-lookup"><span data-stu-id="235d4-416">no</span></span>|  
|`DocumentType`|<span data-ttu-id="235d4-417">да</span><span class="sxs-lookup"><span data-stu-id="235d4-417">yes</span></span>|<span data-ttu-id="235d4-418">Нет</span><span class="sxs-lookup"><span data-stu-id="235d4-418">no</span></span>|<span data-ttu-id="235d4-419">Нет</span><span class="sxs-lookup"><span data-stu-id="235d4-419">no</span></span>|<span data-ttu-id="235d4-420">Нет</span><span class="sxs-lookup"><span data-stu-id="235d4-420">no</span></span>|<span data-ttu-id="235d4-421">Нет</span><span class="sxs-lookup"><span data-stu-id="235d4-421">no</span></span>|<span data-ttu-id="235d4-422">Нет</span><span class="sxs-lookup"><span data-stu-id="235d4-422">no</span></span>|<span data-ttu-id="235d4-423">Нет</span><span class="sxs-lookup"><span data-stu-id="235d4-423">no</span></span>|<span data-ttu-id="235d4-424">Нет</span><span class="sxs-lookup"><span data-stu-id="235d4-424">no</span></span>|<span data-ttu-id="235d4-425">Нет</span><span class="sxs-lookup"><span data-stu-id="235d4-425">no</span></span>|  
|`XmlDeclaration`|<span data-ttu-id="235d4-426">Да \*</span><span class="sxs-lookup"><span data-stu-id="235d4-426">yes\*</span></span>|<span data-ttu-id="235d4-427">Нет</span><span class="sxs-lookup"><span data-stu-id="235d4-427">no</span></span>|<span data-ttu-id="235d4-428">Нет</span><span class="sxs-lookup"><span data-stu-id="235d4-428">no</span></span>|<span data-ttu-id="235d4-429">Нет</span><span class="sxs-lookup"><span data-stu-id="235d4-429">no</span></span>|<span data-ttu-id="235d4-430">Нет</span><span class="sxs-lookup"><span data-stu-id="235d4-430">no</span></span>|<span data-ttu-id="235d4-431">Нет</span><span class="sxs-lookup"><span data-stu-id="235d4-431">no</span></span>|<span data-ttu-id="235d4-432">Нет</span><span class="sxs-lookup"><span data-stu-id="235d4-432">no</span></span>|<span data-ttu-id="235d4-433">Нет</span><span class="sxs-lookup"><span data-stu-id="235d4-433">no</span></span>|<span data-ttu-id="235d4-434">Нет</span><span class="sxs-lookup"><span data-stu-id="235d4-434">no</span></span>|  
|`Element`|<span data-ttu-id="235d4-435">да</span><span class="sxs-lookup"><span data-stu-id="235d4-435">yes</span></span>|<span data-ttu-id="235d4-436">Нет</span><span class="sxs-lookup"><span data-stu-id="235d4-436">no</span></span>|<span data-ttu-id="235d4-437">Нет</span><span class="sxs-lookup"><span data-stu-id="235d4-437">no</span></span>|<span data-ttu-id="235d4-438">да</span><span class="sxs-lookup"><span data-stu-id="235d4-438">yes</span></span>|<span data-ttu-id="235d4-439">Нет</span><span class="sxs-lookup"><span data-stu-id="235d4-439">no</span></span>|<span data-ttu-id="235d4-440">Нет</span><span class="sxs-lookup"><span data-stu-id="235d4-440">no</span></span>|<span data-ttu-id="235d4-441">Нет</span><span class="sxs-lookup"><span data-stu-id="235d4-441">no</span></span>|<span data-ttu-id="235d4-442">Нет</span><span class="sxs-lookup"><span data-stu-id="235d4-442">no</span></span>|<span data-ttu-id="235d4-443">Да \*\*\*</span><span class="sxs-lookup"><span data-stu-id="235d4-443">yes\*\*\*</span></span>|  
|`Attribute`|<span data-ttu-id="235d4-444">Нет</span><span class="sxs-lookup"><span data-stu-id="235d4-444">no</span></span>|<span data-ttu-id="235d4-445">Нет</span><span class="sxs-lookup"><span data-stu-id="235d4-445">no</span></span>|<span data-ttu-id="235d4-446">Нет</span><span class="sxs-lookup"><span data-stu-id="235d4-446">no</span></span>|<span data-ttu-id="235d4-447">Да \*\*\*</span><span class="sxs-lookup"><span data-stu-id="235d4-447">yes****</span></span>|<span data-ttu-id="235d4-448">Нет</span><span class="sxs-lookup"><span data-stu-id="235d4-448">no</span></span>|<span data-ttu-id="235d4-449">Нет</span><span class="sxs-lookup"><span data-stu-id="235d4-449">no</span></span>|<span data-ttu-id="235d4-450">Нет</span><span class="sxs-lookup"><span data-stu-id="235d4-450">no</span></span>|<span data-ttu-id="235d4-451">Нет</span><span class="sxs-lookup"><span data-stu-id="235d4-451">no</span></span>|<span data-ttu-id="235d4-452">Нет</span><span class="sxs-lookup"><span data-stu-id="235d4-452">no</span></span>|  
|`Text`|<span data-ttu-id="235d4-453">Нет</span><span class="sxs-lookup"><span data-stu-id="235d4-453">no</span></span>|<span data-ttu-id="235d4-454">Нет</span><span class="sxs-lookup"><span data-stu-id="235d4-454">no</span></span>|<span data-ttu-id="235d4-455">Нет</span><span class="sxs-lookup"><span data-stu-id="235d4-455">no</span></span>|<span data-ttu-id="235d4-456">да</span><span class="sxs-lookup"><span data-stu-id="235d4-456">yes</span></span>|<span data-ttu-id="235d4-457">да</span><span class="sxs-lookup"><span data-stu-id="235d4-457">yes</span></span>|<span data-ttu-id="235d4-458">Нет</span><span class="sxs-lookup"><span data-stu-id="235d4-458">no</span></span>|<span data-ttu-id="235d4-459">Нет</span><span class="sxs-lookup"><span data-stu-id="235d4-459">no</span></span>|<span data-ttu-id="235d4-460">Нет</span><span class="sxs-lookup"><span data-stu-id="235d4-460">no</span></span>|<span data-ttu-id="235d4-461">да</span><span class="sxs-lookup"><span data-stu-id="235d4-461">yes</span></span>|  
|`CDATA`|<span data-ttu-id="235d4-462">Нет</span><span class="sxs-lookup"><span data-stu-id="235d4-462">no</span></span>|<span data-ttu-id="235d4-463">Нет</span><span class="sxs-lookup"><span data-stu-id="235d4-463">no</span></span>|<span data-ttu-id="235d4-464">Нет</span><span class="sxs-lookup"><span data-stu-id="235d4-464">no</span></span>|<span data-ttu-id="235d4-465">да</span><span class="sxs-lookup"><span data-stu-id="235d4-465">yes</span></span>|<span data-ttu-id="235d4-466">Нет</span><span class="sxs-lookup"><span data-stu-id="235d4-466">no</span></span>|<span data-ttu-id="235d4-467">Нет</span><span class="sxs-lookup"><span data-stu-id="235d4-467">no</span></span>|<span data-ttu-id="235d4-468">Нет</span><span class="sxs-lookup"><span data-stu-id="235d4-468">no</span></span>|<span data-ttu-id="235d4-469">Нет</span><span class="sxs-lookup"><span data-stu-id="235d4-469">no</span></span>|<span data-ttu-id="235d4-470">Да \*\*\*</span><span class="sxs-lookup"><span data-stu-id="235d4-470">yes\*\*\*</span></span>|  
|`Markup**`|<span data-ttu-id="235d4-471">да</span><span class="sxs-lookup"><span data-stu-id="235d4-471">yes</span></span>|<span data-ttu-id="235d4-472">Нет</span><span class="sxs-lookup"><span data-stu-id="235d4-472">no</span></span>|<span data-ttu-id="235d4-473">Нет</span><span class="sxs-lookup"><span data-stu-id="235d4-473">no</span></span>|<span data-ttu-id="235d4-474">да</span><span class="sxs-lookup"><span data-stu-id="235d4-474">yes</span></span>|<span data-ttu-id="235d4-475">Нет</span><span class="sxs-lookup"><span data-stu-id="235d4-475">no</span></span>|<span data-ttu-id="235d4-476">Нет</span><span class="sxs-lookup"><span data-stu-id="235d4-476">no</span></span>|<span data-ttu-id="235d4-477">Нет</span><span class="sxs-lookup"><span data-stu-id="235d4-477">no</span></span>|<span data-ttu-id="235d4-478">Нет</span><span class="sxs-lookup"><span data-stu-id="235d4-478">no</span></span>|<span data-ttu-id="235d4-479">Нет</span><span class="sxs-lookup"><span data-stu-id="235d4-479">no</span></span>|  
|`EntityReference`|<span data-ttu-id="235d4-480">Нет</span><span class="sxs-lookup"><span data-stu-id="235d4-480">no</span></span>|<span data-ttu-id="235d4-481">Нет</span><span class="sxs-lookup"><span data-stu-id="235d4-481">no</span></span>|<span data-ttu-id="235d4-482">Нет</span><span class="sxs-lookup"><span data-stu-id="235d4-482">no</span></span>|<span data-ttu-id="235d4-483">да</span><span class="sxs-lookup"><span data-stu-id="235d4-483">yes</span></span>|<span data-ttu-id="235d4-484">да</span><span class="sxs-lookup"><span data-stu-id="235d4-484">yes</span></span>|<span data-ttu-id="235d4-485">Нет</span><span class="sxs-lookup"><span data-stu-id="235d4-485">no</span></span>|<span data-ttu-id="235d4-486">Нет</span><span class="sxs-lookup"><span data-stu-id="235d4-486">no</span></span>|<span data-ttu-id="235d4-487">Нет</span><span class="sxs-lookup"><span data-stu-id="235d4-487">no</span></span>|<span data-ttu-id="235d4-488">да</span><span class="sxs-lookup"><span data-stu-id="235d4-488">yes</span></span>|  
  
 <span data-ttu-id="235d4-489">\* Узел XmlDeclaration должен быть первый дочерний узел документа.</span><span class="sxs-lookup"><span data-stu-id="235d4-489">\* The XmlDeclaration node must be the first child of the Document node.</span></span>  
  
 <span data-ttu-id="235d4-490">** Разметки включает узлов ProcessingInstruction и комментарий.</span><span class="sxs-lookup"><span data-stu-id="235d4-490">** Markup includes ProcessingInstruction and Comment nodes.</span></span>  
  
 <span data-ttu-id="235d4-491">Узлы элемента и CDATA разрешены только в узлов EntityReference, если узел EntityReference не является дочерним узлом атрибута.</span><span class="sxs-lookup"><span data-stu-id="235d4-491">\*\*\* Element and CDATA nodes are only allowed in EntityReference nodes when the EntityReference node is not a child of an Attribute node.</span></span>  
  
 <span data-ttu-id="235d4-492">Атрибуты не являются потомками узла элемента.</span><span class="sxs-lookup"><span data-stu-id="235d4-492">**** Attributes are not children of an Element node.</span></span> <span data-ttu-id="235d4-493">Они содержатся в коллекции атрибутов, к которому принадлежит узел элемента.</span><span class="sxs-lookup"><span data-stu-id="235d4-493">Attributes are contained inside an attribute collection that belongs to an Element node.</span></span>  
  
 <span data-ttu-id="235d4-494">Этот метод является расширением Microsoft для модели объекта документа (DOM).</span><span class="sxs-lookup"><span data-stu-id="235d4-494">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="235d4-495">Следующий пример создает новый элемент и вставляет его в документ.</span><span class="sxs-lookup"><span data-stu-id="235d4-495">The following example creates a new element and inserts it into the document.</span></span>  
  
 [!code-cpp[Classic WebData XmlDocument.CreateNode1 Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlDocument.CreateNode1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlDocument.CreateNode1 Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlDocument.CreateNode1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlDocument.CreateNode1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlDocument.CreateNode1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="235d4-496">Имя не было указано и <see langword="XmlNodeType" /> требует имени; или <paramref name="nodeTypeString" /> не является одной из перечисленных ниже строк.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-496">The name was not provided and the <see langword="XmlNodeType" /> requires a name; or <paramref name="nodeTypeString" /> is not one of the strings listed below.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateNode">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlNode CreateNode (System.Xml.XmlNodeType type, string name, string namespaceURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlNode CreateNode(valuetype System.Xml.XmlNodeType type, string name, string namespaceURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.CreateNode(System.Xml.XmlNodeType,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateNode (type As XmlNodeType, name As String, namespaceURI As String) As XmlNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlNode ^ CreateNode(System::Xml::XmlNodeType type, System::String ^ name, System::String ^ namespaceURI);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Xml.XmlNodeType" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="235d4-497">Тип <see langword="XmlNodeType" /> нового узла.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-497">The <see langword="XmlNodeType" /> of the new node.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="235d4-498">Полное имя нового узла.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-498">The qualified name of the new node.</span>
          </span>
          <span data-ttu-id="235d4-499">Если имя содержит двоеточие, оно разбивается на компоненты <see cref="P:System.Xml.XmlNode.Prefix" /> и <see cref="P:System.Xml.XmlDocument.LocalName" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-499">If the name contains a colon then it is parsed into <see cref="P:System.Xml.XmlNode.Prefix" /> and <see cref="P:System.Xml.XmlDocument.LocalName" /> components.</span>
          </span>
        </param>
        <param name="namespaceURI">
          <span data-ttu-id="235d4-500">URI пространства имен нового узла.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-500">The namespace URI of the new node.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="235d4-501">Создает объект <see cref="T:System.Xml.XmlNode" /> с помощью указанных значений <see cref="T:System.Xml.XmlNodeType" />, <see cref="P:System.Xml.XmlDocument.Name" /> и <see cref="P:System.Xml.XmlNode.NamespaceURI" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-501">Creates an <see cref="T:System.Xml.XmlNode" /> with the specified <see cref="T:System.Xml.XmlNodeType" />, <see cref="P:System.Xml.XmlDocument.Name" />, and <see cref="P:System.Xml.XmlNode.NamespaceURI" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="235d4-502">Новый объект <see langword="XmlNode" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-502">The new <see langword="XmlNode" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="235d4-503">Несмотря на то, что этот метод создает новый объект в контексте документа, он не добавляет автоматически новый объект в дереве документа.</span><span class="sxs-lookup"><span data-stu-id="235d4-503">Although this method creates the new object in the context of the document, it does not automatically add the new object to the document tree.</span></span> <span data-ttu-id="235d4-504">Чтобы добавить новый объект, необходимо явно вызвать один из методов вставки узла.</span><span class="sxs-lookup"><span data-stu-id="235d4-504">To add the new object, you must explicitly call one of the node insert methods.</span></span>  
  
 <span data-ttu-id="235d4-505">Следующая таблица показывает, какой тип узла [строка] допускается внутри другой NodeType [столбец] в соответствии с рекомендацией W3C языка (XML) 1.0 (www.w3.org/TR/1998/REC-xml-19980210).</span><span class="sxs-lookup"><span data-stu-id="235d4-505">The following table shows you what NodeType[row] is allowed inside another NodeType[column] according to the W3C Extensible Markup Language (XML) 1.0 recommendation (www.w3.org/TR/1998/REC-xml-19980210).</span></span>  
  
||<span data-ttu-id="235d4-506">Document</span><span class="sxs-lookup"><span data-stu-id="235d4-506">Document</span></span>|<span data-ttu-id="235d4-507">DocumentType;</span><span class="sxs-lookup"><span data-stu-id="235d4-507">DocumentType</span></span>|<span data-ttu-id="235d4-508">XmlDeclaration</span><span class="sxs-lookup"><span data-stu-id="235d4-508">XmlDeclaration</span></span>|<span data-ttu-id="235d4-509">Элемент</span><span class="sxs-lookup"><span data-stu-id="235d4-509">Element</span></span>|<span data-ttu-id="235d4-510">Атрибут</span><span class="sxs-lookup"><span data-stu-id="235d4-510">Attribute</span></span>|<span data-ttu-id="235d4-511">Text</span><span class="sxs-lookup"><span data-stu-id="235d4-511">Text</span></span>|<span data-ttu-id="235d4-512">CDATA</span><span class="sxs-lookup"><span data-stu-id="235d4-512">CDATA</span></span>|<span data-ttu-id="235d4-513">Разметка</span><span class="sxs-lookup"><span data-stu-id="235d4-513">Markup</span></span>|<span data-ttu-id="235d4-514">EntityReference</span><span class="sxs-lookup"><span data-stu-id="235d4-514">EntityReference</span></span>|  
|------|--------------|------------------|--------------------|-------------|---------------|----------|-----------|------------|---------------------|  
|`Document`|<span data-ttu-id="235d4-515">Нет</span><span class="sxs-lookup"><span data-stu-id="235d4-515">no</span></span>|<span data-ttu-id="235d4-516">Нет</span><span class="sxs-lookup"><span data-stu-id="235d4-516">no</span></span>|<span data-ttu-id="235d4-517">Нет</span><span class="sxs-lookup"><span data-stu-id="235d4-517">no</span></span>|<span data-ttu-id="235d4-518">Нет</span><span class="sxs-lookup"><span data-stu-id="235d4-518">no</span></span>|<span data-ttu-id="235d4-519">Нет</span><span class="sxs-lookup"><span data-stu-id="235d4-519">no</span></span>|<span data-ttu-id="235d4-520">Нет</span><span class="sxs-lookup"><span data-stu-id="235d4-520">no</span></span>|<span data-ttu-id="235d4-521">Нет</span><span class="sxs-lookup"><span data-stu-id="235d4-521">no</span></span>|<span data-ttu-id="235d4-522">Нет</span><span class="sxs-lookup"><span data-stu-id="235d4-522">no</span></span>|<span data-ttu-id="235d4-523">Нет</span><span class="sxs-lookup"><span data-stu-id="235d4-523">no</span></span>|  
|`DocumentType`|<span data-ttu-id="235d4-524">да</span><span class="sxs-lookup"><span data-stu-id="235d4-524">yes</span></span>|<span data-ttu-id="235d4-525">Нет</span><span class="sxs-lookup"><span data-stu-id="235d4-525">no</span></span>|<span data-ttu-id="235d4-526">Нет</span><span class="sxs-lookup"><span data-stu-id="235d4-526">no</span></span>|<span data-ttu-id="235d4-527">Нет</span><span class="sxs-lookup"><span data-stu-id="235d4-527">no</span></span>|<span data-ttu-id="235d4-528">Нет</span><span class="sxs-lookup"><span data-stu-id="235d4-528">no</span></span>|<span data-ttu-id="235d4-529">Нет</span><span class="sxs-lookup"><span data-stu-id="235d4-529">no</span></span>|<span data-ttu-id="235d4-530">Нет</span><span class="sxs-lookup"><span data-stu-id="235d4-530">no</span></span>|<span data-ttu-id="235d4-531">Нет</span><span class="sxs-lookup"><span data-stu-id="235d4-531">no</span></span>|<span data-ttu-id="235d4-532">Нет</span><span class="sxs-lookup"><span data-stu-id="235d4-532">no</span></span>|  
|`XmlDeclaration`|<span data-ttu-id="235d4-533">Да \*</span><span class="sxs-lookup"><span data-stu-id="235d4-533">yes\*</span></span>|<span data-ttu-id="235d4-534">Нет</span><span class="sxs-lookup"><span data-stu-id="235d4-534">no</span></span>|<span data-ttu-id="235d4-535">Нет</span><span class="sxs-lookup"><span data-stu-id="235d4-535">no</span></span>|<span data-ttu-id="235d4-536">Нет</span><span class="sxs-lookup"><span data-stu-id="235d4-536">no</span></span>|<span data-ttu-id="235d4-537">Нет</span><span class="sxs-lookup"><span data-stu-id="235d4-537">no</span></span>|<span data-ttu-id="235d4-538">Нет</span><span class="sxs-lookup"><span data-stu-id="235d4-538">no</span></span>|<span data-ttu-id="235d4-539">Нет</span><span class="sxs-lookup"><span data-stu-id="235d4-539">no</span></span>|<span data-ttu-id="235d4-540">Нет</span><span class="sxs-lookup"><span data-stu-id="235d4-540">no</span></span>|<span data-ttu-id="235d4-541">Нет</span><span class="sxs-lookup"><span data-stu-id="235d4-541">no</span></span>|  
|`Element`|<span data-ttu-id="235d4-542">да</span><span class="sxs-lookup"><span data-stu-id="235d4-542">yes</span></span>|<span data-ttu-id="235d4-543">Нет</span><span class="sxs-lookup"><span data-stu-id="235d4-543">no</span></span>|<span data-ttu-id="235d4-544">Нет</span><span class="sxs-lookup"><span data-stu-id="235d4-544">no</span></span>|<span data-ttu-id="235d4-545">да</span><span class="sxs-lookup"><span data-stu-id="235d4-545">yes</span></span>|<span data-ttu-id="235d4-546">Нет</span><span class="sxs-lookup"><span data-stu-id="235d4-546">no</span></span>|<span data-ttu-id="235d4-547">Нет</span><span class="sxs-lookup"><span data-stu-id="235d4-547">no</span></span>|<span data-ttu-id="235d4-548">Нет</span><span class="sxs-lookup"><span data-stu-id="235d4-548">no</span></span>|<span data-ttu-id="235d4-549">Нет</span><span class="sxs-lookup"><span data-stu-id="235d4-549">no</span></span>|<span data-ttu-id="235d4-550">Да \*\*\*</span><span class="sxs-lookup"><span data-stu-id="235d4-550">yes\*\*\*</span></span>|  
|`Attribute`|<span data-ttu-id="235d4-551">Нет</span><span class="sxs-lookup"><span data-stu-id="235d4-551">no</span></span>|<span data-ttu-id="235d4-552">Нет</span><span class="sxs-lookup"><span data-stu-id="235d4-552">no</span></span>|<span data-ttu-id="235d4-553">Нет</span><span class="sxs-lookup"><span data-stu-id="235d4-553">no</span></span>|<span data-ttu-id="235d4-554">Да \*\*\*</span><span class="sxs-lookup"><span data-stu-id="235d4-554">yes****</span></span>|<span data-ttu-id="235d4-555">Нет</span><span class="sxs-lookup"><span data-stu-id="235d4-555">no</span></span>|<span data-ttu-id="235d4-556">Нет</span><span class="sxs-lookup"><span data-stu-id="235d4-556">no</span></span>|<span data-ttu-id="235d4-557">Нет</span><span class="sxs-lookup"><span data-stu-id="235d4-557">no</span></span>|<span data-ttu-id="235d4-558">Нет</span><span class="sxs-lookup"><span data-stu-id="235d4-558">no</span></span>|<span data-ttu-id="235d4-559">Нет</span><span class="sxs-lookup"><span data-stu-id="235d4-559">no</span></span>|  
|`Text`|<span data-ttu-id="235d4-560">Нет</span><span class="sxs-lookup"><span data-stu-id="235d4-560">no</span></span>|<span data-ttu-id="235d4-561">Нет</span><span class="sxs-lookup"><span data-stu-id="235d4-561">no</span></span>|<span data-ttu-id="235d4-562">Нет</span><span class="sxs-lookup"><span data-stu-id="235d4-562">no</span></span>|<span data-ttu-id="235d4-563">да</span><span class="sxs-lookup"><span data-stu-id="235d4-563">yes</span></span>|<span data-ttu-id="235d4-564">да</span><span class="sxs-lookup"><span data-stu-id="235d4-564">yes</span></span>|<span data-ttu-id="235d4-565">Нет</span><span class="sxs-lookup"><span data-stu-id="235d4-565">no</span></span>|<span data-ttu-id="235d4-566">Нет</span><span class="sxs-lookup"><span data-stu-id="235d4-566">no</span></span>|<span data-ttu-id="235d4-567">Нет</span><span class="sxs-lookup"><span data-stu-id="235d4-567">no</span></span>|<span data-ttu-id="235d4-568">да</span><span class="sxs-lookup"><span data-stu-id="235d4-568">yes</span></span>|  
|`CDATA`|<span data-ttu-id="235d4-569">Нет</span><span class="sxs-lookup"><span data-stu-id="235d4-569">no</span></span>|<span data-ttu-id="235d4-570">Нет</span><span class="sxs-lookup"><span data-stu-id="235d4-570">no</span></span>|<span data-ttu-id="235d4-571">Нет</span><span class="sxs-lookup"><span data-stu-id="235d4-571">no</span></span>|<span data-ttu-id="235d4-572">да</span><span class="sxs-lookup"><span data-stu-id="235d4-572">yes</span></span>|<span data-ttu-id="235d4-573">Нет</span><span class="sxs-lookup"><span data-stu-id="235d4-573">no</span></span>|<span data-ttu-id="235d4-574">Нет</span><span class="sxs-lookup"><span data-stu-id="235d4-574">no</span></span>|<span data-ttu-id="235d4-575">Нет</span><span class="sxs-lookup"><span data-stu-id="235d4-575">no</span></span>|<span data-ttu-id="235d4-576">Нет</span><span class="sxs-lookup"><span data-stu-id="235d4-576">no</span></span>|<span data-ttu-id="235d4-577">Да \*\*\*</span><span class="sxs-lookup"><span data-stu-id="235d4-577">yes\*\*\*</span></span>|  
|`Markup**`|<span data-ttu-id="235d4-578">да</span><span class="sxs-lookup"><span data-stu-id="235d4-578">yes</span></span>|<span data-ttu-id="235d4-579">Нет</span><span class="sxs-lookup"><span data-stu-id="235d4-579">no</span></span>|<span data-ttu-id="235d4-580">Нет</span><span class="sxs-lookup"><span data-stu-id="235d4-580">no</span></span>|<span data-ttu-id="235d4-581">да</span><span class="sxs-lookup"><span data-stu-id="235d4-581">yes</span></span>|<span data-ttu-id="235d4-582">Нет</span><span class="sxs-lookup"><span data-stu-id="235d4-582">no</span></span>|<span data-ttu-id="235d4-583">Нет</span><span class="sxs-lookup"><span data-stu-id="235d4-583">no</span></span>|<span data-ttu-id="235d4-584">Нет</span><span class="sxs-lookup"><span data-stu-id="235d4-584">no</span></span>|<span data-ttu-id="235d4-585">Нет</span><span class="sxs-lookup"><span data-stu-id="235d4-585">no</span></span>|<span data-ttu-id="235d4-586">Нет</span><span class="sxs-lookup"><span data-stu-id="235d4-586">no</span></span>|  
|`EntityReference`|<span data-ttu-id="235d4-587">Нет</span><span class="sxs-lookup"><span data-stu-id="235d4-587">no</span></span>|<span data-ttu-id="235d4-588">Нет</span><span class="sxs-lookup"><span data-stu-id="235d4-588">no</span></span>|<span data-ttu-id="235d4-589">Нет</span><span class="sxs-lookup"><span data-stu-id="235d4-589">no</span></span>|<span data-ttu-id="235d4-590">да</span><span class="sxs-lookup"><span data-stu-id="235d4-590">yes</span></span>|<span data-ttu-id="235d4-591">да</span><span class="sxs-lookup"><span data-stu-id="235d4-591">yes</span></span>|<span data-ttu-id="235d4-592">Нет</span><span class="sxs-lookup"><span data-stu-id="235d4-592">no</span></span>|<span data-ttu-id="235d4-593">Нет</span><span class="sxs-lookup"><span data-stu-id="235d4-593">no</span></span>|<span data-ttu-id="235d4-594">Нет</span><span class="sxs-lookup"><span data-stu-id="235d4-594">no</span></span>|<span data-ttu-id="235d4-595">да</span><span class="sxs-lookup"><span data-stu-id="235d4-595">yes</span></span>|  
  
 <span data-ttu-id="235d4-596">\* Узел XmlDeclaration должен быть первый дочерний узел документа.</span><span class="sxs-lookup"><span data-stu-id="235d4-596">\* The XmlDeclaration node must be the first child of the Document node.</span></span>  
  
 <span data-ttu-id="235d4-597">** Разметки включает узлов ProcessingInstruction и комментарий.</span><span class="sxs-lookup"><span data-stu-id="235d4-597">** Markup includes ProcessingInstruction and Comment nodes.</span></span>  
  
 <span data-ttu-id="235d4-598">Узлы элемента и CDATA разрешены только в узлов EntityReference, если узел EntityReference не является дочерним узлом атрибута.</span><span class="sxs-lookup"><span data-stu-id="235d4-598">\*\*\* Element and CDATA nodes are only allowed in EntityReference nodes when the EntityReference node is not a child of an Attribute node.</span></span>  
  
 <span data-ttu-id="235d4-599">Атрибуты не являются потомками узла элемента.</span><span class="sxs-lookup"><span data-stu-id="235d4-599">**** Attributes are not children of an Element node.</span></span> <span data-ttu-id="235d4-600">Они содержатся в коллекции атрибутов, к которому принадлежит узел элемента.</span><span class="sxs-lookup"><span data-stu-id="235d4-600">Attributes are contained inside an attribute collection that belongs to an Element node.</span></span>  
  
 <span data-ttu-id="235d4-601">Этот метод является расширением Microsoft для модели объекта документа (DOM).</span><span class="sxs-lookup"><span data-stu-id="235d4-601">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="235d4-602">Следующий пример создает новый элемент и вставляет его в XML-документа.</span><span class="sxs-lookup"><span data-stu-id="235d4-602">The following example creates a new element and inserts it into an XML document.</span></span>  
  
 [!code-cpp[Classic WebData XmlDocument.CreateNode Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlDocument.CreateNode Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlDocument.CreateNode Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlDocument.CreateNode Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlDocument.CreateNode Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlDocument.CreateNode Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="235d4-603">Имя не указано, а для <see langword="XmlNodeType" /> требуется имя.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-603">The name was not provided and the <see langword="XmlNodeType" /> requires a name.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateNode">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlNode CreateNode (System.Xml.XmlNodeType type, string prefix, string name, string namespaceURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlNode CreateNode(valuetype System.Xml.XmlNodeType type, string prefix, string name, string namespaceURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.CreateNode(System.Xml.XmlNodeType,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateNode (type As XmlNodeType, prefix As String, name As String, namespaceURI As String) As XmlNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlNode ^ CreateNode(System::Xml::XmlNodeType type, System::String ^ prefix, System::String ^ name, System::String ^ namespaceURI);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Xml.XmlNodeType" />
        <Parameter Name="prefix" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="235d4-604">Тип <see langword="XmlNodeType" /> нового узла.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-604">The <see langword="XmlNodeType" /> of the new node.</span>
          </span>
        </param>
        <param name="prefix">
          <span data-ttu-id="235d4-605">Префикс нового узла.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-605">The prefix of the new node.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="235d4-606">Локальное имя нового узла.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-606">The local name of the new node.</span>
          </span>
        </param>
        <param name="namespaceURI">
          <span data-ttu-id="235d4-607">URI пространства имен нового узла.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-607">The namespace URI of the new node.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="235d4-608">Создает объект <see cref="T:System.Xml.XmlNode" /> с помощью указанных типов <see cref="T:System.Xml.XmlNodeType" />, <see cref="P:System.Xml.XmlNode.Prefix" />, <see cref="P:System.Xml.XmlDocument.Name" /> и <see cref="P:System.Xml.XmlNode.NamespaceURI" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-608">Creates a <see cref="T:System.Xml.XmlNode" /> with the specified <see cref="T:System.Xml.XmlNodeType" />, <see cref="P:System.Xml.XmlNode.Prefix" />, <see cref="P:System.Xml.XmlDocument.Name" />, and <see cref="P:System.Xml.XmlNode.NamespaceURI" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="235d4-609">Новый объект <see langword="XmlNode" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-609">The new <see langword="XmlNode" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="235d4-610">Несмотря на то, что этот метод создает новый объект в контексте документа, он не добавляет автоматически новый объект в дереве документа.</span><span class="sxs-lookup"><span data-stu-id="235d4-610">Although this method creates the new object in the context of the document, it does not automatically add the new object to the document tree.</span></span> <span data-ttu-id="235d4-611">Чтобы добавить новый объект, необходимо явно вызвать один из методов вставки узла.</span><span class="sxs-lookup"><span data-stu-id="235d4-611">To add the new object, you must explicitly call one of the node insert methods.</span></span>  
  
 <span data-ttu-id="235d4-612">Следующая таблица показывает, какой тип узла [строка] допускается внутри другой NodeType [столбец] в соответствии с рекомендацией W3C языка (XML) 1.0 (www.w3.org/TR/1998/REC-xml-19980210).</span><span class="sxs-lookup"><span data-stu-id="235d4-612">The following table shows you what NodeType[row] is allowed inside another NodeType[column] according to the W3C Extensible Markup Language (XML) 1.0 recommendation (www.w3.org/TR/1998/REC-xml-19980210).</span></span>  
  
||<span data-ttu-id="235d4-613">Document</span><span class="sxs-lookup"><span data-stu-id="235d4-613">Document</span></span>|<span data-ttu-id="235d4-614">DocumentType;</span><span class="sxs-lookup"><span data-stu-id="235d4-614">DocumentType</span></span>|<span data-ttu-id="235d4-615">XmlDeclaration</span><span class="sxs-lookup"><span data-stu-id="235d4-615">XmlDeclaration</span></span>|<span data-ttu-id="235d4-616">Элемент</span><span class="sxs-lookup"><span data-stu-id="235d4-616">Element</span></span>|<span data-ttu-id="235d4-617">Атрибут</span><span class="sxs-lookup"><span data-stu-id="235d4-617">Attribute</span></span>|<span data-ttu-id="235d4-618">Text</span><span class="sxs-lookup"><span data-stu-id="235d4-618">Text</span></span>|<span data-ttu-id="235d4-619">CDATA</span><span class="sxs-lookup"><span data-stu-id="235d4-619">CDATA</span></span>|<span data-ttu-id="235d4-620">Разметка</span><span class="sxs-lookup"><span data-stu-id="235d4-620">Markup</span></span>|<span data-ttu-id="235d4-621">EntityReference</span><span class="sxs-lookup"><span data-stu-id="235d4-621">EntityReference</span></span>|  
|------|--------------|------------------|--------------------|-------------|---------------|----------|-----------|------------|---------------------|  
|`Document`|<span data-ttu-id="235d4-622">Нет</span><span class="sxs-lookup"><span data-stu-id="235d4-622">no</span></span>|<span data-ttu-id="235d4-623">Нет</span><span class="sxs-lookup"><span data-stu-id="235d4-623">no</span></span>|<span data-ttu-id="235d4-624">Нет</span><span class="sxs-lookup"><span data-stu-id="235d4-624">no</span></span>|<span data-ttu-id="235d4-625">Нет</span><span class="sxs-lookup"><span data-stu-id="235d4-625">no</span></span>|<span data-ttu-id="235d4-626">Нет</span><span class="sxs-lookup"><span data-stu-id="235d4-626">no</span></span>|<span data-ttu-id="235d4-627">Нет</span><span class="sxs-lookup"><span data-stu-id="235d4-627">no</span></span>|<span data-ttu-id="235d4-628">Нет</span><span class="sxs-lookup"><span data-stu-id="235d4-628">no</span></span>|<span data-ttu-id="235d4-629">Нет</span><span class="sxs-lookup"><span data-stu-id="235d4-629">no</span></span>|<span data-ttu-id="235d4-630">Нет</span><span class="sxs-lookup"><span data-stu-id="235d4-630">no</span></span>|  
|`DocumentType`|<span data-ttu-id="235d4-631">да</span><span class="sxs-lookup"><span data-stu-id="235d4-631">yes</span></span>|<span data-ttu-id="235d4-632">Нет</span><span class="sxs-lookup"><span data-stu-id="235d4-632">no</span></span>|<span data-ttu-id="235d4-633">Нет</span><span class="sxs-lookup"><span data-stu-id="235d4-633">no</span></span>|<span data-ttu-id="235d4-634">Нет</span><span class="sxs-lookup"><span data-stu-id="235d4-634">no</span></span>|<span data-ttu-id="235d4-635">Нет</span><span class="sxs-lookup"><span data-stu-id="235d4-635">no</span></span>|<span data-ttu-id="235d4-636">Нет</span><span class="sxs-lookup"><span data-stu-id="235d4-636">no</span></span>|<span data-ttu-id="235d4-637">Нет</span><span class="sxs-lookup"><span data-stu-id="235d4-637">no</span></span>|<span data-ttu-id="235d4-638">Нет</span><span class="sxs-lookup"><span data-stu-id="235d4-638">no</span></span>|<span data-ttu-id="235d4-639">Нет</span><span class="sxs-lookup"><span data-stu-id="235d4-639">no</span></span>|  
|`XmlDeclaration`|<span data-ttu-id="235d4-640">Да \*</span><span class="sxs-lookup"><span data-stu-id="235d4-640">yes\*</span></span>|<span data-ttu-id="235d4-641">Нет</span><span class="sxs-lookup"><span data-stu-id="235d4-641">no</span></span>|<span data-ttu-id="235d4-642">Нет</span><span class="sxs-lookup"><span data-stu-id="235d4-642">no</span></span>|<span data-ttu-id="235d4-643">Нет</span><span class="sxs-lookup"><span data-stu-id="235d4-643">no</span></span>|<span data-ttu-id="235d4-644">Нет</span><span class="sxs-lookup"><span data-stu-id="235d4-644">no</span></span>|<span data-ttu-id="235d4-645">Нет</span><span class="sxs-lookup"><span data-stu-id="235d4-645">no</span></span>|<span data-ttu-id="235d4-646">Нет</span><span class="sxs-lookup"><span data-stu-id="235d4-646">no</span></span>|<span data-ttu-id="235d4-647">Нет</span><span class="sxs-lookup"><span data-stu-id="235d4-647">no</span></span>|<span data-ttu-id="235d4-648">Нет</span><span class="sxs-lookup"><span data-stu-id="235d4-648">no</span></span>|  
|`Element`|<span data-ttu-id="235d4-649">да</span><span class="sxs-lookup"><span data-stu-id="235d4-649">yes</span></span>|<span data-ttu-id="235d4-650">Нет</span><span class="sxs-lookup"><span data-stu-id="235d4-650">no</span></span>|<span data-ttu-id="235d4-651">Нет</span><span class="sxs-lookup"><span data-stu-id="235d4-651">no</span></span>|<span data-ttu-id="235d4-652">да</span><span class="sxs-lookup"><span data-stu-id="235d4-652">yes</span></span>|<span data-ttu-id="235d4-653">Нет</span><span class="sxs-lookup"><span data-stu-id="235d4-653">no</span></span>|<span data-ttu-id="235d4-654">Нет</span><span class="sxs-lookup"><span data-stu-id="235d4-654">no</span></span>|<span data-ttu-id="235d4-655">Нет</span><span class="sxs-lookup"><span data-stu-id="235d4-655">no</span></span>|<span data-ttu-id="235d4-656">Нет</span><span class="sxs-lookup"><span data-stu-id="235d4-656">no</span></span>|<span data-ttu-id="235d4-657">Да \*\*\*</span><span class="sxs-lookup"><span data-stu-id="235d4-657">yes\*\*\*</span></span>|  
|`Attribute`|<span data-ttu-id="235d4-658">Нет</span><span class="sxs-lookup"><span data-stu-id="235d4-658">no</span></span>|<span data-ttu-id="235d4-659">Нет</span><span class="sxs-lookup"><span data-stu-id="235d4-659">no</span></span>|<span data-ttu-id="235d4-660">Нет</span><span class="sxs-lookup"><span data-stu-id="235d4-660">no</span></span>|<span data-ttu-id="235d4-661">Да \*\*\*</span><span class="sxs-lookup"><span data-stu-id="235d4-661">yes****</span></span>|<span data-ttu-id="235d4-662">Нет</span><span class="sxs-lookup"><span data-stu-id="235d4-662">no</span></span>|<span data-ttu-id="235d4-663">Нет</span><span class="sxs-lookup"><span data-stu-id="235d4-663">no</span></span>|<span data-ttu-id="235d4-664">Нет</span><span class="sxs-lookup"><span data-stu-id="235d4-664">no</span></span>|<span data-ttu-id="235d4-665">Нет</span><span class="sxs-lookup"><span data-stu-id="235d4-665">no</span></span>|<span data-ttu-id="235d4-666">Нет</span><span class="sxs-lookup"><span data-stu-id="235d4-666">no</span></span>|  
|`Text`|<span data-ttu-id="235d4-667">Нет</span><span class="sxs-lookup"><span data-stu-id="235d4-667">no</span></span>|<span data-ttu-id="235d4-668">Нет</span><span class="sxs-lookup"><span data-stu-id="235d4-668">no</span></span>|<span data-ttu-id="235d4-669">Нет</span><span class="sxs-lookup"><span data-stu-id="235d4-669">no</span></span>|<span data-ttu-id="235d4-670">да</span><span class="sxs-lookup"><span data-stu-id="235d4-670">yes</span></span>|<span data-ttu-id="235d4-671">да</span><span class="sxs-lookup"><span data-stu-id="235d4-671">yes</span></span>|<span data-ttu-id="235d4-672">Нет</span><span class="sxs-lookup"><span data-stu-id="235d4-672">no</span></span>|<span data-ttu-id="235d4-673">Нет</span><span class="sxs-lookup"><span data-stu-id="235d4-673">no</span></span>|<span data-ttu-id="235d4-674">Нет</span><span class="sxs-lookup"><span data-stu-id="235d4-674">no</span></span>|<span data-ttu-id="235d4-675">да</span><span class="sxs-lookup"><span data-stu-id="235d4-675">yes</span></span>|  
|`CDATA`|<span data-ttu-id="235d4-676">Нет</span><span class="sxs-lookup"><span data-stu-id="235d4-676">no</span></span>|<span data-ttu-id="235d4-677">Нет</span><span class="sxs-lookup"><span data-stu-id="235d4-677">no</span></span>|<span data-ttu-id="235d4-678">Нет</span><span class="sxs-lookup"><span data-stu-id="235d4-678">no</span></span>|<span data-ttu-id="235d4-679">да</span><span class="sxs-lookup"><span data-stu-id="235d4-679">yes</span></span>|<span data-ttu-id="235d4-680">Нет</span><span class="sxs-lookup"><span data-stu-id="235d4-680">no</span></span>|<span data-ttu-id="235d4-681">Нет</span><span class="sxs-lookup"><span data-stu-id="235d4-681">no</span></span>|<span data-ttu-id="235d4-682">Нет</span><span class="sxs-lookup"><span data-stu-id="235d4-682">no</span></span>|<span data-ttu-id="235d4-683">Нет</span><span class="sxs-lookup"><span data-stu-id="235d4-683">no</span></span>|<span data-ttu-id="235d4-684">Да \*\*\*</span><span class="sxs-lookup"><span data-stu-id="235d4-684">yes\*\*\*</span></span>|  
|`Markup**`|<span data-ttu-id="235d4-685">да</span><span class="sxs-lookup"><span data-stu-id="235d4-685">yes</span></span>|<span data-ttu-id="235d4-686">Нет</span><span class="sxs-lookup"><span data-stu-id="235d4-686">no</span></span>|<span data-ttu-id="235d4-687">Нет</span><span class="sxs-lookup"><span data-stu-id="235d4-687">no</span></span>|<span data-ttu-id="235d4-688">да</span><span class="sxs-lookup"><span data-stu-id="235d4-688">yes</span></span>|<span data-ttu-id="235d4-689">Нет</span><span class="sxs-lookup"><span data-stu-id="235d4-689">no</span></span>|<span data-ttu-id="235d4-690">Нет</span><span class="sxs-lookup"><span data-stu-id="235d4-690">no</span></span>|<span data-ttu-id="235d4-691">Нет</span><span class="sxs-lookup"><span data-stu-id="235d4-691">no</span></span>|<span data-ttu-id="235d4-692">Нет</span><span class="sxs-lookup"><span data-stu-id="235d4-692">no</span></span>|<span data-ttu-id="235d4-693">Нет</span><span class="sxs-lookup"><span data-stu-id="235d4-693">no</span></span>|  
|`EntityReference`|<span data-ttu-id="235d4-694">Нет</span><span class="sxs-lookup"><span data-stu-id="235d4-694">no</span></span>|<span data-ttu-id="235d4-695">Нет</span><span class="sxs-lookup"><span data-stu-id="235d4-695">no</span></span>|<span data-ttu-id="235d4-696">Нет</span><span class="sxs-lookup"><span data-stu-id="235d4-696">no</span></span>|<span data-ttu-id="235d4-697">да</span><span class="sxs-lookup"><span data-stu-id="235d4-697">yes</span></span>|<span data-ttu-id="235d4-698">да</span><span class="sxs-lookup"><span data-stu-id="235d4-698">yes</span></span>|<span data-ttu-id="235d4-699">Нет</span><span class="sxs-lookup"><span data-stu-id="235d4-699">no</span></span>|<span data-ttu-id="235d4-700">Нет</span><span class="sxs-lookup"><span data-stu-id="235d4-700">no</span></span>|<span data-ttu-id="235d4-701">Нет</span><span class="sxs-lookup"><span data-stu-id="235d4-701">no</span></span>|<span data-ttu-id="235d4-702">да</span><span class="sxs-lookup"><span data-stu-id="235d4-702">yes</span></span>|  
  
 <span data-ttu-id="235d4-703">\* Узел XmlDeclaration должен быть первый дочерний узел документа.</span><span class="sxs-lookup"><span data-stu-id="235d4-703">\* The XmlDeclaration node must be the first child of the Document node.</span></span>  
  
 <span data-ttu-id="235d4-704">** Разметки включает узлов ProcessingInstruction и комментарий.</span><span class="sxs-lookup"><span data-stu-id="235d4-704">** Markup includes ProcessingInstruction and Comment nodes.</span></span>  
  
 <span data-ttu-id="235d4-705">Узлы элемента и CDATA разрешены только в узлов EntityReference, если узел EntityReference не является дочерним узлом атрибута.</span><span class="sxs-lookup"><span data-stu-id="235d4-705">\*\*\* Element and CDATA nodes are only allowed in EntityReference nodes when the EntityReference node is not a child of an Attribute node.</span></span>  
  
 <span data-ttu-id="235d4-706">Атрибуты не являются потомками узла элемента.</span><span class="sxs-lookup"><span data-stu-id="235d4-706">**** Attributes are not children of an Element node.</span></span> <span data-ttu-id="235d4-707">Они содержатся в коллекции атрибутов, к которому принадлежит узел элемента.</span><span class="sxs-lookup"><span data-stu-id="235d4-707">Attributes are contained inside an attribute collection that belongs to the Element node.</span></span>  
  
 <span data-ttu-id="235d4-708">Этот метод является расширением Microsoft для модели объекта документа (DOM).</span><span class="sxs-lookup"><span data-stu-id="235d4-708">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="235d4-709">Следующий пример добавляет новый элемент в документ.</span><span class="sxs-lookup"><span data-stu-id="235d4-709">The following example adds a new element to the document.</span></span>  
  
 [!code-cpp[Classic WebData XmlDocument.CreateNode2 Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlDocument.CreateNode2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlDocument.CreateNode2 Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlDocument.CreateNode2 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlDocument.CreateNode2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlDocument.CreateNode2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="235d4-710">Имя не указано, а для <see langword="XmlNodeType" /> требуется имя.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-710">The name was not provided and the <see langword="XmlNodeType" /> requires a name.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateProcessingInstruction">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlProcessingInstruction CreateProcessingInstruction (string target, string data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlProcessingInstruction CreateProcessingInstruction(string target, string data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.CreateProcessingInstruction(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateProcessingInstruction (target As String, data As String) As XmlProcessingInstruction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlProcessingInstruction ^ CreateProcessingInstruction(System::String ^ target, System::String ^ data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlProcessingInstruction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.String" />
        <Parameter Name="data" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="target">
          <span data-ttu-id="235d4-711">Имя инструкции по обработке.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-711">The name of the processing instruction.</span>
          </span>
        </param>
        <param name="data">
          <span data-ttu-id="235d4-712">Данные для инструкции обработки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-712">The data for the processing instruction.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="235d4-713">Создает <see cref="T:System.Xml.XmlProcessingInstruction" /> с помощью указанного имени и данных.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-713">Creates an <see cref="T:System.Xml.XmlProcessingInstruction" /> with the specified name and data.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="235d4-714">Новый объект <see langword="XmlProcessingInstruction" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-714">The new <see langword="XmlProcessingInstruction" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="235d4-715">Несмотря на то, что этот метод создает новый объект в контексте документа, он не добавляет автоматически новый объект в дереве документа.</span><span class="sxs-lookup"><span data-stu-id="235d4-715">Although this method creates the new object in the context of the document, it does not automatically add the new object to the document tree.</span></span> <span data-ttu-id="235d4-716">Чтобы добавить новый объект, необходимо явно вызвать один из методов вставки узла.</span><span class="sxs-lookup"><span data-stu-id="235d4-716">To add the new object, you must explicitly call one of the node insert methods.</span></span>  
  
 <span data-ttu-id="235d4-717">Согласно рекомендации W3C языка (XML) 1.0 (www.w3.org/TR/1998/REC-xml-19980210) узлов ProcessingInstruction допустимы только в узлы документа, элемента и EntityReference, если узел EntityReference не является дочерним узла атрибута.</span><span class="sxs-lookup"><span data-stu-id="235d4-717">According to the W3C Extensible Markup Language (XML) 1.0 recommendation (www.w3.org/TR/1998/REC-xml-19980210), ProcessingInstruction nodes are only allowed within Document, Element, and EntityReference nodes, when the EntityReference node is not a child of an Attribute node.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="235d4-718">Следующий пример создает узел ProcessingInstruction и добавляет его в документ.</span><span class="sxs-lookup"><span data-stu-id="235d4-718">The following example creates a ProcessingInstruction node and adds it to the document.</span></span>  
  
 [!code-cpp[Classic WebData XmlDocument.CreateProcessingInstruction Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlDocument.CreateProcessingInstruction Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlDocument.CreateProcessingInstruction Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlDocument.CreateProcessingInstruction Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlDocument.CreateProcessingInstruction Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlDocument.CreateProcessingInstruction Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateSignificantWhitespace">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlSignificantWhitespace CreateSignificantWhitespace (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlSignificantWhitespace CreateSignificantWhitespace(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.CreateSignificantWhitespace(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateSignificantWhitespace (text As String) As XmlSignificantWhitespace" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlSignificantWhitespace ^ CreateSignificantWhitespace(System::String ^ text);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlSignificantWhitespace</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">
          <span data-ttu-id="235d4-719">Строка должна содержать только следующие символы: &amp;#20; &amp;#10; &amp;#13; и &amp;#9;</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-719">The string must contain only the following characters &amp;#20; &amp;#10; &amp;#13; and &amp;#9;</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="235d4-720">Создает узел <see cref="T:System.Xml.XmlSignificantWhitespace" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-720">Creates an <see cref="T:System.Xml.XmlSignificantWhitespace" /> node.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="235d4-721">Новый узел <see langword="XmlSignificantWhitespace" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-721">A new <see langword="XmlSignificantWhitespace" /> node.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="235d4-722">Этот метод является расширением Microsoft для модели объекта документа (DOM).</span><span class="sxs-lookup"><span data-stu-id="235d4-722">This method is a Microsoft extension to the Document Object Model (DOM).</span></span> <span data-ttu-id="235d4-723">Он используется для форматирования документа вручную.</span><span class="sxs-lookup"><span data-stu-id="235d4-723">It is used when you want to manually format your document.</span></span>  
  
 <span data-ttu-id="235d4-724">Несмотря на то, что этот метод создает новый объект в контексте документа, он не добавляет автоматически новый объект в дереве документа.</span><span class="sxs-lookup"><span data-stu-id="235d4-724">Although this method creates the new object in the context of the document, it does not automatically add the new object to the document tree.</span></span> <span data-ttu-id="235d4-725">Чтобы добавить новый объект, необходимо явно вызвать один из методов вставки узла.</span><span class="sxs-lookup"><span data-stu-id="235d4-725">To add the new object, you must explicitly call one of the node insert methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="235d4-726">В следующем примере добавляется значимые пробелы в документе.</span><span class="sxs-lookup"><span data-stu-id="235d4-726">The following example adds significant white space to the document.</span></span>  
  
 [!code-cpp[Classic WebData XmlDocument.CreateSignificantWhitespace Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlDocument.CreateSignificantWhitespace Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlDocument.CreateSignificantWhitespace Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlDocument.CreateSignificantWhitespace Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlDocument.CreateSignificantWhitespace Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlDocument.CreateSignificantWhitespace Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateTextNode">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlText CreateTextNode (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlText CreateTextNode(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.CreateTextNode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateTextNode (text As String) As XmlText" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlText ^ CreateTextNode(System::String ^ text);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlText</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">
          <span data-ttu-id="235d4-727">Текст для узла Text.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-727">The text for the Text node.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="235d4-728">Создает объект <see cref="T:System.Xml.XmlText" /> с указанным текстом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-728">Creates an <see cref="T:System.Xml.XmlText" /> with the specified text.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="235d4-729">Новый узел <see langword="XmlText" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-729">The new <see langword="XmlText" /> node.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="235d4-730">Несмотря на то, что этот метод создает новый объект в контексте документа, он не добавляет автоматически новый объект в дереве документа.</span><span class="sxs-lookup"><span data-stu-id="235d4-730">Although this method creates the new object in the context of the document, it does not automatically add the new object to the document tree.</span></span> <span data-ttu-id="235d4-731">Чтобы добавить новый объект, необходимо явно вызвать один из методов вставки узла.</span><span class="sxs-lookup"><span data-stu-id="235d4-731">To add the new object, you must explicitly call one of the node insert methods.</span></span>  
  
 <span data-ttu-id="235d4-732">Согласно рекомендации W3C языка (XML) 1.0 (www.w3.org/TR/1998/REC-xml-19980210) текстовые узлы разрешены только в пределах узлов элементов, атрибутов и EntityReference.</span><span class="sxs-lookup"><span data-stu-id="235d4-732">According to the W3C Extensible Markup Language (XML) 1.0 recommendation (www.w3.org/TR/1998/REC-xml-19980210), Text nodes are only allowed within Element, Attribute and EntityReference nodes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="235d4-733">Следующий пример создает новый элемент и добавляет его в документ.</span><span class="sxs-lookup"><span data-stu-id="235d4-733">The following example creates a new element and adds it to the document.</span></span>  
  
 [!code-cpp[Classic WebData XmlDocument.CreateElement Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlDocument.CreateElement Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlDocument.CreateElement Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlDocument.CreateElement Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlDocument.CreateElement Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlDocument.CreateElement Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateWhitespace">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlWhitespace CreateWhitespace (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlWhitespace CreateWhitespace(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.CreateWhitespace(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateWhitespace (text As String) As XmlWhitespace" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlWhitespace ^ CreateWhitespace(System::String ^ text);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlWhitespace</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">
          <span data-ttu-id="235d4-734">Строка должна содержать только следующие символы: &amp;#20; &amp;#10; &amp;#13; и &amp;#9;</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-734">The string must contain only the following characters &amp;#20; &amp;#10; &amp;#13; and &amp;#9;</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="235d4-735">Создает узел <see cref="T:System.Xml.XmlWhitespace" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-735">Creates an <see cref="T:System.Xml.XmlWhitespace" /> node.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="235d4-736">Новый узел <see langword="XmlWhitespace" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-736">A new <see langword="XmlWhitespace" /> node.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="235d4-737">Этот метод является расширением Microsoft для модели объекта документа (DOM).</span><span class="sxs-lookup"><span data-stu-id="235d4-737">This method is a Microsoft extension to the Document Object Model (DOM).</span></span> <span data-ttu-id="235d4-738">Он используется для форматирования документа вручную.</span><span class="sxs-lookup"><span data-stu-id="235d4-738">It is used when you want to manually format your document.</span></span>  
  
 <span data-ttu-id="235d4-739">Несмотря на то, что этот метод создает новый объект в контексте документа, он не добавляет автоматически новый объект в дереве документа.</span><span class="sxs-lookup"><span data-stu-id="235d4-739">Although this method creates the new object in the context of the document, it does not automatically add the new object to the document tree.</span></span> <span data-ttu-id="235d4-740">Чтобы добавить новый объект, необходимо явно вызвать один из методов вставки узла.</span><span class="sxs-lookup"><span data-stu-id="235d4-740">To add the new object, you must explicitly call one of the node insert methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="235d4-741">В следующем примере добавляется пробел в документ.</span><span class="sxs-lookup"><span data-stu-id="235d4-741">The following example adds white space to the document.</span></span>  
  
 [!code-cpp[Classic WebData XmlDocument.CreateWhitespace Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlDocument.CreateWhitespace Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlDocument.CreateWhitespace Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlDocument.CreateWhitespace Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlDocument.CreateWhitespace Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlDocument.CreateWhitespace Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateXmlDeclaration">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlDeclaration CreateXmlDeclaration (string version, string encoding, string standalone);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlDeclaration CreateXmlDeclaration(string version, string encoding, string standalone) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.CreateXmlDeclaration(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateXmlDeclaration (version As String, encoding As String, standalone As String) As XmlDeclaration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlDeclaration ^ CreateXmlDeclaration(System::String ^ version, System::String ^ encoding, System::String ^ standalone);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDeclaration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="version" Type="System.String" />
        <Parameter Name="encoding" Type="System.String" />
        <Parameter Name="standalone" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="version">
          <span data-ttu-id="235d4-742">Номер версии должен быть равен 1.0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-742">The version must be "1.0".</span>
          </span>
        </param>
        <param name="encoding">
          <span data-ttu-id="235d4-743">Значение атрибута кодировки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-743">The value of the encoding attribute.</span>
          </span>
          <span data-ttu-id="235d4-744">Эта кодировка используется при сохранении <see cref="T:System.Xml.XmlDocument" /> в файле или потоке, поэтому она должна быть задана как строка, поддерживаемая классом <see cref="T:System.Text.Encoding" />. В противном случае в работе <see cref="M:System.Xml.XmlDocument.Save(System.String)" /> возникает сбой.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-744">This is the encoding that is used when you save the <see cref="T:System.Xml.XmlDocument" /> to a file or a stream; therefore, it must be set to a string supported by the <see cref="T:System.Text.Encoding" /> class, otherwise <see cref="M:System.Xml.XmlDocument.Save(System.String)" /> fails.</span>
          </span>
          <span data-ttu-id="235d4-745">Если она имеет значение <see langword="null" /> или String.Empty, метод <see langword="Save" /> не записывает атрибут кодировки в объявление XML и используется кодировка UTF-8, заданная по умолчанию.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-745">If this is <see langword="null" /> or String.Empty, the <see langword="Save" /> method does not write an encoding attribute on the XML declaration and therefore the default encoding, UTF-8, is used.</span>
          </span>
          <span data-ttu-id="235d4-746">Примечание. Если <see langword="XmlDocument" /> сохранен в <see cref="T:System.IO.TextWriter" /> или <see cref="T:System.Xml.XmlTextWriter" />, это значение кодировки не учитывается.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-746">Note: If the <see langword="XmlDocument" /> is saved to either a <see cref="T:System.IO.TextWriter" /> or an <see cref="T:System.Xml.XmlTextWriter" />, this encoding value is discarded.</span>
          </span>
          <span data-ttu-id="235d4-747">Вместо нее используется кодировка <see langword="TextWriter" /> или <see langword="XmlTextWriter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-747">Instead, the encoding of the <see langword="TextWriter" /> or the <see langword="XmlTextWriter" /> is used.</span>
          </span>
          <span data-ttu-id="235d4-748">Таким образом обеспечивается возможность чтения записанного XML в правильной кодировке.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-748">This ensures that the XML written out can be read back using the correct encoding.</span>
          </span>
        </param>
        <param name="standalone">
          <span data-ttu-id="235d4-749">Значение должно быть равно "yes" или "no".</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-749">The value must be either "yes" or "no".</span>
          </span>
          <span data-ttu-id="235d4-750">Если значение равно <see langword="null" /> или String.Empty, метод <see langword="Save" /> не записывает в объявление XML отдельный атрибут.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-750">If this is <see langword="null" /> or String.Empty, the <see langword="Save" /> method does not write a standalone attribute on the XML declaration.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="235d4-751">Создает узел <see cref="T:System.Xml.XmlDeclaration" /> с указанными значениями.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-751">Creates an <see cref="T:System.Xml.XmlDeclaration" /> node with the specified values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="235d4-752">Новый узел <see langword="XmlDeclaration" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-752">The new <see langword="XmlDeclaration" /> node.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="235d4-753">Атрибуты отображаются как специальные свойства на `XmlDeclaration` узла, а не как <xref:System.Xml.XmlAttribute> узлов.</span><span class="sxs-lookup"><span data-stu-id="235d4-753">The attributes are exposed as special properties on the `XmlDeclaration` node, and not as <xref:System.Xml.XmlAttribute> nodes.</span></span>  
  
 <span data-ttu-id="235d4-754">Несмотря на то, что этот метод создает новый объект в контексте документа, он не добавляет автоматически новый объект в дереве документа.</span><span class="sxs-lookup"><span data-stu-id="235d4-754">Although this method creates the new object in the context of the document, it does not automatically add the new object to the document tree.</span></span> <span data-ttu-id="235d4-755">Чтобы добавить новый объект, необходимо явно вызвать один из методов вставки узла.</span><span class="sxs-lookup"><span data-stu-id="235d4-755">To add the new object, you must explicitly call one of the node insert methods.</span></span>  
  
 <span data-ttu-id="235d4-756">В соответствии с рекомендацией W3C языка (XML) 1.0 (www.w3.org/TR/1998/REC-xml-19980210) `XmlDeclaration` узел должен быть первым узлом в документе.</span><span class="sxs-lookup"><span data-stu-id="235d4-756">According to the W3C Extensible Markup Language (XML) 1.0 recommendation (www.w3.org/TR/1998/REC-xml-19980210), the `XmlDeclaration` node must be the first node in the document.</span></span>  
  
 <span data-ttu-id="235d4-757">Этот метод является расширением Microsoft для модели объекта документа (DOM).</span><span class="sxs-lookup"><span data-stu-id="235d4-757">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="235d4-758">Следующий пример создает объявление XML и добавляет его в документ.</span><span class="sxs-lookup"><span data-stu-id="235d4-758">The following example creates an XML declaration and adds it to the document.</span></span>  
  
 [!code-cpp[Classic WebData XmlDocument.CreateXmlDeclaration Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlDocument.CreateXmlDeclaration Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlDocument.CreateXmlDeclaration Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlDocument.CreateXmlDeclaration Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlDocument.CreateXmlDeclaration Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlDocument.CreateXmlDeclaration Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="235d4-759">Значения <paramref name="version" /> или <paramref name="standalone" /> отличаются от указанных выше.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-759">The values of <paramref name="version" /> or <paramref name="standalone" /> are something other than the ones specified above.</span>
          </span>
        </exception>
        <altmember cref="T:System.Xml.XmlDeclaration" />
      </Docs>
    </Member>
    <Member MemberName="DocumentElement">
      <MemberSignature Language="C#" Value="public System.Xml.XmlElement DocumentElement { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlElement DocumentElement" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlDocument.DocumentElement" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DocumentElement As XmlElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::XmlElement ^ DocumentElement { System::Xml::XmlElement ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="235d4-760">Возвращает корень <see cref="T:System.Xml.XmlElement" /> для документа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-760">Gets the root <see cref="T:System.Xml.XmlElement" /> for the document.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="235d4-761">Объект <see langword="XmlElement" />, представляющий корень дерева XML-документов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-761">The <see langword="XmlElement" /> that represents the root of the XML document tree.</span>
          </span>
          <span data-ttu-id="235d4-762">Если корень не существует, возвращается значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-762">If no root exists, <see langword="null" /> is returned.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="235d4-763">Следующий пример отображает корневой элемент XML-документа.</span><span class="sxs-lookup"><span data-stu-id="235d4-763">The following example displays the root element of the XML document.</span></span>  
  
 [!code-cpp[Classic WebData XmlDocument.DocumentElement Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlDocument.DocumentElement Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlDocument.DocumentElement Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlDocument.DocumentElement Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlDocument.DocumentElement Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlDocument.DocumentElement Example/VB/source.vb#1)]  
  
 <span data-ttu-id="235d4-764">**Выходные данные:**</span><span class="sxs-lookup"><span data-stu-id="235d4-764">**Output:**</span></span>  
  
```  
<book genre="novel" ISBN="1-861001-57-5"><title>Pride And Prejudice</title></book>   
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DocumentType">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlDocumentType DocumentType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlDocumentType DocumentType" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlDocument.DocumentType" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property DocumentType As XmlDocumentType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlDocumentType ^ DocumentType { System::Xml::XmlDocumentType ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDocumentType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="235d4-765">Возвращает узел, содержащий объявление DOCTYPE.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-765">Gets the node containing the DOCTYPE declaration.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="235d4-766">Класс <see cref="T:System.Xml.XmlNode" />, содержащий DocumentType (объявление DOCTYPE).</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-766">The <see cref="T:System.Xml.XmlNode" /> containing the DocumentType (DOCTYPE declaration).</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="235d4-767">`XmlDocument` Может иметь только один дочерний элемент с <xref:System.Xml.XmlNodeType> равным DocumentType.</span><span class="sxs-lookup"><span data-stu-id="235d4-767">An `XmlDocument` can have one and only one child with <xref:System.Xml.XmlNodeType> equal to DocumentType.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="235d4-768">Это свойство доступно только для чтения.</span><span class="sxs-lookup"><span data-stu-id="235d4-768">This property is read-only.</span></span> <span data-ttu-id="235d4-769">Чтобы изменить узел DocumentType, удалите существующий узел, создать новую один, используя <xref:System.Xml.XmlDocument.CreateDocumentType%2A> метода и добавить новый узел в документе.</span><span class="sxs-lookup"><span data-stu-id="235d4-769">To change the DocumentType node, delete the existing node, create a new one using the <xref:System.Xml.XmlDocument.CreateDocumentType%2A> method, and add the new node to the document.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="235d4-770">Следующий пример получает и отображает объявление DOCTYPE для документа.</span><span class="sxs-lookup"><span data-stu-id="235d4-770">The following example gets and displays the DOCTYPE declaration for the document.</span></span>  
  
 [!code-cpp[Classic WebData XmlDocument.DocumentType Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlDocument.DocumentType Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlDocument.DocumentType Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlDocument.DocumentType Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlDocument.DocumentType Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlDocument.DocumentType Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlDocumentType" />
      </Docs>
    </Member>
    <Member MemberName="GetElementById">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlElement GetElementById (string elementId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlElement GetElementById(string elementId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.GetElementById(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetElementById (elementId As String) As XmlElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlElement ^ GetElementById(System::String ^ elementId);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elementId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="elementId">
          <span data-ttu-id="235d4-771">Идентификатор атрибута для сопоставления.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-771">The attribute ID to match.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="235d4-772">Возвращает элемент <see cref="T:System.Xml.XmlElement" /> с указанным идентификатором.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-772">Gets the <see cref="T:System.Xml.XmlElement" /> with the specified ID.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="235d4-773">Элемент <see langword="XmlElement" /> с соответствующим кодом или значение <see langword="null" />, если соответствующий элемент не найден.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-773">The <see langword="XmlElement" /> with the matching ID or <see langword="null" /> if no matching element is found.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="235d4-774">Если документ имеет несколько элементов с соответствующим кодом, этот метод возвращает первый соответствующий элемент в документе.</span><span class="sxs-lookup"><span data-stu-id="235d4-774">If the document has multiple elements with the matching ID, this method returns the first matching element in the document.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="235d4-775">Реализация DOM должна содержать информацию, которая определяет, какие атрибуты имеют тип ID.</span><span class="sxs-lookup"><span data-stu-id="235d4-775">The DOM implementation must have information which defines which attributes are of type ID.</span></span> <span data-ttu-id="235d4-776">Несмотря на то, что атрибуты типа ID могут определяться в XSD-схемы или DTD, данная версия продукта поддерживает только определенные в DTD.</span><span class="sxs-lookup"><span data-stu-id="235d4-776">Although attributes of type ID can be defined in either XSD schemas or DTDs, this version of the product only supports those defined in DTDs.</span></span> <span data-ttu-id="235d4-777">Атрибуты с именем «ID» не имеют идентификатор типа, если это не определено в DTD.</span><span class="sxs-lookup"><span data-stu-id="235d4-777">Attributes with the name "ID" are not of type ID unless so defined in the DTD.</span></span> <span data-ttu-id="235d4-778">Реализации, где неизвестно, являются ли атрибуты типа ID должны возвращать `null`.</span><span class="sxs-lookup"><span data-stu-id="235d4-778">Implementations where it is unknown whether the attributes are of type ID are expected to return `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="235d4-779">В следующем примере используется метод `GetElementById`.</span><span class="sxs-lookup"><span data-stu-id="235d4-779">The following example uses the `GetElementById` method.</span></span>  
  
 [!code-cpp[Classic WebData XmlDocument.GetElementById Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlDocument.GetElementById Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlDocument.GetElementById Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlDocument.GetElementById Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlDocument.GetElementById Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlDocument.GetElementById Example/VB/source.vb#1)]  
  
 <span data-ttu-id="235d4-780">В примере используется файл `ids.xml`, в качестве входных данных.</span><span class="sxs-lookup"><span data-stu-id="235d4-780">The example uses the file, `ids.xml`, as input.</span></span>  
  
```xml  
<!DOCTYPE root [  
  <!ELEMENT root ANY>   
  <!ELEMENT Person ANY>   
  <!ELEMENT Customer EMPTY>  
  <!ELEMENT Team EMPTY>  
  <!ATTLIST Person SSN ID #REQUIRED>  
  <!ATTLIST Customer id IDREF #REQUIRED >  
  <!ATTLIST Team members IDREFS #REQUIRED]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetElementsByTagName">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="235d4-781">Возвращает значение <see cref="T:System.Xml.XmlNodeList" />, содержащее список всех элементов потомков, соответствующих указанному имени.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-781">Returns an <see cref="T:System.Xml.XmlNodeList" /> containing a list of all descendant elements that match the specified name.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetElementsByTagName">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlNodeList GetElementsByTagName (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlNodeList GetElementsByTagName(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.GetElementsByTagName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetElementsByTagName (name As String) As XmlNodeList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlNodeList ^ GetElementsByTagName(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNodeList</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="235d4-782">Сопоставляемое полное имя.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-782">The qualified name to match.</span>
          </span>
          <span data-ttu-id="235d4-783">Оно противопоставляется свойству <see langword="Name" /> соответствующего узла.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-783">It is matched against the <see langword="Name" /> property of the matching node.</span>
          </span>
          <span data-ttu-id="235d4-784">Специальное значение "\*" соответствует всем тегам.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-784">The special value "\*" matches all tags.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="235d4-785">Возвращает значение <see cref="T:System.Xml.XmlNodeList" />, содержащее список всех элементов-потомков, соответствующих указанному имени <see cref="P:System.Xml.XmlDocument.Name" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-785">Returns an <see cref="T:System.Xml.XmlNodeList" /> containing a list of all descendant elements that match the specified <see cref="P:System.Xml.XmlDocument.Name" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="235d4-786">Класс <see cref="T:System.Xml.XmlNodeList" />, содержащий список всех соответствующих узлов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-786">An <see cref="T:System.Xml.XmlNodeList" /> containing a list of all matching nodes.</span>
          </span>
          <span data-ttu-id="235d4-787">Если ни один из узлов не соответствует <paramref name="name" />, возвращаемая коллекция будет пустой.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-787">If no nodes match <paramref name="name" />, the returned collection will be empty.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="235d4-788">Узлы располагаются в порядке, в котором они будут обнаружены в документе.</span><span class="sxs-lookup"><span data-stu-id="235d4-788">The nodes are placed in the order in which they would be encountered in the document.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="235d4-789">Рекомендуется использовать <xref:System.Xml.XmlNode.SelectNodes%2A?displayProperty=nameWithType> или <xref:System.Xml.XmlNode.SelectSingleNode%2A?displayProperty=nameWithType> вместо метода <xref:System.Xml.XmlDocument.GetElementsByTagName%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="235d4-789">It is recommended that you use the <xref:System.Xml.XmlNode.SelectNodes%2A?displayProperty=nameWithType> or <xref:System.Xml.XmlNode.SelectSingleNode%2A?displayProperty=nameWithType> method instead of the <xref:System.Xml.XmlDocument.GetElementsByTagName%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="235d4-790">В следующем примере создается `XmlDocument` объекта и использует `GetElementsByTagName` метод и итоговый <xref:System.Xml.XmlNodeList> объекта для отображения всех заголовков книг.</span><span class="sxs-lookup"><span data-stu-id="235d4-790">The following example creates a `XmlDocument` object and uses the `GetElementsByTagName` method and the resulting <xref:System.Xml.XmlNodeList> object to display all the book titles.</span></span>  
  
 [!code-cpp[Classic WebData XmlDocument.GetElementsByTagName Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlDocument.GetElementsByTagName Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlDocument.GetElementsByTagName Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlDocument.GetElementsByTagName Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlDocument.GetElementsByTagName Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlDocument.GetElementsByTagName Example/VB/source.vb#1)]  
  
 <span data-ttu-id="235d4-791">В примере в качестве входных данных используется файл `books.xml`.</span><span class="sxs-lookup"><span data-stu-id="235d4-791">The example uses the `books.xml` file as input.</span></span>  
  
 [!code-xml[Classic WebData XslTransform.Transform7 Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/XML/books.xml#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetElementsByTagName">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlNodeList GetElementsByTagName (string localName, string namespaceURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlNodeList GetElementsByTagName(string localName, string namespaceURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.GetElementsByTagName(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetElementsByTagName (localName As String, namespaceURI As String) As XmlNodeList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlNodeList ^ GetElementsByTagName(System::String ^ localName, System::String ^ namespaceURI);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNodeList</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localName">
          <span data-ttu-id="235d4-792">Сопоставляемый параметр LocalName.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-792">The LocalName to match.</span>
          </span>
          <span data-ttu-id="235d4-793">Специальное значение "\*" соответствует всем тегам.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-793">The special value "\*" matches all tags.</span>
          </span>
        </param>
        <param name="namespaceURI">
          <span data-ttu-id="235d4-794">Сопоставляемый параметр NamespaceURI.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-794">NamespaceURI to match.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="235d4-795">Возвращает <see cref="T:System.Xml.XmlNodeList" />, содержащий список всех элементов-потомков, соответствующих указанным значениям <see cref="P:System.Xml.XmlDocument.LocalName" /> и <see cref="P:System.Xml.XmlNode.NamespaceURI" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-795">Returns an <see cref="T:System.Xml.XmlNodeList" /> containing a list of all descendant elements that match the specified <see cref="P:System.Xml.XmlDocument.LocalName" /> and <see cref="P:System.Xml.XmlNode.NamespaceURI" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="235d4-796">Класс <see cref="T:System.Xml.XmlNodeList" />, содержащий список всех соответствующих узлов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-796">An <see cref="T:System.Xml.XmlNodeList" /> containing a list of all matching nodes.</span>
          </span>
          <span data-ttu-id="235d4-797">Если ни один из узлов не соответствует указанным параметрам <paramref name="localName" /> и <paramref name="namespaceURI" />, возвращаемая коллекция будет пустой.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-797">If no nodes match the specified <paramref name="localName" /> and <paramref name="namespaceURI" />, the returned collection will be empty.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="235d4-798">Узлы располагаются в порядке, в котором они будут обнаружены в дереве документа.</span><span class="sxs-lookup"><span data-stu-id="235d4-798">The nodes are placed in the order in which they would be encountered in the document tree.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="235d4-799">Рекомендуется использовать <xref:System.Xml.XmlNode.SelectNodes%2A?displayProperty=nameWithType> или <xref:System.Xml.XmlNode.SelectSingleNode%2A?displayProperty=nameWithType> вместо метода <xref:System.Xml.XmlDocument.GetElementsByTagName%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="235d4-799">It is recommended that you use the <xref:System.Xml.XmlNode.SelectNodes%2A?displayProperty=nameWithType> or <xref:System.Xml.XmlNode.SelectSingleNode%2A?displayProperty=nameWithType> method instead of the <xref:System.Xml.XmlDocument.GetElementsByTagName%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Implementation">
      <MemberSignature Language="C#" Value="public System.Xml.XmlImplementation Implementation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlImplementation Implementation" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlDocument.Implementation" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Implementation As XmlImplementation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::XmlImplementation ^ Implementation { System::Xml::XmlImplementation ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlImplementation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="235d4-800">Возвращает объект <see cref="T:System.Xml.XmlImplementation" /> для текущего документа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-800">Gets the <see cref="T:System.Xml.XmlImplementation" /> object for the current document.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="235d4-801">Объект <see langword="XmlImplementation" /> для текущего документа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-801">The <see langword="XmlImplementation" /> object for the current document.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="235d4-802">`XmlDocument` объекты, созданные из того же `XmlImplementation` одного и того же <xref:System.Xml.XmlNameTable>.</span><span class="sxs-lookup"><span data-stu-id="235d4-802">`XmlDocument` objects created from the same `XmlImplementation` share the same <xref:System.Xml.XmlNameTable>.</span></span> <span data-ttu-id="235d4-803">Это позволяет сравнивать имена атрибутов и элементов как объекты, а не строк.</span><span class="sxs-lookup"><span data-stu-id="235d4-803">This allows users to compare attribute and element names as objects rather than strings.</span></span>  
  
 <span data-ttu-id="235d4-804">Несмотря на то что `XmlDocument` объекты, совместно используют одну реализацию, для перемещения узлов из одного документа в другой необходимо использовать <xref:System.Xml.XmlDocument.ImportNode%2A> метода.</span><span class="sxs-lookup"><span data-stu-id="235d4-804">Although the `XmlDocument` objects share the same implementation, to move nodes from one document to another you must use the <xref:System.Xml.XmlDocument.ImportNode%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="235d4-805">В следующем примере создается новый `XmlDocument` с помощью реализации другого документа.</span><span class="sxs-lookup"><span data-stu-id="235d4-805">The following example creates a new `XmlDocument` using another document's implementation.</span></span>  
  
 [!code-cpp[Classic WebData XmlDocument.Implementation Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlDocument.Implementation Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlDocument.Implementation Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlDocument.Implementation Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlDocument.Implementation Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlDocument.Implementation Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ImportNode">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlNode ImportNode (System.Xml.XmlNode node, bool deep);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlNode ImportNode(class System.Xml.XmlNode node, bool deep) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.ImportNode(System.Xml.XmlNode,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ImportNode (node As XmlNode, deep As Boolean) As XmlNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlNode ^ ImportNode(System::Xml::XmlNode ^ node, bool deep);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Xml.XmlNode" />
        <Parameter Name="deep" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="node">
          <span data-ttu-id="235d4-806">Импортируемый узел.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-806">The node being imported.</span>
          </span>
        </param>
        <param name="deep">
          <span data-ttu-id="235d4-807">Значение <see langword="true" /> — выполняется полное точное клонирование; в противном случае — <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-807">
              <see langword="true" /> to perform a deep clone; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="235d4-808">Импортирует в текущий документ узел из другого документа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-808">Imports a node from another document to the current document.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="235d4-809">Импортированный <see cref="T:System.Xml.XmlNode" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-809">The imported <see cref="T:System.Xml.XmlNode" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="235d4-810">Возвращаемый узел не имеет родителя.</span><span class="sxs-lookup"><span data-stu-id="235d4-810">The returned node has no parent.</span></span> <span data-ttu-id="235d4-811">Исходный узел не будет изменен или удален из исходного документа; `ImportNode` создает копию исходного узла.</span><span class="sxs-lookup"><span data-stu-id="235d4-811">The source node is not altered or removed from the original document; `ImportNode` creates a copy of the source node.</span></span>  
  
 <span data-ttu-id="235d4-812">Импорт узла создает `XmlNode` объект, принадлежащий пользователю импортирования документа с <xref:System.Xml.XmlNode.Name%2A> и <xref:System.Xml.XmlNode.NodeType%2A> идентична исходный узел.</span><span class="sxs-lookup"><span data-stu-id="235d4-812">Importing a node creates an `XmlNode` object owned by the importing document, with <xref:System.Xml.XmlNode.Name%2A> and <xref:System.Xml.XmlNode.NodeType%2A> identical to the source node.</span></span> <span data-ttu-id="235d4-813">Новый объект также имеет атрибуты, связанные с пространствами имен (<xref:System.Xml.XmlNode.Prefix%2A>, <xref:System.Xml.XmlNode.LocalName%2A>, и <xref:System.Xml.XmlNode.NamespaceURI%2A>).</span><span class="sxs-lookup"><span data-stu-id="235d4-813">The new object also has the attributes related to namespaces (<xref:System.Xml.XmlNode.Prefix%2A>, <xref:System.Xml.XmlNode.LocalName%2A>, and <xref:System.Xml.XmlNode.NamespaceURI%2A>).</span></span>  
  
 <span data-ttu-id="235d4-814">В зависимости от типа импортированного узла и значения `deep` параметр дополнительной информацией копируется соответствующим образом.</span><span class="sxs-lookup"><span data-stu-id="235d4-814">Depending on the node type of the imported node and the value of the `deep` parameter, additional information is copied as appropriate.</span></span> <span data-ttu-id="235d4-815">Этот метод пытается отразить ожидаемое поведение, если фрагмент источника XML или HTML копируется из одного документа в другой (распознает, что в случае XML два документа могут иметь различные DTD).</span><span class="sxs-lookup"><span data-stu-id="235d4-815">This method attempts to mirror the behavior expected if a fragment of XML or HTML source was copied from one document to another (recognizing that, in the XML case, the two documents could have different DTDs).</span></span>  
  
 <span data-ttu-id="235d4-816">В следующей таблице описаны определенное поведение для каждого <xref:System.Xml.XmlNodeType>.</span><span class="sxs-lookup"><span data-stu-id="235d4-816">The following table describes the specific behavior for each <xref:System.Xml.XmlNodeType>.</span></span>  
  
|<span data-ttu-id="235d4-817">Тип узла XML</span><span class="sxs-lookup"><span data-stu-id="235d4-817">XmlNodeType</span></span>|<span data-ttu-id="235d4-818">ImportNode(true)</span><span class="sxs-lookup"><span data-stu-id="235d4-818">ImportNode(true)</span></span>|<span data-ttu-id="235d4-819">ImportNode(false)</span><span class="sxs-lookup"><span data-stu-id="235d4-819">ImportNode(false)</span></span>|  
|-----------------|------------------------|-------------------------|  
|<span data-ttu-id="235d4-820">Атрибут</span><span class="sxs-lookup"><span data-stu-id="235d4-820">Attribute</span></span>|<span data-ttu-id="235d4-821"><xref:System.Xml.XmlAttribute.Specified%2A> Свойству `true` в созданных <xref:System.Xml.XmlAttribute>.</span><span class="sxs-lookup"><span data-stu-id="235d4-821">The <xref:System.Xml.XmlAttribute.Specified%2A> property is set to `true` on the generated <xref:System.Xml.XmlAttribute>.</span></span> <span data-ttu-id="235d4-822">Потомки исходного `XmlAttribute` рекурсивно импортируются, а результирующие узлы создаются заново и составляют соответствующее поддерево.</span><span class="sxs-lookup"><span data-stu-id="235d4-822">The descendants of the source `XmlAttribute` are recursively imported and the resulting nodes reassembled to form the corresponding subtree.</span></span>|<span data-ttu-id="235d4-823">`deep` Параметр не применяется к `XmlAttribute` узлы, они всегда импортируются вместе со своими дочерними при импорте.</span><span class="sxs-lookup"><span data-stu-id="235d4-823">The `deep` parameter does not apply to `XmlAttribute` nodes; they always carry their children with them when imported.</span></span>|  
|<span data-ttu-id="235d4-824">CData</span><span class="sxs-lookup"><span data-stu-id="235d4-824">CData</span></span>|<span data-ttu-id="235d4-825">Копирует узел вместе с данными.</span><span class="sxs-lookup"><span data-stu-id="235d4-825">Copies the node, including its data.</span></span>|<span data-ttu-id="235d4-826">Копирует узел вместе с данными.</span><span class="sxs-lookup"><span data-stu-id="235d4-826">Copies the node, including its data.</span></span>|  
|<span data-ttu-id="235d4-827">Комментарий</span><span class="sxs-lookup"><span data-stu-id="235d4-827">Comment</span></span>|<span data-ttu-id="235d4-828">Копирует узел вместе с данными.</span><span class="sxs-lookup"><span data-stu-id="235d4-828">Copies the node, including its data.</span></span>|<span data-ttu-id="235d4-829">Копирует узел вместе с данными.</span><span class="sxs-lookup"><span data-stu-id="235d4-829">Copies the node, including its data.</span></span>|  
|<span data-ttu-id="235d4-830">DocumentFragment</span><span class="sxs-lookup"><span data-stu-id="235d4-830">DocumentFragment</span></span>|<span data-ttu-id="235d4-831">Потомки исходного узла рекурсивно импортируются, а результирующие узлы создаются заново и составляют соответствующее поддерево.</span><span class="sxs-lookup"><span data-stu-id="235d4-831">The descendants of the source node are recursively imported and the resulting nodes reassembled to form the corresponding subtree.</span></span>|<span data-ttu-id="235d4-832">Пустой <xref:System.Xml.XmlDocumentFragment> создается.</span><span class="sxs-lookup"><span data-stu-id="235d4-832">An empty <xref:System.Xml.XmlDocumentFragment> is generated.</span></span>|  
|<span data-ttu-id="235d4-833">DocumentType;</span><span class="sxs-lookup"><span data-stu-id="235d4-833">DocumentType</span></span>|<span data-ttu-id="235d4-834">Копирует узел вместе с данными.\*</span><span class="sxs-lookup"><span data-stu-id="235d4-834">Copies the node, including its data.\*</span></span>|<span data-ttu-id="235d4-835">Копирует узел вместе с данными.\*</span><span class="sxs-lookup"><span data-stu-id="235d4-835">Copies the node, including its data.\*</span></span>|  
|<span data-ttu-id="235d4-836">Элемент</span><span class="sxs-lookup"><span data-stu-id="235d4-836">Element</span></span>|<span data-ttu-id="235d4-837">Потомки исходного элемента и его указанные узлы атрибутов — рекурсивно импортируются, а результирующие узлы создаются заново и составляют соответствующее поддерево.</span><span class="sxs-lookup"><span data-stu-id="235d4-837">The descendants of the source element and its specified attribute nodes are recursively imported and the resulting nodes reassembled to form the corresponding subtree.</span></span><br /><br /> <span data-ttu-id="235d4-838">Примечание: Атрибуты по умолчанию не копируются.</span><span class="sxs-lookup"><span data-stu-id="235d4-838">Note: Default attributes are not copied.</span></span> <span data-ttu-id="235d4-839">Если документ, в который выполняется импорт, определяет атрибуты по умолчанию для данного имени элемента, они назначаются.</span><span class="sxs-lookup"><span data-stu-id="235d4-839">If the document being imported into defines default attributes for this element name, those are assigned.</span></span>|<span data-ttu-id="235d4-840">Указанный атрибут узлы исходного элемента импортируются, а сформированные `XmlAttribute` узлы присоединяются к созданным <xref:System.Xml.XmlElement>.</span><span class="sxs-lookup"><span data-stu-id="235d4-840">Specified attribute nodes of the source element are imported, and the generated `XmlAttribute` nodes are attached to the generated <xref:System.Xml.XmlElement>.</span></span><br /><br /> <span data-ttu-id="235d4-841">Примечание: Атрибуты по умолчанию не копируются.</span><span class="sxs-lookup"><span data-stu-id="235d4-841">Note: Default attributes are not copied.</span></span> <span data-ttu-id="235d4-842">Если документ, в который выполняется импорт, определяет атрибуты по умолчанию для данного имени элемента, они назначаются.</span><span class="sxs-lookup"><span data-stu-id="235d4-842">If the document being imported into defines default attributes for this element name, those are assigned.</span></span>|  
|<span data-ttu-id="235d4-843">EntityReference</span><span class="sxs-lookup"><span data-stu-id="235d4-843">EntityReference</span></span>|<span data-ttu-id="235d4-844">Так как исходный и конечный документы могут иметь по-разному определенные сущности, этот метод копирует только <xref:System.Xml.XmlEntityReference> узла.</span><span class="sxs-lookup"><span data-stu-id="235d4-844">Because the source and destination documents could have the entities defined differently, this method only copies the <xref:System.Xml.XmlEntityReference> node.</span></span> <span data-ttu-id="235d4-845">Текст замены не включается.</span><span class="sxs-lookup"><span data-stu-id="235d4-845">The replacement text is not included.</span></span> <span data-ttu-id="235d4-846">Если в документе назначения определена сущность, ей назначается значение.</span><span class="sxs-lookup"><span data-stu-id="235d4-846">If the destination document has the entity defined, its value is assigned.</span></span>|<span data-ttu-id="235d4-847">Так как исходный и конечный документы могут иметь по-разному определенные сущности, этот метод копирует только <xref:System.Xml.XmlEntityReference> узла.</span><span class="sxs-lookup"><span data-stu-id="235d4-847">Because the source and destination documents could have the entities defined differently, this method only copies the <xref:System.Xml.XmlEntityReference> node.</span></span> <span data-ttu-id="235d4-848">Текст замены не включается.</span><span class="sxs-lookup"><span data-stu-id="235d4-848">The replacement text is not included.</span></span> <span data-ttu-id="235d4-849">Если в документе назначения определена сущность, ей назначается значение.</span><span class="sxs-lookup"><span data-stu-id="235d4-849">If the destination document has the entity defined, its value is assigned.</span></span>|  
|<span data-ttu-id="235d4-850">ProcessingInstruction;</span><span class="sxs-lookup"><span data-stu-id="235d4-850">ProcessingInstruction</span></span>|<span data-ttu-id="235d4-851">Копирует цель и значение данных из импортируемого узла.</span><span class="sxs-lookup"><span data-stu-id="235d4-851">Copies the target and data value from the imported node.</span></span>|<span data-ttu-id="235d4-852">Копирует цель и значение данных из импортируемого узла.</span><span class="sxs-lookup"><span data-stu-id="235d4-852">Copies the target and data value from the imported node.</span></span>|  
|<span data-ttu-id="235d4-853">Text</span><span class="sxs-lookup"><span data-stu-id="235d4-853">Text</span></span>|<span data-ttu-id="235d4-854">Копирует узел вместе с данными.</span><span class="sxs-lookup"><span data-stu-id="235d4-854">Copies the node, including its data.</span></span>|<span data-ttu-id="235d4-855">Копирует узел вместе с данными.</span><span class="sxs-lookup"><span data-stu-id="235d4-855">Copies the node, including its data.</span></span>|  
|<span data-ttu-id="235d4-856">SignificantWhitespace</span><span class="sxs-lookup"><span data-stu-id="235d4-856">SignificantWhitespace</span></span>|<span data-ttu-id="235d4-857">Копирует узел вместе с данными.</span><span class="sxs-lookup"><span data-stu-id="235d4-857">Copies the node, including its data.</span></span>|<span data-ttu-id="235d4-858">Копирует узел вместе с данными.</span><span class="sxs-lookup"><span data-stu-id="235d4-858">Copies the node, including its data.</span></span>|  
|<span data-ttu-id="235d4-859">Whitespace</span><span class="sxs-lookup"><span data-stu-id="235d4-859">Whitespace</span></span>|<span data-ttu-id="235d4-860">Копирует узел вместе с данными.</span><span class="sxs-lookup"><span data-stu-id="235d4-860">Copies the node, including its data.</span></span>|<span data-ttu-id="235d4-861">Копирует узел вместе с данными.</span><span class="sxs-lookup"><span data-stu-id="235d4-861">Copies the node, including its data.</span></span>|  
|<span data-ttu-id="235d4-862">XmlDeclaration</span><span class="sxs-lookup"><span data-stu-id="235d4-862">XmlDeclaration</span></span>|<span data-ttu-id="235d4-863">Копирует цель и значение данных из импортируемого узла.</span><span class="sxs-lookup"><span data-stu-id="235d4-863">Copies the target and data value from the imported node.</span></span>|<span data-ttu-id="235d4-864">Копирует цель и значение данных из импортируемого узла.</span><span class="sxs-lookup"><span data-stu-id="235d4-864">Copies the target and data value from the imported node.</span></span>|  
|<span data-ttu-id="235d4-865">Все прочие типы узлов.</span><span class="sxs-lookup"><span data-stu-id="235d4-865">All other node types.</span></span>|<span data-ttu-id="235d4-866">Эти типы узлов импортировать нельзя.</span><span class="sxs-lookup"><span data-stu-id="235d4-866">These node types cannot be imported.</span></span>|<span data-ttu-id="235d4-867">Эти типы узлов импортировать нельзя.</span><span class="sxs-lookup"><span data-stu-id="235d4-867">These node types cannot be imported.</span></span>|  
  
 <span data-ttu-id="235d4-868">\* Хотя узлы DocumentType можно импортировать, документ может иметь только один узел DocumentType.</span><span class="sxs-lookup"><span data-stu-id="235d4-868">\*Although DocumentType nodes can be imported, a document can only have one DocumentType.</span></span> <span data-ttu-id="235d4-869">Если документ в настоящее время имеет узел DocumenType, его необходимо удалить перед добавлением нового.</span><span class="sxs-lookup"><span data-stu-id="235d4-869">If the document currently has a DocumenType node, it must be removed before adding a new one.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="235d4-870">В следующем примере выполняется импорт узла книги из второго XML-документа в исходный XML-документ.</span><span class="sxs-lookup"><span data-stu-id="235d4-870">The following example imports a book node from a second XML document into the original XML document.</span></span>  
  
 [!code-cpp[Classic WebData XmlDocument.ImportNode Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlDocument.ImportNode Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlDocument.ImportNode Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlDocument.ImportNode Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlDocument.ImportNode Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlDocument.ImportNode Example/VB/source.vb#1)]  
  
 <span data-ttu-id="235d4-871">В примере используется файл `books.xml`, в качестве входных данных.</span><span class="sxs-lookup"><span data-stu-id="235d4-871">The example uses the file, `books.xml`, as input.</span></span>  
  
 [!code-xml[Classic WebData XslTransform.Transform7 Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/XML/books.xml#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="235d4-872">Вызов этого метода для типа узла, который не может быть импортирован.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-872">Calling this method on a node type which cannot be imported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="InnerText">
      <MemberSignature Language="C#" Value="public override string InnerText { set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InnerText" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlDocument.InnerText" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property InnerText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ InnerText {  void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="235d4-873">Во всех случаях вызывает исключение <see cref="T:System.InvalidOperationException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-873">Throws an <see cref="T:System.InvalidOperationException" /> in all cases.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="235d4-874">Значения узла и всех его дочерних узлов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-874">The values of the node and all its child nodes.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="235d4-875">Это свойство не реализовано.</span><span class="sxs-lookup"><span data-stu-id="235d4-875">This property is not implemented.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="235d4-876">Во всех случаях.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-876">In all cases.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="InnerXml">
      <MemberSignature Language="C#" Value="public override string InnerXml { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InnerXml" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlDocument.InnerXml" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property InnerXml As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ InnerXml { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="235d4-877">Возвращает или задает разметку, отражающую дочерние узлы текущего узла.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-877">Gets or sets the markup representing the children of the current node.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="235d4-878">Разметка дочерних узлов текущего узла.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-878">The markup of the children of the current node.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="235d4-879">Задание этого свойства дочерние узлы заменяются разобранный содержимым заданной строки.</span><span class="sxs-lookup"><span data-stu-id="235d4-879">Setting this property replaces the children of the node with the parsed contents of the given string.</span></span> <span data-ttu-id="235d4-880">Синтаксический анализ выполняется в контексте текущего пространства имен.</span><span class="sxs-lookup"><span data-stu-id="235d4-880">The parsing is done in the current namespace context.</span></span>  
  
 <span data-ttu-id="235d4-881">`InnerXml` Удаляет избыточные объявления пространств имен.</span><span class="sxs-lookup"><span data-stu-id="235d4-881">`InnerXml` removes redundant namespace declarations.</span></span> <span data-ttu-id="235d4-882">В результате после многочисленных операций вырезания и вставки размер документа не будет увеличиваться за счет избыточных деклараций пространств имен.</span><span class="sxs-lookup"><span data-stu-id="235d4-882">As a result, numerous cut and paste operations do not increase the size of your document with redundant namespace declarations.</span></span> <span data-ttu-id="235d4-883">Рассмотрим следующий документ XSL:</span><span class="sxs-lookup"><span data-stu-id="235d4-883">Consider the following XSL document:</span></span>  
  
```xml  
<xsl:stylesheet version="1.0"   
      xmlns:xsl="http://www.w3.org/1999/XSL/Transform">  
     <xsl:template match="stock">  
         ...  
     </xsl:template>  
    </xsl:stylesheet>  
```  
  
 <span data-ttu-id="235d4-884">`InnerXml` Свойства узла таблицы стилей возвращает следующую строку:</span><span class="sxs-lookup"><span data-stu-id="235d4-884">The `InnerXml` property on the stylesheet node returns the following string:</span></span>  
  
```xml  
<xsl:template match="stock"   
      xmlns:xsl="http://www.w3.org/1999/XSL/Transform">  
     ...  
    </xsl:template>  
```  
  
 <span data-ttu-id="235d4-885">Обратите внимание, объявление пространства имен xmlns: Дополнительные XSL, которое используется для идентификации узла.</span><span class="sxs-lookup"><span data-stu-id="235d4-885">Notice the additional xmlns:xsl namespace declaration which is used to preserve the node identity.</span></span> <span data-ttu-id="235d4-886">При повторной вставке этой внутренней строки XML, можно будет получить исходный документ.</span><span class="sxs-lookup"><span data-stu-id="235d4-886">If you re-insert this inner XML string, you will get back your original document.</span></span> <span data-ttu-id="235d4-887">Другими словами `InnerXml` распознает, что объявление пространства имен xmlns: XSL является избыточным, учитывая, что родительский элемент xsl: stylesheet уже имеет имен xmlns: XSL и поэтому удаляет его.</span><span class="sxs-lookup"><span data-stu-id="235d4-887">In other words, `InnerXml` recognizes that the xmlns:xsl namespace declaration is redundant, given that the parent xsl:stylesheet element already has the xmlns:xsl namespace delcaration, and therefore removes it.</span></span>  
  
 <span data-ttu-id="235d4-888">При перемещении `InnerXml` из документа без пространства имен по умолчанию в документ с пространством имен по умолчанию, поведение будет немного отличаться.</span><span class="sxs-lookup"><span data-stu-id="235d4-888">If you move `InnerXml` from a document with no default namespace to a document with a default namespace, the behavior is a little different.</span></span> <span data-ttu-id="235d4-889">Рассмотрим следующую строку XML.</span><span class="sxs-lookup"><span data-stu-id="235d4-889">Consider the following XML string:</span></span>  
  
```xml  
<test>  
      <item>123</item>  
    </test>  
```  
  
 <span data-ttu-id="235d4-890">`InnerXml` Возвращает обычную строку XML без объявлений пространств имен:</span><span class="sxs-lookup"><span data-stu-id="235d4-890">`InnerXml` returns a plain XML string with no namespace declarations:</span></span>  
  
```xml  
<item>123</item>  
```  
  
 <span data-ttu-id="235d4-891">Если затем вставить эту строку в документ, который имеет пространство имен по умолчанию, например следующие:</span><span class="sxs-lookup"><span data-stu-id="235d4-891">If you then insert this string into a document that does have a default namespace, such as the following:</span></span>  
  
```xml  
<test2 xmlns="urn:1">  
    </test>  
```  
  
 <span data-ttu-id="235d4-892">`InnerXml` Производит синтаксический анализ строки в контексте и новые узлы получают пространство имен urn: 1.</span><span class="sxs-lookup"><span data-stu-id="235d4-892">`InnerXml` parses the string in context, and the new nodes pick up the urn:1 namespace.</span></span> <span data-ttu-id="235d4-893">Результат выглядит следующим образом:</span><span class="sxs-lookup"><span data-stu-id="235d4-893">The result looks like this:</span></span>  
  
```xml  
<test2 xmlns="urn:1">  
      <item>123</item>  
    </test>  
```  
  
 <span data-ttu-id="235d4-894">Теперь при запросе `InnerXml` возвращена следующая:</span><span class="sxs-lookup"><span data-stu-id="235d4-894">Now when you ask for the `InnerXml` you get back the following:</span></span>  
  
```xml  
<item xmlns="urn:1">123</item>  
```  
  
 <span data-ttu-id="235d4-895">Если требуется явным образом вставленного элемента сохранить тот факт, что он поступает из документа, не имеющего пространство имен, потребуется вручную добавить xmlns = «» объявление и вставить результирующую строку:</span><span class="sxs-lookup"><span data-stu-id="235d4-895">If you explicitly want the inserted item to preserve the fact that it came from a document that had no namespace then you need to manually add an xmlns= "" declaration and insert the resulting string:</span></span>  
  
```xml  
<item xmlns="">123</item>  
```  
  
 <span data-ttu-id="235d4-896">В итоге все, что это выглядит следующим образом:</span><span class="sxs-lookup"><span data-stu-id="235d4-896">The net effect of all this is as follows:</span></span>  
  
1.  <span data-ttu-id="235d4-897">Вырезание и вставка `InnerXml` между документами, которые не используют простой и четкий пространств имен и не создавать избыточность «xmlns» в строках.</span><span class="sxs-lookup"><span data-stu-id="235d4-897">Cutting and pasting `InnerXml` among documents that do not use namespaces is clean and simple and does not create "xmlns" redundancy in your strings.</span></span>  
  
2.  <span data-ttu-id="235d4-898">`InnerXml` может также использоваться для вырезания и вставки в документах, имеющих несколько пространств имен (то есть таблицы стилей XSL).</span><span class="sxs-lookup"><span data-stu-id="235d4-898">`InnerXml` can also be used to cut and paste between documents which have more than one namespace (that is XSL stylesheets).</span></span>  
  
3.  <span data-ttu-id="235d4-899">объявления xmlns: xsl автоматически появляются в строках и исчезают в иерархиях узлов.</span><span class="sxs-lookup"><span data-stu-id="235d4-899">xmlns:xsl declarations automatically appear in your strings and disappear in your node hierarchies.</span></span>  
  
4.  <span data-ttu-id="235d4-900">В случае, когда производится обновление `InnerXml` из документа, имеющего пространства имен по умолчанию, документ, который имеет пространство имен по умолчанию, новые узлы получают новое пространство имен по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="235d4-900">In the case where you are moving `InnerXml` from a document that has no default namespace to a document that does have a default namespace, the new nodes will pick up the new default namespace.</span></span>  
  
 <span data-ttu-id="235d4-901">Если `InnerXml` устанавливается с текстом, содержащим ссылки на сущности, которые в настоящее время не определены в документе, результирующее дерево будет содержать пустые узлы EntityReference.</span><span class="sxs-lookup"><span data-stu-id="235d4-901">If `InnerXml` is set with text containing entity references that are not currently defined in the document, the resulting tree will contain empty EntityReference nodes.</span></span>  
  
 <span data-ttu-id="235d4-902">Это свойство является расширением Microsoft для объектной модели документа (DOM).</span><span class="sxs-lookup"><span data-stu-id="235d4-902">This property is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="235d4-903">Формат XML, указанный при задании этого свойства, является неправильным.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-903">The XML specified when setting this property is not well-formed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public override bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlDocument.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsReadOnly { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="235d4-904">Возвращает значение, определяющее, доступен ли текущий узел только для чтения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-904">Gets a value indicating whether the current node is read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="235d4-905">Значение <see langword="true" />, если текущий узел доступен только для чтения; в противном случае — значение <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-905">
              <see langword="true" /> if the current node is read-only; otherwise <see langword="false" />.</span>
          </span>
          <span data-ttu-id="235d4-906">Узлы <see langword="XmlDocument" /> всегда возвращают значение <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-906">
              <see langword="XmlDocument" /> nodes always return <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="235d4-907">Узел, доступный только для чтения — нельзя изменять, свойства, атрибуты или дочерние элементы.</span><span class="sxs-lookup"><span data-stu-id="235d4-907">A read-only node is one whose properties, attributes, or children cannot be changed.</span></span> <span data-ttu-id="235d4-908">Можно удалить только для чтения узел дерева и вставить его в другом месте.</span><span class="sxs-lookup"><span data-stu-id="235d4-908">You can remove a read-only node from the tree and insert it somewhere else.</span></span>  
  
 <span data-ttu-id="235d4-909">Это свойство является расширением Microsoft для объектной модели документа (DOM).</span><span class="sxs-lookup"><span data-stu-id="235d4-909">This property is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="235d4-910">В следующем примере показано, как использовать свойство `IsReadOnly`.</span><span class="sxs-lookup"><span data-stu-id="235d4-910">The following example shows how to use the `IsReadOnly` property.</span></span>  
  
 [!code-cpp[Classic WebData XmlDocument.IsReadOnly Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlDocument.IsReadOnly Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlDocument.IsReadOnly Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlDocument.IsReadOnly Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlDocument.IsReadOnly Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlDocument.IsReadOnly Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Load">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="235d4-911">Загружает указанные XML-данные из <see cref="T:System.IO.Stream" />, URL-адрес, <see cref="T:System.IO.TextReader" /> или <see cref="T:System.Xml.XmlReader" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-911">Loads the specified XML data from a <see cref="T:System.IO.Stream" />, a URL, a <see cref="T:System.IO.TextReader" />, or an <see cref="T:System.Xml.XmlReader" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public virtual void Load (System.IO.Stream inStream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Load(class System.IO.Stream inStream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.Load(System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Load (inStream As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Load(System::IO::Stream ^ inStream);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inStream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="inStream">
          <span data-ttu-id="235d4-912">Поток, содержащий загружаемый документ XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-912">The stream containing the XML document to load.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="235d4-913">Загружает XML-документ из указанного потока.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-913">Loads the XML document from the specified stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="235d4-914">`Load` Метод всегда сохраняет значимые пробелы.</span><span class="sxs-lookup"><span data-stu-id="235d4-914">The `Load` method always preserves significant white space.</span></span> <span data-ttu-id="235d4-915"><xref:System.Xml.XmlDocument.PreserveWhitespace%2A> Свойство определяет, сохраняется ли незначащие пробельные символы, пробелы в содержимом элемента.</span><span class="sxs-lookup"><span data-stu-id="235d4-915">The <xref:System.Xml.XmlDocument.PreserveWhitespace%2A> property determines whether or not insignificant white space, that is white space in element content, is preserved.</span></span> <span data-ttu-id="235d4-916">Значение по умолчанию — `false`; пробел в содержимом элемента не сохраняется.</span><span class="sxs-lookup"><span data-stu-id="235d4-916">The default is `false`; white space in element content is not preserved.</span></span>  
  
 <span data-ttu-id="235d4-917">Если требуется выполнить проверку, можно создать проверяющий <xref:System.Xml.XmlReader> экземпляра с помощью <xref:System.Xml.XmlReaderSettings> класса и <xref:System.Xml.XmlReader.Create%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="235d4-917">If you want validation to occur, you can create a validating <xref:System.Xml.XmlReader> instance by using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="235d4-918">Дополнительные сведения см. в подразделе "Примечания" на справочной странице <xref:System.Xml.XmlReader>.</span><span class="sxs-lookup"><span data-stu-id="235d4-918">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 <span data-ttu-id="235d4-919">Этот метод является расширением Microsoft для модели объекта документа (DOM).</span><span class="sxs-lookup"><span data-stu-id="235d4-919">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
 <span data-ttu-id="235d4-920">Этот метод автоматически определяет формат строки входных данных XML (например, UTF-8, ANSI и т. д.).</span><span class="sxs-lookup"><span data-stu-id="235d4-920">This method automatically detects the string format of the input XML (for example, UTF-8, ANSI, and so on).</span></span> <span data-ttu-id="235d4-921">Если приложению необходимо знать, какая кодировка используется для чтения потока, рассмотрите возможность использования <xref:System.Xml.XmlTextReader> для чтения потока, а затем использовать <xref:System.Xml.XmlTextReader.Encoding%2A?displayProperty=nameWithType> свойство, чтобы определить кодировку.</span><span class="sxs-lookup"><span data-stu-id="235d4-921">If your application needs to know which encoding is used to read the stream, consider using an <xref:System.Xml.XmlTextReader> object to read the stream, and then use the <xref:System.Xml.XmlTextReader.Encoding%2A?displayProperty=nameWithType> property to determine the encoding.</span></span> <span data-ttu-id="235d4-922">Если необходимо использовать <xref:System.Xml.XmlDocument> объекта для работы с XML, можно использовать <xref:System.Xml.XmlTextReader> объекта для ее создания.</span><span class="sxs-lookup"><span data-stu-id="235d4-922">If you need to use a <xref:System.Xml.XmlDocument> object to work with XML, you can use the <xref:System.Xml.XmlTextReader> object to create one.</span></span> <span data-ttu-id="235d4-923">Дополнительные сведения см. в разделе [чтения XML-данных с помощью XPathDocument и XmlDocument](~/docs/standard/data/xml/reading-xml-data-using-xpathdocument-and-xmldocument.md).</span><span class="sxs-lookup"><span data-stu-id="235d4-923">For more information, see [Reading XML Data using XPathDocument and XmlDocument](~/docs/standard/data/xml/reading-xml-data-using-xpathdocument-and-xmldocument.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="235d4-924">Ошибка загрузки или синтаксического анализа в XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-924">There is a load or parse error in the XML.</span>
          </span>
          <span data-ttu-id="235d4-925">В этом случае возникает <see cref="T:System.IO.FileNotFoundException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-925">In this case, a <see cref="T:System.IO.FileNotFoundException" /> is raised.</span>
          </span>
        </exception>
        <altmember cref="T:System.Xml.Schema.ValidationEventArgs" />
        <altmember cref="T:System.Xml.Schema.XmlSeverityType" />
        <altmember cref="P:System.Xml.XmlValidatingReader.Schemas" />
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public virtual void Load (System.IO.TextReader txtReader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Load(class System.IO.TextReader txtReader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.Load(System.IO.TextReader)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Load (txtReader As TextReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Load(System::IO::TextReader ^ txtReader);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="txtReader" Type="System.IO.TextReader" />
      </Parameters>
      <Docs>
        <param name="txtReader">
          <span data-ttu-id="235d4-926">
            <see langword="TextReader" />, используемый для передачи данных XML в документ.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-926">The <see langword="TextReader" /> used to feed the XML data into the document.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="235d4-927">Загружает XML-документ из указанного <see cref="T:System.IO.TextReader" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-927">Loads the XML document from the specified <see cref="T:System.IO.TextReader" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="235d4-928">`Load` Метод всегда сохраняет значимые пробелы.</span><span class="sxs-lookup"><span data-stu-id="235d4-928">The `Load` method always preserves significant white space.</span></span> <span data-ttu-id="235d4-929"><xref:System.Xml.XmlDocument.PreserveWhitespace%2A> Свойство определяет, сохраняется ли незначащие пробельные символы, пробелы в содержимом элемента.</span><span class="sxs-lookup"><span data-stu-id="235d4-929">The <xref:System.Xml.XmlDocument.PreserveWhitespace%2A> property determines whether or not insignificant white space, that is white space in element content, is preserved.</span></span> <span data-ttu-id="235d4-930">Значение по умолчанию — `false`; пробел в содержимом элемента не сохраняется.</span><span class="sxs-lookup"><span data-stu-id="235d4-930">The default is `false`; white space in element content is not preserved.</span></span>  
  
 <span data-ttu-id="235d4-931">Если требуется выполнить проверку, можно создать проверяющий <xref:System.Xml.XmlReader> экземпляра с помощью <xref:System.Xml.XmlReaderSettings> класса и <xref:System.Xml.XmlReader.Create%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="235d4-931">If you want validation to occur, you can create a validating <xref:System.Xml.XmlReader> instance by using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="235d4-932">Дополнительные сведения см. в подразделе "Примечания" на справочной странице <xref:System.Xml.XmlReader>.</span><span class="sxs-lookup"><span data-stu-id="235d4-932">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 <span data-ttu-id="235d4-933">Этот метод является расширением Microsoft для модели объекта документа (DOM).</span><span class="sxs-lookup"><span data-stu-id="235d4-933">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="235d4-934">В следующем примере используется <xref:System.IO.StringReader> класс загрузить строку XML-данных в `XmlDocument` объекта.</span><span class="sxs-lookup"><span data-stu-id="235d4-934">The following example uses the <xref:System.IO.StringReader> class to load a string of XML data into the `XmlDocument` object.</span></span>  
  
 [!code-cpp[Classic WebData XmlDocument.CreateElement2 Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlDocument.CreateElement2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlDocument.CreateElement2 Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlDocument.CreateElement2 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlDocument.CreateElement2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlDocument.CreateElement2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="235d4-935">Ошибка загрузки или синтаксического анализа в XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-935">There is a load or parse error in the XML.</span>
          </span>
          <span data-ttu-id="235d4-936">В этом случае документ остается пустым.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-936">In this case, the document remains empty.</span>
          </span>
        </exception>
        <altmember cref="T:System.IO.StreamReader" />
        <altmember cref="T:System.Xml.Schema.ValidationEventArgs" />
        <altmember cref="T:System.Xml.Schema.XmlSeverityType" />
        <altmember cref="P:System.Xml.XmlValidatingReader.Schemas" />
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public virtual void Load (string filename);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Load(string filename) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.Load(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Load (filename As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Load(System::String ^ filename);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="filename">
          <span data-ttu-id="235d4-937">URL-адрес файла, содержащего загружаемый документ XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-937">URL for the file containing the XML document to load.</span>
          </span>
          <span data-ttu-id="235d4-938">URL-адрес может ссылаться на локальный файл или являться HTTP-ссылкой (веб-адресом).</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-938">The URL can be either a local file or an HTTP URL (a Web address).</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="235d4-939">Загружает XML-документ из указанного URL-адреса.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-939">Loads the XML document from the specified URL.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="235d4-940">`Load` Метод всегда сохраняет значимые пробелы.</span><span class="sxs-lookup"><span data-stu-id="235d4-940">The `Load` method always preserves significant white space.</span></span> <span data-ttu-id="235d4-941"><xref:System.Xml.XmlDocument.PreserveWhitespace%2A> Свойство определяет, сохраняется ли незначащие пробельные символы, пробелы в содержимом элемента.</span><span class="sxs-lookup"><span data-stu-id="235d4-941">The <xref:System.Xml.XmlDocument.PreserveWhitespace%2A> property determines whether or not insignificant white space, that is white space in element content, is preserved.</span></span> <span data-ttu-id="235d4-942">Значение по умолчанию — `false`; пробел в содержимом элемента не сохраняется.</span><span class="sxs-lookup"><span data-stu-id="235d4-942">The default is `false`; white space in element content is not preserved.</span></span>  
  
 <span data-ttu-id="235d4-943">Если требуется выполнить проверку, можно создать проверяющий <xref:System.Xml.XmlReader> экземпляра с помощью <xref:System.Xml.XmlReaderSettings> класса и <xref:System.Xml.XmlReader.Create%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="235d4-943">If you want validation to occur, you can create a validating <xref:System.Xml.XmlReader> instance by using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="235d4-944">Дополнительные сведения см. в подразделе "Примечания" на справочной странице <xref:System.Xml.XmlReader>.</span><span class="sxs-lookup"><span data-stu-id="235d4-944">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 <span data-ttu-id="235d4-945">Этот метод является расширением Microsoft для модели объекта документа (DOM).</span><span class="sxs-lookup"><span data-stu-id="235d4-945">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="235d4-946">Ошибка загрузки или синтаксического анализа в XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-946">There is a load or parse error in the XML.</span>
          </span>
          <span data-ttu-id="235d4-947">В этом случае возникает <see cref="T:System.IO.FileNotFoundException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-947">In this case, a <see cref="T:System.IO.FileNotFoundException" /> is raised.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="235d4-948">
            <paramref name="filename" /> представляет собой строку нулевой длины, содержащую только пробелы или один или несколько недопустимых символов, заданных методом <see cref="F:System.IO.Path.InvalidPathChars" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-948">
              <paramref name="filename" /> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <see cref="F:System.IO.Path.InvalidPathChars" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="235d4-949">Свойство <paramref name="filename" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-949">
              <paramref name="filename" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.PathTooLongException">
          <span data-ttu-id="235d4-950">Указанный путь, имя файла или оба значения превышают максимальную длину, заданную в системе.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-950">The specified path, file name, or both exceed the system-defined maximum length.</span>
          </span>
          <span data-ttu-id="235d4-951">Например, для платформ на основе Windows длина пути должна составлять менее 248 знаков, а длина имен файлов — менее 260 знаков.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-951">For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="235d4-952">Указан недопустимый путь (например, он ведет на несопоставленный диск).</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-952">The specified path is invalid (for example, it is on an unmapped drive).</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="235d4-953">При открытии файла произошла ошибка ввода-вывода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-953">An I/O error occurred while opening the file.</span>
          </span>
        </exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="235d4-954">Параметр <paramref name="filename" /> указывает файл, доступный только для чтения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-954">
              <paramref name="filename" /> specified a file that is read-only.</span>
          </span>
          <span data-ttu-id="235d4-955">-или- Эта операция не поддерживается на текущей платформе.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-955">-or-  This operation is not supported on the current platform.</span>
          </span>
          <span data-ttu-id="235d4-956">-или- <paramref name="filename" /> задает каталог.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-956">-or-  <paramref name="filename" /> specified a directory.</span>
          </span>
          <span data-ttu-id="235d4-957">-или- У вызывающего объекта отсутствует необходимое разрешение.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-957">-or-  The caller does not have the required permission.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="235d4-958">Файл, заданный параметром <paramref name="filename" />, не найден.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-958">The file specified in <paramref name="filename" /> was not found.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="235d4-959">Параметр <paramref name="filename" /> задан в недопустимом формате.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-959">
              <paramref name="filename" /> is in an invalid format.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="235d4-960">У вызывающего объекта отсутствует необходимое разрешение.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-960">The caller does not have the required permission.</span>
          </span>
        </exception>
        <altmember cref="T:System.Xml.Schema.ValidationEventArgs" />
        <altmember cref="T:System.Xml.Schema.XmlSeverityType" />
        <altmember cref="P:System.Xml.XmlValidatingReader.Schemas" />
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public virtual void Load (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Load(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.Load(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Load (reader As XmlReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Load(System::Xml::XmlReader ^ reader);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="235d4-961">
            <see langword="XmlReader" />, используемый для передачи данных XML в документ.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-961">The <see langword="XmlReader" /> used to feed the XML data into the document.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="235d4-962">Загружает XML-документ из указанного <see cref="T:System.Xml.XmlReader" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-962">Loads the XML document from the specified <see cref="T:System.Xml.XmlReader" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="235d4-963">`Load` Метод всегда сохраняет значимые пробелы.</span><span class="sxs-lookup"><span data-stu-id="235d4-963">The `Load` method always preserves significant white space.</span></span> <span data-ttu-id="235d4-964"><xref:System.Xml.XmlDocument.PreserveWhitespace%2A> Свойство определяет, сохраняется ли незначащие пробельные символы, пробелы в содержимом элемента.</span><span class="sxs-lookup"><span data-stu-id="235d4-964">The <xref:System.Xml.XmlDocument.PreserveWhitespace%2A> property determines whether or not insignificant white space, that is white space in element content, is preserved.</span></span> <span data-ttu-id="235d4-965">Значение по умолчанию — `false`; пробел в содержимом элемента не сохраняется.</span><span class="sxs-lookup"><span data-stu-id="235d4-965">The default is `false`; white space in element content is not preserved.</span></span>  
  
 <span data-ttu-id="235d4-966">Если средство чтения находится в начальном состоянии (<xref:System.Xml.XmlReader.ReadState%2A> = ReadState.Initial), `Load` использует все содержимое средства чтения и строит модель DOM он находит.</span><span class="sxs-lookup"><span data-stu-id="235d4-966">If the reader is in the initial state (<xref:System.Xml.XmlReader.ReadState%2A> =ReadState.Initial), `Load` consumes the entire contents of the reader and builds the DOM from what it finds.</span></span>  
  
 <span data-ttu-id="235d4-967">Если средство чтения уже позиционирован на некотором узле с глубиной «n», этот метод загружает этот узел и все дочерние области вплоть до закрывающего тега, закрывающего глубину «n».</span><span class="sxs-lookup"><span data-stu-id="235d4-967">If the reader is already positioned on some node at depth "n", this method loads that node and all subsequent siblings up to the end tag that closes depth "n".</span></span> <span data-ttu-id="235d4-968">Это дает следующие результаты.</span><span class="sxs-lookup"><span data-stu-id="235d4-968">This has the following results.</span></span>  
  
 <span data-ttu-id="235d4-969">Если текущий узел и дочерние области выглядят следующим образом:</span><span class="sxs-lookup"><span data-stu-id="235d4-969">If the current node and its siblings look like the following:</span></span>  
  
```xml  
<!--comment--><element1>one</element1><element2>two</element2>  
```  
  
 <span data-ttu-id="235d4-970">`Load` создает исключение, так как документ не может иметь два элемента корневого уровня.</span><span class="sxs-lookup"><span data-stu-id="235d4-970">`Load` throws an exception because a document cannot have two root level elements.</span></span> <span data-ttu-id="235d4-971">Если текущий узел и дочерние области выглядят следующим образом:</span><span class="sxs-lookup"><span data-stu-id="235d4-971">If the current node and its siblings look like the following:</span></span>  
  
```xml  
<!--comment--><?process instruction?><!--comment--></endtag>  
```  
  
 <span data-ttu-id="235d4-972">`Load` завершается успешно, но неполное дерево DOM, поскольку отсутствует элемент корневого уровня.</span><span class="sxs-lookup"><span data-stu-id="235d4-972">`Load` succeeds, but you have an incomplete DOM tree because there is no root level element.</span></span> <span data-ttu-id="235d4-973">Прежде чем сохранять документ, необходимо добавить элемент корневого уровня, в противном случае <xref:System.Xml.XmlDocument.Save%2A> вызовет исключение.</span><span class="sxs-lookup"><span data-stu-id="235d4-973">Before you save the document, you must add a root level element, otherwise <xref:System.Xml.XmlDocument.Save%2A> will throw an exception.</span></span>  
  
 <span data-ttu-id="235d4-974">Если средство чтения находится на конечном узле, недопустимом для корневого уровня документа, например, пробел или узел атрибута, средство чтения продолжает считывание до размещения на узле, который может использоваться в качестве корневого.</span><span class="sxs-lookup"><span data-stu-id="235d4-974">If the reader is positioned on a leaf node that is invalid for the root level of a document, for example a white space or attribute node, the reader continues to read until it is positioned on a node that can be used for the root.</span></span> <span data-ttu-id="235d4-975">Документ начинает загружаться в этой точке.</span><span class="sxs-lookup"><span data-stu-id="235d4-975">The document begins loading at this point.</span></span>  
  
 <span data-ttu-id="235d4-976">Если требуется выполнить проверку, можно создать проверяющий <xref:System.Xml.XmlReader> экземпляра с помощью <xref:System.Xml.XmlReaderSettings> класса и <xref:System.Xml.XmlReader.Create%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="235d4-976">If you want validation to occur, you can create a validating <xref:System.Xml.XmlReader> instance by using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="235d4-977">Дополнительные сведения см. в подразделе "Примечания" на справочной странице <xref:System.Xml.XmlReader>.</span><span class="sxs-lookup"><span data-stu-id="235d4-977">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 <span data-ttu-id="235d4-978">Этот метод является расширением Microsoft для модели объекта документа (DOM).</span><span class="sxs-lookup"><span data-stu-id="235d4-978">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="235d4-979">В следующем примере загружаются последнего узла книги из `books.xml` файла в XML-документ.</span><span class="sxs-lookup"><span data-stu-id="235d4-979">The following example loads the last book node of the `books.xml` file into the XML document.</span></span>  
  
 [!code-cpp[Classic WebData XmlDocument.Load2 Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlDocument.Load2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlDocument.Load2 Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlDocument.Load2 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlDocument.Load2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlDocument.Load2 Example/VB/source.vb#1)]  
  
 <span data-ttu-id="235d4-980">В примере используется файл `books.xml`, в качестве входных данных.</span><span class="sxs-lookup"><span data-stu-id="235d4-980">The example uses the file, `books.xml`, as input.</span></span>  
  
 [!code-xml[Classic WebData XslTransform.Transform7 Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/XML/books.xml#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="235d4-981">Ошибка загрузки или синтаксического анализа в XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-981">There is a load or parse error in the XML.</span>
          </span>
          <span data-ttu-id="235d4-982">В этом случае документ остается пустым.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-982">In this case, the document remains empty.</span>
          </span>
        </exception>
        <altmember cref="T:System.Xml.Schema.ValidationEventArgs" />
        <altmember cref="T:System.Xml.Schema.XmlSeverityType" />
        <altmember cref="P:System.Xml.XmlValidatingReader.Schemas" />
      </Docs>
    </Member>
    <Member MemberName="LoadXml">
      <MemberSignature Language="C#" Value="public virtual void LoadXml (string xml);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void LoadXml(string xml) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.LoadXml(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub LoadXml (xml As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void LoadXml(System::String ^ xml);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xml" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="xml">
          <span data-ttu-id="235d4-983">Строка, содержащая загружаемый XML-документ.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-983">String containing the XML document to load.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="235d4-984">Загружает XML-документ из указанной строки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-984">Loads the XML document from the specified string.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="235d4-985">По умолчанию `LoadXml` метод не сохраняет пробелы или значимые пробелы.</span><span class="sxs-lookup"><span data-stu-id="235d4-985">By default the `LoadXml` method does not preserve white space or significant white space.</span></span>  
  
 <span data-ttu-id="235d4-986">Этот метод выполняет синтаксический анализ определения DTD, но не выполняет проверку DTD или схемы.</span><span class="sxs-lookup"><span data-stu-id="235d4-986">This method parses DTDs, but does not do DTD or Schema validation.</span></span> <span data-ttu-id="235d4-987">Если требуется выполнить проверку, можно создать проверяющий <xref:System.Xml.XmlReader> экземпляра с помощью <xref:System.Xml.XmlReaderSettings> класса и <xref:System.Xml.XmlReader.Create%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="235d4-987">If you want validation to occur, you can create a validating <xref:System.Xml.XmlReader> instance by using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="235d4-988">Дополнительные сведения см. в подразделе "Примечания" на справочной странице <xref:System.Xml.XmlReader>.</span><span class="sxs-lookup"><span data-stu-id="235d4-988">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 <span data-ttu-id="235d4-989">Если вы хотите загрузить из <xref:System.IO.Stream>, <xref:System.String>, <xref:System.IO.TextReader>, или <xref:System.Xml.XmlReader>, используйте метод загрузки, вместо этого метода.</span><span class="sxs-lookup"><span data-stu-id="235d4-989">If you want to load from a <xref:System.IO.Stream>, <xref:System.String>, <xref:System.IO.TextReader>, or <xref:System.Xml.XmlReader>, use the Load method instead of this method.</span></span>  
  
 <span data-ttu-id="235d4-990">Этот метод является расширением Microsoft для модели объекта документа (DOM).</span><span class="sxs-lookup"><span data-stu-id="235d4-990">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="235d4-991">В следующем примере загружается XML-документ в `XmlDocument` объекта и его сохранение в файл.</span><span class="sxs-lookup"><span data-stu-id="235d4-991">The following example loads XML into an `XmlDocument` object and saves it out to a file.</span></span>  
  
 [!code-cpp[Classic WebData XmlDocument.LoadXml Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlDocument.LoadXml Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlDocument.LoadXml Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlDocument.LoadXml Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlDocument.LoadXml Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlDocument.LoadXml Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="235d4-992">Ошибка загрузки или синтаксического анализа в XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-992">There is a load or parse error in the XML.</span>
          </span>
          <span data-ttu-id="235d4-993">В этом случае документ остается пустым.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-993">In this case, the document remains empty.</span>
          </span>
        </exception>
        <altmember cref="P:System.Xml.XmlDocument.PreserveWhitespace" />
      </Docs>
    </Member>
    <Member MemberName="LocalName">
      <MemberSignature Language="C#" Value="public override string LocalName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LocalName" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlDocument.LocalName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property LocalName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ LocalName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="235d4-994">Возвращает локальное имя узла.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-994">Gets the local name of the node.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="235d4-995">Для узлов <see langword="XmlDocument" /> локальное имя равно #document.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-995">For <see langword="XmlDocument" /> nodes, the local name is #document.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="235d4-996">Локальное имя, возвращаемое зависит <xref:System.Xml.XmlDocument.NodeType%2A> узла.</span><span class="sxs-lookup"><span data-stu-id="235d4-996">The local name returned depends on the <xref:System.Xml.XmlDocument.NodeType%2A> of the node.</span></span> <span data-ttu-id="235d4-997">Таблицу, описывающую локальное имя, возвращаемое для каждого типа узла см. в разделе <xref:System.Xml.XmlNode.LocalName%2A> свойства <xref:System.Xml.XmlNode> класса.</span><span class="sxs-lookup"><span data-stu-id="235d4-997">To see a table describing the local name returned for each of the node types, see the <xref:System.Xml.XmlNode.LocalName%2A> property in the <xref:System.Xml.XmlNode> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public override string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlDocument.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="235d4-998">Возвращает полное имя узла.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-998">Gets the qualified name of the node.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="235d4-999">Для узлов <see langword="XmlDocument" /> имя равно #document.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-999">For <see langword="XmlDocument" /> nodes, the name is #document.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="235d4-1000">Возвращаемое имя зависит <xref:System.Xml.XmlDocument.NodeType%2A> узла.</span><span class="sxs-lookup"><span data-stu-id="235d4-1000">The name returned depends on the <xref:System.Xml.XmlDocument.NodeType%2A> of the node.</span></span> <span data-ttu-id="235d4-1001">Таблицу, описывающую имя, возвращаемое для каждого из типов узлов см. в разделе <xref:System.Xml.XmlNode.Name%2A> свойства <xref:System.Xml.XmlNode> класса.</span><span class="sxs-lookup"><span data-stu-id="235d4-1001">To see a table describing the name returned for each of the node types, see the <xref:System.Xml.XmlNode.Name%2A> property in the <xref:System.Xml.XmlNode> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NameTable">
      <MemberSignature Language="C#" Value="public System.Xml.XmlNameTable NameTable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlNameTable NameTable" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlDocument.NameTable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NameTable As XmlNameTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::XmlNameTable ^ NameTable { System::Xml::XmlNameTable ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNameTable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="235d4-1002">Возвращает класс <see cref="T:System.Xml.XmlNameTable" />, связанный с данной реализацией.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-1002">Gets the <see cref="T:System.Xml.XmlNameTable" /> associated with this implementation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="235d4-1003">Класс <see langword="XmlNameTable" />, позволяющий получить атомизированную версию строки в документе.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-1003">An <see langword="XmlNameTable" /> enabling you to get the atomized version of a string within the document.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="235d4-1004">Каждый `XmlDocument` объект имеет <xref:System.Xml.NameTable> объекта.</span><span class="sxs-lookup"><span data-stu-id="235d4-1004">Each `XmlDocument` object has a <xref:System.Xml.NameTable> object.</span></span> <span data-ttu-id="235d4-1005">Имена элементов и атрибутов хранятся в `NameTable` виде разделенных строк.</span><span class="sxs-lookup"><span data-stu-id="235d4-1005">Element and attribute names are stored in the `NameTable` as atomized strings.</span></span> <span data-ttu-id="235d4-1006">Это означает, что даже если имя упоминается в документе несколько раз сохраняется только один раз в `NameTable`.</span><span class="sxs-lookup"><span data-stu-id="235d4-1006">This means that even if a name is referenced in the document multiple times it is stored only once in the `NameTable`.</span></span> <span data-ttu-id="235d4-1007">Например, если документ имеет несколько элементов с именем «Customer» `NameTable` возвращает тот же объект всякий раз, когда он получает запрос на это имя.</span><span class="sxs-lookup"><span data-stu-id="235d4-1007">For example, if the document had multiple elements with the name "Customer", `NameTable` returns the same object whenever it receives a request for that name.</span></span> <span data-ttu-id="235d4-1008">В результате пользователи можно написать код, используя сравнения объектов для этих строк, а не более ресурсоемкие сравнения строк.</span><span class="sxs-lookup"><span data-stu-id="235d4-1008">As a result, users can write code using object comparisons on these strings rather than the more expensive string comparisons.</span></span>  
  
 <span data-ttu-id="235d4-1009">Дополнительные сведения об атомизированных строках см. в разделе <xref:System.Xml.XmlNameTable>.</span><span class="sxs-lookup"><span data-stu-id="235d4-1009">For more information on atomized strings, see <xref:System.Xml.XmlNameTable>.</span></span>  
  
 <span data-ttu-id="235d4-1010">Этот метод является расширением Microsoft для модели объекта документа (DOM).</span><span class="sxs-lookup"><span data-stu-id="235d4-1010">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlNameTable" />
      </Docs>
    </Member>
    <Member MemberName="NodeChanged">
      <MemberSignature Language="C#" Value="public event System.Xml.XmlNodeChangedEventHandler NodeChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Xml.XmlNodeChangedEventHandler NodeChanged" />
      <MemberSignature Language="DocId" Value="E:System.Xml.XmlDocument.NodeChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event NodeChanged As XmlNodeChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Xml::XmlNodeChangedEventHandler ^ NodeChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNodeChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="235d4-1011">Возникает при изменении свойства <see cref="P:System.Xml.XmlNode.Value" /> узла, принадлежащего данному документу.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-1011">Occurs when the <see cref="P:System.Xml.XmlNode.Value" /> of a node belonging to this document has been changed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="235d4-1012">Это событие применяется только к узлам, имеющим значение.</span><span class="sxs-lookup"><span data-stu-id="235d4-1012">This event only applies to nodes that have a value.</span></span>  
  
 <span data-ttu-id="235d4-1013">В этом случае включаются все узлы, созданные этим документом, независимо от того, имеется ли они были вставлены в документ.</span><span class="sxs-lookup"><span data-stu-id="235d4-1013">All nodes created by this document, whether or not they have been inserted into the document, are included in this event.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlNodeChangedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="NodeChanging">
      <MemberSignature Language="C#" Value="public event System.Xml.XmlNodeChangedEventHandler NodeChanging;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Xml.XmlNodeChangedEventHandler NodeChanging" />
      <MemberSignature Language="DocId" Value="E:System.Xml.XmlDocument.NodeChanging" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event NodeChanging As XmlNodeChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Xml::XmlNodeChangedEventHandler ^ NodeChanging;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNodeChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="235d4-1014">Возникает при намерении изменить свойство <see cref="P:System.Xml.XmlNode.Value" /> узла, принадлежащего данному документу.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-1014">Occurs when the <see cref="P:System.Xml.XmlNode.Value" /> of a node belonging to this document is about to be changed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="235d4-1015">Это событие позволяет пользователю выполнить дополнительную проверку и при необходимости создать исключение для остановки операции.</span><span class="sxs-lookup"><span data-stu-id="235d4-1015">This event allows the user to do extra checking and, if necessary, throw an exception to stop the operation.</span></span> <span data-ttu-id="235d4-1016">Если исключение создается `XmlDocument` возвращает в исходное состояние.</span><span class="sxs-lookup"><span data-stu-id="235d4-1016">If an exception is thrown the `XmlDocument` returns to its original state.</span></span> <span data-ttu-id="235d4-1017">Это событие применяется только к узлам, имеющим значение.</span><span class="sxs-lookup"><span data-stu-id="235d4-1017">This event only applies to nodes that have a value.</span></span>  
  
 <span data-ttu-id="235d4-1018">В этом случае включаются все узлы, созданные этим документом, независимо от того, имеется ли они были вставлены в документ.</span><span class="sxs-lookup"><span data-stu-id="235d4-1018">All nodes created by this document, whether or not they have been inserted into the document, are included in this event.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlNodeChangedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="NodeInserted">
      <MemberSignature Language="C#" Value="public event System.Xml.XmlNodeChangedEventHandler NodeInserted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Xml.XmlNodeChangedEventHandler NodeInserted" />
      <MemberSignature Language="DocId" Value="E:System.Xml.XmlDocument.NodeInserted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event NodeInserted As XmlNodeChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Xml::XmlNodeChangedEventHandler ^ NodeInserted;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNodeChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="235d4-1019">Возникает после вставки узла, принадлежащего данному документу, в другой узел.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-1019">Occurs when a node belonging to this document has been inserted into another node.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="235d4-1020">В этом случае включаются все узлы, созданные этим документом, независимо от того, имеется ли они были вставлены в документ.</span><span class="sxs-lookup"><span data-stu-id="235d4-1020">All nodes created by this document, whether or not they have been inserted into the document, are included in this event.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlNodeChangedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="NodeInserting">
      <MemberSignature Language="C#" Value="public event System.Xml.XmlNodeChangedEventHandler NodeInserting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Xml.XmlNodeChangedEventHandler NodeInserting" />
      <MemberSignature Language="DocId" Value="E:System.Xml.XmlDocument.NodeInserting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event NodeInserting As XmlNodeChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Xml::XmlNodeChangedEventHandler ^ NodeInserting;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNodeChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="235d4-1021">Возникает перед вставкой узла, принадлежащего данному документу, в другой узел.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-1021">Occurs when a node belonging to this document is about to be inserted into another node.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="235d4-1022">Это событие позволяет пользователю выполнить дополнительную проверку и при необходимости создать исключение для остановки операции.</span><span class="sxs-lookup"><span data-stu-id="235d4-1022">This event allows the user to do extra checking and, if necessary, throw an exception to stop the operation.</span></span> <span data-ttu-id="235d4-1023">Если исключение создается `XmlDocument` возвращает в исходное состояние.</span><span class="sxs-lookup"><span data-stu-id="235d4-1023">If an exception is thrown the `XmlDocument` returns to its original state.</span></span>  
  
 <span data-ttu-id="235d4-1024">В этом случае включаются все узлы, созданные этим документом, независимо от того, имеется ли они были вставлены в документ.</span><span class="sxs-lookup"><span data-stu-id="235d4-1024">All nodes created by this document, whether or not they have been inserted into the document, are included in this event.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlNodeChangedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="NodeRemoved">
      <MemberSignature Language="C#" Value="public event System.Xml.XmlNodeChangedEventHandler NodeRemoved;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Xml.XmlNodeChangedEventHandler NodeRemoved" />
      <MemberSignature Language="DocId" Value="E:System.Xml.XmlDocument.NodeRemoved" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event NodeRemoved As XmlNodeChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Xml::XmlNodeChangedEventHandler ^ NodeRemoved;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNodeChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="235d4-1025">Возникает после удаления узла, принадлежащего данному документу, из родительского узла.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-1025">Occurs when a node belonging to this document has been removed from its parent.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="235d4-1026">В этом случае включаются все узлы, созданные этим документом, независимо от того, имеется ли они были вставлены в документ.</span><span class="sxs-lookup"><span data-stu-id="235d4-1026">All nodes created by this document, whether or not they have been inserted into the document, are included in this event.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlNodeChangedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="NodeRemoving">
      <MemberSignature Language="C#" Value="public event System.Xml.XmlNodeChangedEventHandler NodeRemoving;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Xml.XmlNodeChangedEventHandler NodeRemoving" />
      <MemberSignature Language="DocId" Value="E:System.Xml.XmlDocument.NodeRemoving" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event NodeRemoving As XmlNodeChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Xml::XmlNodeChangedEventHandler ^ NodeRemoving;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNodeChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="235d4-1027">Возникает перед удалением узла из документа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-1027">Occurs when a node belonging to this document is about to be removed from the document.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="235d4-1028">Это событие позволяет пользователю выполнить дополнительную проверку и при необходимости создать исключение для остановки операции.</span><span class="sxs-lookup"><span data-stu-id="235d4-1028">This event allows the user to do extra checking and, if necessary, throw an exception to stop the operation.</span></span> <span data-ttu-id="235d4-1029">Если исключение создается `XmlDocument` возвращает в исходное состояние.</span><span class="sxs-lookup"><span data-stu-id="235d4-1029">If an exception is thrown the `XmlDocument` returns to its original state.</span></span>  
  
 <span data-ttu-id="235d4-1030">В этом случае включаются все узлы, созданные этим документом, независимо от того, имеется ли они были вставлены в документ.</span><span class="sxs-lookup"><span data-stu-id="235d4-1030">All nodes created by this document, whether or not they have been inserted into the document, are included in this event.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlNodeChangedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="NodeType">
      <MemberSignature Language="C#" Value="public override System.Xml.XmlNodeType NodeType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.XmlNodeType NodeType" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlDocument.NodeType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property NodeType As XmlNodeType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlNodeType NodeType { System::Xml::XmlNodeType get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNodeType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="235d4-1031">Возвращает тип текущего узла.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-1031">Gets the type of the current node.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="235d4-1032">Тип узла.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-1032">The node type.</span>
          </span>
          <span data-ttu-id="235d4-1033">Для узлов <see langword="XmlDocument" /> это значение равно XmlNodeType.Document.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-1033">For <see langword="XmlDocument" /> nodes, this value is XmlNodeType.Document.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Xml.XmlNodeType" />
      </Docs>
    </Member>
    <Member MemberName="OwnerDocument">
      <MemberSignature Language="C#" Value="public override System.Xml.XmlDocument OwnerDocument { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlDocument OwnerDocument" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlDocument.OwnerDocument" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property OwnerDocument As XmlDocument" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlDocument ^ OwnerDocument { System::Xml::XmlDocument ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDocument</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="235d4-1034">Возвращает <see cref="T:System.Xml.XmlDocument" />, к которому принадлежит текущий узел.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-1034">Gets the <see cref="T:System.Xml.XmlDocument" /> to which the current node belongs.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="235d4-1035">Для узлов <see langword="XmlDocument" /> (<see cref="P:System.Xml.XmlDocument.NodeType" /> имеет значение XmlNodeType.Document) это свойство всегда возвращает значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-1035">For <see langword="XmlDocument" /> nodes (<see cref="P:System.Xml.XmlDocument.NodeType" /> equals XmlNodeType.Document), this property always returns <see langword="null" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParentNode">
      <MemberSignature Language="C#" Value="public override System.Xml.XmlNode ParentNode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlNode ParentNode" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlDocument.ParentNode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ParentNode As XmlNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlNode ^ ParentNode { System::Xml::XmlNode ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="235d4-1036">Возвращает родительский узел для данного узла (только узлов, у которых они могут быть).</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-1036">Gets the parent node of this node (for nodes that can have parents).</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="235d4-1037">Всегда возвращает значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-1037">Always returns <see langword="null" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreserveWhitespace">
      <MemberSignature Language="C#" Value="public bool PreserveWhitespace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PreserveWhitespace" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlDocument.PreserveWhitespace" />
      <MemberSignature Language="VB.NET" Value="Public Property PreserveWhitespace As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PreserveWhitespace { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="235d4-1038">Возвращает или задает значение, определяющее, будут ли сохранены знаки-разделители в содержимом элемента.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-1038">Gets or sets a value indicating whether to preserve white space in element content.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="235d4-1039">Значение <see langword="true" />, если знак-разделитель будет сохранен; в противном случае — значение <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-1039">
              <see langword="true" /> to preserve white space; otherwise <see langword="false" />.</span>
          </span>
          <span data-ttu-id="235d4-1040">Значение по умолчанию: <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-1040">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="235d4-1041">Это свойство определяет способ обработки пробелов во время загрузки и сохранения процесса.</span><span class="sxs-lookup"><span data-stu-id="235d4-1041">This property determines how white space is handled during the load and save process.</span></span>  
  
 <span data-ttu-id="235d4-1042">Если `PreserveWhitespace` — `true` перед <xref:System.Xml.XmlDocument.Load%2A> или <xref:System.Xml.XmlDocument.LoadXml%2A> — вызывается, узлы пробелов сохраняются; в противном случае, если это свойство имеет `false`, значимые пробелы сохраняются, пробел.</span><span class="sxs-lookup"><span data-stu-id="235d4-1042">If `PreserveWhitespace` is `true` before <xref:System.Xml.XmlDocument.Load%2A> or <xref:System.Xml.XmlDocument.LoadXml%2A> is called, white space nodes are preserved; otherwise, if this property is `false`, significant white space is preserved, white space is not.</span></span>  
  
 <span data-ttu-id="235d4-1043">Если `PreserveWhitespace` — `true` перед <xref:System.Xml.XmlDocument.Save%2A> является именем, пробелы в документе сохраняются в выходных данных; в противном случае, если это свойство имеет `false`, `XmlDocument` автоматический отступ выходные данные.</span><span class="sxs-lookup"><span data-stu-id="235d4-1043">If `PreserveWhitespace` is `true` before <xref:System.Xml.XmlDocument.Save%2A> is called, white space in the document is preserved in the output; otherwise, if this property is `false`, `XmlDocument` auto-indents the output.</span></span>  
  
 <span data-ttu-id="235d4-1044">Этот метод является расширением Microsoft для модели объекта документа (DOM).</span><span class="sxs-lookup"><span data-stu-id="235d4-1044">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="235d4-1045">В следующем примере показано, как удалить пробелы из файла.</span><span class="sxs-lookup"><span data-stu-id="235d4-1045">The following example shows how to strip white space from a file.</span></span>  
  
 [!code-cpp[Classic WebData XmlDocument.PreserveWhitespace Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlDocument.PreserveWhitespace Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlDocument.PreserveWhitespace Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlDocument.PreserveWhitespace Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlDocument.PreserveWhitespace Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlDocument.PreserveWhitespace Example/VB/source.vb#1)]  
  
 <span data-ttu-id="235d4-1046">В примере используется файл `book.xml` в качестве входного.</span><span class="sxs-lookup"><span data-stu-id="235d4-1046">The example uses the file `book.xml` as input.</span></span>  
  
 [!code-xml[Classic WebData XmlDocument.PreserveWhitespace Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlDocument.PreserveWhitespace Example/XML/source.xml#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadNode">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlNode ReadNode (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlNode ReadNode(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.ReadNode(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadNode (reader As XmlReader) As XmlNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlNode ^ ReadNode(System::Xml::XmlReader ^ reader);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="235d4-1047">Источник XML</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-1047">The XML source</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="235d4-1048">Создает объект <see cref="T:System.Xml.XmlNode" /> на основе данных из <see cref="T:System.Xml.XmlReader" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-1048">Creates an <see cref="T:System.Xml.XmlNode" /> object based on the information in the <see cref="T:System.Xml.XmlReader" />.</span>
          </span>
          <span data-ttu-id="235d4-1049">Средство чтения должно быть позиционировано на узел или атрибут.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-1049">The reader must be positioned on a node or attribute.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="235d4-1050">Новый <see langword="XmlNode" /> или значение <see langword="null" />, если больше узлов не существует.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-1050">The new <see langword="XmlNode" /> or <see langword="null" /> if no more nodes exist.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="235d4-1051">Считывает один `XmlNode` из заданного средства чтения и перемещает средство чтения на следующий узел.</span><span class="sxs-lookup"><span data-stu-id="235d4-1051">Reads one `XmlNode` from the given reader and positions the reader on the next node.</span></span> <span data-ttu-id="235d4-1052">Этот метод создает тип `XmlNode` сопоставления <xref:System.Xml.XmlNode.NodeType%2A> , на котором расположено средство чтения.</span><span class="sxs-lookup"><span data-stu-id="235d4-1052">This method creates the type of `XmlNode` matching the <xref:System.Xml.XmlNode.NodeType%2A> on which the reader is currently positioned.</span></span> <span data-ttu-id="235d4-1053">(Если средство чтения находится в начальном состоянии `ReadNode` Перемещает модуль чтения на первый узел и затем работает на этом узле.)</span><span class="sxs-lookup"><span data-stu-id="235d4-1053">(If the reader is in the initial state, `ReadNode` advances the reader to the first node and then operates on that node.)</span></span>  
  
 <span data-ttu-id="235d4-1054">Если средство чтения расположено в начале элемента, `ReadNode` считывает все атрибуты и дочерние узлы до и включая закрывающий тег текущего узла.</span><span class="sxs-lookup"><span data-stu-id="235d4-1054">If the reader is positioned on the start of an element, `ReadNode` reads all the attributes and any child nodes, up to and including the end tag of the current node.</span></span> <span data-ttu-id="235d4-1055">`XmlNode` Вернул содержит поддерево, отражающее все считанные.</span><span class="sxs-lookup"><span data-stu-id="235d4-1055">The `XmlNode` returned contains the sub-tree representing everything read.</span></span> <span data-ttu-id="235d4-1056">Модуль чтения располагается сразу после закрывающего тега.</span><span class="sxs-lookup"><span data-stu-id="235d4-1056">The reader is positioned immediately after the end tag.</span></span>  
  
 <span data-ttu-id="235d4-1057">`ReadNode` может также считывать атрибуты, но в этом случае он перемещает средство чтения к следующему атрибуту.</span><span class="sxs-lookup"><span data-stu-id="235d4-1057">`ReadNode` can also read attributes, but in this case it does not advance the reader to the next attribute.</span></span> <span data-ttu-id="235d4-1058">Это позволяет написать следующий код C#:</span><span class="sxs-lookup"><span data-stu-id="235d4-1058">This allows you to write the following C# code:</span></span>  
  
```csharp  
XmlDocument doc = new XmlDocument();  
while (reader.MoveToNextAttribute())  
{  
  XmlNode a = doc.ReadNode(reader);  
  // Do some more processing.  
}  
```  
  
 <span data-ttu-id="235d4-1059">`ReadNode` использует значение атрибута, то есть после вызова `ReadNode` на атрибуте, <xref:System.Xml.XmlReader.ReadAttributeValue%2A?displayProperty=nameWithType> возвращает `false`.</span><span class="sxs-lookup"><span data-stu-id="235d4-1059">`ReadNode` does consume the attribute value though, which means after calling `ReadNode` on an attribute, <xref:System.Xml.XmlReader.ReadAttributeValue%2A?displayProperty=nameWithType> returns `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="235d4-1060">В следующем примере используется `ReadNode` , чтобы создать новый узел, а затем вставляет новый узел в документе.</span><span class="sxs-lookup"><span data-stu-id="235d4-1060">The following example uses `ReadNode` to create a new node and then inserts the new node into the document.</span></span>  
  
 [!code-cpp[Classic WebData XmlDocument.ReadNode Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlDocument.ReadNode Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlDocument.ReadNode Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlDocument.ReadNode Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlDocument.ReadNode Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlDocument.ReadNode Example/VB/source.vb#1)]  
  
 <span data-ttu-id="235d4-1061">В примере используется файл `cd.xml`, в качестве входных данных.</span><span class="sxs-lookup"><span data-stu-id="235d4-1061">The example uses the file, `cd.xml`, as input.</span></span>  
  
 [!code-xml[Classic WebData XmlDocument.ReadNode Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlDocument.ReadNode Example/XML/source.xml#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NullReferenceException">
          <span data-ttu-id="235d4-1062">Средство чтения расположено на узле, тип которого не преобразуется в допустимый узел DOM (например, EndElement или EndEntity).</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-1062">The reader is positioned on a node type that does not translate to a valid DOM node (for example, EndElement or EndEntity).</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="235d4-1063">
            <para>Этот метод имеет требования наследования. Требуется полное доверие для переопределения <see langword="ReadNode" /> метод.  Этот метод является расширением Microsoft для модели объекта документа (DOM).</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-1063">
              <para>This method has an inheritance demand. Full trust is required to override the <see langword="ReadNode" /> method.  This method is a Microsoft extension to the Document Object Model (DOM).</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.Xml.XmlReader" />
        <altmember cref="M:System.Xml.XmlDocument.ImportNode(System.Xml.XmlNode,System.Boolean)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Save">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="235d4-1064">Сохраняет XML-документ в указанном месте.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-1064">Saves the XML document to the specified location.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public virtual void Save (System.IO.Stream outStream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Save(class System.IO.Stream outStream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.Save(System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Save (outStream As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Save(System::IO::Stream ^ outStream);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="outStream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="outStream">
          <span data-ttu-id="235d4-1065">Поток, в который будет выполняться сохранение.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-1065">The stream to which you want to save.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="235d4-1066">Сохраняет XML-документ в указанном потоке.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-1066">Saves the XML document to the specified stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="235d4-1067">Пробелы сохраняются только в том случае, если <xref:System.Xml.XmlDocument.PreserveWhitespace%2A> равно `true`.</span><span class="sxs-lookup"><span data-stu-id="235d4-1067">White space is preserved only if <xref:System.Xml.XmlDocument.PreserveWhitespace%2A> is set to `true`.</span></span>  
  
 <span data-ttu-id="235d4-1068">XmlDeclaration текущего `XmlDocument` определяет атрибут кодировки в сохраненный документ.</span><span class="sxs-lookup"><span data-stu-id="235d4-1068">The XmlDeclaration of the current `XmlDocument` object determines the encoding attribute in the saved document.</span></span> <span data-ttu-id="235d4-1069">Значение атрибута кодировки берется из <xref:System.Xml.XmlDeclaration.Encoding%2A?displayProperty=nameWithType> свойство.</span><span class="sxs-lookup"><span data-stu-id="235d4-1069">The value of the encoding attribute is taken from the <xref:System.Xml.XmlDeclaration.Encoding%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="235d4-1070">Если `XmlDocument` does имеет XmlDeclaration или если XmlDeclaration не имеет атрибута кодировки, сохраненный документ не будет иметь одно либо.</span><span class="sxs-lookup"><span data-stu-id="235d4-1070">If the `XmlDocument` does not have an XmlDeclaration, or if the XmlDeclaration does not have an encoding attribute, the saved document will not have one either.</span></span>  
  
 <span data-ttu-id="235d4-1071">При сохранении документа атрибуты xmlns создаются для правильного сохранения удостоверения узла (локальное имя + URI пространства имен).</span><span class="sxs-lookup"><span data-stu-id="235d4-1071">When the document is saved, xmlns attributes are generated to persist the node identity (local name + namespace URI) correctly.</span></span> <span data-ttu-id="235d4-1072">Например, следующий код C#</span><span class="sxs-lookup"><span data-stu-id="235d4-1072">For example, the following C# code</span></span>  
  
```csharp  
XmlDocument doc = new XmlDocument();  
doc.AppendChild(doc.CreateElement("item","urn:1"));  
doc.Save(Console.Out);  
```  
  
 <span data-ttu-id="235d4-1073">создает этот атрибут XML-файлы `<item xmls="urn:1"/>`.</span><span class="sxs-lookup"><span data-stu-id="235d4-1073">generates this xmls attribute `<item xmls="urn:1"/>`.</span></span>  
  
 <span data-ttu-id="235d4-1074">Этот метод является расширением Microsoft для модели объекта документа (DOM).</span><span class="sxs-lookup"><span data-stu-id="235d4-1074">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
 <span data-ttu-id="235d4-1075">Обратите внимание, что только <xref:System.Xml.XmlDocument.Save%2A> метод обеспечивает правильность XML-документа.</span><span class="sxs-lookup"><span data-stu-id="235d4-1075">Note that only the <xref:System.Xml.XmlDocument.Save%2A> method enforces a well-formed XML document.</span></span> <span data-ttu-id="235d4-1076">Все остальные `Save` обеспечивают только правильный фрагмент.</span><span class="sxs-lookup"><span data-stu-id="235d4-1076">All other `Save` overloads only guarantee a well-formed fragment.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="235d4-1077">Операция не приведет к созданию XML-документа с правильным форматом (например, в документе не будет элемента документа или будут повторяющиеся XML-объявления).</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-1077">The operation would not result in a well formed XML document (for example, no document element or duplicate XML declarations).</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public virtual void Save (System.IO.TextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Save(class System.IO.TextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.Save(System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Save (writer As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Save(System::IO::TextWriter ^ writer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
          <span data-ttu-id="235d4-1078">Объект <see langword="TextWriter" />, в котором необходимо выполнить сохранение.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-1078">The <see langword="TextWriter" /> to which you want to save.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="235d4-1079">Сохраняет XML-документ в указанном <see cref="T:System.IO.TextWriter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-1079">Saves the XML document to the specified <see cref="T:System.IO.TextWriter" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="235d4-1080">Кодировка `TextWriter` определяет кодировку, записываемого (кодировка записываемую заменяется кодировку `TextWriter`).</span><span class="sxs-lookup"><span data-stu-id="235d4-1080">The encoding on the `TextWriter` determines the encoding that is written out (The encoding of the XmlDeclaration node is replaced by the encoding of the `TextWriter`).</span></span> <span data-ttu-id="235d4-1081">Если произошел кодировка не указана `TextWriter`, `XmlDocument` сохраняется без атрибута кодировки.</span><span class="sxs-lookup"><span data-stu-id="235d4-1081">If there was no encoding specified on the `TextWriter`, the `XmlDocument` is saved without an encoding attribute.</span></span>  
  
 <span data-ttu-id="235d4-1082">Этот метод является расширением Microsoft для модели объекта документа (DOM).</span><span class="sxs-lookup"><span data-stu-id="235d4-1082">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
 <span data-ttu-id="235d4-1083">Обратите внимание, что только <xref:System.Xml.XmlDocument.Save%2A> метод обеспечивает правильность XML-документа.</span><span class="sxs-lookup"><span data-stu-id="235d4-1083">Note that only the <xref:System.Xml.XmlDocument.Save%2A> method enforces a well-formed XML document.</span></span> <span data-ttu-id="235d4-1084">Все остальные `Save` обеспечивают только правильный фрагмент.</span><span class="sxs-lookup"><span data-stu-id="235d4-1084">All other `Save` overloads only guarantee a well-formed fragment.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="235d4-1085">Операция не приведет к созданию XML-документа с правильным форматом (например, в документе не будет элемента документа или будут повторяющиеся XML-объявления).</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-1085">The operation would not result in a well formed XML document (for example, no document element or duplicate XML declarations).</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public virtual void Save (string filename);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Save(string filename) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.Save(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Save (filename As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Save(System::String ^ filename);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="filename">
          <span data-ttu-id="235d4-1086">Место в файле, где нужно сохранить документ.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-1086">The location of the file where you want to save the document.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="235d4-1087">Сохраняет XML-документ в указанном файле.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-1087">Saves the XML document to the specified file.</span>
          </span>
          <span data-ttu-id="235d4-1088">Если указанный файл существует, метод перезаписывает его.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-1088">If the specified file exists, this method overwrites it.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="235d4-1089">Пробелы сохраняются в файл вывода, только если <xref:System.Xml.XmlDocument.PreserveWhitespace%2A> равно `true`.</span><span class="sxs-lookup"><span data-stu-id="235d4-1089">White space is preserved in the output file only if <xref:System.Xml.XmlDocument.PreserveWhitespace%2A> is set to `true`.</span></span>  
  
 <span data-ttu-id="235d4-1090">XmlDeclaration текущего `XmlDocument` определяет атрибут кодировки в сохраненный документ.</span><span class="sxs-lookup"><span data-stu-id="235d4-1090">The XmlDeclaration of the current `XmlDocument` object determines the encoding attribute in the saved document.</span></span> <span data-ttu-id="235d4-1091">Значение атрибута кодировки берется из <xref:System.Xml.XmlDeclaration.Encoding%2A?displayProperty=nameWithType> свойство.</span><span class="sxs-lookup"><span data-stu-id="235d4-1091">The value of the encoding attribute is taken from the <xref:System.Xml.XmlDeclaration.Encoding%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="235d4-1092">Если `XmlDocument` does имеет XmlDeclaration или если XmlDeclaration не имеет атрибута кодировки, сохраненный документ не будет иметь одно либо.</span><span class="sxs-lookup"><span data-stu-id="235d4-1092">If the `XmlDocument` does not have an XmlDeclaration, or if the XmlDeclaration does not have an encoding attribute, the saved document will not have one either.</span></span>  
  
 <span data-ttu-id="235d4-1093">При сохранении документа атрибуты xmlns создаются для правильного сохранения удостоверения узла (локальное имя + URI пространства имен).</span><span class="sxs-lookup"><span data-stu-id="235d4-1093">When the document is saved, xmlns attributes are generated to persist the node identity (local name + namespace URI) correctly.</span></span> <span data-ttu-id="235d4-1094">Например, следующий код C#</span><span class="sxs-lookup"><span data-stu-id="235d4-1094">For example, the following C# code</span></span>  
  
```csharp  
XmlDocument doc = new XmlDocument();  
doc.AppendChild(doc.CreateElement("item","urn:1"));  
doc.Save(Console.Out);  
```  
  
 <span data-ttu-id="235d4-1095">создает этот атрибут XML-файлы `<item xmls="urn:1"/>`.</span><span class="sxs-lookup"><span data-stu-id="235d4-1095">generates this xmls attribute `<item xmls="urn:1"/>`.</span></span>  
  
 <span data-ttu-id="235d4-1096">Этот метод является расширением Microsoft для модели объекта документа (DOM).</span><span class="sxs-lookup"><span data-stu-id="235d4-1096">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
 <span data-ttu-id="235d4-1097">Обратите внимание, что только <xref:System.Xml.XmlDocument.Save%2A> метод обеспечивает правильность XML-документа.</span><span class="sxs-lookup"><span data-stu-id="235d4-1097">Note that only the <xref:System.Xml.XmlDocument.Save%2A> method enforces a well-formed XML document.</span></span> <span data-ttu-id="235d4-1098">Все остальные `Save` обеспечивают только правильный фрагмент.</span><span class="sxs-lookup"><span data-stu-id="235d4-1098">All other `Save` overloads only guarantee a well-formed fragment.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="235d4-1099">Приведенный ниже показана загрузка XML в объект XmlDocument, его изменение и сохраняет его в файл с именем data.xml.</span><span class="sxs-lookup"><span data-stu-id="235d4-1099">The following example loads XML into an XmlDocument object, modifies it, and then saves it to a file named data.xml.</span></span>  
  
 [!code-cpp[Classic WebData XmlDocument.Save Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlDocument.Save Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlDocument.Save Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlDocument.Save Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlDocument.Save Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlDocument.Save Example/VB/source.vb#1)]  
  
 <span data-ttu-id="235d4-1100">Data.xml файл будет содержать следующий XML: `<item><name>wrench</name><price>10.95</price></item>`.</span><span class="sxs-lookup"><span data-stu-id="235d4-1100">The data.xml file will contain the following XML: `<item><name>wrench</name><price>10.95</price></item>`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="235d4-1101">Операция не приведет к созданию XML-документа с правильным форматом (например, в документе не будет элемента документа или будут повторяющиеся XML-объявления).</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-1101">The operation would not result in a well formed XML document (for example, no document element or duplicate XML declarations).</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public virtual void Save (System.Xml.XmlWriter w);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Save(class System.Xml.XmlWriter w) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.Save(System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Save (w As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Save(System::Xml::XmlWriter ^ w);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="w" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="w">
          <span data-ttu-id="235d4-1102">Объект <see langword="XmlWriter" />, в котором необходимо выполнить сохранение.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-1102">The <see langword="XmlWriter" /> to which you want to save.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="235d4-1103">Сохраняет XML-документ в указанном <see cref="T:System.Xml.XmlWriter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-1103">Saves the XML document to the specified <see cref="T:System.Xml.XmlWriter" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="235d4-1104">Пробелы сохраняются только в том случае, если <xref:System.Xml.XmlDocument.PreserveWhitespace%2A> равно `true`.</span><span class="sxs-lookup"><span data-stu-id="235d4-1104">White space is preserved only if <xref:System.Xml.XmlDocument.PreserveWhitespace%2A> is set to `true`.</span></span>  
  
 <span data-ttu-id="235d4-1105">Кодировка `XmlWriter` определяет кодировку, записываемого (кодировка записываемую заменяется кодировку `XmlWriter`).</span><span class="sxs-lookup"><span data-stu-id="235d4-1105">The encoding on the `XmlWriter` determines the encoding that is written out (The encoding of the XmlDeclaration node is replaced by the encoding of the `XmlWriter`).</span></span> <span data-ttu-id="235d4-1106">Если произошел кодировка не указана `XmlWriter`, `XmlDocument` сохраняется без атрибута кодировки.</span><span class="sxs-lookup"><span data-stu-id="235d4-1106">If there was no encoding specified on the `XmlWriter`, the `XmlDocument` is saved without an encoding attribute.</span></span>  
  
 <span data-ttu-id="235d4-1107">При сохранении документа атрибуты xmlns создаются для правильного сохранения удостоверения узла (локальное имя + URI пространства имен).</span><span class="sxs-lookup"><span data-stu-id="235d4-1107">When the document is saved, xmlns attributes are generated to persist the node identity (LocalName + NamespaceURI) correctly.</span></span> <span data-ttu-id="235d4-1108">Например, следующий код C#</span><span class="sxs-lookup"><span data-stu-id="235d4-1108">For example, the following C# code</span></span>  
  
```csharp  
XmlDocument doc = new XmlDocument();  
doc.AppendChild(doc.CreateElement("item","urn:1"));  
doc.Save(Console.Out);  
```  
  
 <span data-ttu-id="235d4-1109">создает этот атрибут XML-файлы:</span><span class="sxs-lookup"><span data-stu-id="235d4-1109">generates this xmls attribute:</span></span>  
  
```xml  
<item  
    xmls="urn:1"/>  
```  
  
 <span data-ttu-id="235d4-1110">Этот метод является расширением Microsoft для модели объекта документа (DOM).</span><span class="sxs-lookup"><span data-stu-id="235d4-1110">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
 <span data-ttu-id="235d4-1111">Обратите внимание, что только <xref:System.Xml.XmlDocument.Save%2A> метод обеспечивает правильность XML-документа.</span><span class="sxs-lookup"><span data-stu-id="235d4-1111">Note that only the <xref:System.Xml.XmlDocument.Save%2A> method enforces a well-formed XML document.</span></span> <span data-ttu-id="235d4-1112">Все остальные `Save` обеспечивают только правильный фрагмент.</span><span class="sxs-lookup"><span data-stu-id="235d4-1112">All other `Save` overloads only guarantee a well-formed fragment.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="235d4-1113">В следующем примере загружается XML-документ в `XmlDocument` объекта и его сохранение в файл.</span><span class="sxs-lookup"><span data-stu-id="235d4-1113">The following example loads XML into an `XmlDocument` object and saves it out to a file.</span></span>  
  
 [!code-cpp[Classic WebData XmlDocument.LoadXml Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlDocument.LoadXml Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlDocument.LoadXml Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlDocument.LoadXml Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlDocument.LoadXml Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlDocument.LoadXml Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="235d4-1114">Операция не приведет к созданию XML-документа с правильным форматом (например, в документе не будет элемента документа или будут повторяющиеся XML-объявления).</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-1114">The operation would not result in a well formed XML document (for example, no document element or duplicate XML declarations).</span>
          </span>
        </exception>
        <altmember cref="P:System.Xml.XmlTextWriter.Formatting" />
      </Docs>
    </Member>
    <Member MemberName="SchemaInfo">
      <MemberSignature Language="C#" Value="public override System.Xml.Schema.IXmlSchemaInfo SchemaInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Schema.IXmlSchemaInfo SchemaInfo" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlDocument.SchemaInfo" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property SchemaInfo As IXmlSchemaInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::Schema::IXmlSchemaInfo ^ SchemaInfo { System::Xml::Schema::IXmlSchemaInfo ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.IXmlSchemaInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="235d4-1115">Возвращает информационный набор после проверки схемы (PSVI) для этого узла.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-1115">Returns the Post-Schema-Validation-Infoset (PSVI) of the node.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="235d4-1116">Объект <see cref="T:System.Xml.Schema.IXmlSchemaInfo" />, представляющий набор сведений после проверки схемы этого узла.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-1116">The <see cref="T:System.Xml.Schema.IXmlSchemaInfo" /> object representing the PSVI of the node.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="235d4-1117">Содержимое этого свойства PSVI устанавливаются после проверки узла.</span><span class="sxs-lookup"><span data-stu-id="235d4-1117">The PSVI contents of this property are set after the node has been validated.</span></span>  
  
 <span data-ttu-id="235d4-1118">Это свойство является расширением Microsoft для объектной модели документа (DOM).</span><span class="sxs-lookup"><span data-stu-id="235d4-1118">This property is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Schemas">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchemaSet Schemas { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Schema.XmlSchemaSet Schemas" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlDocument.Schemas" />
      <MemberSignature Language="VB.NET" Value="Public Property Schemas As XmlSchemaSet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Schema::XmlSchemaSet ^ Schemas { System::Xml::Schema::XmlSchemaSet ^ get(); void set(System::Xml::Schema::XmlSchemaSet ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaSet</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="235d4-1119">Возвращает или задает объект <see cref="T:System.Xml.Schema.XmlSchemaSet" />, связанный с данным объектом <see cref="T:System.Xml.XmlDocument" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-1119">Gets or sets the <see cref="T:System.Xml.Schema.XmlSchemaSet" /> object associated with this <see cref="T:System.Xml.XmlDocument" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="235d4-1120">Объект <see cref="T:System.Xml.Schema.XmlSchemaSet" />, который содержит схемы языка определения схемы XML, связанные с этим <see cref="T:System.Xml.XmlDocument" />; в противном случае — пустой объект <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-1120">An <see cref="T:System.Xml.Schema.XmlSchemaSet" /> object containing the XML Schema Definition Language (XSD) schemas associated with this <see cref="T:System.Xml.XmlDocument" />; otherwise, an empty <see cref="T:System.Xml.Schema.XmlSchemaSet" /> object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="235d4-1121">Схемы, содержащиеся в <xref:System.Xml.Schema.XmlSchemaSet> объекта, связанного с <xref:System.Xml.XmlDocument> объекта используются для проверки при <xref:System.Xml.XmlDocument.Validate%2A> метод <xref:System.Xml.XmlDocument> выполняется.</span><span class="sxs-lookup"><span data-stu-id="235d4-1121">The schemas contained in an <xref:System.Xml.Schema.XmlSchemaSet> object associated with an <xref:System.Xml.XmlDocument> object are used for validation when the <xref:System.Xml.XmlDocument.Validate%2A> method of an <xref:System.Xml.XmlDocument> is executed.</span></span>  
  
 <span data-ttu-id="235d4-1122">При <xref:System.Xml.XmlDocument> объект инициализируется с XML-данных из <xref:System.Xml.XmlReader> объекта, <xref:System.Xml.Schema.XmlSchemaSet> из которого загружается объект <xref:System.Xml.XmlReaderSettings.Schemas%2A> свойство <xref:System.Xml.XmlReader> объекта.</span><span class="sxs-lookup"><span data-stu-id="235d4-1122">When an <xref:System.Xml.XmlDocument> object is initialized with XML data from an <xref:System.Xml.XmlReader> object, the <xref:System.Xml.Schema.XmlSchemaSet> object is loaded from the <xref:System.Xml.XmlReaderSettings.Schemas%2A> property of the <xref:System.Xml.XmlReader> object.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Xml.XmlDocument.Validate" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Validate">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="235d4-1123">Проверяет <see cref="T:System.Xml.XmlDocument" /> по схемам языка XSD, содержащимся в свойстве <see cref="P:System.Xml.XmlDocument.Schemas" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-1123">Validates the <see cref="T:System.Xml.XmlDocument" /> against the XML Schema Definition Language (XSD) schemas contained in the <see cref="P:System.Xml.XmlDocument.Schemas" /> property.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Validate">
      <MemberSignature Language="C#" Value="public void Validate (System.Xml.Schema.ValidationEventHandler validationEventHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Validate(class System.Xml.Schema.ValidationEventHandler validationEventHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.Validate(System.Xml.Schema.ValidationEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Validate(System::Xml::Schema::ValidationEventHandler ^ validationEventHandler);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="validationEventHandler" Type="System.Xml.Schema.ValidationEventHandler" />
      </Parameters>
      <Docs>
        <param name="validationEventHandler">
          <span data-ttu-id="235d4-1124">Объект <see cref="T:System.Xml.Schema.ValidationEventHandler" />, который получает сведения о предупреждениях и ошибках, возникающих при проверке схемы.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-1124">The <see cref="T:System.Xml.Schema.ValidationEventHandler" /> object that receives information about schema validation warnings and errors.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="235d4-1125">Проверяет <see cref="T:System.Xml.XmlDocument" /> по схемам языка XSD, содержащимся в свойстве <see cref="P:System.Xml.XmlDocument.Schemas" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-1125">Validates the <see cref="T:System.Xml.XmlDocument" /> against the XML Schema Definition Language (XSD) schemas contained in the <see cref="P:System.Xml.XmlDocument.Schemas" /> property.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="235d4-1126"><xref:System.Xml.XmlDocument.Validate%2A> Метод проверяет XML-данных в <xref:System.Xml.XmlDocument> по схемам, содержащимся в <xref:System.Xml.XmlDocument.Schemas%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="235d4-1126">The <xref:System.Xml.XmlDocument.Validate%2A> method validates the XML data in the <xref:System.Xml.XmlDocument> against the schemas contained in the <xref:System.Xml.XmlDocument.Schemas%2A> property.</span></span> <span data-ttu-id="235d4-1127"><xref:System.Xml.XmlDocument.Validate%2A> Метод выполняет приращение информационного набора.</span><span class="sxs-lookup"><span data-stu-id="235d4-1127">The <xref:System.Xml.XmlDocument.Validate%2A> method performs infoset augmentation.</span></span> <span data-ttu-id="235d4-1128">В частности после успешной проверки применяются настройки схемы по умолчанию, текстовые значения преобразуются в атомарные значения, и сведения о типах ассоциируются с проверенными информационными элементами.</span><span class="sxs-lookup"><span data-stu-id="235d4-1128">Specifically, after successful validation, schema defaults are applied, text values are converted to atomic values as necessary, and type information is associated with validated information items.</span></span> <span data-ttu-id="235d4-1129">Результатом является ранее нетипизированного XML поддерева в <xref:System.Xml.XmlDocument> заменены типизированное поддерево.</span><span class="sxs-lookup"><span data-stu-id="235d4-1129">The result is a previously un-typed XML sub-tree in the <xref:System.Xml.XmlDocument> replaced with a typed sub-tree.</span></span>  
  
 <span data-ttu-id="235d4-1130">Ниже перечислены важные замечания, которые необходимо учитывать при использовании <xref:System.Xml.XmlDocument.Validate%2A> метода.</span><span class="sxs-lookup"><span data-stu-id="235d4-1130">The following are important notes to consider when using the <xref:System.Xml.XmlDocument.Validate%2A> method.</span></span>  
  
-   <span data-ttu-id="235d4-1131">Указания по расположению схемы, например `xsi:schemaLocation` или `xsi:noNamespaceSchemaLocation` учитываются.</span><span class="sxs-lookup"><span data-stu-id="235d4-1131">Schema location hints like `xsi:schemaLocation` or `xsi:noNamespaceSchemaLocation` are ignored.</span></span>  
  
-   <span data-ttu-id="235d4-1132">Встроенные схемы игнорируются.</span><span class="sxs-lookup"><span data-stu-id="235d4-1132">Inline schemas are ignored.</span></span>  
  
-   <span data-ttu-id="235d4-1133">Если ошибки проверки схемы возникают во время проверки <xref:System.Xml.XmlDocument> становится частичной проверке некоторые узлы с информацией в правильный тип и без.</span><span class="sxs-lookup"><span data-stu-id="235d4-1133">If schema validation errors occur during validation the <xref:System.Xml.XmlDocument> becomes partially validated with some nodes with correct type information and some without.</span></span>  
  
-   <span data-ttu-id="235d4-1134">Процесс проверки включает проверку ограничений уникальности и ссылок (`xs:ID`, `xs:IDREF`, `xs:key`, `xs:keyref`, и `xs:unique`).</span><span class="sxs-lookup"><span data-stu-id="235d4-1134">The validation process includes checking for uniqueness and reference constraints (`xs:ID`, `xs:IDREF`, `xs:key`, `xs:keyref`, and `xs:unique`).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="235d4-1135">В следующем примере показано использование метода <xref:System.Xml.XmlDocument.Validate%2A>.</span><span class="sxs-lookup"><span data-stu-id="235d4-1135">The following example illustrates use of the <xref:System.Xml.XmlDocument.Validate%2A> method.</span></span> <span data-ttu-id="235d4-1136">В примере создается <xref:System.Xml.XmlDocument> , содержащий связанной схемы XSD с помощью <xref:System.Xml.XmlReaderSettings> и <xref:System.Xml.XmlReader> объектов.</span><span class="sxs-lookup"><span data-stu-id="235d4-1136">The example creates an <xref:System.Xml.XmlDocument> that contains an associated XSD schema using the <xref:System.Xml.XmlReaderSettings> and <xref:System.Xml.XmlReader> objects.</span></span> <span data-ttu-id="235d4-1137">Затем в примере используется <xref:System.Xml.XPath.XPathNavigator> класса для неправильного изменения типизированного значения элемента в XML-документе, формирования ошибки проверки схемы.</span><span class="sxs-lookup"><span data-stu-id="235d4-1137">The example then uses the <xref:System.Xml.XPath.XPathNavigator> class to incorrectly modify the typed value of an element in the XML document generating a schema validation error.</span></span>  
  
 [!code-cpp[XPathValidation#1](~/samples/snippets/cpp/VS_Snippets_Data/XPathValidation/CPP/XPathValidation.cpp#1)]
 [!code-csharp[XPathValidation#1](~/samples/snippets/csharp/VS_Snippets_Data/XPathValidation/CS/XPathValidation.cs#1)]
 [!code-vb[XPathValidation#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XPathValidation/VB/XPathValidation.vb#1)]  
  
 <span data-ttu-id="235d4-1138">В примере `contosoBooks.xml` и `contosoBooks.xsd` файлы в качестве входных данных.</span><span class="sxs-lookup"><span data-stu-id="235d4-1138">The example takes the `contosoBooks.xml` and `contosoBooks.xsd` files as input.</span></span>  
  
 [!code-xml[XPathXMLExamples#2](~/samples/snippets/xml/VS_Snippets_Data/XPathXMLExamples/XML/contosoBooks.xml#2)]  
  
 [!code-xml[XPathXMLExamples#3](~/samples/snippets/xml/VS_Snippets_Data/XPathXMLExamples/XML/contosoBooks.xsd#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Schema.XmlSchemaValidationException">
          <span data-ttu-id="235d4-1139">Возникло событие проверки схемы, и не задан объект <see cref="T:System.Xml.Schema.ValidationEventHandler" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-1139">A schema validation event occurred and no <see cref="T:System.Xml.Schema.ValidationEventHandler" /> object was specified.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Validate">
      <MemberSignature Language="C#" Value="public void Validate (System.Xml.Schema.ValidationEventHandler validationEventHandler, System.Xml.XmlNode nodeToValidate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Validate(class System.Xml.Schema.ValidationEventHandler validationEventHandler, class System.Xml.XmlNode nodeToValidate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.Validate(System.Xml.Schema.ValidationEventHandler,System.Xml.XmlNode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Validate(System::Xml::Schema::ValidationEventHandler ^ validationEventHandler, System::Xml::XmlNode ^ nodeToValidate);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="validationEventHandler" Type="System.Xml.Schema.ValidationEventHandler" />
        <Parameter Name="nodeToValidate" Type="System.Xml.XmlNode" />
      </Parameters>
      <Docs>
        <param name="validationEventHandler">
          <span data-ttu-id="235d4-1140">Объект <see cref="T:System.Xml.Schema.ValidationEventHandler" />, который получает сведения о предупреждениях и ошибках, возникающих при проверке схемы.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-1140">The <see cref="T:System.Xml.Schema.ValidationEventHandler" /> object that receives information about schema validation warnings and errors.</span>
          </span>
        </param>
        <param name="nodeToValidate">
          <span data-ttu-id="235d4-1141">Объект <see cref="T:System.Xml.XmlNode" />, созданный из <see cref="T:System.Xml.XmlDocument" /> в целях проверки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-1141">The <see cref="T:System.Xml.XmlNode" /> object created from an <see cref="T:System.Xml.XmlDocument" /> to validate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="235d4-1142">Проверяет указанный объект <see cref="T:System.Xml.XmlNode" /> по схемам языка XSD, содержащимся в свойстве <see cref="P:System.Xml.XmlDocument.Schemas" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-1142">Validates the <see cref="T:System.Xml.XmlNode" /> object specified against the XML Schema Definition Language (XSD) schemas in the <see cref="P:System.Xml.XmlDocument.Schemas" /> property.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="235d4-1143"><xref:System.Xml.XmlDocument.Validate%2A> Метод проверяет XML-данных в <xref:System.Xml.XmlNode> объекта по схемам, содержащимся в <xref:System.Xml.XmlDocument.Schemas%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="235d4-1143">The <xref:System.Xml.XmlDocument.Validate%2A> method validates the XML data in the <xref:System.Xml.XmlNode> object against the schemas contained in the <xref:System.Xml.XmlDocument.Schemas%2A> property.</span></span> <span data-ttu-id="235d4-1144"><xref:System.Xml.XmlDocument.Validate%2A> Метод выполняет приращение информационного набора.</span><span class="sxs-lookup"><span data-stu-id="235d4-1144">The <xref:System.Xml.XmlDocument.Validate%2A> method performs infoset augmentation.</span></span> <span data-ttu-id="235d4-1145">В частности после успешной проверки применяются настройки схемы по умолчанию, текстовые значения преобразуются в атомарные значения, и сведения о типах ассоциируются с проверенными информационными элементами.</span><span class="sxs-lookup"><span data-stu-id="235d4-1145">Specifically, after successful validation, schema defaults are applied, text values are converted to atomic values as necessary, and type information is associated with validated information items.</span></span> <span data-ttu-id="235d4-1146">Результатом является ранее нетипизированного XML поддерева в <xref:System.Xml.XmlDocument> заменены типизированное поддерево.</span><span class="sxs-lookup"><span data-stu-id="235d4-1146">The result is a previously un-typed XML sub-tree in the <xref:System.Xml.XmlDocument> replaced with a typed sub-tree.</span></span>  
  
 <span data-ttu-id="235d4-1147">Ниже перечислены важные замечания, которые необходимо учитывать при использовании <xref:System.Xml.XmlDocument.Validate%2A> метода.</span><span class="sxs-lookup"><span data-stu-id="235d4-1147">The following are important notes to consider when using the <xref:System.Xml.XmlDocument.Validate%2A> method.</span></span>  
  
-   <span data-ttu-id="235d4-1148">Указания по расположению схемы, например `xsi:schemaLocation` или `xsi:noNamespaceSchemaLocation` учитываются.</span><span class="sxs-lookup"><span data-stu-id="235d4-1148">Schema location hints like `xsi:schemaLocation` or `xsi:noNamespaceSchemaLocation` are ignored.</span></span>  
  
-   <span data-ttu-id="235d4-1149">Встроенные схемы игнорируются.</span><span class="sxs-lookup"><span data-stu-id="235d4-1149">Inline schemas are ignored.</span></span>  
  
-   <span data-ttu-id="235d4-1150">Если ошибки проверки схемы возникают во время проверки <xref:System.Xml.XmlDocument> становится частичной проверке некоторые узлы с информацией в правильный тип и без.</span><span class="sxs-lookup"><span data-stu-id="235d4-1150">If schema validation errors occur during validation the <xref:System.Xml.XmlDocument> becomes partially validated with some nodes with correct type information and some without.</span></span>  
  
 <span data-ttu-id="235d4-1151">Если проверяемый узел является корневым узлом, процесс проверки включает проверку ограничений уникальности и ссылок (`xs:ID`, `xs:IDREF`, `xs:key`, `xs:keyref`, и `xs:unique`); в противном случае уникальности и ссылок ограничения, опущены.</span><span class="sxs-lookup"><span data-stu-id="235d4-1151">If the node to validate is the root node, the validation process includes checking for uniqueness and reference constraints (`xs:ID`, `xs:IDREF`, `xs:key`, `xs:keyref`, and `xs:unique`); otherwise, uniqueness and reference constraints are omitted.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="235d4-1152">Пример <xref:System.Xml.XmlDocument.Validate%2A> метода, в разделе <xref:System.Xml.XmlDocument.Validate%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="235d4-1152">For an example of the <xref:System.Xml.XmlDocument.Validate%2A> method, see the <xref:System.Xml.XmlDocument.Validate%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="235d4-1153">Параметр объекта <see cref="T:System.Xml.XmlNode" /> не был создан из <see cref="T:System.Xml.XmlDocument" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-1153">The <see cref="T:System.Xml.XmlNode" /> object parameter was not created from an <see cref="T:System.Xml.XmlDocument" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="235d4-1154">Параметр объекта <see cref="T:System.Xml.XmlNode" /> не является элементом, атрибутом, фрагментом документа или корневым узлом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-1154">The <see cref="T:System.Xml.XmlNode" /> object parameter is not an element, attribute, document fragment, or the root node.</span>
          </span>
        </exception>
        <exception cref="T:System.Xml.Schema.XmlSchemaValidationException">
          <span data-ttu-id="235d4-1155">Возникло событие проверки схемы, и не задан объект <see cref="T:System.Xml.Schema.ValidationEventHandler" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-1155">A schema validation event occurred and no <see cref="T:System.Xml.Schema.ValidationEventHandler" /> object was specified.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteContentTo">
      <MemberSignature Language="C#" Value="public override void WriteContentTo (System.Xml.XmlWriter xw);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteContentTo(class System.Xml.XmlWriter xw) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.WriteContentTo(System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteContentTo (xw As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteContentTo(System::Xml::XmlWriter ^ xw);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xw" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="xw">
          <span data-ttu-id="235d4-1156">Объект <see langword="XmlWriter" />, в котором необходимо выполнить сохранение.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-1156">The <see langword="XmlWriter" /> to which you want to save.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="235d4-1157">Сохраняет все дочерние узлы узла <see langword="XmlDocument" /> в заданном <see cref="T:System.Xml.XmlWriter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-1157">Saves all the children of the <see langword="XmlDocument" /> node to the specified <see cref="T:System.Xml.XmlWriter" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="235d4-1158">Этот метод является расширением Microsoft для модели объекта документа (DOM).</span><span class="sxs-lookup"><span data-stu-id="235d4-1158">This method is a Microsoft extension to the Document Object Model (DOM).</span></span> <span data-ttu-id="235d4-1159">Это функционально эквивалентно <xref:System.Xml.XmlDocument.InnerXml%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="235d4-1159">It is functionally equivalent to the <xref:System.Xml.XmlDocument.InnerXml%2A> property.</span></span>  
  
 <span data-ttu-id="235d4-1160"><xref:System.Xml.XmlDeclaration.Encoding%2A?displayProperty=nameWithType> Свойство определяет кодировку, которая записывается. Если `Encoding` свойство не имеет значения, `XmlDocument` записывается без атрибута кодировки.</span><span class="sxs-lookup"><span data-stu-id="235d4-1160">The <xref:System.Xml.XmlDeclaration.Encoding%2A?displayProperty=nameWithType> property determines the encoding that is written out. If the `Encoding` property does not have a value, the `XmlDocument` is written out without an encoding attribute.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="235d4-1161">В следующем примере отображается на экране документ.</span><span class="sxs-lookup"><span data-stu-id="235d4-1161">The following example displays the document onscreen.</span></span>  
  
 [!code-cpp[Classic WebData XmlDocument.WriteContentTo Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlDocument.WriteContentTo Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlDocument.WriteContentTo Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlDocument.WriteContentTo Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlDocument.WriteContentTo Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlDocument.WriteContentTo Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteTo">
      <MemberSignature Language="C#" Value="public override void WriteTo (System.Xml.XmlWriter w);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteTo(class System.Xml.XmlWriter w) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.WriteTo(System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteTo (w As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteTo(System::Xml::XmlWriter ^ w);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="w" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="w">
          <span data-ttu-id="235d4-1162">Объект <see langword="XmlWriter" />, в котором необходимо выполнить сохранение.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-1162">The <see langword="XmlWriter" /> to which you want to save.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="235d4-1163">Сохраняет узел <see langword="XmlDocument" /> в заданном <see cref="T:System.Xml.XmlWriter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-1163">Saves the <see langword="XmlDocument" /> node to the specified <see cref="T:System.Xml.XmlWriter" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="235d4-1164">Этот метод является расширением Microsoft для модели объекта документа (DOM).</span><span class="sxs-lookup"><span data-stu-id="235d4-1164">This method is a Microsoft extension to the Document Object Model (DOM).</span></span> <span data-ttu-id="235d4-1165">Это функционально эквивалентно <xref:System.Xml.XmlNode.OuterXml%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="235d4-1165">It is functionally equivalent to the <xref:System.Xml.XmlNode.OuterXml%2A> property.</span></span>  
  
 <span data-ttu-id="235d4-1166"><xref:System.Xml.XmlDeclaration.Encoding%2A?displayProperty=nameWithType> Свойство определяет кодировку, которая записывается. Если `Encoding` свойство не имеет значения, `XmlDocument` записывается без атрибута кодировки.</span><span class="sxs-lookup"><span data-stu-id="235d4-1166">The <xref:System.Xml.XmlDeclaration.Encoding%2A?displayProperty=nameWithType> property determines the encoding that is written out. If the `Encoding` property does not have a value, the `XmlDocument` is written out without an encoding attribute.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="235d4-1167">В следующем примере отображается на экране документ.</span><span class="sxs-lookup"><span data-stu-id="235d4-1167">The following example displays the document onscreen.</span></span>  
  
 [!code-cpp[Classic WebData XmlDocument.WriteTo Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlDocument.WriteTo Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlDocument.WriteTo Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlDocument.WriteTo Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlDocument.WriteTo Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlDocument.WriteTo Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlResolver">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlResolver XmlResolver { set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlResolver XmlResolver" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlDocument.XmlResolver" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property XmlResolver As XmlResolver" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlResolver ^ XmlResolver {  void set(System::Xml::XmlResolver ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlResolver</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="235d4-1168">Задает <see cref="T:System.Xml.XmlResolver" />, используемый для разрешения внешних ресурсов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-1168">Sets the <see cref="T:System.Xml.XmlResolver" /> to use for resolving external resources.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="235d4-1169">Используемый <see langword="XmlResolver" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-1169">The <see langword="XmlResolver" /> to use.</span>
          </span>
          <span data-ttu-id="235d4-1170">Чтобы указать <see langword="XmlResolver" /> в .NET Framework версии 1.1, вызывающий объект должен быть надежным.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-1170">In version 1.1 of the.NET Framework, the caller must be fully trusted in order to specify an <see langword="XmlResolver" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="235d4-1171">`XmlResolver` Можно использовать для загрузки DTD или развертывания ссылок на сущности.</span><span class="sxs-lookup"><span data-stu-id="235d4-1171">The `XmlResolver` can be used to load DTDs or expand entity references.</span></span> <span data-ttu-id="235d4-1172">С помощью <xref:System.Xml.XmlResolver.Credentials%2A?displayProperty=nameWithType> свойства, можно задать учетные данные на `XmlResolver` для доступа к ресурсам, хранящейся на ресурсе безопасности сети.</span><span class="sxs-lookup"><span data-stu-id="235d4-1172">Using the <xref:System.Xml.XmlResolver.Credentials%2A?displayProperty=nameWithType> property, you can set credentials on the `XmlResolver` to access resources stored on a secure network resource.</span></span>  
  
-   <span data-ttu-id="235d4-1173">Если документ не был загружен с помощью <xref:System.Xml.XmlReader> (то есть, если он был загружен с помощью потока, файлов и так далее) `XmlResolver` на `XmlDocument` всегда используется.</span><span class="sxs-lookup"><span data-stu-id="235d4-1173">If the document was not loaded using an <xref:System.Xml.XmlReader> (that is, if it was loaded using a stream, file, and so on) the `XmlResolver` on the `XmlDocument` is always used.</span></span>  
  
-   <span data-ttu-id="235d4-1174">Если документ был загружен с <xref:System.Xml.XmlTextReader>, средство разрешения `XmlTextReader` используется для разрешения ссылок DTD в узел DocumentType.</span><span class="sxs-lookup"><span data-stu-id="235d4-1174">If the document was loaded with an <xref:System.Xml.XmlTextReader>, the resolver on the `XmlTextReader` is used to resolve any DTD references in the DocumentType node.</span></span> <span data-ttu-id="235d4-1175">Средство разрешения `XmlDocument` используется для расширения ссылок на сущности.</span><span class="sxs-lookup"><span data-stu-id="235d4-1175">The resolver on the `XmlDocument` is used to expand any entity references.</span></span>  
  
-   <span data-ttu-id="235d4-1176">Если документ был загружен с <xref:System.Xml.XmlValidatingReader>, средство разрешения `XmlDocument` никогда не используется.</span><span class="sxs-lookup"><span data-stu-id="235d4-1176">If the document was loaded with an <xref:System.Xml.XmlValidatingReader>, the resolver on the `XmlDocument` is never used.</span></span>  
  
-   <span data-ttu-id="235d4-1177">Если документ был загружен с классом, который расширяет `XmlReader` и `XmlReader` не может разрешать сущности (<xref:System.Xml.XmlReader.CanResolveEntity%2A> возвращает `false`), `XmlResolver` на `XmlDocument` используется для разрешения ссылок в узел DocumentType и расширения ссылок на сущности.</span><span class="sxs-lookup"><span data-stu-id="235d4-1177">If the document was loaded with a class that extends `XmlReader` and the `XmlReader` cannot resolve entities (<xref:System.Xml.XmlReader.CanResolveEntity%2A> returns `false`), the `XmlResolver` on the `XmlDocument` is used to resolve any references in the DocumentType node and to expand any entity references.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="235d4-1178">Если `XmlDocument` загружается с помощью <xref:System.Xml.XmlReader> которого было `XmlResolver` , равным `XmlResolver` на `XmlReader` не кэшируется `XmlDocument` после <xref:System.Xml.XmlDocument.Load%2A> завершения.</span><span class="sxs-lookup"><span data-stu-id="235d4-1178">If the `XmlDocument` is loaded using an <xref:System.Xml.XmlReader> which had an `XmlResolver` set to it, the `XmlResolver` on the `XmlReader` is not cached by the `XmlDocument` after <xref:System.Xml.XmlDocument.Load%2A> completes.</span></span>  
  
 <span data-ttu-id="235d4-1179">В.NET Framework версии 1.1, если это свойство не задано, уровень доверия приложения определяет поведение по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="235d4-1179">In version 1.1 of the.NET Framework, if this property is not set, the trust level of the application determines the default behavior.</span></span>  
  
 <span data-ttu-id="235d4-1180">`Fully trusted code:` В документе используется значение по умолчанию <xref:System.Xml.XmlUrlResolver> без учетных данных пользователя.</span><span class="sxs-lookup"><span data-stu-id="235d4-1180">`Fully trusted code:` The document uses a default <xref:System.Xml.XmlUrlResolver> with no user credentials.</span></span> <span data-ttu-id="235d4-1181">Если для доступа к сетевому ресурсу требуется проверка подлинности, используйте `XmlResolver` свойство, чтобы указать `XmlResolver` необходимые учетные данные.</span><span class="sxs-lookup"><span data-stu-id="235d4-1181">If authentication is required to access a network resource, use the `XmlResolver` property to specify an `XmlResolver` with the necessary credentials.</span></span>  
  
 <span data-ttu-id="235d4-1182">`Semi-trusted code:` `XmlResolver` Свойству `null`.</span><span class="sxs-lookup"><span data-stu-id="235d4-1182">`Semi-trusted code:` The `XmlResolver` property is set to `null`.</span></span> <span data-ttu-id="235d4-1183">Внешние ресурсы не разрешаются.</span><span class="sxs-lookup"><span data-stu-id="235d4-1183">External resources are not resolved.</span></span>  
  
 <span data-ttu-id="235d4-1184">Дополнительные сведения о безопасности и `XmlResolver` свойство, в разделе [разрешении внешних ресурсов](~/docs/standard/data/xml/resolving-external-resources.md).</span><span class="sxs-lookup"><span data-stu-id="235d4-1184">For more information on security and the `XmlResolver` property, see [Resolving External Resources](~/docs/standard/data/xml/resolving-external-resources.md).</span></span>  
  
 <span data-ttu-id="235d4-1185">Это свойство является расширением Microsoft для объектной модели документа (DOM).</span><span class="sxs-lookup"><span data-stu-id="235d4-1185">This property is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="235d4-1186">В следующем примере загружается XML-документ, который включает ссылку на файл DTD.</span><span class="sxs-lookup"><span data-stu-id="235d4-1186">The following example loads an XML document which includes a reference to a DTD file.</span></span> <span data-ttu-id="235d4-1187">`XmlResolver` Свойство используется для задания учетных данных для доступа к сетевому ресурсу.</span><span class="sxs-lookup"><span data-stu-id="235d4-1187">The `XmlResolver` property is used to set the credentials necessary to access the network resource.</span></span>  
  
 [!code-cpp[XmlDocument.XmlResolver#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlDocument.XmlResolver/CPP/docresolver.cpp#1)]
 [!code-csharp[XmlDocument.XmlResolver#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlDocument.XmlResolver/CS/docresolver.cs#1)]
 [!code-vb[XmlDocument.XmlResolver#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlDocument.XmlResolver/VB/docresolver.vb#1)]  
  
 <span data-ttu-id="235d4-1188">В примере следующие файлы данных в качестве входного.</span><span class="sxs-lookup"><span data-stu-id="235d4-1188">The example uses the following data files as input.</span></span>  
  
 `book5.xml`  
  
 [!code-xml[XmlDocument.XmlResolver#2](~/samples/snippets/xml/VS_Snippets_Data/XmlDocument.XmlResolver/XML/book5.xml#2)]  
  
 `books.dtd`  
  
 [!code-xml[XmlDocument.XmlResolver#3](~/samples/snippets/xml/VS_Snippets_Data/XmlDocument.XmlResolver/XML/books.dtd#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="235d4-1189">Этому свойству задается значение <see langword="null" />, и обнаружено внешнее определение DTD или сущность.</span>
          <span class="sxs-lookup">
            <span data-stu-id="235d4-1189">This property is set to <see langword="null" /> and an external DTD or entity is encountered.</span>
          </span>
        </exception>
        <altmember cref="P:System.Xml.XmlUrlResolver.Credentials" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Net.NetworkCredential" />
        <altmember cref="T:System.Xml.XmlSecureResolver" />
      </Docs>
    </Member>
  </Members>
</Type>