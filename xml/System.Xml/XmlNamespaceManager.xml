<Type Name="XmlNamespaceManager" FullName="System.Xml.XmlNamespaceManager">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c3b4e7960687e893975634b3ec27faff0af53db5" />
    <Meta Name="ms.sourcegitcommit" Value="3907f9a5780957d9c85af2e54c0a5bc2a5bf19ab" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="06/14/2018" />
    <Meta Name="ms.locfileid" Value="34245129" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class XmlNamespaceManager : System.Collections.IEnumerable, System.Xml.IXmlNamespaceResolver" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlNamespaceManager extends System.Object implements class System.Collections.IEnumerable, class System.Xml.IXmlNamespaceResolver" />
  <TypeSignature Language="DocId" Value="T:System.Xml.XmlNamespaceManager" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlNamespaceManager&#xA;Implements IEnumerable, IXmlNamespaceResolver" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlNamespaceManager : System::Collections::IEnumerable, System::Xml::IXmlNamespaceResolver" />
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Xml.IXmlNamespaceResolver</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Разрешает, добавляет и удаляет пространства имен из коллекции и обеспечивает управление областью для этих пространств имен.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Общие сведения о способ объявления пространств имен и используется в XML-документов см. в разделе [управление пространствами имен в XML-документ](~/docs/standard/data/xml/managing-namespaces-in-an-xml-document.md).  
  
 <xref:System.Xml.XmlNamespaceManager> хранятся в виде строк префиксы и пространства имен. Ниже приведена сводка задач, управлению и подстановке, которые можно выполнять с помощью этого класса. Дополнительные сведения и примеры см. в разделах справочника, посвященных каждому методу или свойству.  
  
|Кому|Использовать|  
|--------|---------|  
|Добавление пространства имен|Метод <xref:System.Xml.XmlNamespaceManager.AddNamespace%2A>|  
|Удаление пространства имен|Метод <xref:System.Xml.XmlNamespaceManager.RemoveNamespace%2A>|  
|Поиск URI для пространства имен по умолчанию|Свойство <xref:System.Xml.XmlNamespaceManager.DefaultNamespace%2A>|  
|Поиск URI для префикса пространства имен|Метод <xref:System.Xml.XmlNamespaceManager.LookupNamespace%2A>|  
|Поиск префикса для URI-кодов пространства имен|Метод <xref:System.Xml.XmlNamespaceManager.LookupPrefix%2A>|  
|Получение списка пространств имен, которые есть на текущем узле|Метод <xref:System.Xml.XmlNamespaceManager.GetNamespacesInScope%2A>|  
|Задание области видимости пространства имен|Методы <xref:System.Xml.XmlNamespaceManager.PushScope%2A> и <xref:System.Xml.XmlNamespaceManager.PopScope%2A>|  
|Проверка того, определен ли префикс в текущей области|Метод <xref:System.Xml.XmlNamespaceManager.HasNamespace%2A>|  
|Получение таблицы имен используется для поиска префиксов и URI|Свойство <xref:System.Xml.XmlNamespaceManager.NameTable%2A>|  
  
 Чтобы добавить пространства имен в диспетчер пространств имен, создать <xref:System.Xml.XmlNamespaceManager> объекта, а затем используйте <xref:System.Xml.XmlNamespaceManager.AddNamespace%2A> метод. Пары «префикс-пространство имен» по умолчанию автоматически добавляются в диспетчер пространств имен в момент создания.  
  
 При создании диспетчера пространства имен можно указать имя таблицы из <xref:System.Xml.XmlReader>, <xref:System.Xml.Xsl.XsltContext>, или <xref:System.Xml.XmlDocument> класса, а затем используйте <xref:System.Xml.XmlNamespaceManager.AddNamespace%2A> метод, чтобы добавить пространства имен.  
  
 Можно указать <xref:System.Xml.XmlNamespaceManager> объект в качестве параметра для <xref:System.Xml.XmlNode.SelectNodes%2A> или <xref:System.Xml.XmlNode.SelectSingleNode%2A> метод <xref:System.Xml.XmlDocument> класса для выполнения выражения запросов XPath, которые ссылаются на имена элементов и атрибутов, уточненное пространством имен.  
  
 Диспетчер пространств имен предполагает, что префиксы и пространства имен уже проверены и соответствуют [W3C для пространств имен](https://www.w3.org/TR/REC-xml-names/) спецификации. Диспетчер пространств имен не выполняет никакой проверки.  
  
 Диспетчер пространств имен разбивает строки при их добавлении с помощью <xref:System.Xml.XmlNamespaceManager.AddNamespace%2A> метод, и если выполняется поиск с помощью <xref:System.Xml.XmlNamespaceManager.LookupNamespace%2A> или <xref:System.Xml.XmlNamespaceManager.LookupPrefix%2A> метод.  
  
 Диспетчер пространств имен реализует поддержку перечисления в дополнение к добавлению и возврату пространств имен. Можно просмотреть сведения, сохраненные в диспетчер пространств имен с помощью `foreach` построения. Например, при создании пространства имен диспетчера с именем `nsmanager`, можно пройти по таблице с помощью `foreach (String prefix in nsmanager)`.  
  
 Поскольку диспетчер пространств имен выполняет сравнение строк с префиксом и пространствами имен в качестве объектов, он обеспечивает прирост производительности по сравнению с непосредственным сравнением строк.  
  
 В следующем примере кода показано, как привязать префикс `xsd` с URI пространства имен из `http://www.w3.org/2001/XMLSchema` и добавить его в диспетчер пространств имен:  
  
```vb  
nsmgr.AddNamespace("xsd", "http://www.w3.org/2001/XMLSchema")  
```  
  
```csharp  
nsmgr.AddNamespace("xsd", "http://www.w3.org/2001/XMLSchema");  
```  
  
 Пространство имен можно найти с помощью <xref:System.Xml.XmlNamespaceManager.LookupNamespace%2A> метод:  
  
```vb  
nsmgr.LookupNamespace("xsd")  
```  
  
```csharp  
nsmgr.LookupNamespace("xsd");  
```  
  
 В следующем примере создается <xref:System.Xml.XmlNamespaceManager> с помощью таблицы имен средства чтения XML:  
  
```vb  
Dim reader As New XmlTextReader("myfile.xml")  
Dim nsmanager As New XmlNamespaceManager(reader.NameTable)  
nsmanager.AddNamespace("msbooks", "www.microsoft.com/books")  
nsmanager.PushScope()  
nsmanager.AddNamespace("msstore", "www.microsoft.com/store")  
While reader.Read()  
    Console.WriteLine("Reader Prefix:{0}", reader.Prefix)  
    Console.WriteLine("XmlNamespaceManager Prefix:{0}",  
     nsmanager.LookupPrefix(nsmanager.NameTable.Get(reader.NamespaceURI)))  
End While  
```  
  
```csharp  
XmlTextReader reader = new XmlTextReader("myfile.xml");  
XmlNamespaceManager nsmanager = new XmlNamespaceManager(reader.NameTable);  
nsmanager.AddNamespace("msbooks", "www.microsoft.com/books");  
nsmanager.PushScope();  
nsmanager.AddNamespace("msstore", "www.microsoft.com/store");  
while (reader.Read())  
{  
    Console.WriteLine("Reader Prefix:{0}", reader.Prefix);  
    Console.WriteLine("XmlNamespaceManager Prefix:{0}",  
    nsmanager.LookupPrefix(nsmanager.NameTable.Get(reader.NamespaceURI)));  
}  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlNamespaceManager (System.Xml.XmlNameTable nameTable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.XmlNameTable nameTable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNamespaceManager.#ctor(System.Xml.XmlNameTable)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (nameTable As XmlNameTable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlNamespaceManager(System::Xml::XmlNameTable ^ nameTable);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="nameTable" Type="System.Xml.XmlNameTable" />
      </Parameters>
      <Docs>
        <param name="nameTable">Используемый <see cref="T:System.Xml.XmlNameTable" />.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.XmlNamespaceManager" /> указанным значением <see cref="T:System.Xml.XmlNameTable" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Имя таблицы используется для поиска префиксов и пространств имен. Существующая таблица имен с предварительно атомизированные строки можно указать в конструкторе. При этом существует несколько преимуществ. Например если таблицы имен <xref:System.Xml.XmlReader> объекта используется, после каждого чтения любого пространства имен и префикс строки помещаются в таблицу имен могут повторно использоваться <xref:System.Xml.XmlNamespaceManager>.  
  
 Дополнительные сведения об атомизированных строках см. в разделе <xref:System.Xml.XmlNameTable>.  
  
> [!NOTE]
>  Если указать имя существующей таблицы, все пространства имен в таблице имен не добавляются автоматически <xref:System.Xml.XmlNamespaceManager>. Необходимо использовать <xref:System.Xml.XmlNamespaceManager.AddNamespace%2A> и <xref:System.Xml.XmlNamespaceManager.RemoveNamespace%2A> для добавления или удаления пространств имен.  
  
   
  
## Examples  
 В следующем примере создается <xref:System.Xml.XmlNamespaceManager> с помощью таблицы имен средства чтения.  
  
 [!code-cpp[Classic WebData XmlNamespaceManager.XmlNamespaceManager Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNamespaceManager.XmlNamespaceManager Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNamespaceManager.XmlNamespaceManager Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNamespaceManager.XmlNamespaceManager Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNamespaceManager.XmlNamespaceManager Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNamespaceManager.XmlNamespaceManager Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NullReferenceException">Значение <see langword="null" /> передается конструктору.</exception>
      </Docs>
    </Member>
    <Member MemberName="AddNamespace">
      <MemberSignature Language="C#" Value="public virtual void AddNamespace (string prefix, string uri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddNamespace(string prefix, string uri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNamespaceManager.AddNamespace(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddNamespace (prefix As String, uri As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddNamespace(System::String ^ prefix, System::String ^ uri);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
        <Parameter Name="uri" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="prefix">Префикс, который требуется связать с добавляемым пространством имен. Используйте String.Empty для добавления пространства имен по умолчанию.  **Примечание.**Если объект <see cref="T:System.Xml.XmlNamespaceManager" /> будет использоваться для разрешения пространств имен в выражении языка XPath, необходимо указать префикс. Если выражение XPath не содержит префикс, предполагается, что универсальным кодом ресурса (URI) для пространства имен является пустое пространство имен. Дополнительные сведения о выражениях языка XPath и <see cref="T:System.Xml.XmlNamespaceManager" /> см. в разделах с описанием методов <see cref="M:System.Xml.XmlNode.SelectNodes(System.String)" /> и <see cref="M:System.Xml.XPath.XPathExpression.SetContext(System.Xml.XmlNamespaceManager)" />.</param>
        <param name="uri">Добавляемое пространство имен.</param>
        <summary>Добавляет заданное пространство имен в коллекцию.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xml.XmlNamespaceManager> не проверяет `prefix` и `uri` на соответствие.  
  
 <xref:System.Xml.XmlReader> проверяет имена, включая префиксы и пространства имен, чтобы они являются допустимыми именами XML в соответствии с консорциума World Wide Web (W3C) [спецификации пространств имен](https://www.w3.org/TR/REC-xml-names/). <xref:System.Xml.XmlNamespaceManager> используется внутренним образом <xref:System.Xml.XmlReader>, таким образом, чтобы избежать дублирования усилия, <xref:System.Xml.XmlNamespaceManager> предполагается допустимы все префиксы и пространства имен.  
  
 Если префикс и пространство имен уже существует в текущей области, новая пара префикс пространства имен и заменит существующее сочетание префикса и пространства имен. Одинаковый префикс и сочетание имен может существовать в разных областях.  
  
 По умолчанию добавляются следующие пары префикс-пространство имен <xref:System.Xml.XmlNamespaceManager>. Они могут быть определены в любой области.  
  
|Префикс|Пространство имен|  
|------------|---------------|  
|xmlns|http://www.w3.org/2000/xmlns/ (xmlns префикс пространства имен)|  
|xml|http://www.w3.org/XML/1998/namespace (пространство имен XML)|  
|String.Empty|String.Empty (пустое пространство имен). Это значение может быть повторно назначен другой префикс. Например, xmlns = "» определяет пространство имен по умолчанию пустое пространство имен|  
  
   
  
## Examples  
 В следующем примере используется <xref:System.Xml.XmlNamespaceManager> для разрешения пространства имен во фрагменте XML.  
  
 [!code-csharp[Classic WebData XmlNamespaceManager.AddNamespace Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNamespaceManager.AddNamespace Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNamespaceManager.AddNamespace Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNamespaceManager.AddNamespace Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Значение параметра <paramref name="prefix" /> — "xml" или "xmlns".</exception>
        <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="prefix" /> или <paramref name="uri" /> — <see langword="null" />.</exception>
        <altmember cref="M:System.Xml.XmlNamespaceManager.RemoveNamespace(System.String,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="DefaultNamespace">
      <MemberSignature Language="C#" Value="public virtual string DefaultNamespace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DefaultNamespace" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNamespaceManager.DefaultNamespace" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property DefaultNamespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DefaultNamespace { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает универсальный код ресурса (URI) для пространства имен по умолчанию.</summary>
        <value>Возвращает URI для пространства имен по умолчанию или String.Empty, если пространство имен по умолчанию отсутствует.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод эквивалентен методу вызова LookupNamespace(String.Empty).  
  
   
  
## Examples  
 Следующий пример отображает пространство имен по умолчанию, если он существует.  
  
 [!code-cpp[Classic WebData XmlNamespaceManager.DefaultNamespace Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNamespaceManager.DefaultNamespace Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNamespaceManager.DefaultNamespace Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNamespaceManager.DefaultNamespace Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNamespaceManager.DefaultNamespace Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNamespaceManager.DefaultNamespace Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Xml.XmlNamespaceManager.LookupNamespace(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public virtual System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNamespaceManager.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Возвращает перечислитель для выполнения итерации по пространствам имен в объекте <see cref="T:System.Xml.XmlNamespaceManager" />.</summary>
        <returns>Перечислитель <see cref="T:System.Collections.IEnumerator" />, содержащий префиксы, которые хранятся объектом <see cref="T:System.Xml.XmlNamespaceManager" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Следующий код показывает, как использовать <xref:System.Collections.IEnumerator> для просмотра всех пар имен хранятся в <xref:System.Xml.XmlNamespaceManager> объекта.  
  
```vb  
Dim nsEnum As IEnumerator = nsmgr.GetEnumerator()  
Do While nsEnum.MoveNext  
  If nsEnum.Current <> "" Then  
    MsgBox("xmlns:" + nsEnum.Current + "=" + nsmgr.LookupNamespace(nsEnum.Current))  
  End If  
Loop  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNamespacesInScope">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IDictionary&lt;string,string&gt; GetNamespacesInScope (System.Xml.XmlNamespaceScope scope);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IDictionary`2&lt;string, string&gt; GetNamespacesInScope(valuetype System.Xml.XmlNamespaceScope scope) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNamespaceManager.GetNamespacesInScope(System.Xml.XmlNamespaceScope)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetNamespacesInScope (scope As XmlNamespaceScope) As IDictionary(Of String, String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ GetNamespacesInScope(System::Xml::XmlNamespaceScope scope);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Xml.IXmlNamespaceResolver.GetNamespacesInScope(System.Xml.XmlNamespaceScope)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scope" Type="System.Xml.XmlNamespaceScope" />
      </Parameters>
      <Docs>
        <param name="scope">Значение перечисления, указывающее тип узлов пространств имен, которые требуется возвратить.</param>
        <summary>Возвращает коллекцию пространств имен, уникальными идентификаторами которых являются префиксы, используемые для перечисления пространств имен в текущей области видимости.</summary>
        <returns>Коллекция пар префикс-пространство имен в текущей области видимости.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Словарь состоит из коллекции имен пространств имен, отсортированных по префиксу. Он может использоваться для перечисления пространств имен в области видимости. Словарь является отключенной копией списка пространств имен. Он остается неизменным при изменении текущего списка пространств имен в области.  
  
 В следующей таблице показано, как <xref:System.Xml.XmlNamespaceScope> значения влияют на пространства имен, возвращаемый <xref:System.Xml.XmlNamespaceManager.GetNamespacesInScope%2A> метод.  
  
|Значение XmlNamespaceScope|xmlns: XML|xmlns:xmlns|xmlns =»»|  
|-----------------------------|---------------|-----------------|---------------|  
|`All`|Да|Нет|Нет|  
|`ExcludeXml`|Нет|Нет|Нет|  
|`Local`|Нет|Нет|Да|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasNamespace">
      <MemberSignature Language="C#" Value="public virtual bool HasNamespace (string prefix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool HasNamespace(string prefix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNamespaceManager.HasNamespace(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function HasNamespace (prefix As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool HasNamespace(System::String ^ prefix);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="prefix">Префикс пространства имен, которое нужно найти.</param>
        <summary>Возвращает значение, указывающее, определено ли пространство имен для указанного префикса в текущей области видимости, занесенной в стек.</summary>
        <returns>Значение <see langword="true" />, если пространство имен определено; в противном случае — значение <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Чтобы определить, существует ли определенный пустое пространство имен по умолчанию, задайте `prefix` значение String.Empty. Возвращаемое значение `true` указывает, что пространство имен по умолчанию, определенные в текущей области; `false` указывает, что пространство имен по умолчанию не определен.  
  
> [!NOTE]
>  xmlns: x = «» не допускается в соответствии с [W3C для пространств имен](https://www.w3.org/TR/REC-xml-names/) рекомендации.  
  
   
  
## Examples  
 Следующий пример отображает пространство имен по умолчанию, если он существует.  
  
 [!code-cpp[Classic WebData XmlNamespaceManager.DefaultNamespace Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNamespaceManager.DefaultNamespace Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNamespaceManager.DefaultNamespace Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNamespaceManager.DefaultNamespace Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNamespaceManager.DefaultNamespace Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNamespaceManager.DefaultNamespace Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupNamespace">
      <MemberSignature Language="C#" Value="public virtual string LookupNamespace (string prefix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string LookupNamespace(string prefix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNamespaceManager.LookupNamespace(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function LookupNamespace (prefix As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ LookupNamespace(System::String ^ prefix);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Xml.IXmlNamespaceResolver.LookupNamespace(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="prefix">Префикс, для которого требуется разрешить URI пространства имен. Чтобы сопоставить пространство имен по умолчанию, необходимо передать String.Empty.</param>
        <summary>Возвращает URI пространства имен для указанного префикса.</summary>
        <returns>Возвращает универсальный код ресурса (URI) пространства имен для префикса <paramref name="prefix" /> или значение <see langword="null" />, если нет сопоставленного пространства имен. Возвращаемая строка является атомизированной.  Дополнительные сведения об атомизированных строках см. в описании класса <see cref="T:System.Xml.XmlNameTable" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 В следующем примере добавляется пар префикс-пространство имен для <xref:System.Xml.XmlNamespaceManager>, а затем отображает все пары в коллекции.  
  
 [!code-cpp[Classic WebData XmlNamespaceManager.PopScope Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNamespaceManager.PopScope Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNamespaceManager.PopScope Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNamespaceManager.PopScope Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNamespaceManager.PopScope Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNamespaceManager.PopScope Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Xml.XmlNamespaceManager.LookupPrefix(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="LookupPrefix">
      <MemberSignature Language="C#" Value="public virtual string LookupPrefix (string uri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string LookupPrefix(string uri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNamespaceManager.LookupPrefix(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function LookupPrefix (uri As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ LookupPrefix(System::String ^ uri);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Xml.IXmlNamespaceResolver.LookupPrefix(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="uri">Пространство имен, которое необходимо разрешить для получения префикса.</param>
        <summary>Находит префикс, объявленный для заданного URI пространства имен.</summary>
        <returns>Соответствующий префикс. Если нет сопоставленного префикса, данный метод возвращает String.Empty. Если предоставляется значение NULL, возвращается тоже значение <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод выполняет поиск сопоставленного префикса путем прохода по стеку (то есть выглядит глобально). Предоставленная строка необходимо разделены для успешного завершения поиска. Другими словами, указанном строковом объекте должен существовать в таблице имен диспетчера пространства имен (<xref:System.Xml.XmlNamespaceManager.NameTable%2A>).  
  
 Возвращаемая строка также атомарными. Дополнительные сведения об атомизированных строках см. в описании класса <xref:System.Xml.XmlNameTable>.  
  
   
  
## Examples  
 В следующем примере показано, как использовать <xref:System.Xml.XmlNamespaceManager.LookupPrefix%2A> метод при записи атрибута. Она использует <xref:System.Xml.XmlWriter.WriteStartAttribute%2A?displayProperty=nameWithType> метода для запуска атрибут, выполняет поиск префикса для `urn:samples` URI пространства имен и затем использует этот префикс в <xref:System.Xml.XmlWriter.WriteStartAttribute%2A?displayProperty=nameWithType> при написании `ISBN` атрибута:  
  
```vb  
Dim prefix As String = nsMgr.LookupPrefix("urn:samples")  
writer.WriteStartAttribute(prefix, "ISBN", "urn:samples")  
  
```  
  
```csharp  
XmlNameTable nt = new XmlNameTable();  
XmlNamespaceManager nsMgr = new XmlNamespaceManager(nt);  
nsMgr.AddNamespace("bk","urn:samples");string prefix = writer nsMgr.LookupPrefix("urn:samples");  
writer.WriteStartAttribute(prefix, "ISBN", "urn:samples");  
```  
  
 В следующем примере используется <xref:System.Xml.XmlNamespaceManager.LookupPrefix%2A> найти префикс, определенный на элементе.  
  
```vb  
writer.WriteStartElement("root", "book")  
writer.WriteStartElement("x", "node", "author")  
s = writer.LookupPrefix("author")  
CError.Compare(s, "x", "Error in nested element")  
writer.WriteEndElement()  
s = writer.LookupPrefix("book")  
CError.Compare(s, Nothing, "Error in root element")  
writer.WriteEndElement()  
  
```  
  
 **Вывод**  
  
```  
<root xmlns="book">  
  <x:node xmlns:x="author" />   
</root>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Xml.XmlNamespaceManager.LookupNamespace(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="NameTable">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlNameTable NameTable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlNameTable NameTable" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNamespaceManager.NameTable" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property NameTable As XmlNameTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlNameTable ^ NameTable { System::Xml::XmlNameTable ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNameTable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает объект <see cref="T:System.Xml.XmlNameTable" />, связанный с данным объектом.</summary>
        <value>Диспетчер <see cref="T:System.Xml.XmlNameTable" />, используемый этим объектом.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Имя таблицы используется для поиска префиксов и URI пространства имен.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="PopScope">
      <MemberSignature Language="C#" Value="public virtual bool PopScope ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool PopScope() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNamespaceManager.PopScope" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function PopScope () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool PopScope();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Извлекает из стека область видимости пространства имен.</summary>
        <returns>Значение <see langword="true" />, если в стеке остались области пространств имен; значение <see langword="false" />, если больше нет пространств имен, которые требуется извлечь.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При вызове этого метода все пространства имен, которые были добавлены <xref:System.Xml.XmlNamespaceManager> (путем вызова <xref:System.Xml.XmlNamespaceManager.AddNamespace%2A>) с момента последнего вызова <xref:System.Xml.XmlNamespaceManager.PopScope%2A> удаляются.  
  
   
  
## Examples  
 В следующем примере добавляется пар префикс-пространство имен для <xref:System.Xml.XmlNamespaceManager> , а затем отображает все пары в коллекции.  
  
 [!code-cpp[Classic WebData XmlNamespaceManager.PopScope Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNamespaceManager.PopScope Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNamespaceManager.PopScope Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNamespaceManager.PopScope Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNamespaceManager.PopScope Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNamespaceManager.PopScope Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Xml.XmlNamespaceManager.PushScope" />
      </Docs>
    </Member>
    <Member MemberName="PushScope">
      <MemberSignature Language="C#" Value="public virtual void PushScope ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PushScope() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNamespaceManager.PushScope" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub PushScope ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void PushScope();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Заносит область видимости пространства имен в стек.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 После вызова этого метода все пространства имен, которые добавляются к <xref:System.Xml.XmlNamespaceManager> (путем вызова <xref:System.Xml.XmlNamespaceManager.AddNamespace%2A>), принадлежит к области имен занесенный в стек.  
  
   
  
## Examples  
 В следующем примере добавляется пар префикс-пространство имен для <xref:System.Xml.XmlNamespaceManager> , а затем отображает все пары в коллекции.  
  
 [!code-cpp[Classic WebData XmlNamespaceManager.PopScope Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNamespaceManager.PopScope Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNamespaceManager.PopScope Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNamespaceManager.PopScope Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNamespaceManager.PopScope Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNamespaceManager.PopScope Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Xml.XmlNamespaceManager.PopScope" />
      </Docs>
    </Member>
    <Member MemberName="RemoveNamespace">
      <MemberSignature Language="C#" Value="public virtual void RemoveNamespace (string prefix, string uri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveNamespace(string prefix, string uri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNamespaceManager.RemoveNamespace(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RemoveNamespace (prefix As String, uri As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveNamespace(System::String ^ prefix, System::String ^ uri);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
        <Parameter Name="uri" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="prefix">Префикс пространства имен.</param>
        <param name="uri">Пространство имен, которое требуется удалить по указанному префиксу. Пространство имен удаляется из текущей области видимости пространств имен. Пространства имен вне текущей области видимости игнорируются.</param>
        <summary>Удаляет заданное пространство имен с указанным префиксом.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="prefix" /> или <paramref name="uri" /> — <see langword="null" />.</exception>
        <altmember cref="M:System.Xml.XmlNamespaceManager.AddNamespace(System.String,System.String)" />
      </Docs>
    </Member>
  </Members>
</Type>