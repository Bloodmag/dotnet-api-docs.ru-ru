<Type Name="XmlTextWriter" FullName="System.Xml.XmlTextWriter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="0264406a0216c763baf669d9902ae176ca218090" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39926472" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class XmlTextWriter : System.Xml.XmlWriter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlTextWriter extends System.Xml.XmlWriter" />
  <TypeSignature Language="DocId" Value="T:System.Xml.XmlTextWriter" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlTextWriter&#xA;Inherits XmlWriter" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlTextWriter : System::Xml::XmlWriter" />
  <TypeSignature Language="F#" Value="type XmlTextWriter = class&#xA;    inherit XmlWriter" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Xml.XmlWriter</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0">
      <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8">
      <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="0c971-101">Представляет средство записи, предоставляющее способ быстрого прямого создания потоков (без кэширования) или файлов с данными XML, которые соответствуют рекомендациям консорциума W3C по языку XML версии 1.0 и пространств имен в XML.</span>
      <span class="sxs-lookup">
        <span data-stu-id="0c971-101">Represents a writer that provides a fast, non-cached, forward-only way of generating streams or files containing XML data that conforms to the W3C Extensible Markup Language (XML) 1.0 and the Namespaces in XML recommendations.</span>
      </span>
      <span data-ttu-id="0c971-102">Начиная с .NET Framework версии 2.0 рекомендуется использовать класс <see cref="T:System.Xml.XmlWriter" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="0c971-102">Starting with the .NET Framework 2.0, we recommend that you use the <see cref="T:System.Xml.XmlWriter" /> class instead.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c971-103">Этот класс реализует <xref:System.Xml.XmlWriter> класса.</span><span class="sxs-lookup"><span data-stu-id="0c971-103">This class implements the <xref:System.Xml.XmlWriter> class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0c971-104">Начиная с .NET Framework 2.0, мы рекомендуем создать <xref:System.Xml.XmlWriter> экземпляров с помощью <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> метод и <xref:System.Xml.XmlWriterSettings> класс, чтобы воспользоваться преимуществами новых функциональных возможностей.</span><span class="sxs-lookup"><span data-stu-id="0c971-104">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="0c971-105">`XmlTextWriter` хранит стек пространств имен, соответствующий всем пространствам имен, определенные в текущем стеке элементов.</span><span class="sxs-lookup"><span data-stu-id="0c971-105">`XmlTextWriter` maintains a namespace stack corresponding to all the namespaces defined in the current element stack.</span></span> <span data-ttu-id="0c971-106">С помощью `XmlTextWriter` пространства имен можно объявить вручную.</span><span class="sxs-lookup"><span data-stu-id="0c971-106">Using `XmlTextWriter` you can declare namespaces manually.</span></span>  
  
```csharp  
w.WriteStartElement("root");  
w.WriteAttributeString("xmlns", "x", null, "urn:1");  
 w.WriteStartElement("item","urn:1");  
 w.WriteEndElement();  
 w.WriteStartElement("item","urn:1");  
 w.WriteEndElement();  
w.WriteEndElement();  
```  
  
 <span data-ttu-id="0c971-107">Этот код C# создает следующие выходные данные.</span><span class="sxs-lookup"><span data-stu-id="0c971-107">The above C# code produces the following output.</span></span> <span data-ttu-id="0c971-108">`XmlTextWriter` повышает уровень объявление пространства имен для корневого элемента, чтобы предотвратить его дублируются на двух дочерних элементах.</span><span class="sxs-lookup"><span data-stu-id="0c971-108">`XmlTextWriter` promotes the namespace declaration to the root element to avoid having it duplicated on the two child elements.</span></span> <span data-ttu-id="0c971-109">Дочерние элементы получают префикс из декларации пространства имен.</span><span class="sxs-lookup"><span data-stu-id="0c971-109">The child elements pick up the prefix from the namespace declaration.</span></span>  
  
```xml  
<root xmlns:x="urn:1">  
 <x:item/>  
 <x:item/>  
</x:root>  
```  
  
 <span data-ttu-id="0c971-110">`XmlTextWriter` также можно переопределить текущее объявление пространства имен.</span><span class="sxs-lookup"><span data-stu-id="0c971-110">`XmlTextWriter` also allows you to override the current namespace declaration.</span></span> <span data-ttu-id="0c971-111">В следующем примере пространство имен URI «123» переопределяется «abc» для создания XML-элемента `<x:node xmlns:x="abc"/>`.</span><span class="sxs-lookup"><span data-stu-id="0c971-111">In the following example, the namespace URI "123" is overridden by "abc" to produce the XML element `<x:node xmlns:x="abc"/>`.</span></span>  
  
```csharp  
w.WriteStartElement("x","node","123");  
w.WriteAttributeString("xmlns","x",null,"abc");  
```  
  
 <span data-ttu-id="0c971-112">С помощью методов записи, которые принимают префикс в качестве аргумента можно указать префикс для использования.</span><span class="sxs-lookup"><span data-stu-id="0c971-112">By using the write methods that take a prefix as an argument you can also specify which prefix to use.</span></span> <span data-ttu-id="0c971-113">В следующем примере две разные префиксы сопоставляются то же пространство имен URI для создания XML-текст `<x:root xmlns:x="urn:1"><y:item xmlns:y="urn:1"/></x:root>`.</span><span class="sxs-lookup"><span data-stu-id="0c971-113">In the following example, two different prefixes are mapped to the same namespace URI to produce the XML text `<x:root xmlns:x="urn:1"><y:item xmlns:y="urn:1"/></x:root>`.</span></span>  
  
```csharp  
XmlTextWriter w = new XmlTextWriter(Console.Out);  
w.WriteStartElement("x","root","urn:1");  
 w.WriteStartElement("y","item","urn:1");  
 w.WriteEndElement();  
w.WriteEndElement();  
w.Close();  
```  
  
 <span data-ttu-id="0c971-114">Если существует несколько объявлений пространства имен, сопоставляющих различные префиксы имен URI, `XmlTextWriter` проходит стека деклараций пространств имен в обратном направлении и выбирает ближайшее из них.</span><span class="sxs-lookup"><span data-stu-id="0c971-114">If there are multiple namespace declarations mapping different prefixes to the same namespace URI, `XmlTextWriter` walks the stack of namespace declarations backwards and picks the closest one.</span></span>  
  
```csharp  
XmlTextWriter w = new XmlTextWriter(Console.Out);  
w.Formatting = Formatting.Indented;  
w.WriteStartElement("x","root","urn:1");  
w.WriteStartElement("y","item","urn:1");  
w.WriteAttributeString("attr","urn:1","123");  
w.WriteEndElement();  
w.WriteEndElement();  
w.Close();  
```  
  
 <span data-ttu-id="0c971-115">В приведенном выше коде C# так как `WriteAttributeString` вызова не определяет префикс, средство записи использует последний префикс, помещаемый в стек пространств имен и создает следующий XML:</span><span class="sxs-lookup"><span data-stu-id="0c971-115">In the above C# example, because the `WriteAttributeString` call does not specify a prefix, the writer uses the last prefix pushed onto the namespace stack, and produces the following XML:</span></span>  
  
```xml  
<x:root xmlns:x="urn:1">  
 <y:item y:attr="123" xmlns:y="urn:1" />  
</x:root>  
```  
  
 <span data-ttu-id="0c971-116">При возникновении конфликтов имен `XmlTextWriter` разрешает их путем формирования альтернативных префиксов.</span><span class="sxs-lookup"><span data-stu-id="0c971-116">If namespace conflicts occur, `XmlTextWriter` resolves them by generating alternate prefixes.</span></span> <span data-ttu-id="0c971-117">Например, если атрибут и элемент имеют одинаковые префиксы, но разные пространства имен, `XmlWriter` создает альтернативный префикс для атрибута.</span><span class="sxs-lookup"><span data-stu-id="0c971-117">For example, if an attribute and element have the same prefix but different namespaces, `XmlWriter` generates an alternate prefix for the attribute.</span></span> <span data-ttu-id="0c971-118">Созданные префиксы именуются `n{i}` где `i` является число, начиная с 1.</span><span class="sxs-lookup"><span data-stu-id="0c971-118">The generated prefixes are named `n{i}` where `i` is a number beginning at 1.</span></span> <span data-ttu-id="0c971-119">Счетчик сбрасывается в значение 1 для каждого элемента.</span><span class="sxs-lookup"><span data-stu-id="0c971-119">The number is reset to 1 for each element.</span></span>  
  
 <span data-ttu-id="0c971-120">Атрибуты, связанные с URI пространства имен должен иметь префикс (по умолчанию, которые не применяются к атрибутам пространства имен).</span><span class="sxs-lookup"><span data-stu-id="0c971-120">Attributes which are associated with a namespace URI must have a prefix (default namespaces do not apply to attributes).</span></span> <span data-ttu-id="0c971-121">Это соответствует раздел 5.2 W3C по пространствам имен в XML.</span><span class="sxs-lookup"><span data-stu-id="0c971-121">This conforms to section 5.2 of the W3C Namespaces in XML recommendation.</span></span> <span data-ttu-id="0c971-122">Если атрибут ссылается на URI пространства имен, но не содержит префикс, средство записи создает префикс для атрибута.</span><span class="sxs-lookup"><span data-stu-id="0c971-122">If an attribute references a namespace URI, but does not specify a prefix, the writer generates a prefix for the attribute.</span></span>  
  
 <span data-ttu-id="0c971-123">При написании пустой элемент, пустое пространство добавляется между именем тега и закрывающий тег, например `<item />`.</span><span class="sxs-lookup"><span data-stu-id="0c971-123">When writing an empty element, an additional space is added between tag name and the closing tag, for example `<item />`.</span></span> <span data-ttu-id="0c971-124">Это обеспечивает совместимость со старыми браузерами.</span><span class="sxs-lookup"><span data-stu-id="0c971-124">This provides compatibility with older browsers.</span></span>  
  
 <span data-ttu-id="0c971-125">Когда `String` используется в качестве параметра метода, `null` и `String.Empty` эквивалентны.</span><span class="sxs-lookup"><span data-stu-id="0c971-125">When a `String` is used as method parameter, `null` and `String.Empty` are equivalent.</span></span> <span data-ttu-id="0c971-126">`String.Empty` следует правилам консорциума W3C.</span><span class="sxs-lookup"><span data-stu-id="0c971-126">`String.Empty` follows the W3C rules.</span></span>  
  
 <span data-ttu-id="0c971-127">Для создания строго типизированных данных, используйте <xref:System.Xml.XmlConvert> класс для преобразования типов данных в строку.</span><span class="sxs-lookup"><span data-stu-id="0c971-127">To write strongly typed data, use the <xref:System.Xml.XmlConvert> class to convert data types to string.</span></span> <span data-ttu-id="0c971-128">Например, следующий код C# преобразует данные из `Double` для `String` и записывает элемент `<price>19.95</price>`.</span><span class="sxs-lookup"><span data-stu-id="0c971-128">For example, the following C# code converts the data from `Double` to `String` and writes the element `<price>19.95</price>`.</span></span>  
  
```csharp  
Double price = 19.95;  
writer.WriteElementString("price", XmlConvert.ToString(price));  
```  
  
 <span data-ttu-id="0c971-129">`XmlTextWriter` не проверьте следующее:</span><span class="sxs-lookup"><span data-stu-id="0c971-129">`XmlTextWriter` does not check for the following:</span></span>  
  
-   <span data-ttu-id="0c971-130">Недопустимые символы в именах элементов и атрибутов.</span><span class="sxs-lookup"><span data-stu-id="0c971-130">Invalid characters in attribute and element names.</span></span>  
  
-   <span data-ttu-id="0c971-131">Символы Юникода, которые не соответствуют указанной кодировке.</span><span class="sxs-lookup"><span data-stu-id="0c971-131">Unicode characters that do not fit the specified encoding.</span></span> <span data-ttu-id="0c971-132">Если символы Юникода не соответствуют указанной кодировки, `XmlTextWriter` escape-последовательности символов Юникода в сущности знаков.</span><span class="sxs-lookup"><span data-stu-id="0c971-132">If the Unicode characters do not fit the specified encoding, the `XmlTextWriter` does not escape the Unicode characters into character entities.</span></span>  
  
-   <span data-ttu-id="0c971-133">Повторяющиеся атрибуты.</span><span class="sxs-lookup"><span data-stu-id="0c971-133">Duplicate attributes.</span></span>  
  
-   <span data-ttu-id="0c971-134">Символы в общий идентификатор типа документа или системный идентификатор.</span><span class="sxs-lookup"><span data-stu-id="0c971-134">Characters in the DOCTYPE public identifier or system identifier.</span></span>  
  
## <a name="security-considerations"></a><span data-ttu-id="0c971-135">Вопросы безопасности</span><span class="sxs-lookup"><span data-stu-id="0c971-135">Security Considerations</span></span>  
 <span data-ttu-id="0c971-136">Следующие элементы, которые следует учитывать при работе с <xref:System.Xml.XmlTextWriter> класса.</span><span class="sxs-lookup"><span data-stu-id="0c971-136">The following items are things to consider when working with the <xref:System.Xml.XmlTextWriter> class.</span></span>  
  
-   <span data-ttu-id="0c971-137">Исключения, создаваемые <xref:System.Xml.XmlTextWriter> , могут содержать сведения о пути, вы не хотите всплывает приложения.</span><span class="sxs-lookup"><span data-stu-id="0c971-137">Exceptions thrown by the <xref:System.Xml.XmlTextWriter> can disclose path information that you do not want bubbled up to the application.</span></span> <span data-ttu-id="0c971-138">Приложения должны перехватывать исключения и обрабатывать их соответствующим образом.</span><span class="sxs-lookup"><span data-stu-id="0c971-138">Your applications must catch exceptions and process them appropriately.</span></span>  
  
-   <span data-ttu-id="0c971-139">При передаче <xref:System.Xml.XmlTextWriter> другому приложению ему предоставляется базовый поток.</span><span class="sxs-lookup"><span data-stu-id="0c971-139">When you pass the <xref:System.Xml.XmlTextWriter> to another application the underlying stream is exposed to that application.</span></span> <span data-ttu-id="0c971-140">Если нужно передать <xref:System.Xml.XmlTextWriter> приложению с частичным доверием, то следует использовать объект <xref:System.Xml.XmlWriter>, созданный методом <xref:System.Xml.XmlWriter.Create%2A>.</span><span class="sxs-lookup"><span data-stu-id="0c971-140">If you need to pass the <xref:System.Xml.XmlTextWriter> to a semi-trusted application, you should use an <xref:System.Xml.XmlWriter> object created by the <xref:System.Xml.XmlWriter.Create%2A> method instead.</span></span>  
  
-   <span data-ttu-id="0c971-141"><xref:System.Xml.XmlTextWriter> Не проверяет все данные, передаваемые <xref:System.Xml.XmlTextWriter.WriteDocType%2A> или <xref:System.Xml.XmlTextWriter.WriteRaw%2A> методы.</span><span class="sxs-lookup"><span data-stu-id="0c971-141">The <xref:System.Xml.XmlTextWriter> does not validate any data that is passed to the <xref:System.Xml.XmlTextWriter.WriteDocType%2A> or <xref:System.Xml.XmlTextWriter.WriteRaw%2A> methods.</span></span> <span data-ttu-id="0c971-142">Не следует передавать произвольные данные для этих методов.</span><span class="sxs-lookup"><span data-stu-id="0c971-142">You should not pass arbitrary data to these methods.</span></span>  
  
-   <span data-ttu-id="0c971-143">Если изменяются параметры по умолчанию, нет никакой гарантии, что созданные выходные данные является корректным XML-данных.</span><span class="sxs-lookup"><span data-stu-id="0c971-143">If the default settings are changed, there is no guarantee that the generated output is well-formed XML data.</span></span>  
  
-   <span data-ttu-id="0c971-144">Не следует принимать вспомогательные компоненты, такие как <xref:System.Text.Encoding> объект из ненадежного источника.</span><span class="sxs-lookup"><span data-stu-id="0c971-144">Do not accept supporting components, such as an <xref:System.Text.Encoding> object, from an untrusted source.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0c971-145">Создает экземпляр класса <see langword="XmlTextWriter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c971-145">Creates an instance of the <see langword="XmlTextWriter" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="0c971-146">Начиная с .NET Framework 2.0, мы рекомендуем создать <xref:System.Xml.XmlWriter> экземпляров с помощью <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> метод и <xref:System.Xml.XmlWriterSettings> класс, чтобы воспользоваться преимуществами новых функциональных возможностей.</span><span class="sxs-lookup"><span data-stu-id="0c971-146">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlTextWriter (System.IO.TextWriter w);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.TextWriter w) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.#ctor(System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (w As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlTextWriter(System::IO::TextWriter ^ w);" />
      <MemberSignature Language="F#" Value="new System.Xml.XmlTextWriter : System.IO.TextWriter -&gt; System.Xml.XmlTextWriter" Usage="new System.Xml.XmlTextWriter w" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="w" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="w">
          <span data-ttu-id="0c971-147">Класс <see langword="TextWriter" />, в который осуществляется запись.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c971-147">The <see langword="TextWriter" /> to write to.</span>
          </span>
          <span data-ttu-id="0c971-148">Предполагается, что для <see langword="TextWriter" /> задана верная кодировка.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c971-148">It is assumed that the <see langword="TextWriter" /> is already set to the correct encoding.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0c971-149">Инициализирует новый экземпляр класса <see langword="XmlTextWriter" /> с помощью указанного класса <see cref="T:System.IO.TextWriter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c971-149">Creates an instance of the <see langword="XmlTextWriter" /> class using the specified <see cref="T:System.IO.TextWriter" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="0c971-150">Начиная с .NET Framework 2.0, мы рекомендуем создать <xref:System.Xml.XmlWriter> экземпляров с помощью <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> метод и <xref:System.Xml.XmlWriterSettings> класс, чтобы воспользоваться преимуществами новых функциональных возможностей.</span><span class="sxs-lookup"><span data-stu-id="0c971-150">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlTextWriter (System.IO.Stream w, System.Text.Encoding encoding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream w, class System.Text.Encoding encoding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.#ctor(System.IO.Stream,System.Text.Encoding)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlTextWriter(System::IO::Stream ^ w, System::Text::Encoding ^ encoding);" />
      <MemberSignature Language="F#" Value="new System.Xml.XmlTextWriter : System.IO.Stream * System.Text.Encoding -&gt; System.Xml.XmlTextWriter" Usage="new System.Xml.XmlTextWriter (w, encoding)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="w" Type="System.IO.Stream" />
        <Parameter Name="encoding" Type="System.Text.Encoding" />
      </Parameters>
      <Docs>
        <param name="w">
          <span data-ttu-id="0c971-151">Поток, в который будет выполняться запись.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c971-151">The stream to which you want to write.</span>
          </span>
        </param>
        <param name="encoding">
          <span data-ttu-id="0c971-152">Создаваемая кодировка.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c971-152">The encoding to generate.</span>
          </span>
          <span data-ttu-id="0c971-153">Если для кодировки задано значение <see langword="null" />, для потока используется кодировка UTF-8, а атрибут кодировки исключается из <see langword="ProcessingInstruction" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c971-153">If encoding is <see langword="null" /> it writes out the stream as UTF-8 and omits the encoding attribute from the <see langword="ProcessingInstruction" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0c971-154">Создает экземпляр класса <see langword="XmlTextWriter" /> с помощью указанного потока и кодировки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c971-154">Creates an instance of the <see langword="XmlTextWriter" /> class using the specified stream and encoding.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="0c971-155">Начиная с .NET Framework 2.0, мы рекомендуем создать <xref:System.Xml.XmlWriter> экземпляров с помощью <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> метод и <xref:System.Xml.XmlWriterSettings> класс, чтобы воспользоваться преимуществами новых функциональных возможностей.</span><span class="sxs-lookup"><span data-stu-id="0c971-155">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0c971-156">Кодировка не поддерживается или не может быть записано в поток.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c971-156">The encoding is not supported or the stream cannot be written to.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0c971-157">
            <paramref name="w" /> — <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c971-157">
              <paramref name="w" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlTextWriter (string filename, System.Text.Encoding encoding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string filename, class System.Text.Encoding encoding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.#ctor(System.String,System.Text.Encoding)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlTextWriter(System::String ^ filename, System::Text::Encoding ^ encoding);" />
      <MemberSignature Language="F#" Value="new System.Xml.XmlTextWriter : string * System.Text.Encoding -&gt; System.Xml.XmlTextWriter" Usage="new System.Xml.XmlTextWriter (filename, encoding)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
        <Parameter Name="encoding" Type="System.Text.Encoding" />
      </Parameters>
      <Docs>
        <param name="filename">
          <span data-ttu-id="0c971-158">Имя файла, в который осуществляется запись.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c971-158">The filename to write to.</span>
          </span>
          <span data-ttu-id="0c971-159">Если файл существует, он будет сокращен и в него будет записано новое содержимое.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c971-159">If the file exists, it truncates it and overwrites it with the new content.</span>
          </span>
        </param>
        <param name="encoding">
          <span data-ttu-id="0c971-160">Создаваемая кодировка.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c971-160">The encoding to generate.</span>
          </span>
          <span data-ttu-id="0c971-161">Если для кодировки задано значение <see langword="null" />, для файла используется кодировка UTF-8, а атрибут кодировки исключается из <see langword="ProcessingInstruction" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c971-161">If encoding is <see langword="null" /> it writes the file out as UTF-8, and omits the encoding attribute from the <see langword="ProcessingInstruction" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0c971-162">Создает экземпляр класса <see cref="T:System.Xml.XmlTextWriter" /> с помощью указанного файла.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c971-162">Creates an instance of the <see cref="T:System.Xml.XmlTextWriter" /> class using the specified file.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="0c971-163">Начиная с .NET Framework 2.0, мы рекомендуем создать <xref:System.Xml.XmlWriter> экземпляров с помощью <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> метод и <xref:System.Xml.XmlWriterSettings> класс, чтобы воспользоваться преимуществами новых функциональных возможностей.</span><span class="sxs-lookup"><span data-stu-id="0c971-163">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0c971-164">Кодировка не поддерживается, имя файла является пустым, содержит только пробелы или один или несколько недопустимых символов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c971-164">The encoding is not supported; the filename is empty, contains only white space, or contains one or more invalid characters.</span>
          </span>
        </exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="0c971-165">Отказано в доступе.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c971-165">Access is denied.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0c971-166">Имя файла — <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c971-166">The filename is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="0c971-167">Не найден каталог для записи.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c971-167">The directory to write to is not found.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="0c971-168">Имя файла включает неверный или недопустимый синтаксис имени файла, имени каталога или метки тома.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c971-168">The filename includes an incorrect or invalid syntax for file name, directory name, or volume label syntax.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="0c971-169">У вызывающего объекта отсутствует необходимое разрешение.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c971-169">The caller does not have the required permission.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BaseStream">
      <MemberSignature Language="C#" Value="public System.IO.Stream BaseStream { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.Stream BaseStream" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextWriter.BaseStream" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BaseStream As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Stream ^ BaseStream { System::IO::Stream ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.BaseStream : System.IO.Stream" Usage="System.Xml.XmlTextWriter.BaseStream" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0c971-170">Возвращает основной объект потока.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c971-170">Gets the underlying stream object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0c971-171">Поток, в который осуществляется запись с помощью <see langword="XmlTextWriter" /> или значение <see langword="null" />, если <see langword="XmlTextWriter" /> создан с помощью класса <see cref="T:System.IO.TextWriter" />, который не наследуется от класса <see cref="T:System.IO.StreamWriter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c971-171">The stream to which the <see langword="XmlTextWriter" /> is writing or <see langword="null" /> if the <see langword="XmlTextWriter" /> was constructed using a <see cref="T:System.IO.TextWriter" /> that does not inherit from the <see cref="T:System.IO.StreamWriter" /> class.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="0c971-172">Начиная с .NET Framework 2.0, мы рекомендуем создать <xref:System.Xml.XmlWriter> экземпляров с помощью <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> метод и <xref:System.Xml.XmlWriterSettings> класс, чтобы воспользоваться преимуществами новых функциональных возможностей.</span><span class="sxs-lookup"><span data-stu-id="0c971-172">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="0c971-173">Если средство записи было создано с помощью `TextWriter` , производный от `StreamWriter` класса, это свойство эквивалентно <xref:System.IO.StreamWriter.BaseStream%2A?displayProperty=nameWithType> свойство.</span><span class="sxs-lookup"><span data-stu-id="0c971-173">If the writer was constructed using a `TextWriter` that is derived from the `StreamWriter` class, this property is equivalent to the <xref:System.IO.StreamWriter.BaseStream%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="0c971-174">Если средство записи было создано с помощью <xref:System.IO.Stream>, это свойство возвращает `Stream` передается конструктору.</span><span class="sxs-lookup"><span data-stu-id="0c971-174">If the writer was constructed using a <xref:System.IO.Stream>, this property returns the `Stream` passed to the constructor.</span></span> <span data-ttu-id="0c971-175">Если средство записи было создано с использованием имени файла, это свойство возвращает `Stream` представляющий файл.</span><span class="sxs-lookup"><span data-stu-id="0c971-175">If the writer was constructed using a file name, this property returns the `Stream` representing the file.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Close();" />
      <MemberSignature Language="F#" Value="override this.Close : unit -&gt; unit" Usage="xmlTextWriter.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0c971-176">Закрывает данный поток и основной поток.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c971-176">Closes this stream and the underlying stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="0c971-177">Начиная с .NET Framework 2.0, мы рекомендуем создать <xref:System.Xml.XmlWriter> экземпляров с помощью <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> метод и <xref:System.Xml.XmlWriterSettings> класс, чтобы воспользоваться преимуществами новых функциональных возможностей.</span><span class="sxs-lookup"><span data-stu-id="0c971-177">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="0c971-178">Любые элементы или атрибуты, оставшиеся открытыми будут автоматически закрыты.</span><span class="sxs-lookup"><span data-stu-id="0c971-178">Any elements or attributes left open are automatically closed.</span></span>  
  
 <span data-ttu-id="0c971-179">Этот метод не создает исключений.</span><span class="sxs-lookup"><span data-stu-id="0c971-179">This method does not throw any exceptions.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0c971-180">Следующий пример записывает фрагмент XML.</span><span class="sxs-lookup"><span data-stu-id="0c971-180">The following example writes an XML fragment.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.Formatting Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.Formatting Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.Formatting Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.Formatting Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.Formatting Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.Formatting Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public override void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Flush();" />
      <MemberSignature Language="F#" Value="override this.Flush : unit -&gt; unit" Usage="xmlTextWriter.Flush " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0c971-181">Сбрасывает в основной поток содержимое буфера, а также очищает основной поток.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c971-181">Flushes whatever is in the buffer to the underlying streams and also flushes the underlying stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="0c971-182">Начиная с .NET Framework 2.0, мы рекомендуем создать <xref:System.Xml.XmlWriter> экземпляров с помощью <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> метод и <xref:System.Xml.XmlWriterSettings> класс, чтобы воспользоваться преимуществами новых функциональных возможностей.</span><span class="sxs-lookup"><span data-stu-id="0c971-182">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="0c971-183">Это называется вместо <xref:System.Xml.XmlTextWriter.Close%2A> при необходимости создать дополнительные в основной поток без потери буфера.</span><span class="sxs-lookup"><span data-stu-id="0c971-183">This is called instead of <xref:System.Xml.XmlTextWriter.Close%2A> when you want to write more to the underlying stream without losing what is still in the buffer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0c971-184">Следующий пример записывает двух фрагментов XML.</span><span class="sxs-lookup"><span data-stu-id="0c971-184">The following example writes out two XML fragments.</span></span>  
  
 [!code-cpp[XmlTextWriter.Flush#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlTextWriter.Flush/CPP/write2docs.cpp#1)]
 [!code-csharp[XmlTextWriter.Flush#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlTextWriter.Flush/CS/write2docs.cs#1)]
 [!code-vb[XmlTextWriter.Flush#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlTextWriter.Flush/VB/write2docs.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Formatting">
      <MemberSignature Language="C#" Value="public System.Xml.Formatting Formatting { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.Formatting Formatting" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextWriter.Formatting" />
      <MemberSignature Language="VB.NET" Value="Public Property Formatting As Formatting" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Formatting Formatting { System::Xml::Formatting get(); void set(System::Xml::Formatting value); };" />
      <MemberSignature Language="F#" Value="member this.Formatting : System.Xml.Formatting with get, set" Usage="System.Xml.XmlTextWriter.Formatting" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Formatting</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0c971-185">Определяет способ форматирования выходных данных.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c971-185">Indicates how the output is formatted.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0c971-186">Одно из значений <see cref="T:System.Xml.Formatting" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c971-186">One of the <see cref="T:System.Xml.Formatting" /> values.</span>
          </span>
          <span data-ttu-id="0c971-187">По умолчанию используется значение <see langword="Formatting.None" /> (без форматирования).</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c971-187">The default is <see langword="Formatting.None" /> (no special formatting).</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="0c971-188">Начиная с .NET Framework 2.0, мы рекомендуем создать <xref:System.Xml.XmlWriter> экземпляров с помощью <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> метод и <xref:System.Xml.XmlWriterSettings> класс, чтобы воспользоваться преимуществами новых функциональных возможностей.</span><span class="sxs-lookup"><span data-stu-id="0c971-188">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="0c971-189">Если `Indented` параметр установлен, дочерние элементы отображаются с отступом с помощью <xref:System.Xml.XmlTextWriter.Indentation%2A> и <xref:System.Xml.XmlTextWriter.IndentChar%2A> свойства.</span><span class="sxs-lookup"><span data-stu-id="0c971-189">If the `Indented` option is set, child elements are indented using the <xref:System.Xml.XmlTextWriter.Indentation%2A> and <xref:System.Xml.XmlTextWriter.IndentChar%2A> properties.</span></span> <span data-ttu-id="0c971-190">Только содержимое элемента отображается с отступом.</span><span class="sxs-lookup"><span data-stu-id="0c971-190">Only element content is indented.</span></span> <span data-ttu-id="0c971-191">Следующий код C# выводит HTML-элементов, включая смешанное содержимое:</span><span class="sxs-lookup"><span data-stu-id="0c971-191">The following C# code writes out HTML elements including mixed content:</span></span>  
  
```csharp  
XmlTextWriter w = new XmlTextWriter(Console.Out);   
 w.Formatting = Formatting.Indented;   
 w.WriteStartElement("ol");   
 w.WriteStartElement("li");   
 w.WriteString("The big "); // This means "li" now has a mixed content model.  
 w.WriteElementString("b", "E");   
 w.WriteElementString("i", "lephant");   
 w.WriteString(" walks slowly.");   
 w.WriteEndElement();   
 w.WriteEndElement();  
```  
  
 <span data-ttu-id="0c971-192">Этот код создает следующие выходные данные:</span><span class="sxs-lookup"><span data-stu-id="0c971-192">The above code produces the following output:</span></span>  
  
```xml  
<ol>   
  <li>The big <b>E</b><i>lephant</i> walks slowly.</li>   
</ol>  
```  
  
 <span data-ttu-id="0c971-193">При просмотре в формате HTML пробелы между элементами полужирного шрифта и курсива.</span><span class="sxs-lookup"><span data-stu-id="0c971-193">When this is viewed in HTML no white space appears between the bold and italic elements.</span></span> <span data-ttu-id="0c971-194">На самом деле в этом примере если отступов был добавлен между этими элементами слово «Слон» бы неверно.</span><span class="sxs-lookup"><span data-stu-id="0c971-194">In fact, in this example, if indenting was added between these elements the word "Elephant" would be incorrectly broken.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0c971-195">Запись любого содержимого, за исключением текста `String.Empty` помещает элемент в режиме смешанного содержимого.</span><span class="sxs-lookup"><span data-stu-id="0c971-195">Writing any text content, excluding `String.Empty` puts that element into mixed content mode.</span></span> <span data-ttu-id="0c971-196">Дочерние элементы не наследуют это состояние «смешанный».</span><span class="sxs-lookup"><span data-stu-id="0c971-196">Child elements do not inherit this "mixed" mode status.</span></span> <span data-ttu-id="0c971-197">Дочерний элемент элемента «mixed» применено форматирование, если он не содержит содержимое «mixed».</span><span class="sxs-lookup"><span data-stu-id="0c971-197">A child element of a "mixed" element does indenting, unless it is also contains "mixed" content.</span></span> <span data-ttu-id="0c971-198">Содержимое элемента (http://www.w3.org/TR/1998/REC-xml-19980210#sec-element-content) и смешанное содержимое (http://www.w3.org/TR/1998/REC-xml-19980210#sec-mixed-content) определяются в соответствии с XML 1.0 определения этих терминов.</span><span class="sxs-lookup"><span data-stu-id="0c971-198">Element content (http://www.w3.org/TR/1998/REC-xml-19980210#sec-element-content) and mixed content (http://www.w3.org/TR/1998/REC-xml-19980210#sec-mixed-content) are defined according to the XML 1.0 definitions of these terms.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0c971-199">Следующий пример записывает фрагмент XML.</span><span class="sxs-lookup"><span data-stu-id="0c971-199">The following example writes an XML fragment.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.Formatting Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.Formatting Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.Formatting Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.Formatting Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.Formatting Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.Formatting Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Formatting" />
      </Docs>
    </Member>
    <Member MemberName="Indentation">
      <MemberSignature Language="C#" Value="public int Indentation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Indentation" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextWriter.Indentation" />
      <MemberSignature Language="VB.NET" Value="Public Property Indentation As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Indentation { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Indentation : int with get, set" Usage="System.Xml.XmlTextWriter.Indentation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0c971-200">Возвращает или задает количество записываемых IndentChars для каждого уровня в иерархии, если свойство <see cref="P:System.Xml.XmlTextWriter.Formatting" /> имеет значение <see langword="Formatting.Indented" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c971-200">Gets or sets how many IndentChars to write for each level in the hierarchy when <see cref="P:System.Xml.XmlTextWriter.Formatting" /> is set to <see langword="Formatting.Indented" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0c971-201">Количество <see langword="IndentChars" /> для каждого уровня.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c971-201">Number of <see langword="IndentChars" /> for each level.</span>
          </span>
          <span data-ttu-id="0c971-202">Значение по умолчанию — 2.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c971-202">The default is 2.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="0c971-203">Начиная с .NET Framework 2.0, мы рекомендуем создать <xref:System.Xml.XmlWriter> экземпляров с помощью <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> метод и <xref:System.Xml.XmlWriterSettings> класс, чтобы воспользоваться преимуществами новых функциональных возможностей.</span><span class="sxs-lookup"><span data-stu-id="0c971-203">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="0c971-204">Отступ выполняется на следующие типы узлов: `DocumentType`, `Element`, `Comment`, `ProcessingInstruction`, и `CDATASection`.</span><span class="sxs-lookup"><span data-stu-id="0c971-204">Indentation is performed on following node types: `DocumentType`, `Element`, `Comment`, `ProcessingInstruction`, and `CDATASection`.</span></span> <span data-ttu-id="0c971-205">Все другие типы узлов не затрагиваются.</span><span class="sxs-lookup"><span data-stu-id="0c971-205">All other node types are not affected.</span></span> <span data-ttu-id="0c971-206">`XmlTextWriter` Отступ внутреннее подмножество DTD.</span><span class="sxs-lookup"><span data-stu-id="0c971-206">The `XmlTextWriter` does not indent the internal DTD subset.</span></span> <span data-ttu-id="0c971-207">Тем не менее это можно сделать следующую команду, чтобы применить форматирование к внутреннее подмножество DTD.</span><span class="sxs-lookup"><span data-stu-id="0c971-207">However, you could do the following to apply formatting to the internal DTD subset.</span></span>  
  
```csharp  
String name = "Employees";  
String pubid = null;  
String sysid = null;  
String subset =  
@"  
    <!ELEMENT Employees (Employee)+>  
    <!ELEMENT Employee EMPTY>  
    <!ATTLIST Employee firstname CDATA #REQUIRED>  
    <!ENTITY Company 'Microsoft']]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0c971-208">Свойству присвоено отрицательное значение.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c971-208">Setting this property to a negative value.</span>
          </span>
        </exception>
        <altmember cref="P:System.Xml.XmlTextWriter.IndentChar" />
        <altmember cref="T:System.Xml.Formatting" />
      </Docs>
    </Member>
    <Member MemberName="IndentChar">
      <MemberSignature Language="C#" Value="public char IndentChar { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance char IndentChar" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextWriter.IndentChar" />
      <MemberSignature Language="VB.NET" Value="Public Property IndentChar As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property char IndentChar { char get(); void set(char value); };" />
      <MemberSignature Language="F#" Value="member this.IndentChar : char with get, set" Usage="System.Xml.XmlTextWriter.IndentChar" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0c971-209">Возвращает или задает знак для отступа, если свойство <see cref="P:System.Xml.XmlTextWriter.Formatting" /> имеет значение <see langword="Formatting.Indented" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c971-209">Gets or sets which character to use for indenting when <see cref="P:System.Xml.XmlTextWriter.Formatting" /> is set to <see langword="Formatting.Indented" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0c971-210">Символ, используемый для отступа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c971-210">The character to use for indenting.</span>
          </span>
          <span data-ttu-id="0c971-211">Значение по умолчанию — space.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c971-211">The default is space.</span>
          </span>
          <span data-ttu-id="0c971-212">
            <block subset="none" type="note">
              <para>
                <see langword="XmlTextWriter" /> Позволяет задать это свойство для любого знака. Чтобы обеспечить допустимый XML-код, необходимо указать допустимые символы пробелов, 0x9, 0x10, 0x13 или 0x20.  </para>
            </block>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="0c971-212">
              <block subset="none" type="note">
                <para> The <see langword="XmlTextWriter" /> allows you to set this property to any character. To ensure valid XML, you must specify a valid white space character, 0x9, 0x10, 0x13 or 0x20.  </para>
              </block>
            </span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="0c971-213">Начиная с .NET Framework 2.0, мы рекомендуем создать <xref:System.Xml.XmlWriter> экземпляров с помощью <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> метод и <xref:System.Xml.XmlWriterSettings> класс, чтобы воспользоваться преимуществами новых функциональных возможностей.</span><span class="sxs-lookup"><span data-stu-id="0c971-213">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xml.XmlTextWriter.Indentation" />
        <altmember cref="T:System.Xml.Formatting" />
      </Docs>
    </Member>
    <Member MemberName="LookupPrefix">
      <MemberSignature Language="C#" Value="public override string LookupPrefix (string ns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string LookupPrefix(string ns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.LookupPrefix(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function LookupPrefix (ns As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ LookupPrefix(System::String ^ ns);" />
      <MemberSignature Language="F#" Value="override this.LookupPrefix : string -&gt; string" Usage="xmlTextWriter.LookupPrefix ns" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ns" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="ns">
          <span data-ttu-id="0c971-214">URI пространства имен, для которого требуется найти префикс.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c971-214">Namespace URI whose prefix you want to find.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0c971-215">Возвращает ближайший префикс для URI пространства имен, определенный в текущей области пространства имен.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c971-215">Returns the closest prefix defined in the current namespace scope for the namespace URI.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0c971-216">Соответствующий префикс.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c971-216">The matching prefix.</span>
          </span>
          <span data-ttu-id="0c971-217">Или значение <see langword="null" />, если в текущей области отсутствует соответствующий URI пространства имен.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c971-217">Or <see langword="null" /> if no matching namespace URI is found in the current scope.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="0c971-218">Начиная с .NET Framework 2.0, мы рекомендуем создать <xref:System.Xml.XmlWriter> экземпляров с помощью <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> метод и <xref:System.Xml.XmlWriterSettings> класс, чтобы воспользоваться преимуществами новых функциональных возможностей.</span><span class="sxs-lookup"><span data-stu-id="0c971-218">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0c971-219">Следующий пример записывает в книгу.</span><span class="sxs-lookup"><span data-stu-id="0c971-219">The following example writes out a book.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteStartElement Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartElement Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteStartElement Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartElement Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteStartElement Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartElement Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0c971-220">Значение параметра <paramref name="ns" /> — <see langword="null" /> или <see langword="String.Empty" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c971-220">
              <paramref name="ns" /> is either <see langword="null" /> or <see langword="String.Empty" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Namespaces">
      <MemberSignature Language="C#" Value="public bool Namespaces { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Namespaces" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextWriter.Namespaces" />
      <MemberSignature Language="VB.NET" Value="Public Property Namespaces As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Namespaces { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Namespaces : bool with get, set" Usage="System.Xml.XmlTextWriter.Namespaces" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0c971-221">Возвращает или задает значение, показывающее, осуществляется ли поддержка пространства имен.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c971-221">Gets or sets a value indicating whether to do namespace support.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0c971-222">Значение <see langword="true" /> — пространства имен поддерживаются; в противном случае — <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c971-222">
              <see langword="true" /> to support namespaces; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="0c971-223">Значение по умолчанию: <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c971-223">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="0c971-224">Начиная с .NET Framework 2.0, мы рекомендуем создать <xref:System.Xml.XmlWriter> экземпляров с помощью <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> метод и <xref:System.Xml.XmlWriterSettings> класс, чтобы воспользоваться преимуществами новых функциональных возможностей.</span><span class="sxs-lookup"><span data-stu-id="0c971-224">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="0c971-225">Это свойство определяет, поддерживает ли средство записи W3C для пространств имен в XML, расположенный www.w3.org/TR/REC-xml-names.</span><span class="sxs-lookup"><span data-stu-id="0c971-225">This property determines whether the writer supports the W3C Namespaces in XML recommendation located at www.w3.org/TR/REC-xml-names.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="0c971-226">Это свойство можно изменить только в состоянии <see langword="WriteState.Start" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c971-226">You can only change this property when in the <see langword="WriteState.Start" /> state.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="QuoteChar">
      <MemberSignature Language="C#" Value="public char QuoteChar { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance char QuoteChar" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextWriter.QuoteChar" />
      <MemberSignature Language="VB.NET" Value="Public Property QuoteChar As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property char QuoteChar { char get(); void set(char value); };" />
      <MemberSignature Language="F#" Value="member this.QuoteChar : char with get, set" Usage="System.Xml.XmlTextWriter.QuoteChar" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0c971-227">Возвращает или задает знак, используемый для заключения значений атрибутов в кавычки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c971-227">Gets or sets which character to use to quote attribute values.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0c971-228">Знак, используемый для заключения значений атрибутов в кавычки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c971-228">The character to use to quote attribute values.</span>
          </span>
          <span data-ttu-id="0c971-229">Это должен быть либо одинарная кавычка (&amp;#39;) или двойной кавычкой (&amp;#34;).</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c971-229">This must be a single quote (&amp;#39;) or a double quote (&amp;#34;).</span>
          </span>
          <span data-ttu-id="0c971-230">По умолчанию используются двойные кавычки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c971-230">The default is a double quote.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="0c971-231">Начиная с .NET Framework 2.0, мы рекомендуем создать <xref:System.Xml.XmlWriter> экземпляров с помощью <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> метод и <xref:System.Xml.XmlWriterSettings> класс, чтобы воспользоваться преимуществами новых функциональных возможностей.</span><span class="sxs-lookup"><span data-stu-id="0c971-231">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0c971-232">Задание этому свойству значения, отличное от одинарные или двойные кавычки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c971-232">Setting this property to something other than either a single or double quote.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteBase64">
      <MemberSignature Language="C#" Value="public override void WriteBase64 (byte[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteBase64(unsigned int8[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteBase64(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteBase64 (buffer As Byte(), index As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteBase64(cli::array &lt;System::Byte&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="override this.WriteBase64 : byte[] * int * int -&gt; unit" Usage="xmlTextWriter.WriteBase64 (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="0c971-233">Кодируемый массив байтов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c971-233">Byte array to encode.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="0c971-234">Позиция в буфере, с которой начинается запись байтов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c971-234">The position within the buffer indicating the start of the bytes to write.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="0c971-235">Количество записываемых байтов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c971-235">The number of bytes to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0c971-236">Преобразует указанный набор двоичных байтов к виду base64 и выводит получившийся текст.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c971-236">Encodes the specified binary bytes as base64 and writes out the resulting text.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="0c971-237">Начиная с .NET Framework 2.0, мы рекомендуем создать <xref:System.Xml.XmlWriter> экземпляров с помощью <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> метод и <xref:System.Xml.XmlWriterSettings> класс, чтобы воспользоваться преимуществами новых функциональных возможностей.</span><span class="sxs-lookup"><span data-stu-id="0c971-237">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0c971-238">В следующем примере кодируется в входной файл с помощью `WriteBase64` и создается временный файл XML.</span><span class="sxs-lookup"><span data-stu-id="0c971-238">The following example encodes an input file using `WriteBase64` and generates a temporary XML file.</span></span> <span data-ttu-id="0c971-239">Временный XML-файл расшифровывается с помощью <xref:System.Xml.XmlTextReader.ReadBase64%2A> метод и сравнивается с исходным файлом.</span><span class="sxs-lookup"><span data-stu-id="0c971-239">The temporary XML file is decoded using the <xref:System.Xml.XmlTextReader.ReadBase64%2A> method and compared to the original file.</span></span>  
  
 [!code-cpp[XmlWriter.WriteBase64#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlWriter.WriteBase64/CPP/writebase64.cpp#1)]
 [!code-csharp[XmlWriter.WriteBase64#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter.WriteBase64/CS/writebase64.cs#1)]
 [!code-vb[XmlWriter.WriteBase64#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter.WriteBase64/VB/writebase64.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0c971-240">
            <paramref name="buffer" /> — <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c971-240">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0c971-241">Длина буфера за вычетом значения параметра <paramref name="index" /> меньше значения параметра <paramref name="count" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c971-241">The buffer length minus <paramref name="index" /> is less than <paramref name="count" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="0c971-242">Значение параметра <paramref name="index" /> или <paramref name="count" /> меньше нуля.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c971-242">
              <paramref name="index" /> or <paramref name="count" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="0c971-243">Свойство <see cref="P:System.Xml.XmlTextWriter.WriteState" /> имеет значение <see langword="Closed" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c971-243">The <see cref="P:System.Xml.XmlTextWriter.WriteState" /> is <see langword="Closed" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteBinHex">
      <MemberSignature Language="C#" Value="public override void WriteBinHex (byte[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteBinHex(unsigned int8[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteBinHex(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteBinHex (buffer As Byte(), index As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteBinHex(cli::array &lt;System::Byte&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="override this.WriteBinHex : byte[] * int * int -&gt; unit" Usage="xmlTextWriter.WriteBinHex (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="0c971-244">Кодируемый массив байтов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c971-244">Byte array to encode.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="0c971-245">Позиция в буфере, с которой начинается запись байтов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c971-245">The position in the buffer indicating the start of the bytes to write.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="0c971-246">Количество записываемых байтов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c971-246">The number of bytes to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0c971-247">Преобразует указанный набор двоичных байтов к виду binhex и выводит получившийся текст.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c971-247">Encodes the specified binary bytes as binhex and writes out the resulting text.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="0c971-248">Начиная с .NET Framework 2.0, мы рекомендуем создать <xref:System.Xml.XmlWriter> экземпляров с помощью <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> метод и <xref:System.Xml.XmlWriterSettings> класс, чтобы воспользоваться преимуществами новых функциональных возможностей.</span><span class="sxs-lookup"><span data-stu-id="0c971-248">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0c971-249">
            <paramref name="buffer" /> — <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c971-249">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0c971-250">Длина буфера за вычетом значения параметра <paramref name="index" /> меньше значения параметра <paramref name="count" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c971-250">The buffer length minus <paramref name="index" /> is less than <paramref name="count" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="0c971-251">Значение параметра <paramref name="index" /> или <paramref name="count" /> меньше нуля.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c971-251">
              <paramref name="index" /> or <paramref name="count" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="0c971-252">Объект <see cref="P:System.Xml.XmlTextWriter.WriteState" /> закрыт.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c971-252">The <see cref="P:System.Xml.XmlTextWriter.WriteState" /> is Closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteCData">
      <MemberSignature Language="C#" Value="public override void WriteCData (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteCData(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteCData(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteCData (text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteCData(System::String ^ text);" />
      <MemberSignature Language="F#" Value="override this.WriteCData : string -&gt; unit" Usage="xmlTextWriter.WriteCData text" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">
          <span data-ttu-id="0c971-253">Текст, записываемый в блок CDATA.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c971-253">Text to place inside the CDATA block.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0c971-254">Записывает блок &lt;![CDATA[...]]&gt;, содержащий заданный текст.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c971-254">Writes out a &lt;![CDATA[...]]&gt; block containing the specified text.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="0c971-255">Начиная с .NET Framework 2.0, мы рекомендуем создать <xref:System.Xml.XmlWriter> экземпляров с помощью <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> метод и <xref:System.Xml.XmlWriterSettings> класс, чтобы воспользоваться преимуществами новых функциональных возможностей.</span><span class="sxs-lookup"><span data-stu-id="0c971-255">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="0c971-256">Если `text` либо `null` или `String.Empty`, этот метод записывает пустой блок CDATA, например \<! [ CDATA]</span><span class="sxs-lookup"><span data-stu-id="0c971-256">If `text` is either `null` or `String.Empty`, this method writes an empty CDATA block, for example \<![CDATA[]</span></span>]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0c971-257">Текст приведет к неправильному формированию документа XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c971-257">The text would result in a non-well formed XML document.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="0c971-258">Свойство <see cref="P:System.Xml.XmlTextWriter.WriteState" /> имеет значение <see langword="Closed" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c971-258">The <see cref="P:System.Xml.XmlTextWriter.WriteState" /> is <see langword="Closed" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteCharEntity">
      <MemberSignature Language="C#" Value="public override void WriteCharEntity (char ch);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteCharEntity(char ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteCharEntity(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteCharEntity (ch As Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteCharEntity(char ch);" />
      <MemberSignature Language="F#" Value="override this.WriteCharEntity : char -&gt; unit" Usage="xmlTextWriter.WriteCharEntity ch" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="ch">
          <span data-ttu-id="0c971-259">Знак Юникода, для которого создается сущность.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c971-259">Unicode character for which to generate a character entity.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0c971-260">Вызывает создание сущности знака для указанного значения знака Юникода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c971-260">Forces the generation of a character entity for the specified Unicode character value.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="0c971-261">Начиная с .NET Framework 2.0, мы рекомендуем создать <xref:System.Xml.XmlWriter> экземпляров с помощью <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> метод и <xref:System.Xml.XmlWriterSettings> класс, чтобы воспользоваться преимуществами новых функциональных возможностей.</span><span class="sxs-lookup"><span data-stu-id="0c971-261">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="0c971-262">Этот метод записывает знак Юникода в формате Справочник по сущности шестнадцатеричных цифр.</span><span class="sxs-lookup"><span data-stu-id="0c971-262">This method writes the Unicode character in hexadecimal character entity reference format.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0c971-263">В следующем примере используется `WriteCharEntity` метод для записи адреса электронной почты.</span><span class="sxs-lookup"><span data-stu-id="0c971-263">The following example uses the `WriteCharEntity` method to write an email address.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteTimeSpan Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteTimeSpan Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteTimeSpan Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteTimeSpan Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteTimeSpan Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteTimeSpan Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0c971-264">Символ находится в диапазоне символов суррогатной пары <see langword="0xd800" /> - <see langword="0xdfff" />. В противном случае текст приведет к созданию неправильно сформированного документа XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c971-264">The character is in the surrogate pair character range, <see langword="0xd800" /> - <see langword="0xdfff" />; or the text would result in a non-well formed XML document.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="0c971-265">Свойство <see cref="P:System.Xml.XmlTextWriter.WriteState" /> имеет значение <see langword="Closed" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c971-265">The <see cref="P:System.Xml.XmlTextWriter.WriteState" /> is <see langword="Closed" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteChars">
      <MemberSignature Language="C#" Value="public override void WriteChars (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteChars(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteChars(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteChars (buffer As Char(), index As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteChars(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="override this.WriteChars : char[] * int * int -&gt; unit" Usage="xmlTextWriter.WriteChars (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="0c971-266">Массив знаков, содержащий текст для записи.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c971-266">Character array containing the text to write.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="0c971-267">Позиция в буфере, с которой начинается запись текста.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c971-267">The position in the buffer indicating the start of the text to write.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="0c971-268">Количество символов для записи.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c971-268">The number of characters to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0c971-269">Записывает текст в буфер за один раз.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c971-269">Writes text one buffer at a time.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="0c971-270">Начиная с .NET Framework 2.0, мы рекомендуем создать <xref:System.Xml.XmlWriter> экземпляров с помощью <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> метод и <xref:System.Xml.XmlWriterSettings> класс, чтобы воспользоваться преимуществами новых функциональных возможностей.</span><span class="sxs-lookup"><span data-stu-id="0c971-270">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="0c971-271">Этот метод может использоваться для записи больших объемов текста один буфер за раз.</span><span class="sxs-lookup"><span data-stu-id="0c971-271">This method can be used to write large amounts of text one buffer at a time.</span></span>  
  
 <span data-ttu-id="0c971-272">Необходимо сделать для обеспечения специальной обработки `WriteChars` метод разделение пары знаков-заместителей на несколько операций записи буфера.</span><span class="sxs-lookup"><span data-stu-id="0c971-272">Special handling must be done to ensure the `WriteChars` method does not split surrogate pair characters across multiple buffer writes.</span></span> <span data-ttu-id="0c971-273">Допустимые диапазоны для суррогатных пар определены в спецификации XML.</span><span class="sxs-lookup"><span data-stu-id="0c971-273">The XML specification defines the valid ranges for surrogate pairs.</span></span>  
  
 <span data-ttu-id="0c971-274">Исключение возникает в том случае, если пары знаков-заместителей записываются, который приведет к разделению в буфере символов суррогатных пар.</span><span class="sxs-lookup"><span data-stu-id="0c971-274">An exception is thrown if surrogate pair characters are written that would result in the surrogate pair characters being split in the buffer.</span></span>  
  
   
  
## Examples  
 [!code-csharp[XmlTextWriter.WriteChars#1](~/samples/snippets/csharp/VS_Snippets_Data/xmltextwriter.writechars/cs/xmlwriterwritecharsexample.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0c971-275">
            <paramref name="buffer" /> — <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c971-275">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="0c971-276">Значение параметра <paramref name="index" /> или <paramref name="count" /> меньше нуля.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c971-276">
              <paramref name="index" /> or <paramref name="count" /> is less than zero.</span>
          </span>
          <span data-ttu-id="0c971-277">-или-</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c971-277">-or-</span>
          </span>
          <span data-ttu-id="0c971-278">Длина буфера за вычетом <paramref name="index" /> меньше <paramref name="count" />; вызов приводит к разделению пар символов-заместителей или к записи недопустимой пары символов-заместителей.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c971-278">The buffer length minus <paramref name="index" /> is less than <paramref name="count" />; the call results in surrogate pair characters being split or an invalid surrogate pair being written.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="0c971-279">Объект <see cref="P:System.Xml.XmlTextWriter.WriteState" /> закрыт.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c971-279">The <see cref="P:System.Xml.XmlTextWriter.WriteState" /> is Closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteComment">
      <MemberSignature Language="C#" Value="public override void WriteComment (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteComment(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteComment(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteComment (text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteComment(System::String ^ text);" />
      <MemberSignature Language="F#" Value="override this.WriteComment : string -&gt; unit" Usage="xmlTextWriter.WriteComment text" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">
          <span data-ttu-id="0c971-280">Текст, записываемый в примечание.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c971-280">Text to place inside the comment.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0c971-281">Записывает примечание &lt;!--...--&gt;, содержащее заданный текст.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c971-281">Writes out a comment &lt;!--...--&gt; containing the specified text.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="0c971-282">Начиная с .NET Framework 2.0, мы рекомендуем создать <xref:System.Xml.XmlWriter> экземпляров с помощью <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> метод и <xref:System.Xml.XmlWriterSettings> класс, чтобы воспользоваться преимуществами новых функциональных возможностей.</span><span class="sxs-lookup"><span data-stu-id="0c971-282">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="0c971-283">Если `text` либо `null` или `String.Empty`, этот метод записывает `Comment` без данных содержимого, например \<!--->.</span><span class="sxs-lookup"><span data-stu-id="0c971-283">If `text` is either `null` or `String.Empty`, this method writes a `Comment` with no data content, for example \<!---->.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0c971-284">В следующем примере записывается XML-файл, представляющий книгу.</span><span class="sxs-lookup"><span data-stu-id="0c971-284">The following example writes an XML file representing a book.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0c971-285">Текст приведет к плохому формированию документа XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c971-285">The text would result in a non-well formed XML document</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="0c971-286">Свойство <see cref="P:System.Xml.XmlTextWriter.WriteState" /> имеет значение <see langword="Closed" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c971-286">The <see cref="P:System.Xml.XmlTextWriter.WriteState" /> is <see langword="Closed" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteDocType">
      <MemberSignature Language="C#" Value="public override void WriteDocType (string name, string pubid, string sysid, string subset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteDocType(string name, string pubid, string sysid, string subset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteDocType(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteDocType (name As String, pubid As String, sysid As String, subset As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteDocType(System::String ^ name, System::String ^ pubid, System::String ^ sysid, System::String ^ subset);" />
      <MemberSignature Language="F#" Value="override this.WriteDocType : string * string * string * string -&gt; unit" Usage="xmlTextWriter.WriteDocType (name, pubid, sysid, subset)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="pubid" Type="System.String" />
        <Parameter Name="sysid" Type="System.String" />
        <Parameter Name="subset" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="0c971-287">Имя DOCTYPE.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c971-287">The name of the DOCTYPE.</span>
          </span>
          <span data-ttu-id="0c971-288">Не должно быть пустым.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c971-288">This must be non-empty.</span>
          </span>
        </param>
        <param name="pubid">
          <span data-ttu-id="0c971-289">Если значение не равно NULL, записывается также PUBLIC "pubid" "sysid", где <c>pubid</c> и <c>sysid</c> заменяются значениями заданных аргументов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c971-289">If non-null it also writes PUBLIC "pubid" "sysid" where <c>pubid</c> and <c>sysid</c> are replaced with the value of the given arguments.</span>
          </span>
        </param>
        <param name="sysid">
          <span data-ttu-id="0c971-290">Если параметр <c>pubid</c> имеет значение NULL, а параметр <c>sysid</c> не равен NULL, записывается SYSTEM "sysid", где <c>sysid</c> замещается значением данного аргумента.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c971-290">If <c>pubid</c> is null and <c>sysid</c> is non-null it writes SYSTEM "sysid" where <c>sysid</c> is replaced with the value of this argument.</span>
          </span>
        </param>
        <param name="subset">
          <span data-ttu-id="0c971-291">Если не равно нулю, записывается [subset], где subset замещается значением данного аргумента.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c971-291">If non-null it writes [subset] where subset is replaced with the value of this argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0c971-292">Записывает объявление DOCTYPE с указанным именем и дополнительными атрибутами.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c971-292">Writes the DOCTYPE declaration with the specified name and optional attributes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="0c971-293">Начиная с .NET Framework 2.0, мы рекомендуем создать <xref:System.Xml.XmlWriter> экземпляров с помощью <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> метод и <xref:System.Xml.XmlWriterSettings> класс, чтобы воспользоваться преимуществами новых функциональных возможностей.</span><span class="sxs-lookup"><span data-stu-id="0c971-293">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="0c971-294">Этот метод не проверяет наличие недопустимых символов в `pubid`, `sysid` или `subset`.</span><span class="sxs-lookup"><span data-stu-id="0c971-294">This method does not check for invalid characters in `pubid`, `sysid` or `subset`.</span></span> <span data-ttu-id="0c971-295">Он также проверяет, внутреннее подмножество имеет правильный формат.</span><span class="sxs-lookup"><span data-stu-id="0c971-295">It also does not check that the internal subset is well-formed.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="0c971-296"><xref:System.Xml.XmlTextWriter> Не проверяет все данные, передаваемые <xref:System.Xml.XmlTextWriter.WriteDocType%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="0c971-296">The <xref:System.Xml.XmlTextWriter> does not validate any data that is passed to the <xref:System.Xml.XmlTextWriter.WriteDocType%2A> method.</span></span> <span data-ttu-id="0c971-297">В этот метод не следует передавать произвольные данные.</span><span class="sxs-lookup"><span data-stu-id="0c971-297">You should not pass arbitrary data to this method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0c971-298">В следующем примере записывается XML-файл, представляющий книгу.</span><span class="sxs-lookup"><span data-stu-id="0c971-298">The following example writes an XML file representing a book.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="0c971-299">Этот метод был вызван вне пролога (после корневого элемента).</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c971-299">This method was called outside the prolog (after the root element).</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0c971-300">Значение параметра <paramref name="name" /> равно <see langword="null" /> или <see langword="String.Empty" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c971-300">
              <paramref name="name" /> is <see langword="null" /> or <see langword="String.Empty" /></span>
          </span>
          <span data-ttu-id="0c971-301">-или-</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c971-301">-or-</span>
          </span>
          <span data-ttu-id="0c971-302">Значение <paramref name="name" /> приведет к недопустимый XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c971-302">the value for <paramref name="name" /> would result in invalid XML.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteEndAttribute">
      <MemberSignature Language="C#" Value="public override void WriteEndAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteEndAttribute() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteEndAttribute" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteEndAttribute ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteEndAttribute();" />
      <MemberSignature Language="F#" Value="override this.WriteEndAttribute : unit -&gt; unit" Usage="xmlTextWriter.WriteEndAttribute " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0c971-303">Закрывает вызов предыдущего метода <see cref="M:System.Xml.XmlTextWriter.WriteStartAttribute(System.String,System.String,System.String)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c971-303">Closes the previous <see cref="M:System.Xml.XmlTextWriter.WriteStartAttribute(System.String,System.String,System.String)" /> call.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="0c971-304">Начиная с .NET Framework 2.0, мы рекомендуем создать <xref:System.Xml.XmlWriter> экземпляров с помощью <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> метод и <xref:System.Xml.XmlWriterSettings> класс, чтобы воспользоваться преимуществами новых функциональных возможностей.</span><span class="sxs-lookup"><span data-stu-id="0c971-304">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="0c971-305">При вызове метода `WriteStartAttribute`, атрибут можно закрыть с помощью этого метода.</span><span class="sxs-lookup"><span data-stu-id="0c971-305">If you call `WriteStartAttribute`, you can close the attribute with this method.</span></span>  
  
 <span data-ttu-id="0c971-306">Кроме того, атрибут можно закрыть путем вызова `WriteStartAttribute` снова, вызывая <xref:System.Xml.XmlWriter.WriteAttributeString%2A>, или вызова <xref:System.Xml.XmlTextWriter.WriteEndElement%2A>.</span><span class="sxs-lookup"><span data-stu-id="0c971-306">You can also close the attribute by calling `WriteStartAttribute` again, calling <xref:System.Xml.XmlWriter.WriteAttributeString%2A>, or calling <xref:System.Xml.XmlTextWriter.WriteEndElement%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0c971-307">Следующий пример записывает в книгу.</span><span class="sxs-lookup"><span data-stu-id="0c971-307">The following example writes out a book.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteStartElement Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartElement Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteStartElement Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartElement Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteStartElement Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartElement Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteEndDocument">
      <MemberSignature Language="C#" Value="public override void WriteEndDocument ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteEndDocument() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteEndDocument" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteEndDocument ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteEndDocument();" />
      <MemberSignature Language="F#" Value="override this.WriteEndDocument : unit -&gt; unit" Usage="xmlTextWriter.WriteEndDocument " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0c971-308">Закрывает все открытые элементы или атрибуты и возвращает средство записи в состояние Start.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c971-308">Closes any open elements or attributes and puts the writer back in the Start state.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="0c971-309">Начиная с .NET Framework 2.0, мы рекомендуем создать <xref:System.Xml.XmlWriter> экземпляров с помощью <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> метод и <xref:System.Xml.XmlWriterSettings> класс, чтобы воспользоваться преимуществами новых функциональных возможностей.</span><span class="sxs-lookup"><span data-stu-id="0c971-309">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0c971-310">В следующем примере записывается XML-файл, представляющий книгу.</span><span class="sxs-lookup"><span data-stu-id="0c971-310">The following example writes an XML file representing a book.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0c971-311">Недопустимый документ XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c971-311">The XML document is invalid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteEndElement">
      <MemberSignature Language="C#" Value="public override void WriteEndElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteEndElement() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteEndElement" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteEndElement ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteEndElement();" />
      <MemberSignature Language="F#" Value="override this.WriteEndElement : unit -&gt; unit" Usage="xmlTextWriter.WriteEndElement " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0c971-312">Закрывает один элемент и извлекает соответствующую область пространства имен.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c971-312">Closes one element and pops the corresponding namespace scope.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="0c971-313">Начиная с .NET Framework 2.0, мы рекомендуем создать <xref:System.Xml.XmlWriter> экземпляров с помощью <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> метод и <xref:System.Xml.XmlWriterSettings> класс, чтобы воспользоваться преимуществами новых функциональных возможностей.</span><span class="sxs-lookup"><span data-stu-id="0c971-313">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="0c971-314">Если элемент не имеет содержимого краткий закрывающий тег «/ >» записывается; в противном случае записывается полный закрывающий тег.</span><span class="sxs-lookup"><span data-stu-id="0c971-314">If the element contains no content a short end tag "/>" is written; otherwise a full end tag is written.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0c971-315">В следующем примере записывается XML-файл, представляющий книгу.</span><span class="sxs-lookup"><span data-stu-id="0c971-315">The following example writes an XML file representing a book.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteEndElement Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteEndElement Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteEndElement Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteEndElement Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteEndElement Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteEndElement Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteEntityRef">
      <MemberSignature Language="C#" Value="public override void WriteEntityRef (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteEntityRef(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteEntityRef(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteEntityRef (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteEntityRef(System::String ^ name);" />
      <MemberSignature Language="F#" Value="override this.WriteEntityRef : string -&gt; unit" Usage="xmlTextWriter.WriteEntityRef name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="0c971-316">Имя ссылки на сущность.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c971-316">Name of the entity reference.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0c971-317">Выводит ссылку на сущность в виде <see langword="&amp;name;" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c971-317">Writes out an entity reference as <see langword="&amp;name;" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="0c971-318">Начиная с .NET Framework 2.0, мы рекомендуем создать <xref:System.Xml.XmlWriter> экземпляров с помощью <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> метод и <xref:System.Xml.XmlWriterSettings> класс, чтобы воспользоваться преимуществами новых функциональных возможностей.</span><span class="sxs-lookup"><span data-stu-id="0c971-318">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0c971-319">В следующем примере записывается XML-файл, представляющий книгу.</span><span class="sxs-lookup"><span data-stu-id="0c971-319">The following example writes an XML file representing a book.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0c971-320">
            <paramref name="name" />
            <see langword="null" />
            <see langword="String.Empty" />; или текст приведет к плохому формированию документа XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c971-320">The text would result in a non-well formed XML document or <paramref name="name" /> is either <see langword="null" /> or <see langword="String.Empty" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteFullEndElement">
      <MemberSignature Language="C#" Value="public override void WriteFullEndElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteFullEndElement() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteFullEndElement" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteFullEndElement ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteFullEndElement();" />
      <MemberSignature Language="F#" Value="override this.WriteFullEndElement : unit -&gt; unit" Usage="xmlTextWriter.WriteFullEndElement " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0c971-321">Закрывает один элемент и извлекает соответствующую область пространства имен.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c971-321">Closes one element and pops the corresponding namespace scope.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="0c971-322">Начиная с .NET Framework 2.0, мы рекомендуем создать <xref:System.Xml.XmlWriter> экземпляров с помощью <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> метод и <xref:System.Xml.XmlWriterSettings> класс, чтобы воспользоваться преимуществами новых функциональных возможностей.</span><span class="sxs-lookup"><span data-stu-id="0c971-322">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="0c971-323">Этот метод всегда записывает полный закрывающий тег.</span><span class="sxs-lookup"><span data-stu-id="0c971-323">This method always writes the full end tag.</span></span> <span data-ttu-id="0c971-324">Это полезно при работе с элементами, которые должен содержать полный закрывающий тег.</span><span class="sxs-lookup"><span data-stu-id="0c971-324">This is useful when dealing with elements that must include a full end tag.</span></span> <span data-ttu-id="0c971-325">Например, браузеры ожидать, что блоки скриптов HTML в закрытый с помощью " \< /script >».</span><span class="sxs-lookup"><span data-stu-id="0c971-325">For example, browsers expect HTML script blocks to be closed with "\</script>".</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0c971-326">Следующий пример записывает элемент без содержимого.</span><span class="sxs-lookup"><span data-stu-id="0c971-326">The following example writes out an element with no content.</span></span> <span data-ttu-id="0c971-327">Он использует WriteFullEndElement для записи полного закрывающий тег элемента.</span><span class="sxs-lookup"><span data-stu-id="0c971-327">It uses WriteFullEndElement to write the full end element tag.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteFullEndElement Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteFullEndElement Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteFullEndElement Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteFullEndElement Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteFullEndElement Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteFullEndElement Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteName">
      <MemberSignature Language="C#" Value="public override void WriteName (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteName(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteName (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteName(System::String ^ name);" />
      <MemberSignature Language="F#" Value="override this.WriteName : string -&gt; unit" Usage="xmlTextWriter.WriteName name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="0c971-328">Имя для записи.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c971-328">Name to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0c971-329">Записывает указанное имя, гарантируя его допустимость согласно рекомендации W3C по языку XML версии 1.0 (http://www.w3.org/TR/1998/REC-xml-19980210#NT-Name).</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c971-329">Writes out the specified name, ensuring it is a valid name according to the W3C XML 1.0 recommendation (http://www.w3.org/TR/1998/REC-xml-19980210#NT-Name).</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="0c971-330">Начиная с .NET Framework 2.0, мы рекомендуем создать <xref:System.Xml.XmlWriter> экземпляров с помощью <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> метод и <xref:System.Xml.XmlWriterSettings> класс, чтобы воспользоваться преимуществами новых функциональных возможностей.</span><span class="sxs-lookup"><span data-stu-id="0c971-330">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="0c971-331">Если <xref:System.Xml.XmlTextWriter.Namespaces%2A> присваивается `true`, `WriteName` также проверяет, что имя также является допустимым в соответствии с W3C по пространствам имен в XML.</span><span class="sxs-lookup"><span data-stu-id="0c971-331">If <xref:System.Xml.XmlTextWriter.Namespaces%2A> is set to `true`, `WriteName` also checks that the name is also valid according to the W3C Namespaces in XML recommendation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0c971-332">Параметр <paramref name="name" /> не является допустимым именем XML; или значение параметра <paramref name="name" /> — <see langword="null" /> или <see langword="String.Empty" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c971-332">
              <paramref name="name" /> is not a valid XML name; or <paramref name="name" /> is either <see langword="null" /> or <see langword="String.Empty" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteNmToken">
      <MemberSignature Language="C#" Value="public override void WriteNmToken (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteNmToken(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteNmToken(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteNmToken (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteNmToken(System::String ^ name);" />
      <MemberSignature Language="F#" Value="override this.WriteNmToken : string -&gt; unit" Usage="xmlTextWriter.WriteNmToken name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="0c971-333">Имя для записи.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c971-333">Name to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0c971-334">Записывает указанное имя, гарантируя, что это допустимый <see langword="NmToken" />, согласно рекомендации W3C по языку XML версии 1.0 (http://www.w3.org/TR/1998/REC-xml-19980210#NT-Name).</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c971-334">Writes out the specified name, ensuring it is a valid <see langword="NmToken" /> according to the W3C XML 1.0 recommendation (http://www.w3.org/TR/1998/REC-xml-19980210#NT-Name).</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="0c971-335">Начиная с .NET Framework 2.0, мы рекомендуем создать <xref:System.Xml.XmlWriter> экземпляров с помощью <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> метод и <xref:System.Xml.XmlWriterSettings> класс, чтобы воспользоваться преимуществами новых функциональных возможностей.</span><span class="sxs-lookup"><span data-stu-id="0c971-335">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0c971-336">Параметр <paramref name="name" /> не является допустимым <see langword="NmToken" />; или <paramref name="name" /> равен <see langword="null" /> или <see langword="String.Empty" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c971-336">
              <paramref name="name" /> is not a valid <see langword="NmToken" />; or <paramref name="name" /> is either <see langword="null" /> or <see langword="String.Empty" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteProcessingInstruction">
      <MemberSignature Language="C#" Value="public override void WriteProcessingInstruction (string name, string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteProcessingInstruction(string name, string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteProcessingInstruction(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteProcessingInstruction (name As String, text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteProcessingInstruction(System::String ^ name, System::String ^ text);" />
      <MemberSignature Language="F#" Value="override this.WriteProcessingInstruction : string * string -&gt; unit" Usage="xmlTextWriter.WriteProcessingInstruction (name, text)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="0c971-337">Имя инструкции обработки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c971-337">Name of the processing instruction.</span>
          </span>
        </param>
        <param name="text">
          <span data-ttu-id="0c971-338">Текст для инструкции обработки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c971-338">Text to include in the processing instruction.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0c971-339">Записывает инструкцию по обработке с пробелом между именем и текстом в следующем виде: &lt;?имя текст?&gt;.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c971-339">Writes out a processing instruction with a space between the name and text as follows: &lt;?name text?&gt;.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="0c971-340">Начиная с .NET Framework 2.0, мы рекомендуем создать <xref:System.Xml.XmlWriter> экземпляров с помощью <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> метод и <xref:System.Xml.XmlWriterSettings> класс, чтобы воспользоваться преимуществами новых функциональных возможностей.</span><span class="sxs-lookup"><span data-stu-id="0c971-340">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="0c971-341">Если `text` либо `null` или `String.Empty`, этот метод записывает `ProcessingInstruction` без данных содержимого, например \<? имя? >.</span><span class="sxs-lookup"><span data-stu-id="0c971-341">If `text` is either `null` or `String.Empty`, this method writes a `ProcessingInstruction` with no data content, for example \<?name?>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0c971-342">В следующем примере записывается XML-файл, представляющий книгу.</span><span class="sxs-lookup"><span data-stu-id="0c971-342">The following example writes an XML file representing a book.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0c971-343">Текст приведет к неправильному формированию документа XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c971-343">The text would result in a non-well formed XML document.</span>
          </span>
          <span data-ttu-id="0c971-344">Значение параметра <paramref name="name" /> — <see langword="null" /> или <see langword="String.Empty" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c971-344">
              <paramref name="name" /> is either <see langword="null" /> or <see langword="String.Empty" />.</span>
          </span>
          <span data-ttu-id="0c971-345">Этот метод используется для создания XML-объявления после того, как метод <see cref="M:System.Xml.XmlTextWriter.WriteStartDocument" /> уже вызван.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c971-345">This method is being used to create an XML declaration after <see cref="M:System.Xml.XmlTextWriter.WriteStartDocument" /> has already been called.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteQualifiedName">
      <MemberSignature Language="C#" Value="public override void WriteQualifiedName (string localName, string ns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteQualifiedName(string localName, string ns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteQualifiedName(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteQualifiedName (localName As String, ns As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteQualifiedName(System::String ^ localName, System::String ^ ns);" />
      <MemberSignature Language="F#" Value="override this.WriteQualifiedName : string * string -&gt; unit" Usage="xmlTextWriter.WriteQualifiedName (localName, ns)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localName">
          <span data-ttu-id="0c971-346">Локальное имя для записи.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c971-346">The local name to write.</span>
          </span>
        </param>
        <param name="ns">
          <span data-ttu-id="0c971-347">URI пространства имен, который связывается с именем.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c971-347">The namespace URI to associate with the name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0c971-348">Считывает проверенное имя пространства имен.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c971-348">Writes out the namespace-qualified name.</span>
          </span>
          <span data-ttu-id="0c971-349">Этот метод ищет префикс для пространства имен в его области.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c971-349">This method looks up the prefix that is in scope for the given namespace.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="0c971-350">Начиная с .NET Framework 2.0, мы рекомендуем создать <xref:System.Xml.XmlWriter> экземпляров с помощью <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> метод и <xref:System.Xml.XmlWriterSettings> класс, чтобы воспользоваться преимуществами новых функциональных возможностей.</span><span class="sxs-lookup"><span data-stu-id="0c971-350">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="0c971-351">Например, следующий код Microsoft Visual C#:</span><span class="sxs-lookup"><span data-stu-id="0c971-351">For example, the following Microsoft Visual C# code:</span></span>  
  
```csharp  
writer.Formatting = Formatting.Indented;  
writer.WriteStartElement("root");  
 writer.WriteAttributeString("xmlns","x",null,"urn:abc");  
 writer.WriteStartElement("item");  
 writer.WriteStartAttribute("href",null);  
 writer.WriteString("#");  
 writer.WriteQualifiedName("test","urn:abc");  
 writer.WriteEndAttribute();  
 writer.WriteEndElement();  
 writer.WriteEndElement();  
 writer.Close();  
```  
  
 <span data-ttu-id="0c971-352">Получается следующий результат:</span><span class="sxs-lookup"><span data-stu-id="0c971-352">Generates the following output:</span></span>  
  
```xml  
<root xmlns:x="urn:abc">  
 <item href="#x:test"/>  
 </root>  
```  
  
 <span data-ttu-id="0c971-353">Если `ns` отображается в текущее пространство имен по умолчанию, префикс не создается.</span><span class="sxs-lookup"><span data-stu-id="0c971-353">If `ns` maps to the current default namespace, no prefix is generated.</span></span>  
  
 <span data-ttu-id="0c971-354">При записи значений атрибута, если этот метод создает префикс `ns` не найден.</span><span class="sxs-lookup"><span data-stu-id="0c971-354">When writing attribute values, this method generates a prefix if `ns` is not found.</span></span> <span data-ttu-id="0c971-355">При записи содержимого элемента, создается исключение, если `ns` не найден.</span><span class="sxs-lookup"><span data-stu-id="0c971-355">When writing element content, it throws an exception if `ns` is not found.</span></span>  
  
 <span data-ttu-id="0c971-356">Если этот модуль записи поддерживает пространства имен (<xref:System.Xml.XmlTextWriter.Namespaces%2A> присваивается `true`), этот метод также проверяет, что имя является допустимым в соответствии с W3C по пространствам имен в XML (http://www.w3.org/TR/REC-xml-names).</span><span class="sxs-lookup"><span data-stu-id="0c971-356">If this writer supports namespaces (<xref:System.Xml.XmlTextWriter.Namespaces%2A> is set to `true`), this method also checks that the name is valid according to the W3C Namespaces in XML recommendation (http://www.w3.org/TR/REC-xml-names).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0c971-357">Следующий пример записывает различные части схемы XSD.</span><span class="sxs-lookup"><span data-stu-id="0c971-357">The following example writes out a portion of a XSD schema.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteQualifiedName Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteQualifiedName Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteQualifiedName Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteQualifiedName Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteQualifiedName Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteQualifiedName Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0c971-358">Значение параметра <paramref name="localName" /> — <see langword="null" /> или <see langword="String.Empty" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c971-358">
              <paramref name="localName" /> is either <see langword="null" /> or <see langword="String.Empty" />.</span>
          </span>
          <span data-ttu-id="0c971-359">
            <paramref name="localName" /> не является допустимым именем в соответствии со спецификацией пространств имен W3C.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c971-359">
              <paramref name="localName" /> is not a valid name according to the W3C Namespaces spec.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteRaw">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0c971-360">Вручную записывает исходную разметку.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c971-360">Writes raw markup manually.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="0c971-361">Начиная с .NET Framework 2.0, мы рекомендуем создать <xref:System.Xml.XmlWriter> экземпляров с помощью <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> метод и <xref:System.Xml.XmlWriterSettings> класс, чтобы воспользоваться преимуществами новых функциональных возможностей.</span><span class="sxs-lookup"><span data-stu-id="0c971-361">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteRaw">
      <MemberSignature Language="C#" Value="public override void WriteRaw (string data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteRaw(string data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteRaw(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteRaw (data As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteRaw(System::String ^ data);" />
      <MemberSignature Language="F#" Value="override this.WriteRaw : string -&gt; unit" Usage="xmlTextWriter.WriteRaw data" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="data">
          <span data-ttu-id="0c971-362">Строка, содержащая текст для записи.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c971-362">String containing the text to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0c971-363">Переписывает исходную разметку строки (вручную).</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c971-363">Writes raw markup manually from a string.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="0c971-364">Начиная с .NET Framework 2.0, мы рекомендуем создать <xref:System.Xml.XmlWriter> экземпляров с помощью <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> метод и <xref:System.Xml.XmlWriterSettings> класс, чтобы воспользоваться преимуществами новых функциональных возможностей.</span><span class="sxs-lookup"><span data-stu-id="0c971-364">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="0c971-365">Этот метод не экранирует специальные символы.</span><span class="sxs-lookup"><span data-stu-id="0c971-365">This method does not escape special characters.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="0c971-366"><xref:System.Xml.XmlTextWriter> Не проверяет все данные, передаваемые <xref:System.Xml.XmlTextWriter.WriteRaw%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="0c971-366">The <xref:System.Xml.XmlTextWriter> does not validate any data that is passed to the <xref:System.Xml.XmlTextWriter.WriteRaw%2A> method.</span></span> <span data-ttu-id="0c971-367">В этот метод не следует передавать произвольные данные.</span><span class="sxs-lookup"><span data-stu-id="0c971-367">You should not pass arbitrary data to this method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0c971-368">Следующий пример записывает в строку с помощью `WriteRaw` метод.</span><span class="sxs-lookup"><span data-stu-id="0c971-368">The following example writes a string using the `WriteRaw` method.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteRaw1 Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteRaw1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteRaw1 Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteRaw1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteRaw1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteRaw1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteRaw">
      <MemberSignature Language="C#" Value="public override void WriteRaw (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteRaw(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteRaw(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteRaw (buffer As Char(), index As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteRaw(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="override this.WriteRaw : char[] * int * int -&gt; unit" Usage="xmlTextWriter.WriteRaw (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="0c971-369">Массив знаков, содержащий текст для записи.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c971-369">Character array containing the text to write.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="0c971-370">Позиция в буфере, с которой начинается запись текста.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c971-370">The position within the buffer indicating the start of the text to write.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="0c971-371">Количество символов для записи.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c971-371">The number of characters to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0c971-372">Переписывает исходную разметку буфера знаков (вручную).</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c971-372">Writes raw markup manually from a character buffer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="0c971-373">Начиная с .NET Framework 2.0, мы рекомендуем создать <xref:System.Xml.XmlWriter> экземпляров с помощью <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> метод и <xref:System.Xml.XmlWriterSettings> класс, чтобы воспользоваться преимуществами новых функциональных возможностей.</span><span class="sxs-lookup"><span data-stu-id="0c971-373">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="0c971-374">Этот метод не экранирует специальные символы.</span><span class="sxs-lookup"><span data-stu-id="0c971-374">This method does not escape special characters.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="0c971-375"><xref:System.Xml.XmlTextWriter> Не проверяет все данные, передаваемые <xref:System.Xml.XmlTextWriter.WriteRaw%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="0c971-375">The <xref:System.Xml.XmlTextWriter> does not validate any data that is passed to the <xref:System.Xml.XmlTextWriter.WriteRaw%2A> method.</span></span> <span data-ttu-id="0c971-376">В этот метод не следует передавать произвольные данные.</span><span class="sxs-lookup"><span data-stu-id="0c971-376">You should not pass arbitrary data to this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0c971-377">
            <paramref name="buffer" /> — <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c971-377">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="0c971-378">Значение параметра <paramref name="index" /> или <paramref name="count" /> меньше нуля.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c971-378">
              <paramref name="index" /> or <paramref name="count" /> is less than zero.</span>
          </span>
          <span data-ttu-id="0c971-379">-или-</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c971-379">-or-</span>
          </span>
          <span data-ttu-id="0c971-380">Длина буфера за вычетом значения параметра <paramref name="index" /> меньше значения параметра <paramref name="count" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c971-380">The buffer length minus <paramref name="index" /> is less than <paramref name="count" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteStartAttribute">
      <MemberSignature Language="C#" Value="public override void WriteStartAttribute (string prefix, string localName, string ns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteStartAttribute(string prefix, string localName, string ns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteStartAttribute(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteStartAttribute (prefix As String, localName As String, ns As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteStartAttribute(System::String ^ prefix, System::String ^ localName, System::String ^ ns);" />
      <MemberSignature Language="F#" Value="override this.WriteStartAttribute : string * string * string -&gt; unit" Usage="xmlTextWriter.WriteStartAttribute (prefix, localName, ns)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="prefix">
          <span data-ttu-id="0c971-381">Префикс <see langword="Namespace" /> атрибута.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c971-381">
              <see langword="Namespace" /> prefix of the attribute.</span>
          </span>
        </param>
        <param name="localName">
          <span data-ttu-id="0c971-382">
            <see langword="LocalName" /> атрибута.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c971-382">
              <see langword="LocalName" /> of the attribute.</span>
          </span>
        </param>
        <param name="ns">
          <span data-ttu-id="0c971-383">
            <see langword="NamespaceURI" /> атрибута.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c971-383">
              <see langword="NamespaceURI" /> of the attribute</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0c971-384">Записывает начальное значение атрибута.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c971-384">Writes the start of an attribute.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="0c971-385">Начиная с .NET Framework 2.0, мы рекомендуем создать <xref:System.Xml.XmlWriter> экземпляров с помощью <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> метод и <xref:System.Xml.XmlWriterSettings> класс, чтобы воспользоваться преимуществами новых функциональных возможностей.</span><span class="sxs-lookup"><span data-stu-id="0c971-385">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="0c971-386">Это расширенный вариант <xref:System.Xml.XmlWriter.WriteAttributeString%2A> , позволяет разработчикам писать значение атрибута, с помощью нескольких методов write, например <xref:System.Xml.XmlTextWriter.WriteString%2A>.</span><span class="sxs-lookup"><span data-stu-id="0c971-386">This is a more advanced version of <xref:System.Xml.XmlWriter.WriteAttributeString%2A> that allows you to write an attribute value using multiple write methods, such as <xref:System.Xml.XmlTextWriter.WriteString%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0c971-387">Следующий пример записывает в книгу.</span><span class="sxs-lookup"><span data-stu-id="0c971-387">The following example writes out a book.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteStartElement Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartElement Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteStartElement Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartElement Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteStartElement Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartElement Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0c971-388">Значение параметра <paramref name="localName" /> — <see langword="null" /> или <see langword="String.Empty" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c971-388">
              <paramref name="localName" /> is either <see langword="null" /> or <see langword="String.Empty" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Xml.XmlTextWriter.WriteEndAttribute" />
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteStartDocument">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0c971-389">Записывает объявление XML с номером версии 1.0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c971-389">Writes the XML declaration with the version "1.0".</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="0c971-390">Начиная с .NET Framework 2.0, мы рекомендуем создать <xref:System.Xml.XmlWriter> экземпляров с помощью <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> метод и <xref:System.Xml.XmlWriterSettings> класс, чтобы воспользоваться преимуществами новых функциональных возможностей.</span><span class="sxs-lookup"><span data-stu-id="0c971-390">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteStartDocument">
      <MemberSignature Language="C#" Value="public override void WriteStartDocument ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteStartDocument() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteStartDocument" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteStartDocument ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteStartDocument();" />
      <MemberSignature Language="F#" Value="override this.WriteStartDocument : unit -&gt; unit" Usage="xmlTextWriter.WriteStartDocument " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0c971-391">Записывает объявление XML с номером версии 1.0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c971-391">Writes the XML declaration with the version "1.0".</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="0c971-392">Начиная с .NET Framework 2.0, мы рекомендуем создать <xref:System.Xml.XmlWriter> экземпляров с помощью <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> метод и <xref:System.Xml.XmlWriterSettings> класс, чтобы воспользоваться преимуществами новых функциональных возможностей.</span><span class="sxs-lookup"><span data-stu-id="0c971-392">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="0c971-393">Уровень кодировки документа определяется реализации модуля записи.</span><span class="sxs-lookup"><span data-stu-id="0c971-393">The encoding level of the document is determined by how the writer is implemented.</span></span> <span data-ttu-id="0c971-394">Например если <xref:System.Text.Encoding> объекта указывается в `XmlTextWriter` конструктор, этот параметр определяет значение атрибута кодировки.</span><span class="sxs-lookup"><span data-stu-id="0c971-394">For example, if an <xref:System.Text.Encoding> object is specified in the `XmlTextWriter` constructor, this determines the value of the encoding attribute.</span></span> <span data-ttu-id="0c971-395">Этот метод не создает отдельный атрибут.</span><span class="sxs-lookup"><span data-stu-id="0c971-395">This method does not create a standalone attribute.</span></span>  
  
 <span data-ttu-id="0c971-396">Когда `WriteStartDocument` называется модуль записи проверяет, что вы создаете имеет правильный формат XML-документа.</span><span class="sxs-lookup"><span data-stu-id="0c971-396">When `WriteStartDocument` is called the writer validates that what you are writing is a well-formed XML document.</span></span> <span data-ttu-id="0c971-397">Например он проверяет, что XML-декларация является первым узлом, что один и только один корневой элемент существует и т. д.</span><span class="sxs-lookup"><span data-stu-id="0c971-397">For example, it checks that the XML declaration is the first node, that one and only one root-level element exists and so on.</span></span> <span data-ttu-id="0c971-398">Если этот метод не вызывается, предполагается, что фрагмент XML записывается и применяет правила корневого уровня не.</span><span class="sxs-lookup"><span data-stu-id="0c971-398">If this method is not called, the writer assumes an XML fragment is being written and applies no root level rules.</span></span>  
  
 <span data-ttu-id="0c971-399">Если `WriteStartDocument` был вызван и затем <xref:System.Xml.XmlTextWriter.WriteProcessingInstruction%2A> метод используется для создания другого XML-декларация, создается исключение.</span><span class="sxs-lookup"><span data-stu-id="0c971-399">If `WriteStartDocument` has been called and then the <xref:System.Xml.XmlTextWriter.WriteProcessingInstruction%2A> method is used to create another XML declaration, an exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0c971-400">В следующем примере записывается XML-файл, представляющий книгу.</span><span class="sxs-lookup"><span data-stu-id="0c971-400">The following example writes an XML file representing a book.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="0c971-401">Это не первый метод записи, вызываемый после конструктора.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c971-401">This is not the first write method called after the constructor.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteStartDocument">
      <MemberSignature Language="C#" Value="public override void WriteStartDocument (bool standalone);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteStartDocument(bool standalone) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteStartDocument(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteStartDocument (standalone As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteStartDocument(bool standalone);" />
      <MemberSignature Language="F#" Value="override this.WriteStartDocument : bool -&gt; unit" Usage="xmlTextWriter.WriteStartDocument standalone" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="standalone" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="standalone">
          <span data-ttu-id="0c971-402">Если значение равно <see langword="true" />, записывается "standalone=yes"; если <see langword="false" />, записывается "standalone=no".</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c971-402">If <see langword="true" />, it writes "standalone=yes"; if <see langword="false" />, it writes "standalone=no".</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0c971-403">Записывает объявление XML с номером версии 1.0 и атрибутом standalone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c971-403">Writes the XML declaration with the version "1.0" and the standalone attribute.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="0c971-404">Начиная с .NET Framework 2.0, мы рекомендуем создать <xref:System.Xml.XmlWriter> экземпляров с помощью <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> метод и <xref:System.Xml.XmlWriterSettings> класс, чтобы воспользоваться преимуществами новых функциональных возможностей.</span><span class="sxs-lookup"><span data-stu-id="0c971-404">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="0c971-405">Уровень кодировки документа определяется реализации модуля записи.</span><span class="sxs-lookup"><span data-stu-id="0c971-405">The encoding level of the document is determined by how the writer is implemented.</span></span> <span data-ttu-id="0c971-406">Например если <xref:System.Text.Encoding> объекта указывается в `XmlTextWriter` конструктор, этот параметр определяет значение атрибута кодировки.</span><span class="sxs-lookup"><span data-stu-id="0c971-406">For example, if an <xref:System.Text.Encoding> object is specified in the `XmlTextWriter` constructor, this determines the value of the encoding attribute.</span></span>  
  
 <span data-ttu-id="0c971-407">Когда `WriteStartDocument` называется модуль записи проверяет, что вы создаете имеет правильный формат XML-документа.</span><span class="sxs-lookup"><span data-stu-id="0c971-407">When `WriteStartDocument` is called the writer validates that what you are writing is a well-formed XML document.</span></span> <span data-ttu-id="0c971-408">Например он проверяет, что XML-декларация является первым узлом, что один и только один корневой элемент существует и т. д.</span><span class="sxs-lookup"><span data-stu-id="0c971-408">For example, it checks that the XML declaration is the first node, that one and only one root-level element exists and so on.</span></span> <span data-ttu-id="0c971-409">Если этот метод не вызывается, предполагается, что фрагмент XML записывается и применяет правила корневого уровня не.</span><span class="sxs-lookup"><span data-stu-id="0c971-409">If this method is not called, the writer assumes an XML fragment is being written and applies no root level rules.</span></span>  
  
 <span data-ttu-id="0c971-410">Если `WriteStartDocument` был вызван и затем <xref:System.Xml.XmlTextWriter.WriteProcessingInstruction%2A> метод используется для создания другого XML-декларация, создается исключение.</span><span class="sxs-lookup"><span data-stu-id="0c971-410">If `WriteStartDocument` has been called and then the <xref:System.Xml.XmlTextWriter.WriteProcessingInstruction%2A> method is used to create another XML declaration, an exception is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="0c971-411">Это не первый метод записи, вызываемый после конструктора.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c971-411">This is not the first write method called after the constructor.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteStartElement">
      <MemberSignature Language="C#" Value="public override void WriteStartElement (string prefix, string localName, string ns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteStartElement(string prefix, string localName, string ns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteStartElement(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteStartElement (prefix As String, localName As String, ns As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteStartElement(System::String ^ prefix, System::String ^ localName, System::String ^ ns);" />
      <MemberSignature Language="F#" Value="override this.WriteStartElement : string * string * string -&gt; unit" Usage="xmlTextWriter.WriteStartElement (prefix, localName, ns)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="prefix">
          <span data-ttu-id="0c971-412">Префикс URI пространства имен элемента.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c971-412">The namespace prefix of the element.</span>
          </span>
        </param>
        <param name="localName">
          <span data-ttu-id="0c971-413">Локальное имя элемента.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c971-413">The local name of the element.</span>
          </span>
        </param>
        <param name="ns">
          <span data-ttu-id="0c971-414">URI пространства имен, который связывается с элементом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c971-414">The namespace URI to associate with the element.</span>
          </span>
          <span data-ttu-id="0c971-415">Если пространство имен уже находится в области и с ним связан префикс, средство записи автоматически запишет этот префикс.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c971-415">If this namespace is already in scope and has an associated prefix then the writer automatically writes that prefix also.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0c971-416">Записывает указанный открывающий тег и связывает его с заданным пространством имен и префиксом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c971-416">Writes the specified start tag and associates it with the given namespace and prefix.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="0c971-417">Начиная с .NET Framework 2.0, мы рекомендуем создать <xref:System.Xml.XmlWriter> экземпляров с помощью <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> метод и <xref:System.Xml.XmlWriterSettings> класс, чтобы воспользоваться преимуществами новых функциональных возможностей.</span><span class="sxs-lookup"><span data-stu-id="0c971-417">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="0c971-418">После вызова этого метода можно записывать атрибуты или создать содержимого с помощью <xref:System.Xml.XmlTextWriter.WriteComment%2A>, <xref:System.Xml.XmlTextWriter.WriteString%2A>, или <xref:System.Xml.XmlTextWriter.WriteStartElement%2A> для дочерних элементов.</span><span class="sxs-lookup"><span data-stu-id="0c971-418">After calling this method you can either write attributes or create content using <xref:System.Xml.XmlTextWriter.WriteComment%2A>, <xref:System.Xml.XmlTextWriter.WriteString%2A>, or <xref:System.Xml.XmlTextWriter.WriteStartElement%2A> for child elements.</span></span> <span data-ttu-id="0c971-419">Вы можете закрыть элемент с <xref:System.Xml.XmlTextWriter.WriteEndElement%2A> во время которого записывается закрывающий тег.</span><span class="sxs-lookup"><span data-stu-id="0c971-419">You can close the element with <xref:System.Xml.XmlTextWriter.WriteEndElement%2A> at which time an end tag is written out.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0c971-420">Следующий пример записывает в книгу.</span><span class="sxs-lookup"><span data-stu-id="0c971-420">The following example writes out a book.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteStartElement Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartElement Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteStartElement Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartElement Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteStartElement Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartElement Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="0c971-421">Средство записи закрыто.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c971-421">The writer is closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteState">
      <MemberSignature Language="C#" Value="public override System.Xml.WriteState WriteState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.WriteState WriteState" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextWriter.WriteState" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property WriteState As WriteState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::WriteState WriteState { System::Xml::WriteState get(); };" />
      <MemberSignature Language="F#" Value="member this.WriteState : System.Xml.WriteState" Usage="System.Xml.XmlTextWriter.WriteState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.WriteState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0c971-422">Возвращает состояние средства записи.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c971-422">Gets the state of the writer.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0c971-423">Одно из значений <see cref="T:System.Xml.WriteState" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c971-423">One of the <see cref="T:System.Xml.WriteState" /> values.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="0c971-424">Начиная с .NET Framework 2.0, мы рекомендуем создать <xref:System.Xml.XmlWriter> экземпляров с помощью <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> метод и <xref:System.Xml.XmlWriterSettings> класс, чтобы воспользоваться преимуществами новых функциональных возможностей.</span><span class="sxs-lookup"><span data-stu-id="0c971-424">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteString">
      <MemberSignature Language="C#" Value="public override void WriteString (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteString(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteString (text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteString(System::String ^ text);" />
      <MemberSignature Language="F#" Value="override this.WriteString : string -&gt; unit" Usage="xmlTextWriter.WriteString text" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">
          <span data-ttu-id="0c971-425">Текст для записи.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c971-425">Text to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0c971-426">Записывает заданное текстовое содержимое.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c971-426">Writes the given text content.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="0c971-427">Начиная с .NET Framework 2.0, мы рекомендуем создать <xref:System.Xml.XmlWriter> экземпляров с помощью <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> метод и <xref:System.Xml.XmlWriterSettings> класс, чтобы воспользоваться преимуществами новых функциональных возможностей.</span><span class="sxs-lookup"><span data-stu-id="0c971-427">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="0c971-428">`WriteString` выполняет следующие функции</span><span class="sxs-lookup"><span data-stu-id="0c971-428">`WriteString` does the following</span></span>  
  
-   <span data-ttu-id="0c971-429">Символы `&`, `<`, и `>` заменяются `&amp;`, `&lt;`, и `&gt;`, соответственно.</span><span class="sxs-lookup"><span data-stu-id="0c971-429">The characters `&`, `<`, and `>` are replaced with `&amp;`, `&lt;`, and `&gt;`, respectively.</span></span>  
  
-   <span data-ttu-id="0c971-430">Символьные значения в диапазоне от 0 x-0x1F (кроме пробелов 0x9, 0xA и 0xD) заменяются числовые символьные сущности (`&#0;` через `&#0x1F`).</span><span class="sxs-lookup"><span data-stu-id="0c971-430">Character values in the range 0x-0x1F (excluding white space characters 0x9, 0xA, and 0xD) are replaced with numeric character entities (`&#0;` through `&#0x1F`).</span></span>  
  
-   <span data-ttu-id="0c971-431">Если `WriteString` вызывается в контексте значения атрибута, одинарные и двойные кавычки заменяются `&quot;` и `&apos;` соответственно.</span><span class="sxs-lookup"><span data-stu-id="0c971-431">If `WriteString` is called in the context of an attribute value, double and single quotes are replaced with `&quot;` and `&apos;` respectively.</span></span>  
  
 <span data-ttu-id="0c971-432">Например, это ввести строку `test<item>test` записывается как</span><span class="sxs-lookup"><span data-stu-id="0c971-432">For example, this input string `test<item>test` is written as</span></span>  
  
```  
test&lt;item&gt;test  
```  
  
 <span data-ttu-id="0c971-433">Если `text` либо `null` или `String.Empty`, этот метод записывает текстовый узел без содержимого.</span><span class="sxs-lookup"><span data-stu-id="0c971-433">If `text` is either `null` or `String.Empty`, this method writes a text node with no data content.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0c971-434">Следующий пример записывает фрагмент XML.</span><span class="sxs-lookup"><span data-stu-id="0c971-434">The following example writes an XML fragment.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.Formatting Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.Formatting Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.Formatting Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.Formatting Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.Formatting Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.Formatting Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0c971-435">Строка текста содержит недопустимую пару символов-заместителей.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c971-435">The text string contains an invalid surrogate pair.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteSurrogateCharEntity">
      <MemberSignature Language="C#" Value="public override void WriteSurrogateCharEntity (char lowChar, char highChar);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteSurrogateCharEntity(char lowChar, char highChar) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteSurrogateCharEntity(System.Char,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteSurrogateCharEntity (lowChar As Char, highChar As Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteSurrogateCharEntity(char lowChar, char highChar);" />
      <MemberSignature Language="F#" Value="override this.WriteSurrogateCharEntity : char * char -&gt; unit" Usage="xmlTextWriter.WriteSurrogateCharEntity (lowChar, highChar)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lowChar" Type="System.Char" />
        <Parameter Name="highChar" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="lowChar">
          <span data-ttu-id="0c971-436">Младший знак-заместитель.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c971-436">The low surrogate.</span>
          </span>
          <span data-ttu-id="0c971-437">Это должно быть значение в диапазоне от <see langword="0xDC00" /> до <see langword="0xDFFF" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c971-437">This must be a value between <see langword="0xDC00" /> and <see langword="0xDFFF" />.</span>
          </span>
        </param>
        <param name="highChar">
          <span data-ttu-id="0c971-438">Старший знак-заместитель.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c971-438">The high surrogate.</span>
          </span>
          <span data-ttu-id="0c971-439">Это должно быть значение в диапазоне от <see langword="0xD800" /> до <see langword="0xDBFF" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c971-439">This must be a value between <see langword="0xD800" /> and <see langword="0xDBFF" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0c971-440">Создает и записывает сущность знака-заместителя для пары знаков-заместителей.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c971-440">Generates and writes the surrogate character entity for the surrogate character pair.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="0c971-441">Начиная с .NET Framework 2.0, мы рекомендуем создать <xref:System.Xml.XmlWriter> экземпляров с помощью <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> метод и <xref:System.Xml.XmlWriterSettings> класс, чтобы воспользоваться преимуществами новых функциональных возможностей.</span><span class="sxs-lookup"><span data-stu-id="0c971-441">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="0c971-442">Этот метод применяется только в системах, использующих кодировку UTF-16.</span><span class="sxs-lookup"><span data-stu-id="0c971-442">This method is only applicable on systems that use UTF-16 encoding.</span></span>  
  
 <span data-ttu-id="0c971-443">Сущности знака записывается в шестнадцатеричном формате.</span><span class="sxs-lookup"><span data-stu-id="0c971-443">The surrogate character entity is written in hexadecimal format.</span></span> <span data-ttu-id="0c971-444">Диапазон знаков-заместителей — `#x10000` для `#x10FFFF`.</span><span class="sxs-lookup"><span data-stu-id="0c971-444">The range for surrogate characters is `#x10000` to `#x10FFFF`.</span></span> <span data-ttu-id="0c971-445">Следующая формула используется для создания сущности знака: (`highChar` - `0xD800`) \* `0x400` + (`lowChar` - `0xDC00`) + `0x10000`.</span><span class="sxs-lookup"><span data-stu-id="0c971-445">The following formula is used to generate the surrogate character entity: (`highChar` - `0xD800`) \* `0x400` + (`lowChar` - `0xDC00`) + `0x10000`.</span></span>  
  
 <span data-ttu-id="0c971-446">Для HTML и XML кодировку документа (и, следовательно, нотации ссылок на числовые символы) основана на UCS [ISO-10646].</span><span class="sxs-lookup"><span data-stu-id="0c971-446">For both HTML and XML, the document character set (and therefore the notation of numeric character references) is based on UCS [ISO-10646].</span></span> <span data-ttu-id="0c971-447">Ссылка одного числового символа в исходном документе может поэтому в некоторых случаях соответствовать два 16-разрядные единицы в строке (старший символ-заместитель и младшим символом-заместителем).</span><span class="sxs-lookup"><span data-stu-id="0c971-447">A single numeric character reference in a source document may therefore in some cases correspond to two 16-bit units in a string (a high surrogate and a low surrogate).</span></span> <span data-ttu-id="0c971-448">Эти единицы 16-разрядное называются суррогатную пару.</span><span class="sxs-lookup"><span data-stu-id="0c971-448">These 16-bit units are referred to as a surrogate pair.</span></span>  
  
 <span data-ttu-id="0c971-449">Дополнительные сведения о суррогаты или символы, обратитесь к 3.7 Юникода 3.0/Юникод 2.0 стандартная расположенный http://www.unicode.org, или разделу 2.2 рекомендаций консорциума W3C XML 1.0, расположенный http://www.w3.org/TR/REC-xml#charsets.</span><span class="sxs-lookup"><span data-stu-id="0c971-449">For more information regarding surrogates or characters, refer to section 3.7 of the Unicode 3.0/Unicode 2.0 standard located at http://www.unicode.org, or section 2.2 of the W3C XML 1.0 Recommendation located at http://www.w3.org/TR/REC-xml#charsets.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">
          <span data-ttu-id="0c971-450">Передана недопустимая пара символов-заместителей.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c971-450">An invalid surrogate character pair was passed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteWhitespace">
      <MemberSignature Language="C#" Value="public override void WriteWhitespace (string ws);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteWhitespace(string ws) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteWhitespace(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteWhitespace (ws As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteWhitespace(System::String ^ ws);" />
      <MemberSignature Language="F#" Value="override this.WriteWhitespace : string -&gt; unit" Usage="xmlTextWriter.WriteWhitespace ws" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ws" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="ws">
          <span data-ttu-id="0c971-451">Строка пробелов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c971-451">The string of white space characters.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0c971-452">Считывает указанное пустое пространство.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c971-452">Writes out the given white space.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="0c971-453">Начиная с .NET Framework 2.0, мы рекомендуем создать <xref:System.Xml.XmlWriter> экземпляров с помощью <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> метод и <xref:System.Xml.XmlWriterSettings> класс, чтобы воспользоваться преимуществами новых функциональных возможностей.</span><span class="sxs-lookup"><span data-stu-id="0c971-453">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="0c971-454">Этот метод используется для форматирования документа вручную.</span><span class="sxs-lookup"><span data-stu-id="0c971-454">This method is used to manually format your document.</span></span> <span data-ttu-id="0c971-455">Используйте <xref:System.Xml.XmlTextWriter.Formatting%2A> свойство для автоматического форматирования выходных данных с помощью средства записи.</span><span class="sxs-lookup"><span data-stu-id="0c971-455">Use the <xref:System.Xml.XmlTextWriter.Formatting%2A> property to have the writer format the output automatically.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0c971-456">В следующем примере используется `WriteWhitespace` метод для управления форматом файла.</span><span class="sxs-lookup"><span data-stu-id="0c971-456">The following example uses the `WriteWhitespace` method to control how the file is formatted.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.XmlSpace Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.XmlSpace Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.XmlSpace Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.XmlSpace Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.XmlSpace Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.XmlSpace Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0c971-457">Строка содержит символы, отличные от пробелов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c971-457">The string contains non-white space characters.</span>
          </span>
        </exception>
        <altmember cref="P:System.Xml.XmlTextWriter.Formatting" />
      </Docs>
    </Member>
    <Member MemberName="XmlLang">
      <MemberSignature Language="C#" Value="public override string XmlLang { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string XmlLang" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextWriter.XmlLang" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property XmlLang As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ XmlLang { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.XmlLang : string" Usage="System.Xml.XmlTextWriter.XmlLang" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0c971-458">Возвращает текущую ограниченную область действия <see langword="xml:lang" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c971-458">Gets the current <see langword="xml:lang" /> scope.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0c971-459">Текущие значения <see langword="xml:lang" /> или <see langword="null" />, если в текущей области отсутствует <see langword="xml:lang" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c971-459">The current <see langword="xml:lang" /> or <see langword="null" /> if there is no <see langword="xml:lang" /> in the current scope.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="0c971-460">Начиная с .NET Framework 2.0, мы рекомендуем создать <xref:System.Xml.XmlWriter> экземпляров с помощью <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> метод и <xref:System.Xml.XmlWriterSettings> класс, чтобы воспользоваться преимуществами новых функциональных возможностей.</span><span class="sxs-lookup"><span data-stu-id="0c971-460">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="0c971-461">Это свойство позволяет один компонент узнать, какое состояние другой компонент оставил модуль записи.</span><span class="sxs-lookup"><span data-stu-id="0c971-461">This property allows one component to find out what state another component has left the writer in.</span></span> <span data-ttu-id="0c971-462">Например возможно один компонент хочет сказать другому, какой язык создаваемого текста справки.</span><span class="sxs-lookup"><span data-stu-id="0c971-462">For example, perhaps one component wants to tell another which language help text to generate.</span></span> <span data-ttu-id="0c971-463">Сообщаются сведения о языке путем записи `xml:lang` атрибута.</span><span class="sxs-lookup"><span data-stu-id="0c971-463">The language information is communicated by writing an `xml:lang` attribute.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlSpace">
      <MemberSignature Language="C#" Value="public override System.Xml.XmlSpace XmlSpace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.XmlSpace XmlSpace" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextWriter.XmlSpace" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property XmlSpace As XmlSpace" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlSpace XmlSpace { System::Xml::XmlSpace get(); };" />
      <MemberSignature Language="F#" Value="member this.XmlSpace : System.Xml.XmlSpace" Usage="System.Xml.XmlTextWriter.XmlSpace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlSpace</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0c971-464">Возвращает объект <see cref="T:System.Xml.XmlSpace" />, представляющий текущую область <see langword="xml:space" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c971-464">Gets an <see cref="T:System.Xml.XmlSpace" /> representing the current <see langword="xml:space" /> scope.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0c971-465">Объект <see langword="XmlSpace" />, представляющий текущую область <see langword="xml:space" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c971-465">An <see langword="XmlSpace" /> representing the current <see langword="xml:space" /> scope.</span>
          </span>
          <span data-ttu-id="0c971-466">
            <list type="table">
              <listheader>
                <term> Значение </term>
                <description> значение </description>
              </listheader>
              <item>
                <term> None </term>
                <description> это значение по умолчанию, если не <see langword="xml:space" /> существует область действия.  </description>
              </item>
              <item>
                <term> По умолчанию </term>
                <description> текущая область — <see langword="xml:space" />= «default».  </description>
              </item>
              <item>
                <term> Сохранить </term>
                <description> текущая область — <see langword="xml:space" />= «preserve».  </description>
              </item>
            </list>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="0c971-466">
              <list type="table">
                <listheader>
                  <term> Value  </term>
                  <description> Meaning  </description>
                </listheader>
                <item>
                  <term> None  </term>
                  <description> This is the default if no <see langword="xml:space" /> scope exists.  </description>
                </item>
                <item>
                  <term> Default  </term>
                  <description> The current scope is <see langword="xml:space" />="default".  </description>
                </item>
                <item>
                  <term> Preserve  </term>
                  <description> The current scope is <see langword="xml:space" />="preserve".  </description>
                </item>
              </list>
            </span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="0c971-467">Начиная с .NET Framework 2.0, мы рекомендуем создать <xref:System.Xml.XmlWriter> экземпляров с помощью <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> метод и <xref:System.Xml.XmlWriterSettings> класс, чтобы воспользоваться преимуществами новых функциональных возможностей.</span><span class="sxs-lookup"><span data-stu-id="0c971-467">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="0c971-468">Это свойство позволяет одному компоненту узнать, в каком состоянии другой компонент оставил модуль записи.</span><span class="sxs-lookup"><span data-stu-id="0c971-468">This property allows one component to find out in what state another component has left the writer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0c971-469">В следующем примере используется `WriteWhitespace` метод для управления форматом файла.</span><span class="sxs-lookup"><span data-stu-id="0c971-469">The following example uses the `WriteWhitespace` method to control how the file is formatted.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.XmlSpace Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.XmlSpace Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.XmlSpace Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.XmlSpace Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.XmlSpace Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.XmlSpace Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>