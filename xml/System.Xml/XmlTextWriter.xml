<Type Name="XmlTextWriter" FullName="System.Xml.XmlTextWriter">
  <TypeSignature Language="C#" Value="public class XmlTextWriter : System.Xml.XmlWriter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlTextWriter extends System.Xml.XmlWriter" />
  <TypeSignature Language="DocId" Value="T:System.Xml.XmlTextWriter" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlTextWriter&#xA;Inherits XmlWriter" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlTextWriter : System::Xml::XmlWriter" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Xml.XmlWriter</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="0e6d6-101">Представляет средство записи, предоставляющее способ быстрого прямого создания потоков (без кэширования) или файлов с данными XML, которые соответствуют рекомендациям консорциума W3C по языку XML версии 1.0 и пространств имен в XML.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-101">Represents a writer that provides a fast, non-cached, forward-only way of generating streams or files containing XML data that conforms to the W3C Extensible Markup Language (XML) 1.0 and the Namespaces in XML recommendations.</span></span>  
  
 <span data-ttu-id="0e6d6-102">Начиная с .NET Framework версии 2.0 рекомендуется использовать класс <see cref="T:System.Xml.XmlWriter" />.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-102">Starting with the .NET Framework 2.0, we recommend that you use the <see cref="T:System.Xml.XmlWriter" /> class instead.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0e6d6-103">Этот класс реализует <xref:System.Xml.XmlWriter> класса.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-103">This class implements the <xref:System.Xml.XmlWriter> class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0e6d6-104">Начиная с .NET Framework 2.0, рекомендуется создать <xref:System.Xml.XmlWriter> экземпляров с помощью <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> метод и <xref:System.Xml.XmlWriterSettings> класса, чтобы воспользоваться преимуществами новых функций.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-104">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="0e6d6-105">`XmlTextWriter` поддерживает стек пространства имен, соответствующий всем пространствам имен, определенные в текущем стеке элементов.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-105">`XmlTextWriter` maintains a namespace stack corresponding to all the namespaces defined in the current element stack.</span></span> <span data-ttu-id="0e6d6-106">С помощью `XmlTextWriter` можно объявлять пространства имен вручную.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-106">Using `XmlTextWriter` you can declare namespaces manually.</span></span>  
  
```csharp  
w.WriteStartElement("root");  
w.WriteAttributeString("xmlns", "x", null, "urn:1");  
 w.WriteStartElement("item","urn:1");  
 w.WriteEndElement();  
 w.WriteStartElement("item","urn:1");  
 w.WriteEndElement();  
w.WriteEndElement();  
```  
  
 <span data-ttu-id="0e6d6-107">Приведенный выше код на C# выводятся следующие данные.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-107">The above C# code produces the following output.</span></span> <span data-ttu-id="0e6d6-108">`XmlTextWriter` повышает уровень объявление пространства имен в корневой элемент, чтобы предотвратить его дублирование для двух дочерних элементов.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-108">`XmlTextWriter` promotes the namespace declaration to the root element to avoid having it duplicated on the two child elements.</span></span> <span data-ttu-id="0e6d6-109">Дочерние элементы получают префикс из объявления пространства имен.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-109">The child elements pick up the prefix from the namespace declaration.</span></span>  
  
```xml  
<root xmlns:x="urn:1">  
 <x:item/>  
 <x:item/>  
</x:root>  
```  
  
 <span data-ttu-id="0e6d6-110">`XmlTextWriter` также позволяет переопределить текущее объявление пространства имен.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-110">`XmlTextWriter` also allows you to override the current namespace declaration.</span></span> <span data-ttu-id="0e6d6-111">В следующем примере переопределяется пространство имен URI «123» с «abc» для создания XML-элемента `<x:node xmlns:x="abc"/>`.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-111">In the following example, the namespace URI "123" is overridden by "abc" to produce the XML element `<x:node xmlns:x="abc"/>`.</span></span>  
  
```csharp  
w.WriteStartElement("x","node","123");  
w.WriteAttributeString("xmlns","x",null,"abc");  
```  
  
 <span data-ttu-id="0e6d6-112">С помощью методов записи, которые принимают префикс в качестве аргумента можно указать префикс для использования.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-112">By using the write methods that take a prefix as an argument you can also specify which prefix to use.</span></span> <span data-ttu-id="0e6d6-113">В следующем примере две разные префиксы сопоставляются в одно пространство имен URI для создания XML-текст `<x:root xmlns:x="urn:1"><y:item xmlns:y="urn:1"/></x:root>`.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-113">In the following example, two different prefixes are mapped to the same namespace URI to produce the XML text `<x:root xmlns:x="urn:1"><y:item xmlns:y="urn:1"/></x:root>`.</span></span>  
  
```csharp  
XmlTextWriter w = new XmlTextWriter(Console.Out);  
w.WriteStartElement("x","root","urn:1");  
 w.WriteStartElement("y","item","urn:1");  
 w.WriteEndElement();  
w.WriteEndElement();  
w.Close();  
```  
  
 <span data-ttu-id="0e6d6-114">Если существует несколько объявлений пространства имен, отображающих разные префиксы в одно пространство имен URI, `XmlTextWriter` проходит стека объявлений пространств имен в обратном направлении и выбирает ближайшее описание.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-114">If there are multiple namespace declarations mapping different prefixes to the same namespace URI, `XmlTextWriter` walks the stack of namespace declarations backwards and picks the closest one.</span></span>  
  
```csharp  
XmlTextWriter w = new XmlTextWriter(Console.Out);  
w.Formatting = Formatting.Indented;  
w.WriteStartElement("x","root","urn:1");  
w.WriteStartElement("y","item","urn:1");  
w.WriteAttributeString("attr","urn:1","123");  
w.WriteEndElement();  
w.WriteEndElement();  
w.Close();  
```  
  
 <span data-ttu-id="0e6d6-115">В приведенном выше коде C# так как `WriteAttributeString` вызов не указывает префикс, средство записи использует последний префикс, помещенный в стек пространства имен и создает следующий XML:</span><span class="sxs-lookup"><span data-stu-id="0e6d6-115">In the above C# example, because the `WriteAttributeString` call does not specify a prefix, the writer uses the last prefix pushed onto the namespace stack, and produces the following XML:</span></span>  
  
```xml  
<x:root xmlns:x="urn:1">  
 <y:item y:attr="123" xmlns:y="urn:1" />  
</x:root>  
```  
  
 <span data-ttu-id="0e6d6-116">При возникновении конфликтов имен `XmlTextWriter` разрешает их путем создания дополнительных префиксов.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-116">If namespace conflicts occur, `XmlTextWriter` resolves them by generating alternate prefixes.</span></span> <span data-ttu-id="0e6d6-117">Например, если атрибут и элемент имеют одинаковые префиксы, но разные пространства имен, `XmlWriter` создает альтернативный префикс для атрибута.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-117">For example, if an attribute and element have the same prefix but different namespaces, `XmlWriter` generates an alternate prefix for the attribute.</span></span> <span data-ttu-id="0e6d6-118">Созданные префиксы получают имя `n{i}` где `i` — число, начиная с 1.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-118">The generated prefixes are named `n{i}` where `i` is a number beginning at 1.</span></span> <span data-ttu-id="0e6d6-119">Счетчик сбрасывается в значение 1 для каждого элемента.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-119">The number is reset to 1 for each element.</span></span>  
  
 <span data-ttu-id="0e6d6-120">Атрибуты, связанные с URI пространства имен, должны иметь префикс (по умолчанию пространства имен не применяются к атрибутам).</span><span class="sxs-lookup"><span data-stu-id="0e6d6-120">Attributes which are associated with a namespace URI must have a prefix (default namespaces do not apply to attributes).</span></span> <span data-ttu-id="0e6d6-121">Это соответствует раздел 5.2 пространства имен W3C в рекомендации XML.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-121">This conforms to section 5.2 of the W3C Namespaces in XML recommendation.</span></span> <span data-ttu-id="0e6d6-122">Если атрибут ссылается на URI пространства имен, но не указывает префикс, средство записи создает префикс для атрибута.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-122">If an attribute references a namespace URI, but does not specify a prefix, the writer generates a prefix for the attribute.</span></span>  
  
 <span data-ttu-id="0e6d6-123">При записи пустого элемента, дополнительные добавляется пробел между именем тега и закрывающим тегом, например `<item />`.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-123">When writing an empty element, an additional space is added between tag name and the closing tag, for example `<item />`.</span></span> <span data-ttu-id="0e6d6-124">Это обеспечивает совместимость с более старых браузерах.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-124">This provides compatibility with older browsers.</span></span>  
  
 <span data-ttu-id="0e6d6-125">Когда `String` используется в качестве параметра метода `null` и `String.Empty` являются эквивалентными.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-125">When a `String` is used as method parameter, `null` and `String.Empty` are equivalent.</span></span> <span data-ttu-id="0e6d6-126">`String.Empty` соответствует правилам W3C.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-126">`String.Empty` follows the W3C rules.</span></span>  
  
 <span data-ttu-id="0e6d6-127">Для создания строго типизированных данных используйте <xref:System.Xml.XmlConvert> класса для преобразования типов данных в строку.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-127">To write strongly typed data, use the <xref:System.Xml.XmlConvert> class to convert data types to string.</span></span> <span data-ttu-id="0e6d6-128">Например, следующий код C# преобразует данные из `Double` для `String` и записывает элемент `<price>19.95</price>`.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-128">For example, the following C# code converts the data from `Double` to `String` and writes the element `<price>19.95</price>`.</span></span>  
  
```csharp  
Double price = 19.95;  
writer.WriteElementString("price", XmlConvert.ToString(price));  
```  
  
 <span data-ttu-id="0e6d6-129">`XmlTextWriter` не проверяет следующее:</span><span class="sxs-lookup"><span data-stu-id="0e6d6-129">`XmlTextWriter` does not check for the following:</span></span>  
  
-   <span data-ttu-id="0e6d6-130">Недопустимые символы в именах элементов и атрибутов.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-130">Invalid characters in attribute and element names.</span></span>  
  
-   <span data-ttu-id="0e6d6-131">Символы Юникода, которые не соответствуют указанной кодировке.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-131">Unicode characters that do not fit the specified encoding.</span></span> <span data-ttu-id="0e6d6-132">Если знаки Юникода не соответствуют указанной кодировке `XmlTextWriter` не включает знаки Юникода в сущности знаков.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-132">If the Unicode characters do not fit the specified encoding, the `XmlTextWriter` does not escape the Unicode characters into character entities.</span></span>  
  
-   <span data-ttu-id="0e6d6-133">Повторяющиеся атрибуты.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-133">Duplicate attributes.</span></span>  
  
-   <span data-ttu-id="0e6d6-134">Знаки в общем идентификаторе DOCTYPE или идентификатор системы.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-134">Characters in the DOCTYPE public identifier or system identifier.</span></span>  
  
## <a name="security-considerations"></a><span data-ttu-id="0e6d6-135">Вопросы безопасности</span><span class="sxs-lookup"><span data-stu-id="0e6d6-135">Security Considerations</span></span>  
 <span data-ttu-id="0e6d6-136">Следующие элементы, которые следует учитывать при работе с <xref:System.Xml.XmlTextWriter> класса.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-136">The following items are things to consider when working with the <xref:System.Xml.XmlTextWriter> class.</span></span>  
  
-   <span data-ttu-id="0e6d6-137">Исключения, вызванные <xref:System.Xml.XmlTextWriter> , могут содержать сведения о пути, которые не следует в приведенном выше приложения.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-137">Exceptions thrown by the <xref:System.Xml.XmlTextWriter> can disclose path information that you do not want bubbled up to the application.</span></span> <span data-ttu-id="0e6d6-138">Приложения должны перехватывать исключения и обрабатывать их соответствующим образом.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-138">Your applications must catch exceptions and process them appropriately.</span></span>  
  
-   <span data-ttu-id="0e6d6-139">При передаче <xref:System.Xml.XmlTextWriter> другому приложению ему предоставляется базовый поток.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-139">When you pass the <xref:System.Xml.XmlTextWriter> to another application the underlying stream is exposed to that application.</span></span> <span data-ttu-id="0e6d6-140">Если нужно передать <xref:System.Xml.XmlTextWriter> приложению с частичным доверием, то следует использовать объект <xref:System.Xml.XmlWriter>, созданный методом <xref:System.Xml.XmlWriter.Create%2A>.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-140">If you need to pass the <xref:System.Xml.XmlTextWriter> to a semi-trusted application, you should use an <xref:System.Xml.XmlWriter> object created by the <xref:System.Xml.XmlWriter.Create%2A> method instead.</span></span>  
  
-   <span data-ttu-id="0e6d6-141"><xref:System.Xml.XmlTextWriter> Не проверяет все данные, передаваемые <xref:System.Xml.XmlTextWriter.WriteDocType%2A> или <xref:System.Xml.XmlTextWriter.WriteRaw%2A> методы.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-141">The <xref:System.Xml.XmlTextWriter> does not validate any data that is passed to the <xref:System.Xml.XmlTextWriter.WriteDocType%2A> or <xref:System.Xml.XmlTextWriter.WriteRaw%2A> methods.</span></span> <span data-ttu-id="0e6d6-142">Не следует передавать в эти методы произвольные данные.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-142">You should not pass arbitrary data to these methods.</span></span>  
  
-   <span data-ttu-id="0e6d6-143">Если изменены параметры по умолчанию, нет никакой гарантии, что созданные выходные данные является корректным XML-данных.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-143">If the default settings are changed, there is no guarantee that the generated output is well-formed XML data.</span></span>  
  
-   <span data-ttu-id="0e6d6-144">Следует принимать вспомогательные компоненты, такие как <xref:System.Text.Encoding> объекта из ненадежного источника.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-144">Do not accept supporting components, such as an <xref:System.Text.Encoding> object, from an untrusted source.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="0e6d6-145">Создает экземпляр класса <see langword="XmlTextWriter" />.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-145">Creates an instance of the <see langword="XmlTextWriter" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="0e6d6-146">Начиная с .NET Framework 2.0, рекомендуется создать <xref:System.Xml.XmlWriter> экземпляров с помощью <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> метод и <xref:System.Xml.XmlWriterSettings> класса, чтобы воспользоваться преимуществами новых функций.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-146">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlTextWriter (System.IO.TextWriter w);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.TextWriter w) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.#ctor(System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (w As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlTextWriter(System::IO::TextWriter ^ w);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="w" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="w"><span data-ttu-id="0e6d6-147">Экземпляр <see langword="TextWriter" />, в который выполняется запись.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-147">The <see langword="TextWriter" /> to write to.</span></span> <span data-ttu-id="0e6d6-148">Предполагается, что для <see langword="TextWriter" /> задана верная кодировка.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-148">It is assumed that the <see langword="TextWriter" /> is already set to the correct encoding.</span></span></param>
        <summary><span data-ttu-id="0e6d6-149">Инициализирует новый экземпляр класса <see langword="XmlTextWriter" /> с помощью указанного класса <see cref="T:System.IO.TextWriter" />.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-149">Creates an instance of the <see langword="XmlTextWriter" /> class using the specified <see cref="T:System.IO.TextWriter" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="0e6d6-150">Начиная с .NET Framework 2.0, рекомендуется создать <xref:System.Xml.XmlWriter> экземпляров с помощью <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> метод и <xref:System.Xml.XmlWriterSettings> класса, чтобы воспользоваться преимуществами новых функций.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-150">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlTextWriter (System.IO.Stream w, System.Text.Encoding encoding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream w, class System.Text.Encoding encoding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.#ctor(System.IO.Stream,System.Text.Encoding)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlTextWriter(System::IO::Stream ^ w, System::Text::Encoding ^ encoding);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="w" Type="System.IO.Stream" />
        <Parameter Name="encoding" Type="System.Text.Encoding" />
      </Parameters>
      <Docs>
        <param name="w"><span data-ttu-id="0e6d6-151">Поток, в который будет выполняться запись.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-151">The stream to which you want to write.</span></span></param>
        <param name="encoding"><span data-ttu-id="0e6d6-152">Создаваемая кодировка.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-152">The encoding to generate.</span></span> <span data-ttu-id="0e6d6-153">Если для кодировки задано значение <see langword="null" />, для потока используется кодировка UTF-8, а атрибут кодировки исключается из <see langword="ProcessingInstruction" />.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-153">If encoding is <see langword="null" /> it writes out the stream as UTF-8 and omits the encoding attribute from the <see langword="ProcessingInstruction" />.</span></span></param>
        <summary><span data-ttu-id="0e6d6-154">Создает экземпляр класса <see langword="XmlTextWriter" /> с помощью указанного потока и кодировки.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-154">Creates an instance of the <see langword="XmlTextWriter" /> class using the specified stream and encoding.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="0e6d6-155">Начиная с .NET Framework 2.0, рекомендуется создать <xref:System.Xml.XmlWriter> экземпляров с помощью <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> метод и <xref:System.Xml.XmlWriterSettings> класса, чтобы воспользоваться преимуществами новых функций.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-155">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="0e6d6-156">Кодировка не поддерживается или не может быть записано в поток.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-156">The encoding is not supported or the stream cannot be written to.</span></span></exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0e6d6-157">Свойство <paramref name="w" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-157"><paramref name="w" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlTextWriter (string filename, System.Text.Encoding encoding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string filename, class System.Text.Encoding encoding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.#ctor(System.String,System.Text.Encoding)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlTextWriter(System::String ^ filename, System::Text::Encoding ^ encoding);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
        <Parameter Name="encoding" Type="System.Text.Encoding" />
      </Parameters>
      <Docs>
        <param name="filename"><span data-ttu-id="0e6d6-158">Имя файла, в который осуществляется запись.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-158">The filename to write to.</span></span> <span data-ttu-id="0e6d6-159">Если файл существует, он будет усечен и в него будет записано новое содержимое.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-159">If the file exists, it truncates it and overwrites it with the new content.</span></span></param>
        <param name="encoding"><span data-ttu-id="0e6d6-160">Создаваемая кодировка.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-160">The encoding to generate.</span></span> <span data-ttu-id="0e6d6-161">Если для кодировки задано значение <see langword="null" />, для файла используется кодировка UTF-8, а атрибут кодировки исключается из <see langword="ProcessingInstruction" />.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-161">If encoding is <see langword="null" /> it writes the file out as UTF-8, and omits the encoding attribute from the <see langword="ProcessingInstruction" />.</span></span></param>
        <summary><span data-ttu-id="0e6d6-162">Создает экземпляр класса <see cref="T:System.Xml.XmlTextWriter" /> с помощью указанного файла.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-162">Creates an instance of the <see cref="T:System.Xml.XmlTextWriter" /> class using the specified file.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="0e6d6-163">Начиная с .NET Framework 2.0, рекомендуется создать <xref:System.Xml.XmlWriter> экземпляров с помощью <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> метод и <xref:System.Xml.XmlWriterSettings> класса, чтобы воспользоваться преимуществами новых функций.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-163">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="0e6d6-164">Кодировка не поддерживается, имя файла является пустым, содержит только пробелы или один или несколько недопустимых символов.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-164">The encoding is not supported; the filename is empty, contains only white space, or contains one or more invalid characters.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="0e6d6-165">Отказано в доступе.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-165">Access is denied.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0e6d6-166">Имя файла — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-166">The filename is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="0e6d6-167">Не найден каталог для записи.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-167">The directory to write to is not found.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="0e6d6-168">Имя файла включает неверный или недопустимый синтаксис имени файла, имени каталога или метки тома.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-168">The filename includes an incorrect or invalid syntax for file name, directory name, or volume label syntax.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="0e6d6-169">У вызывающего объекта отсутствует необходимое разрешение.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-169">The caller does not have the required permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BaseStream">
      <MemberSignature Language="C#" Value="public System.IO.Stream BaseStream { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.Stream BaseStream" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextWriter.BaseStream" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BaseStream As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Stream ^ BaseStream { System::IO::Stream ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0e6d6-170">Возвращает объект базового потока.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-170">Gets the underlying stream object.</span></span></summary>
        <value><span data-ttu-id="0e6d6-171">Поток, в который осуществляется запись с помощью <see langword="XmlTextWriter" /> или значение <see langword="null" />, если <see langword="XmlTextWriter" /> создан с помощью класса <see cref="T:System.IO.TextWriter" />, который не наследуется от класса <see cref="T:System.IO.StreamWriter" />.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-171">The stream to which the <see langword="XmlTextWriter" /> is writing or <see langword="null" /> if the <see langword="XmlTextWriter" /> was constructed using a <see cref="T:System.IO.TextWriter" /> that does not inherit from the <see cref="T:System.IO.StreamWriter" /> class.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="0e6d6-172">Начиная с .NET Framework 2.0, рекомендуется создать <xref:System.Xml.XmlWriter> экземпляров с помощью <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> метод и <xref:System.Xml.XmlWriterSettings> класса, чтобы воспользоваться преимуществами новых функций.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-172">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="0e6d6-173">Если средство записи было создано с помощью `TextWriter` , производный от `StreamWriter` класса, это свойство эквивалентно <xref:System.IO.StreamWriter.BaseStream%2A?displayProperty=nameWithType> свойство.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-173">If the writer was constructed using a `TextWriter` that is derived from the `StreamWriter` class, this property is equivalent to the <xref:System.IO.StreamWriter.BaseStream%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="0e6d6-174">Если средство записи было создано с помощью <xref:System.IO.Stream>, это свойство возвращает `Stream` передается конструктору.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-174">If the writer was constructed using a <xref:System.IO.Stream>, this property returns the `Stream` passed to the constructor.</span></span> <span data-ttu-id="0e6d6-175">Если средство записи было создано с использованием имени файла, это свойство возвращает `Stream` представляющий файл.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-175">If the writer was constructed using a file name, this property returns the `Stream` representing the file.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Close();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0e6d6-176">Закрывает данный и базовый потоки.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-176">Closes this stream and the underlying stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="0e6d6-177">Начиная с .NET Framework 2.0, рекомендуется создать <xref:System.Xml.XmlWriter> экземпляров с помощью <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> метод и <xref:System.Xml.XmlWriterSettings> класса, чтобы воспользоваться преимуществами новых функций.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-177">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="0e6d6-178">Любые элементы или атрибуты, которые открыты автоматически закрывается.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-178">Any elements or attributes left open are automatically closed.</span></span>  
  
 <span data-ttu-id="0e6d6-179">Этот метод не создает исключений.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-179">This method does not throw any exceptions.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0e6d6-180">Следующий пример записывает фрагмент XML.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-180">The following example writes an XML fragment.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.Formatting Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.Formatting Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.Formatting Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.Formatting Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.Formatting Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.Formatting Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public override void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Flush();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0e6d6-181">Записывает в базовый поток содержимое буфера и сохраняет базовый поток.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-181">Flushes whatever is in the buffer to the underlying streams and also flushes the underlying stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="0e6d6-182">Начиная с .NET Framework 2.0, рекомендуется создать <xref:System.Xml.XmlWriter> экземпляров с помощью <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> метод и <xref:System.Xml.XmlWriterSettings> класса, чтобы воспользоваться преимуществами новых функций.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-182">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="0e6d6-183">Это называется вместо <xref:System.Xml.XmlTextWriter.Close%2A> при необходимости записать больше данных в основной поток без потери буфера.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-183">This is called instead of <xref:System.Xml.XmlTextWriter.Close%2A> when you want to write more to the underlying stream without losing what is still in the buffer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0e6d6-184">Следующий пример записывает двух фрагментов XML.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-184">The following example writes out two XML fragments.</span></span>  
  
 [!code-cpp[XmlTextWriter.Flush#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlTextWriter.Flush/CPP/write2docs.cpp#1)]
 [!code-csharp[XmlTextWriter.Flush#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlTextWriter.Flush/CS/write2docs.cs#1)]
 [!code-vb[XmlTextWriter.Flush#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlTextWriter.Flush/VB/write2docs.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Formatting">
      <MemberSignature Language="C#" Value="public System.Xml.Formatting Formatting { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.Formatting Formatting" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextWriter.Formatting" />
      <MemberSignature Language="VB.NET" Value="Public Property Formatting As Formatting" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Formatting Formatting { System::Xml::Formatting get(); void set(System::Xml::Formatting value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Formatting</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0e6d6-185">Определяет способ форматирования выходных данных.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-185">Indicates how the output is formatted.</span></span></summary>
        <value><span data-ttu-id="0e6d6-186">Одно из значений перечисления <see cref="T:System.Xml.Formatting" />.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-186">One of the <see cref="T:System.Xml.Formatting" /> values.</span></span> <span data-ttu-id="0e6d6-187">По умолчанию используется значение <see langword="Formatting.None" /> (без форматирования).</span><span class="sxs-lookup"><span data-stu-id="0e6d6-187">The default is <see langword="Formatting.None" /> (no special formatting).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="0e6d6-188">Начиная с .NET Framework 2.0, рекомендуется создать <xref:System.Xml.XmlWriter> экземпляров с помощью <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> метод и <xref:System.Xml.XmlWriterSettings> класса, чтобы воспользоваться преимуществами новых функций.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-188">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="0e6d6-189">Если `Indented` был установлен, дочерние элементы отображаются с отступом с помощью <xref:System.Xml.XmlTextWriter.Indentation%2A> и <xref:System.Xml.XmlTextWriter.IndentChar%2A> свойства.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-189">If the `Indented` option is set, child elements are indented using the <xref:System.Xml.XmlTextWriter.Indentation%2A> and <xref:System.Xml.XmlTextWriter.IndentChar%2A> properties.</span></span> <span data-ttu-id="0e6d6-190">Только содержимое элемента располагаются с отступом.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-190">Only element content is indented.</span></span> <span data-ttu-id="0e6d6-191">Следующий код C# считывает элементы HTML, включая смешанное содержимое:</span><span class="sxs-lookup"><span data-stu-id="0e6d6-191">The following C# code writes out HTML elements including mixed content:</span></span>  
  
```csharp  
XmlTextWriter w = new XmlTextWriter(Console.Out);   
 w.Formatting = Formatting.Indented;   
 w.WriteStartElement("ol");   
 w.WriteStartElement("li");   
 w.WriteString("The big "); // This means "li" now has a mixed content model.  
 w.WriteElementString("b", "E");   
 w.WriteElementString("i", "lephant");   
 w.WriteString(" walks slowly.");   
 w.WriteEndElement();   
 w.WriteEndElement();  
```  
  
 <span data-ttu-id="0e6d6-192">Этот код создает следующие выходные данные:</span><span class="sxs-lookup"><span data-stu-id="0e6d6-192">The above code produces the following output:</span></span>  
  
```xml  
<ol>   
  <li>The big <b>E</b><i>lephant</i> walks slowly.</li>   
</ol>  
```  
  
 <span data-ttu-id="0e6d6-193">При просмотре в формате HTML пробелы между элементами полужирным шрифтом или курсивом.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-193">When this is viewed in HTML no white space appears between the bold and italic elements.</span></span> <span data-ttu-id="0e6d6-194">На самом деле в этом примере если отступов был добавлен между этими элементами слово «Elephant» будет неправильно разорвано.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-194">In fact, in this example, if indenting was added between these elements the word "Elephant" would be incorrectly broken.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0e6d6-195">Любой текст содержимого, за исключением записи `String.Empty` помещает элемент в режиме смешанного содержимого.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-195">Writing any text content, excluding `String.Empty` puts that element into mixed content mode.</span></span> <span data-ttu-id="0e6d6-196">Дочерние элементы не наследуют это состояние «смешанный».</span><span class="sxs-lookup"><span data-stu-id="0e6d6-196">Child elements do not inherit this "mixed" mode status.</span></span> <span data-ttu-id="0e6d6-197">Дочерний элемент элемента «смешанный» применено форматирование, если он не содержит «смешанное» содержимое.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-197">A child element of a "mixed" element does indenting, unless it is also contains "mixed" content.</span></span> <span data-ttu-id="0e6d6-198">Содержимое элемента (http://www.w3.org/TR/1998/REC-xml-19980210#sec-element-content) и смешанного содержимого (http://www.w3.org/TR/1998/REC-xml-19980210#sec-mixed-content) определяются в соответствии с настоящими условиями определения XML 1.0.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-198">Element content (http://www.w3.org/TR/1998/REC-xml-19980210#sec-element-content) and mixed content (http://www.w3.org/TR/1998/REC-xml-19980210#sec-mixed-content) are defined according to the XML 1.0 definitions of these terms.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0e6d6-199">Следующий пример записывает фрагмент XML.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-199">The following example writes an XML fragment.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.Formatting Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.Formatting Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.Formatting Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.Formatting Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.Formatting Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.Formatting Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Formatting" />
      </Docs>
    </Member>
    <Member MemberName="Indentation">
      <MemberSignature Language="C#" Value="public int Indentation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Indentation" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextWriter.Indentation" />
      <MemberSignature Language="VB.NET" Value="Public Property Indentation As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Indentation { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0e6d6-200">Возвращает или задает количество записываемых IndentChars для каждого уровня в иерархии, если свойство <see cref="P:System.Xml.XmlTextWriter.Formatting" /> имеет значение <see langword="Formatting.Indented" />.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-200">Gets or sets how many IndentChars to write for each level in the hierarchy when <see cref="P:System.Xml.XmlTextWriter.Formatting" /> is set to <see langword="Formatting.Indented" />.</span></span></summary>
        <value><span data-ttu-id="0e6d6-201">Количество <see langword="IndentChars" /> для каждого уровня.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-201">Number of <see langword="IndentChars" /> for each level.</span></span> <span data-ttu-id="0e6d6-202">Значение по умолчанию — 2.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-202">The default is 2.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="0e6d6-203">Начиная с .NET Framework 2.0, рекомендуется создать <xref:System.Xml.XmlWriter> экземпляров с помощью <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> метод и <xref:System.Xml.XmlWriterSettings> класса, чтобы воспользоваться преимуществами новых функций.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-203">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="0e6d6-204">Отступ выполняется в следующие типы узлов: `DocumentType`, `Element`, `Comment`, `ProcessingInstruction`, и `CDATASection`.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-204">Indentation is performed on following node types: `DocumentType`, `Element`, `Comment`, `ProcessingInstruction`, and `CDATASection`.</span></span> <span data-ttu-id="0e6d6-205">Все другие типы узлов не затрагиваются.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-205">All other node types are not affected.</span></span> <span data-ttu-id="0e6d6-206">`XmlTextWriter` Не отступ внутреннее подмножество DTD.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-206">The `XmlTextWriter` does not indent the internal DTD subset.</span></span> <span data-ttu-id="0e6d6-207">Тем не менее это можно сделать следующее, чтобы применить форматирование к внутренним подмножеством DTD.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-207">However, you could do the following to apply formatting to the internal DTD subset.</span></span>  
  
```csharp  
String name = "Employees";  
String pubid = null;  
String sysid = null;  
String subset =  
@"  
    <!ELEMENT Employees (Employee)+>  
    <!ELEMENT Employee EMPTY>  
    <!ATTLIST Employee firstname CDATA #REQUIRED>  
    <!ENTITY Company 'Microsoft'>]>  
";  
XmlTextWriter tw = new XmlTextWriter(Console.Out);  
tw.WriteDocType(name, pubid, sysid, subset);  
```  
  
   
  
## Examples  
 <span data-ttu-id="0e6d6-208">Следующий пример записывает фрагмент XML.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-208">The following example writes an XML fragment.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.Formatting Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.Formatting Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.Formatting Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.Formatting Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.Formatting Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.Formatting Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="0e6d6-209">Свойству присвоено отрицательное значение.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-209">Setting this property to a negative value.</span></span></exception>
        <altmember cref="P:System.Xml.XmlTextWriter.IndentChar" />
        <altmember cref="T:System.Xml.Formatting" />
      </Docs>
    </Member>
    <Member MemberName="IndentChar">
      <MemberSignature Language="C#" Value="public char IndentChar { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance char IndentChar" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextWriter.IndentChar" />
      <MemberSignature Language="VB.NET" Value="Public Property IndentChar As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property char IndentChar { char get(); void set(char value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0e6d6-210">Возвращает или задает знак для отступа, если свойство <see cref="P:System.Xml.XmlTextWriter.Formatting" /> имеет значение <see langword="Formatting.Indented" />.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-210">Gets or sets which character to use for indenting when <see cref="P:System.Xml.XmlTextWriter.Formatting" /> is set to <see langword="Formatting.Indented" />.</span></span></summary>
        <value><span data-ttu-id="0e6d6-211">Символ, используемый для отступа.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-211">The character to use for indenting.</span></span> <span data-ttu-id="0e6d6-212">По умолчанию используется пробел.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-212">The default is space.</span></span>  
  
 <block subset="none" type="note"><para>  
 <span data-ttu-id="0e6d6-213"><see langword="XmlTextWriter" /> позволяет задать это свойство для любого знака.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-213">The <see langword="XmlTextWriter" /> allows you to set this property to any character.</span></span> <span data-ttu-id="0e6d6-214">Для обеспечения корректности XML-кода необходимо использовать только допустимые символы-разделители: 0x9, 0x10, 0x13 или 0x20.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-214">To ensure valid XML, you must specify a valid white space character, 0x9, 0x10, 0x13 or 0x20.</span></span>  
  
</para></block></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="0e6d6-215">Начиная с .NET Framework 2.0, рекомендуется создать <xref:System.Xml.XmlWriter> экземпляров с помощью <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> метод и <xref:System.Xml.XmlWriterSettings> класса, чтобы воспользоваться преимуществами новых функций.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-215">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xml.XmlTextWriter.Indentation" />
        <altmember cref="T:System.Xml.Formatting" />
      </Docs>
    </Member>
    <Member MemberName="LookupPrefix">
      <MemberSignature Language="C#" Value="public override string LookupPrefix (string ns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string LookupPrefix(string ns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.LookupPrefix(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function LookupPrefix (ns As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ LookupPrefix(System::String ^ ns);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ns" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="ns"><span data-ttu-id="0e6d6-216">URI пространства имен, для которого требуется найти префикс.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-216">Namespace URI whose prefix you want to find.</span></span></param>
        <summary><span data-ttu-id="0e6d6-217">Возвращает для URI пространства имен ближайший префикс, определенный в текущей области видимости пространства имен.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-217">Returns the closest prefix defined in the current namespace scope for the namespace URI.</span></span></summary>
        <returns><span data-ttu-id="0e6d6-218">Соответствующий префикс.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-218">The matching prefix.</span></span> <span data-ttu-id="0e6d6-219">Или значение <see langword="null" />, если в текущей области отсутствует соответствующий URI пространства имен.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-219">Or <see langword="null" /> if no matching namespace URI is found in the current scope.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="0e6d6-220">Начиная с .NET Framework 2.0, рекомендуется создать <xref:System.Xml.XmlWriter> экземпляров с помощью <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> метод и <xref:System.Xml.XmlWriterSettings> класса, чтобы воспользоваться преимуществами новых функций.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-220">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0e6d6-221">Следующий пример записывает в книгу.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-221">The following example writes out a book.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteStartElement Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartElement Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteStartElement Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartElement Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteStartElement Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartElement Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0e6d6-222"><paramref name="ns" /> имеет значение <see langword="null" /> или <see langword="String.Empty" />.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-222"><paramref name="ns" /> is either <see langword="null" /> or <see langword="String.Empty" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Namespaces">
      <MemberSignature Language="C#" Value="public bool Namespaces { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Namespaces" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextWriter.Namespaces" />
      <MemberSignature Language="VB.NET" Value="Public Property Namespaces As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Namespaces { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0e6d6-223">Возвращает или задает значение, указывающее, поддерживаются ли пространства имен.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-223">Gets or sets a value indicating whether to do namespace support.</span></span></summary>
        <value>
          <span data-ttu-id="0e6d6-224">Значение <see langword="true" /> — пространства имен поддерживаются; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-224"><see langword="true" /> to support namespaces; otherwise, <see langword="false" />.</span></span>  
  
 <span data-ttu-id="0e6d6-225">Значение по умолчанию: <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-225">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="0e6d6-226">Начиная с .NET Framework 2.0, рекомендуется создать <xref:System.Xml.XmlWriter> экземпляров с помощью <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> метод и <xref:System.Xml.XmlWriterSettings> класса, чтобы воспользоваться преимуществами новых функций.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-226">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="0e6d6-227">Это свойство определяет, поддерживает ли средство записи пространства имен W3C в рекомендации XML, расположенной по www.w3.org/TR/REC-xml-names.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-227">This property determines whether the writer supports the W3C Namespaces in XML recommendation located at www.w3.org/TR/REC-xml-names.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="0e6d6-228">Это свойство можно изменить только в состоянии <see langword="WriteState.Start" />.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-228">You can only change this property when in the <see langword="WriteState.Start" /> state.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="QuoteChar">
      <MemberSignature Language="C#" Value="public char QuoteChar { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance char QuoteChar" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextWriter.QuoteChar" />
      <MemberSignature Language="VB.NET" Value="Public Property QuoteChar As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property char QuoteChar { char get(); void set(char value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0e6d6-229">Возвращает или задает знак, используемый для заключения значений атрибутов в кавычки.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-229">Gets or sets which character to use to quote attribute values.</span></span></summary>
        <value><span data-ttu-id="0e6d6-230">Знак, используемый для заключения значений атрибутов в кавычки.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-230">The character to use to quote attribute values.</span></span> <span data-ttu-id="0e6d6-231">Это должен быть либо одинарные (&amp;#39;) или двойные кавычки (&amp;#34;).</span><span class="sxs-lookup"><span data-stu-id="0e6d6-231">This must be a single quote (&amp;#39;) or a double quote (&amp;#34;).</span></span> <span data-ttu-id="0e6d6-232">По умолчанию используются двойные кавычки.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-232">The default is a double quote.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="0e6d6-233">Начиная с .NET Framework 2.0, рекомендуется создать <xref:System.Xml.XmlWriter> экземпляров с помощью <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> метод и <xref:System.Xml.XmlWriterSettings> класса, чтобы воспользоваться преимуществами новых функций.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-233">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="0e6d6-234">Задание этому свойству значения, отличное от одинарные или двойные кавычки.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-234">Setting this property to something other than either a single or double quote.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteBase64">
      <MemberSignature Language="C#" Value="public override void WriteBase64 (byte[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteBase64(unsigned int8[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteBase64(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteBase64 (buffer As Byte(), index As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteBase64(cli::array &lt;System::Byte&gt; ^ buffer, int index, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="0e6d6-235">Кодируемый массив байтов.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-235">Byte array to encode.</span></span></param>
        <param name="index"><span data-ttu-id="0e6d6-236">Позиция в буфере, с которой начинается запись байтов.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-236">The position within the buffer indicating the start of the bytes to write.</span></span></param>
        <param name="count"><span data-ttu-id="0e6d6-237">Количество записываемых байтов.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-237">The number of bytes to write.</span></span></param>
        <summary><span data-ttu-id="0e6d6-238">Преобразует указанный набор двоичных байтов в кодировку base64 и записывает получившийся текст.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-238">Encodes the specified binary bytes as base64 and writes out the resulting text.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="0e6d6-239">Начиная с .NET Framework 2.0, рекомендуется создать <xref:System.Xml.XmlWriter> экземпляров с помощью <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> метод и <xref:System.Xml.XmlWriterSettings> класса, чтобы воспользоваться преимуществами новых функций.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-239">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0e6d6-240">В следующем примере кодируется входной файл с помощью `WriteBase64` и создает временный XML-файл.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-240">The following example encodes an input file using `WriteBase64` and generates a temporary XML file.</span></span> <span data-ttu-id="0e6d6-241">Декодирует временный XML-файл с помощью <xref:System.Xml.XmlTextReader.ReadBase64%2A> метод и сравнивается с исходным файлом.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-241">The temporary XML file is decoded using the <xref:System.Xml.XmlTextReader.ReadBase64%2A> method and compared to the original file.</span></span>  
  
 [!code-cpp[XmlWriter.WriteBase64#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlWriter.WriteBase64/CPP/writebase64.cpp#1)]
 [!code-csharp[XmlWriter.WriteBase64#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter.WriteBase64/CS/writebase64.cs#1)]
 [!code-vb[XmlWriter.WriteBase64#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter.WriteBase64/VB/writebase64.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0e6d6-242">Свойство <paramref name="buffer" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-242"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="0e6d6-243">Длина буфера минус <paramref name="index" /> меньше <paramref name="count" />.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-243">The buffer length minus <paramref name="index" /> is less than <paramref name="count" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="0e6d6-244">Значение параметра <paramref name="index" /> или <paramref name="count" /> меньше нуля.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-244"><paramref name="index" /> or <paramref name="count" /> is less than zero.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="0e6d6-245">Значение параметра <see cref="P:System.Xml.XmlTextWriter.WriteState" /> — <see langword="Closed" />.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-245">The <see cref="P:System.Xml.XmlTextWriter.WriteState" /> is <see langword="Closed" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteBinHex">
      <MemberSignature Language="C#" Value="public override void WriteBinHex (byte[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteBinHex(unsigned int8[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteBinHex(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteBinHex (buffer As Byte(), index As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteBinHex(cli::array &lt;System::Byte&gt; ^ buffer, int index, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="0e6d6-246">Кодируемый массив байтов.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-246">Byte array to encode.</span></span></param>
        <param name="index"><span data-ttu-id="0e6d6-247">Позиция в буфере, с которой начинается запись байтов.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-247">The position in the buffer indicating the start of the bytes to write.</span></span></param>
        <param name="count"><span data-ttu-id="0e6d6-248">Количество записываемых байтов.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-248">The number of bytes to write.</span></span></param>
        <summary><span data-ttu-id="0e6d6-249">Преобразует указанный набор двоичных байтов в кодировку binhex и записывает получившийся текст.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-249">Encodes the specified binary bytes as binhex and writes out the resulting text.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="0e6d6-250">Начиная с .NET Framework 2.0, рекомендуется создать <xref:System.Xml.XmlWriter> экземпляров с помощью <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> метод и <xref:System.Xml.XmlWriterSettings> класса, чтобы воспользоваться преимуществами новых функций.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-250">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0e6d6-251">Свойство <paramref name="buffer" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-251"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="0e6d6-252">Длина буфера минус <paramref name="index" /> меньше <paramref name="count" />.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-252">The buffer length minus <paramref name="index" /> is less than <paramref name="count" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="0e6d6-253">Значение параметра <paramref name="index" /> или <paramref name="count" /> меньше нуля.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-253"><paramref name="index" /> or <paramref name="count" /> is less than zero.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="0e6d6-254">Объект <see cref="P:System.Xml.XmlTextWriter.WriteState" /> закрыт.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-254">The <see cref="P:System.Xml.XmlTextWriter.WriteState" /> is Closed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteCData">
      <MemberSignature Language="C#" Value="public override void WriteCData (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteCData(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteCData(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteCData (text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteCData(System::String ^ text);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text"><span data-ttu-id="0e6d6-255">Текст, записываемый в блок CDATA.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-255">Text to place inside the CDATA block.</span></span></param>
        <summary><span data-ttu-id="0e6d6-256">Записывает блок &lt;![CDATA[...]]&gt;, содержащий заданный текст.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-256">Writes out a &lt;![CDATA[...]]&gt; block containing the specified text.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="0e6d6-257">Начиная с .NET Framework 2.0, рекомендуется создать <xref:System.Xml.XmlWriter> экземпляров с помощью <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> метод и <xref:System.Xml.XmlWriterSettings> класса, чтобы воспользоваться преимуществами новых функций.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-257">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="0e6d6-258">Если `text` либо `null` или `String.Empty`, этот метод записывает пустой блок CDATA, например \<![CDATA[]]]><![CDATA[]>.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-258">If `text` is either `null` or `String.Empty`, this method writes an empty CDATA block, for example \<![CDATA[]]]><![CDATA[]>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0e6d6-259">Следующий пример записывает XML-файл, представляющий книгу.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-259">The following example writes an XML file representing a book.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="0e6d6-260">Текст приведет к неправильному формированию документа XML.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-260">The text would result in a non-well formed XML document.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="0e6d6-261">Значение параметра <see cref="P:System.Xml.XmlTextWriter.WriteState" /> — <see langword="Closed" />.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-261">The <see cref="P:System.Xml.XmlTextWriter.WriteState" /> is <see langword="Closed" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteCharEntity">
      <MemberSignature Language="C#" Value="public override void WriteCharEntity (char ch);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteCharEntity(char ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteCharEntity(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteCharEntity (ch As Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteCharEntity(char ch);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="ch"><span data-ttu-id="0e6d6-262">Знак Юникода, для которого создается сущность.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-262">Unicode character for which to generate a character entity.</span></span></param>
        <summary><span data-ttu-id="0e6d6-263">Инициирует создание сущности знака для указанного значения знака Юникода.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-263">Forces the generation of a character entity for the specified Unicode character value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="0e6d6-264">Начиная с .NET Framework 2.0, рекомендуется создать <xref:System.Xml.XmlWriter> экземпляров с помощью <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> метод и <xref:System.Xml.XmlWriterSettings> класса, чтобы воспользоваться преимуществами новых функций.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-264">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="0e6d6-265">Этот метод записывает символ Юникода в формат ссылки на сущности шестнадцатеричных цифр.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-265">This method writes the Unicode character in hexadecimal character entity reference format.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0e6d6-266">В следующем примере используется `WriteCharEntity` метод для записи адреса электронной почты.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-266">The following example uses the `WriteCharEntity` method to write an email address.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteTimeSpan Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteTimeSpan Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteTimeSpan Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteTimeSpan Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteTimeSpan Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteTimeSpan Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="0e6d6-267">Символ находится в диапазоне символов суррогатной пары <see langword="0xd800" /> - <see langword="0xdfff" />. В противном случае текст приведет к созданию неправильно сформированного документа XML.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-267">The character is in the surrogate pair character range, <see langword="0xd800" /> - <see langword="0xdfff" />; or the text would result in a non-well formed XML document.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="0e6d6-268">Значение параметра <see cref="P:System.Xml.XmlTextWriter.WriteState" /> — <see langword="Closed" />.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-268">The <see cref="P:System.Xml.XmlTextWriter.WriteState" /> is <see langword="Closed" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteChars">
      <MemberSignature Language="C#" Value="public override void WriteChars (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteChars(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteChars(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteChars (buffer As Char(), index As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteChars(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="0e6d6-269">Массив символов, содержащий текст для записи.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-269">Character array containing the text to write.</span></span></param>
        <param name="index"><span data-ttu-id="0e6d6-270">Позиция в буфере, с которой начинается запись текста.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-270">The position in the buffer indicating the start of the text to write.</span></span></param>
        <param name="count"><span data-ttu-id="0e6d6-271">Количество символов для записи.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-271">The number of characters to write.</span></span></param>
        <summary><span data-ttu-id="0e6d6-272">Записывает содержимое текстового буфера.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-272">Writes text one buffer at a time.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="0e6d6-273">Начиная с .NET Framework 2.0, рекомендуется создать <xref:System.Xml.XmlWriter> экземпляров с помощью <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> метод и <xref:System.Xml.XmlWriterSettings> класса, чтобы воспользоваться преимуществами новых функций.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-273">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="0e6d6-274">Этот метод можно использовать для записи больших объемов текста один буфер за раз.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-274">This method can be used to write large amounts of text one buffer at a time.</span></span>  
  
 <span data-ttu-id="0e6d6-275">Специальная обработка нужно сделать, чтобы обеспечить `WriteChars` метод не разбит на несколько операций записи буфера пары знаков-заместителей.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-275">Special handling must be done to ensure the `WriteChars` method does not split surrogate pair characters across multiple buffer writes.</span></span> <span data-ttu-id="0e6d6-276">Допустимые диапазоны пары знаков-заместителей определены в спецификации XML.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-276">The XML specification defines the valid ranges for surrogate pairs.</span></span>  
  
 <span data-ttu-id="0e6d6-277">Если пары знаков-заместителей, записываемых, приведет к появлению пары знаков-заместителей разделяются в буфере исключение.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-277">An exception is thrown if surrogate pair characters are written that would result in the surrogate pair characters being split in the buffer.</span></span>  
  
   
  
## Examples  
 [!code-csharp[XmlTextWriter.WriteChars#1](~/samples/snippets/csharp/VS_Snippets_Data/xmltextwriter.writechars/cs/xmlwriterwritecharsexample.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0e6d6-278">Свойство <paramref name="buffer" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-278"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="0e6d6-279">Значение параметра <paramref name="index" /> или <paramref name="count" /> меньше нуля.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-279"><paramref name="index" /> or <paramref name="count" /> is less than zero.</span></span>  
  
 <span data-ttu-id="0e6d6-280">- или -</span><span class="sxs-lookup"><span data-stu-id="0e6d6-280">-or-</span></span>  
  
 <span data-ttu-id="0e6d6-281">Длина буфера за вычетом <paramref name="index" /> меньше <paramref name="count" />; вызов приводит к разделению пар символов-заместителей или к записи недопустимой пары символов-заместителей.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-281">The buffer length minus <paramref name="index" /> is less than <paramref name="count" />; the call results in surrogate pair characters being split or an invalid surrogate pair being written.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="0e6d6-282">Объект <see cref="P:System.Xml.XmlTextWriter.WriteState" /> закрыт.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-282">The <see cref="P:System.Xml.XmlTextWriter.WriteState" /> is Closed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteComment">
      <MemberSignature Language="C#" Value="public override void WriteComment (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteComment(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteComment(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteComment (text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteComment(System::String ^ text);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text"><span data-ttu-id="0e6d6-283">Текст, записываемый в примечание.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-283">Text to place inside the comment.</span></span></param>
        <summary><span data-ttu-id="0e6d6-284">Записывает примечание &lt;!--...--&gt;, содержащее заданный текст.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-284">Writes out a comment &lt;!--...--&gt; containing the specified text.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="0e6d6-285">Начиная с .NET Framework 2.0, рекомендуется создать <xref:System.Xml.XmlWriter> экземпляров с помощью <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> метод и <xref:System.Xml.XmlWriterSettings> класса, чтобы воспользоваться преимуществами новых функций.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-285">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="0e6d6-286">Если `text` либо `null` или `String.Empty`, этот метод записывает `Comment` без данных содержимого, например \<!--->.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-286">If `text` is either `null` or `String.Empty`, this method writes a `Comment` with no data content, for example \<!---->.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0e6d6-287">Следующий пример записывает XML-файл, представляющий книгу.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-287">The following example writes an XML file representing a book.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="0e6d6-288">Текст приведет к плохому формированию документа XML.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-288">The text would result in a non-well formed XML document</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="0e6d6-289">Значение параметра <see cref="P:System.Xml.XmlTextWriter.WriteState" /> — <see langword="Closed" />.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-289">The <see cref="P:System.Xml.XmlTextWriter.WriteState" /> is <see langword="Closed" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteDocType">
      <MemberSignature Language="C#" Value="public override void WriteDocType (string name, string pubid, string sysid, string subset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteDocType(string name, string pubid, string sysid, string subset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteDocType(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteDocType (name As String, pubid As String, sysid As String, subset As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteDocType(System::String ^ name, System::String ^ pubid, System::String ^ sysid, System::String ^ subset);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="pubid" Type="System.String" />
        <Parameter Name="sysid" Type="System.String" />
        <Parameter Name="subset" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="0e6d6-290">Имя DOCTYPE.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-290">The name of the DOCTYPE.</span></span> <span data-ttu-id="0e6d6-291">Не должно быть пустым.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-291">This must be non-empty.</span></span></param>
        <param name="pubid"><span data-ttu-id="0e6d6-292">Если значение не равно NULL, записывается также PUBLIC "pubid" "sysid", где <c>pubid</c> и <c>sysid</c> заменяются значениями заданных аргументов.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-292">If non-null it also writes PUBLIC "pubid" "sysid" where <c>pubid</c> and <c>sysid</c> are replaced with the value of the given arguments.</span></span></param>
        <param name="sysid"><span data-ttu-id="0e6d6-293">Если параметр <c>pubid</c> имеет значение NULL, а параметр <c>sysid</c> не равен NULL, записывается SYSTEM "sysid", где <c>sysid</c> замещается значением данного аргумента.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-293">If <c>pubid</c> is null and <c>sysid</c> is non-null it writes SYSTEM "sysid" where <c>sysid</c> is replaced with the value of this argument.</span></span></param>
        <param name="subset"><span data-ttu-id="0e6d6-294">Если не равно нулю, записывает [subset], где subset замещается значением данного аргумента.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-294">If non-null it writes [subset] where subset is replaced with the value of this argument.</span></span></param>
        <summary><span data-ttu-id="0e6d6-295">Записывает объявление DOCTYPE с указанным именем и дополнительными атрибутами.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-295">Writes the DOCTYPE declaration with the specified name and optional attributes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="0e6d6-296">Начиная с .NET Framework 2.0, рекомендуется создать <xref:System.Xml.XmlWriter> экземпляров с помощью <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> метод и <xref:System.Xml.XmlWriterSettings> класса, чтобы воспользоваться преимуществами новых функций.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-296">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="0e6d6-297">Этот метод не проверяет наличие недопустимых символов в `pubid`, `sysid` или `subset`.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-297">This method does not check for invalid characters in `pubid`, `sysid` or `subset`.</span></span> <span data-ttu-id="0e6d6-298">Он также не проверяет, внутреннее подмножество имеет правильный формат.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-298">It also does not check that the internal subset is well-formed.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="0e6d6-299"><xref:System.Xml.XmlTextWriter> Не проверяет все данные, передаваемые <xref:System.Xml.XmlTextWriter.WriteDocType%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-299">The <xref:System.Xml.XmlTextWriter> does not validate any data that is passed to the <xref:System.Xml.XmlTextWriter.WriteDocType%2A> method.</span></span> <span data-ttu-id="0e6d6-300">Не следует передавать произвольные данные в этот метод.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-300">You should not pass arbitrary data to this method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0e6d6-301">Следующий пример записывает XML-файл, представляющий книгу.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-301">The following example writes an XML file representing a book.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="0e6d6-302">Этот метод был вызван вне пролога (после корневого элемента).</span><span class="sxs-lookup"><span data-stu-id="0e6d6-302">This method was called outside the prolog (after the root element).</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0e6d6-303">Значение параметра <paramref name="name" /> равно <see langword="null" /> или <see langword="String.Empty" />.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-303"><paramref name="name" /> is <see langword="null" /> or <see langword="String.Empty" /></span></span>  
  
 <span data-ttu-id="0e6d6-304">- или -</span><span class="sxs-lookup"><span data-stu-id="0e6d6-304">-or-</span></span>  
  
 <span data-ttu-id="0e6d6-305">Значение <paramref name="name" /> приведет к недопустимый XML.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-305">the value for <paramref name="name" /> would result in invalid XML.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteEndAttribute">
      <MemberSignature Language="C#" Value="public override void WriteEndAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteEndAttribute() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteEndAttribute" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteEndAttribute ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteEndAttribute();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0e6d6-306">Закрывает вызов предыдущего метода <see cref="M:System.Xml.XmlTextWriter.WriteStartAttribute(System.String,System.String,System.String)" />.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-306">Closes the previous <see cref="M:System.Xml.XmlTextWriter.WriteStartAttribute(System.String,System.String,System.String)" /> call.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="0e6d6-307">Начиная с .NET Framework 2.0, рекомендуется создать <xref:System.Xml.XmlWriter> экземпляров с помощью <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> метод и <xref:System.Xml.XmlWriterSettings> класса, чтобы воспользоваться преимуществами новых функций.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-307">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="0e6d6-308">При вызове метода `WriteStartAttribute`, вы можете закрыть атрибута с помощью этого метода.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-308">If you call `WriteStartAttribute`, you can close the attribute with this method.</span></span>  
  
 <span data-ttu-id="0e6d6-309">Атрибут можно также закрыть путем вызова `WriteStartAttribute` еще раз, вызвав <xref:System.Xml.XmlWriter.WriteAttributeString%2A>, или вызов <xref:System.Xml.XmlTextWriter.WriteEndElement%2A>.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-309">You can also close the attribute by calling `WriteStartAttribute` again, calling <xref:System.Xml.XmlWriter.WriteAttributeString%2A>, or calling <xref:System.Xml.XmlTextWriter.WriteEndElement%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0e6d6-310">Следующий пример записывает в книгу.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-310">The following example writes out a book.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteStartElement Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartElement Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteStartElement Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartElement Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteStartElement Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartElement Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteEndDocument">
      <MemberSignature Language="C#" Value="public override void WriteEndDocument ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteEndDocument() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteEndDocument" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteEndDocument ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteEndDocument();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0e6d6-311">Закрывает все открытые элементы и атрибуты и возвращает средство записи в начальное состояние.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-311">Closes any open elements or attributes and puts the writer back in the Start state.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="0e6d6-312">Начиная с .NET Framework 2.0, рекомендуется создать <xref:System.Xml.XmlWriter> экземпляров с помощью <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> метод и <xref:System.Xml.XmlWriterSettings> класса, чтобы воспользоваться преимуществами новых функций.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-312">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0e6d6-313">Следующий пример записывает XML-файл, представляющий книгу.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-313">The following example writes an XML file representing a book.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="0e6d6-314">Недопустимый документ XML.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-314">The XML document is invalid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteEndElement">
      <MemberSignature Language="C#" Value="public override void WriteEndElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteEndElement() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteEndElement" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteEndElement ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteEndElement();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0e6d6-315">Закрывает один элемент и извлекает из стека область видимости соответствующего пространства имен.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-315">Closes one element and pops the corresponding namespace scope.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="0e6d6-316">Начиная с .NET Framework 2.0, рекомендуется создать <xref:System.Xml.XmlWriter> экземпляров с помощью <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> метод и <xref:System.Xml.XmlWriterSettings> класса, чтобы воспользоваться преимуществами новых функций.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-316">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="0e6d6-317">Если элемент не имеет содержимого краткий закрывающий тег «/ >» записывается; в противном случае записывается полный закрывающий тег.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-317">If the element contains no content a short end tag "/>" is written; otherwise a full end tag is written.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0e6d6-318">Следующий пример записывает XML-файл, представляющий книгу.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-318">The following example writes an XML file representing a book.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteEndElement Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteEndElement Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteEndElement Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteEndElement Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteEndElement Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteEndElement Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteEntityRef">
      <MemberSignature Language="C#" Value="public override void WriteEntityRef (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteEntityRef(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteEntityRef(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteEntityRef (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteEntityRef(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="0e6d6-319">Имя ссылки на сущность.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-319">Name of the entity reference.</span></span></param>
        <summary><span data-ttu-id="0e6d6-320">Выводит ссылку на сущность в виде <see langword="&amp;name;" />.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-320">Writes out an entity reference as <see langword="&amp;name;" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="0e6d6-321">Начиная с .NET Framework 2.0, рекомендуется создать <xref:System.Xml.XmlWriter> экземпляров с помощью <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> метод и <xref:System.Xml.XmlWriterSettings> класса, чтобы воспользоваться преимуществами новых функций.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-321">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0e6d6-322">Следующий пример записывает XML-файл, представляющий книгу.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-322">The following example writes an XML file representing a book.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="0e6d6-323"><paramref name="name" /><see langword="null" /><see langword="String.Empty" />; или текст приведет к плохому формированию документа XML.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-323">The text would result in a non-well formed XML document or <paramref name="name" /> is either <see langword="null" /> or <see langword="String.Empty" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteFullEndElement">
      <MemberSignature Language="C#" Value="public override void WriteFullEndElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteFullEndElement() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteFullEndElement" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteFullEndElement ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteFullEndElement();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0e6d6-324">Закрывает один элемент и извлекает из стека область видимости соответствующего пространства имен.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-324">Closes one element and pops the corresponding namespace scope.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="0e6d6-325">Начиная с .NET Framework 2.0, рекомендуется создать <xref:System.Xml.XmlWriter> экземпляров с помощью <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> метод и <xref:System.Xml.XmlWriterSettings> класса, чтобы воспользоваться преимуществами новых функций.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-325">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="0e6d6-326">Этот метод всегда записывает полный закрывающий тег.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-326">This method always writes the full end tag.</span></span> <span data-ttu-id="0e6d6-327">Это полезно при работе с элементами, которые должен содержать полный закрывающий тег.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-327">This is useful when dealing with elements that must include a full end tag.</span></span> <span data-ttu-id="0e6d6-328">Например, браузеры ожидают, что блоки скриптов HTML будет закрыта с « \< /script >».</span><span class="sxs-lookup"><span data-stu-id="0e6d6-328">For example, browsers expect HTML script blocks to be closed with "\</script>".</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0e6d6-329">Следующий пример записывает элемент без содержимого.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-329">The following example writes out an element with no content.</span></span> <span data-ttu-id="0e6d6-330">WriteFullEndElement используется для записи полный закрывающий тег элемента.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-330">It uses WriteFullEndElement to write the full end element tag.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteFullEndElement Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteFullEndElement Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteFullEndElement Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteFullEndElement Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteFullEndElement Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteFullEndElement Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteName">
      <MemberSignature Language="C#" Value="public override void WriteName (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteName(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteName (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteName(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="0e6d6-331">Имя для записи.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-331">Name to write.</span></span></param>
        <summary><span data-ttu-id="0e6d6-332">Записывает указанное имя, гарантируя его допустимость согласно рекомендации W3C по языку XML версии 1.0 (http://www.w3.org/TR/1998/REC-xml-19980210#NT-Name).</span><span class="sxs-lookup"><span data-stu-id="0e6d6-332">Writes out the specified name, ensuring it is a valid name according to the W3C XML 1.0 recommendation (http://www.w3.org/TR/1998/REC-xml-19980210#NT-Name).</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="0e6d6-333">Начиная с .NET Framework 2.0, рекомендуется создать <xref:System.Xml.XmlWriter> экземпляров с помощью <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> метод и <xref:System.Xml.XmlWriterSettings> класса, чтобы воспользоваться преимуществами новых функций.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-333">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="0e6d6-334">Если <xref:System.Xml.XmlTextWriter.Namespaces%2A> равно `true`, `WriteName` также проверяет имя на допустимость в соответствии с пространства имен W3C в рекомендации XML.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-334">If <xref:System.Xml.XmlTextWriter.Namespaces%2A> is set to `true`, `WriteName` also checks that the name is also valid according to the W3C Namespaces in XML recommendation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0e6d6-335">Параметр <paramref name="name" /> не является допустимым именем XML; или значение параметра <paramref name="name" /> — <see langword="null" /> или <see langword="String.Empty" />.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-335"><paramref name="name" /> is not a valid XML name; or <paramref name="name" /> is either <see langword="null" /> or <see langword="String.Empty" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteNmToken">
      <MemberSignature Language="C#" Value="public override void WriteNmToken (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteNmToken(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteNmToken(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteNmToken (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteNmToken(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="0e6d6-336">Имя для записи.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-336">Name to write.</span></span></param>
        <summary><span data-ttu-id="0e6d6-337">Записывает указанное имя, гарантируя, что это допустимый <see langword="NmToken" />, согласно рекомендации W3C по языку XML версии 1.0 (http://www.w3.org/TR/1998/REC-xml-19980210#NT-Name).</span><span class="sxs-lookup"><span data-stu-id="0e6d6-337">Writes out the specified name, ensuring it is a valid <see langword="NmToken" /> according to the W3C XML 1.0 recommendation (http://www.w3.org/TR/1998/REC-xml-19980210#NT-Name).</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="0e6d6-338">Начиная с .NET Framework 2.0, рекомендуется создать <xref:System.Xml.XmlWriter> экземпляров с помощью <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> метод и <xref:System.Xml.XmlWriterSettings> класса, чтобы воспользоваться преимуществами новых функций.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-338">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0e6d6-339">Параметр <paramref name="name" /> не является допустимым <see langword="NmToken" />; или <paramref name="name" /> равен <see langword="null" /> или <see langword="String.Empty" />.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-339"><paramref name="name" /> is not a valid <see langword="NmToken" />; or <paramref name="name" /> is either <see langword="null" /> or <see langword="String.Empty" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteProcessingInstruction">
      <MemberSignature Language="C#" Value="public override void WriteProcessingInstruction (string name, string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteProcessingInstruction(string name, string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteProcessingInstruction(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteProcessingInstruction (name As String, text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteProcessingInstruction(System::String ^ name, System::String ^ text);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="0e6d6-340">Имя инструкции обработки.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-340">Name of the processing instruction.</span></span></param>
        <param name="text"><span data-ttu-id="0e6d6-341">Текст для инструкции обработки.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-341">Text to include in the processing instruction.</span></span></param>
        <summary><span data-ttu-id="0e6d6-342">Записывает инструкцию по обработке с пробелом между именем и текстом в следующем виде: &lt;?имя текст?&gt;.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-342">Writes out a processing instruction with a space between the name and text as follows: &lt;?name text?&gt;.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="0e6d6-343">Начиная с .NET Framework 2.0, рекомендуется создать <xref:System.Xml.XmlWriter> экземпляров с помощью <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> метод и <xref:System.Xml.XmlWriterSettings> класса, чтобы воспользоваться преимуществами новых функций.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-343">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="0e6d6-344">Если `text` либо `null` или `String.Empty`, этот метод записывает `ProcessingInstruction` без данных содержимого, например \<? имя? >.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-344">If `text` is either `null` or `String.Empty`, this method writes a `ProcessingInstruction` with no data content, for example \<?name?>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0e6d6-345">Следующий пример записывает XML-файл, представляющий книгу.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-345">The following example writes an XML file representing a book.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="0e6d6-346">Текст приведет к неправильному формированию документа XML.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-346">The text would result in a non-well formed XML document.</span></span>  
  
 <span data-ttu-id="0e6d6-347"><paramref name="name" /> имеет значение <see langword="null" /> или <see langword="String.Empty" />.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-347"><paramref name="name" /> is either <see langword="null" /> or <see langword="String.Empty" />.</span></span>  
  
 <span data-ttu-id="0e6d6-348">Этот метод используется для создания XML-объявления после того, как метод <see cref="M:System.Xml.XmlTextWriter.WriteStartDocument" /> уже вызван.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-348">This method is being used to create an XML declaration after <see cref="M:System.Xml.XmlTextWriter.WriteStartDocument" /> has already been called.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteQualifiedName">
      <MemberSignature Language="C#" Value="public override void WriteQualifiedName (string localName, string ns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteQualifiedName(string localName, string ns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteQualifiedName(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteQualifiedName (localName As String, ns As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteQualifiedName(System::String ^ localName, System::String ^ ns);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localName"><span data-ttu-id="0e6d6-349">Локальное имя для записи.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-349">The local name to write.</span></span></param>
        <param name="ns"><span data-ttu-id="0e6d6-350">URI пространства имен, который связывается с именем.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-350">The namespace URI to associate with the name.</span></span></param>
        <summary><span data-ttu-id="0e6d6-351">Записывает полное имя пространства имен.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-351">Writes out the namespace-qualified name.</span></span> <span data-ttu-id="0e6d6-352">Этот метод выполняет поиск префикса для пространства имен в его области.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-352">This method looks up the prefix that is in scope for the given namespace.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="0e6d6-353">Начиная с .NET Framework 2.0, рекомендуется создать <xref:System.Xml.XmlWriter> экземпляров с помощью <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> метод и <xref:System.Xml.XmlWriterSettings> класса, чтобы воспользоваться преимуществами новых функций.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-353">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="0e6d6-354">Например, следующий код Microsoft Visual C#:</span><span class="sxs-lookup"><span data-stu-id="0e6d6-354">For example, the following Microsoft Visual C# code:</span></span>  
  
```csharp  
writer.Formatting = Formatting.Indented;  
writer.WriteStartElement("root");  
 writer.WriteAttributeString("xmlns","x",null,"urn:abc");  
 writer.WriteStartElement("item");  
 writer.WriteStartAttribute("href",null);  
 writer.WriteString("#");  
 writer.WriteQualifiedName("test","urn:abc");  
 writer.WriteEndAttribute();  
 writer.WriteEndElement();  
 writer.WriteEndElement();  
 writer.Close();  
```  
  
 <span data-ttu-id="0e6d6-355">Создает следующие выходные данные:</span><span class="sxs-lookup"><span data-stu-id="0e6d6-355">Generates the following output:</span></span>  
  
```xml  
<root xmlns:x="urn:abc">  
 <item href="#x:test"/>  
 </root>  
```  
  
 <span data-ttu-id="0e6d6-356">Если `ns` сопоставляется текущее пространство имен по умолчанию, префикс не создается.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-356">If `ns` maps to the current default namespace, no prefix is generated.</span></span>  
  
 <span data-ttu-id="0e6d6-357">При записи значений атрибута, если этот метод создает префикс `ns` не найден.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-357">When writing attribute values, this method generates a prefix if `ns` is not found.</span></span> <span data-ttu-id="0e6d6-358">При записи содержимого элемента, он вызывает исключение, если `ns` не найден.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-358">When writing element content, it throws an exception if `ns` is not found.</span></span>  
  
 <span data-ttu-id="0e6d6-359">Если этот модуль записи поддерживает пространства имен (<xref:System.Xml.XmlTextWriter.Namespaces%2A> равно `true`), этот метод также проверяет, что имя является допустимым для пространства имен W3C в рекомендации XML (http://www.w3.org/TR/REC-xml-names).</span><span class="sxs-lookup"><span data-stu-id="0e6d6-359">If this writer supports namespaces (<xref:System.Xml.XmlTextWriter.Namespaces%2A> is set to `true`), this method also checks that the name is valid according to the W3C Namespaces in XML recommendation (http://www.w3.org/TR/REC-xml-names).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0e6d6-360">Следующий пример записывает фрагмент схемы XSD.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-360">The following example writes out a portion of a XSD schema.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteQualifiedName Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteQualifiedName Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteQualifiedName Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteQualifiedName Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteQualifiedName Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteQualifiedName Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0e6d6-361"><paramref name="localName" /> имеет значение <see langword="null" /> или <see langword="String.Empty" />.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-361"><paramref name="localName" /> is either <see langword="null" /> or <see langword="String.Empty" />.</span></span>  
  
 <span data-ttu-id="0e6d6-362"><paramref name="localName" /> не является допустимым именем в соответствии со спецификацией пространств имен W3C.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-362"><paramref name="localName" /> is not a valid name according to the W3C Namespaces spec.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteRaw">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="0e6d6-363">Вручную записывает необработанные данные для разметки.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-363">Writes raw markup manually.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="0e6d6-364">Начиная с .NET Framework 2.0, рекомендуется создать <xref:System.Xml.XmlWriter> экземпляров с помощью <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> метод и <xref:System.Xml.XmlWriterSettings> класса, чтобы воспользоваться преимуществами новых функций.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-364">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteRaw">
      <MemberSignature Language="C#" Value="public override void WriteRaw (string data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteRaw(string data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteRaw(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteRaw (data As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteRaw(System::String ^ data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="0e6d6-365">Строка, содержащая текст для записи.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-365">String containing the text to write.</span></span></param>
        <summary><span data-ttu-id="0e6d6-366">Вручную записывает из строки необработанные данные для разметки.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-366">Writes raw markup manually from a string.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="0e6d6-367">Начиная с .NET Framework 2.0, рекомендуется создать <xref:System.Xml.XmlWriter> экземпляров с помощью <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> метод и <xref:System.Xml.XmlWriterSettings> класса, чтобы воспользоваться преимуществами новых функций.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-367">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="0e6d6-368">Этот метод не экранирует специальные символы.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-368">This method does not escape special characters.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="0e6d6-369"><xref:System.Xml.XmlTextWriter> Не проверяет все данные, передаваемые <xref:System.Xml.XmlTextWriter.WriteRaw%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-369">The <xref:System.Xml.XmlTextWriter> does not validate any data that is passed to the <xref:System.Xml.XmlTextWriter.WriteRaw%2A> method.</span></span> <span data-ttu-id="0e6d6-370">Не следует передавать произвольные данные в этот метод.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-370">You should not pass arbitrary data to this method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0e6d6-371">Следующий пример записывает в строку при помощи `WriteRaw` метод.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-371">The following example writes a string using the `WriteRaw` method.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteRaw1 Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteRaw1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteRaw1 Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteRaw1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteRaw1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteRaw1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteRaw">
      <MemberSignature Language="C#" Value="public override void WriteRaw (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteRaw(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteRaw(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteRaw (buffer As Char(), index As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteRaw(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="0e6d6-372">Массив символов, содержащий текст для записи.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-372">Character array containing the text to write.</span></span></param>
        <param name="index"><span data-ttu-id="0e6d6-373">Позиция в буфере, с которой начинается запись текста.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-373">The position within the buffer indicating the start of the text to write.</span></span></param>
        <param name="count"><span data-ttu-id="0e6d6-374">Количество символов для записи.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-374">The number of characters to write.</span></span></param>
        <summary><span data-ttu-id="0e6d6-375">Вручную записывает из буфера символов необработанные данные для разметки.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-375">Writes raw markup manually from a character buffer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="0e6d6-376">Начиная с .NET Framework 2.0, рекомендуется создать <xref:System.Xml.XmlWriter> экземпляров с помощью <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> метод и <xref:System.Xml.XmlWriterSettings> класса, чтобы воспользоваться преимуществами новых функций.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-376">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="0e6d6-377">Этот метод не экранирует специальные символы.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-377">This method does not escape special characters.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="0e6d6-378"><xref:System.Xml.XmlTextWriter> Не проверяет все данные, передаваемые <xref:System.Xml.XmlTextWriter.WriteRaw%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-378">The <xref:System.Xml.XmlTextWriter> does not validate any data that is passed to the <xref:System.Xml.XmlTextWriter.WriteRaw%2A> method.</span></span> <span data-ttu-id="0e6d6-379">Не следует передавать произвольные данные в этот метод.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-379">You should not pass arbitrary data to this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0e6d6-380">Свойство <paramref name="buffer" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-380"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="0e6d6-381">Значение параметра <paramref name="index" /> или <paramref name="count" /> меньше нуля.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-381"><paramref name="index" /> or <paramref name="count" /> is less than zero.</span></span>  
  
 <span data-ttu-id="0e6d6-382">- или -</span><span class="sxs-lookup"><span data-stu-id="0e6d6-382">-or-</span></span>  
  
 <span data-ttu-id="0e6d6-383">Длина буфера минус <paramref name="index" /> меньше <paramref name="count" />.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-383">The buffer length minus <paramref name="index" /> is less than <paramref name="count" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteStartAttribute">
      <MemberSignature Language="C#" Value="public override void WriteStartAttribute (string prefix, string localName, string ns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteStartAttribute(string prefix, string localName, string ns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteStartAttribute(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteStartAttribute (prefix As String, localName As String, ns As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteStartAttribute(System::String ^ prefix, System::String ^ localName, System::String ^ ns);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="prefix">
          <span data-ttu-id="0e6d6-384">Префикс <see langword="Namespace" /> атрибута.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-384"><see langword="Namespace" /> prefix of the attribute.</span></span></param>
        <param name="localName">
          <span data-ttu-id="0e6d6-385"><see langword="LocalName" /> атрибута.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-385"><see langword="LocalName" /> of the attribute.</span></span></param>
        <param name="ns">
          <span data-ttu-id="0e6d6-386"><see langword="NamespaceURI" /> атрибута.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-386"><see langword="NamespaceURI" /> of the attribute</span></span></param>
        <summary><span data-ttu-id="0e6d6-387">Записывает начало атрибута.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-387">Writes the start of an attribute.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="0e6d6-388">Начиная с .NET Framework 2.0, рекомендуется создать <xref:System.Xml.XmlWriter> экземпляров с помощью <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> метод и <xref:System.Xml.XmlWriterSettings> класса, чтобы воспользоваться преимуществами новых функций.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-388">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="0e6d6-389">Это более сложных версия <xref:System.Xml.XmlWriter.WriteAttributeString%2A> , позволяющий записать значение атрибута, используя несколько методов записи, такие как <xref:System.Xml.XmlTextWriter.WriteString%2A>.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-389">This is a more advanced version of <xref:System.Xml.XmlWriter.WriteAttributeString%2A> that allows you to write an attribute value using multiple write methods, such as <xref:System.Xml.XmlTextWriter.WriteString%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0e6d6-390">Следующий пример записывает в книгу.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-390">The following example writes out a book.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteStartElement Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartElement Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteStartElement Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartElement Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteStartElement Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartElement Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0e6d6-391"><paramref name="localName" /> имеет значение <see langword="null" /> или <see langword="String.Empty" />.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-391"><paramref name="localName" /> is either <see langword="null" /> or <see langword="String.Empty" />.</span></span></exception>
        <altmember cref="M:System.Xml.XmlTextWriter.WriteEndAttribute" />
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteStartDocument">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="0e6d6-392">Записывает объявление XML с номером версии "1.0".</span><span class="sxs-lookup"><span data-stu-id="0e6d6-392">Writes the XML declaration with the version "1.0".</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="0e6d6-393">Начиная с .NET Framework 2.0, рекомендуется создать <xref:System.Xml.XmlWriter> экземпляров с помощью <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> метод и <xref:System.Xml.XmlWriterSettings> класса, чтобы воспользоваться преимуществами новых функций.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-393">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteStartDocument">
      <MemberSignature Language="C#" Value="public override void WriteStartDocument ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteStartDocument() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteStartDocument" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteStartDocument ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteStartDocument();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0e6d6-394">Записывает объявление XML с номером версии "1.0".</span><span class="sxs-lookup"><span data-stu-id="0e6d6-394">Writes the XML declaration with the version "1.0".</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="0e6d6-395">Начиная с .NET Framework 2.0, рекомендуется создать <xref:System.Xml.XmlWriter> экземпляров с помощью <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> метод и <xref:System.Xml.XmlWriterSettings> класса, чтобы воспользоваться преимуществами новых функций.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-395">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="0e6d6-396">Уровень кодировки документа определяется по реализации модуля записи.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-396">The encoding level of the document is determined by how the writer is implemented.</span></span> <span data-ttu-id="0e6d6-397">Например если <xref:System.Text.Encoding> объект, заданный в `XmlTextWriter` конструктор, определяет значение атрибута кодировки.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-397">For example, if an <xref:System.Text.Encoding> object is specified in the `XmlTextWriter` constructor, this determines the value of the encoding attribute.</span></span> <span data-ttu-id="0e6d6-398">Этот метод не создает отдельный атрибут.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-398">This method does not create a standalone attribute.</span></span>  
  
 <span data-ttu-id="0e6d6-399">Когда `WriteStartDocument` вызывается записи проверяется при написании корректный XML-документ.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-399">When `WriteStartDocument` is called the writer validates that what you are writing is a well-formed XML document.</span></span> <span data-ttu-id="0e6d6-400">Например он проверяет, что XML-декларация является первым узлом, что один и только один корневой элемент существует и т. д.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-400">For example, it checks that the XML declaration is the first node, that one and only one root-level element exists and so on.</span></span> <span data-ttu-id="0e6d6-401">Если этот метод не вызван, предполагается, фрагмент XML записывается и применяет правила не корневого уровня.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-401">If this method is not called, the writer assumes an XML fragment is being written and applies no root level rules.</span></span>  
  
 <span data-ttu-id="0e6d6-402">Если `WriteStartDocument` был вызван и затем <xref:System.Xml.XmlTextWriter.WriteProcessingInstruction%2A> метод используется для создания другого XML-декларацию, создается исключение.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-402">If `WriteStartDocument` has been called and then the <xref:System.Xml.XmlTextWriter.WriteProcessingInstruction%2A> method is used to create another XML declaration, an exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0e6d6-403">Следующий пример записывает XML-файл, представляющий книгу.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-403">The following example writes an XML file representing a book.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="0e6d6-404">Это не первый метод записи, вызываемый после конструктора.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-404">This is not the first write method called after the constructor.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteStartDocument">
      <MemberSignature Language="C#" Value="public override void WriteStartDocument (bool standalone);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteStartDocument(bool standalone) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteStartDocument(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteStartDocument (standalone As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteStartDocument(bool standalone);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="standalone" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="standalone"><span data-ttu-id="0e6d6-405">Если значение равно <see langword="true" />, записывается "standalone=yes"; если <see langword="false" />, записывается "standalone=no".</span><span class="sxs-lookup"><span data-stu-id="0e6d6-405">If <see langword="true" />, it writes "standalone=yes"; if <see langword="false" />, it writes "standalone=no".</span></span></param>
        <summary><span data-ttu-id="0e6d6-406">Записывает объявление XML с номером версии "1.0" и отдельным атрибутом.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-406">Writes the XML declaration with the version "1.0" and the standalone attribute.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="0e6d6-407">Начиная с .NET Framework 2.0, рекомендуется создать <xref:System.Xml.XmlWriter> экземпляров с помощью <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> метод и <xref:System.Xml.XmlWriterSettings> класса, чтобы воспользоваться преимуществами новых функций.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-407">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="0e6d6-408">Уровень кодировки документа определяется по реализации модуля записи.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-408">The encoding level of the document is determined by how the writer is implemented.</span></span> <span data-ttu-id="0e6d6-409">Например если <xref:System.Text.Encoding> объект, заданный в `XmlTextWriter` конструктор, определяет значение атрибута кодировки.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-409">For example, if an <xref:System.Text.Encoding> object is specified in the `XmlTextWriter` constructor, this determines the value of the encoding attribute.</span></span>  
  
 <span data-ttu-id="0e6d6-410">Когда `WriteStartDocument` вызывается записи проверяется при написании корректный XML-документ.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-410">When `WriteStartDocument` is called the writer validates that what you are writing is a well-formed XML document.</span></span> <span data-ttu-id="0e6d6-411">Например он проверяет, что XML-декларация является первым узлом, что один и только один корневой элемент существует и т. д.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-411">For example, it checks that the XML declaration is the first node, that one and only one root-level element exists and so on.</span></span> <span data-ttu-id="0e6d6-412">Если этот метод не вызван, предполагается, фрагмент XML записывается и применяет правила не корневого уровня.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-412">If this method is not called, the writer assumes an XML fragment is being written and applies no root level rules.</span></span>  
  
 <span data-ttu-id="0e6d6-413">Если `WriteStartDocument` был вызван и затем <xref:System.Xml.XmlTextWriter.WriteProcessingInstruction%2A> метод используется для создания другого XML-декларацию, создается исключение.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-413">If `WriteStartDocument` has been called and then the <xref:System.Xml.XmlTextWriter.WriteProcessingInstruction%2A> method is used to create another XML declaration, an exception is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="0e6d6-414">Это не первый метод записи, вызываемый после конструктора.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-414">This is not the first write method called after the constructor.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteStartElement">
      <MemberSignature Language="C#" Value="public override void WriteStartElement (string prefix, string localName, string ns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteStartElement(string prefix, string localName, string ns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteStartElement(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteStartElement (prefix As String, localName As String, ns As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteStartElement(System::String ^ prefix, System::String ^ localName, System::String ^ ns);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="prefix"><span data-ttu-id="0e6d6-415">Префикс пространства имен элемента.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-415">The namespace prefix of the element.</span></span></param>
        <param name="localName"><span data-ttu-id="0e6d6-416">Локальное имя элемента.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-416">The local name of the element.</span></span></param>
        <param name="ns"><span data-ttu-id="0e6d6-417">URI пространства имен, связываемый с элементом.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-417">The namespace URI to associate with the element.</span></span> <span data-ttu-id="0e6d6-418">Если пространство имен уже находится в области видимости и с ним связан префикс, средство записи автоматически запишет этот префикс.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-418">If this namespace is already in scope and has an associated prefix then the writer automatically writes that prefix also.</span></span></param>
        <summary><span data-ttu-id="0e6d6-419">Записывает указанный открывающий тег и связывает его с заданным пространством имен и префиксом.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-419">Writes the specified start tag and associates it with the given namespace and prefix.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="0e6d6-420">Начиная с .NET Framework 2.0, рекомендуется создать <xref:System.Xml.XmlWriter> экземпляров с помощью <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> метод и <xref:System.Xml.XmlWriterSettings> класса, чтобы воспользоваться преимуществами новых функций.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-420">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="0e6d6-421">После вызова этого метода можно записывать атрибуты или создать содержимого с использованием <xref:System.Xml.XmlTextWriter.WriteComment%2A>, <xref:System.Xml.XmlTextWriter.WriteString%2A>, или <xref:System.Xml.XmlTextWriter.WriteStartElement%2A> для дочерних элементов.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-421">After calling this method you can either write attributes or create content using <xref:System.Xml.XmlTextWriter.WriteComment%2A>, <xref:System.Xml.XmlTextWriter.WriteString%2A>, or <xref:System.Xml.XmlTextWriter.WriteStartElement%2A> for child elements.</span></span> <span data-ttu-id="0e6d6-422">Вы можете закрыть элемент с <xref:System.Xml.XmlTextWriter.WriteEndElement%2A> во время работы которого записывается закрывающий тег.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-422">You can close the element with <xref:System.Xml.XmlTextWriter.WriteEndElement%2A> at which time an end tag is written out.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0e6d6-423">Следующий пример записывает в книгу.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-423">The following example writes out a book.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteStartElement Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartElement Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteStartElement Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartElement Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteStartElement Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartElement Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="0e6d6-424">Модуль записи закрыт.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-424">The writer is closed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteState">
      <MemberSignature Language="C#" Value="public override System.Xml.WriteState WriteState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.WriteState WriteState" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextWriter.WriteState" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property WriteState As WriteState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::WriteState WriteState { System::Xml::WriteState get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.WriteState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0e6d6-425">Возвращает состояние средства записи.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-425">Gets the state of the writer.</span></span></summary>
        <value><span data-ttu-id="0e6d6-426">Одно из значений перечисления <see cref="T:System.Xml.WriteState" />.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-426">One of the <see cref="T:System.Xml.WriteState" /> values.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="0e6d6-427">Начиная с .NET Framework 2.0, рекомендуется создать <xref:System.Xml.XmlWriter> экземпляров с помощью <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> метод и <xref:System.Xml.XmlWriterSettings> класса, чтобы воспользоваться преимуществами новых функций.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-427">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteString">
      <MemberSignature Language="C#" Value="public override void WriteString (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteString(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteString (text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteString(System::String ^ text);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text"><span data-ttu-id="0e6d6-428">Текст для записи.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-428">Text to write.</span></span></param>
        <summary><span data-ttu-id="0e6d6-429">Записывает заданное текстовое содержимое.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-429">Writes the given text content.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="0e6d6-430">Начиная с .NET Framework 2.0, рекомендуется создать <xref:System.Xml.XmlWriter> экземпляров с помощью <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> метод и <xref:System.Xml.XmlWriterSettings> класса, чтобы воспользоваться преимуществами новых функций.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-430">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="0e6d6-431">`WriteString` выполняет следующие задачи</span><span class="sxs-lookup"><span data-stu-id="0e6d6-431">`WriteString` does the following</span></span>  
  
-   <span data-ttu-id="0e6d6-432">Символы `&`, `<`, и `>` заменяются `&amp;`, `&lt;`, и `&gt;`соответственно.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-432">The characters `&`, `<`, and `>` are replaced with `&amp;`, `&lt;`, and `&gt;`, respectively.</span></span>  
  
-   <span data-ttu-id="0e6d6-433">Символьные значения в диапазоне от 0 x-0x1F (кроме пробелов 0x9, 0xA и 0xD) заменяются на числовые сущности знаков (`&#0;` через `&#0x1F`).</span><span class="sxs-lookup"><span data-stu-id="0e6d6-433">Character values in the range 0x-0x1F (excluding white space characters 0x9, 0xA, and 0xD) are replaced with numeric character entities (`&#0;` through `&#0x1F`).</span></span>  
  
-   <span data-ttu-id="0e6d6-434">Если `WriteString` вызывается в контексте значения атрибута, одинарные и двойные кавычки заменяются `&quot;` и `&apos;` соответственно.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-434">If `WriteString` is called in the context of an attribute value, double and single quotes are replaced with `&quot;` and `&apos;` respectively.</span></span>  
  
 <span data-ttu-id="0e6d6-435">Например, это строка ввода `test<item>test` записывается как</span><span class="sxs-lookup"><span data-stu-id="0e6d6-435">For example, this input string `test<item>test` is written as</span></span>  
  
```  
test&lt;item&gt;test  
```  
  
 <span data-ttu-id="0e6d6-436">Если `text` либо `null` или `String.Empty`, этот метод записывает текстовый узел без содержимого.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-436">If `text` is either `null` or `String.Empty`, this method writes a text node with no data content.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0e6d6-437">Следующий пример записывает фрагмент XML.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-437">The following example writes an XML fragment.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.Formatting Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.Formatting Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.Formatting Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.Formatting Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.Formatting Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.Formatting Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="0e6d6-438">Строка текста содержит недопустимую пару символов-заместителей.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-438">The text string contains an invalid surrogate pair.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteSurrogateCharEntity">
      <MemberSignature Language="C#" Value="public override void WriteSurrogateCharEntity (char lowChar, char highChar);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteSurrogateCharEntity(char lowChar, char highChar) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteSurrogateCharEntity(System.Char,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteSurrogateCharEntity (lowChar As Char, highChar As Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteSurrogateCharEntity(char lowChar, char highChar);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lowChar" Type="System.Char" />
        <Parameter Name="highChar" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="lowChar"><span data-ttu-id="0e6d6-439">Младший заместитель.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-439">The low surrogate.</span></span> <span data-ttu-id="0e6d6-440">Это должно быть значение в диапазоне от <see langword="0xDC00" /> до <see langword="0xDFFF" />.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-440">This must be a value between <see langword="0xDC00" /> and <see langword="0xDFFF" />.</span></span></param>
        <param name="highChar"><span data-ttu-id="0e6d6-441">Старший заместитель.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-441">The high surrogate.</span></span> <span data-ttu-id="0e6d6-442">Это должно быть значение в диапазоне от <see langword="0xD800" /> до <see langword="0xDBFF" />.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-442">This must be a value between <see langword="0xD800" /> and <see langword="0xDBFF" />.</span></span></param>
        <summary><span data-ttu-id="0e6d6-443">Создает и записывает сущность знака-заместителя для пары знаков-заместителей.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-443">Generates and writes the surrogate character entity for the surrogate character pair.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="0e6d6-444">Начиная с .NET Framework 2.0, рекомендуется создать <xref:System.Xml.XmlWriter> экземпляров с помощью <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> метод и <xref:System.Xml.XmlWriterSettings> класса, чтобы воспользоваться преимуществами новых функций.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-444">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="0e6d6-445">Этот метод применим только в системах, использующих кодировку UTF-16.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-445">This method is only applicable on systems that use UTF-16 encoding.</span></span>  
  
 <span data-ttu-id="0e6d6-446">Сущности знака записывается в шестнадцатеричном формате.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-446">The surrogate character entity is written in hexadecimal format.</span></span> <span data-ttu-id="0e6d6-447">Диапазон знаков-заместителей — от `#x10000` для `#x10FFFF`.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-447">The range for surrogate characters is `#x10000` to `#x10FFFF`.</span></span> <span data-ttu-id="0e6d6-448">Следующая формула используется для создания сущности знака: (`highChar` - `0xD800`) \* `0x400` + (`lowChar` - `0xDC00`) + `0x10000`.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-448">The following formula is used to generate the surrogate character entity: (`highChar` - `0xD800`) \* `0x400` + (`lowChar` - `0xDC00`) + `0x10000`.</span></span>  
  
 <span data-ttu-id="0e6d6-449">Для HTML и XML набор знаков документа (и, следовательно, нотации ссылок на числовые символы) основана на UCS [ISO 10646].</span><span class="sxs-lookup"><span data-stu-id="0e6d6-449">For both HTML and XML, the document character set (and therefore the notation of numeric character references) is based on UCS [ISO-10646].</span></span> <span data-ttu-id="0e6d6-450">Ссылку на один символ в исходном документе может поэтому в некоторых случаях соответствовать два 16-разрядным единицам в строке (старший символ-заместитель и младший символ-заместитель).</span><span class="sxs-lookup"><span data-stu-id="0e6d6-450">A single numeric character reference in a source document may therefore in some cases correspond to two 16-bit units in a string (a high surrogate and a low surrogate).</span></span> <span data-ttu-id="0e6d6-451">Эти 16-разрядные единицы называются суррогатную пару.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-451">These 16-bit units are referred to as a surrogate pair.</span></span>  
  
 <span data-ttu-id="0e6d6-452">Дополнительные сведения о суррогаты или символы, обратитесь к разделу 3.7 Юникода 3.0/Юникод 2.0 standard, расположенный http://www.unicode.org, или разделу 2.2 рекомендации W3C XML 1.0, расположенный http://www.w3.org/TR/REC-xml#charsets.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-452">For more information regarding surrogates or characters, refer to section 3.7 of the Unicode 3.0/Unicode 2.0 standard located at http://www.unicode.org, or section 2.2 of the W3C XML 1.0 Recommendation located at http://www.w3.org/TR/REC-xml#charsets.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception"><span data-ttu-id="0e6d6-453">Передана недопустимая пара символов-заместителей.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-453">An invalid surrogate character pair was passed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteWhitespace">
      <MemberSignature Language="C#" Value="public override void WriteWhitespace (string ws);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteWhitespace(string ws) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteWhitespace(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteWhitespace (ws As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteWhitespace(System::String ^ ws);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ws" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="ws"><span data-ttu-id="0e6d6-454">Строка символов-разделителей.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-454">The string of white space characters.</span></span></param>
        <summary><span data-ttu-id="0e6d6-455">Записывает указанный символ-разделитель.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-455">Writes out the given white space.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="0e6d6-456">Начиная с .NET Framework 2.0, рекомендуется создать <xref:System.Xml.XmlWriter> экземпляров с помощью <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> метод и <xref:System.Xml.XmlWriterSettings> класса, чтобы воспользоваться преимуществами новых функций.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-456">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="0e6d6-457">Этот метод используется для форматирования документа вручную.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-457">This method is used to manually format your document.</span></span> <span data-ttu-id="0e6d6-458">Используйте <xref:System.Xml.XmlTextWriter.Formatting%2A> свойство для автоматического форматирования выходных данных с помощью средства записи.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-458">Use the <xref:System.Xml.XmlTextWriter.Formatting%2A> property to have the writer format the output automatically.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0e6d6-459">В следующем примере используется `WriteWhitespace` метод для управления форматированием файла.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-459">The following example uses the `WriteWhitespace` method to control how the file is formatted.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.XmlSpace Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.XmlSpace Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.XmlSpace Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.XmlSpace Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.XmlSpace Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.XmlSpace Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="0e6d6-460">Строка содержит символы, отличные от пробелов.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-460">The string contains non-white space characters.</span></span></exception>
        <altmember cref="P:System.Xml.XmlTextWriter.Formatting" />
      </Docs>
    </Member>
    <Member MemberName="XmlLang">
      <MemberSignature Language="C#" Value="public override string XmlLang { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string XmlLang" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextWriter.XmlLang" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property XmlLang As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ XmlLang { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0e6d6-461">Возвращает текущую область действия <see langword="xml:lang" />.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-461">Gets the current <see langword="xml:lang" /> scope.</span></span></summary>
        <value><span data-ttu-id="0e6d6-462">Текущие значения <see langword="xml:lang" /> или <see langword="null" />, если в текущей области отсутствует <see langword="xml:lang" />.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-462">The current <see langword="xml:lang" /> or <see langword="null" /> if there is no <see langword="xml:lang" /> in the current scope.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="0e6d6-463">Начиная с .NET Framework 2.0, рекомендуется создать <xref:System.Xml.XmlWriter> экземпляров с помощью <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> метод и <xref:System.Xml.XmlWriterSettings> класса, чтобы воспользоваться преимуществами новых функций.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-463">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="0e6d6-464">Это свойство позволяет одному компоненту узнать, какое состояние другой компонент оставил модуль записи.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-464">This property allows one component to find out what state another component has left the writer in.</span></span> <span data-ttu-id="0e6d6-465">Например может быть один компонент хочет сообщить другому какой язык создаваемого текста справки.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-465">For example, perhaps one component wants to tell another which language help text to generate.</span></span> <span data-ttu-id="0e6d6-466">Сведения о языке сообщаются путем записи `xml:lang` атрибута.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-466">The language information is communicated by writing an `xml:lang` attribute.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlSpace">
      <MemberSignature Language="C#" Value="public override System.Xml.XmlSpace XmlSpace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.XmlSpace XmlSpace" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextWriter.XmlSpace" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property XmlSpace As XmlSpace" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlSpace XmlSpace { System::Xml::XmlSpace get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlSpace</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0e6d6-467">Возвращает объект <see cref="T:System.Xml.XmlSpace" />, представляющий текущую область <see langword="xml:space" />.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-467">Gets an <see cref="T:System.Xml.XmlSpace" /> representing the current <see langword="xml:space" /> scope.</span></span></summary>
        <value><span data-ttu-id="0e6d6-468">Объект <see langword="XmlSpace" />, представляющий текущую область <see langword="xml:space" />.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-468">An <see langword="XmlSpace" /> representing the current <see langword="xml:space" /> scope.</span></span>  
  
 <span data-ttu-id="0e6d6-469"><list type="table"><listheader><term> Значение</span><span class="sxs-lookup"><span data-stu-id="0e6d6-469"><list type="table"><listheader><term> Value</span></span>  
  
 <span data-ttu-id="0e6d6-470"></term><description> Описание</span><span class="sxs-lookup"><span data-stu-id="0e6d6-470"></term><description> Meaning</span></span>  
  
 <span data-ttu-id="0e6d6-471"></description></listheader><item><term> Нет</span><span class="sxs-lookup"><span data-stu-id="0e6d6-471"></description></listheader><item><term> None</span></span>  
  
 <span data-ttu-id="0e6d6-472"></term><description> Это значение по умолчанию, если не <see langword="xml:space" /> область существует.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-472"></term><description> This is the default if no <see langword="xml:space" /> scope exists.</span></span>  
  
 <span data-ttu-id="0e6d6-473"></description></item><item><term> По умолчанию</span><span class="sxs-lookup"><span data-stu-id="0e6d6-473"></description></item><item><term> Default</span></span>  
  
 <span data-ttu-id="0e6d6-474"></term><description> Текущая область — <see langword="xml:space" />= «default».</span><span class="sxs-lookup"><span data-stu-id="0e6d6-474"></term><description> The current scope is <see langword="xml:space" />="default".</span></span>  
  
 <span data-ttu-id="0e6d6-475"></description></item><item><term> Сохранить</span><span class="sxs-lookup"><span data-stu-id="0e6d6-475"></description></item><item><term> Preserve</span></span>  
  
 <span data-ttu-id="0e6d6-476"></term><description> Текущая область — <see langword="xml:space" />= «preserve».</span><span class="sxs-lookup"><span data-stu-id="0e6d6-476"></term><description> The current scope is <see langword="xml:space" />="preserve".</span></span>  
  
 </description></item></list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="0e6d6-477">Начиная с .NET Framework 2.0, рекомендуется создать <xref:System.Xml.XmlWriter> экземпляров с помощью <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> метод и <xref:System.Xml.XmlWriterSettings> класса, чтобы воспользоваться преимуществами новых функций.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-477">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="0e6d6-478">Это свойство позволяет одному компоненту определить, в каком состоянии другой компонент оставил модуль записи.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-478">This property allows one component to find out in what state another component has left the writer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0e6d6-479">В следующем примере используется `WriteWhitespace` метод для управления форматированием файла.</span><span class="sxs-lookup"><span data-stu-id="0e6d6-479">The following example uses the `WriteWhitespace` method to control how the file is formatted.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.XmlSpace Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.XmlSpace Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.XmlSpace Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.XmlSpace Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.XmlSpace Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.XmlSpace Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>