<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="XmlWriter.xml" source-language="en-US" target-language="ru-RU">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-efd8310" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5e05b5b2-d481-4262-b7b7-7de7ac2afe072d9bde4c4b5d23f9bcfce8e6468d763b098f260f.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2d9bde4c4b5d23f9bcfce8e6468d763b098f260f</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">df6cf590aa3087f6c7c202712eee781c6a3c8f96</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">05/07/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7.2,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlWriter">
          <source>Represents a writer that provides a fast, non-cached, forward-only way to generate streams or files that contain XML data.</source>
          <target state="translated">Представляет средство записи, обеспечивающее быстрый прямой способ (без кэширования) создания потоков или файлов, содержащих XML-данные.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> class writes XML data to a stream, file, text reader, or string.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> Класс записывает XML-данные в поток, файл, модуль чтения текста или строка.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>It supports the W3C <bpt id="p1">[</bpt>Extensible Markup Language (XML) 1.0 (fourth edition)<ept id="p1">](https://www.w3.org/TR/2006/REC-xml-20060816/)</ept> and <bpt id="p2">[</bpt>Namespaces in XML 1.0 (third edition)<ept id="p2">](https://www.w3.org/TR/REC-xml-names/)</ept> recommendations.</source>
          <target state="translated">Он поддерживает W3C <bpt id="p1">[</bpt>языка (XML) 1.0 (четвертый выпуск)<ept id="p1">](https://www.w3.org/TR/2006/REC-xml-20060816/)</ept> и <bpt id="p2">[</bpt>пространства имен в XML 1.0 (третье издание)<ept id="p2">](https://www.w3.org/TR/REC-xml-names/)</ept> рекомендации.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>The members of the <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> class enable you to:</source>
          <target state="translated">Члены <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> класса позволяют:</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>Verify that the characters are legal XML characters and that element and attribute names are valid XML names.</source>
          <target state="translated">проверять допустимость XML-символов и допустимость XML-имен элементов и атрибутов;</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>Verify that the XML document is well-formed.</source>
          <target state="translated">проверять правильность формата XML-документа;</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>Encode binary bytes as Base64 or BinHex, and write out the resulting text.</source>
          <target state="translated">Кодирование двоичных байтов в виде Base64 или BinHex и записывает получившийся текст.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>Pass values by using common language runtime types instead of strings, to avoid having to manually perform value conversions.</source>
          <target state="translated">Передайте значения с помощью типами среды CLR вместо строк, чтобы избежать необходимости вручную выполнять преобразования значений.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>Write multiple documents to one output stream.</source>
          <target state="translated">записывать несколько документов в выходной поток;</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>Write valid names, qualified names, and name tokens.</source>
          <target state="translated">записывать допустимые имена, полные имена и маркеры имен.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>In this section:</source>
          <target state="translated">Содержание</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source><bpt id="p1">[</bpt>Creating an XML writer<ept id="p1">](#create)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1">[</bpt>Создание записи XML<ept id="p1">](#create)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source><bpt id="p1">[</bpt>Specifying the output format<ept id="p1">](#output)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1">[</bpt>Задание выходного формата<ept id="p1">](#output)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source><bpt id="p1">[</bpt>Data conformance<ept id="p1">](#conformance)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1">[</bpt>Согласованности данных<ept id="p1">](#conformance)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source><bpt id="p1">[</bpt>Writing elements<ept id="p1">](#writing_elements)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1">[</bpt>Запись элементов<ept id="p1">](#writing_elements)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source><bpt id="p1">[</bpt>Writing attributes<ept id="p1">](#writing_attributes)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1">[</bpt>Создание атрибутов<ept id="p1">](#writing_attributes)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source><bpt id="p1">[</bpt>Handling namespaces<ept id="p1">](#handling_ns)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1">[</bpt>Поддержка пространств имен<ept id="p1">](#handling_ns)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source><bpt id="p1">[</bpt>Writing typed data<ept id="p1">](#writing_types)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1">[</bpt>Запись типизированных данных<ept id="p1">](#writing_types)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source><bpt id="p1">[</bpt>Closing the XML writer<ept id="p1">](#close)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1">[</bpt>Закрытие модуля записи XML<ept id="p1">](#close)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source><bpt id="p1">[</bpt>Asynchronous programming<ept id="p1">](#async)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1">[</bpt>Асинхронное программирование<ept id="p1">](#async)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source><bpt id="p1">[</bpt>Security considerations<ept id="p1">](#security)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Вопросы безопасности<ept id="p1">](#security)</ept></target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>Creating an XML writer</source>
          <target state="translated">Создание записи XML</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>To create an <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> instance, use the <ph id="ph2">&lt;xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Для создания <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> экземпляра, используйте <ph id="ph2">&lt;xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType&gt;</ph> метод.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>To specify the set of features you want to enable on the XML writer, pass an <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> to the <ph id="ph2">&lt;xref:System.Xml.XmlWriter.Create%2A&gt;</ph> method.</source>
          <target state="translated">Чтобы указать набор компонентов, которые нужно включить в средстве записи XML, передайте <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> для <ph id="ph2">&lt;xref:System.Xml.XmlWriter.Create%2A&gt;</ph> метод.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>Otherwise, default settings are used.</source>
          <target state="translated">В противном случае используются параметры по умолчанию.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>See the <ph id="ph1">&lt;xref:System.Xml.XmlWriter.Create%2A&gt;</ph> reference pages for details.</source>
          <target state="translated">В разделе <ph id="ph1">&lt;xref:System.Xml.XmlWriter.Create%2A&gt;</ph> ссылаются на страницы для сведения.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>Specifying the output format</source>
          <target state="translated">Задание выходного формата</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> class includes several properties that control how <ph id="ph2">&lt;xref:System.Xml.XmlWriter&gt;</ph> output is formatted:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> Класс содержит несколько свойств, определяющих способ <ph id="ph2">&lt;xref:System.Xml.XmlWriter&gt;</ph> форматирования выходных данных:</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>Property</source>
          <target state="translated">Свойство.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>Description</source>
          <target state="translated">Описание:</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>Specifies the text encoding to use.</source>
          <target state="translated">Указывает кодировку текста, которую следует использовать.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>The default is <ph id="ph1">`Encoding.UTF8`</ph>.</source>
          <target state="translated">Значение по умолчанию: <ph id="ph1">`Encoding.UTF8`</ph>.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>Indicates whether to indent elements.</source>
          <target state="translated">Показывает, нужны ли отступы элементов.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>The default is <ph id="ph1">`false`</ph> (no indentation).</source>
          <target state="translated">Значение по умолчанию — <ph id="ph1">`false`</ph> (без отступов).</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>Specifies the character string to use when indenting.</source>
          <target state="translated">Указывает символьную строку для использования при отступе.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>The default is two spaces.</source>
          <target state="translated">По умолчанию - два пробела.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>Specifies the character string to use for line breaks.</source>
          <target state="translated">Указывает символьную строку, используемую для разрывов строки.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>The default is <ph id="ph1">`\r\n`</ph> (carriage return, line feed).</source>
          <target state="translated">По умолчанию используется <ph id="ph1">`\r\n`</ph> (возврат каретки, перевода строки).</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>Specifies how to handle newline characters.</source>
          <target state="translated">Указывает способ обработки символов новой строки.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>Indicates whether to write attributes on a new line.</source>
          <target state="translated">Указывает, следует ли записывать атрибуты на новой строке.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source><ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.Indent%2A&gt;</ph> should be set to <ph id="ph2">`true`</ph> when using this property.</source>
          <target state="translated">Свойство <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.Indent%2A&gt;</ph> должно быть установлено в значение <ph id="ph2">`true`</ph> при использовании этого свойства.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>The default is <ph id="ph1">`false`</ph>.</source>
          <target state="translated">Значение по умолчанию: <ph id="ph1">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>Indicates whether to write an XML declaration.</source>
          <target state="translated">Показывает, следует ли записывать XML-декларацию.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>The default is <ph id="ph1">`false`</ph>.</source>
          <target state="translated">Значение по умолчанию: <ph id="ph1">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.Indent%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Xml.XmlWriterSettings.IndentChars%2A&gt;</ph> properties control how insignificant white space is formatted.</source>
          <target state="translated">Свойства <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.Indent%2A&gt;</ph> и <ph id="ph2">&lt;xref:System.Xml.XmlWriterSettings.IndentChars%2A&gt;</ph> управляют форматированием незначащих пробелов.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>For example, to indent element nodes:</source>
          <target state="translated">Например, для отступа узлов элементов:</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>Use the <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.NewLineOnAttributes%2A&gt;</ph> to write each attribute on a new line with one extra level of indentation:</source>
          <target state="translated">Используйте <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.NewLineOnAttributes%2A&gt;</ph> для записи на новую строку с один дополнительный уровень отступа каждого атрибута:</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>Data conformance</source>
          <target state="translated">Согласованности данных</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>An XML writer uses two properties from the <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> class to check for data conformance:</source>
          <target state="translated">Средство записи XML используются два свойства из <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> класс для проверки соответствия данных:</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.CheckCharacters%2A&gt;</ph> property instructs the XML writer to check characters and throw an <ph id="ph2">&lt;xref:System.Xml.XmlException&gt;</ph> exception if any characters are outside the legal range, as defined by the W3C.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.CheckCharacters%2A&gt;</ph> Свойство указывает, что модуль записи XML, проверять символы и выдавать <ph id="ph2">&lt;xref:System.Xml.XmlException&gt;</ph> исключение при обнаружении символов вне допустимого диапазона, как определено консорциумом W3C.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.ConformanceLevel%2A&gt;</ph> property configures the XML writer to check that the stream being written complies with the rules for a well-formed XML 1.0 document or document fragment, as defined by the W3C.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.ConformanceLevel%2A&gt;</ph> Свойство настраивает модуль записи XML для проверки, поток, который выполняется запись соответствует правилам для правильного формата XML 1.0 документ или фрагмент документа, как определено консорциумом W3C.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>The three conformance levels are described in the following table.</source>
          <target state="translated">В следующей таблице описаны уровни три соответствия.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>The default is <ph id="ph1">&lt;xref:System.Xml.ConformanceLevel.Document&gt;</ph>.</source>
          <target state="translated">Значение по умолчанию: <ph id="ph1">&lt;xref:System.Xml.ConformanceLevel.Document&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>For details, see the <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.ConformanceLevel%2A?displayProperty=nameWithType&gt;</ph> property and the <ph id="ph2">&lt;xref:System.Xml.ConformanceLevel?displayProperty=nameWithType&gt;</ph> enumeration.</source>
          <target state="translated">Дополнительные сведения см. в разделе <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.ConformanceLevel%2A?displayProperty=nameWithType&gt;</ph> свойство и <ph id="ph2">&lt;xref:System.Xml.ConformanceLevel?displayProperty=nameWithType&gt;</ph> перечисления.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>Level</source>
          <target state="translated">Уровень</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>Description</source>
          <target state="translated">Описание:</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>The XML output conforms to the rules for a well-formed XML 1.0 document and can be processed by any conforming processor.</source>
          <target state="translated">Выходные данные XML соответствует правилам для документа с правильным форматом XML 1.0, могут обрабатываться любым процессором согласование.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>The XML output conforms to the rules for a well-formed XML 1.0 document fragment.</source>
          <target state="translated">Выходные данные XML соответствует правилам именования фрагмент документа правильного формата XML 1.0.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>The XML writer determines which level of conformation checking to apply (document or fragment) based on the incoming data.</source>
          <target state="translated">Модуль записи XML определяет, какой уровень подтверждения проверки для применения (документ или фрагмент) на основе входящих данных.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>Writing elements</source>
          <target state="translated">Запись элементов</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>You can use the following <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> methods to write element nodes.</source>
          <target state="translated">Можно использовать следующие <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> методы для записи узлов элементов.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>For examples, see the methods listed.</source>
          <target state="translated">Примеры методов, перечисленных в разделе.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>Use</source>
          <target state="translated">Использовать</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>To</source>
          <target state="translated">Кому</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>Write an entire element  node, including a string value.</source>
          <target state="translated">Записи узла весь элемент, включая строковое значение.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>To write an element value by using multiple method calls.</source>
          <target state="translated">Записываемое значение элемента, используя несколько вызовов методов.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>For example, you can call <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteValue%2A&gt;</ph> to write a typed value, <ph id="ph2">&lt;xref:System.Xml.XmlWriter.WriteCharEntity%2A&gt;</ph> to write a character entity, <ph id="ph3">&lt;xref:System.Xml.XmlWriter.WriteAttributeString%2A&gt;</ph> to write an attribute, or you can write a child element.</source>
          <target state="translated">Например, можно вызвать метод <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteValue%2A&gt;</ph> для записи типизированного значения, метод <ph id="ph2">&lt;xref:System.Xml.XmlWriter.WriteCharEntity%2A&gt;</ph> для записи сущности-символа, метод <ph id="ph3">&lt;xref:System.Xml.XmlWriter.WriteAttributeString%2A&gt;</ph> для записи атрибута или можно записать дочерний элемент.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>This is a more sophisticated version of the <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteElementString%2A&gt;</ph> method.</source>
          <target state="translated">Это более сложный версия <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteElementString%2A&gt;</ph> метод.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>To close the element, you call the <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteEndElement%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Xml.XmlWriter.WriteFullEndElement%2A&gt;</ph> method.</source>
          <target state="translated">Чтобы закрыть элемент, следует вызвать <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteEndElement%2A&gt;</ph> или <ph id="ph2">&lt;xref:System.Xml.XmlWriter.WriteFullEndElement%2A&gt;</ph> метод.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>To copy an element node found at the current position of an <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> or <ph id="ph2">&lt;xref:System.Xml.XPath.XPathNavigator&gt;</ph> object.</source>
          <target state="translated">Для копирования узла элемента в текущей позиции <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> или <ph id="ph2">&lt;xref:System.Xml.XPath.XPathNavigator&gt;</ph> объекта.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>When called, it copies everything from the source object to the <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> instance.</source>
          <target state="translated">При вызове выполняется копирование всего, от исходного объекта до экземпляра <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>Writing attributes</source>
          <target state="translated">Создание атрибутов</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>You can use the following <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> methods to write attributes on element nodes.</source>
          <target state="translated">Можно использовать следующие <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> методы для записи атрибутов с узлами элементов.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>These methods can also be used to create namespace declarations on an element, as discussed in the next section.</source>
          <target state="translated">Эти методы могут также использоваться для создания объявления пространств имен для элемента, как описано в следующем разделе.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>Use</source>
          <target state="translated">Использовать</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>To</source>
          <target state="translated">Кому</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>To write an entire attribute node, including a string value.</source>
          <target state="translated">Для записи всего узла атрибута, включая строковое значение.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>To write the attribute value using multiple method calls.</source>
          <target state="translated">Записываемое значение атрибута, используя несколько вызовов методов.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>For example, you can call <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteValue%2A&gt;</ph> to write a typed value.</source>
          <target state="translated">Например, можно вызвать <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteValue%2A&gt;</ph> для записи типизированного значения.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>This is a more sophisticated version of the <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteElementString%2A&gt;</ph> method.</source>
          <target state="translated">Это более сложный версия <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteElementString%2A&gt;</ph> метод.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>To close the element, you call the <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteEndAttribute%2A&gt;</ph> method.</source>
          <target state="translated">Чтобы закрыть элемент, следует вызвать <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteEndAttribute%2A&gt;</ph> метод.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>To copy all the attributes found at the current position of an <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> object.</source>
          <target state="translated">Чтобы скопировать все атрибуты, найденные в текущей позиции <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> объекта.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>The attributes that are written depend on the type of node the reader is currently positioned on:</source>
          <target state="translated">Атрибуты, которые записываются зависят от типа узла, который в настоящее время средство чтения находится на:</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>-   For an attribute node, it writes the current attribute, and then the rest of the attributes until the element closing tag.</source>
          <target state="translated">-Для узла атрибута он записывает текущий атрибут, а затем остальная часть атрибуты до закрывающего тега элемента.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>-   For an element node, it writes all attributes contained by the element.</source>
          <target state="translated">-Для узла элемента он записывает все атрибуты, содержащиеся в этом элементе.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>-   For an XML declaration node, it writes all the attributes in the declaration.</source>
          <target state="translated">-Для узла объявления XML он записывает все атрибуты в объявлении.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>-   For all other node types, the method throws an exception.</source>
          <target state="translated">— Для всех других типов узлов метод создает исключение.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>Handling namespaces</source>
          <target state="translated">Поддержка пространств имен</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>Namespaces are used to qualify element and attribute names in an XML document.</source>
          <target state="translated">Пространства имен используются, чтобы указывать имена элементов и атрибутов в XML-документе.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>Namespace prefixes associate elements and attributes with namespaces, which are in turn associated with URI references.</source>
          <target state="translated">Префиксы пространства имен связывают элементы и атрибуты с пространствами имен, которые в свою очередь связан с URI-ссылки.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>Namespaces create element and attribute name uniqueness in an XML document.</source>
          <target state="translated">Пространства имен обеспечивают уникальность имен элементов и атрибутов в XML-документе.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> maintains a namespace stack that corresponds to all the namespaces defined in the current namespace scope.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> Поддерживает стек пространств имен, соответствующий всем пространствам имен, определенных в текущей области видимости пространства имен.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>When writing elements and attributes you can utilize namespaces in the following ways:</source>
          <target state="translated">При написании элементов и атрибутов можно использовать следующие способы.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>Declare namespaces manually by using the <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteAttributeString%2A&gt;</ph> method.</source>
          <target state="translated">Объявление пространств имен вручную с помощью <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteAttributeString%2A&gt;</ph> метод.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>This can be useful when you know how to best optimize the number of namespace declarations.</source>
          <target state="translated">Это бывает полезным, если известно, как наилучшим образом оптимизировать количество деклараций пространств имен.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>For an example, see the <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteAttributeString%28System.String%2CSystem.String%2CSystem.String%2CSystem.String%29&gt;</ph> method.</source>
          <target state="translated">Пример см. в разделе <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteAttributeString%28System.String%2CSystem.String%2CSystem.String%2CSystem.String%29&gt;</ph> метод.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>Override the current namespace declaration with a new namespace.</source>
          <target state="translated">Текущее объявление пространства имен обходится новым пространством имен.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>In the following code, the <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteAttributeString%2A&gt;</ph> method changes the namespace URI for the <ph id="ph2">`"x"`</ph> prefix from <ph id="ph3">`"123"`</ph> to <ph id="ph4">`"abc"`</ph>.</source>
          <target state="translated">В следующем коде <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteAttributeString%2A&gt;</ph> метод изменения URI пространства имен для <ph id="ph2">`"x"`</ph> префикса из <ph id="ph3">`"123"`</ph> для <ph id="ph4">`"abc"`</ph>.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>The code generates the following XML string:</source>
          <target state="translated">Код формирует следующую XML-строку:</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>Specify a namespace prefix when writing attributes or elements.</source>
          <target state="translated">Префикс пространства имен указывается при написании атрибутов или элементов.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>Many of the methods used to write element and attributes enable you to do this.</source>
          <target state="translated">Многие методы, используемые для создания элементов и атрибутов позволяют сделать это.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>For example, the <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteStartElement%28System.String%2CSystem.String%2CSystem.String%29&gt;</ph> method writes a start tag and associates it with a specified namespace and prefix.</source>
          <target state="translated">Например <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteStartElement%28System.String%2CSystem.String%2CSystem.String%29&gt;</ph> метод записывает открывающий тег и связывает его с указанным пространством имен и префиксом.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>Writing typed data</source>
          <target state="translated">Запись типизированных данных</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteValue%2A&gt;</ph> method accepts a common language runtime (CLR) object, converts the input value to its string representation according to XML schema definition language (XSD) data type conversion rules, and writes it out by using the <ph id="ph2">&lt;xref:System.Xml.XmlWriter.WriteString%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteValue%2A&gt;</ph> Метод принимает объект среды выполнения (CLR), преобразует входное значение в строковое представление в соответствии с XML схемы (XSD) данных типа правил преобразования языка определения и записывает его с помощью <ph id="ph2">&lt;xref:System.Xml.XmlWriter.WriteString%2A&gt;</ph> метод.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>This is easier than using the methods in the <ph id="ph1">&lt;xref:System.Xml.XmlConvert&gt;</ph> class to convert the typed data to a string value before writing it out.</source>
          <target state="translated">Это проще, чем при использовании методов в <ph id="ph1">&lt;xref:System.Xml.XmlConvert&gt;</ph> класса для преобразования типизированных данных перед их записью строковое значение.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>When writing to text, the typed value is serialized to text by using the <ph id="ph1">&lt;xref:System.Xml.XmlConvert&gt;</ph> rules for that schema type.</source>
          <target state="translated">При записи текста, типизированное значение сериализуется в текст с помощью <ph id="ph1">&lt;xref:System.Xml.XmlConvert&gt;</ph> правила для этого типа схемы.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>For default XSD data types that correspond to CLR types, see the <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteValue%2A&gt;</ph> method.</source>
          <target state="translated">Стандартные типы данных XSD, соответствующие типам среды CLR, в разделе <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteValue%2A&gt;</ph> метод.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> can also be used to write to an XML data store.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> Также можно использовать для записи в хранилище данных XML.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>For example, the <ph id="ph1">&lt;xref:System.Xml.XPath.XPathNavigator&gt;</ph> class can create an <ph id="ph2">&lt;xref:System.Xml.XmlWriter&gt;</ph> object to create nodes for an <ph id="ph3">&lt;xref:System.Xml.XmlDocument&gt;</ph> object.</source>
          <target state="translated">Например, класс <ph id="ph1">&lt;xref:System.Xml.XPath.XPathNavigator&gt;</ph> может создать объект <ph id="ph2">&lt;xref:System.Xml.XmlWriter&gt;</ph> для создания узлов для объекта <ph id="ph3">&lt;xref:System.Xml.XmlDocument&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>If the data store has schema information available to it, the <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteValue%2A&gt;</ph> method throws an exception if you try to convert to a type that is not allowed.If the data store does not have schema information available to it, the <ph id="ph2">&lt;xref:System.Xml.XmlWriter.WriteValue%2A&gt;</ph> method treats all values as an <ph id="ph3">`xsd:anySimpleType`</ph> type.</source>
          <target state="translated">Если хранилище данных содержит сведения о схеме, <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteValue%2A&gt;</ph> метод создает исключение при попытке преобразовать в тип, не допускается. Если хранилище данных не имеет сведений о схеме, <ph id="ph2">&lt;xref:System.Xml.XmlWriter.WriteValue%2A&gt;</ph> метод считает все значения <ph id="ph3">`xsd:anySimpleType`</ph> типа.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>Closing the XML writer</source>
          <target state="translated">Закрытие модуля записи XML</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>When you use <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> methods to output XML, the elements and attributes are not written until you call the <ph id="ph2">&lt;xref:System.Xml.XmlWriter.Close%2A&gt;</ph> method.</source>
          <target state="translated">При использовании <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> методы для вывода XML элементы и атрибуты не записываются, пока не будет вызван <ph id="ph2">&lt;xref:System.Xml.XmlWriter.Close%2A&gt;</ph> метод.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>For example, if you are using <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> to populate an <ph id="ph2">&lt;xref:System.Xml.XmlDocument&gt;</ph> object, you won't be able to see the written elements and attributes in the target document until you close the <ph id="ph3">&lt;xref:System.Xml.XmlWriter&gt;</ph> instance.</source>
          <target state="translated">Например, если вы используете <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> для заполнения <ph id="ph2">&lt;xref:System.Xml.XmlDocument&gt;</ph> объекта, его нельзя увидеть записи элементов и атрибутов в целевом документе до закрытия <ph id="ph3">&lt;xref:System.Xml.XmlWriter&gt;</ph> экземпляра.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>Asynchronous programming</source>
          <target state="translated">Асинхронное программирование</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>Most of the <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> methods have asynchronous counterparts that have "Async" at the end of their method names.</source>
          <target state="translated">Большинство <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> методы имеют асинхронной аналоги, имеющих «Async» в конце их имена методов.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>For example, the asynchronous equivalent of <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteAttributeString%2A&gt;</ph> is <ph id="ph2">&lt;xref:System.Xml.XmlWriter.WriteAttributeStringAsync%2A&gt;</ph>.</source>
          <target state="translated">Например, асинхронные эквивалент <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteAttributeString%2A&gt;</ph> — <ph id="ph2">&lt;xref:System.Xml.XmlWriter.WriteAttributeStringAsync%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>For the <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteValue%2A&gt;</ph> method, which doesn't have an asynchronous counterpart, convert the return value to a string and use the <ph id="ph2">&lt;xref:System.Xml.XmlWriter.WriteStringAsync%2A&gt;</ph> method instead.</source>
          <target state="translated">Для <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteValue%2A&gt;</ph> метод, который не имеет асинхронный эквивалент, преобразовать возвращаемое значение в строку и использовать <ph id="ph2">&lt;xref:System.Xml.XmlWriter.WriteStringAsync%2A&gt;</ph> метод вместо него.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>Security considerations</source>
          <target state="translated">Замечания по безопасности</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>Consider the following when working with the <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> class:</source>
          <target state="translated">Учитывайте следующее при работе с <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> класса:</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>Exceptions thrown by the <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> can disclose path information that you do not want bubbled up to the app.</source>
          <target state="translated">Исключения, вызванные <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> , могут содержать сведения о пути, которые не следует в приведенном выше приложения.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>Your app must catch exceptions and process them appropriately.</source>
          <target state="translated">Приложения должны перехватывать исключения и обрабатывать их соответствующим образом.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source><ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> does not validate any data that is passed to the <ph id="ph2">&lt;xref:System.Xml.XmlWriter.WriteDocType%2A&gt;</ph> or <ph id="ph3">&lt;xref:System.Xml.XmlWriter.WriteRaw%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> не проверяет все данные, передаваемые <ph id="ph2">&lt;xref:System.Xml.XmlWriter.WriteDocType%2A&gt;</ph> или <ph id="ph3">&lt;xref:System.Xml.XmlWriter.WriteRaw%2A&gt;</ph> метод.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>You should not pass arbitrary data to these methods.</source>
          <target state="translated">Не следует передавать в эти методы произвольные данные.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>The following example code shows how to use the asynchronous API to generate XML.</source>
          <target state="translated">В следующем примере кода показано, как использовать асинхронный интерфейс API для создания XML.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> class.</source>
          <target state="translated">Инициализирует новый экземпляр класса <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Close">
          <source>When overridden in a derived class, closes this stream and the underlying stream.</source>
          <target state="translated">Когда переопределено в производном классе, закрывает данный поток и базовый поток.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.Close">
          <source>Any elements or attributes left open are automatically closed.</source>
          <target state="translated">Любые элементы или атрибуты, которые открыты автоматически закрывается.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.Close">
          <source>When you use the <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> methods to output XML, the elements and attributes will not be written until you call the <ph id="ph2">&lt;xref:System.Xml.XmlWriter.Close%2A&gt;</ph> method.</source>
          <target state="translated">При использовании <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> методы для вывода XML элементы и атрибуты не будут записаны, пока не будет вызван <ph id="ph2">&lt;xref:System.Xml.XmlWriter.Close%2A&gt;</ph> метод.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.Close">
          <source>For example, if you are using the XmlWriter to populate an <ph id="ph1">&lt;xref:System.Xml.XmlDocument&gt;</ph>, until you close the <ph id="ph2">&lt;xref:System.Xml.XmlWriter&gt;</ph>, you will not be able to observe the written elements and attributes in the target document.</source>
          <target state="translated">Например, если вы используете XmlWriter для заполнения <ph id="ph1">&lt;xref:System.Xml.XmlDocument&gt;</ph>, пока не будет закрыта <ph id="ph2">&lt;xref:System.Xml.XmlWriter&gt;</ph>, вы не сможете контролировать письменного элементы и атрибуты в целевом документе.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.Close">
          <source>The following example writes an XML node.</source>
          <target state="translated">Следующий пример записывает XML-узла.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Close">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">Метод <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> вызван перед завершением предыдущей асинхронной операции.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Close">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">В этом случае возникает исключение <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> с сообщением "Асинхронная операция уже выполняется".</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlWriter">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> instance.</source>
          <target state="translated">Создает новый экземпляр <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>Some of the <ph id="ph1">&lt;xref:System.Xml.XmlWriter.Create%2A&gt;</ph> overloads include a <ph id="ph2">`settings`</ph> parameter that accepts an <ph id="ph3">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> object.</source>
          <target state="translated">Некоторые из <ph id="ph1">&lt;xref:System.Xml.XmlWriter.Create%2A&gt;</ph> перезагрузки включают <ph id="ph2">`settings`</ph> параметр, который принимает <ph id="ph3">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> объекта.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>You can use this object to:</source>
          <target state="translated">Можно использовать для этого объекта:</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>Specify which features you want supported on the created <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> object.</source>
          <target state="translated">Укажите, какие функции поддерживаются на созданный <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> объекта.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>Reuse the <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> object to create multiple writer objects.</source>
          <target state="translated">Повторное использование <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> объект для создания нескольких объектов модуля записи.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> object is copied and marked read-only for each created writer.</source>
          <target state="translated">Объект <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> копируется и помечается признаком «только для чтения» для каждого созданного модуля записи.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>Changes to the settings on an <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> instance do not affect existing writers with the same settings.</source>
          <target state="translated">Изменения в настройках экземпляра <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> не влияют на существующие модули записи с такими же настройками.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>Thus, you can use the same settings to create multiple writers with the same functionality.</source>
          <target state="translated">Таким образом, можно создать несколько модулей записи с одинаковой функциональностью, используя одинаковые настройки.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>Or, you can modify the settings on an <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> instance and create a new writer with a different set of features.</source>
          <target state="translated">Или можно изменить экземпляр <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> и создать новый модуль записи с другим набором функций.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>Add features to an existing XML writer.</source>
          <target state="translated">Добавление компонентов к существующей записи XML.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlWriter.Create%2A&gt;</ph> method can accept another <ph id="ph2">&lt;xref:System.Xml.XmlWriter&gt;</ph> object.</source>
          <target state="translated">Метод <ph id="ph1">&lt;xref:System.Xml.XmlWriter.Create%2A&gt;</ph> может принимать другой объект <ph id="ph2">&lt;xref:System.Xml.XmlWriter&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>The underlying <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> object does not have to be an XML writer created by the static <ph id="ph2">&lt;xref:System.Xml.XmlWriter.Create%2A&gt;</ph> method.</source>
          <target state="translated">Базовый <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> объекта не обязательно записи XML создан статическим <ph id="ph2">&lt;xref:System.Xml.XmlWriter.Create%2A&gt;</ph> метод.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>For example, you can specify a user-defined XML writer to add additional features to.</source>
          <target state="translated">Например можно указать пользовательские записи XML для добавления дополнительных функций для.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>Take full advantage of features such as better conformance checking and compliance to the <bpt id="p1">[</bpt>XML 1.0 recommendation<ept id="p1">](https://www.w3.org/TR/2006/REC-xml-20060816/)</ept> that are available only on <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> objects created by the static <ph id="ph2">&lt;xref:System.Xml.XmlWriter.Create%2A&gt;</ph> method.</source>
          <target state="translated">Использовать все преимущества функций, таких как более тщательной проверки совместимости и соответствия требованиям с целью <bpt id="p1">[</bpt>рекомендация XML 1.0<ept id="p1">](https://www.w3.org/TR/2006/REC-xml-20060816/)</ept> , которые доступны только на <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> объектов, созданных статический <ph id="ph2">&lt;xref:System.Xml.XmlWriter.Create%2A&gt;</ph> метод.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>If you use a <ph id="ph1">&lt;xref:System.Xml.XmlWriter.Create%2A&gt;</ph> overload that doesn't accept an <ph id="ph2">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> object, the following default writer settings are used:</source>
          <target state="translated">Если вы используете <ph id="ph1">&lt;xref:System.Xml.XmlWriter.Create%2A&gt;</ph> перегрузку, не принимающую <ph id="ph2">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> объекта, используются следующие параметры записи по умолчанию:</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>Setting</source>
          <target state="translated">Параметр</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>Default</source>
          <target state="translated">Значение по умолчанию</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>Two spaces</source>
          <target state="translated">Два пробела</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source><ph id="ph1">&lt;xref:System.Xml.NamespaceHandling.Default&gt;</ph> (no removal)</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.NamespaceHandling.Default&gt;</ph> (без удаления)</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source><ph id="ph1">`\r\n`</ph> (carriage return, new line)</source>
          <target state="translated"><ph id="ph1">`\r\n`</ph> (возврат каретки, новая строка)</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>Although the .NET Framework includes the <ph id="ph1">&lt;xref:System.Xml.XmlTextWriter&gt;</ph> class, which is a concrete implementation of the <ph id="ph2">&lt;xref:System.Xml.XmlWriter&gt;</ph> class, we recommend that you create <ph id="ph3">&lt;xref:System.Xml.XmlWriter&gt;</ph> instances by using the <ph id="ph4">&lt;xref:System.Xml.XmlWriter.Create%2A&gt;</ph> method.</source>
          <target state="translated">Несмотря на то, что платформа .NET Framework включает <ph id="ph1">&lt;xref:System.Xml.XmlTextWriter&gt;</ph> класс, который является конкретной реализацией из <ph id="ph2">&lt;xref:System.Xml.XmlWriter&gt;</ph> , рекомендуется создать <ph id="ph3">&lt;xref:System.Xml.XmlWriter&gt;</ph> экземпляров с помощью <ph id="ph4">&lt;xref:System.Xml.XmlWriter.Create%2A&gt;</ph> метод.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Create(System.IO.Stream)">
          <source>The stream to which you want to write.</source>
          <target state="translated">Поток, в который будет выполняться запись.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Create(System.IO.Stream)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> writes XML 1.0 text syntax and appends it to the specified stream.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> записывает синтаксис текста XML 1.0 и добавляет его к указанному потоку.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Create(System.IO.Stream)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> instance using the specified stream.</source>
          <target state="translated">Создает новый экземпляр <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> с использованием указанного потока.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Create(System.IO.Stream)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> object.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.Create(System.IO.Stream)">
          <source>When you use this overload, an <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> object with the following default settings is used to create the XML writer:</source>
          <target state="translated">При использовании этой перегрузки <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> объекта со следующими параметрами по умолчанию используется для создания модуля записи XML:</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.Create(System.IO.Stream)">
          <source>Setting</source>
          <target state="translated">Параметр</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.Create(System.IO.Stream)">
          <source>Default</source>
          <target state="translated">Значение по умолчанию</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.Create(System.IO.Stream)">
          <source>Two spaces</source>
          <target state="translated">Два пробела</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.Create(System.IO.Stream)">
          <source><ph id="ph1">&lt;xref:System.Xml.NamespaceHandling.Default&gt;</ph> (no removal)</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.NamespaceHandling.Default&gt;</ph> (без удаления)</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.Create(System.IO.Stream)">
          <source><ph id="ph1">`\r\n`</ph> (carriage return, new line)</source>
          <target state="translated"><ph id="ph1">`\r\n`</ph> (возврат каретки, новая строка)</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.Create(System.IO.Stream)">
          <source>If you want to specify the features to support on the created writer, use an overload that takes an <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> object as one of its arguments, and pass in an <ph id="ph2">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> object with your custom settings.</source>
          <target state="translated">Если вы хотите указать функциональные возможности для поддержки созданного средства записи, используйте перегрузку, которая принимает <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> объекта в виде одного из аргументов и передает в <ph id="ph2">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> объекта с помощью настраиваемых параметров.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.Create(System.IO.Stream)">
          <source>Also, XmlWriter always writes a Byte Order Mark (BOM) to the underlying data stream; however, some streams must not have a BOM.</source>
          <target state="translated">Кроме того XmlWriter всегда записывает отметку порядка байтов (BOM) в основной поток данных; Тем не менее некоторые потоки не должна Спецификации.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.Create(System.IO.Stream)">
          <source>To omit the BOM, create a new <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> object and set the Encoding property to be a new <ph id="ph2">&lt;xref:System.Text.UTF8Encoding&gt;</ph> object with the Boolean value in the constructor set to false.</source>
          <target state="translated">Чтобы исключить Спецификации, создайте новый <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> и задайте новое свойство Encoding <ph id="ph2">&lt;xref:System.Text.UTF8Encoding&gt;</ph> объекта с логическим значением в конструкторе значение false.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.Create(System.IO.Stream)">
          <source>The following example writes an XML fragment to a memory stream.</source>
          <target state="translated">Следующий пример записывает фрагмент XML в потоке памяти.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.Create(System.IO.Stream)">
          <source>(It uses the <ph id="ph1">&lt;xref:System.Xml.XmlWriter.Create%28System.IO.Stream%2CSystem.Xml.XmlWriterSettings%29&gt;</ph> overload, which also configures the settings on the new XML writer instance.)</source>
          <target state="translated">(Он использует <ph id="ph1">&lt;xref:System.Xml.XmlWriter.Create%28System.IO.Stream%2CSystem.Xml.XmlWriterSettings%29&gt;</ph> перегрузку, которая настраивает параметры для нового экземпляра модуля записи XML.)</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Create(System.IO.Stream)">
          <source>The <ph id="ph1">&lt;paramref name="stream" /&gt;</ph> value is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Значение <ph id="ph1">&lt;paramref name="stream" /&gt;</ph> равно <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Create(System.IO.TextWriter)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> to which you want to write.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph>, в которое необходимо записать.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Create(System.IO.TextWriter)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> writes XML 1.0 text syntax and appends it to the specified <ph id="ph2">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph>.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> записывает синтаксис текста XML 1.0 и добавляет его к указанному потоку <ph id="ph2">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Create(System.IO.TextWriter)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> instance using the specified <ph id="ph2">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph>.</source>
          <target state="translated">Создает новый экземпляр <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> с использованием указанного <ph id="ph2">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Create(System.IO.TextWriter)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> object.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.Create(System.IO.TextWriter)">
          <source>When you use this overload, an <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> object with default settings is used to create the XML writer.</source>
          <target state="translated">При использовании этой перегрузки <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> объекта с параметрами по умолчанию используется для создания модуля записи XML.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.Create(System.IO.TextWriter)">
          <source>Setting</source>
          <target state="translated">Параметр</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.Create(System.IO.TextWriter)">
          <source>Default</source>
          <target state="translated">Значение по умолчанию</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.Create(System.IO.TextWriter)">
          <source>Two spaces</source>
          <target state="translated">Два пробела</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.Create(System.IO.TextWriter)">
          <source><ph id="ph1">&lt;xref:System.Xml.NamespaceHandling.Default&gt;</ph> (no removal)</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.NamespaceHandling.Default&gt;</ph> (без удаления)</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.Create(System.IO.TextWriter)">
          <source><ph id="ph1">`\r\n`</ph> (carriage return, new line)</source>
          <target state="translated"><ph id="ph1">`\r\n`</ph> (возврат каретки, новая строка)</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.Create(System.IO.TextWriter)">
          <source>If you want to specify the features to support on the created writer, use an overload that takes an <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> object as one of its arguments, and pass in an <ph id="ph2">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> object with your custom settings.</source>
          <target state="translated">Если вы хотите указать функциональные возможности для поддержки созданного средства записи, используйте перегрузку, которая принимает <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> объекта в виде одного из аргументов и передает в <ph id="ph2">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> объекта с помощью настраиваемых параметров.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.Create(System.IO.TextWriter)">
          <source>The following example creates a writer that outputs to the console.</source>
          <target state="translated">В следующем примере создается модуль записи, который выводит на консоль.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Create(System.IO.TextWriter)">
          <source>The <ph id="ph1">&lt;paramref name="text" /&gt;</ph> value is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Значение <ph id="ph1">&lt;paramref name="text" /&gt;</ph> равно <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Create(System.String)">
          <source>The file to which you want to write.</source>
          <target state="translated">Файл, в который будет выполняться запись.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Create(System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> creates a file at the specified path and writes to it in XML 1.0 text syntax.</source>
          <target state="translated">Метод <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> создает файл по указанному пути и записывает в него, используя синтаксис текста XML 1.0.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Create(System.String)">
          <source>The <bpt id="p1">&lt;c&gt;</bpt>outputFileName<ept id="p1">&lt;/c&gt;</ept> must be a file system path.</source>
          <target state="translated">Параметр <bpt id="p1">&lt;c&gt;</bpt>outputFileName<ept id="p1">&lt;/c&gt;</ept> должен являться путем в файловой системе.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Create(System.String)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> instance using the specified filename.</source>
          <target state="translated">Создает новый экземпляр <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> с использованием указанного имени файла.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Create(System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> object.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.Create(System.String)">
          <source>When you use this overload, an <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> object with default settings is used to create the XML writer.</source>
          <target state="translated">При использовании этой перегрузки <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> объекта с параметрами по умолчанию используется для создания модуля записи XML.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.Create(System.String)">
          <source>Setting</source>
          <target state="translated">Параметр</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.Create(System.String)">
          <source>Default</source>
          <target state="translated">Значение по умолчанию</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.Create(System.String)">
          <source>Two spaces</source>
          <target state="translated">Два пробела</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.Create(System.String)">
          <source><ph id="ph1">&lt;xref:System.Xml.NamespaceHandling.Default&gt;</ph> (no removal)</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.NamespaceHandling.Default&gt;</ph> (без удаления)</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.Create(System.String)">
          <source><ph id="ph1">`\r\n`</ph> (carriage return, new line)</source>
          <target state="translated"><ph id="ph1">`\r\n`</ph> (возврат каретки, новая строка)</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.Create(System.String)">
          <source>If you want to specify the features to support on the created XML writer, use an overload that takes an <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> object as one of its arguments, and pass in a <ph id="ph2">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> object with your custom settings.</source>
          <target state="translated">Если вы хотите указать функциональные возможности для поддержки созданного средства записи XML, используйте перегрузку, которая принимает <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> объекта в виде одного из аргументов и передает в <ph id="ph2">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> объекта с помощью настраиваемых параметров.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.Create(System.String)">
          <source>The following example creates an <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> object and writes a book node.</source>
          <target state="translated">В следующем примере создается <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> и записывает узел книги.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Create(System.String)">
          <source>The <ph id="ph1">&lt;paramref name="url" /&gt;</ph> value is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Значение <ph id="ph1">&lt;paramref name="url" /&gt;</ph> равно <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Create(System.Text.StringBuilder)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> to which to write to.</source>
          <target state="translated">Класс <ph id="ph1">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph>, в который осуществляется запись.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Create(System.Text.StringBuilder)">
          <source>Content written by the <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> is appended to the <ph id="ph2">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph>.</source>
          <target state="translated">Содержимое, записанное методом <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>, добавляется в <ph id="ph2">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Create(System.Text.StringBuilder)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> instance using the specified <ph id="ph2">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph>.</source>
          <target state="translated">Создает новый экземпляр <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> с использованием указанного <ph id="ph2">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Create(System.Text.StringBuilder)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> object.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.Create(System.Text.StringBuilder)">
          <source>When you use this overload, an <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> object with default settings is used to create the XML writer.</source>
          <target state="translated">При использовании этой перегрузки <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> объекта с параметрами по умолчанию используется для создания модуля записи XML.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.Create(System.Text.StringBuilder)">
          <source>Setting</source>
          <target state="translated">Параметр</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.Create(System.Text.StringBuilder)">
          <source>Default</source>
          <target state="translated">Значение по умолчанию</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.Create(System.Text.StringBuilder)">
          <source>Two spaces</source>
          <target state="translated">Два пробела</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.Create(System.Text.StringBuilder)">
          <source><ph id="ph1">&lt;xref:System.Xml.NamespaceHandling.Default&gt;</ph> (no removal)</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.NamespaceHandling.Default&gt;</ph> (без удаления)</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.Create(System.Text.StringBuilder)">
          <source><ph id="ph1">`\r\n`</ph> (carriage return, new line)</source>
          <target state="translated"><ph id="ph1">`\r\n`</ph> (возврат каретки, новая строка)</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.Create(System.Text.StringBuilder)">
          <source>If you want to specify the features to support on the created XML writer, use an overload that takes an <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> object as one of its arguments, and pass in a <ph id="ph2">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> object with your custom settings.</source>
          <target state="translated">Если вы хотите указать функциональные возможности для поддержки созданного средства записи XML, используйте перегрузку, которая принимает <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> объекта в виде одного из аргументов и передает в <ph id="ph2">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> объекта с помощью настраиваемых параметров.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Create(System.Text.StringBuilder)">
          <source>The <ph id="ph1">&lt;paramref name="builder" /&gt;</ph> value is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Значение <ph id="ph1">&lt;paramref name="builder" /&gt;</ph> равно <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Create(System.Xml.XmlWriter)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> object that you want to use as the underlying writer.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>, который следует использовать в качестве базового средства записи.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Create(System.Xml.XmlWriter)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> instance using the specified <ph id="ph2">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> object.</source>
          <target state="translated">Создает новый экземпляр <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> с использованием указанного объекта <ph id="ph2">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Create(System.Xml.XmlWriter)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> object that is wrapped around the specified <ph id="ph2">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> object.</source>
          <target state="translated">Возвращает объект <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>, являющийся оболочкой указанного объекта <ph id="ph2">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.Create(System.Xml.XmlWriter)">
          <source>This method allows you add features to an underlying <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> object.</source>
          <target state="translated">Этот метод позволяет добавить компоненты к базовому <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> объекта.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.Create(System.Xml.XmlWriter)">
          <source>The underlying <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> object can be an object created by the <ph id="ph2">&lt;xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType&gt;</ph> method, or an object created using the <ph id="ph3">&lt;xref:System.Xml.XmlTextWriter&gt;</ph> implementation.</source>
          <target state="translated">Базовый <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> объект может быть объектом, созданным с <ph id="ph2">&lt;xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType&gt;</ph> метода или объекта, созданного с помощью <ph id="ph3">&lt;xref:System.Xml.XmlTextWriter&gt;</ph> реализации.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.Create(System.Xml.XmlWriter)">
          <source>When you use this overload, an <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> object with default settings is used to create the XML writer.</source>
          <target state="translated">При использовании этой перегрузки <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> объекта с параметрами по умолчанию используется для создания модуля записи XML.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.Create(System.Xml.XmlWriter)">
          <source>Setting</source>
          <target state="translated">Параметр</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.Create(System.Xml.XmlWriter)">
          <source>Default</source>
          <target state="translated">Значение по умолчанию</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.Create(System.Xml.XmlWriter)">
          <source>Two spaces</source>
          <target state="translated">Два пробела</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.Create(System.Xml.XmlWriter)">
          <source><ph id="ph1">&lt;xref:System.Xml.NamespaceHandling.Default&gt;</ph> (no removal)</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.NamespaceHandling.Default&gt;</ph> (без удаления)</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.Create(System.Xml.XmlWriter)">
          <source><ph id="ph1">`\r\n`</ph> (carriage return, new line)</source>
          <target state="translated"><ph id="ph1">`\r\n`</ph> (возврат каретки, новая строка)</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.Create(System.Xml.XmlWriter)">
          <source>If you want to specify the features to support on the created XML writer, use an overload that takes an <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> object as one of its arguments, and pass in a <ph id="ph2">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> object with your custom settings.</source>
          <target state="translated">Если вы хотите указать функциональные возможности для поддержки созданного средства записи XML, используйте перегрузку, которая принимает <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> объекта в виде одного из аргументов и передает в <ph id="ph2">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> объекта с помощью настраиваемых параметров.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Create(System.Xml.XmlWriter)">
          <source>The <ph id="ph1">&lt;paramref name="writer" /&gt;</ph> value is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Значение <ph id="ph1">&lt;paramref name="writer" /&gt;</ph> равно <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Create(System.IO.Stream,System.Xml.XmlWriterSettings)">
          <source>The stream to which you want to write.</source>
          <target state="translated">Поток, в который будет выполняться запись.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Create(System.IO.Stream,System.Xml.XmlWriterSettings)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> writes XML 1.0 text syntax and appends it to the specified stream.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> записывает синтаксис текста XML 1.0 и добавляет его к указанному потоку.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Create(System.IO.Stream,System.Xml.XmlWriterSettings)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriterSettings" /&gt;</ph> object used to configure the new <ph id="ph2">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> instance.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriterSettings" /&gt;</ph>, использованный для настройки нового экземпляра<ph id="ph2">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Create(System.IO.Stream,System.Xml.XmlWriterSettings)">
          <source>If this is <ph id="ph1">&lt;see langword="null" /&gt;</ph>, a <ph id="ph2">&lt;see cref="T:System.Xml.XmlWriterSettings" /&gt;</ph> with default settings is used.</source>
          <target state="translated">Если значение равно <ph id="ph1">&lt;see langword="null" /&gt;</ph>, используется <ph id="ph2">&lt;see cref="T:System.Xml.XmlWriterSettings" /&gt;</ph> с параметрами по умолчанию.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Create(System.IO.Stream,System.Xml.XmlWriterSettings)">
          <source>If the <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> is being used with the <ph id="ph2">&lt;see cref="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.XmlWriter)" /&gt;</ph> method, you should use the <ph id="ph3">&lt;see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /&gt;</ph> property to obtain an <ph id="ph4">&lt;see cref="T:System.Xml.XmlWriterSettings" /&gt;</ph> object with the correct settings.</source>
          <target state="translated">Если <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> используется вместе с методом <ph id="ph2">&lt;see cref="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.XmlWriter)" /&gt;</ph>, необходимо использовать свойство <ph id="ph3">&lt;see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /&gt;</ph> для получения объекта <ph id="ph4">&lt;see cref="T:System.Xml.XmlWriterSettings" /&gt;</ph> с верными параметрами.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Create(System.IO.Stream,System.Xml.XmlWriterSettings)">
          <source>This ensures that the created <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> object has the correct output settings.</source>
          <target state="translated">Это гарантирует правильность параметров выходных данных для объекта <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Create(System.IO.Stream,System.Xml.XmlWriterSettings)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> instance using the stream and <ph id="ph2">&lt;see cref="T:System.Xml.XmlWriterSettings" /&gt;</ph> object.</source>
          <target state="translated">Создает новый экземпляр <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> с помощью потока и объекта <ph id="ph2">&lt;see cref="T:System.Xml.XmlWriterSettings" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Create(System.IO.Stream,System.Xml.XmlWriterSettings)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> object.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.Create(System.IO.Stream,System.Xml.XmlWriterSettings)">
          <source>XmlWriter always writes a Byte Order Mark (BOM) to the underlying data stream; however, some streams must not have a BOM.</source>
          <target state="translated">XmlWriter всегда записывает отметку порядка байтов (BOM) в основной поток данных; Тем не менее некоторые потоки не должна Спецификации.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.Create(System.IO.Stream,System.Xml.XmlWriterSettings)">
          <source>To omit the BOM, create a new <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> object and set the Encoding property to be a new <ph id="ph2">&lt;xref:System.Text.UTF8Encoding&gt;</ph> object with the Boolean value in the constructor set to false.</source>
          <target state="translated">Чтобы исключить Спецификации, создайте новый <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> и задайте новое свойство Encoding <ph id="ph2">&lt;xref:System.Text.UTF8Encoding&gt;</ph> объекта с логическим значением в конструкторе значение false.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.Create(System.IO.Stream,System.Xml.XmlWriterSettings)">
          <source>The following example writes an XML fragment to a memory stream.</source>
          <target state="translated">Следующий пример записывает фрагмент XML в потоке памяти.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Create(System.IO.Stream,System.Xml.XmlWriterSettings)">
          <source>The <ph id="ph1">&lt;paramref name="stream" /&gt;</ph> value is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Значение <ph id="ph1">&lt;paramref name="stream" /&gt;</ph> равно <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Create(System.IO.TextWriter,System.Xml.XmlWriterSettings)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> to which you want to write.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph>, в которое необходимо записать.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Create(System.IO.TextWriter,System.Xml.XmlWriterSettings)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> writes XML 1.0 text syntax and appends it to the specified <ph id="ph2">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph>.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> записывает синтаксис текста XML 1.0 и добавляет его к указанному потоку <ph id="ph2">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Create(System.IO.TextWriter,System.Xml.XmlWriterSettings)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriterSettings" /&gt;</ph> object used to configure the new <ph id="ph2">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> instance.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriterSettings" /&gt;</ph>, использованный для настройки нового экземпляра<ph id="ph2">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Create(System.IO.TextWriter,System.Xml.XmlWriterSettings)">
          <source>If this is <ph id="ph1">&lt;see langword="null" /&gt;</ph>, a <ph id="ph2">&lt;see cref="T:System.Xml.XmlWriterSettings" /&gt;</ph> with default settings is used.</source>
          <target state="translated">Если значение равно <ph id="ph1">&lt;see langword="null" /&gt;</ph>, используется <ph id="ph2">&lt;see cref="T:System.Xml.XmlWriterSettings" /&gt;</ph> с параметрами по умолчанию.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Create(System.IO.TextWriter,System.Xml.XmlWriterSettings)">
          <source>If the <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> is being used with the <ph id="ph2">&lt;see cref="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.XmlWriter)" /&gt;</ph> method, you should use the <ph id="ph3">&lt;see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /&gt;</ph> property to obtain an <ph id="ph4">&lt;see cref="T:System.Xml.XmlWriterSettings" /&gt;</ph> object with the correct settings.</source>
          <target state="translated">Если <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> используется вместе с методом <ph id="ph2">&lt;see cref="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.XmlWriter)" /&gt;</ph>, необходимо использовать свойство <ph id="ph3">&lt;see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /&gt;</ph> для получения объекта <ph id="ph4">&lt;see cref="T:System.Xml.XmlWriterSettings" /&gt;</ph> с верными параметрами.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Create(System.IO.TextWriter,System.Xml.XmlWriterSettings)">
          <source>This ensures that the created <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> object has the correct output settings.</source>
          <target state="translated">Это гарантирует правильность параметров выходных данных для объекта <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Create(System.IO.TextWriter,System.Xml.XmlWriterSettings)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> instance using the <ph id="ph2">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> and <ph id="ph3">&lt;see cref="T:System.Xml.XmlWriterSettings" /&gt;</ph> objects.</source>
          <target state="translated">Создает новый экземпляр <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> с использованием объектов <ph id="ph2">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> и <ph id="ph3">&lt;see cref="T:System.Xml.XmlWriterSettings" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Create(System.IO.TextWriter,System.Xml.XmlWriterSettings)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> object.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.Create(System.IO.TextWriter,System.Xml.XmlWriterSettings)">
          <source>The following example writes out an XML string.</source>
          <target state="translated">Следующий пример записывает строки XML.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Create(System.IO.TextWriter,System.Xml.XmlWriterSettings)">
          <source>The <ph id="ph1">&lt;paramref name="text" /&gt;</ph> value is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Значение <ph id="ph1">&lt;paramref name="text" /&gt;</ph> равно <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Create(System.String,System.Xml.XmlWriterSettings)">
          <source>The file to which you want to write.</source>
          <target state="translated">Файл, в который будет выполняться запись.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Create(System.String,System.Xml.XmlWriterSettings)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> creates a file at the specified path and writes to it in XML 1.0 text syntax.</source>
          <target state="translated">Метод <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> создает файл по указанному пути и записывает в него, используя синтаксис текста XML 1.0.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Create(System.String,System.Xml.XmlWriterSettings)">
          <source>The <bpt id="p1">&lt;c&gt;</bpt>outputFileName<ept id="p1">&lt;/c&gt;</ept> must be a file system path.</source>
          <target state="translated">Параметр <bpt id="p1">&lt;c&gt;</bpt>outputFileName<ept id="p1">&lt;/c&gt;</ept> должен являться путем в файловой системе.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Create(System.String,System.Xml.XmlWriterSettings)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriterSettings" /&gt;</ph> object used to configure the new <ph id="ph2">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> instance.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriterSettings" /&gt;</ph>, использованный для настройки нового экземпляра<ph id="ph2">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Create(System.String,System.Xml.XmlWriterSettings)">
          <source>If this is <ph id="ph1">&lt;see langword="null" /&gt;</ph>, a <ph id="ph2">&lt;see cref="T:System.Xml.XmlWriterSettings" /&gt;</ph> with default settings is used.</source>
          <target state="translated">Если значение равно <ph id="ph1">&lt;see langword="null" /&gt;</ph>, используется <ph id="ph2">&lt;see cref="T:System.Xml.XmlWriterSettings" /&gt;</ph> с параметрами по умолчанию.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Create(System.String,System.Xml.XmlWriterSettings)">
          <source>If the <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> is being used with the <ph id="ph2">&lt;see cref="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.XmlWriter)" /&gt;</ph> method, you should use the <ph id="ph3">&lt;see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /&gt;</ph> property to obtain an <ph id="ph4">&lt;see cref="T:System.Xml.XmlWriterSettings" /&gt;</ph> object with the correct settings.</source>
          <target state="translated">Если <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> используется вместе с методом <ph id="ph2">&lt;see cref="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.XmlWriter)" /&gt;</ph>, необходимо использовать свойство <ph id="ph3">&lt;see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /&gt;</ph> для получения объекта <ph id="ph4">&lt;see cref="T:System.Xml.XmlWriterSettings" /&gt;</ph> с верными параметрами.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Create(System.String,System.Xml.XmlWriterSettings)">
          <source>This ensures that the created <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> object has the correct output settings.</source>
          <target state="translated">Это гарантирует правильность параметров выходных данных для объекта <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Create(System.String,System.Xml.XmlWriterSettings)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> instance using the filename and <ph id="ph2">&lt;see cref="T:System.Xml.XmlWriterSettings" /&gt;</ph> object.</source>
          <target state="translated">Создает новый экземпляр <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> с помощью имени файла и объекта <ph id="ph2">&lt;see cref="T:System.Xml.XmlWriterSettings" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Create(System.String,System.Xml.XmlWriterSettings)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> object.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.Create(System.String,System.Xml.XmlWriterSettings)">
          <source>The following example creates an <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> object with the defined settings.</source>
          <target state="translated">В следующем примере создается <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> объекта с помощью заданных параметров.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Create(System.String,System.Xml.XmlWriterSettings)">
          <source>The <ph id="ph1">&lt;paramref name="url" /&gt;</ph> value is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Значение <ph id="ph1">&lt;paramref name="url" /&gt;</ph> равно <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Create(System.Text.StringBuilder,System.Xml.XmlWriterSettings)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> to which to write to.</source>
          <target state="translated">Класс <ph id="ph1">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph>, в который осуществляется запись.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Create(System.Text.StringBuilder,System.Xml.XmlWriterSettings)">
          <source>Content written by the <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> is appended to the <ph id="ph2">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph>.</source>
          <target state="translated">Содержимое, записанное методом <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>, добавляется в <ph id="ph2">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Create(System.Text.StringBuilder,System.Xml.XmlWriterSettings)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriterSettings" /&gt;</ph> object used to configure the new <ph id="ph2">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> instance.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriterSettings" /&gt;</ph>, использованный для настройки нового экземпляра<ph id="ph2">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Create(System.Text.StringBuilder,System.Xml.XmlWriterSettings)">
          <source>If this is <ph id="ph1">&lt;see langword="null" /&gt;</ph>, a <ph id="ph2">&lt;see cref="T:System.Xml.XmlWriterSettings" /&gt;</ph> with default settings is used.</source>
          <target state="translated">Если значение равно <ph id="ph1">&lt;see langword="null" /&gt;</ph>, используется <ph id="ph2">&lt;see cref="T:System.Xml.XmlWriterSettings" /&gt;</ph> с параметрами по умолчанию.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Create(System.Text.StringBuilder,System.Xml.XmlWriterSettings)">
          <source>If the <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> is being used with the <ph id="ph2">&lt;see cref="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.XmlWriter)" /&gt;</ph> method, you should use the <ph id="ph3">&lt;see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /&gt;</ph> property to obtain an <ph id="ph4">&lt;see cref="T:System.Xml.XmlWriterSettings" /&gt;</ph> object with the correct settings.</source>
          <target state="translated">Если <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> используется вместе с методом <ph id="ph2">&lt;see cref="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.XmlWriter)" /&gt;</ph>, необходимо использовать свойство <ph id="ph3">&lt;see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /&gt;</ph> для получения объекта <ph id="ph4">&lt;see cref="T:System.Xml.XmlWriterSettings" /&gt;</ph> с верными параметрами.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Create(System.Text.StringBuilder,System.Xml.XmlWriterSettings)">
          <source>This ensures that the created <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> object has the correct output settings.</source>
          <target state="translated">Это гарантирует правильность параметров выходных данных для объекта <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Create(System.Text.StringBuilder,System.Xml.XmlWriterSettings)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> instance using the <ph id="ph2">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> and <ph id="ph3">&lt;see cref="T:System.Xml.XmlWriterSettings" /&gt;</ph> objects.</source>
          <target state="translated">Создает новый экземпляр <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> с использованием объектов <ph id="ph2">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> и <ph id="ph3">&lt;see cref="T:System.Xml.XmlWriterSettings" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Create(System.Text.StringBuilder,System.Xml.XmlWriterSettings)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> object.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Create(System.Text.StringBuilder,System.Xml.XmlWriterSettings)">
          <source>The <ph id="ph1">&lt;paramref name="builder" /&gt;</ph> value is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Значение <ph id="ph1">&lt;paramref name="builder" /&gt;</ph> равно <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Create(System.Xml.XmlWriter,System.Xml.XmlWriterSettings)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> object that you want to use as the underlying writer.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>, который следует использовать в качестве базового средства записи.</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Create(System.Xml.XmlWriter,System.Xml.XmlWriterSettings)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriterSettings" /&gt;</ph> object used to configure the new <ph id="ph2">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> instance.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriterSettings" /&gt;</ph>, использованный для настройки нового экземпляра<ph id="ph2">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Create(System.Xml.XmlWriter,System.Xml.XmlWriterSettings)">
          <source>If this is <ph id="ph1">&lt;see langword="null" /&gt;</ph>, a <ph id="ph2">&lt;see cref="T:System.Xml.XmlWriterSettings" /&gt;</ph> with default settings is used.</source>
          <target state="translated">Если значение равно <ph id="ph1">&lt;see langword="null" /&gt;</ph>, используется <ph id="ph2">&lt;see cref="T:System.Xml.XmlWriterSettings" /&gt;</ph> с параметрами по умолчанию.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Create(System.Xml.XmlWriter,System.Xml.XmlWriterSettings)">
          <source>If the <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> is being used with the <ph id="ph2">&lt;see cref="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.XmlWriter)" /&gt;</ph> method, you should use the <ph id="ph3">&lt;see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /&gt;</ph> property to obtain an <ph id="ph4">&lt;see cref="T:System.Xml.XmlWriterSettings" /&gt;</ph> object with the correct settings.</source>
          <target state="translated">Если <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> используется вместе с методом <ph id="ph2">&lt;see cref="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.XmlWriter)" /&gt;</ph>, необходимо использовать свойство <ph id="ph3">&lt;see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /&gt;</ph> для получения объекта <ph id="ph4">&lt;see cref="T:System.Xml.XmlWriterSettings" /&gt;</ph> с верными параметрами.</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Create(System.Xml.XmlWriter,System.Xml.XmlWriterSettings)">
          <source>This ensures that the created <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> object has the correct output settings.</source>
          <target state="translated">Это гарантирует правильность параметров выходных данных для объекта <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Create(System.Xml.XmlWriter,System.Xml.XmlWriterSettings)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> instance using the specified <ph id="ph2">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> and <ph id="ph3">&lt;see cref="T:System.Xml.XmlWriterSettings" /&gt;</ph> objects.</source>
          <target state="translated">Создает новый экземпляр <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> с использованием указанных объектов <ph id="ph2">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> и <ph id="ph3">&lt;see cref="T:System.Xml.XmlWriterSettings" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Create(System.Xml.XmlWriter,System.Xml.XmlWriterSettings)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> object that is wrapped around the specified <ph id="ph2">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> object.</source>
          <target state="translated">Возвращает объект <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>, являющийся оболочкой указанного объекта <ph id="ph2">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.Create(System.Xml.XmlWriter,System.Xml.XmlWriterSettings)">
          <source>This method allows you add additional features to an underlying <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> object.</source>
          <target state="translated">Этот метод позволяет добавлять дополнительные возможности для базовой <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> объекта.</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.Create(System.Xml.XmlWriter,System.Xml.XmlWriterSettings)">
          <source>The underlying <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> object can be an object created by the <ph id="ph2">&lt;xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType&gt;</ph> method, or an object created using the <ph id="ph3">&lt;xref:System.Xml.XmlTextWriter&gt;</ph> implementation.</source>
          <target state="translated">Базовый <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> объект может быть объектом, созданным с <ph id="ph2">&lt;xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType&gt;</ph> метода или объекта, созданного с помощью <ph id="ph3">&lt;xref:System.Xml.XmlTextWriter&gt;</ph> реализации.</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Create(System.Xml.XmlWriter,System.Xml.XmlWriterSettings)">
          <source>The <ph id="ph1">&lt;paramref name="writer" /&gt;</ph> value is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Значение <ph id="ph1">&lt;paramref name="writer" /&gt;</ph> равно <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlWriter">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">Метод <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> вызван перед завершением предыдущей асинхронной операции.</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlWriter">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message “An asynchronous operation is already in progress.”</source>
          <target state="translated">В этом случае возникает исключение <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> с сообщением "Асинхронная операция уже выполняется".</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlWriter">
          <source>Releases the resources used by the <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> class.</source>
          <target state="translated">Освобождение ресурсов, используемых классом <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Dispose">
          <source>Releases all resources used by the current instance of the <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> class.</source>
          <target state="translated">Освобождает все ресурсы, используемые текущим экземпляром класса <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Dispose">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">Метод <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> вызван перед завершением предыдущей асинхронной операции.</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Dispose">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">В этом случае возникает исключение <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> с сообщением "Асинхронная операция уже выполняется".</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to release both managed and unmanaged resources; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to release only unmanaged resources.</source>
          <target state="translated">Значение <ph id="ph1">&lt;see langword="true" /&gt;</ph> позволяет освободить как управляемые, так и неуправляемые ресурсы; значение <ph id="ph2">&lt;see langword="false" /&gt;</ph> освобождает только неуправляемые ресурсы.</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Dispose(System.Boolean)">
          <source>Releases the unmanaged resources used by the <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> and optionally releases the managed resources.</source>
          <target state="translated">Освобождает неуправляемые ресурсы, используемые объектом <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>, а при необходимости освобождает также управляемые ресурсы.</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Dispose(System.Boolean)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">Метод <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> вызван перед завершением предыдущей асинхронной операции.</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Dispose(System.Boolean)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">В этом случае возникает исключение <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> с сообщением "Асинхронная операция уже выполняется".</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Flush">
          <source>When overridden in a derived class, flushes whatever is in the buffer to the underlying streams and also flushes the underlying stream.</source>
          <target state="translated">Когда переопределено в производном классе, сохраняет в базовый поток содержимое буфера, а также сохраняет основной поток.</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.Flush">
          <source>This is called instead of <ph id="ph1">&lt;xref:System.Xml.XmlWriter.Close%2A&gt;</ph> when you want to write more to the underlying stream without losing what is still in the buffer.</source>
          <target state="translated">Это называется вместо <ph id="ph1">&lt;xref:System.Xml.XmlWriter.Close%2A&gt;</ph> при необходимости записать больше данных в основной поток без потери буфера.</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.Flush">
          <source>For the asynchronous version of this method, see <ph id="ph1">&lt;xref:System.Xml.XmlWriter.FlushAsync%2A&gt;</ph>.</source>
          <target state="translated">Асинхронная версия данного метода, в разделе <ph id="ph1">&lt;xref:System.Xml.XmlWriter.FlushAsync%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.Flush">
          <source>The following example writes two XML fragments.</source>
          <target state="translated">Следующий пример записывает двух фрагментов XML.</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Flush">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">Метод <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> вызван перед завершением предыдущей асинхронной операции.</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Flush">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">В этом случае возникает исключение <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> с сообщением "Асинхронная операция уже выполняется".</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.FlushAsync">
          <source>Asynchronously flushes whatever is in the buffer to the underlying streams and also flushes the underlying stream.</source>
          <target state="translated">Асинхронно записывает в базовый поток содержимое буфера и сохраняет базовый поток.</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.FlushAsync">
          <source>The task that represents the asynchronous <ph id="ph1">&lt;see langword="Flush" /&gt;</ph> operation.</source>
          <target state="translated">Задача, представляющая асинхронную операцию <ph id="ph1">&lt;see langword="Flush" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.FlushAsync">
          <source>This is the asynchronous version of <ph id="ph1">&lt;xref:System.Xml.XmlWriter.Flush%2A&gt;</ph>, with the same functionality.</source>
          <target state="translated">Это асинхронная версия объекта <ph id="ph1">&lt;xref:System.Xml.XmlWriter.Flush%2A&gt;</ph>, с той же функции.</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.FlushAsync">
          <source>To use this method, you must set the <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.Async%2A&gt;</ph> flag to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">Чтобы использовать этот метод, необходимо задать <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.Async%2A&gt;</ph> флаг <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.FlushAsync">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> asynchronous method was called without setting the <ph id="ph2">&lt;see cref="P:System.Xml.XmlWriterSettings.Async" /&gt;</ph> flag to <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Асинхронный метод <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> вызван без присваивания флагу <ph id="ph2">&lt;see cref="P:System.Xml.XmlWriterSettings.Async" /&gt;</ph> значения <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.FlushAsync">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</source>
          <target state="translated">В этом случае вызывается исключение <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> с сообщением "Задайте параметру XmlWriterSettings.Async значение true, если вы хотите использовать асинхронные методы".</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.LookupPrefix(System.String)">
          <source>The namespace URI whose prefix you want to find.</source>
          <target state="translated">URI пространства имен, префикс которого нужно найти.</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.LookupPrefix(System.String)">
          <source>When overridden in a derived class, returns the closest prefix defined in the current namespace scope for the namespace URI.</source>
          <target state="translated">Когда переопределено в производном классе, возвращает ближайший префикс, определенный в области видимости текущего пространства имен для URI пространства имен.</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.LookupPrefix(System.String)">
          <source>The matching prefix or <ph id="ph1">&lt;see langword="null" /&gt;</ph> if no matching namespace URI is found in the current scope.</source>
          <target state="translated">Соответствующий префикс или значение <ph id="ph1">&lt;see langword="null" /&gt;</ph>, если в текущей области отсутствует соответствующий URI пространства имен.</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.LookupPrefix(System.String)">
          <source>The following example writes out a book.</source>
          <target state="translated">Следующий пример записывает в книгу.</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.LookupPrefix(System.String)">
          <source><ph id="ph1">&lt;paramref name="ns" /&gt;</ph> is either <ph id="ph2">&lt;see langword="null" /&gt;</ph> or <ph id="ph3">&lt;see langword="String.Empty" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="ns" /&gt;</ph> имеет значение <ph id="ph2">&lt;see langword="null" /&gt;</ph> или <ph id="ph3">&lt;see langword="String.Empty" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.LookupPrefix(System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">Метод <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> вызван перед завершением предыдущей асинхронной операции.</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.LookupPrefix(System.String)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">В этом случае возникает исключение <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> с сообщением "Асинхронная операция уже выполняется".</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlWriter.Settings">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriterSettings" /&gt;</ph> object used to create this <ph id="ph2">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> instance.</source>
          <target state="translated">Получает объект <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriterSettings" /&gt;</ph>, используемый для создания данного экземпляра <ph id="ph2">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlWriter.Settings">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriterSettings" /&gt;</ph> object used to create this writer instance.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriterSettings" /&gt;</ph>, используемый для создания этого экземпляра средства записи.</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlWriter.Settings">
          <source>If this writer was not created using the <ph id="ph1">&lt;see cref="Overload:System.Xml.XmlWriter.Create" /&gt;</ph> method, this property returns <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Если это средство записи не было создано с помощью метода <ph id="ph1">&lt;see cref="Overload:System.Xml.XmlWriter.Create" /&gt;</ph>, это свойство возвращает <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlWriter.Settings">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> class is used to specify the set of features to support on the created writer instance.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> Класс используется для указания набора функциональные возможности для поддержки созданного экземпляра средства записи.</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlWriter.Settings">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> object returned by the <ph id="ph2">&lt;xref:System.Xml.XmlWriter.Settings%2A&gt;</ph> property cannot be modified.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> Объект, возвращаемый <ph id="ph2">&lt;xref:System.Xml.XmlWriter.Settings%2A&gt;</ph> не может быть изменено.</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlWriter.Settings">
          <source>Any attempt to change individual settings results in an exception being thrown.</source>
          <target state="translated">Любая попытка изменить отдельные параметры приводит к формированию исключения.</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlWriter.Settings">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">Метод <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> вызван перед завершением предыдущей асинхронной операции.</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlWriter.Settings">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">В этом случае возникает исключение <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> с сообщением "Асинхронная операция уже выполняется".</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteAttributes(System.Xml.XmlReader,System.Boolean)">
          <source>The <ph id="ph1">&lt;see langword="XmlReader" /&gt;</ph> from which to copy the attributes.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="XmlReader" /&gt;</ph>, из которого происходит копирование атрибутов.</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteAttributes(System.Xml.XmlReader,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to copy the default attributes from the <ph id="ph2">&lt;see langword="XmlReader" /&gt;</ph>; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Значение <ph id="ph1">&lt;see langword="true" /&gt;</ph>, чтобы скопировать атрибуты по умолчанию из <ph id="ph2">&lt;see langword="XmlReader" /&gt;</ph>; в противном случае — значение <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteAttributes(System.Xml.XmlReader,System.Boolean)">
          <source>When overridden in a derived class, writes out all the attributes found at the current position in the <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>.</source>
          <target state="translated">При переопределении в производном классе записывает все атрибуты, найденные в текущей позиции в объекте <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteAttributes(System.Xml.XmlReader,System.Boolean)">
          <source>If the reader is positioned on an <ph id="ph1">`element`</ph> node <ph id="ph2">`WriteAttributes`</ph> copies all the contained attributes.</source>
          <target state="translated">Если средство чтения расположено на <ph id="ph1">`element`</ph> узел <ph id="ph2">`WriteAttributes`</ph> копирует все атрибуты.</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteAttributes(System.Xml.XmlReader,System.Boolean)">
          <source>If the reader is positioned on an <ph id="ph1">`attribute`</ph> node, this method writes the current attribute, then the rest of the attributes until the element closing tag.</source>
          <target state="translated">Если средство чтения расположено на <ph id="ph1">`attribute`</ph> узел, этот метод записывает текущий атрибут, а затем остальная часть атрибуты до закрывающего тега элемента.</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteAttributes(System.Xml.XmlReader,System.Boolean)">
          <source>If the reader is positioned on an <ph id="ph1">`XmlDeclaration`</ph> node, this method writes all the attributes in the declaration.</source>
          <target state="translated">Если средство чтения расположено на <ph id="ph1">`XmlDeclaration`</ph> узел, этот метод записывает все атрибуты в объявлении.</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteAttributes(System.Xml.XmlReader,System.Boolean)">
          <source>If the reader is positioned on any other node type this method throws an <ph id="ph1">&lt;xref:System.Xml.XmlException&gt;</ph>.</source>
          <target state="translated">Если средство чтения расположено на любой другой тип узла этот метод создает <ph id="ph1">&lt;xref:System.Xml.XmlException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteAttributes(System.Xml.XmlReader,System.Boolean)">
          <source>If this method is called using <ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader&gt;</ph>, to ensure well-formed XML any content (which has been expanded from the entities) that could result in an invalid document is replaced when written.</source>
          <target state="translated">Если этот метод вызывается с помощью <ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader&gt;</ph>, то для обеспечения правильности XML-кода любое содержимое (развернутое из сущностей), может привести к порче документа замещается при записи.</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteAttributes(System.Xml.XmlReader,System.Boolean)">
          <source>For example, if an attribute includes an <ph id="ph1">`&amp;gt;`</ph> entity that has been expanded, to ensure a well-formed document the expanded &gt; is replaced when written out with <ph id="ph2">`&amp;gt;`</ph>.</source>
          <target state="translated">Например, если атрибут содержит <ph id="ph1">`&amp;gt;`</ph> сущность, которая была расширена, чтобы гарантировать правильность документа развернутом &gt; замещается при считывании на <ph id="ph2">`&amp;gt;`</ph>.</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteAttributes(System.Xml.XmlReader,System.Boolean)">
          <source>For the asynchronous version of this method, see <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteAttributesAsync%2A&gt;</ph>.</source>
          <target state="translated">Асинхронная версия данного метода, в разделе <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteAttributesAsync%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteAttributes(System.Xml.XmlReader,System.Boolean)">
          <source>The following example copies all the elements to the output, changes the tag names to upper case, and copies all the attributes unchanged.</source>
          <target state="translated">Следующий пример копирует все элементы в выходных данных, изменяет имена тегов в верхний регистр и копирует все неизмененные атрибуты.</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteAttributes(System.Xml.XmlReader,System.Boolean)">
          <source>The example uses the file, <ph id="ph1">`test1.xml`</ph>, as input.</source>
          <target state="translated">В примере используется файл <ph id="ph1">`test1.xml`</ph>, в качестве входных данных.</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteAttributes(System.Xml.XmlReader,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="reader" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Свойство <ph id="ph1">&lt;paramref name="reader" /&gt;</ph> имеет значение <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteAttributes(System.Xml.XmlReader,System.Boolean)">
          <source>The reader is not positioned on an <ph id="ph1">&lt;see langword="element" /&gt;</ph>, <ph id="ph2">&lt;see langword="attribute" /&gt;</ph> or <ph id="ph3">&lt;see langword="XmlDeclaration" /&gt;</ph> node.</source>
          <target state="translated">Средство чтения не расположено на узле <ph id="ph1">&lt;see langword="element" /&gt;</ph>, <ph id="ph2">&lt;see langword="attribute" /&gt;</ph> или <ph id="ph3">&lt;see langword="XmlDeclaration" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteAttributes(System.Xml.XmlReader,System.Boolean)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">Метод <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> вызван перед завершением предыдущей асинхронной операции.</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteAttributes(System.Xml.XmlReader,System.Boolean)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">В этом случае возникает исключение <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> с сообщением "Асинхронная операция уже выполняется".</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteAttributesAsync(System.Xml.XmlReader,System.Boolean)">
          <source>The <ph id="ph1">&lt;see langword="XmlReader" /&gt;</ph> from which to copy the attributes.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="XmlReader" /&gt;</ph>, из которого происходит копирование атрибутов.</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteAttributesAsync(System.Xml.XmlReader,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to copy the default attributes from the <ph id="ph2">&lt;see langword="XmlReader" /&gt;</ph>; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Значение <ph id="ph1">&lt;see langword="true" /&gt;</ph>, чтобы скопировать атрибуты по умолчанию из <ph id="ph2">&lt;see langword="XmlReader" /&gt;</ph>; в противном случае — значение <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteAttributesAsync(System.Xml.XmlReader,System.Boolean)">
          <source>Asynchronously writes out all the attributes found at the current position in the <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>.</source>
          <target state="translated">Асинхронно записывает все атрибуты, найденные в текущей позиции в объекте <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteAttributesAsync(System.Xml.XmlReader,System.Boolean)">
          <source>The task that represents the asynchronous <ph id="ph1">&lt;see langword="WriteAttributes" /&gt;</ph> operation.</source>
          <target state="translated">Задача, представляющая асинхронную операцию <ph id="ph1">&lt;see langword="WriteAttributes" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteAttributesAsync(System.Xml.XmlReader,System.Boolean)">
          <source>This is the asynchronous version of <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteAttributes%2A&gt;</ph>, with the same functionality.</source>
          <target state="translated">Это асинхронная версия объекта <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteAttributes%2A&gt;</ph>, с той же функции.</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteAttributesAsync(System.Xml.XmlReader,System.Boolean)">
          <source>To use this method, you must set the <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.Async%2A&gt;</ph> flag to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">Чтобы использовать этот метод, необходимо задать <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.Async%2A&gt;</ph> флаг <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteAttributesAsync(System.Xml.XmlReader,System.Boolean)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> asynchronous method was called without setting the <ph id="ph2">&lt;see cref="P:System.Xml.XmlWriterSettings.Async" /&gt;</ph> flag to <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Асинхронный метод <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> вызван без присваивания флагу <ph id="ph2">&lt;see cref="P:System.Xml.XmlWriterSettings.Async" /&gt;</ph> значения <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteAttributesAsync(System.Xml.XmlReader,System.Boolean)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</source>
          <target state="translated">В этом случае вызывается исключение <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> с сообщением "Задайте параметру XmlWriterSettings.Async значение true, если вы хотите использовать асинхронные методы".</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlWriter">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">Метод <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> вызван перед завершением предыдущей асинхронной операции.</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlWriter">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">В этом случае возникает исключение <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> с сообщением "Асинхронная операция уже выполняется".</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlWriter">
          <source>When overridden in a derived class, writes an attribute with the specified value.</source>
          <target state="translated">Когда переопределено в производном классе, записывает атрибут с указанным значением.</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>For the asynchronous version of this method, see <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteElementStringAsync%2A&gt;</ph>.</source>
          <target state="translated">Асинхронная версия данного метода, в разделе <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteElementStringAsync%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String)">
          <source>The local name of the attribute.</source>
          <target state="translated">Локальное имя атрибута.</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String)">
          <source>The value of the attribute.</source>
          <target state="translated">Значение атрибута.</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String)">
          <source>When overridden in a derived class, writes out the attribute with the specified local name and value.</source>
          <target state="translated">Когда переопределено в производном классе, записывает атрибут с указанным локальным именем и значением.</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String)">
          <source><ph id="ph1">`WriteAttributeString`</ph> does the following:</source>
          <target state="translated">Метод <ph id="ph1">`WriteAttributeString`</ph> выполняет следующие действия.</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String)">
          <source>If the attribute value includes double or single quotes, they are replaced with <ph id="ph1">`&amp;quot;`</ph> and <ph id="ph2">`&amp;apos;`</ph> respectively.</source>
          <target state="translated">Если значение атрибута содержит двойные или одинарные кавычки, они заменяются <ph id="ph1">`&amp;quot;`</ph> и <ph id="ph2">`&amp;apos;`</ph> соответственно.</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String)">
          <source>If writing an <ph id="ph1">`xml:space`</ph> attribute, the writer verifies the attribute value is valid.</source>
          <target state="translated">Если запись <ph id="ph1">`xml:space`</ph> атрибута, средство записи проверяет значение атрибута является допустимым.</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String)">
          <source>(Valid values are <ph id="ph1">`preserve`</ph> or <ph id="ph2">`default`</ph>.)</source>
          <target state="translated">(Допустимые значения: <ph id="ph1">`preserve`</ph> или <ph id="ph2">`default`</ph>.)</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String)">
          <source>If writing an <ph id="ph1">`xml:lang`</ph> attribute, the writer does not verify that the attribute value is valid according to the W3C XML 1.0 recommendation.</source>
          <target state="translated">Если запись <ph id="ph1">`xml:lang`</ph> атрибута, средство записи не проверяет, что значение атрибута является допустимым в соответствии с рекомендацией W3C XML 1.0.</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String)">
          <source>For the asynchronous version of this method, see <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteAttributeStringAsync%2A&gt;</ph>.</source>
          <target state="translated">Асинхронная версия данного метода, в разделе <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteAttributeStringAsync%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String)">
          <source>The following example writes out a book.</source>
          <target state="translated">Следующий пример записывает в книгу.</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">Метод <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> вызван перед завершением предыдущей асинхронной операции.</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">В этом случае возникает исключение <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> с сообщением "Асинхронная операция уже выполняется".</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String)">
          <source>The <ph id="ph1">&lt;see langword="xml:space" /&gt;</ph> or <ph id="ph2">&lt;see langword="xml:lang" /&gt;</ph> attribute value is invalid.</source>
          <target state="translated">Недопустимое значение атрибута <ph id="ph1">&lt;see langword="xml:space" /&gt;</ph> или <ph id="ph2">&lt;see langword="xml:lang" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String,System.String)">
          <source>The local name of the attribute.</source>
          <target state="translated">Локальное имя атрибута.</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String,System.String)">
          <source>The namespace URI to associate with the attribute.</source>
          <target state="translated">URI пространства имен, который связывается с атрибутом.</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String,System.String)">
          <source>The value of the attribute.</source>
          <target state="translated">Значение атрибута.</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String,System.String)">
          <source>When overridden in a derived class, writes an attribute with the specified local name, namespace URI, and value.</source>
          <target state="translated">Когда переопределено в производном классе, записывает атрибут с указанным локальным именем, URI пространства имен и значением.</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String,System.String)">
          <source>This method writes out the attribute with a user defined namespace prefix and associates it with the given namespace.</source>
          <target state="translated">Этот метод записывает атрибут с префиксом пространства имен пользователя и связывает его с заданным пространством имен.</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String,System.String)">
          <source>If <ph id="ph1">`localName`</ph> is "xmlns" then this method also treats this as a namespace declaration.</source>
          <target state="translated">Если <ph id="ph1">`localName`</ph> является «xmlns», то этот метод обрабатывает его как объявление пространства имен.</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String,System.String)">
          <source>In this case, the <ph id="ph1">`ns`</ph> argument can be <ph id="ph2">`null`</ph>.</source>
          <target state="translated">В этом случае <ph id="ph1">`ns`</ph> аргумент может быть <ph id="ph2">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String,System.String)">
          <source><ph id="ph1">`WriteAttributeString`</ph> does the following:</source>
          <target state="translated">Метод <ph id="ph1">`WriteAttributeString`</ph> выполняет следующие действия.</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String,System.String)">
          <source>If the attribute value includes double or single quotes, they are replaced with <ph id="ph1">`&amp;quot;`</ph> and <ph id="ph2">`&amp;apos;`</ph> respectively.</source>
          <target state="translated">Если значение атрибута содержит двойные или одинарные кавычки, они заменяются <ph id="ph1">`&amp;quot;`</ph> и <ph id="ph2">`&amp;apos;`</ph> соответственно.</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String,System.String)">
          <source>If writing an <ph id="ph1">`xml:space`</ph> attribute, the writer verifies the attribute value is valid.</source>
          <target state="translated">Если запись <ph id="ph1">`xml:space`</ph> атрибута, средство записи проверяет значение атрибута является допустимым.</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String,System.String)">
          <source>(Valid values are <ph id="ph1">`preserve`</ph> or <ph id="ph2">`default`</ph>.)</source>
          <target state="translated">(Допустимые значения: <ph id="ph1">`preserve`</ph> или <ph id="ph2">`default`</ph>.)</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String,System.String)">
          <source>If writing an <ph id="ph1">`xml:lang`</ph> attribute, the writer does not verify that the attribute value is valid according to the W3C XML 1.0 recommendation.</source>
          <target state="translated">Если запись <ph id="ph1">`xml:lang`</ph> атрибута, средство записи не проверяет, что значение атрибута является допустимым в соответствии с рекомендацией W3C XML 1.0.</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String,System.String)">
          <source>For the asynchronous version of this method, see <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteAttributeStringAsync%2A&gt;</ph>.</source>
          <target state="translated">Асинхронная версия данного метода, в разделе <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteAttributeStringAsync%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String,System.String)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteAttributeString%2A&gt;</ph> method to write a namespace declaration.</source>
          <target state="translated">В следующем примере используется <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteAttributeString%2A&gt;</ph> метод для записи объявление пространства имен.</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String,System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">Метод <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> вызван перед завершением предыдущей асинхронной операции.</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String,System.String)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">В этом случае возникает исключение <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> с сообщением "Асинхронная операция уже выполняется".</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String,System.String)">
          <source>The <ph id="ph1">&lt;see langword="xml:space" /&gt;</ph> or <ph id="ph2">&lt;see langword="xml:lang" /&gt;</ph> attribute value is invalid.</source>
          <target state="translated">Недопустимое значение атрибута <ph id="ph1">&lt;see langword="xml:space" /&gt;</ph> или <ph id="ph2">&lt;see langword="xml:lang" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String,System.String,System.String)">
          <source>The namespace prefix of the attribute.</source>
          <target state="translated">Префикс пространства имен атрибута.</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String,System.String,System.String)">
          <source>The local name of the attribute.</source>
          <target state="translated">Локальное имя атрибута.</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String,System.String,System.String)">
          <source>The namespace URI of the attribute.</source>
          <target state="translated">Универсальный код ресурса (URI) пространства имен атрибута.</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String,System.String,System.String)">
          <source>The value of the attribute.</source>
          <target state="translated">Значение атрибута.</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String,System.String,System.String)">
          <source>When overridden in a derived class, writes out the attribute with the specified prefix, local name, namespace URI, and value.</source>
          <target state="translated">Когда переопределено в производном классе, записывает атрибут с указанным префиксом, локальным именем, URI пространства имен и значением.</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String,System.String,System.String)">
          <source>This method writes out the attribute with a user defined namespace prefix and associates it with the given namespace.</source>
          <target state="translated">Этот метод записывает атрибут с префиксом пространства имен пользователя и связывает его с заданным пространством имен.</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String,System.String,System.String)">
          <source>If the prefix is "xmlns" then this method also treats this as a namespace declaration and associates the declared prefix with the namespace URI provided in the given attribute value.</source>
          <target state="translated">Если используется префикс «xmlns» этот метод также обрабатывает его как объявление пространства имен и связывает объявленный префикс с пространством имен URI, предоставленные в заданном значении атрибута.</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String,System.String,System.String)">
          <source>In this case the <ph id="ph1">`ns`</ph> argument can be <ph id="ph2">`null`</ph>.</source>
          <target state="translated">В этом случае <ph id="ph1">`ns`</ph> аргумент может быть <ph id="ph2">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String,System.String,System.String)">
          <source><ph id="ph1">`WriteAttributeString`</ph> does the following:</source>
          <target state="translated">Метод <ph id="ph1">`WriteAttributeString`</ph> выполняет следующие действия.</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String,System.String,System.String)">
          <source>If the attribute value includes double or single quotes, they are replaced with <ph id="ph1">`&amp;quot;`</ph> and <ph id="ph2">`&amp;apos;`</ph> respectively.</source>
          <target state="translated">Если значение атрибута содержит двойные или одинарные кавычки, они заменяются <ph id="ph1">`&amp;quot;`</ph> и <ph id="ph2">`&amp;apos;`</ph> соответственно.</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String,System.String,System.String)">
          <source>If writing an <ph id="ph1">`xml:space`</ph> attribute, the writer verifies the attribute value is valid.</source>
          <target state="translated">Если запись <ph id="ph1">`xml:space`</ph> атрибута, средство записи проверяет значение атрибута является допустимым.</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String,System.String,System.String)">
          <source>(Valid values are <ph id="ph1">`preserve`</ph> or <ph id="ph2">`default`</ph>.)</source>
          <target state="translated">(Допустимые значения: <ph id="ph1">`preserve`</ph> или <ph id="ph2">`default`</ph>.)</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String,System.String,System.String)">
          <source>If writing an <ph id="ph1">`xml:lang`</ph> attribute, the writer does not verify that the attribute value is valid according to the W3C XML 1.0 recommendation.</source>
          <target state="translated">Если запись <ph id="ph1">`xml:lang`</ph> атрибута, средство записи не проверяет, что значение атрибута является допустимым в соответствии с рекомендацией W3C XML 1.0.</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String,System.String,System.String)">
          <source>For the asynchronous version of this method, see <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteAttributeStringAsync%2A&gt;</ph>.</source>
          <target state="translated">Асинхронная версия данного метода, в разделе <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteAttributeStringAsync%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String,System.String,System.String)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteAttributeString%2A&gt;</ph> method to write a namespace declaration.</source>
          <target state="translated">В следующем примере используется <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteAttributeString%2A&gt;</ph> метод для записи объявление пространства имен.</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String,System.String,System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">Метод <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> вызван перед завершением предыдущей асинхронной операции.</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String,System.String,System.String)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">В этом случае возникает исключение <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> с сообщением "Асинхронная операция уже выполняется".</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String,System.String,System.String)">
          <source>The <ph id="ph1">&lt;see langword="xml:space" /&gt;</ph> or <ph id="ph2">&lt;see langword="xml:lang" /&gt;</ph> attribute value is invalid.</source>
          <target state="translated">Недопустимое значение атрибута <ph id="ph1">&lt;see langword="xml:space" /&gt;</ph> или <ph id="ph2">&lt;see langword="xml:lang" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String,System.String,System.String)">
          <source>The <ph id="ph1">&lt;paramref name="localName" /&gt;</ph> or <ph id="ph2">&lt;paramref name="ns" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Значение параметра <ph id="ph1">&lt;paramref name="localName" /&gt;</ph> или <ph id="ph2">&lt;paramref name="ns" /&gt;</ph> — <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteAttributeStringAsync(System.String,System.String,System.String,System.String)">
          <source>The namespace prefix of the attribute.</source>
          <target state="translated">Префикс пространства имен атрибута.</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteAttributeStringAsync(System.String,System.String,System.String,System.String)">
          <source>The local name of the attribute.</source>
          <target state="translated">Локальное имя атрибута.</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteAttributeStringAsync(System.String,System.String,System.String,System.String)">
          <source>The namespace URI of the attribute.</source>
          <target state="translated">Универсальный код ресурса (URI) пространства имен атрибута.</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteAttributeStringAsync(System.String,System.String,System.String,System.String)">
          <source>The value of the attribute.</source>
          <target state="translated">Значение атрибута.</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteAttributeStringAsync(System.String,System.String,System.String,System.String)">
          <source>Asynchronously writes out the attribute with the specified prefix, local name, namespace URI, and value.</source>
          <target state="translated">Асинхронно записывает атрибут с заданным префиксом, локальным именем, универсальным кодом ресурса (URI) пространства имен и значением.</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteAttributeStringAsync(System.String,System.String,System.String,System.String)">
          <source>The task that represents the asynchronous <ph id="ph1">&lt;see langword="WriteAttributeString" /&gt;</ph> operation.</source>
          <target state="translated">Задача, представляющая асинхронную операцию <ph id="ph1">&lt;see langword="WriteAttributeString" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteAttributeStringAsync(System.String,System.String,System.String,System.String)">
          <source>This is the asynchronous version of <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteAttributeString%2A&gt;</ph>, with the same functionality.</source>
          <target state="translated">Это асинхронная версия объекта <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteAttributeString%2A&gt;</ph>, с той же функции.</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteAttributeStringAsync(System.String,System.String,System.String,System.String)">
          <source>To use this method, you must set the <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.Async%2A&gt;</ph> flag to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">Чтобы использовать этот метод, необходимо задать <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.Async%2A&gt;</ph> флаг <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteAttributeStringAsync(System.String,System.String,System.String,System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> asynchronous method was called without setting the <ph id="ph2">&lt;see cref="P:System.Xml.XmlWriterSettings.Async" /&gt;</ph> flag to <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Асинхронный метод <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> вызван без присваивания флагу <ph id="ph2">&lt;see cref="P:System.Xml.XmlWriterSettings.Async" /&gt;</ph> значения <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteAttributeStringAsync(System.String,System.String,System.String,System.String)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</source>
          <target state="translated">В этом случае вызывается исключение <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> с сообщением "Задайте параметру XmlWriterSettings.Async значение true, если вы хотите использовать асинхронные методы".</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteBase64(System.Byte[],System.Int32,System.Int32)">
          <source>Byte array to encode.</source>
          <target state="translated">Кодируемый массив байтов.</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteBase64(System.Byte[],System.Int32,System.Int32)">
          <source>The position in the buffer indicating the start of the bytes to write.</source>
          <target state="translated">Позиция в буфере, с которой начинается запись байтов.</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteBase64(System.Byte[],System.Int32,System.Int32)">
          <source>The number of bytes to write.</source>
          <target state="translated">Количество записываемых байтов.</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteBase64(System.Byte[],System.Int32,System.Int32)">
          <source>When overridden in a derived class, encodes the specified binary bytes as Base64 and writes out the resulting text.</source>
          <target state="translated">Когда переопределено в производном классе, преобразует указанный набор двоичных байтов в кодировку Base64 и записывает получившийся текст.</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteBase64(System.Byte[],System.Int32,System.Int32)">
          <source>For example, the byte buffer may contain the binary contents of a GIF image.</source>
          <target state="translated">Например буфер байтов может содержать двоичное содержимое изображения GIF.</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteBase64(System.Byte[],System.Int32,System.Int32)">
          <source>This clearly would not be valid XML.</source>
          <target state="translated">Это является допустимым XML.</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteBase64(System.Byte[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">`Base64`</ph> encoding is designed to represent arbitrary byte sequences in a text form comprised of the 65 US-ASCII characters ([A-Za-z0-9+/=]) where each character encodes 6 bits of the binary data.</source>
          <target state="translated"><ph id="ph1">`Base64`</ph> Кодировка предназначен для произвольные последовательности байтов в текстовой форме, состоящей из 65 символов US-ASCII ([A-Za-z0-9 +/ =]) где каждый знак кодирует 6 бит двоичных данных.</target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteBase64(System.Byte[],System.Int32,System.Int32)">
          <source>For more information, see Requests for Comments (RFC) 1521 located on the <bpt id="p1">[</bpt>Request for Comments Web site<ept id="p1">](https://www.rfc-editor.org)</ept>.</source>
          <target state="translated">Дополнительные сведения см. в разделе запросов на комментарии (RFC) 1521, расположенных на <bpt id="p1">[</bpt>запроса веб-сайте<ept id="p1">](https://www.rfc-editor.org)</ept>.</target>       </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteBase64(System.Byte[],System.Int32,System.Int32)">
          <source>For the asynchronous version of this method, see <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteBase64Async%2A&gt;</ph>.</source>
          <target state="translated">Асинхронная версия данного метода, в разделе <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteBase64Async%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteBase64(System.Byte[],System.Int32,System.Int32)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteBase64%2A&gt;</ph> method to write <ph id="ph2">`Base64`</ph> data.</source>
          <target state="translated">В следующем примере используется <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteBase64%2A&gt;</ph> метод для записи <ph id="ph2">`Base64`</ph> данных.</target>       </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteBase64(System.Byte[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">`Base64`</ph> data is embedded within an <ph id="ph2">`&lt;image&gt;`</ph> element.</source>
          <target state="translated"><ph id="ph1">`Base64`</ph> Данные внедрены в <ph id="ph2">`&lt;image&gt;`</ph> элемент.</target>       </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteBase64(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Свойство <ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> имеет значение <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteBase64(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> or <ph id="ph2">&lt;paramref name="count" /&gt;</ph> is less than zero.</source>
          <target state="translated">Значение параметра <ph id="ph1">&lt;paramref name="index" /&gt;</ph> или <ph id="ph2">&lt;paramref name="count" /&gt;</ph> меньше нуля.</target>       </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteBase64(System.Byte[],System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">- или -</target>       </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteBase64(System.Byte[],System.Int32,System.Int32)">
          <source>The buffer length minus <ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than <ph id="ph2">&lt;paramref name="count" /&gt;</ph>.</source>
          <target state="translated">Длина буфера минус <ph id="ph1">&lt;paramref name="index" /&gt;</ph> меньше <ph id="ph2">&lt;paramref name="count" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteBase64(System.Byte[],System.Int32,System.Int32)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">Метод <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> вызван перед завершением предыдущей асинхронной операции.</target>       </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteBase64(System.Byte[],System.Int32,System.Int32)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">В этом случае возникает исключение <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> с сообщением "Асинхронная операция уже выполняется".</target>       </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteBase64Async(System.Byte[],System.Int32,System.Int32)">
          <source>Byte array to encode.</source>
          <target state="translated">Кодируемый массив байтов.</target>       </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteBase64Async(System.Byte[],System.Int32,System.Int32)">
          <source>The position in the buffer indicating the start of the bytes to write.</source>
          <target state="translated">Позиция в буфере, с которой начинается запись байтов.</target>       </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteBase64Async(System.Byte[],System.Int32,System.Int32)">
          <source>The number of bytes to write.</source>
          <target state="translated">Количество записываемых байтов.</target>       </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteBase64Async(System.Byte[],System.Int32,System.Int32)">
          <source>Asynchronously encodes the specified binary bytes as Base64 and writes out the resulting text.</source>
          <target state="translated">Асинхронно преобразует указанный набор двоичных байтов в кодировку Base64 и записывает получившийся текст.</target>       </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteBase64Async(System.Byte[],System.Int32,System.Int32)">
          <source>The task that represents the asynchronous <ph id="ph1">&lt;see langword="WriteBase64" /&gt;</ph> operation.</source>
          <target state="translated">Задача, представляющая асинхронную операцию <ph id="ph1">&lt;see langword="WriteBase64" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteBase64Async(System.Byte[],System.Int32,System.Int32)">
          <source>This is the asynchronous version of <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteBase64%2A&gt;</ph>, with the same functionality.</source>
          <target state="translated">Это асинхронная версия объекта <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteBase64%2A&gt;</ph>, с той же функции.</target>       </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteBase64Async(System.Byte[],System.Int32,System.Int32)">
          <source>To use this method, you must set the <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.Async%2A&gt;</ph> flag to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">Чтобы использовать этот метод, необходимо задать <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.Async%2A&gt;</ph> флаг <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteBase64Async(System.Byte[],System.Int32,System.Int32)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> asynchronous method was called without setting the <ph id="ph2">&lt;see cref="P:System.Xml.XmlWriterSettings.Async" /&gt;</ph> flag to <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Асинхронный метод <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> вызван без присваивания флагу <ph id="ph2">&lt;see cref="P:System.Xml.XmlWriterSettings.Async" /&gt;</ph> значения <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteBase64Async(System.Byte[],System.Int32,System.Int32)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</source>
          <target state="translated">В этом случае вызывается исключение <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> с сообщением "Задайте параметру XmlWriterSettings.Async значение true, если вы хотите использовать асинхронные методы".</target>       </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>Byte array to encode.</source>
          <target state="translated">Кодируемый массив байтов.</target>       </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>The position in the buffer indicating the start of the bytes to write.</source>
          <target state="translated">Позиция в буфере, с которой начинается запись байтов.</target>       </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>The number of bytes to write.</source>
          <target state="translated">Количество записываемых байтов.</target>       </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>When overridden in a derived class, encodes the specified binary bytes as <ph id="ph1">&lt;see langword="BinHex" /&gt;</ph> and writes out the resulting text.</source>
          <target state="translated">При переопределении в производном классе преобразует указанный набор двоичных байтов как <ph id="ph1">&lt;see langword="BinHex" /&gt;</ph> и выводит получившийся текст.</target>       </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>For the asynchronous version of this method, see <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteBinHexAsync%2A&gt;</ph>.</source>
          <target state="translated">Асинхронная версия данного метода, в разделе <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteBinHexAsync%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteBinHex%2A&gt;</ph> method to write <ph id="ph2">`BinHex`</ph> data.</source>
          <target state="translated">В следующем примере используется <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteBinHex%2A&gt;</ph> метод для записи <ph id="ph2">`BinHex`</ph> данных.</target>       </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">`BinHex`</ph> data is embedded within an <ph id="ph2">`&lt;image&gt;`</ph> element.</source>
          <target state="translated"><ph id="ph1">`BinHex`</ph> Данные внедрены в <ph id="ph2">`&lt;image&gt;`</ph> элемент.</target>       </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteBinHex(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Свойство <ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> имеет значение <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">Метод <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> вызван перед завершением предыдущей асинхронной операции.</target>       </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">В этом случае возникает исключение <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> с сообщением "Асинхронная операция уже выполняется".</target>       </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteBinHex(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> or <ph id="ph2">&lt;paramref name="count" /&gt;</ph> is less than zero.</source>
          <target state="translated">Значение параметра <ph id="ph1">&lt;paramref name="index" /&gt;</ph> или <ph id="ph2">&lt;paramref name="count" /&gt;</ph> меньше нуля.</target>       </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">- или -</target>       </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>The buffer length minus <ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than <ph id="ph2">&lt;paramref name="count" /&gt;</ph>.</source>
          <target state="translated">Длина буфера минус <ph id="ph1">&lt;paramref name="index" /&gt;</ph> меньше <ph id="ph2">&lt;paramref name="count" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteBinHexAsync(System.Byte[],System.Int32,System.Int32)">
          <source>Byte array to encode.</source>
          <target state="translated">Кодируемый массив байтов.</target>       </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteBinHexAsync(System.Byte[],System.Int32,System.Int32)">
          <source>The position in the buffer indicating the start of the bytes to write.</source>
          <target state="translated">Позиция в буфере, с которой начинается запись байтов.</target>       </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteBinHexAsync(System.Byte[],System.Int32,System.Int32)">
          <source>The number of bytes to write.</source>
          <target state="translated">Количество записываемых байтов.</target>       </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteBinHexAsync(System.Byte[],System.Int32,System.Int32)">
          <source>Asynchronously encodes the specified binary bytes as <ph id="ph1">&lt;see langword="BinHex" /&gt;</ph> and writes out the resulting text.</source>
          <target state="translated">Асинхронно кодирует указанные двоичные байты как <ph id="ph1">&lt;see langword="BinHex" /&gt;</ph> и выводит получившийся текст.</target>       </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteBinHexAsync(System.Byte[],System.Int32,System.Int32)">
          <source>The task that represents the asynchronous <ph id="ph1">&lt;see langword="WriteBinHex" /&gt;</ph> operation.</source>
          <target state="translated">Задача, представляющая асинхронную операцию <ph id="ph1">&lt;see langword="WriteBinHex" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteBinHexAsync(System.Byte[],System.Int32,System.Int32)">
          <source>This is the asynchronous version of <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteBinHex%2A&gt;</ph>, with the same functionality.</source>
          <target state="translated">Это асинхронная версия объекта <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteBinHex%2A&gt;</ph>, с той же функции.</target>       </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteBinHexAsync(System.Byte[],System.Int32,System.Int32)">
          <source>To use this method, you must set the <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.Async%2A&gt;</ph> flag to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">Чтобы использовать этот метод, необходимо задать <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.Async%2A&gt;</ph> флаг <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteBinHexAsync(System.Byte[],System.Int32,System.Int32)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> asynchronous method was called without setting the <ph id="ph2">&lt;see cref="P:System.Xml.XmlWriterSettings.Async" /&gt;</ph> flag to <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Асинхронный метод <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> вызван без присваивания флагу <ph id="ph2">&lt;see cref="P:System.Xml.XmlWriterSettings.Async" /&gt;</ph> значения <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteBinHexAsync(System.Byte[],System.Int32,System.Int32)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</source>
          <target state="translated">В этом случае вызывается исключение <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> с сообщением "Задайте параметру XmlWriterSettings.Async значение true, если вы хотите использовать асинхронные методы".</target>       </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteCData(System.String)">
          <source>The text to place inside the CDATA block.</source>
          <target state="translated">Текст, записываемый в блок CDATA.</target>       </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteCData(System.String)">
          <source>When overridden in a derived class, writes out a <ph id="ph1">&amp;lt;</ph>![CDATA[...]]<ph id="ph2">&amp;gt;</ph> block containing the specified text.</source>
          <target state="translated">Когда переопределено в производном классе, записывает блок <ph id="ph1">&amp;lt;</ph>![CDATA[...]]<ph id="ph2">&amp;gt;</ph>, содержащий заданный текст.</target>       </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteCData(System.String)">
          <source>If <ph id="ph1">`text`</ph> is either <ph id="ph2">`null`</ph> or <ph id="ph3">`String.Empty`</ph>, this method writes an empty CDATA block, for example <ph id="ph4">\&lt;</ph>![CDATA[]]]&gt;&lt;![CDATA[]&gt;.</source>
          <target state="translated">Если <ph id="ph1">`text`</ph> либо <ph id="ph2">`null`</ph> или <ph id="ph3">`String.Empty`</ph>, этот метод записывает пустой блок CDATA, например <ph id="ph4">\&lt;</ph>! [CDATA []]] &gt;&lt;! [CDATA [] &gt;.</target>       </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteCData(System.String)">
          <source>For the asynchronous version of this method, see <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteCDataAsync%2A&gt;</ph>.</source>
          <target state="translated">Асинхронная версия данного метода, в разделе <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteCDataAsync%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteCData(System.String)">
          <source>The following example writes an XML file representing a book.</source>
          <target state="translated">Следующий пример записывает XML-файл, представляющий книгу.</target>       </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteCData(System.String)">
          <source>The text would result in a non-well formed XML document.</source>
          <target state="translated">Текст приведет к неправильному формированию документа XML.</target>       </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteCData(System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">Метод <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> вызван перед завершением предыдущей асинхронной операции.</target>       </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteCData(System.String)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">В этом случае возникает исключение <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> с сообщением "Асинхронная операция уже выполняется".</target>       </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteCDataAsync(System.String)">
          <source>The text to place inside the CDATA block.</source>
          <target state="translated">Текст, записываемый в блок CDATA.</target>       </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteCDataAsync(System.String)">
          <source>Asynchronously writes out a <ph id="ph1">&amp;lt;</ph>![CDATA[...]]<ph id="ph2">&amp;gt;</ph> block containing the specified text.</source>
          <target state="translated">Асинхронно записывает блок <ph id="ph1">&amp;lt;</ph>![CDATA[...]]<ph id="ph2">&amp;gt;</ph>, содержащий заданный текст.</target>       </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteCDataAsync(System.String)">
          <source>The task that represents the asynchronous <ph id="ph1">&lt;see langword="WriteCData" /&gt;</ph> operation.</source>
          <target state="translated">Задача, представляющая асинхронную операцию <ph id="ph1">&lt;see langword="WriteCData" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteCDataAsync(System.String)">
          <source>This is the asynchronous version of <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteCData%2A&gt;</ph>, with the same functionality.</source>
          <target state="translated">Это асинхронная версия объекта <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteCData%2A&gt;</ph>, с той же функции.</target>       </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteCDataAsync(System.String)">
          <source>To use this method, you must set the <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.Async%2A&gt;</ph> flag to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">Чтобы использовать этот метод, необходимо задать <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.Async%2A&gt;</ph> флаг <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteCDataAsync(System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> asynchronous method was called without setting the <ph id="ph2">&lt;see cref="P:System.Xml.XmlWriterSettings.Async" /&gt;</ph> flag to <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Асинхронный метод <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> вызван без присваивания флагу <ph id="ph2">&lt;see cref="P:System.Xml.XmlWriterSettings.Async" /&gt;</ph> значения <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteCDataAsync(System.String)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</source>
          <target state="translated">В этом случае вызывается исключение <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> с сообщением "Задайте параметру XmlWriterSettings.Async значение true, если вы хотите использовать асинхронные методы".</target>       </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteCharEntity(System.Char)">
          <source>The Unicode character for which to generate a character entity.</source>
          <target state="translated">Знак Юникода, для которого создается сущность знака.</target>       </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteCharEntity(System.Char)">
          <source>When overridden in a derived class, forces the generation of a character entity for the specified Unicode character value.</source>
          <target state="translated">Когда переопределено в производном классе, вызывает создание сущности знака для указанного значения знака Юникода.</target>       </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteCharEntity(System.Char)">
          <source>This method writes the Unicode character in hexadecimal character entity reference format.</source>
          <target state="translated">Этот метод записывает символ Юникода в формат ссылки на сущности шестнадцатеричных цифр.</target>       </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteCharEntity(System.Char)">
          <source>For the asynchronous version of this method, see <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteCharEntityAsync%2A&gt;</ph>.</source>
          <target state="translated">Асинхронная версия данного метода, в разделе <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteCharEntityAsync%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteCharEntity(System.Char)">
          <source>See <ph id="ph1">&lt;xref:System.Xml.XmlTextWriter.WriteCharEntity%2A?displayProperty=nameWithType&gt;</ph> for an example using this method.</source>
          <target state="translated">В разделе <ph id="ph1">&lt;xref:System.Xml.XmlTextWriter.WriteCharEntity%2A?displayProperty=nameWithType&gt;</ph> пример использования этого метода.</target>       </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteCharEntity(System.Char)">
          <source>The character is in the surrogate pair character range, <ph id="ph1">&lt;see langword="0xd800" /&gt;</ph><ph id="ph2"> - </ph><ph id="ph3">&lt;see langword="0xdfff" /&gt;</ph>.</source>
          <target state="translated">Символ находится в диапазоне символов суррогатной пары <ph id="ph1">&lt;see langword="0xd800" /&gt;</ph><ph id="ph2"> - </ph><ph id="ph3">&lt;see langword="0xdfff" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteCharEntity(System.Char)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">Метод <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> вызван перед завершением предыдущей асинхронной операции.</target>       </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteCharEntity(System.Char)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">В этом случае возникает исключение <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> с сообщением "Асинхронная операция уже выполняется".</target>       </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteCharEntityAsync(System.Char)">
          <source>The Unicode character for which to generate a character entity.</source>
          <target state="translated">Знак Юникода, для которого создается сущность знака.</target>       </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteCharEntityAsync(System.Char)">
          <source>Asynchronously forces the generation of a character entity for the specified Unicode character value.</source>
          <target state="translated">Асинхронно инициирует создание сущности знака для указанного значения знака Юникода.</target>       </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteCharEntityAsync(System.Char)">
          <source>The task that represents the asynchronous <ph id="ph1">&lt;see langword="WriteCharEntity" /&gt;</ph> operation.</source>
          <target state="translated">Задача, представляющая асинхронную операцию <ph id="ph1">&lt;see langword="WriteCharEntity" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="572" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteCharEntityAsync(System.Char)">
          <source>This is the asynchronous version of <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteCharEntity%2A&gt;</ph>, with the same functionality.</source>
          <target state="translated">Это асинхронная версия объекта <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteCharEntity%2A&gt;</ph>, с той же функции.</target>       </trans-unit>
        <trans-unit id="573" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteCharEntityAsync(System.Char)">
          <source>To use this method, you must set the <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.Async%2A&gt;</ph> flag to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">Чтобы использовать этот метод, необходимо задать <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.Async%2A&gt;</ph> флаг <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="574" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteCharEntityAsync(System.Char)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> asynchronous method was called without setting the <ph id="ph2">&lt;see cref="P:System.Xml.XmlWriterSettings.Async" /&gt;</ph> flag to <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Асинхронный метод <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> вызван без присваивания флагу <ph id="ph2">&lt;see cref="P:System.Xml.XmlWriterSettings.Async" /&gt;</ph> значения <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="575" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteCharEntityAsync(System.Char)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</source>
          <target state="translated">В этом случае вызывается исключение <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> с сообщением "Задайте параметру XmlWriterSettings.Async значение true, если вы хотите использовать асинхронные методы".</target>       </trans-unit>
        <trans-unit id="576" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteChars(System.Char[],System.Int32,System.Int32)">
          <source>Character array containing the text to write.</source>
          <target state="translated">Массив символов, содержащий текст для записи.</target>       </trans-unit>
        <trans-unit id="577" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteChars(System.Char[],System.Int32,System.Int32)">
          <source>The position in the buffer indicating the start of the text to write.</source>
          <target state="translated">Позиция в буфере, с которой начинается запись текста.</target>       </trans-unit>
        <trans-unit id="578" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteChars(System.Char[],System.Int32,System.Int32)">
          <source>The number of characters to write.</source>
          <target state="translated">Количество символов для записи.</target>       </trans-unit>
        <trans-unit id="579" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteChars(System.Char[],System.Int32,System.Int32)">
          <source>When overridden in a derived class, writes text one buffer at a time.</source>
          <target state="translated">Когда переопределено в производном классе, записывает содержимое текстового буфера.</target>       </trans-unit>
        <trans-unit id="580" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteChars(System.Char[],System.Int32,System.Int32)">
          <source>This method can be used to write large amounts of text one buffer at a time.</source>
          <target state="translated">Этот метод можно использовать для записи больших объемов текста один буфер за раз.</target>       </trans-unit>
        <trans-unit id="581" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteChars(System.Char[],System.Int32,System.Int32)">
          <source>Special handling must be done to ensure the <ph id="ph1">`WriteChars`</ph> method does not split surrogate pair characters across multiple buffer writes.</source>
          <target state="translated">Специальная обработка нужно сделать, чтобы обеспечить <ph id="ph1">`WriteChars`</ph> метод не разбит на несколько операций записи буфера пары знаков-заместителей.</target>       </trans-unit>
        <trans-unit id="582" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteChars(System.Char[],System.Int32,System.Int32)">
          <source>The XML specification defines the valid ranges for surrogate pairs.</source>
          <target state="translated">Допустимые диапазоны пары знаков-заместителей определены в спецификации XML.</target>       </trans-unit>
        <trans-unit id="583" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteChars(System.Char[],System.Int32,System.Int32)">
          <source>For the asynchronous version of this method, see <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteCharsAsync%2A&gt;</ph>.</source>
          <target state="translated">Асинхронная версия данного метода, в разделе <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteCharsAsync%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="584" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteChars(System.Char[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Свойство <ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> имеет значение <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="585" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteChars(System.Char[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> or <ph id="ph2">&lt;paramref name="count" /&gt;</ph> is less than zero.</source>
          <target state="translated">Значение параметра <ph id="ph1">&lt;paramref name="index" /&gt;</ph> или <ph id="ph2">&lt;paramref name="count" /&gt;</ph> меньше нуля.</target>       </trans-unit>
        <trans-unit id="586" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteChars(System.Char[],System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">- или -</target>       </trans-unit>
        <trans-unit id="587" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteChars(System.Char[],System.Int32,System.Int32)">
          <source>The buffer length minus <ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than <ph id="ph2">&lt;paramref name="count" /&gt;</ph>; the call results in surrogate pair characters being split or an invalid surrogate pair being written.</source>
          <target state="translated">Длина буфера за вычетом <ph id="ph1">&lt;paramref name="index" /&gt;</ph> меньше <ph id="ph2">&lt;paramref name="count" /&gt;</ph>; вызов приводит к разделению пар символов-заместителей или к записи недопустимой пары символов-заместителей.</target>       </trans-unit>
        <trans-unit id="588" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteChars(System.Char[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> parameter value is not valid.</source>
          <target state="translated">Значение параметра <ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> является недопустимым.</target>       </trans-unit>
        <trans-unit id="589" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteChars(System.Char[],System.Int32,System.Int32)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">Метод <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> вызван перед завершением предыдущей асинхронной операции.</target>       </trans-unit>
        <trans-unit id="590" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteChars(System.Char[],System.Int32,System.Int32)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">В этом случае возникает исключение <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> с сообщением "Асинхронная операция уже выполняется".</target>       </trans-unit>
        <trans-unit id="591" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteCharsAsync(System.Char[],System.Int32,System.Int32)">
          <source>Character array containing the text to write.</source>
          <target state="translated">Массив символов, содержащий текст для записи.</target>       </trans-unit>
        <trans-unit id="592" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteCharsAsync(System.Char[],System.Int32,System.Int32)">
          <source>The position in the buffer indicating the start of the text to write.</source>
          <target state="translated">Позиция в буфере, с которой начинается запись текста.</target>       </trans-unit>
        <trans-unit id="593" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteCharsAsync(System.Char[],System.Int32,System.Int32)">
          <source>The number of characters to write.</source>
          <target state="translated">Количество символов для записи.</target>       </trans-unit>
        <trans-unit id="594" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteCharsAsync(System.Char[],System.Int32,System.Int32)">
          <source>Asynchronously writes text one buffer at a time.</source>
          <target state="translated">Асинхронно записывает содержимое текстового буфера.</target>       </trans-unit>
        <trans-unit id="595" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteCharsAsync(System.Char[],System.Int32,System.Int32)">
          <source>The task that represents the asynchronous <ph id="ph1">&lt;see langword="WriteChars" /&gt;</ph> operation.</source>
          <target state="translated">Задача, представляющая асинхронную операцию <ph id="ph1">&lt;see langword="WriteChars" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="596" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteCharsAsync(System.Char[],System.Int32,System.Int32)">
          <source>This is the asynchronous version of <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteChars%2A&gt;</ph>, with the same functionality.</source>
          <target state="translated">Это асинхронная версия объекта <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteChars%2A&gt;</ph>, с той же функции.</target>       </trans-unit>
        <trans-unit id="597" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteCharsAsync(System.Char[],System.Int32,System.Int32)">
          <source>To use this method, you must set the <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.Async%2A&gt;</ph> flag to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">Чтобы использовать этот метод, необходимо задать <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.Async%2A&gt;</ph> флаг <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="598" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteCharsAsync(System.Char[],System.Int32,System.Int32)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> asynchronous method was called without setting the <ph id="ph2">&lt;see cref="P:System.Xml.XmlWriterSettings.Async" /&gt;</ph> flag to <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Асинхронный метод <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> вызван без присваивания флагу <ph id="ph2">&lt;see cref="P:System.Xml.XmlWriterSettings.Async" /&gt;</ph> значения <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="599" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteCharsAsync(System.Char[],System.Int32,System.Int32)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</source>
          <target state="translated">В этом случае вызывается исключение <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> с сообщением "Задайте параметру XmlWriterSettings.Async значение true, если вы хотите использовать асинхронные методы".</target>       </trans-unit>
        <trans-unit id="600" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteComment(System.String)">
          <source>Text to place inside the comment.</source>
          <target state="translated">Текст, записываемый в примечание.</target>       </trans-unit>
        <trans-unit id="601" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteComment(System.String)">
          <source>When overridden in a derived class, writes out a comment <ph id="ph1">&amp;lt;</ph>!--...--<ph id="ph2">&amp;gt;</ph> containing the specified text.</source>
          <target state="translated">Когда переопределено в производном классе, записывает примечание <ph id="ph1">&amp;lt;</ph>!--...--<ph id="ph2">&amp;gt;</ph>, содержащее заданный текст.</target>       </trans-unit>
        <trans-unit id="602" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteComment(System.String)">
          <source>If <ph id="ph1">`text`</ph> is either <ph id="ph2">`null`</ph> or <ph id="ph3">`String.Empty`</ph>, this method writes a comment with no data content, for example <ph id="ph4">\&lt;</ph>!----&gt;.</source>
          <target state="translated">Если <ph id="ph1">`text`</ph> либо <ph id="ph2">`null`</ph> или <ph id="ph3">`String.Empty`</ph>, этот метод записывает комментарий без содержимого, например <ph id="ph4">\&lt;</ph>!---&gt;.</target>       </trans-unit>
        <trans-unit id="603" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteComment(System.String)">
          <source>If <ph id="ph1">`text`</ph> contains an invalid sequence of two dashes "--" the <ph id="ph2">&lt;xref:System.Xml.XmlWriter&gt;</ph> can either throw an <ph id="ph3">&lt;xref:System.ArgumentException&gt;</ph> (<ph id="ph4">&lt;xref:System.Xml.XmlTextWriter&gt;</ph> objects) or insert a space between the dashes "- -" so that the text is a valid XML comment (<ph id="ph5">&lt;xref:System.Xml.XmlWriter&gt;</ph> objects created by the <ph id="ph6">&lt;xref:System.Xml.XmlWriter.Create%2A&gt;</ph> method).</source>
          <target state="translated">Если <ph id="ph1">`text`</ph> содержит недопустимую последовательность двух дефисов «--» <ph id="ph2">&lt;xref:System.Xml.XmlWriter&gt;</ph> можно либо throw <ph id="ph3">&lt;xref:System.ArgumentException&gt;</ph> (<ph id="ph4">&lt;xref:System.Xml.XmlTextWriter&gt;</ph> объектов) или вставлять пробел между дефисы «-» - таким образом, чтобы текст допустимый XML-комментарий (<ph id="ph5">&lt;xref:System.Xml.XmlWriter&gt;</ph> объекты, созданные <ph id="ph6">&lt;xref:System.Xml.XmlWriter.Create%2A&gt;</ph> метода).</target>       </trans-unit>
        <trans-unit id="604" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteComment(System.String)">
          <source>For the asynchronous version of this method, see <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteCommentAsync%2A&gt;</ph>.</source>
          <target state="translated">Асинхронная версия данного метода, в разделе <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteCommentAsync%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="605" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteComment(System.String)">
          <source>The following example writes an XML file representing a book.</source>
          <target state="translated">Следующий пример записывает XML-файл, представляющий книгу.</target>       </trans-unit>
        <trans-unit id="606" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteComment(System.String)">
          <source>The text would result in a non-well-formed XML document.</source>
          <target state="translated">Текст приведет к плохому формированию документа XML.</target>       </trans-unit>
        <trans-unit id="607" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteComment(System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">Метод <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> вызван перед завершением предыдущей асинхронной операции.</target>       </trans-unit>
        <trans-unit id="608" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteComment(System.String)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">В этом случае возникает исключение <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> с сообщением "Асинхронная операция уже выполняется".</target>       </trans-unit>
        <trans-unit id="609" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteCommentAsync(System.String)">
          <source>Text to place inside the comment.</source>
          <target state="translated">Текст, записываемый в примечание.</target>       </trans-unit>
        <trans-unit id="610" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteCommentAsync(System.String)">
          <source>Asynchronously writes out a comment <ph id="ph1">&amp;lt;</ph>!--...--<ph id="ph2">&amp;gt;</ph> containing the specified text.</source>
          <target state="translated">Асинхронно записывает комментарий <ph id="ph1">&amp;lt;</ph>!--...--<ph id="ph2">&amp;gt;</ph>, содержащий заданный текст.</target>       </trans-unit>
        <trans-unit id="611" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteCommentAsync(System.String)">
          <source>The task that represents the asynchronous <ph id="ph1">&lt;see langword="WriteComment" /&gt;</ph> operation.</source>
          <target state="translated">Задача, представляющая асинхронную операцию <ph id="ph1">&lt;see langword="WriteComment" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="612" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteCommentAsync(System.String)">
          <source>This is the asynchronous version of <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteComment%2A&gt;</ph>, with the same functionality.</source>
          <target state="translated">Это асинхронная версия объекта <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteComment%2A&gt;</ph>, с той же функции.</target>       </trans-unit>
        <trans-unit id="613" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteCommentAsync(System.String)">
          <source>To use this method, you must set the <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.Async%2A&gt;</ph> flag to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">Чтобы использовать этот метод, необходимо задать <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.Async%2A&gt;</ph> флаг <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="614" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteCommentAsync(System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> asynchronous method was called without setting the <ph id="ph2">&lt;see cref="P:System.Xml.XmlWriterSettings.Async" /&gt;</ph> flag to <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Асинхронный метод <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> вызван без присваивания флагу <ph id="ph2">&lt;see cref="P:System.Xml.XmlWriterSettings.Async" /&gt;</ph> значения <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="615" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteCommentAsync(System.String)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</source>
          <target state="translated">В этом случае вызывается исключение <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> с сообщением "Задайте параметру XmlWriterSettings.Async значение true, если вы хотите использовать асинхронные методы".</target>       </trans-unit>
        <trans-unit id="616" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteDocType(System.String,System.String,System.String,System.String)">
          <source>The name of the DOCTYPE.</source>
          <target state="translated">Имя DOCTYPE.</target>       </trans-unit>
        <trans-unit id="617" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteDocType(System.String,System.String,System.String,System.String)">
          <source>This must be non-empty.</source>
          <target state="translated">Не должно быть пустым.</target>       </trans-unit>
        <trans-unit id="618" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteDocType(System.String,System.String,System.String,System.String)">
          <source>If non-null it also writes PUBLIC "pubid" "sysid" where <bpt id="p1">&lt;c&gt;</bpt>pubid<ept id="p1">&lt;/c&gt;</ept> and <bpt id="p2">&lt;c&gt;</bpt>sysid<ept id="p2">&lt;/c&gt;</ept> are replaced with the value of the given arguments.</source>
          <target state="translated">Если значение не равно NULL, записывается также PUBLIC "pubid" "sysid", где <bpt id="p1">&lt;c&gt;</bpt>pubid<ept id="p1">&lt;/c&gt;</ept> и <bpt id="p2">&lt;c&gt;</bpt>sysid<ept id="p2">&lt;/c&gt;</ept> заменяются значениями заданных аргументов.</target>       </trans-unit>
        <trans-unit id="619" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteDocType(System.String,System.String,System.String,System.String)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>pubid<ept id="p1">&lt;/c&gt;</ept> is <ph id="ph1">&lt;see langword="null" /&gt;</ph> and <bpt id="p2">&lt;c&gt;</bpt>sysid<ept id="p2">&lt;/c&gt;</ept> is non-null it writes SYSTEM "sysid" where <bpt id="p3">&lt;c&gt;</bpt>sysid<ept id="p3">&lt;/c&gt;</ept> is replaced with the value of this argument.</source>
          <target state="translated">Если параметр <bpt id="p1">&lt;c&gt;</bpt>pubid<ept id="p1">&lt;/c&gt;</ept> имеет значение <ph id="ph1">&lt;see langword="null" /&gt;</ph>, а параметр <bpt id="p2">&lt;c&gt;</bpt>sysid<ept id="p2">&lt;/c&gt;</ept> не равен NULL, записывается SYSTEM "sysid", где <bpt id="p3">&lt;c&gt;</bpt>sysid<ept id="p3">&lt;/c&gt;</ept> замещается значением данного аргумента.</target>       </trans-unit>
        <trans-unit id="620" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteDocType(System.String,System.String,System.String,System.String)">
          <source>If non-null it writes [subset] where subset is replaced with the value of this argument.</source>
          <target state="translated">Если не равно нулю, записывает [subset], где subset замещается значением данного аргумента.</target>       </trans-unit>
        <trans-unit id="621" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteDocType(System.String,System.String,System.String,System.String)">
          <source>When overridden in a derived class, writes the DOCTYPE declaration with the specified name and optional attributes.</source>
          <target state="translated">Когда переопределено в производном классе, записывает объявление DOCTYPE с указанным именем и дополнительными атрибутами.</target>       </trans-unit>
        <trans-unit id="622" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteDocType(System.String,System.String,System.String,System.String)">
          <source>This method does not check for invalid characters in <ph id="ph1">`pubid`</ph>, <ph id="ph2">`sysid`</ph> or <ph id="ph3">`subset`</ph>.</source>
          <target state="translated">Этот метод не проверяет наличие недопустимых символов в <ph id="ph1">`pubid`</ph>, <ph id="ph2">`sysid`</ph> или <ph id="ph3">`subset`</ph>.</target>       </trans-unit>
        <trans-unit id="623" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteDocType(System.String,System.String,System.String,System.String)">
          <source>It also does not check that the internal subset is well-formed.</source>
          <target state="translated">Он также не проверяет, внутреннее подмножество имеет правильный формат.</target>       </trans-unit>
        <trans-unit id="624" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteDocType(System.String,System.String,System.String,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> does not validate the data that is passed to the <ph id="ph2">&lt;xref:System.Xml.XmlWriter.WriteDocType%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> Не проверяет данные, передаваемые <ph id="ph2">&lt;xref:System.Xml.XmlWriter.WriteDocType%2A&gt;</ph> метод.</target>       </trans-unit>
        <trans-unit id="625" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteDocType(System.String,System.String,System.String,System.String)">
          <source>You should not pass arbitrary data to this method.</source>
          <target state="translated">Не следует передавать произвольные данные в этот метод.</target>       </trans-unit>
        <trans-unit id="626" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteDocType(System.String,System.String,System.String,System.String)">
          <source>For the asynchronous version of this method, see <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteDocTypeAsync%2A&gt;</ph>.</source>
          <target state="translated">Асинхронная версия данного метода, в разделе <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteDocTypeAsync%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="627" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteDocType(System.String,System.String,System.String,System.String)">
          <source>The following example writes an XML file representing a book.</source>
          <target state="translated">Следующий пример записывает XML-файл, представляющий книгу.</target>       </trans-unit>
        <trans-unit id="628" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteDocType(System.String,System.String,System.String,System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">Метод <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> вызван перед завершением предыдущей асинхронной операции.</target>       </trans-unit>
        <trans-unit id="629" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteDocType(System.String,System.String,System.String,System.String)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">В этом случае возникает исключение <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> с сообщением "Асинхронная операция уже выполняется".</target>       </trans-unit>
        <trans-unit id="630" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteDocType(System.String,System.String,System.String,System.String)">
          <source>The value for <ph id="ph1">&lt;paramref name="name" /&gt;</ph> would result in invalid XML.</source>
          <target state="translated">Значение для <ph id="ph1">&lt;paramref name="name" /&gt;</ph> приведет к недопустимому XML.</target>       </trans-unit>
        <trans-unit id="631" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteDocTypeAsync(System.String,System.String,System.String,System.String)">
          <source>The name of the DOCTYPE.</source>
          <target state="translated">Имя DOCTYPE.</target>       </trans-unit>
        <trans-unit id="632" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteDocTypeAsync(System.String,System.String,System.String,System.String)">
          <source>This must be non-empty.</source>
          <target state="translated">Не должно быть пустым.</target>       </trans-unit>
        <trans-unit id="633" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteDocTypeAsync(System.String,System.String,System.String,System.String)">
          <source>If non-null it also writes PUBLIC "pubid" "sysid" where <bpt id="p1">&lt;c&gt;</bpt>pubid<ept id="p1">&lt;/c&gt;</ept> and <bpt id="p2">&lt;c&gt;</bpt>sysid<ept id="p2">&lt;/c&gt;</ept> are replaced with the value of the given arguments.</source>
          <target state="translated">Если значение не равно NULL, записывается также PUBLIC "pubid" "sysid", где <bpt id="p1">&lt;c&gt;</bpt>pubid<ept id="p1">&lt;/c&gt;</ept> и <bpt id="p2">&lt;c&gt;</bpt>sysid<ept id="p2">&lt;/c&gt;</ept> заменяются значениями заданных аргументов.</target>       </trans-unit>
        <trans-unit id="634" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteDocTypeAsync(System.String,System.String,System.String,System.String)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>pubid<ept id="p1">&lt;/c&gt;</ept> is <ph id="ph1">&lt;see langword="null" /&gt;</ph> and <bpt id="p2">&lt;c&gt;</bpt>sysid<ept id="p2">&lt;/c&gt;</ept> is non-null it writes SYSTEM "sysid" where <bpt id="p3">&lt;c&gt;</bpt>sysid<ept id="p3">&lt;/c&gt;</ept> is replaced with the value of this argument.</source>
          <target state="translated">Если параметр <bpt id="p1">&lt;c&gt;</bpt>pubid<ept id="p1">&lt;/c&gt;</ept> имеет значение <ph id="ph1">&lt;see langword="null" /&gt;</ph>, а параметр <bpt id="p2">&lt;c&gt;</bpt>sysid<ept id="p2">&lt;/c&gt;</ept> не равен NULL, записывается SYSTEM "sysid", где <bpt id="p3">&lt;c&gt;</bpt>sysid<ept id="p3">&lt;/c&gt;</ept> замещается значением данного аргумента.</target>       </trans-unit>
        <trans-unit id="635" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteDocTypeAsync(System.String,System.String,System.String,System.String)">
          <source>If non-null it writes [subset] where subset is replaced with the value of this argument.</source>
          <target state="translated">Если не равно нулю, записывает [subset], где subset замещается значением данного аргумента.</target>       </trans-unit>
        <trans-unit id="636" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteDocTypeAsync(System.String,System.String,System.String,System.String)">
          <source>Asynchronously writes the DOCTYPE declaration with the specified name and optional attributes.</source>
          <target state="translated">Асинхронно записывает объявление DOCTYPE с указанным именем и дополнительными атрибутами.</target>       </trans-unit>
        <trans-unit id="637" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteDocTypeAsync(System.String,System.String,System.String,System.String)">
          <source>The task that represents the asynchronous <ph id="ph1">&lt;see langword="WriteDocType" /&gt;</ph> operation.</source>
          <target state="translated">Задача, представляющая асинхронную операцию <ph id="ph1">&lt;see langword="WriteDocType" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="638" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteDocTypeAsync(System.String,System.String,System.String,System.String)">
          <source>This is the asynchronous version of <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteDocType%2A&gt;</ph>, with the same functionality.</source>
          <target state="translated">Это асинхронная версия объекта <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteDocType%2A&gt;</ph>, с той же функции.</target>       </trans-unit>
        <trans-unit id="639" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteDocTypeAsync(System.String,System.String,System.String,System.String)">
          <source>To use this method, you must set the <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.Async%2A&gt;</ph> flag to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">Чтобы использовать этот метод, необходимо задать <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.Async%2A&gt;</ph> флаг <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="640" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteDocTypeAsync(System.String,System.String,System.String,System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> asynchronous method was called without setting the <ph id="ph2">&lt;see cref="P:System.Xml.XmlWriterSettings.Async" /&gt;</ph> flag to <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Асинхронный метод <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> вызван без присваивания флагу <ph id="ph2">&lt;see cref="P:System.Xml.XmlWriterSettings.Async" /&gt;</ph> значения <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="641" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteDocTypeAsync(System.String,System.String,System.String,System.String)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</source>
          <target state="translated">В этом случае вызывается исключение <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> с сообщением "Задайте параметру XmlWriterSettings.Async значение true, если вы хотите использовать асинхронные методы".</target>       </trans-unit>
        <trans-unit id="642" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlWriter">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">Метод <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> вызван перед завершением предыдущей асинхронной операции.</target>       </trans-unit>
        <trans-unit id="643" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlWriter">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">В этом случае возникает исключение <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> с сообщением "Асинхронная операция уже выполняется".</target>       </trans-unit>
        <trans-unit id="644" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlWriter">
          <source>Writes an element containing a string value.</source>
          <target state="translated">Записывает элемент, содержащий строковое значение.</target>       </trans-unit>
        <trans-unit id="645" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>For the asynchronous version of this method, see <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteElementStringAsync%2A&gt;</ph>.</source>
          <target state="translated">Асинхронная версия данного метода, в разделе <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteElementStringAsync%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="646" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String)">
          <source>The local name of the element.</source>
          <target state="translated">Локальное имя элемента.</target>       </trans-unit>
        <trans-unit id="647" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String)">
          <source>The value of the element.</source>
          <target state="translated">Значение элемента.</target>       </trans-unit>
        <trans-unit id="648" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String)">
          <source>Writes an element with the specified local name and value.</source>
          <target state="translated">Записывает элемент с заданным локальным именем и значением.</target>       </trans-unit>
        <trans-unit id="649" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String)">
          <source>For the asynchronous version of this method, see <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteElementStringAsync%2A&gt;</ph>.</source>
          <target state="translated">Асинхронная версия данного метода, в разделе <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteElementStringAsync%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="650" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String)">
          <source>The following example uses several write methods to create an XML fragment.</source>
          <target state="translated">В следующем примере нескольких методов для создания фрагмента XML.</target>       </trans-unit>
        <trans-unit id="651" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String)">
          <source>The <ph id="ph1">&lt;paramref name="localName" /&gt;</ph> value is <ph id="ph2">&lt;see langword="null" /&gt;</ph> or an empty string.</source>
          <target state="translated">Значение параметра <ph id="ph1">&lt;paramref name="localName" /&gt;</ph> — <ph id="ph2">&lt;see langword="null" /&gt;</ph> или пустая строка.</target>       </trans-unit>
        <trans-unit id="652" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String)">
          <source>-or-</source>
          <target state="translated">- или -</target>       </trans-unit>
        <trans-unit id="653" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String)">
          <source>The parameter values are not valid.</source>
          <target state="translated">Значения параметра являются недопустимыми.</target>       </trans-unit>
        <trans-unit id="654" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String)">
          <source>There is a character in the buffer that is a valid XML character but is not valid for the output encoding.</source>
          <target state="translated">В буфере присутствует символ, который является допустимым символом XML, но недопустим для кодирования вывода.</target>       </trans-unit>
        <trans-unit id="655" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String)">
          <source>For example, if the output encoding is ASCII, you should only use characters from the range of 0 to 127 for element and attribute names.</source>
          <target state="translated">Например, если выходные данные в кодировке ASCII, для имен элементов и атрибутов следует использовать только символы из диапазона от 0 до 127.</target>       </trans-unit>
        <trans-unit id="656" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String)">
          <source>The invalid character might be in the argument of this method or in an argument of previous methods that were writing to the buffer.</source>
          <target state="translated">Недопустимый символ может быть в аргументе этого метода или в каком-либо аргументе предыдущих методов, которые осуществляли запись в буфер.</target>       </trans-unit>
        <trans-unit id="657" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String)">
          <source>Such characters are escaped by character entity references when possible (for example, in text nodes or attribute values).</source>
          <target state="translated">Такие знаки экранируются по возможности с помощью ссылок на сущности знаков (например, в текстовых узлах или значениях атрибутов).</target>       </trans-unit>
        <trans-unit id="658" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String)">
          <source>However, the character entity reference is not allowed in element and attribute names, comments, processing instructions, or CDATA sections.</source>
          <target state="translated">Однако ссылка на сущность знака не допускается в именах элементов и атрибутов, комментариях, инструкциях по обработке и разделах CDATA.</target>       </trans-unit>
        <trans-unit id="659" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">Метод <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> вызван перед завершением предыдущей асинхронной операции.</target>       </trans-unit>
        <trans-unit id="660" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">В этом случае возникает исключение <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> с сообщением "Асинхронная операция уже выполняется".</target>       </trans-unit>
        <trans-unit id="661" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String,System.String)">
          <source>The local name of the element.</source>
          <target state="translated">Локальное имя элемента.</target>       </trans-unit>
        <trans-unit id="662" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String,System.String)">
          <source>The namespace URI to associate with the element.</source>
          <target state="translated">URI пространства имен, связываемый с элементом.</target>       </trans-unit>
        <trans-unit id="663" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String,System.String)">
          <source>The value of the element.</source>
          <target state="translated">Значение элемента.</target>       </trans-unit>
        <trans-unit id="664" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String,System.String)">
          <source>Writes an element with the specified local name, namespace URI, and value.</source>
          <target state="translated">Записывает элемент с заданным локальным именем, URI пространства имен и значением.</target>       </trans-unit>
        <trans-unit id="665" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String,System.String)">
          <source>For the asynchronous version of this method, see <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteElementStringAsync%2A&gt;</ph>.</source>
          <target state="translated">Асинхронная версия данного метода, в разделе <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteElementStringAsync%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="666" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String,System.String)">
          <source>The following example uses several write methods to create an XML fragment.</source>
          <target state="translated">В следующем примере нескольких методов для создания фрагмента XML.</target>       </trans-unit>
        <trans-unit id="667" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String,System.String)">
          <source>The <ph id="ph1">&lt;paramref name="localName" /&gt;</ph> value is <ph id="ph2">&lt;see langword="null" /&gt;</ph> or an empty string.</source>
          <target state="translated">Значение параметра <ph id="ph1">&lt;paramref name="localName" /&gt;</ph> — <ph id="ph2">&lt;see langword="null" /&gt;</ph> или пустая строка.</target>       </trans-unit>
        <trans-unit id="668" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String,System.String)">
          <source>-or-</source>
          <target state="translated">- или -</target>       </trans-unit>
        <trans-unit id="669" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String,System.String)">
          <source>The parameter values are not valid.</source>
          <target state="translated">Значения параметра являются недопустимыми.</target>       </trans-unit>
        <trans-unit id="670" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String,System.String)">
          <source>There is a character in the buffer that is a valid XML character but is not valid for the output encoding.</source>
          <target state="translated">В буфере присутствует символ, который является допустимым символом XML, но недопустим для кодирования вывода.</target>       </trans-unit>
        <trans-unit id="671" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String,System.String)">
          <source>For example, if the output encoding is ASCII, you should only use characters from the range of 0 to 127 for element and attribute names.</source>
          <target state="translated">Например, если выходные данные в кодировке ASCII, для имен элементов и атрибутов следует использовать только символы из диапазона от 0 до 127.</target>       </trans-unit>
        <trans-unit id="672" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String,System.String)">
          <source>The invalid character might be in the argument of this method or in an argument of previous methods that were writing to the buffer.</source>
          <target state="translated">Недопустимый символ может быть в аргументе этого метода или в каком-либо аргументе предыдущих методов, которые осуществляли запись в буфер.</target>       </trans-unit>
        <trans-unit id="673" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String,System.String)">
          <source>Such characters are escaped by character entity references when possible (for example, in text nodes or attribute values).</source>
          <target state="translated">Такие знаки экранируются по возможности с помощью ссылок на сущности знаков (например, в текстовых узлах или значениях атрибутов).</target>       </trans-unit>
        <trans-unit id="674" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String,System.String)">
          <source>However, the character entity reference is not allowed in element and attribute names, comments, processing instructions, or CDATA sections.</source>
          <target state="translated">Однако ссылка на сущность знака не допускается в именах элементов и атрибутов, комментариях, инструкциях по обработке и разделах CDATA.</target>       </trans-unit>
        <trans-unit id="675" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String,System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">Метод <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> вызван перед завершением предыдущей асинхронной операции.</target>       </trans-unit>
        <trans-unit id="676" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String,System.String)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">В этом случае возникает исключение <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> с сообщением "Асинхронная операция уже выполняется".</target>       </trans-unit>
        <trans-unit id="677" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String,System.String,System.String)">
          <source>The prefix of the element.</source>
          <target state="translated">Префикс элемента.</target>       </trans-unit>
        <trans-unit id="678" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String,System.String,System.String)">
          <source>The local name of the element.</source>
          <target state="translated">Локальное имя элемента.</target>       </trans-unit>
        <trans-unit id="679" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String,System.String,System.String)">
          <source>The namespace URI of the element.</source>
          <target state="translated">Универсальный код ресурса (URI) пространства имен элемента.</target>       </trans-unit>
        <trans-unit id="680" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String,System.String,System.String)">
          <source>The value of the element.</source>
          <target state="translated">Значение элемента.</target>       </trans-unit>
        <trans-unit id="681" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String,System.String,System.String)">
          <source>Writes an element with the specified prefix, local name, namespace URI, and value.</source>
          <target state="translated">Записывает элемент с заданным префиксом, локальным именем, универсальный кодом ресурса (URI) пространства имен и значением.</target>       </trans-unit>
        <trans-unit id="682" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String,System.String,System.String)">
          <source>For the asynchronous version of this method, see <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteElementStringAsync%2A&gt;</ph>.</source>
          <target state="translated">Асинхронная версия данного метода, в разделе <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteElementStringAsync%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="683" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String,System.String,System.String)">
          <source>The <ph id="ph1">&lt;paramref name="localName" /&gt;</ph> value is <ph id="ph2">&lt;see langword="null" /&gt;</ph> or an empty string.</source>
          <target state="translated">Значение параметра <ph id="ph1">&lt;paramref name="localName" /&gt;</ph> — <ph id="ph2">&lt;see langword="null" /&gt;</ph> или пустая строка.</target>       </trans-unit>
        <trans-unit id="684" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String,System.String,System.String)">
          <source>-or-</source>
          <target state="translated">- или -</target>       </trans-unit>
        <trans-unit id="685" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String,System.String,System.String)">
          <source>The parameter values are not valid.</source>
          <target state="translated">Значения параметра являются недопустимыми.</target>       </trans-unit>
        <trans-unit id="686" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String,System.String,System.String)">
          <source>There is a character in the buffer that is a valid XML character but is not valid for the output encoding.</source>
          <target state="translated">В буфере присутствует символ, который является допустимым символом XML, но недопустим для кодирования вывода.</target>       </trans-unit>
        <trans-unit id="687" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String,System.String,System.String)">
          <source>For example, if the output encoding is ASCII, you should only use characters from the range of 0 to 127 for element and attribute names.</source>
          <target state="translated">Например, если выходные данные в кодировке ASCII, для имен элементов и атрибутов следует использовать только символы из диапазона от 0 до 127.</target>       </trans-unit>
        <trans-unit id="688" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String,System.String,System.String)">
          <source>The invalid character might be in the argument of this method or in an argument of previous methods that were writing to the buffer.</source>
          <target state="translated">Недопустимый символ может быть в аргументе этого метода или в каком-либо аргументе предыдущих методов, которые осуществляли запись в буфер.</target>       </trans-unit>
        <trans-unit id="689" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String,System.String,System.String)">
          <source>Such characters are escaped by character entity references when possible (for example, in text nodes or attribute values).</source>
          <target state="translated">Такие знаки экранируются по возможности с помощью ссылок на сущности знаков (например, в текстовых узлах или значениях атрибутов).</target>       </trans-unit>
        <trans-unit id="690" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String,System.String,System.String)">
          <source>However, the character entity reference is not allowed in element and attribute names, comments, processing instructions, or CDATA sections.</source>
          <target state="translated">Однако ссылка на сущность знака не допускается в именах элементов и атрибутов, комментариях, инструкциях по обработке и разделах CDATA.</target>       </trans-unit>
        <trans-unit id="691" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String,System.String,System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">Метод <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> вызван перед завершением предыдущей асинхронной операции.</target>       </trans-unit>
        <trans-unit id="692" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String,System.String,System.String)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">В этом случае возникает исключение <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> с сообщением "Асинхронная операция уже выполняется".</target>       </trans-unit>
        <trans-unit id="693" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteElementStringAsync(System.String,System.String,System.String,System.String)">
          <source>The prefix of the element.</source>
          <target state="translated">Префикс элемента.</target>       </trans-unit>
        <trans-unit id="694" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteElementStringAsync(System.String,System.String,System.String,System.String)">
          <source>The local name of the element.</source>
          <target state="translated">Локальное имя элемента.</target>       </trans-unit>
        <trans-unit id="695" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteElementStringAsync(System.String,System.String,System.String,System.String)">
          <source>The namespace URI of the element.</source>
          <target state="translated">Универсальный код ресурса (URI) пространства имен элемента.</target>       </trans-unit>
        <trans-unit id="696" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteElementStringAsync(System.String,System.String,System.String,System.String)">
          <source>The value of the element.</source>
          <target state="translated">Значение элемента.</target>       </trans-unit>
        <trans-unit id="697" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteElementStringAsync(System.String,System.String,System.String,System.String)">
          <source>Asynchronously writes an element with the specified prefix, local name, namespace URI, and value.</source>
          <target state="translated">Асинхронно записывает элемент с заданным префиксом, локальным именем, универсальным кодом ресурса (URI) пространства имен и значением.</target>       </trans-unit>
        <trans-unit id="698" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteElementStringAsync(System.String,System.String,System.String,System.String)">
          <source>The task that represents the asynchronous <ph id="ph1">&lt;see langword="WriteElementString" /&gt;</ph> operation.</source>
          <target state="translated">Задача, представляющая асинхронную операцию <ph id="ph1">&lt;see langword="WriteElementString" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="699" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteElementStringAsync(System.String,System.String,System.String,System.String)">
          <source>This is the asynchronous version of <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteElementString%2A&gt;</ph>, with the same functionality.</source>
          <target state="translated">Это асинхронная версия объекта <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteElementString%2A&gt;</ph>, с той же функции.</target>       </trans-unit>
        <trans-unit id="700" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteElementStringAsync(System.String,System.String,System.String,System.String)">
          <source>To use this method, you must set the <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.Async%2A&gt;</ph> flag to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">Чтобы использовать этот метод, необходимо задать <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.Async%2A&gt;</ph> флаг <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="701" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteElementStringAsync(System.String,System.String,System.String,System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> asynchronous method was called without setting the <ph id="ph2">&lt;see cref="P:System.Xml.XmlWriterSettings.Async" /&gt;</ph> flag to <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Асинхронный метод <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> вызван без присваивания флагу <ph id="ph2">&lt;see cref="P:System.Xml.XmlWriterSettings.Async" /&gt;</ph> значения <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="702" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteElementStringAsync(System.String,System.String,System.String,System.String)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</source>
          <target state="translated">В этом случае вызывается исключение <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> с сообщением "Задайте параметру XmlWriterSettings.Async значение true, если вы хотите использовать асинхронные методы".</target>       </trans-unit>
        <trans-unit id="703" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteEndAttribute">
          <source>When overridden in a derived class, closes the previous <ph id="ph1">&lt;see cref="M:System.Xml.XmlWriter.WriteStartAttribute(System.String,System.String)" /&gt;</ph> call.</source>
          <target state="translated">При переопределении в производном классе закрывает предыдущий вызов <ph id="ph1">&lt;see cref="M:System.Xml.XmlWriter.WriteStartAttribute(System.String,System.String)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="704" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteEndAttribute">
          <source>If you call <ph id="ph1">`WriteStartAttribute`</ph>, you can close the attribute with this method.</source>
          <target state="translated">При вызове метода <ph id="ph1">`WriteStartAttribute`</ph>, вы можете закрыть атрибута с помощью этого метода.</target>       </trans-unit>
        <trans-unit id="705" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteEndAttribute">
          <source>You can also close the attribute by calling <ph id="ph1">`WriteStartAttribute`</ph> again, calling <ph id="ph2">&lt;xref:System.Xml.XmlWriter.WriteAttributeString%2A&gt;</ph>, or calling <ph id="ph3">&lt;xref:System.Xml.XmlWriter.WriteEndElement%2A&gt;</ph>.</source>
          <target state="translated">Атрибут можно также закрыть путем вызова <ph id="ph1">`WriteStartAttribute`</ph> еще раз, вызвав <ph id="ph2">&lt;xref:System.Xml.XmlWriter.WriteAttributeString%2A&gt;</ph>, или вызов <ph id="ph3">&lt;xref:System.Xml.XmlWriter.WriteEndElement%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="706" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteEndAttribute">
          <source>When you use the <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> methods to output XML, the elements and attributes will not be written until you call the <ph id="ph2">&lt;xref:System.Xml.XmlWriter.Close%2A&gt;</ph> method.</source>
          <target state="translated">При использовании <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> методы для вывода XML элементы и атрибуты не будут записаны, пока не будет вызван <ph id="ph2">&lt;xref:System.Xml.XmlWriter.Close%2A&gt;</ph> метод.</target>       </trans-unit>
        <trans-unit id="707" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteEndAttribute">
          <source>For example, if you are using the XmlWriter to populate an <ph id="ph1">&lt;xref:System.Xml.XmlDocument&gt;</ph>, until you close the <ph id="ph2">&lt;xref:System.Xml.XmlWriter&gt;</ph>, you will not be able to observe the written elements and attributes in the target document.</source>
          <target state="translated">Например, если вы используете XmlWriter для заполнения <ph id="ph1">&lt;xref:System.Xml.XmlDocument&gt;</ph>, пока не будет закрыта <ph id="ph2">&lt;xref:System.Xml.XmlWriter&gt;</ph>, вы не сможете контролировать письменного элементы и атрибуты в целевом документе.</target>       </trans-unit>
        <trans-unit id="708" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteEndAttribute">
          <source>For the asynchronous version of this method, see <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteEndAttributeAsync%2A&gt;</ph>.</source>
          <target state="translated">Асинхронная версия данного метода, в разделе <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteEndAttributeAsync%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="709" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteEndAttribute">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">Метод <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> вызван перед завершением предыдущей асинхронной операции.</target>       </trans-unit>
        <trans-unit id="710" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteEndAttribute">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">В этом случае возникает исключение <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> с сообщением "Асинхронная операция уже выполняется".</target>       </trans-unit>
        <trans-unit id="711" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteEndAttributeAsync">
          <source>Asynchronously closes the previous <ph id="ph1">&lt;see cref="M:System.Xml.XmlWriter.WriteStartAttribute(System.String,System.String)" /&gt;</ph> call.</source>
          <target state="translated">Асинхронно закрывает предыдущий вызов <ph id="ph1">&lt;see cref="M:System.Xml.XmlWriter.WriteStartAttribute(System.String,System.String)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="712" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteEndAttributeAsync">
          <source>The task that represents the asynchronous <ph id="ph1">&lt;see langword="WriteEndAttribute" /&gt;</ph> operation.</source>
          <target state="translated">Задача, представляющая асинхронную операцию <ph id="ph1">&lt;see langword="WriteEndAttribute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="713" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteEndAttributeAsync">
          <source>This is the asynchronous version of <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteEndAttribute%2A&gt;</ph>, with the same functionality.</source>
          <target state="translated">Это асинхронная версия объекта <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteEndAttribute%2A&gt;</ph>, с той же функции.</target>       </trans-unit>
        <trans-unit id="714" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteEndAttributeAsync">
          <source>To use this method, you must set the <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.Async%2A&gt;</ph> flag to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">Чтобы использовать этот метод, необходимо задать <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.Async%2A&gt;</ph> флаг <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="715" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteEndAttributeAsync">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> asynchronous method was called without setting the <ph id="ph2">&lt;see cref="P:System.Xml.XmlWriterSettings.Async" /&gt;</ph> flag to <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Асинхронный метод <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> вызван без присваивания флагу <ph id="ph2">&lt;see cref="P:System.Xml.XmlWriterSettings.Async" /&gt;</ph> значения <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="716" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteEndAttributeAsync">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</source>
          <target state="translated">В этом случае вызывается исключение <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> с сообщением "Задайте параметру XmlWriterSettings.Async значение true, если вы хотите использовать асинхронные методы".</target>       </trans-unit>
        <trans-unit id="717" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteEndDocument">
          <source>When overridden in a derived class, closes any open elements or attributes and puts the writer back in the Start state.</source>
          <target state="translated">Когда переопределено в производном классе, закрывает все открытые элементы и атрибуты, возвращая средство записи в начальное состояние.</target>       </trans-unit>
        <trans-unit id="718" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteEndDocument">
          <source>When you use the <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> methods to output XML, the elements and attributes will not be written until you call the <ph id="ph2">&lt;xref:System.Xml.XmlWriter.Close%2A&gt;</ph> method.</source>
          <target state="translated">При использовании <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> методы для вывода XML элементы и атрибуты не будут записаны, пока не будет вызван <ph id="ph2">&lt;xref:System.Xml.XmlWriter.Close%2A&gt;</ph> метод.</target>       </trans-unit>
        <trans-unit id="719" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteEndDocument">
          <source>For example, if you are using the XmlWriter to populate an <ph id="ph1">&lt;xref:System.Xml.XmlDocument&gt;</ph>, until you close the <ph id="ph2">&lt;xref:System.Xml.XmlWriter&gt;</ph>, you will not be able to observe the written elements and attributes in the target document.</source>
          <target state="translated">Например, если вы используете XmlWriter для заполнения <ph id="ph1">&lt;xref:System.Xml.XmlDocument&gt;</ph>, пока не будет закрыта <ph id="ph2">&lt;xref:System.Xml.XmlWriter&gt;</ph>, вы не сможете контролировать письменного элементы и атрибуты в целевом документе.</target>       </trans-unit>
        <trans-unit id="720" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteEndDocument">
          <source>For the asynchronous version of this method, see <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteEndDocumentAsync%2A&gt;</ph>.</source>
          <target state="translated">Асинхронная версия данного метода, в разделе <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteEndDocumentAsync%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="721" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteEndDocument">
          <source>The following example writes an XML file representing a book.</source>
          <target state="translated">Следующий пример записывает XML-файл, представляющий книгу.</target>       </trans-unit>
        <trans-unit id="722" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteEndDocument">
          <source>The XML document is invalid.</source>
          <target state="translated">Недопустимый документ XML.</target>       </trans-unit>
        <trans-unit id="723" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteEndDocument">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">Метод <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> вызван перед завершением предыдущей асинхронной операции.</target>       </trans-unit>
        <trans-unit id="724" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteEndDocument">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">В этом случае возникает исключение <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> с сообщением "Асинхронная операция уже выполняется".</target>       </trans-unit>
        <trans-unit id="725" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteEndDocumentAsync">
          <source>Asynchronously closes any open elements or attributes and puts the writer back in the Start state.</source>
          <target state="translated">Асинхронно закрывает все открытые элементы и атрибуты, возвращая средство записи в начальное состояние.</target>       </trans-unit>
        <trans-unit id="726" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteEndDocumentAsync">
          <source>The task that represents the asynchronous <ph id="ph1">&lt;see langword="WriteEndDocument" /&gt;</ph> operation.</source>
          <target state="translated">Задача, представляющая асинхронную операцию <ph id="ph1">&lt;see langword="WriteEndDocument" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="727" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteEndDocumentAsync">
          <source>This is the asynchronous version of <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteEndDocument%2A&gt;</ph>, with the same functionality.</source>
          <target state="translated">Это асинхронная версия объекта <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteEndDocument%2A&gt;</ph>, с той же функции.</target>       </trans-unit>
        <trans-unit id="728" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteEndDocumentAsync">
          <source>To use this method, you must set the <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.Async%2A&gt;</ph> flag to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">Чтобы использовать этот метод, необходимо задать <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.Async%2A&gt;</ph> флаг <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="729" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteEndDocumentAsync">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> asynchronous method was called without setting the <ph id="ph2">&lt;see cref="P:System.Xml.XmlWriterSettings.Async" /&gt;</ph> flag to <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Асинхронный метод <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> вызван без присваивания флагу <ph id="ph2">&lt;see cref="P:System.Xml.XmlWriterSettings.Async" /&gt;</ph> значения <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="730" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteEndDocumentAsync">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</source>
          <target state="translated">В этом случае вызывается исключение <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> с сообщением "Задайте параметру XmlWriterSettings.Async значение true, если вы хотите использовать асинхронные методы".</target>       </trans-unit>
        <trans-unit id="731" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteEndElement">
          <source>When overridden in a derived class, closes one element and pops the corresponding namespace scope.</source>
          <target state="translated">Когда переопределено в производном классе, закрывает один элемент и извлекает из стека область видимости соответствующего пространства имен.</target>       </trans-unit>
        <trans-unit id="732" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteEndElement">
          <source>If the element contains no content, a short end tag "/&gt;" is written; otherwise, a full end tag is written.</source>
          <target state="translated">Если элемент не имеет содержимого, короткий закрывающий тег «/ &gt;» записывается; в противном случае записывается полный закрывающий тег.</target>       </trans-unit>
        <trans-unit id="733" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteEndElement">
          <source>When you use the <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> methods to output XML, the elements and attributes will not be written until you call the <ph id="ph2">&lt;xref:System.Xml.XmlWriter.Close%2A&gt;</ph> method.</source>
          <target state="translated">При использовании <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> методы для вывода XML элементы и атрибуты не будут записаны, пока не будет вызван <ph id="ph2">&lt;xref:System.Xml.XmlWriter.Close%2A&gt;</ph> метод.</target>       </trans-unit>
        <trans-unit id="734" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteEndElement">
          <source>For example, if you are using the XmlWwriter to populate an <ph id="ph1">&lt;xref:System.Xml.XmlDocument&gt;</ph>, until you close the <ph id="ph2">&lt;xref:System.Xml.XmlWriter&gt;</ph>, you will not be able to observe the written elements and attributes in the target document.</source>
          <target state="translated">Например, если вы используете для заполнения XmlWwriter <ph id="ph1">&lt;xref:System.Xml.XmlDocument&gt;</ph>, пока не будет закрыта <ph id="ph2">&lt;xref:System.Xml.XmlWriter&gt;</ph>, вы не сможете контролировать письменного элементы и атрибуты в целевом документе.</target>       </trans-unit>
        <trans-unit id="735" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteEndElement">
          <source>For the asynchronous version of this method, see <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteEndElementAsync%2A&gt;</ph>.</source>
          <target state="translated">Асинхронная версия данного метода, в разделе <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteEndElementAsync%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="736" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteEndElement">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteEndElement%2A&gt;</ph> and the <ph id="ph2">&lt;xref:System.Xml.XmlWriter.WriteFullEndElement%2A&gt;</ph> methods.</source>
          <target state="translated">В следующем примере используется <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteEndElement%2A&gt;</ph> и <ph id="ph2">&lt;xref:System.Xml.XmlWriter.WriteFullEndElement%2A&gt;</ph> методы.</target>       </trans-unit>
        <trans-unit id="737" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteEndElement">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">Метод <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> вызван перед завершением предыдущей асинхронной операции.</target>       </trans-unit>
        <trans-unit id="738" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteEndElement">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">В этом случае возникает исключение <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> с сообщением "Асинхронная операция уже выполняется".</target>       </trans-unit>
        <trans-unit id="739" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteEndElementAsync">
          <source>Asynchronously closes one element and pops the corresponding namespace scope.</source>
          <target state="translated">Асинхронно закрывает один элемент и извлекает из стека область видимости соответствующего пространства имен.</target>       </trans-unit>
        <trans-unit id="740" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteEndElementAsync">
          <source>The task that represents the asynchronous <ph id="ph1">&lt;see langword="WriteEndElement" /&gt;</ph> operation.</source>
          <target state="translated">Задача, представляющая асинхронную операцию <ph id="ph1">&lt;see langword="WriteEndElement" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="741" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteEndElementAsync">
          <source>This is the asynchronous version of <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteEndElement%2A&gt;</ph>, with the same functionality.</source>
          <target state="translated">Это асинхронная версия объекта <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteEndElement%2A&gt;</ph>, с той же функции.</target>       </trans-unit>
        <trans-unit id="742" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteEndElementAsync">
          <source>To use this method, you must set the <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.Async%2A&gt;</ph> flag to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">Чтобы использовать этот метод, необходимо задать <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.Async%2A&gt;</ph> флаг <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="743" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteEndElementAsync">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> asynchronous method was called without setting the <ph id="ph2">&lt;see cref="P:System.Xml.XmlWriterSettings.Async" /&gt;</ph> flag to <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Асинхронный метод <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> вызван без присваивания флагу <ph id="ph2">&lt;see cref="P:System.Xml.XmlWriterSettings.Async" /&gt;</ph> значения <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="744" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteEndElementAsync">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</source>
          <target state="translated">В этом случае вызывается исключение <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> с сообщением "Задайте параметру XmlWriterSettings.Async значение true, если вы хотите использовать асинхронные методы".</target>       </trans-unit>
        <trans-unit id="745" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteEntityRef(System.String)">
          <source>The name of the entity reference.</source>
          <target state="translated">Имя ссылки на сущность.</target>       </trans-unit>
        <trans-unit id="746" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteEntityRef(System.String)">
          <source>When overridden in a derived class, writes out an entity reference as <ph id="ph1">&lt;see langword="&amp;amp;name;" /&gt;</ph>.</source>
          <target state="translated">При переопределении в производном классе записывает ссылку на сущность в виде <ph id="ph1">&lt;see langword="&amp;amp;name;" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="747" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteEntityRef(System.String)">
          <source>For the asynchronous version of this method, see <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteEntityRefAsync%2A&gt;</ph>.</source>
          <target state="translated">Асинхронная версия данного метода, в разделе <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteEntityRefAsync%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="748" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteEntityRef(System.String)">
          <source>The following example writes an XML file representing a book.</source>
          <target state="translated">Следующий пример записывает XML-файл, представляющий книгу.</target>       </trans-unit>
        <trans-unit id="749" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteEntityRef(System.String)">
          <source><ph id="ph1">&lt;paramref name="name" /&gt;</ph> is either <ph id="ph2">&lt;see langword="null" /&gt;</ph> or <ph id="ph3">&lt;see langword="String.Empty" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="name" /&gt;</ph> имеет значение <ph id="ph2">&lt;see langword="null" /&gt;</ph> или <ph id="ph3">&lt;see langword="String.Empty" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="750" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteEntityRef(System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">Метод <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> вызван перед завершением предыдущей асинхронной операции.</target>       </trans-unit>
        <trans-unit id="751" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteEntityRef(System.String)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">В этом случае возникает исключение <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> с сообщением "Асинхронная операция уже выполняется".</target>       </trans-unit>
        <trans-unit id="752" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteEntityRefAsync(System.String)">
          <source>The name of the entity reference.</source>
          <target state="translated">Имя ссылки на сущность.</target>       </trans-unit>
        <trans-unit id="753" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteEntityRefAsync(System.String)">
          <source>Asynchronously writes out an entity reference as <ph id="ph1">&lt;see langword="&amp;amp;name;" /&gt;</ph>.</source>
          <target state="translated">Асинхронно записывает ссылку на сущность в виде <ph id="ph1">&lt;see langword="&amp;amp;name;" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="754" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteEntityRefAsync(System.String)">
          <source>The task that represents the asynchronous <ph id="ph1">&lt;see langword="WriteEntityRef" /&gt;</ph> operation.</source>
          <target state="translated">Задача, представляющая асинхронную операцию <ph id="ph1">&lt;see langword="WriteEntityRef" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="755" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteEntityRefAsync(System.String)">
          <source>This is the asynchronous version of <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteEntityRef%2A&gt;</ph>, with the same functionality.</source>
          <target state="translated">Это асинхронная версия объекта <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteEntityRef%2A&gt;</ph>, с той же функции.</target>       </trans-unit>
        <trans-unit id="756" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteEntityRefAsync(System.String)">
          <source>To use this method, you must set the <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.Async%2A&gt;</ph> flag to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">Чтобы использовать этот метод, необходимо задать <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.Async%2A&gt;</ph> флаг <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="757" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteEntityRefAsync(System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> asynchronous method was called without setting the <ph id="ph2">&lt;see cref="P:System.Xml.XmlWriterSettings.Async" /&gt;</ph> flag to <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Асинхронный метод <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> вызван без присваивания флагу <ph id="ph2">&lt;see cref="P:System.Xml.XmlWriterSettings.Async" /&gt;</ph> значения <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="758" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteEntityRefAsync(System.String)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</source>
          <target state="translated">В этом случае вызывается исключение <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> с сообщением "Задайте параметру XmlWriterSettings.Async значение true, если вы хотите использовать асинхронные методы".</target>       </trans-unit>
        <trans-unit id="759" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteFullEndElement">
          <source>When overridden in a derived class, closes one element and pops the corresponding namespace scope.</source>
          <target state="translated">Когда переопределено в производном классе, закрывает один элемент и извлекает из стека область видимости соответствующего пространства имен.</target>       </trans-unit>
        <trans-unit id="760" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteFullEndElement">
          <source>This method always writes the full end tag.</source>
          <target state="translated">Этот метод всегда записывает полный закрывающий тег.</target>       </trans-unit>
        <trans-unit id="761" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteFullEndElement">
          <source>This is useful when dealing with elements that must include a full end tag.</source>
          <target state="translated">Это полезно при работе с элементами, которые должен содержать полный закрывающий тег.</target>       </trans-unit>
        <trans-unit id="762" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteFullEndElement">
          <source>For example, browsers expect HTML script blocks to be closed with "<ph id="ph1">\&lt;</ph>/script&gt;".</source>
          <target state="translated">Например, браузеры ожидают, что блоки скриптов HTML будет закрыта с « <ph id="ph1">\&lt;</ph> /script &gt;».</target>       </trans-unit>
        <trans-unit id="763" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteFullEndElement">
          <source>For the asynchronous version of this method, see <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteFullEndElementAsync%2A&gt;</ph>.</source>
          <target state="translated">Асинхронная версия данного метода, в разделе <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteFullEndElementAsync%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="764" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteFullEndElement">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteEndElement%2A&gt;</ph> and the <ph id="ph2">&lt;xref:System.Xml.XmlWriter.WriteFullEndElement%2A&gt;</ph> methods.</source>
          <target state="translated">В следующем примере используется <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteEndElement%2A&gt;</ph> и <ph id="ph2">&lt;xref:System.Xml.XmlWriter.WriteFullEndElement%2A&gt;</ph> методы.</target>       </trans-unit>
        <trans-unit id="765" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteFullEndElement">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">Метод <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> вызван перед завершением предыдущей асинхронной операции.</target>       </trans-unit>
        <trans-unit id="766" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteFullEndElement">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">В этом случае возникает исключение <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> с сообщением "Асинхронная операция уже выполняется".</target>       </trans-unit>
        <trans-unit id="767" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteFullEndElementAsync">
          <source>Asynchronously closes one element and pops the corresponding namespace scope.</source>
          <target state="translated">Асинхронно закрывает один элемент и извлекает из стека область видимости соответствующего пространства имен.</target>       </trans-unit>
        <trans-unit id="768" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteFullEndElementAsync">
          <source>The task that represents the asynchronous <ph id="ph1">&lt;see langword="WriteFullEndElement" /&gt;</ph> operation.</source>
          <target state="translated">Задача, представляющая асинхронную операцию <ph id="ph1">&lt;see langword="WriteFullEndElement" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="769" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteFullEndElementAsync">
          <source>This is the asynchronous version of <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteFullEndElement%2A&gt;</ph>, with the same functionality.</source>
          <target state="translated">Это асинхронная версия объекта <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteFullEndElement%2A&gt;</ph>, с той же функции.</target>       </trans-unit>
        <trans-unit id="770" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteFullEndElementAsync">
          <source>To use this method, you must set the <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.Async%2A&gt;</ph> flag to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">Чтобы использовать этот метод, необходимо задать <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.Async%2A&gt;</ph> флаг <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="771" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteFullEndElementAsync">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> asynchronous method was called without setting the <ph id="ph2">&lt;see cref="P:System.Xml.XmlWriterSettings.Async" /&gt;</ph> flag to <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Асинхронный метод <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> вызван без присваивания флагу <ph id="ph2">&lt;see cref="P:System.Xml.XmlWriterSettings.Async" /&gt;</ph> значения <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="772" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteFullEndElementAsync">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</source>
          <target state="translated">В этом случае вызывается исключение <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> с сообщением "Задайте параметру XmlWriterSettings.Async значение true, если вы хотите использовать асинхронные методы".</target>       </trans-unit>
        <trans-unit id="773" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteName(System.String)">
          <source>The name to write.</source>
          <target state="translated">Записываемое имя.</target>       </trans-unit>
        <trans-unit id="774" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteName(System.String)">
          <source>When overridden in a derived class, writes out the specified name, ensuring it is a valid name according to the W3C XML 1.0 recommendation (<ph id="ph1">http://www.w3.org/TR/1998/REC-xml-19980210#NT-Name)</ph>.</source>
          <target state="translated">Когда переопределено в производном классе, записывает указанное имя, гарантируя его допустимость согласно рекомендации W3C по языку XML версии 1.0 (<ph id="ph1">http://www.w3.org/TR/1998/REC-xml-19980210#NT-Name)</ph>.</target>       </trans-unit>
        <trans-unit id="775" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteName(System.String)">
          <source>If <ph id="ph1">&lt;xref:System.Xml.XmlTextWriter.Namespaces%2A&gt;</ph> is set to <ph id="ph2">`true`</ph>, <ph id="ph3">`WriteName`</ph> also checks that the name is also valid according to the W3C Namespaces in XML recommendation.</source>
          <target state="translated">Если <ph id="ph1">&lt;xref:System.Xml.XmlTextWriter.Namespaces%2A&gt;</ph> равно <ph id="ph2">`true`</ph>, <ph id="ph3">`WriteName`</ph> также проверяет имя на допустимость в соответствии с пространства имен W3C в рекомендации XML.</target>       </trans-unit>
        <trans-unit id="776" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteName(System.String)">
          <source>For the asynchronous version of this method, see <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteNameAsync%2A&gt;</ph>.</source>
          <target state="translated">Асинхронная версия данного метода, в разделе <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteNameAsync%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="777" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteName(System.String)">
          <source><ph id="ph1">&lt;paramref name="name" /&gt;</ph> is not a valid XML name; or <ph id="ph2">&lt;paramref name="name" /&gt;</ph> is either <ph id="ph3">&lt;see langword="null" /&gt;</ph> or <ph id="ph4">&lt;see langword="String.Empty" /&gt;</ph>.</source>
          <target state="translated">Параметр <ph id="ph1">&lt;paramref name="name" /&gt;</ph> не является допустимым именем XML; или значение параметра <ph id="ph2">&lt;paramref name="name" /&gt;</ph> — <ph id="ph3">&lt;see langword="null" /&gt;</ph> или <ph id="ph4">&lt;see langword="String.Empty" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="778" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteName(System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">Метод <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> вызван перед завершением предыдущей асинхронной операции.</target>       </trans-unit>
        <trans-unit id="779" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteName(System.String)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">В этом случае возникает исключение <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> с сообщением "Асинхронная операция уже выполняется".</target>       </trans-unit>
        <trans-unit id="780" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteNameAsync(System.String)">
          <source>The name to write.</source>
          <target state="translated">Записываемое имя.</target>       </trans-unit>
        <trans-unit id="781" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteNameAsync(System.String)">
          <source>Asynchronously writes out the specified name, ensuring it is a valid name according to the W3C XML 1.0 recommendation (<ph id="ph1">http://www.w3.org/TR/1998/REC-xml-19980210#NT-Name)</ph>.</source>
          <target state="translated">Асинхронно записывает указанное имя, гарантируя его допустимость согласно рекомендации W3C по языку XML версии 1.0 (<ph id="ph1">http://www.w3.org/TR/1998/REC-xml-19980210#NT-Name)</ph>.</target>       </trans-unit>
        <trans-unit id="782" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteNameAsync(System.String)">
          <source>The task that represents the asynchronous <ph id="ph1">&lt;see langword="WriteName" /&gt;</ph> operation.</source>
          <target state="translated">Задача, представляющая асинхронную операцию <ph id="ph1">&lt;see langword="WriteName" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="783" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteNameAsync(System.String)">
          <source>This is the asynchronous version of <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteName%2A&gt;</ph>, with the same functionality.</source>
          <target state="translated">Это асинхронная версия объекта <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteName%2A&gt;</ph>, с той же функции.</target>       </trans-unit>
        <trans-unit id="784" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteNameAsync(System.String)">
          <source>To use this method, you must set the <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.Async%2A&gt;</ph> flag to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">Чтобы использовать этот метод, необходимо задать <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.Async%2A&gt;</ph> флаг <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="785" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteNameAsync(System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> asynchronous method was called without setting the <ph id="ph2">&lt;see cref="P:System.Xml.XmlWriterSettings.Async" /&gt;</ph> flag to <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Асинхронный метод <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> вызван без присваивания флагу <ph id="ph2">&lt;see cref="P:System.Xml.XmlWriterSettings.Async" /&gt;</ph> значения <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="786" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteNameAsync(System.String)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</source>
          <target state="translated">В этом случае вызывается исключение <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> с сообщением "Задайте параметру XmlWriterSettings.Async значение true, если вы хотите использовать асинхронные методы".</target>       </trans-unit>
        <trans-unit id="787" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteNmToken(System.String)">
          <source>The name to write.</source>
          <target state="translated">Записываемое имя.</target>       </trans-unit>
        <trans-unit id="788" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteNmToken(System.String)">
          <source>When overridden in a derived class, writes out the specified name, ensuring it is a valid NmToken according to the W3C XML 1.0 recommendation (<ph id="ph1">http://www.w3.org/TR/1998/REC-xml-19980210#NT-Name)</ph>.</source>
          <target state="translated">Когда переопределено в производном классе, записывает указанное имя, гарантируя, что оно является допустимым NmToken согласно рекомендации W3C по языку XML версии 1.0 (<ph id="ph1">http://www.w3.org/TR/1998/REC-xml-19980210#NT-Name)</ph>.</target>       </trans-unit>
        <trans-unit id="789" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteNmToken(System.String)">
          <source>For the asynchronous version of this method, see <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteNmTokenAsync%2A&gt;</ph>.</source>
          <target state="translated">Асинхронная версия данного метода, в разделе <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteNmTokenAsync%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="790" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteNmToken(System.String)">
          <source><ph id="ph1">&lt;paramref name="name" /&gt;</ph> is not a valid NmToken; or <ph id="ph2">&lt;paramref name="name" /&gt;</ph> is either <ph id="ph3">&lt;see langword="null" /&gt;</ph> or <ph id="ph4">&lt;see langword="String.Empty" /&gt;</ph>.</source>
          <target state="translated">Параметр <ph id="ph1">&lt;paramref name="name" /&gt;</ph> не является допустимым NmToken; или значение параметра <ph id="ph2">&lt;paramref name="name" /&gt;</ph> — <ph id="ph3">&lt;see langword="null" /&gt;</ph> или <ph id="ph4">&lt;see langword="String.Empty" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="791" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteNmToken(System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">Метод <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> вызван перед завершением предыдущей асинхронной операции.</target>       </trans-unit>
        <trans-unit id="792" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteNmToken(System.String)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">В этом случае возникает исключение <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> с сообщением "Асинхронная операция уже выполняется".</target>       </trans-unit>
        <trans-unit id="793" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteNmTokenAsync(System.String)">
          <source>The name to write.</source>
          <target state="translated">Записываемое имя.</target>       </trans-unit>
        <trans-unit id="794" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteNmTokenAsync(System.String)">
          <source>Asynchronously writes out the specified name, ensuring it is a valid NmToken according to the W3C XML 1.0 recommendation (<ph id="ph1">http://www.w3.org/TR/1998/REC-xml-19980210#NT-Name)</ph>.</source>
          <target state="translated">Асинхронно записывает указанное имя, гарантируя, что оно является допустимым NmToken согласно рекомендации W3C по языку XML версии 1.0 (<ph id="ph1">http://www.w3.org/TR/1998/REC-xml-19980210#NT-Name)</ph>.</target>       </trans-unit>
        <trans-unit id="795" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteNmTokenAsync(System.String)">
          <source>The task that represents the asynchronous <ph id="ph1">&lt;see langword="WriteNmToken" /&gt;</ph> operation.</source>
          <target state="translated">Задача, представляющая асинхронную операцию <ph id="ph1">&lt;see langword="WriteNmToken" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="796" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteNmTokenAsync(System.String)">
          <source>This is the asynchronous version of <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteNmToken%2A&gt;</ph>, with the same functionality.</source>
          <target state="translated">Это асинхронная версия объекта <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteNmToken%2A&gt;</ph>, с той же функции.</target>       </trans-unit>
        <trans-unit id="797" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteNmTokenAsync(System.String)">
          <source>To use this method, you must set the <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.Async%2A&gt;</ph> flag to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">Чтобы использовать этот метод, необходимо задать <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.Async%2A&gt;</ph> флаг <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="798" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteNmTokenAsync(System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> asynchronous method was called without setting the <ph id="ph2">&lt;see cref="P:System.Xml.XmlWriterSettings.Async" /&gt;</ph> flag to <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Асинхронный метод <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> вызван без присваивания флагу <ph id="ph2">&lt;see cref="P:System.Xml.XmlWriterSettings.Async" /&gt;</ph> значения <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="799" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteNmTokenAsync(System.String)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</source>
          <target state="translated">В этом случае вызывается исключение <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> с сообщением "Задайте параметру XmlWriterSettings.Async значение true, если вы хотите использовать асинхронные методы".</target>       </trans-unit>
        <trans-unit id="800" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlWriter">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">Метод <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> вызван перед завершением предыдущей асинхронной операции.</target>       </trans-unit>
        <trans-unit id="801" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlWriter">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">В этом случае возникает исключение <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> с сообщением "Асинхронная операция уже выполняется".</target>       </trans-unit>
        <trans-unit id="802" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlWriter">
          <source>Copies everything from the source object to the current writer instance.</source>
          <target state="translated">Копирует все данные исходного объекта в текущий экземпляр средства записи.</target>       </trans-unit>
        <trans-unit id="803" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>For the asynchronous version of this method, see <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteNodeAsync%2A&gt;</ph>.</source>
          <target state="translated">Асинхронная версия данного метода, в разделе <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteNodeAsync%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="804" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteNode(System.Xml.XmlReader,System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> to read from.</source>
          <target state="translated">Экземпляр <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>, из которого выполняется чтение.</target>       </trans-unit>
        <trans-unit id="805" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteNode(System.Xml.XmlReader,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to copy the default attributes from the <ph id="ph2">&lt;see langword="XmlReader" /&gt;</ph>; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Значение <ph id="ph1">&lt;see langword="true" /&gt;</ph>, чтобы скопировать атрибуты по умолчанию из <ph id="ph2">&lt;see langword="XmlReader" /&gt;</ph>; в противном случае — значение <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="806" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteNode(System.Xml.XmlReader,System.Boolean)">
          <source>When overridden in a derived class, copies everything from the reader to the writer and moves the reader to the start of the next sibling.</source>
          <target state="translated">Когда переопределено в производном классе, копирует все данные из средства чтения в средство записи и перемещает средство чтения к началу следующего элемента того же уровня.</target>       </trans-unit>
        <trans-unit id="807" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteNode(System.Xml.XmlReader,System.Boolean)">
          <source>The following table shows the supported node types for this method.</source>
          <target state="translated">В следующей таблице показаны поддерживаемые типы узлов для этого метода.</target>       </trans-unit>
        <trans-unit id="808" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteNode(System.Xml.XmlReader,System.Boolean)">
          <source>NodeType</source>
          <target state="translated">NodeType</target>       </trans-unit>
        <trans-unit id="809" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteNode(System.Xml.XmlReader,System.Boolean)">
          <source>WriteNode Behavior</source>
          <target state="translated">Поведение WriteNode</target>       </trans-unit>
        <trans-unit id="810" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteNode(System.Xml.XmlReader,System.Boolean)">
          <source>Writes out all the nodes irrespective of type.</source>
          <target state="translated">Записывает все узлы независимо от типа.</target>       </trans-unit>
        <trans-unit id="811" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteNode(System.Xml.XmlReader,System.Boolean)">
          <source>That is, the writer consumes the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> and writes out all the nodes read including attributes, processing instructions, comments, and so on.</source>
          <target state="translated">То есть средство записи потребляет <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> и чтения записывает все узлы, включая атрибуты, инструкций обработки, комментарии и т. д.</target>       </trans-unit>
        <trans-unit id="812" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteNode(System.Xml.XmlReader,System.Boolean)">
          <source>This situation occurs when the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> is in an initial state.</source>
          <target state="translated">Такая ситуация возникает, когда <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> находится в начальном состоянии.</target>       </trans-unit>
        <trans-unit id="813" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteNode(System.Xml.XmlReader,System.Boolean)">
          <source>(The <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadState%2A?displayProperty=nameWithType&gt;</ph> property returns <ph id="ph2">`ReaderState.Initial`</ph>).</source>
          <target state="translated">( <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadState%2A?displayProperty=nameWithType&gt;</ph> Возвращает <ph id="ph2">`ReaderState.Initial`</ph>).</target>       </trans-unit>
        <trans-unit id="814" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteNode(System.Xml.XmlReader,System.Boolean)">
          <source>Writes out the element node and any attribute nodes.</source>
          <target state="translated">Записывает узел элемента и любые узлы атрибутов.</target>       </trans-unit>
        <trans-unit id="815" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteNode(System.Xml.XmlReader,System.Boolean)">
          <source>No operation.</source>
          <target state="translated">Нет операции.</target>       </trans-unit>
        <trans-unit id="816" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteNode(System.Xml.XmlReader,System.Boolean)">
          <source>Use <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteStartAttribute%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Xml.XmlWriter.WriteAttributeString%2A&gt;</ph> instead.</source>
          <target state="translated">Вместо него следует использовать элементы <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteStartAttribute%2A&gt;</ph> или <ph id="ph2">&lt;xref:System.Xml.XmlWriter.WriteAttributeString%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="817" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteNode(System.Xml.XmlReader,System.Boolean)">
          <source>Writes out the text node.</source>
          <target state="translated">Записывает текстовый узел.</target>       </trans-unit>
        <trans-unit id="818" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteNode(System.Xml.XmlReader,System.Boolean)">
          <source>Writes out the CDATA section node.</source>
          <target state="translated">Записывает узел раздела CDATA.</target>       </trans-unit>
        <trans-unit id="819" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteNode(System.Xml.XmlReader,System.Boolean)">
          <source>Writes out the entity reference node.</source>
          <target state="translated">Записывает узел ссылки на сущность.</target>       </trans-unit>
        <trans-unit id="820" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteNode(System.Xml.XmlReader,System.Boolean)">
          <source>Writes out the processing instruction node.</source>
          <target state="translated">Записывает узел инструкции по обработке.</target>       </trans-unit>
        <trans-unit id="821" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteNode(System.Xml.XmlReader,System.Boolean)">
          <source>Writes out the comment node.</source>
          <target state="translated">Записывает узел комментария.</target>       </trans-unit>
        <trans-unit id="822" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteNode(System.Xml.XmlReader,System.Boolean)">
          <source>Writes out the document type node.</source>
          <target state="translated">Записывает узел типа документа.</target>       </trans-unit>
        <trans-unit id="823" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteNode(System.Xml.XmlReader,System.Boolean)">
          <source>Writes out the significant white space node.</source>
          <target state="translated">Записывает узел значащим пробелом.</target>       </trans-unit>
        <trans-unit id="824" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteNode(System.Xml.XmlReader,System.Boolean)">
          <source>Writes out the white space node.</source>
          <target state="translated">Считывает узел пустого пространства.</target>       </trans-unit>
        <trans-unit id="825" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteNode(System.Xml.XmlReader,System.Boolean)">
          <source>Writes out the end element tag.</source>
          <target state="translated">Записывает закрывающий тег элемента.</target>       </trans-unit>
        <trans-unit id="826" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteNode(System.Xml.XmlReader,System.Boolean)">
          <source>No operation.</source>
          <target state="translated">Нет операции.</target>       </trans-unit>
        <trans-unit id="827" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteNode(System.Xml.XmlReader,System.Boolean)">
          <source>Writes out the XML declaration node.</source>
          <target state="translated">Записывает узел объявления XML.</target>       </trans-unit>
        <trans-unit id="828" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteNode(System.Xml.XmlReader,System.Boolean)">
          <source>If the reader is in the initial state, this method moves the reader to the end of file.</source>
          <target state="translated">Если средство чтения находится в начальном состоянии, этот метод перемещает средство чтения в конец файла.</target>       </trans-unit>
        <trans-unit id="829" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteNode(System.Xml.XmlReader,System.Boolean)">
          <source>If the reader is already at the end of file or in a closed state, this method is non-operational.</source>
          <target state="translated">Если средство чтения уже находится в конце файла или в закрытом состоянии, этот метод не выполняет никаких действий.</target>       </trans-unit>
        <trans-unit id="830" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteNode(System.Xml.XmlReader,System.Boolean)">
          <source>The following C# code copies an entire XML input document to the console:</source>
          <target state="translated">Следующий код C# Копирует весь входного XML-документа на консоль:</target>       </trans-unit>
        <trans-unit id="831" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteNode(System.Xml.XmlReader,System.Boolean)">
          <source>If you have moved off the root node and are positioned elsewhere in the document the following C# example correctly writes out the nodes.</source>
          <target state="translated">В следующем примере C# правильно записывает узлы, если были перемещены из корневого узла и расположены в другом месте в документе.</target>       </trans-unit>
        <trans-unit id="832" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteNode(System.Xml.XmlReader,System.Boolean)">
          <source>If the reader is configured to return white space and the writer has is configured to indent output, <ph id="ph1">`WriteNode`</ph> may produce strange output.</source>
          <target state="translated">Если средство чтения настроено для возвращения пустого пространства и средство записи настроена для отступа выходных данных, <ph id="ph1">`WriteNode`</ph> может выдать неверные выходные данные.</target>       </trans-unit>
        <trans-unit id="833" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteNode(System.Xml.XmlReader,System.Boolean)">
          <source>You will essentially be getting double formatting.</source>
          <target state="translated">Вам будет получено двойное форматирование.</target>       </trans-unit>
        <trans-unit id="834" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteNode(System.Xml.XmlReader,System.Boolean)">
          <source>For the asynchronous version of this method, see <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteNodeAsync%2A&gt;</ph>.</source>
          <target state="translated">Асинхронная версия данного метода, в разделе <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteNodeAsync%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="835" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteNode(System.Xml.XmlReader,System.Boolean)">
          <source>The following example writes the first and last book nodes out to the console.</source>
          <target state="translated">Следующий пример записывает узлы первой и последней книг на консоль.</target>       </trans-unit>
        <trans-unit id="836" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteNode(System.Xml.XmlReader,System.Boolean)">
          <source>The example uses the file, <ph id="ph1">`books.xml`</ph>, as input.</source>
          <target state="translated">В примере используется файл <ph id="ph1">`books.xml`</ph>, в качестве входных данных.</target>       </trans-unit>
        <trans-unit id="837" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteNode(System.Xml.XmlReader,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="reader" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Свойство <ph id="ph1">&lt;paramref name="reader" /&gt;</ph> имеет значение <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="838" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteNode(System.Xml.XmlReader,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="reader" /&gt;</ph> contains invalid characters.</source>
          <target state="translated">Параметр <ph id="ph1">&lt;paramref name="reader" /&gt;</ph> содержит недопустимые символы.</target>       </trans-unit>
        <trans-unit id="839" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteNode(System.Xml.XmlReader,System.Boolean)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">Метод <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> вызван перед завершением предыдущей асинхронной операции.</target>       </trans-unit>
        <trans-unit id="840" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteNode(System.Xml.XmlReader,System.Boolean)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">В этом случае возникает исключение <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> с сообщением "Асинхронная операция уже выполняется".</target>       </trans-unit>
        <trans-unit id="841" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteNode(System.Xml.XPath.XPathNavigator,System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XPath.XPathNavigator" /&gt;</ph> to copy from.</source>
          <target state="translated">Элемент <ph id="ph1">&lt;see cref="T:System.Xml.XPath.XPathNavigator" /&gt;</ph>, из которого копируются данные.</target>       </trans-unit>
        <trans-unit id="842" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteNode(System.Xml.XPath.XPathNavigator,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to copy the default attributes; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Значение <ph id="ph1">&lt;see langword="true" /&gt;</ph> — копирование атрибутов по умолчанию; в противном случае — <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="843" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteNode(System.Xml.XPath.XPathNavigator,System.Boolean)">
          <source>Copies everything from the <ph id="ph1">&lt;see cref="T:System.Xml.XPath.XPathNavigator" /&gt;</ph> object to the writer.</source>
          <target state="translated">Копирует все из объекта <ph id="ph1">&lt;see cref="T:System.Xml.XPath.XPathNavigator" /&gt;</ph> в средство записи.</target>       </trans-unit>
        <trans-unit id="844" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteNode(System.Xml.XPath.XPathNavigator,System.Boolean)">
          <source>The position of the <ph id="ph1">&lt;see cref="T:System.Xml.XPath.XPathNavigator" /&gt;</ph> remains unchanged.</source>
          <target state="translated">Позиция <ph id="ph1">&lt;see cref="T:System.Xml.XPath.XPathNavigator" /&gt;</ph> остается неизменной.</target>       </trans-unit>
        <trans-unit id="845" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteNode(System.Xml.XPath.XPathNavigator,System.Boolean)">
          <source>The following table shows the supported <ph id="ph1">`XPath`</ph> node types for this method.</source>
          <target state="translated">В следующей таблице показаны поддерживаемые <ph id="ph1">`XPath`</ph> типы узлов для этого метода.</target>       </trans-unit>
        <trans-unit id="846" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteNode(System.Xml.XPath.XPathNavigator,System.Boolean)">
          <source>XPathNodeType</source>
          <target state="translated">XPathNodeType</target>       </trans-unit>
        <trans-unit id="847" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteNode(System.Xml.XPath.XPathNavigator,System.Boolean)">
          <source>WriteNode Behavior</source>
          <target state="translated">Поведение WriteNode</target>       </trans-unit>
        <trans-unit id="848" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteNode(System.Xml.XPath.XPathNavigator,System.Boolean)">
          <source>Writes out all the nodes irrespective of type.</source>
          <target state="translated">Записывает все узлы независимо от типа.</target>       </trans-unit>
        <trans-unit id="849" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteNode(System.Xml.XPath.XPathNavigator,System.Boolean)">
          <source>That is, the writer consumes the <ph id="ph1">&lt;xref:System.Xml.XPath.XPathNavigator&gt;</ph> and writes out all the nodes from the root node (including attributes, processing instructions, comments and so on.)</source>
          <target state="translated">То есть средство записи потребляет <ph id="ph1">&lt;xref:System.Xml.XPath.XPathNavigator&gt;</ph> и записывает все узлы из корневого узла (включая атрибуты, инструкции по обработке, комментарии и т. д.)</target>       </trans-unit>
        <trans-unit id="850" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteNode(System.Xml.XPath.XPathNavigator,System.Boolean)">
          <source>Writes out the element node and any attribute nodes.</source>
          <target state="translated">Записывает узел элемента и любые узлы атрибутов.</target>       </trans-unit>
        <trans-unit id="851" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteNode(System.Xml.XPath.XPathNavigator,System.Boolean)">
          <source>No operation.</source>
          <target state="translated">Нет операции.</target>       </trans-unit>
        <trans-unit id="852" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteNode(System.Xml.XPath.XPathNavigator,System.Boolean)">
          <source>Use <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteStartAttribute%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Xml.XmlWriter.WriteAttributeString%2A&gt;</ph> instead.</source>
          <target state="translated">Вместо него следует использовать элементы <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteStartAttribute%2A&gt;</ph> или <ph id="ph2">&lt;xref:System.Xml.XmlWriter.WriteAttributeString%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="853" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteNode(System.Xml.XPath.XPathNavigator,System.Boolean)">
          <source>Writes out the text node.</source>
          <target state="translated">Записывает текстовый узел.</target>       </trans-unit>
        <trans-unit id="854" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteNode(System.Xml.XPath.XPathNavigator,System.Boolean)">
          <source>No operation.</source>
          <target state="translated">Нет операции.</target>       </trans-unit>
        <trans-unit id="855" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteNode(System.Xml.XPath.XPathNavigator,System.Boolean)">
          <source>Use the <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteStartAttribute%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Xml.XmlWriter.WriteAttributeString%2A&gt;</ph> method to write the namespace declaration.</source>
          <target state="translated">Используйте <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteStartAttribute%2A&gt;</ph> или <ph id="ph2">&lt;xref:System.Xml.XmlWriter.WriteAttributeString%2A&gt;</ph> метода для записи в объявлении пространства имен.</target>       </trans-unit>
        <trans-unit id="856" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteNode(System.Xml.XPath.XPathNavigator,System.Boolean)">
          <source>Writes out the processing instruction node.</source>
          <target state="translated">Записывает узел инструкции по обработке.</target>       </trans-unit>
        <trans-unit id="857" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteNode(System.Xml.XPath.XPathNavigator,System.Boolean)">
          <source>Writes out the comment node.</source>
          <target state="translated">Записывает узел комментария.</target>       </trans-unit>
        <trans-unit id="858" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteNode(System.Xml.XPath.XPathNavigator,System.Boolean)">
          <source>Writes out the significant white space node.</source>
          <target state="translated">Записывает узел значащим пробелом.</target>       </trans-unit>
        <trans-unit id="859" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteNode(System.Xml.XPath.XPathNavigator,System.Boolean)">
          <source>Writes out the white space node.</source>
          <target state="translated">Считывает узел пустого пространства.</target>       </trans-unit>
        <trans-unit id="860" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteNode(System.Xml.XPath.XPathNavigator,System.Boolean)">
          <source>For the asynchronous version of this method, see <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteNodeAsync%2A&gt;</ph>.</source>
          <target state="translated">Асинхронная версия данного метода, в разделе <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteNodeAsync%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="861" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteNode(System.Xml.XPath.XPathNavigator,System.Boolean)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteNode%2A&gt;</ph> method to copy the first book node from a document and write it to the console.</source>
          <target state="translated">В следующем примере используется <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteNode%2A&gt;</ph> способ скопировать первый узел книги из документа и вывод на консоль.</target>       </trans-unit>
        <trans-unit id="862" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteNode(System.Xml.XPath.XPathNavigator,System.Boolean)">
          <source>The example uses the books.xml file as input.</source>
          <target state="translated">В примере используется файл books.xml в качестве входных данных.</target>       </trans-unit>
        <trans-unit id="863" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteNode(System.Xml.XPath.XPathNavigator,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="navigator" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Свойство <ph id="ph1">&lt;paramref name="navigator" /&gt;</ph> имеет значение <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="864" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteNode(System.Xml.XPath.XPathNavigator,System.Boolean)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">Метод <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> вызван перед завершением предыдущей асинхронной операции.</target>       </trans-unit>
        <trans-unit id="865" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteNode(System.Xml.XPath.XPathNavigator,System.Boolean)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">В этом случае возникает исключение <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> с сообщением "Асинхронная операция уже выполняется".</target>       </trans-unit>
        <trans-unit id="866" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlWriter">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> asynchronous method was called without setting the <ph id="ph2">&lt;see cref="P:System.Xml.XmlWriterSettings.Async" /&gt;</ph> flag to <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Асинхронный метод <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> вызван без присваивания флагу <ph id="ph2">&lt;see cref="P:System.Xml.XmlWriterSettings.Async" /&gt;</ph> значения <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="867" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlWriter">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</source>
          <target state="translated">В этом случае вызывается исключение <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> с сообщением "Задайте параметру XmlWriterSettings.Async значение true, если вы хотите использовать асинхронные методы".</target>       </trans-unit>
        <trans-unit id="868" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlWriter">
          <source>Asynchronously copies everything from the source object to the current writer instance.</source>
          <target state="translated">Асинхронно копирует все данные исходного объекта в текущий экземпляр средства записи.</target>       </trans-unit>
        <trans-unit id="869" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>This is the asynchronous version of <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteNode%2A&gt;</ph>, with the same functionality.</source>
          <target state="translated">Это асинхронная версия объекта <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteNode%2A&gt;</ph>, с той же функции.</target>       </trans-unit>
        <trans-unit id="870" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>To use this method, you must set the <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.Async%2A&gt;</ph> flag to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">Чтобы использовать этот метод, необходимо задать <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.Async%2A&gt;</ph> флаг <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="871" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteNodeAsync(System.Xml.XmlReader,System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> to read from.</source>
          <target state="translated">Экземпляр <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>, из которого выполняется чтение.</target>       </trans-unit>
        <trans-unit id="872" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteNodeAsync(System.Xml.XmlReader,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to copy the default attributes from the <ph id="ph2">&lt;see langword="XmlReader" /&gt;</ph>; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Значение <ph id="ph1">&lt;see langword="true" /&gt;</ph>, чтобы скопировать атрибуты по умолчанию из <ph id="ph2">&lt;see langword="XmlReader" /&gt;</ph>; в противном случае — значение <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="873" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteNodeAsync(System.Xml.XmlReader,System.Boolean)">
          <source>Asynchronously copies everything from the reader to the writer and moves the reader to the start of the next sibling.</source>
          <target state="translated">Асинхронно копирует все данные из средства чтения в средство записи и перемещает средство чтения к началу следующего элемента того же уровня.</target>       </trans-unit>
        <trans-unit id="874" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteNodeAsync(System.Xml.XmlReader,System.Boolean)">
          <source>The task that represents the asynchronous <ph id="ph1">&lt;see langword="WriteNode" /&gt;</ph> operation.</source>
          <target state="translated">Задача, представляющая асинхронную операцию <ph id="ph1">&lt;see langword="WriteNode" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="875" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteNodeAsync(System.Xml.XmlReader,System.Boolean)">
          <source>This is the asynchronous version of <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteNode%2A&gt;</ph>, with the same functionality.</source>
          <target state="translated">Это асинхронная версия объекта <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteNode%2A&gt;</ph>, с той же функции.</target>       </trans-unit>
        <trans-unit id="876" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteNodeAsync(System.Xml.XmlReader,System.Boolean)">
          <source>To use this method, you must set the <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.Async%2A&gt;</ph> flag to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">Чтобы использовать этот метод, необходимо задать <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.Async%2A&gt;</ph> флаг <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="877" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteNodeAsync(System.Xml.XmlReader,System.Boolean)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> asynchronous method was called without setting the <ph id="ph2">&lt;see cref="P:System.Xml.XmlWriterSettings.Async" /&gt;</ph> flag to <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Асинхронный метод <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> вызван без присваивания флагу <ph id="ph2">&lt;see cref="P:System.Xml.XmlWriterSettings.Async" /&gt;</ph> значения <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="878" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteNodeAsync(System.Xml.XmlReader,System.Boolean)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</source>
          <target state="translated">В этом случае вызывается исключение <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> с сообщением "Задайте параметру XmlWriterSettings.Async значение true, если вы хотите использовать асинхронные методы".</target>       </trans-unit>
        <trans-unit id="879" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteNodeAsync(System.Xml.XPath.XPathNavigator,System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XPath.XPathNavigator" /&gt;</ph> to copy from.</source>
          <target state="translated">Элемент <ph id="ph1">&lt;see cref="T:System.Xml.XPath.XPathNavigator" /&gt;</ph>, из которого копируются данные.</target>       </trans-unit>
        <trans-unit id="880" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteNodeAsync(System.Xml.XPath.XPathNavigator,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to copy the default attributes; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Значение <ph id="ph1">&lt;see langword="true" /&gt;</ph> — копирование атрибутов по умолчанию; в противном случае — <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="881" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteNodeAsync(System.Xml.XPath.XPathNavigator,System.Boolean)">
          <source>Asynchronously copies everything from the <ph id="ph1">&lt;see cref="T:System.Xml.XPath.XPathNavigator" /&gt;</ph> object to the writer.</source>
          <target state="translated">Асинхронно копирует все из объекта <ph id="ph1">&lt;see cref="T:System.Xml.XPath.XPathNavigator" /&gt;</ph> в средство записи.</target>       </trans-unit>
        <trans-unit id="882" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteNodeAsync(System.Xml.XPath.XPathNavigator,System.Boolean)">
          <source>The position of the <ph id="ph1">&lt;see cref="T:System.Xml.XPath.XPathNavigator" /&gt;</ph> remains unchanged.</source>
          <target state="translated">Позиция <ph id="ph1">&lt;see cref="T:System.Xml.XPath.XPathNavigator" /&gt;</ph> остается неизменной.</target>       </trans-unit>
        <trans-unit id="883" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteNodeAsync(System.Xml.XPath.XPathNavigator,System.Boolean)">
          <source>The task that represents the asynchronous <ph id="ph1">&lt;see langword="WriteNode" /&gt;</ph> operation.</source>
          <target state="translated">Задача, представляющая асинхронную операцию <ph id="ph1">&lt;see langword="WriteNode" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="884" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteNodeAsync(System.Xml.XPath.XPathNavigator,System.Boolean)">
          <source>This is the asynchronous version of <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteNode%2A&gt;</ph>, with the same functionality.</source>
          <target state="translated">Это асинхронная версия объекта <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteNode%2A&gt;</ph>, с той же функции.</target>       </trans-unit>
        <trans-unit id="885" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteNodeAsync(System.Xml.XPath.XPathNavigator,System.Boolean)">
          <source>To use this method, you must set the <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.Async%2A&gt;</ph> flag to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">Чтобы использовать этот метод, необходимо задать <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.Async%2A&gt;</ph> флаг <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="886" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteNodeAsync(System.Xml.XPath.XPathNavigator,System.Boolean)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> asynchronous method was called without setting the <ph id="ph2">&lt;see cref="P:System.Xml.XmlWriterSettings.Async" /&gt;</ph> flag to <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Асинхронный метод <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> вызван без присваивания флагу <ph id="ph2">&lt;see cref="P:System.Xml.XmlWriterSettings.Async" /&gt;</ph> значения <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="887" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteNodeAsync(System.Xml.XPath.XPathNavigator,System.Boolean)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</source>
          <target state="translated">В этом случае вызывается исключение <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> с сообщением "Задайте параметру XmlWriterSettings.Async значение true, если вы хотите использовать асинхронные методы".</target>       </trans-unit>
        <trans-unit id="888" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteProcessingInstruction(System.String,System.String)">
          <source>The name of the processing instruction.</source>
          <target state="translated">Имя инструкции по обработке.</target>       </trans-unit>
        <trans-unit id="889" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteProcessingInstruction(System.String,System.String)">
          <source>The text to include in the processing instruction.</source>
          <target state="translated">Текст, включаемый в инструкцию по обработке.</target>       </trans-unit>
        <trans-unit id="890" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteProcessingInstruction(System.String,System.String)">
          <source>When overridden in a derived class, writes out a processing instruction with a space between the name and text as follows: <ph id="ph1">&amp;lt;</ph>?name text?<ph id="ph2">&amp;gt;</ph>.</source>
          <target state="translated">При переопределении в производном классе считывает инструкцию обработки с пробелом между именем и текстом в следующем виде: <ph id="ph1">&amp;lt;</ph>?имя текст?<ph id="ph2">&amp;gt;</ph>.</target>       </trans-unit>
        <trans-unit id="891" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteProcessingInstruction(System.String,System.String)">
          <source>This method can be used to write the XML declaration (rather than <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteStartDocument%2A&gt;</ph>).</source>
          <target state="translated">Этот метод можно использовать для записи XML-декларация (а не <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteStartDocument%2A&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="892" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteProcessingInstruction(System.String,System.String)">
          <source>This could result in the encoding attribute being incorrectly written.</source>
          <target state="translated">Это может привести к неправильной записи атрибута кодировки.</target>       </trans-unit>
        <trans-unit id="893" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteProcessingInstruction(System.String,System.String)">
          <source>For example, the following C# code would result in an invalid XML document because the default encoding is UTF-8.</source>
          <target state="translated">Например следующий код C# приведет к недопустимый XML-документ, так как кодировка по умолчанию — UTF-8.</target>       </trans-unit>
        <trans-unit id="894" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteProcessingInstruction(System.String,System.String)">
          <source>If <ph id="ph1">`text`</ph> is either <ph id="ph2">`null`</ph> or <ph id="ph3">`String.Empty`</ph>, this method writes a <ph id="ph4">`ProcessingInstruction`</ph> with no data content, for example <ph id="ph5">\&lt;</ph>?name?&gt;.</source>
          <target state="translated">Если <ph id="ph1">`text`</ph> либо <ph id="ph2">`null`</ph> или <ph id="ph3">`String.Empty`</ph>, этот метод записывает <ph id="ph4">`ProcessingInstruction`</ph> без данных содержимого, например <ph id="ph5">\&lt;</ph>? имя? &gt;.</target>       </trans-unit>
        <trans-unit id="895" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteProcessingInstruction(System.String,System.String)">
          <source>If text contains an invalid sequence of "?&gt;", the <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> can either throw an <ph id="ph2">&lt;xref:System.ArgumentException&gt;</ph> (<ph id="ph3">&lt;xref:System.Xml.XmlTextWriter&gt;</ph> objects) or insert a space "?</source>
          <target state="translated">Если текст содержит недопустимую последовательность «? &gt;», <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> можно либо throw <ph id="ph2">&lt;xref:System.ArgumentException&gt;</ph> (<ph id="ph3">&lt;xref:System.Xml.XmlTextWriter&gt;</ph> объекты) или вставить пробел «?</target>       </trans-unit>
        <trans-unit id="896" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteProcessingInstruction(System.String,System.String)">
          <source>&gt;" to avoid writing invalid XML (<ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> objects created by the <ph id="ph2">&lt;xref:System.Xml.XmlWriter.Create%2A&gt;</ph> method).</source>
          <target state="translated">&gt;» позволяет предотвратить запись недопустимый XML-код (<ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> объектов, созданных <ph id="ph2">&lt;xref:System.Xml.XmlWriter.Create%2A&gt;</ph> метода).</target>       </trans-unit>
        <trans-unit id="897" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteProcessingInstruction(System.String,System.String)">
          <source>For the asynchronous version of this method, see <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteProcessingInstructionAsync%2A&gt;</ph>.</source>
          <target state="translated">Асинхронная версия данного метода, в разделе <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteProcessingInstructionAsync%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="898" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteProcessingInstruction(System.String,System.String)">
          <source>The following example writes an XML file representing a book.</source>
          <target state="translated">Следующий пример записывает XML-файл, представляющий книгу.</target>       </trans-unit>
        <trans-unit id="899" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteProcessingInstruction(System.String,System.String)">
          <source>The text would result in a non-well formed XML document.</source>
          <target state="translated">Текст приведет к неправильному формированию документа XML.</target>       </trans-unit>
        <trans-unit id="900" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteProcessingInstruction(System.String,System.String)">
          <source><ph id="ph1">&lt;paramref name="name" /&gt;</ph> is either <ph id="ph2">&lt;see langword="null" /&gt;</ph> or <ph id="ph3">&lt;see langword="String.Empty" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="name" /&gt;</ph> имеет значение <ph id="ph2">&lt;see langword="null" /&gt;</ph> или <ph id="ph3">&lt;see langword="String.Empty" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="901" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteProcessingInstruction(System.String,System.String)">
          <source>This method is being used to create an XML declaration after <ph id="ph1">&lt;see cref="M:System.Xml.XmlWriter.WriteStartDocument" /&gt;</ph> has already been called.</source>
          <target state="translated">Этот метод используется для создания XML-объявления после того, как метод <ph id="ph1">&lt;see cref="M:System.Xml.XmlWriter.WriteStartDocument" /&gt;</ph> уже вызван.</target>       </trans-unit>
        <trans-unit id="902" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteProcessingInstruction(System.String,System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">Метод <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> вызван перед завершением предыдущей асинхронной операции.</target>       </trans-unit>
        <trans-unit id="903" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteProcessingInstruction(System.String,System.String)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">В этом случае возникает исключение <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> с сообщением "Асинхронная операция уже выполняется".</target>       </trans-unit>
        <trans-unit id="904" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteProcessingInstructionAsync(System.String,System.String)">
          <source>The name of the processing instruction.</source>
          <target state="translated">Имя инструкции по обработке.</target>       </trans-unit>
        <trans-unit id="905" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteProcessingInstructionAsync(System.String,System.String)">
          <source>The text to include in the processing instruction.</source>
          <target state="translated">Текст, включаемый в инструкцию по обработке.</target>       </trans-unit>
        <trans-unit id="906" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteProcessingInstructionAsync(System.String,System.String)">
          <source>Asynchronously writes out a processing instruction with a space between the name and text as follows: <ph id="ph1">&amp;lt;</ph>?name text?<ph id="ph2">&amp;gt;</ph>.</source>
          <target state="translated">Асинхронно записывает инструкцию обработки с пробелом между именем и текстом в следующем виде: <ph id="ph1">&amp;lt;</ph>?имя текст?<ph id="ph2">&amp;gt;</ph>.</target>       </trans-unit>
        <trans-unit id="907" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteProcessingInstructionAsync(System.String,System.String)">
          <source>The task that represents the asynchronous <ph id="ph1">&lt;see langword="WriteProcessingInstruction" /&gt;</ph> operation.</source>
          <target state="translated">Задача, представляющая асинхронную операцию <ph id="ph1">&lt;see langword="WriteProcessingInstruction" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="908" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteProcessingInstructionAsync(System.String,System.String)">
          <source>This is the asynchronous version of <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteProcessingInstruction%2A&gt;</ph>, with the same functionality.</source>
          <target state="translated">Это асинхронная версия объекта <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteProcessingInstruction%2A&gt;</ph>, с той же функции.</target>       </trans-unit>
        <trans-unit id="909" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteProcessingInstructionAsync(System.String,System.String)">
          <source>To use this method, you must set the <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.Async%2A&gt;</ph> flag to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">Чтобы использовать этот метод, необходимо задать <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.Async%2A&gt;</ph> флаг <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="910" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteProcessingInstructionAsync(System.String,System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> asynchronous method was called without setting the <ph id="ph2">&lt;see cref="P:System.Xml.XmlWriterSettings.Async" /&gt;</ph> flag to <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Асинхронный метод <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> вызван без присваивания флагу <ph id="ph2">&lt;see cref="P:System.Xml.XmlWriterSettings.Async" /&gt;</ph> значения <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="911" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteProcessingInstructionAsync(System.String,System.String)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</source>
          <target state="translated">В этом случае вызывается исключение <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> с сообщением "Задайте параметру XmlWriterSettings.Async значение true, если вы хотите использовать асинхронные методы".</target>       </trans-unit>
        <trans-unit id="912" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteQualifiedName(System.String,System.String)">
          <source>The local name to write.</source>
          <target state="translated">Локальное имя для записи.</target>       </trans-unit>
        <trans-unit id="913" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteQualifiedName(System.String,System.String)">
          <source>The namespace URI for the name.</source>
          <target state="translated">URI пространства имен для имени.</target>       </trans-unit>
        <trans-unit id="914" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteQualifiedName(System.String,System.String)">
          <source>When overridden in a derived class, writes out the namespace-qualified name.</source>
          <target state="translated">При переопределении в производном классе считывает полное имя пространства имен.</target>       </trans-unit>
        <trans-unit id="915" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteQualifiedName(System.String,System.String)">
          <source>This method looks up the prefix that is in scope for the given namespace.</source>
          <target state="translated">Этот метод выполняет поиск префикса для пространства имен в его области.</target>       </trans-unit>
        <trans-unit id="916" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteQualifiedName(System.String,System.String)">
          <source>If <ph id="ph1">`ns`</ph> maps to the current default namespace, no prefix is generated.</source>
          <target state="translated">Если <ph id="ph1">`ns`</ph> сопоставляется текущее пространство имен по умолчанию, префикс не создается.</target>       </trans-unit>
        <trans-unit id="917" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteQualifiedName(System.String,System.String)">
          <source>When writing attribute values, this method generates a prefix if <ph id="ph1">`ns`</ph> is not found.</source>
          <target state="translated">При записи значений атрибута, если этот метод создает префикс <ph id="ph1">`ns`</ph> не найден.</target>       </trans-unit>
        <trans-unit id="918" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteQualifiedName(System.String,System.String)">
          <source>When writing element content, it throws an exception if <ph id="ph1">`ns`</ph> is not found.</source>
          <target state="translated">При записи содержимого элемента, он вызывает исключение, если <ph id="ph1">`ns`</ph> не найден.</target>       </trans-unit>
        <trans-unit id="919" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteQualifiedName(System.String,System.String)">
          <source>If a class derived from the <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> does not override this method <ph id="ph2">`localName`</ph> is not checked to be a valid W3C XML name.</source>
          <target state="translated">Если класс, производный от <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> не переопределять этот метод <ph id="ph2">`localName`</ph> не проверяется, чтобы быть допустимым именем XML консорциума W3C.</target>       </trans-unit>
        <trans-unit id="920" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteQualifiedName(System.String,System.String)">
          <source>In such case, before calling this method, the validity of the string can be checked by <ph id="ph1">&lt;xref:System.Xml.XmlReader.IsName%2A&gt;</ph> method.</source>
          <target state="translated">В этом случае перед вызовом этого метода допустимость строки может проверяться с <ph id="ph1">&lt;xref:System.Xml.XmlReader.IsName%2A&gt;</ph> метод.</target>       </trans-unit>
        <trans-unit id="921" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteQualifiedName(System.String,System.String)">
          <source>For the asynchronous version of this method, see <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteQualifiedNameAsync%2A&gt;</ph>.</source>
          <target state="translated">Асинхронная версия данного метода, в разделе <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteQualifiedNameAsync%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="922" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteQualifiedName(System.String,System.String)">
          <source>The example writes the following element:</source>
          <target state="translated">В примере записывается следующий элемент:</target>       </trans-unit>
        <trans-unit id="923" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteQualifiedName(System.String,System.String)">
          <source><ph id="ph1">&lt;paramref name="localName" /&gt;</ph> is either <ph id="ph2">&lt;see langword="null" /&gt;</ph> or <ph id="ph3">&lt;see langword="String.Empty" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="localName" /&gt;</ph> имеет значение <ph id="ph2">&lt;see langword="null" /&gt;</ph> или <ph id="ph3">&lt;see langword="String.Empty" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="924" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteQualifiedName(System.String,System.String)">
          <source><ph id="ph1">&lt;paramref name="localName" /&gt;</ph> is not a valid name.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="localName" /&gt;</ph> является недопустимым именем.</target>       </trans-unit>
        <trans-unit id="925" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteQualifiedName(System.String,System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">Метод <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> вызван перед завершением предыдущей асинхронной операции.</target>       </trans-unit>
        <trans-unit id="926" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteQualifiedName(System.String,System.String)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">В этом случае возникает исключение <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> с сообщением "Асинхронная операция уже выполняется".</target>       </trans-unit>
        <trans-unit id="927" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteQualifiedNameAsync(System.String,System.String)">
          <source>The local name to write.</source>
          <target state="translated">Локальное имя для записи.</target>       </trans-unit>
        <trans-unit id="928" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteQualifiedNameAsync(System.String,System.String)">
          <source>The namespace URI for the name.</source>
          <target state="translated">URI пространства имен для имени.</target>       </trans-unit>
        <trans-unit id="929" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteQualifiedNameAsync(System.String,System.String)">
          <source>Asynchronously writes out the namespace-qualified name.</source>
          <target state="translated">Асинхронно записывает полное имя пространства имен.</target>       </trans-unit>
        <trans-unit id="930" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteQualifiedNameAsync(System.String,System.String)">
          <source>This method looks up the prefix that is in scope for the given namespace.</source>
          <target state="translated">Этот метод выполняет поиск префикса для пространства имен в его области.</target>       </trans-unit>
        <trans-unit id="931" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteQualifiedNameAsync(System.String,System.String)">
          <source>The task that represents the asynchronous <ph id="ph1">&lt;see langword="WriteQualifiedName" /&gt;</ph> operation.</source>
          <target state="translated">Задача, представляющая асинхронную операцию <ph id="ph1">&lt;see langword="WriteQualifiedName" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="932" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteQualifiedNameAsync(System.String,System.String)">
          <source>This is the asynchronous version of <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteQualifiedName%2A&gt;</ph>, with the same functionality.</source>
          <target state="translated">Это асинхронная версия объекта <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteQualifiedName%2A&gt;</ph>, с той же функции.</target>       </trans-unit>
        <trans-unit id="933" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteQualifiedNameAsync(System.String,System.String)">
          <source>To use this method, you must set the <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.Async%2A&gt;</ph> flag to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">Чтобы использовать этот метод, необходимо задать <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.Async%2A&gt;</ph> флаг <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="934" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteQualifiedNameAsync(System.String,System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> asynchronous method was called without setting the <ph id="ph2">&lt;see cref="P:System.Xml.XmlWriterSettings.Async" /&gt;</ph> flag to <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Асинхронный метод <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> вызван без присваивания флагу <ph id="ph2">&lt;see cref="P:System.Xml.XmlWriterSettings.Async" /&gt;</ph> значения <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="935" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteQualifiedNameAsync(System.String,System.String)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</source>
          <target state="translated">В этом случае вызывается исключение <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> с сообщением "Задайте параметру XmlWriterSettings.Async значение true, если вы хотите использовать асинхронные методы".</target>       </trans-unit>
        <trans-unit id="936" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlWriter">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">Метод <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> вызван перед завершением предыдущей асинхронной операции.</target>       </trans-unit>
        <trans-unit id="937" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlWriter">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">В этом случае возникает исключение <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> с сообщением "Асинхронная операция уже выполняется".</target>       </trans-unit>
        <trans-unit id="938" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlWriter">
          <source>When overridden in a derived class, writes raw markup manually.</source>
          <target state="translated">Когда переопределено в производном классе, вручную записывает необработанные данные для разметки.</target>       </trans-unit>
        <trans-unit id="939" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>For the asynchronous version of this method, see <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteRawAsync%2A&gt;</ph>.</source>
          <target state="translated">Асинхронная версия данного метода, в разделе <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteRawAsync%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="940" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteRaw(System.String)">
          <source>String containing the text to write.</source>
          <target state="translated">Строка, содержащая текст для записи.</target>       </trans-unit>
        <trans-unit id="941" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteRaw(System.String)">
          <source>When overridden in a derived class, writes raw markup manually from a string.</source>
          <target state="translated">Когда переопределено в производном классе, вручную записывает из строки необработанные данные для разметки.</target>       </trans-unit>
        <trans-unit id="942" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteRaw(System.String)">
          <source>This method does not escape special characters.</source>
          <target state="translated">Этот метод не экранирует специальные символы.</target>       </trans-unit>
        <trans-unit id="943" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteRaw(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> does not validate the data that is passed to the <ph id="ph2">&lt;xref:System.Xml.XmlWriter.WriteRaw%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> Не проверяет данные, передаваемые <ph id="ph2">&lt;xref:System.Xml.XmlWriter.WriteRaw%2A&gt;</ph> метод.</target>       </trans-unit>
        <trans-unit id="944" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteRaw(System.String)">
          <source>You should not pass arbitrary data to this method.</source>
          <target state="translated">Не следует передавать произвольные данные в этот метод.</target>       </trans-unit>
        <trans-unit id="945" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteRaw(System.String)">
          <source>For the asynchronous version of this method, see <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteRawAsync%2A&gt;</ph>.</source>
          <target state="translated">Асинхронная версия данного метода, в разделе <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteRawAsync%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="946" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteRaw(System.String)">
          <source>See <ph id="ph1">&lt;xref:System.Xml.XmlTextWriter.WriteRaw%2A?displayProperty=nameWithType&gt;</ph> for an example using this method.</source>
          <target state="translated">В разделе <ph id="ph1">&lt;xref:System.Xml.XmlTextWriter.WriteRaw%2A?displayProperty=nameWithType&gt;</ph> пример использования этого метода.</target>       </trans-unit>
        <trans-unit id="947" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteRaw(System.String)">
          <source><ph id="ph1">&lt;paramref name="data" /&gt;</ph> is either <ph id="ph2">&lt;see langword="null" /&gt;</ph> or <ph id="ph3">&lt;see langword="String.Empty" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="data" /&gt;</ph> имеет значение <ph id="ph2">&lt;see langword="null" /&gt;</ph> или <ph id="ph3">&lt;see langword="String.Empty" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="948" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteRaw(System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">Метод <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> вызван перед завершением предыдущей асинхронной операции.</target>       </trans-unit>
        <trans-unit id="949" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteRaw(System.String)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">В этом случае возникает исключение <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> с сообщением "Асинхронная операция уже выполняется".</target>       </trans-unit>
        <trans-unit id="950" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteRaw(System.Char[],System.Int32,System.Int32)">
          <source>Character array containing the text to write.</source>
          <target state="translated">Массив символов, содержащий текст для записи.</target>       </trans-unit>
        <trans-unit id="951" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteRaw(System.Char[],System.Int32,System.Int32)">
          <source>The position within the buffer indicating the start of the text to write.</source>
          <target state="translated">Позиция в буфере, с которой начинается запись текста.</target>       </trans-unit>
        <trans-unit id="952" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteRaw(System.Char[],System.Int32,System.Int32)">
          <source>The number of characters to write.</source>
          <target state="translated">Количество символов для записи.</target>       </trans-unit>
        <trans-unit id="953" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteRaw(System.Char[],System.Int32,System.Int32)">
          <source>When overridden in a derived class, writes raw markup manually from a character buffer.</source>
          <target state="translated">Когда переопределено в производном классе, вручную записывает из буфера символов необработанные данные для разметки .</target>       </trans-unit>
        <trans-unit id="954" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteRaw(System.Char[],System.Int32,System.Int32)">
          <source>This method does not escape special characters.</source>
          <target state="translated">Этот метод не экранирует специальные символы.</target>       </trans-unit>
        <trans-unit id="955" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteRaw(System.Char[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> does not validate the data that is passed to the <ph id="ph2">&lt;xref:System.Xml.XmlWriter.WriteRaw%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> Не проверяет данные, передаваемые <ph id="ph2">&lt;xref:System.Xml.XmlWriter.WriteRaw%2A&gt;</ph> метод.</target>       </trans-unit>
        <trans-unit id="956" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteRaw(System.Char[],System.Int32,System.Int32)">
          <source>You should not pass arbitrary data to this method.</source>
          <target state="translated">Не следует передавать произвольные данные в этот метод.</target>       </trans-unit>
        <trans-unit id="957" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteRaw(System.Char[],System.Int32,System.Int32)">
          <source>For the asynchronous version of this method, see <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteRawAsync%2A&gt;</ph>.</source>
          <target state="translated">Асинхронная версия данного метода, в разделе <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteRawAsync%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="958" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteRaw(System.Char[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Свойство <ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> имеет значение <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="959" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteRaw(System.Char[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> or <ph id="ph2">&lt;paramref name="count" /&gt;</ph> is less than zero.</source>
          <target state="translated">Значение параметра <ph id="ph1">&lt;paramref name="index" /&gt;</ph> или <ph id="ph2">&lt;paramref name="count" /&gt;</ph> меньше нуля.</target>       </trans-unit>
        <trans-unit id="960" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteRaw(System.Char[],System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">- или -</target>       </trans-unit>
        <trans-unit id="961" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteRaw(System.Char[],System.Int32,System.Int32)">
          <source>The buffer length minus <ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than <ph id="ph2">&lt;paramref name="count" /&gt;</ph>.</source>
          <target state="translated">Длина буфера минус <ph id="ph1">&lt;paramref name="index" /&gt;</ph> меньше <ph id="ph2">&lt;paramref name="count" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="962" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteRaw(System.Char[],System.Int32,System.Int32)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">Метод <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> вызван перед завершением предыдущей асинхронной операции.</target>       </trans-unit>
        <trans-unit id="963" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteRaw(System.Char[],System.Int32,System.Int32)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">В этом случае возникает исключение <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> с сообщением "Асинхронная операция уже выполняется".</target>       </trans-unit>
        <trans-unit id="964" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlWriter">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> asynchronous method was called without setting the <ph id="ph2">&lt;see cref="P:System.Xml.XmlWriterSettings.Async" /&gt;</ph> flag to <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Асинхронный метод <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> вызван без присваивания флагу <ph id="ph2">&lt;see cref="P:System.Xml.XmlWriterSettings.Async" /&gt;</ph> значения <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="965" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlWriter">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</source>
          <target state="translated">В этом случае вызывается исключение <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> с сообщением "Задайте параметру XmlWriterSettings.Async значение true, если вы хотите использовать асинхронные методы".</target>       </trans-unit>
        <trans-unit id="966" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlWriter">
          <source>Asynchronously writes raw markup manually.</source>
          <target state="translated">Асинхронно, вручную записывает необработанные данные для разметки.</target>       </trans-unit>
        <trans-unit id="967" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>This is the asynchronous version of <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteRaw%2A&gt;</ph>, with the same functionality.</source>
          <target state="translated">Это асинхронная версия объекта <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteRaw%2A&gt;</ph>, с той же функции.</target>       </trans-unit>
        <trans-unit id="968" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>To use this method, you must set the <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.Async%2A&gt;</ph> flag to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">Чтобы использовать этот метод, необходимо задать <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.Async%2A&gt;</ph> флаг <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="969" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteRawAsync(System.String)">
          <source>String containing the text to write.</source>
          <target state="translated">Строка, содержащая текст для записи.</target>       </trans-unit>
        <trans-unit id="970" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteRawAsync(System.String)">
          <source>Asynchronously writes raw markup manually from a string.</source>
          <target state="translated">Асинхронно, вручную записывает необработанные данные для разметки.</target>       </trans-unit>
        <trans-unit id="971" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteRawAsync(System.String)">
          <source>The task that represents the asynchronous <ph id="ph1">&lt;see langword="WriteRaw" /&gt;</ph> operation.</source>
          <target state="translated">Задача, представляющая асинхронную операцию <ph id="ph1">&lt;see langword="WriteRaw" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="972" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteRawAsync(System.String)">
          <source>This is the asynchronous version of <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteRaw%2A&gt;</ph>, with the same functionality.</source>
          <target state="translated">Это асинхронная версия объекта <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteRaw%2A&gt;</ph>, с той же функции.</target>       </trans-unit>
        <trans-unit id="973" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteRawAsync(System.String)">
          <source>To use this method, you must set the <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.Async%2A&gt;</ph> flag to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">Чтобы использовать этот метод, необходимо задать <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.Async%2A&gt;</ph> флаг <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="974" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteRawAsync(System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> asynchronous method was called without setting the <ph id="ph2">&lt;see cref="P:System.Xml.XmlWriterSettings.Async" /&gt;</ph> flag to <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Асинхронный метод <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> вызван без присваивания флагу <ph id="ph2">&lt;see cref="P:System.Xml.XmlWriterSettings.Async" /&gt;</ph> значения <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="975" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteRawAsync(System.String)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</source>
          <target state="translated">В этом случае вызывается исключение <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> с сообщением "Задайте параметру XmlWriterSettings.Async значение true, если вы хотите использовать асинхронные методы".</target>       </trans-unit>
        <trans-unit id="976" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteRawAsync(System.Char[],System.Int32,System.Int32)">
          <source>Character array containing the text to write.</source>
          <target state="translated">Массив символов, содержащий текст для записи.</target>       </trans-unit>
        <trans-unit id="977" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteRawAsync(System.Char[],System.Int32,System.Int32)">
          <source>The position within the buffer indicating the start of the text to write.</source>
          <target state="translated">Позиция в буфере, с которой начинается запись текста.</target>       </trans-unit>
        <trans-unit id="978" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteRawAsync(System.Char[],System.Int32,System.Int32)">
          <source>The number of characters to write.</source>
          <target state="translated">Количество символов для записи.</target>       </trans-unit>
        <trans-unit id="979" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteRawAsync(System.Char[],System.Int32,System.Int32)">
          <source>Asynchronously writes raw markup manually from a character buffer.</source>
          <target state="translated">Асинхронно, вручную записывает для разметки необработанные данные из буфера символов.</target>       </trans-unit>
        <trans-unit id="980" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteRawAsync(System.Char[],System.Int32,System.Int32)">
          <source>The task that represents the asynchronous <ph id="ph1">&lt;see langword="WriteRaw" /&gt;</ph> operation.</source>
          <target state="translated">Задача, представляющая асинхронную операцию <ph id="ph1">&lt;see langword="WriteRaw" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="981" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteRawAsync(System.Char[],System.Int32,System.Int32)">
          <source>This is the asynchronous version of <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteRaw%2A&gt;</ph>, with the same functionality.</source>
          <target state="translated">Это асинхронная версия объекта <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteRaw%2A&gt;</ph>, с той же функции.</target>       </trans-unit>
        <trans-unit id="982" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteRawAsync(System.Char[],System.Int32,System.Int32)">
          <source>To use this method, you must set the <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.Async%2A&gt;</ph> flag to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">Чтобы использовать этот метод, необходимо задать <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.Async%2A&gt;</ph> флаг <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="983" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteRawAsync(System.Char[],System.Int32,System.Int32)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> asynchronous method was called without setting the <ph id="ph2">&lt;see cref="P:System.Xml.XmlWriterSettings.Async" /&gt;</ph> flag to <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Асинхронный метод <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> вызван без присваивания флагу <ph id="ph2">&lt;see cref="P:System.Xml.XmlWriterSettings.Async" /&gt;</ph> значения <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="984" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteRawAsync(System.Char[],System.Int32,System.Int32)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</source>
          <target state="translated">В этом случае вызывается исключение <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> с сообщением "Задайте параметру XmlWriterSettings.Async значение true, если вы хотите использовать асинхронные методы".</target>       </trans-unit>
        <trans-unit id="985" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlWriter">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">Метод <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> вызван перед завершением предыдущей асинхронной операции.</target>       </trans-unit>
        <trans-unit id="986" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlWriter">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">В этом случае возникает исключение <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> с сообщением "Асинхронная операция уже выполняется".</target>       </trans-unit>
        <trans-unit id="987" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlWriter">
          <source>When overridden in a derived class, writes the start of an attribute.</source>
          <target state="translated">Записывает начальное значение атрибута при переопределении в производном классе.</target>       </trans-unit>
        <trans-unit id="988" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>For the asynchronous version of this method, see <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteStartAttributeAsync%2A&gt;</ph>.</source>
          <target state="translated">Асинхронная версия данного метода, в разделе <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteStartAttributeAsync%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="989" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartAttribute(System.String)">
          <source>The local name of the attribute.</source>
          <target state="translated">Локальное имя атрибута.</target>       </trans-unit>
        <trans-unit id="990" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartAttribute(System.String)">
          <source>Writes the start of an attribute with the specified local name.</source>
          <target state="translated">Записывает начало атрибута с заданным локальным именем.</target>       </trans-unit>
        <trans-unit id="991" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteStartAttribute(System.String)">
          <source>This method enables you to write a value using multiple Write methods.</source>
          <target state="translated">Этот метод позволяет записать значение, используя несколько методов записи.</target>       </trans-unit>
        <trans-unit id="992" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteStartAttribute(System.String)">
          <source>For the asynchronous version of this method, see <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteStartAttributeAsync%2A&gt;</ph>.</source>
          <target state="translated">Асинхронная версия данного метода, в разделе <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteStartAttributeAsync%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="993" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartAttribute(System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">Метод <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> вызван перед завершением предыдущей асинхронной операции.</target>       </trans-unit>
        <trans-unit id="994" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartAttribute(System.String)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">В этом случае возникает исключение <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> с сообщением "Асинхронная операция уже выполняется".</target>       </trans-unit>
        <trans-unit id="995" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartAttribute(System.String)">
          <source>There is a character in the buffer that is a valid XML character but is not valid for the output encoding.</source>
          <target state="translated">В буфере присутствует символ, который является допустимым символом XML, но недопустим для кодирования вывода.</target>       </trans-unit>
        <trans-unit id="996" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartAttribute(System.String)">
          <source>For example, if the output encoding is ASCII, you should only use characters from the range of 0 to 127 for element and attribute names.</source>
          <target state="translated">Например, если выходные данные в кодировке ASCII, для имен элементов и атрибутов следует использовать только символы из диапазона от 0 до 127.</target>       </trans-unit>
        <trans-unit id="997" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartAttribute(System.String)">
          <source>The invalid character might be in the argument of this method or in an argument of previous methods that were writing to the buffer.</source>
          <target state="translated">Недопустимый символ может быть в аргументе этого метода или в каком-либо аргументе предыдущих методов, которые осуществляли запись в буфер.</target>       </trans-unit>
        <trans-unit id="998" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartAttribute(System.String)">
          <source>Such characters are escaped by character entity references when possible (for example, in text nodes or attribute values).</source>
          <target state="translated">Такие знаки экранируются по возможности с помощью ссылок на сущности знаков (например, в текстовых узлах или значениях атрибутов).</target>       </trans-unit>
        <trans-unit id="999" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartAttribute(System.String)">
          <source>However, the character entity reference is not allowed in element and attribute names, comments, processing instructions, or CDATA sections.</source>
          <target state="translated">Однако ссылка на сущность знака не допускается в именах элементов и атрибутов, комментариях, инструкциях по обработке и разделах CDATA.</target>       </trans-unit>
        <trans-unit id="1000" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartAttribute(System.String,System.String)">
          <source>The local name of the attribute.</source>
          <target state="translated">Локальное имя атрибута.</target>       </trans-unit>
        <trans-unit id="1001" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartAttribute(System.String,System.String)">
          <source>The namespace URI of the attribute.</source>
          <target state="translated">Универсальный код ресурса (URI) пространства имен атрибута.</target>       </trans-unit>
        <trans-unit id="1002" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartAttribute(System.String,System.String)">
          <source>Writes the start of an attribute with the specified local name and namespace URI.</source>
          <target state="translated">Записывает начало атрибута с заданным локальным именем и URI пространства имен.</target>       </trans-unit>
        <trans-unit id="1003" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteStartAttribute(System.String,System.String)">
          <source>This is a more advanced version of <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteAttributeString%2A&gt;</ph> that allows you to write an attribute value using multiple write methods, such as <ph id="ph2">&lt;xref:System.Xml.XmlWriter.WriteString%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Xml.XmlWriter.WriteQualifiedName%2A&gt;</ph>, and so on.</source>
          <target state="translated">Это более сложных версия <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteAttributeString%2A&gt;</ph> , позволяющий записать значение атрибута, используя несколько методов записи, такие как <ph id="ph2">&lt;xref:System.Xml.XmlWriter.WriteString%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Xml.XmlWriter.WriteQualifiedName%2A&gt;</ph>, и т. д.</target>       </trans-unit>
        <trans-unit id="1004" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteStartAttribute(System.String,System.String)">
          <source>For the asynchronous version of this method, see <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteStartAttributeAsync%2A&gt;</ph>.</source>
          <target state="translated">Асинхронная версия данного метода, в разделе <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteStartAttributeAsync%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1005" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteStartAttribute(System.String,System.String)">
          <source>See <ph id="ph1">&lt;xref:System.Xml.XmlTextWriter.WriteStartAttribute%2A?displayProperty=nameWithType&gt;</ph> for an example using this method.</source>
          <target state="translated">В разделе <ph id="ph1">&lt;xref:System.Xml.XmlTextWriter.WriteStartAttribute%2A?displayProperty=nameWithType&gt;</ph> пример использования этого метода.</target>       </trans-unit>
        <trans-unit id="1006" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartAttribute(System.String,System.String)">
          <source>There is a character in the buffer that is a valid XML character but is not valid for the output encoding.</source>
          <target state="translated">В буфере присутствует символ, который является допустимым символом XML, но недопустим для кодирования вывода.</target>       </trans-unit>
        <trans-unit id="1007" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartAttribute(System.String,System.String)">
          <source>For example, if the output encoding is ASCII, you should only use characters from the range of 0 to 127 for element and attribute names.</source>
          <target state="translated">Например, если выходные данные в кодировке ASCII, для имен элементов и атрибутов следует использовать только символы из диапазона от 0 до 127.</target>       </trans-unit>
        <trans-unit id="1008" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartAttribute(System.String,System.String)">
          <source>The invalid character might be in the argument of this method or in an argument of previous methods that were writing to the buffer.</source>
          <target state="translated">Недопустимый символ может быть в аргументе этого метода или в каком-либо аргументе предыдущих методов, которые осуществляли запись в буфер.</target>       </trans-unit>
        <trans-unit id="1009" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartAttribute(System.String,System.String)">
          <source>Such characters are escaped by character entity references when possible (for example, in text nodes or attribute values).</source>
          <target state="translated">Такие знаки экранируются по возможности с помощью ссылок на сущности знаков (например, в текстовых узлах или значениях атрибутов).</target>       </trans-unit>
        <trans-unit id="1010" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartAttribute(System.String,System.String)">
          <source>However, the character entity reference is not allowed in element and attribute names, comments, processing instructions, or CDATA sections.</source>
          <target state="translated">Однако ссылка на сущность знака не допускается в именах элементов и атрибутов, комментариях, инструкциях по обработке и разделах CDATA.</target>       </trans-unit>
        <trans-unit id="1011" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartAttribute(System.String,System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">Метод <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> вызван перед завершением предыдущей асинхронной операции.</target>       </trans-unit>
        <trans-unit id="1012" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartAttribute(System.String,System.String)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">В этом случае возникает исключение <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> с сообщением "Асинхронная операция уже выполняется".</target>       </trans-unit>
        <trans-unit id="1013" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartAttribute(System.String,System.String,System.String)">
          <source>The namespace prefix of the attribute.</source>
          <target state="translated">Префикс пространства имен атрибута.</target>       </trans-unit>
        <trans-unit id="1014" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartAttribute(System.String,System.String,System.String)">
          <source>The local name of the attribute.</source>
          <target state="translated">Локальное имя атрибута.</target>       </trans-unit>
        <trans-unit id="1015" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartAttribute(System.String,System.String,System.String)">
          <source>The namespace URI for the attribute.</source>
          <target state="translated">URI пространства имен атрибута.</target>       </trans-unit>
        <trans-unit id="1016" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartAttribute(System.String,System.String,System.String)">
          <source>When overridden in a derived class, writes the start of an attribute with the specified prefix, local name, and namespace URI.</source>
          <target state="translated">Когда переопределено в производном классе, записывает начало атрибута с указанным префиксом, локальным именем и URI пространства имен.</target>       </trans-unit>
        <trans-unit id="1017" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteStartAttribute(System.String,System.String,System.String)">
          <source>This method enables you to write a value using multiple Write methods.</source>
          <target state="translated">Этот метод позволяет записать значение, используя несколько методов записи.</target>       </trans-unit>
        <trans-unit id="1018" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteStartAttribute(System.String,System.String,System.String)">
          <source>For the asynchronous version of this method, see <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteStartAttributeAsync%2A&gt;</ph>.</source>
          <target state="translated">Асинхронная версия данного метода, в разделе <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteStartAttributeAsync%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1019" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartAttribute(System.String,System.String,System.String)">
          <source>There is a character in the buffer that is a valid XML character but is not valid for the output encoding.</source>
          <target state="translated">В буфере присутствует символ, который является допустимым символом XML, но недопустим для кодирования вывода.</target>       </trans-unit>
        <trans-unit id="1020" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartAttribute(System.String,System.String,System.String)">
          <source>For example, if the output encoding is ASCII, you should only use characters from the range of 0 to 127 for element and attribute names.</source>
          <target state="translated">Например, если выходные данные в кодировке ASCII, для имен элементов и атрибутов следует использовать только символы из диапазона от 0 до 127.</target>       </trans-unit>
        <trans-unit id="1021" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartAttribute(System.String,System.String,System.String)">
          <source>The invalid character might be in the argument of this method or in an argument of previous methods that were writing to the buffer.</source>
          <target state="translated">Недопустимый символ может быть в аргументе этого метода или в каком-либо аргументе предыдущих методов, которые осуществляли запись в буфер.</target>       </trans-unit>
        <trans-unit id="1022" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartAttribute(System.String,System.String,System.String)">
          <source>Such characters are escaped by character entity references when possible (for example, in text nodes or attribute values).</source>
          <target state="translated">Такие знаки экранируются по возможности с помощью ссылок на сущности знаков (например, в текстовых узлах или значениях атрибутов).</target>       </trans-unit>
        <trans-unit id="1023" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartAttribute(System.String,System.String,System.String)">
          <source>However, the character entity reference is not allowed in element and attribute names, comments, processing instructions, or CDATA sections.</source>
          <target state="translated">Однако ссылка на сущность знака не допускается в именах элементов и атрибутов, комментариях, инструкциях по обработке и разделах CDATA.</target>       </trans-unit>
        <trans-unit id="1024" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartAttribute(System.String,System.String,System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">Метод <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> вызван перед завершением предыдущей асинхронной операции.</target>       </trans-unit>
        <trans-unit id="1025" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartAttribute(System.String,System.String,System.String)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">В этом случае возникает исключение <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> с сообщением "Асинхронная операция уже выполняется".</target>       </trans-unit>
        <trans-unit id="1026" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartAttributeAsync(System.String,System.String,System.String)">
          <source>The namespace prefix of the attribute.</source>
          <target state="translated">Префикс пространства имен атрибута.</target>       </trans-unit>
        <trans-unit id="1027" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartAttributeAsync(System.String,System.String,System.String)">
          <source>The local name of the attribute.</source>
          <target state="translated">Локальное имя атрибута.</target>       </trans-unit>
        <trans-unit id="1028" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartAttributeAsync(System.String,System.String,System.String)">
          <source>The namespace URI for the attribute.</source>
          <target state="translated">URI пространства имен атрибута.</target>       </trans-unit>
        <trans-unit id="1029" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartAttributeAsync(System.String,System.String,System.String)">
          <source>Asynchronously writes the start of an attribute with the specified prefix, local name, and namespace URI.</source>
          <target state="translated">Асинхронно записывает начало атрибута с заданным префиксом, локальным именем и универсальным кодом ресурса (URI) пространства имен.</target>       </trans-unit>
        <trans-unit id="1030" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartAttributeAsync(System.String,System.String,System.String)">
          <source>The task that represents the asynchronous <ph id="ph1">&lt;see langword="WriteStartAttribute" /&gt;</ph> operation.</source>
          <target state="translated">Задача, представляющая асинхронную операцию <ph id="ph1">&lt;see langword="WriteStartAttribute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1031" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteStartAttributeAsync(System.String,System.String,System.String)">
          <source>This is the asynchronous version of <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteStartAttribute%2A&gt;</ph>, with the same functionality.</source>
          <target state="translated">Это асинхронная версия объекта <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteStartAttribute%2A&gt;</ph>, с той же функции.</target>       </trans-unit>
        <trans-unit id="1032" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteStartAttributeAsync(System.String,System.String,System.String)">
          <source>To use this method, you must set the <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.Async%2A&gt;</ph> flag to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">Чтобы использовать этот метод, необходимо задать <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.Async%2A&gt;</ph> флаг <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="1033" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartAttributeAsync(System.String,System.String,System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> asynchronous method was called without setting the <ph id="ph2">&lt;see cref="P:System.Xml.XmlWriterSettings.Async" /&gt;</ph> flag to <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Асинхронный метод <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> вызван без присваивания флагу <ph id="ph2">&lt;see cref="P:System.Xml.XmlWriterSettings.Async" /&gt;</ph> значения <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1034" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartAttributeAsync(System.String,System.String,System.String)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</source>
          <target state="translated">В этом случае вызывается исключение <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> с сообщением "Задайте параметру XmlWriterSettings.Async значение true, если вы хотите использовать асинхронные методы".</target>       </trans-unit>
        <trans-unit id="1035" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlWriter">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">Метод <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> вызван перед завершением предыдущей асинхронной операции.</target>       </trans-unit>
        <trans-unit id="1036" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlWriter">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">В этом случае возникает исключение <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> с сообщением "Асинхронная операция уже выполняется".</target>       </trans-unit>
        <trans-unit id="1037" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlWriter">
          <source>When overridden in a derived class, writes the XML declaration.</source>
          <target state="translated">Когда переопределено в производном классе, записывает объявление XML.</target>       </trans-unit>
        <trans-unit id="1038" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>For the asynchronous version of this method, see <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteStartDocumentAsync%2A&gt;</ph>.</source>
          <target state="translated">Асинхронная версия данного метода, в разделе <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteStartDocumentAsync%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1039" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartDocument">
          <source>When overridden in a derived class, writes the XML declaration with the version "1.0".</source>
          <target state="translated">Когда переопределено в производном классе, записывает объявление XML с номером версии "1.0".</target>       </trans-unit>
        <trans-unit id="1040" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteStartDocument">
          <source>The encoding level of the document is determined by how the writer is implemented.</source>
          <target state="translated">Уровень кодировки документа определяется по реализации модуля записи.</target>       </trans-unit>
        <trans-unit id="1041" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteStartDocument">
          <source>For example, if an <ph id="ph1">&lt;xref:System.Text.Encoding&gt;</ph> object is specified in the <ph id="ph2">`XmlTextWriter`</ph> constructor, this determines the value of the encoding attribute.</source>
          <target state="translated">Например если <ph id="ph1">&lt;xref:System.Text.Encoding&gt;</ph> объект, заданный в <ph id="ph2">`XmlTextWriter`</ph> конструктор, определяет значение атрибута кодировки.</target>       </trans-unit>
        <trans-unit id="1042" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteStartDocument">
          <source>This method does not create a standalone attribute.</source>
          <target state="translated">Этот метод не создает отдельный атрибут.</target>       </trans-unit>
        <trans-unit id="1043" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteStartDocument">
          <source>When <ph id="ph1">`WriteStartDocument`</ph> is called the writer validates that what you are writing is a well-formed XML document.</source>
          <target state="translated">Когда <ph id="ph1">`WriteStartDocument`</ph> вызывается записи проверяется при написании корректный XML-документ.</target>       </trans-unit>
        <trans-unit id="1044" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteStartDocument">
          <source>For example, it checks that the XML declaration is the first node, that one and only one root-level element exists, and so on.</source>
          <target state="translated">Например он проверяет XML-декларация является первым узлом, что один и только один корневой элемент существует и т. д.</target>       </trans-unit>
        <trans-unit id="1045" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteStartDocument">
          <source>If this method is not called, the writer assumes an XML fragment is being written and applies no root level rules.</source>
          <target state="translated">Если этот метод не вызван, предполагается, фрагмент XML записывается и применяет правила не корневого уровня.</target>       </trans-unit>
        <trans-unit id="1046" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteStartDocument">
          <source>If <ph id="ph1">`WriteStartDocument`</ph> has been called and then the <ph id="ph2">&lt;xref:System.Xml.XmlWriter.WriteProcessingInstruction%2A&gt;</ph> method is used to create another XML declaration, an exception will be thrown.</source>
          <target state="translated">Если <ph id="ph1">`WriteStartDocument`</ph> был вызван и затем <ph id="ph2">&lt;xref:System.Xml.XmlWriter.WriteProcessingInstruction%2A&gt;</ph> метод используется для создания другого XML-декларацию, будет вызвано исключение.</target>       </trans-unit>
        <trans-unit id="1047" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteStartDocument">
          <source>For the asynchronous version of this method, see <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteStartDocumentAsync%2A&gt;</ph>.</source>
          <target state="translated">Асинхронная версия данного метода, в разделе <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteStartDocumentAsync%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1048" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartDocument">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">Метод <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> вызван перед завершением предыдущей асинхронной операции.</target>       </trans-unit>
        <trans-unit id="1049" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartDocument">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">В этом случае возникает исключение <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> с сообщением "Асинхронная операция уже выполняется".</target>       </trans-unit>
        <trans-unit id="1050" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartDocument(System.Boolean)">
          <source>If <ph id="ph1">&lt;see langword="true" /&gt;</ph>, it writes "standalone=yes"; if <ph id="ph2">&lt;see langword="false" /&gt;</ph>, it writes "standalone=no".</source>
          <target state="translated">Если значение равно <ph id="ph1">&lt;see langword="true" /&gt;</ph>, записывается "standalone=yes"; если <ph id="ph2">&lt;see langword="false" /&gt;</ph>, записывается "standalone=no".</target>       </trans-unit>
        <trans-unit id="1051" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartDocument(System.Boolean)">
          <source>When overridden in a derived class, writes the XML declaration with the version "1.0" and the standalone attribute.</source>
          <target state="translated">Когда переопределено в производном классе, записывает объявление XML с номером версии "1.0" и отдельным атрибутом.</target>       </trans-unit>
        <trans-unit id="1052" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteStartDocument(System.Boolean)">
          <source>The encoding level of the document is determined by how the writer is implemented.</source>
          <target state="translated">Уровень кодировки документа определяется по реализации модуля записи.</target>       </trans-unit>
        <trans-unit id="1053" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteStartDocument(System.Boolean)">
          <source>For example, if an <ph id="ph1">&lt;xref:System.Text.Encoding&gt;</ph> object is specified in the <ph id="ph2">`XmlTextWriter`</ph> constructor, this determines the value of the encoding attribute.</source>
          <target state="translated">Например если <ph id="ph1">&lt;xref:System.Text.Encoding&gt;</ph> объект, заданный в <ph id="ph2">`XmlTextWriter`</ph> конструктор, определяет значение атрибута кодировки.</target>       </trans-unit>
        <trans-unit id="1054" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteStartDocument(System.Boolean)">
          <source>When <ph id="ph1">`WriteStartDocument`</ph> is called, the writer validates that what you are writing is a well-formed XML document.</source>
          <target state="translated">Если <ph id="ph1">`WriteStartDocument`</ph> является именем, модуль записи при написании проверяет, является ли XML-документа правильного формата.</target>       </trans-unit>
        <trans-unit id="1055" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteStartDocument(System.Boolean)">
          <source>For example, it checks that the XML declaration is the first node, that one and only one root-level element exists, and so on.</source>
          <target state="translated">Например он проверяет XML-декларация является первым узлом, что один и только один корневой элемент существует и т. д.</target>       </trans-unit>
        <trans-unit id="1056" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteStartDocument(System.Boolean)">
          <source>If this method is not called, the writer assumes an XML fragment is being written and applies no root level rules.</source>
          <target state="translated">Если этот метод не вызван, предполагается, фрагмент XML записывается и применяет правила не корневого уровня.</target>       </trans-unit>
        <trans-unit id="1057" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteStartDocument(System.Boolean)">
          <source>If <ph id="ph1">`WriteStartDocument`</ph> has been called and then the <ph id="ph2">&lt;xref:System.Xml.XmlWriter.WriteProcessingInstruction%2A&gt;</ph> method is used to create another XML declaration, an exception will be thrown.</source>
          <target state="translated">Если <ph id="ph1">`WriteStartDocument`</ph> был вызван и затем <ph id="ph2">&lt;xref:System.Xml.XmlWriter.WriteProcessingInstruction%2A&gt;</ph> метод используется для создания другого XML-декларацию, будет вызвано исключение.</target>       </trans-unit>
        <trans-unit id="1058" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteStartDocument(System.Boolean)">
          <source>For the asynchronous version of this method, see <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteStartDocumentAsync%2A&gt;</ph>.</source>
          <target state="translated">Асинхронная версия данного метода, в разделе <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteStartDocumentAsync%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1059" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartDocument(System.Boolean)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">Метод <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> вызван перед завершением предыдущей асинхронной операции.</target>       </trans-unit>
        <trans-unit id="1060" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartDocument(System.Boolean)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">В этом случае возникает исключение <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> с сообщением "Асинхронная операция уже выполняется".</target>       </trans-unit>
        <trans-unit id="1061" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlWriter">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> asynchronous method was called without setting the <ph id="ph2">&lt;see cref="P:System.Xml.XmlWriterSettings.Async" /&gt;</ph> flag to <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Асинхронный метод <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> вызван без присваивания флагу <ph id="ph2">&lt;see cref="P:System.Xml.XmlWriterSettings.Async" /&gt;</ph> значения <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1062" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlWriter">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</source>
          <target state="translated">В этом случае вызывается исключение <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> с сообщением "Задайте параметру XmlWriterSettings.Async значение true, если вы хотите использовать асинхронные методы".</target>       </trans-unit>
        <trans-unit id="1063" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlWriter">
          <source>Asynchronously writes the XML declaration.</source>
          <target state="translated">Асинхронно записывает объявление XML.</target>       </trans-unit>
        <trans-unit id="1064" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>This is the asynchronous version of <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteStartDocument%2A&gt;</ph>, with the same functionality.</source>
          <target state="translated">Это асинхронная версия объекта <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteStartDocument%2A&gt;</ph>, с той же функции.</target>       </trans-unit>
        <trans-unit id="1065" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>To use this method, you must set the <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.Async%2A&gt;</ph> flag to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">Чтобы использовать этот метод, необходимо задать <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.Async%2A&gt;</ph> флаг <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="1066" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartDocumentAsync">
          <source>Asynchronously writes the XML declaration with the version "1.0".</source>
          <target state="translated">Асинхронно записывает объявление XML с номером версии "1.0".</target>       </trans-unit>
        <trans-unit id="1067" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartDocumentAsync">
          <source>The task that represents the asynchronous <ph id="ph1">&lt;see langword="WriteStartDocument" /&gt;</ph> operation.</source>
          <target state="translated">Задача, представляющая асинхронную операцию <ph id="ph1">&lt;see langword="WriteStartDocument" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1068" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteStartDocumentAsync">
          <source>This is the asynchronous version of <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteStartDocument%2A&gt;</ph>, with the same functionality.</source>
          <target state="translated">Это асинхронная версия объекта <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteStartDocument%2A&gt;</ph>, с той же функции.</target>       </trans-unit>
        <trans-unit id="1069" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteStartDocumentAsync">
          <source>To use this method, you must set the <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.Async%2A&gt;</ph> flag to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">Чтобы использовать этот метод, необходимо задать <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.Async%2A&gt;</ph> флаг <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="1070" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartDocumentAsync">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> asynchronous method was called without setting the <ph id="ph2">&lt;see cref="P:System.Xml.XmlWriterSettings.Async" /&gt;</ph> flag to <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Асинхронный метод <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> вызван без присваивания флагу <ph id="ph2">&lt;see cref="P:System.Xml.XmlWriterSettings.Async" /&gt;</ph> значения <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1071" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartDocumentAsync">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</source>
          <target state="translated">В этом случае вызывается исключение <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> с сообщением "Задайте параметру XmlWriterSettings.Async значение true, если вы хотите использовать асинхронные методы".</target>       </trans-unit>
        <trans-unit id="1072" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartDocumentAsync(System.Boolean)">
          <source>If <ph id="ph1">&lt;see langword="true" /&gt;</ph>, it writes "standalone=yes"; if <ph id="ph2">&lt;see langword="false" /&gt;</ph>, it writes "standalone=no".</source>
          <target state="translated">Если значение равно <ph id="ph1">&lt;see langword="true" /&gt;</ph>, записывается "standalone=yes"; если <ph id="ph2">&lt;see langword="false" /&gt;</ph>, записывается "standalone=no".</target>       </trans-unit>
        <trans-unit id="1073" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartDocumentAsync(System.Boolean)">
          <source>Asynchronously writes the XML declaration with the version "1.0" and the standalone attribute.</source>
          <target state="translated">Асинхронно записывает объявление XML с номером версии "1.0". и отдельным атрибутом.</target>       </trans-unit>
        <trans-unit id="1074" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartDocumentAsync(System.Boolean)">
          <source>The task that represents the asynchronous <ph id="ph1">&lt;see langword="WriteStartDocument" /&gt;</ph> operation.</source>
          <target state="translated">Задача, представляющая асинхронную операцию <ph id="ph1">&lt;see langword="WriteStartDocument" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1075" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteStartDocumentAsync(System.Boolean)">
          <source>This is the asynchronous version of <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteStartDocument%2A&gt;</ph>, with the same functionality.</source>
          <target state="translated">Это асинхронная версия объекта <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteStartDocument%2A&gt;</ph>, с той же функции.</target>       </trans-unit>
        <trans-unit id="1076" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteStartDocumentAsync(System.Boolean)">
          <source>To use this method, you must set the <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.Async%2A&gt;</ph> flag to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">Чтобы использовать этот метод, необходимо задать <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.Async%2A&gt;</ph> флаг <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="1077" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartDocumentAsync(System.Boolean)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> asynchronous method was called without setting the <ph id="ph2">&lt;see cref="P:System.Xml.XmlWriterSettings.Async" /&gt;</ph> flag to <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Асинхронный метод <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> вызван без присваивания флагу <ph id="ph2">&lt;see cref="P:System.Xml.XmlWriterSettings.Async" /&gt;</ph> значения <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1078" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartDocumentAsync(System.Boolean)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</source>
          <target state="translated">В этом случае вызывается исключение <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> с сообщением "Задайте параметру XmlWriterSettings.Async значение true, если вы хотите использовать асинхронные методы".</target>       </trans-unit>
        <trans-unit id="1079" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlWriter">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">Метод <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> вызван перед завершением предыдущей асинхронной операции.</target>       </trans-unit>
        <trans-unit id="1080" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlWriter">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">В этом случае возникает исключение <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> с сообщением "Асинхронная операция уже выполняется".</target>       </trans-unit>
        <trans-unit id="1081" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlWriter">
          <source>When overridden in a derived class, writes the specified start tag.</source>
          <target state="translated">Записывает указанный открывающий тег при переопределении в производном классе.</target>       </trans-unit>
        <trans-unit id="1082" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>For the asynchronous version of this method, see <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteStartElementAsync%2A&gt;</ph>.</source>
          <target state="translated">Асинхронная версия данного метода, в разделе <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteStartElementAsync%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1083" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartElement(System.String)">
          <source>The local name of the element.</source>
          <target state="translated">Локальное имя элемента.</target>       </trans-unit>
        <trans-unit id="1084" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartElement(System.String)">
          <source>When overridden in a derived class, writes out a start tag with the specified local name.</source>
          <target state="translated">Когда переопределено в производном классе, записывает открывающий тег с указанным локальным именем.</target>       </trans-unit>
        <trans-unit id="1085" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteStartElement(System.String)">
          <source>For the asynchronous version of this method, see <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteStartElementAsync%2A&gt;</ph>.</source>
          <target state="translated">Асинхронная версия данного метода, в разделе <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteStartElementAsync%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1086" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteStartElement(System.String)">
          <source>The following example writes an XML node.</source>
          <target state="translated">Следующий пример записывает XML-узла.</target>       </trans-unit>
        <trans-unit id="1087" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartElement(System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">Метод <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> вызван перед завершением предыдущей асинхронной операции.</target>       </trans-unit>
        <trans-unit id="1088" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartElement(System.String)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">В этом случае возникает исключение <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> с сообщением "Асинхронная операция уже выполняется".</target>       </trans-unit>
        <trans-unit id="1089" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartElement(System.String)">
          <source>There is a character in the buffer that is a valid XML character but is not valid for the output encoding.</source>
          <target state="translated">В буфере присутствует символ, который является допустимым символом XML, но недопустим для кодирования вывода.</target>       </trans-unit>
        <trans-unit id="1090" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartElement(System.String)">
          <source>For example, if the output encoding is ASCII, you should only use characters from the range of 0 to 127 for element and attribute names.</source>
          <target state="translated">Например, если выходные данные в кодировке ASCII, для имен элементов и атрибутов следует использовать только символы из диапазона от 0 до 127.</target>       </trans-unit>
        <trans-unit id="1091" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartElement(System.String)">
          <source>The invalid character might be in the argument of this method or in an argument of previous methods that were writing to the buffer.</source>
          <target state="translated">Недопустимый символ может быть в аргументе этого метода или в каком-либо аргументе предыдущих методов, которые осуществляли запись в буфер.</target>       </trans-unit>
        <trans-unit id="1092" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartElement(System.String)">
          <source>Such characters are escaped by character entity references when possible (for example, in text nodes or attribute values).</source>
          <target state="translated">Такие знаки экранируются по возможности с помощью ссылок на сущности знаков (например, в текстовых узлах или значениях атрибутов).</target>       </trans-unit>
        <trans-unit id="1093" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartElement(System.String)">
          <source>However, the character entity reference is not allowed in element and attribute names, comments, processing instructions, or CDATA sections.</source>
          <target state="translated">Однако ссылка на сущность знака не допускается в именах элементов и атрибутов, комментариях, инструкциях по обработке и разделах CDATA.</target>       </trans-unit>
        <trans-unit id="1094" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartElement(System.String,System.String)">
          <source>The local name of the element.</source>
          <target state="translated">Локальное имя элемента.</target>       </trans-unit>
        <trans-unit id="1095" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartElement(System.String,System.String)">
          <source>The namespace URI to associate with the element.</source>
          <target state="translated">URI пространства имен, связываемый с элементом.</target>       </trans-unit>
        <trans-unit id="1096" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartElement(System.String,System.String)">
          <source>If this namespace is already in scope and has an associated prefix, the writer automatically writes that prefix also.</source>
          <target state="translated">Если пространство имен уже находится в области видимости и с ним связан префикс, средство записи автоматически запишет этот префикс.</target>       </trans-unit>
        <trans-unit id="1097" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartElement(System.String,System.String)">
          <source>When overridden in a derived class, writes the specified start tag and associates it with the given namespace.</source>
          <target state="translated">Когда переопределено в производном классе, записывает указанный открывающий тег и связывает его с заданным пространством имен.</target>       </trans-unit>
        <trans-unit id="1098" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteStartElement(System.String,System.String)">
          <source>After calling this method you can either write attributes, or create content using <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteComment%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Xml.XmlWriter.WriteString%2A&gt;</ph>, or <ph id="ph3">`WriteStartElement`</ph> for child elements.</source>
          <target state="translated">После вызова этого метода можно записывать атрибуты, или создать содержимого с использованием <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteComment%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Xml.XmlWriter.WriteString%2A&gt;</ph>, или <ph id="ph3">`WriteStartElement`</ph> для дочерних элементов.</target>       </trans-unit>
        <trans-unit id="1099" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteStartElement(System.String,System.String)">
          <source>You can close the element with either <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteEndElement%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Xml.XmlWriter.WriteFullEndElement%2A&gt;</ph>.</source>
          <target state="translated">Вы можете закрыть элемент с помощью <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteEndElement%2A&gt;</ph> или <ph id="ph2">&lt;xref:System.Xml.XmlWriter.WriteFullEndElement%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1100" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteStartElement(System.String,System.String)">
          <source>For example, the following C# code:</source>
          <target state="translated">Например, следующий код C#:</target>       </trans-unit>
        <trans-unit id="1101" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteStartElement(System.String,System.String)">
          <source>Generates the following output:</source>
          <target state="translated">Создает следующие выходные данные:</target>       </trans-unit>
        <trans-unit id="1102" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteStartElement(System.String,System.String)">
          <source>For the asynchronous version of this method, see <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteStartElementAsync%2A&gt;</ph>.</source>
          <target state="translated">Асинхронная версия данного метода, в разделе <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteStartElementAsync%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1103" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartElement(System.String,System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">Метод <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> вызван перед завершением предыдущей асинхронной операции.</target>       </trans-unit>
        <trans-unit id="1104" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartElement(System.String,System.String)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">В этом случае возникает исключение <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> с сообщением "Асинхронная операция уже выполняется".</target>       </trans-unit>
        <trans-unit id="1105" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartElement(System.String,System.String)">
          <source>There is a character in the buffer that is a valid XML character but is not valid for the output encoding.</source>
          <target state="translated">В буфере присутствует символ, который является допустимым символом XML, но недопустим для кодирования вывода.</target>       </trans-unit>
        <trans-unit id="1106" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartElement(System.String,System.String)">
          <source>For example, if the output encoding is ASCII, you should only use characters from the range of 0 to 127 for element and attribute names.</source>
          <target state="translated">Например, если выходные данные в кодировке ASCII, для имен элементов и атрибутов следует использовать только символы из диапазона от 0 до 127.</target>       </trans-unit>
        <trans-unit id="1107" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartElement(System.String,System.String)">
          <source>The invalid character might be in the argument of this method or in an argument of previous methods that were writing to the buffer.</source>
          <target state="translated">Недопустимый символ может быть в аргументе этого метода или в каком-либо аргументе предыдущих методов, которые осуществляли запись в буфер.</target>       </trans-unit>
        <trans-unit id="1108" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartElement(System.String,System.String)">
          <source>Such characters are escaped by character entity references when possible (for example, in text nodes or attribute values).</source>
          <target state="translated">Такие знаки экранируются по возможности с помощью ссылок на сущности знаков (например, в текстовых узлах или значениях атрибутов).</target>       </trans-unit>
        <trans-unit id="1109" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartElement(System.String,System.String)">
          <source>However, the character entity reference is not allowed in element and attribute names, comments, processing instructions, or CDATA sections.</source>
          <target state="translated">Однако ссылка на сущность знака не допускается в именах элементов и атрибутов, комментариях, инструкциях по обработке и разделах CDATA.</target>       </trans-unit>
        <trans-unit id="1110" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartElement(System.String,System.String,System.String)">
          <source>The namespace prefix of the element.</source>
          <target state="translated">Префикс пространства имен элемента.</target>       </trans-unit>
        <trans-unit id="1111" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartElement(System.String,System.String,System.String)">
          <source>The local name of the element.</source>
          <target state="translated">Локальное имя элемента.</target>       </trans-unit>
        <trans-unit id="1112" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartElement(System.String,System.String,System.String)">
          <source>The namespace URI to associate with the element.</source>
          <target state="translated">URI пространства имен, связываемый с элементом.</target>       </trans-unit>
        <trans-unit id="1113" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartElement(System.String,System.String,System.String)">
          <source>When overridden in a derived class, writes the specified start tag and associates it with the given namespace and prefix.</source>
          <target state="translated">Когда переопределено в производном классе, записывает указанный открывающий тег и связывает его с заданным пространством имен и префиксом.</target>       </trans-unit>
        <trans-unit id="1114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteStartElement(System.String,System.String,System.String)">
          <source>For the asynchronous version of this method, see <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteStartElementAsync%2A&gt;</ph>.</source>
          <target state="translated">Асинхронная версия данного метода, в разделе <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteStartElementAsync%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteStartElement(System.String,System.String,System.String)">
          <source>The following example writes out an XML fragment.</source>
          <target state="translated">Следующий пример записывает фрагмента XML.</target>       </trans-unit>
        <trans-unit id="1116" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartElement(System.String,System.String,System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">Метод <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> вызван перед завершением предыдущей асинхронной операции.</target>       </trans-unit>
        <trans-unit id="1117" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartElement(System.String,System.String,System.String)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">В этом случае возникает исключение <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> с сообщением "Асинхронная операция уже выполняется".</target>       </trans-unit>
        <trans-unit id="1118" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartElement(System.String,System.String,System.String)">
          <source>There is a character in the buffer that is a valid XML character but is not valid for the output encoding.</source>
          <target state="translated">В буфере присутствует символ, который является допустимым символом XML, но недопустим для кодирования вывода.</target>       </trans-unit>
        <trans-unit id="1119" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartElement(System.String,System.String,System.String)">
          <source>For example, if the output encoding is ASCII, you should only use characters from the range of 0 to 127 for element and attribute names.</source>
          <target state="translated">Например, если выходные данные в кодировке ASCII, для имен элементов и атрибутов следует использовать только символы из диапазона от 0 до 127.</target>       </trans-unit>
        <trans-unit id="1120" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartElement(System.String,System.String,System.String)">
          <source>The invalid character might be in the argument of this method or in an argument of previous methods that were writing to the buffer.</source>
          <target state="translated">Недопустимый символ может быть в аргументе этого метода или в каком-либо аргументе предыдущих методов, которые осуществляли запись в буфер.</target>       </trans-unit>
        <trans-unit id="1121" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartElement(System.String,System.String,System.String)">
          <source>Such characters are escaped by character entity references when possible (for example, in text nodes or attribute values).</source>
          <target state="translated">Такие знаки экранируются по возможности с помощью ссылок на сущности знаков (например, в текстовых узлах или значениях атрибутов).</target>       </trans-unit>
        <trans-unit id="1122" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartElement(System.String,System.String,System.String)">
          <source>However, the character entity reference is not allowed in element and attribute names, comments, processing instructions, or CDATA sections.</source>
          <target state="translated">Однако ссылка на сущность знака не допускается в именах элементов и атрибутов, комментариях, инструкциях по обработке и разделах CDATA.</target>       </trans-unit>
        <trans-unit id="1123" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartElementAsync(System.String,System.String,System.String)">
          <source>The namespace prefix of the element.</source>
          <target state="translated">Префикс пространства имен элемента.</target>       </trans-unit>
        <trans-unit id="1124" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartElementAsync(System.String,System.String,System.String)">
          <source>The local name of the element.</source>
          <target state="translated">Локальное имя элемента.</target>       </trans-unit>
        <trans-unit id="1125" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartElementAsync(System.String,System.String,System.String)">
          <source>The namespace URI to associate with the element.</source>
          <target state="translated">URI пространства имен, связываемый с элементом.</target>       </trans-unit>
        <trans-unit id="1126" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartElementAsync(System.String,System.String,System.String)">
          <source>Asynchronously writes the specified start tag and associates it with the given namespace and prefix.</source>
          <target state="translated">Асинхронно записывает указанный открывающий тег и связывает его с заданным пространством имен и префиксом.</target>       </trans-unit>
        <trans-unit id="1127" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartElementAsync(System.String,System.String,System.String)">
          <source>The task that represents the asynchronous <ph id="ph1">&lt;see langword="WriteStartElement" /&gt;</ph> operation.</source>
          <target state="translated">Задача, представляющая асинхронную операцию <ph id="ph1">&lt;see langword="WriteStartElement" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteStartElementAsync(System.String,System.String,System.String)">
          <source>This is the asynchronous version of <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteStartElement%2A&gt;</ph>, with the same functionality.</source>
          <target state="translated">Это асинхронная версия объекта <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteStartElement%2A&gt;</ph>, с той же функции.</target>       </trans-unit>
        <trans-unit id="1129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteStartElementAsync(System.String,System.String,System.String)">
          <source>To use this method, you must set the <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.Async%2A&gt;</ph> flag to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">Чтобы использовать этот метод, необходимо задать <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.Async%2A&gt;</ph> флаг <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="1130" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartElementAsync(System.String,System.String,System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> asynchronous method was called without setting the <ph id="ph2">&lt;see cref="P:System.Xml.XmlWriterSettings.Async" /&gt;</ph> flag to <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Асинхронный метод <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> вызван без присваивания флагу <ph id="ph2">&lt;see cref="P:System.Xml.XmlWriterSettings.Async" /&gt;</ph> значения <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1131" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartElementAsync(System.String,System.String,System.String)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</source>
          <target state="translated">В этом случае вызывается исключение <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> с сообщением "Задайте параметру XmlWriterSettings.Async значение true, если вы хотите использовать асинхронные методы".</target>       </trans-unit>
        <trans-unit id="1132" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlWriter.WriteState">
          <source>When overridden in a derived class, gets the state of the writer.</source>
          <target state="translated">Когда переопределено в производном классе, возвращает состояние средства записи.</target>       </trans-unit>
        <trans-unit id="1133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlWriter.WriteState">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Xml.WriteState" /&gt;</ph> values.</source>
          <target state="translated">Одно из значений перечисления <ph id="ph1">&lt;see cref="T:System.Xml.WriteState" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1134" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlWriter.WriteState">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">Метод <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> вызван перед завершением предыдущей асинхронной операции.</target>       </trans-unit>
        <trans-unit id="1135" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlWriter.WriteState">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">В этом случае возникает исключение <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> с сообщением "Асинхронная операция уже выполняется".</target>       </trans-unit>
        <trans-unit id="1136" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteString(System.String)">
          <source>The text to write.</source>
          <target state="translated">Текст для записи.</target>       </trans-unit>
        <trans-unit id="1137" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteString(System.String)">
          <source>When overridden in a derived class, writes the given text content.</source>
          <target state="translated">Записывает заданное текстовое содержимое при переопределении в производном классе.</target>       </trans-unit>
        <trans-unit id="1138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteString(System.String)">
          <source><ph id="ph1">`WriteString`</ph> does the following:</source>
          <target state="translated">Метод <ph id="ph1">`WriteString`</ph> выполняет следующие действия.</target>       </trans-unit>
        <trans-unit id="1139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteString(System.String)">
          <source>The characters <ph id="ph1">`&amp;`</ph>, <ph id="ph2">`&lt;`</ph>, and <ph id="ph3">`&gt;`</ph> are replaced with <ph id="ph4">`&amp;amp;`</ph>, <ph id="ph5">`&amp;lt;`</ph>, and <ph id="ph6">`&amp;gt;`</ph>, respectively.</source>
          <target state="translated">Символы <ph id="ph1">`&amp;`</ph>, <ph id="ph2">`&lt;`</ph>, и <ph id="ph3">`&gt;`</ph> заменяются <ph id="ph4">`&amp;amp;`</ph>, <ph id="ph5">`&amp;lt;`</ph>, и <ph id="ph6">`&amp;gt;`</ph>соответственно.</target>       </trans-unit>
        <trans-unit id="1140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteString(System.String)">
          <source>The default behavior of an <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> created using <ph id="ph2">&lt;xref:System.Xml.XmlWriter.Create%2A&gt;</ph> is to throw an <ph id="ph3">&lt;xref:System.ArgumentException&gt;</ph> when attempting to write character values in the range 0x-0x1F (excluding white space characters 0x9, 0xA, and 0xD).</source>
          <target state="translated">Поведение по умолчанию <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> создан с помощью <ph id="ph2">&lt;xref:System.Xml.XmlWriter.Create%2A&gt;</ph> будет создание исключения <ph id="ph3">&lt;xref:System.ArgumentException&gt;</ph> при попытке записать символьные значения в диапазоне от 0 x-0x1F (кроме пробелов 0x9, 0xA и 0xD).</target>       </trans-unit>
        <trans-unit id="1141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteString(System.String)">
          <source>These invalid XML characters can be written by creating the <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> with the <ph id="ph2">&lt;xref:System.Xml.XmlWriterSettings.CheckCharacters%2A&gt;</ph> property set to <ph id="ph3">`false`</ph>.</source>
          <target state="translated">Эти недопустимые символы XML могут быть записаны, создав <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> с <ph id="ph2">&lt;xref:System.Xml.XmlWriterSettings.CheckCharacters%2A&gt;</ph> свойство <ph id="ph3">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="1142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteString(System.String)">
          <source>Doing so will result in the characters being replaced with numeric character entities (&amp;<ph id="ph1">\#</ph>0; through &amp;#0x1F).</source>
          <target state="translated">Это приведет к замене символов на числовые сущности знаков (&amp;<ph id="ph1">\#</ph>0; с помощью &amp; #0x1F).</target>       </trans-unit>
        <trans-unit id="1143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteString(System.String)">
          <source>Additionally, an <ph id="ph1">&lt;xref:System.Xml.XmlTextWriter&gt;</ph> created with the <ph id="ph2">`new`</ph> operator will replace the invalid characters with numeric character entities by default.</source>
          <target state="translated">Кроме того <ph id="ph1">&lt;xref:System.Xml.XmlTextWriter&gt;</ph> с <ph id="ph2">`new`</ph> оператор замене недопустимых символов сущностями числовых символов по умолчанию.</target>       </trans-unit>
        <trans-unit id="1144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteString(System.String)">
          <source><bpt id="p1">**</bpt>Note<ept id="p1">**</ept> Microsoft does not encourage the practice of writing invalid XML characters since many applications that consume XML are not designed to handle invalid characters.</source>
          <target state="translated"><bpt id="p1">**</bpt>Примечание<ept id="p1">**</ept> Корпорация Майкрософт не рекомендует записи недопустимых символов XML, так как многие приложения, потребляющие XML не предназначены для обработки недопустимых символов.</target>       </trans-unit>
        <trans-unit id="1145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteString(System.String)">
          <source>If <ph id="ph1">`WriteString`</ph> is called in the context of an attribute value, double and single quotes are replaced with <ph id="ph2">`&amp;quot;`</ph> and <ph id="ph3">`&amp;apos;`</ph> respectively.</source>
          <target state="translated">Если <ph id="ph1">`WriteString`</ph> вызывается в контексте значения атрибута, одинарные и двойные кавычки заменяются <ph id="ph2">`&amp;quot;`</ph> и <ph id="ph3">`&amp;apos;`</ph> соответственно.</target>       </trans-unit>
        <trans-unit id="1146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteString(System.String)">
          <source>For example, this input string <ph id="ph1">`test&lt;item&gt;test`</ph> is written out as</source>
          <target state="translated">Например, это строка ввода <ph id="ph1">`test&lt;item&gt;test`</ph> записывается как</target>       </trans-unit>
        <trans-unit id="1147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteString(System.String)">
          <source>If <ph id="ph1">`text`</ph> is either <ph id="ph2">`null`</ph> or <ph id="ph3">`String.Empty`</ph>, this method writes a text node with no data content.</source>
          <target state="translated">Если <ph id="ph1">`text`</ph> либо <ph id="ph2">`null`</ph> или <ph id="ph3">`String.Empty`</ph>, этот метод записывает текстовый узел без содержимого.</target>       </trans-unit>
        <trans-unit id="1148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteString(System.String)">
          <source>For the asynchronous version of this method, see <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteStringAsync%2A&gt;</ph>.</source>
          <target state="translated">Асинхронная версия данного метода, в разделе <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteStringAsync%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteString(System.String)">
          <source>The following example writes an XML node.</source>
          <target state="translated">Следующий пример записывает XML-узла.</target>       </trans-unit>
        <trans-unit id="1150" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteString(System.String)">
          <source>The text string contains an invalid surrogate pair.</source>
          <target state="translated">Строка текста содержит недопустимую пару символов-заместителей.</target>       </trans-unit>
        <trans-unit id="1151" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteString(System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">Метод <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> вызван перед завершением предыдущей асинхронной операции.</target>       </trans-unit>
        <trans-unit id="1152" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteString(System.String)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">В этом случае возникает исключение <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> с сообщением "Асинхронная операция уже выполняется".</target>       </trans-unit>
        <trans-unit id="1153" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStringAsync(System.String)">
          <source>The text to write.</source>
          <target state="translated">Текст для записи.</target>       </trans-unit>
        <trans-unit id="1154" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStringAsync(System.String)">
          <source>Asynchronously writes the given text content.</source>
          <target state="translated">Асинхронно записывает заданное текстовое содержимое.</target>       </trans-unit>
        <trans-unit id="1155" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStringAsync(System.String)">
          <source>The task that represents the asynchronous <ph id="ph1">&lt;see langword="WriteString" /&gt;</ph> operation.</source>
          <target state="translated">Задача, представляющая асинхронную операцию <ph id="ph1">&lt;see langword="WriteString" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteStringAsync(System.String)">
          <source>This is the asynchronous version of <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteString%2A&gt;</ph>, with the same functionality.</source>
          <target state="translated">Это асинхронная версия объекта <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteString%2A&gt;</ph>, с той же функции.</target>       </trans-unit>
        <trans-unit id="1157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteStringAsync(System.String)">
          <source>To use this method, you must set the <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.Async%2A&gt;</ph> flag to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">Чтобы использовать этот метод, необходимо задать <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.Async%2A&gt;</ph> флаг <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="1158" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStringAsync(System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> asynchronous method was called without setting the <ph id="ph2">&lt;see cref="P:System.Xml.XmlWriterSettings.Async" /&gt;</ph> flag to <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Асинхронный метод <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> вызван без присваивания флагу <ph id="ph2">&lt;see cref="P:System.Xml.XmlWriterSettings.Async" /&gt;</ph> значения <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1159" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStringAsync(System.String)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</source>
          <target state="translated">В этом случае вызывается исключение <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> с сообщением "Задайте параметру XmlWriterSettings.Async значение true, если вы хотите использовать асинхронные методы".</target>       </trans-unit>
        <trans-unit id="1160" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteSurrogateCharEntity(System.Char,System.Char)">
          <source>The low surrogate.</source>
          <target state="translated">Младший заместитель.</target>       </trans-unit>
        <trans-unit id="1161" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteSurrogateCharEntity(System.Char,System.Char)">
          <source>This must be a value between 0xDC00 and 0xDFFF.</source>
          <target state="translated">Значение должно быть в диапазоне от 0xDC00 до 0xDFFF.</target>       </trans-unit>
        <trans-unit id="1162" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteSurrogateCharEntity(System.Char,System.Char)">
          <source>The high surrogate.</source>
          <target state="translated">Старший заместитель.</target>       </trans-unit>
        <trans-unit id="1163" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteSurrogateCharEntity(System.Char,System.Char)">
          <source>This must be a value between 0xD800 and 0xDBFF.</source>
          <target state="translated">Значение должно быть в диапазоне от 0xD800 до 0xDBFF.</target>       </trans-unit>
        <trans-unit id="1164" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteSurrogateCharEntity(System.Char,System.Char)">
          <source>When overridden in a derived class, generates and writes the surrogate character entity for the surrogate character pair.</source>
          <target state="translated">Когда переопределено в производном классе, создает и записывает сущность символа-заместителя для пары символов-заместителей.</target>       </trans-unit>
        <trans-unit id="1165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteSurrogateCharEntity(System.Char,System.Char)">
          <source>This method is only applicable on systems that use UTF-16 encoding.</source>
          <target state="translated">Этот метод применим только в системах, использующих кодировку UTF-16.</target>       </trans-unit>
        <trans-unit id="1166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteSurrogateCharEntity(System.Char,System.Char)">
          <source>The surrogate character entity is written in hexadecimal format.</source>
          <target state="translated">Сущности знака записывается в шестнадцатеричном формате.</target>       </trans-unit>
        <trans-unit id="1167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteSurrogateCharEntity(System.Char,System.Char)">
          <source>The range for surrogate characters is #x10000 to #x10FFFF.</source>
          <target state="translated">Диапазон знаков-заместителей — от #x 10000 для #x10FFFF.</target>       </trans-unit>
        <trans-unit id="1168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteSurrogateCharEntity(System.Char,System.Char)">
          <source>The following formula is used to generate the surrogate character entity: (<ph id="ph1">`highChar`</ph> -0xD800) * 0x400 + (<ph id="ph2">`lowChar`</ph> -0xDC00) + 0x10000</source>
          <target state="translated">Следующая формула используется для создания сущности знака: (<ph id="ph1">`highChar`</ph> -0xD800) * 0x400 + (<ph id="ph2">`lowChar`</ph> -0xDC00) + 0x10000</target>       </trans-unit>
        <trans-unit id="1169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteSurrogateCharEntity(System.Char,System.Char)">
          <source>For both HTML and XML, the document character set (and therefore the notation of numeric character references) is based on UCS [ISO-10646].</source>
          <target state="translated">Для HTML и XML набор знаков документа (и, следовательно, нотации ссылок на числовые символы) основана на UCS [ISO 10646].</target>       </trans-unit>
        <trans-unit id="1170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteSurrogateCharEntity(System.Char,System.Char)">
          <source>A single numeric character reference in a source document may therefore in some cases correspond to two 16-bit units in a string (a high surrogate and a low surrogate).</source>
          <target state="translated">Ссылку на один символ в исходном документе может поэтому в некоторых случаях соответствовать два 16-разрядным единицам в строке (старший символ-заместитель и младший символ-заместитель).</target>       </trans-unit>
        <trans-unit id="1171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteSurrogateCharEntity(System.Char,System.Char)">
          <source>These 16-bit units are referred to as a surrogate pair.</source>
          <target state="translated">Эти 16-разрядные единицы называются суррогатную пару.</target>       </trans-unit>
        <trans-unit id="1172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteSurrogateCharEntity(System.Char,System.Char)">
          <source>For more information regarding surrogates or characters, refer to section 3.7 of the Unicode 3.0/Unicode 2.0 standard located at <ph id="ph1">http://www.unicode.org</ph>, or section 2.2 of the W3C XML 1.0 Recommendation located at <ph id="ph2">http://www.w3.org/TR/REC-xml#charsets</ph>.</source>
          <target state="translated">Дополнительные сведения о суррогаты или символы, обратитесь к разделу 3.7 Юникода 3.0/Юникод 2.0 standard, расположенный <ph id="ph1">http://www.unicode.org</ph>, или разделу 2.2 рекомендации W3C XML 1.0, расположенный <ph id="ph2">http://www.w3.org/TR/REC-xml#charsets</ph>.</target>       </trans-unit>
        <trans-unit id="1173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteSurrogateCharEntity(System.Char,System.Char)">
          <source>For the asynchronous version of this method, see <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteSurrogateCharEntityAsync%2A&gt;</ph>.</source>
          <target state="translated">Асинхронная версия данного метода, в разделе <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteSurrogateCharEntityAsync%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1174" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteSurrogateCharEntity(System.Char,System.Char)">
          <source>An invalid surrogate character pair was passed.</source>
          <target state="translated">Передана недопустимая пара символов-заместителей.</target>       </trans-unit>
        <trans-unit id="1175" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteSurrogateCharEntity(System.Char,System.Char)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">Метод <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> вызван перед завершением предыдущей асинхронной операции.</target>       </trans-unit>
        <trans-unit id="1176" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteSurrogateCharEntity(System.Char,System.Char)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">В этом случае возникает исключение <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> с сообщением "Асинхронная операция уже выполняется".</target>       </trans-unit>
        <trans-unit id="1177" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteSurrogateCharEntityAsync(System.Char,System.Char)">
          <source>The low surrogate.</source>
          <target state="translated">Младший заместитель.</target>       </trans-unit>
        <trans-unit id="1178" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteSurrogateCharEntityAsync(System.Char,System.Char)">
          <source>This must be a value between 0xDC00 and 0xDFFF.</source>
          <target state="translated">Значение должно быть в диапазоне от 0xDC00 до 0xDFFF.</target>       </trans-unit>
        <trans-unit id="1179" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteSurrogateCharEntityAsync(System.Char,System.Char)">
          <source>The high surrogate.</source>
          <target state="translated">Старший заместитель.</target>       </trans-unit>
        <trans-unit id="1180" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteSurrogateCharEntityAsync(System.Char,System.Char)">
          <source>This must be a value between 0xD800 and 0xDBFF.</source>
          <target state="translated">Значение должно быть в диапазоне от 0xD800 до 0xDBFF.</target>       </trans-unit>
        <trans-unit id="1181" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteSurrogateCharEntityAsync(System.Char,System.Char)">
          <source>Asynchronously generates and writes the surrogate character entity for the surrogate character pair.</source>
          <target state="translated">Асинхронно создает и записывает сущность символа-заместителя для пары символов-заместителей.</target>       </trans-unit>
        <trans-unit id="1182" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteSurrogateCharEntityAsync(System.Char,System.Char)">
          <source>The task that represents the asynchronous <ph id="ph1">&lt;see langword="WriteSurrogateCharEntity" /&gt;</ph> operation.</source>
          <target state="translated">Задача, представляющая асинхронную операцию <ph id="ph1">&lt;see langword="WriteSurrogateCharEntity" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteSurrogateCharEntityAsync(System.Char,System.Char)">
          <source>This is the asynchronous version of <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteSurrogateCharEntity%2A&gt;</ph>, with the same functionality.</source>
          <target state="translated">Это асинхронная версия объекта <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteSurrogateCharEntity%2A&gt;</ph>, с той же функции.</target>       </trans-unit>
        <trans-unit id="1184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteSurrogateCharEntityAsync(System.Char,System.Char)">
          <source>To use this method, you must set the <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.Async%2A&gt;</ph> flag to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">Чтобы использовать этот метод, необходимо задать <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.Async%2A&gt;</ph> флаг <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="1185" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteSurrogateCharEntityAsync(System.Char,System.Char)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> asynchronous method was called without setting the <ph id="ph2">&lt;see cref="P:System.Xml.XmlWriterSettings.Async" /&gt;</ph> flag to <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Асинхронный метод <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> вызван без присваивания флагу <ph id="ph2">&lt;see cref="P:System.Xml.XmlWriterSettings.Async" /&gt;</ph> значения <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1186" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteSurrogateCharEntityAsync(System.Char,System.Char)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</source>
          <target state="translated">В этом случае вызывается исключение <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> с сообщением "Задайте параметру XmlWriterSettings.Async значение true, если вы хотите использовать асинхронные методы".</target>       </trans-unit>
        <trans-unit id="1187" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlWriter">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">Метод <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> вызван перед завершением предыдущей асинхронной операции.</target>       </trans-unit>
        <trans-unit id="1188" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlWriter">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">В этом случае возникает исключение <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> с сообщением "Асинхронная операция уже выполняется".</target>       </trans-unit>
        <trans-unit id="1189" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlWriter">
          <source>Writes a single simple-typed value.</source>
          <target state="translated">Записывает отдельное значение простого типа.</target>       </trans-unit>
        <trans-unit id="1190" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteValue%2A&gt;</ph> method accepts common language runtime (CLR) simple-typed values, converts them to their string representations according to the XML schema definition language (XSD) data type conversion rules, and writes them out by using the <ph id="ph2">&lt;xref:System.Xml.XmlWriter.WriteString%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteValue%2A&gt;</ph> Метод принимает простого типа значения среда CLR, преобразует их в их строковые представления согласно правилам преобразования типа XML схема определения языка XSD данных и записывает их с помощью <ph id="ph2">&lt;xref:System.Xml.XmlWriter.WriteString%2A&gt;</ph> метод.</target>       </trans-unit>
        <trans-unit id="1191" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>This enables you to pipeline simple-type values with minimal reparsing overhead when passing data between <ph id="ph1">&lt;xref:System.Xml.XPath.XPathDocument&gt;</ph>, <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph>, and <ph id="ph3">&lt;xref:System.Xml.XmlWriter&gt;</ph> objects.</source>
          <target state="translated">Это дает возможность конвейер простого типа значения с минимальными повторный синтаксический анализ издержки при передаче данных между <ph id="ph1">&lt;xref:System.Xml.XPath.XPathDocument&gt;</ph>, <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph>, и <ph id="ph3">&lt;xref:System.Xml.XmlWriter&gt;</ph> объектов.</target>       </trans-unit>
        <trans-unit id="1192" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>This ability is also useful when dealing with CLR simple-types and an <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> instance.</source>
          <target state="translated">Эта возможность полезна также при работе с простыми типами CLR и <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> экземпляра.</target>       </trans-unit>
        <trans-unit id="1193" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>You can call the <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteValue%2A&gt;</ph> method to write the typed value instead of using the methods in the <ph id="ph2">&lt;xref:System.Xml.XmlConvert&gt;</ph> class to convert the typed data to a string value before writing it out.</source>
          <target state="translated">Можно вызвать <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteValue%2A&gt;</ph> метод для записи типизированного значения вместо использования методов в <ph id="ph2">&lt;xref:System.Xml.XmlConvert&gt;</ph> класса для преобразования типизированных данных перед их записью строковое значение.</target>       </trans-unit>
        <trans-unit id="1194" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>For asynchronous operations, convert the return value of <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteValue%2A&gt;</ph> to a string and use the <ph id="ph2">&lt;xref:System.Xml.XmlWriter.WriteStringAsync%2A&gt;</ph> method.</source>
          <target state="translated">Для асинхронных операций преобразовать возвращаемое значение <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteValue%2A&gt;</ph> строки и используйте <ph id="ph2">&lt;xref:System.Xml.XmlWriter.WriteStringAsync%2A&gt;</ph> метод.</target>       </trans-unit>
        <trans-unit id="1195" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>The following table shows the default XSD data types that correspond to CLR types.</source>
          <target state="translated">Ниже представлены типы данных XSD, которые соответствуют типам CLR.</target>       </trans-unit>
        <trans-unit id="1196" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>If the CLR object is a list type, such as <ph id="ph1">&lt;xref:System.Collections.IEnumerable&gt;</ph>, <ph id="ph2">&lt;xref:System.Collections.IList&gt;</ph>, or <ph id="ph3">&lt;xref:System.Collections.ICollection&gt;</ph>, it is treated as an array of the value type.</source>
          <target state="translated">Если объект CLR принадлежит к типу списка, например <ph id="ph1">&lt;xref:System.Collections.IEnumerable&gt;</ph>, <ph id="ph2">&lt;xref:System.Collections.IList&gt;</ph> или <ph id="ph3">&lt;xref:System.Collections.ICollection&gt;</ph>, то он обрабатывается как массив типа значения.</target>       </trans-unit>
        <trans-unit id="1197" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>CLR type</source>
          <target state="translated">Тип CLR</target>       </trans-unit>
        <trans-unit id="1198" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>Default XSD data type</source>
          <target state="translated">По умолчанию тип данных XSD</target>       </trans-unit>
        <trans-unit id="1199" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>xsd:boolean</source>
          <target state="translated">xsd:boolean</target>       </trans-unit>
        <trans-unit id="1200" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>xsd:integer</source>
          <target state="translated">xsd:integer</target>       </trans-unit>
        <trans-unit id="1201" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source><ph id="ph1">&lt;xref:System.Byte?displayProperty=nameWithType&gt;</ph> array</source>
          <target state="translated">Массив <ph id="ph1">&lt;xref:System.Byte?displayProperty=nameWithType&gt;</ph></target>       </trans-unit>
        <trans-unit id="1202" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>xsd:base64Binary</source>
          <target state="translated">xsd:base64Binary</target>       </trans-unit>
        <trans-unit id="1203" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>xsd:string</source>
          <target state="translated">xsd:string</target>       </trans-unit>
        <trans-unit id="1204" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>xsd:dateTime</source>
          <target state="translated">xsd:dateTime</target>       </trans-unit>
        <trans-unit id="1205" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>xsd:decimal</source>
          <target state="translated">xsd:decimal</target>       </trans-unit>
        <trans-unit id="1206" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>xsd:double</source>
          <target state="translated">xsd:double</target>       </trans-unit>
        <trans-unit id="1207" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>xsd:integer</source>
          <target state="translated">xsd:integer</target>       </trans-unit>
        <trans-unit id="1208" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>xsd:integer</source>
          <target state="translated">xsd:integer</target>       </trans-unit>
        <trans-unit id="1209" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>xsd:integer</source>
          <target state="translated">xsd:integer</target>       </trans-unit>
        <trans-unit id="1210" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>xsd:float</source>
          <target state="translated">xsd:float</target>       </trans-unit>
        <trans-unit id="1211" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>xsd:string</source>
          <target state="translated">xsd:string</target>       </trans-unit>
        <trans-unit id="1212" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>xsd:string</source>
          <target state="translated">xsd:string</target>       </trans-unit>
        <trans-unit id="1213" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>xsd:base64Binary</source>
          <target state="translated">xsd:base64Binary</target>       </trans-unit>
        <trans-unit id="1214" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>**These types are not CLS-compliant.</source>
          <target state="translated">**Эти типы не совместимы с CLS.</target>       </trans-unit>
        <trans-unit id="1215" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>They do not have corresponding <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteValue%2A&gt;</ph> methods.</source>
          <target state="translated">У пользователя нет соответствующего <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteValue%2A&gt;</ph> методы.</target>       </trans-unit>
        <trans-unit id="1216" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>If <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteValue%2A&gt;</ph> is called multiple times in succession, the values are not delimited by a space.</source>
          <target state="translated">Если <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteValue%2A&gt;</ph> вызывается несколько раз подряд, то значения не разделяются пробелом.</target>       </trans-unit>
        <trans-unit id="1217" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>You must call <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteWhitespace%2A&gt;</ph> between calls to <ph id="ph2">&lt;xref:System.Xml.XmlWriter.WriteValue%2A&gt;</ph> to insert white space.</source>
          <target state="translated">Для вставки пробела необходимо вызывать метод <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteWhitespace%2A&gt;</ph> между вызовами <ph id="ph2">&lt;xref:System.Xml.XmlWriter.WriteValue%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1218" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteValue(System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> value to write.</source>
          <target state="translated">Значение <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> для записи.</target>       </trans-unit>
        <trans-unit id="1219" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteValue(System.Boolean)">
          <source>Writes a <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> value.</source>
          <target state="translated">Записывает значение <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteValue(System.Boolean)">
          <source>This method takes the common language runtime object and converts the input value to the desired output type using the XML Schema definition language (XSD) data type conversion rules.</source>
          <target state="translated">Этот метод принимает объект CLR и преобразует входное значение в необходимый выходной тип с помощью правил преобразования типов данных схемы XML определения языка XSD.</target>       </trans-unit>
        <trans-unit id="1221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteValue(System.Boolean)">
          <source>When the <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteValue%2A&gt;</ph> method is called, the <ph id="ph2">&lt;xref:System.Xml.XmlWriter&gt;</ph> converts the value to its string representations according to the XML Schema (XSD) data type rules and writes it out using the <ph id="ph3">&lt;xref:System.Xml.XmlWriter.WriteString%2A&gt;</ph> method.</source>
          <target state="translated">При вызове метода <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteValue%2A&gt;</ph> <ph id="ph2">&lt;xref:System.Xml.XmlWriter&gt;</ph> преобразует значение в строковое представление в соответствии с правилами типа данных XSD и записывает его с помощью метода <ph id="ph3">&lt;xref:System.Xml.XmlWriter.WriteString%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteValue(System.Boolean)">
          <source>If <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteValue%2A&gt;</ph> is called multiple times in succession, the values are not delimited by a space.</source>
          <target state="translated">Если <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteValue%2A&gt;</ph> вызывается несколько раз подряд, то значения не разделяются пробелом.</target>       </trans-unit>
        <trans-unit id="1223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteValue(System.Boolean)">
          <source>You must call <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteWhitespace%2A&gt;</ph> between calls to <ph id="ph2">&lt;xref:System.Xml.XmlWriter.WriteValue%2A&gt;</ph> to insert white space.</source>
          <target state="translated">Для вставки пробела необходимо вызывать метод <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteWhitespace%2A&gt;</ph> между вызовами <ph id="ph2">&lt;xref:System.Xml.XmlWriter.WriteValue%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteValue(System.Boolean)">
          <source>Pass an array type to the <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteValue%28System.Object%29?displayProperty=nameWithType&gt;</ph> overload to write out an array of distinct values.</source>
          <target state="translated">Является типом массива, чтобы передать <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteValue%28System.Object%29?displayProperty=nameWithType&gt;</ph> перегрузку, чтобы записать массив различных значений.</target>       </trans-unit>
        <trans-unit id="1225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteValue(System.Boolean)">
          <source>If this method is called on an <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> instance that outputs text-only, the typed value is serialized to text.</source>
          <target state="translated">Если этот метод вызывается для <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> экземпляра, выходы текстовыми, типизированное значение сериализуется в текст.</target>       </trans-unit>
        <trans-unit id="1226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteValue(System.Boolean)">
          <source>For asynchronous operations, convert the return value of this method to a string and use the <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteStringAsync%2A&gt;</ph> method.</source>
          <target state="translated">Для асинхронных операций преобразовать возвращаемое значение этого метода в строку и использовать <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteStringAsync%2A&gt;</ph> метода.</target>       </trans-unit>
        <trans-unit id="1227" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteValue(System.Boolean)">
          <source>An invalid value was specified.</source>
          <target state="translated">Указано недопустимое значение.</target>       </trans-unit>
        <trans-unit id="1228" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteValue(System.Boolean)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">Метод <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> вызван перед завершением предыдущей асинхронной операции.</target>       </trans-unit>
        <trans-unit id="1229" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteValue(System.Boolean)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">В этом случае возникает исключение <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> с сообщением "Асинхронная операция уже выполняется".</target>       </trans-unit>
        <trans-unit id="1230" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteValue(System.DateTime)">
          <source>The <ph id="ph1">&lt;see cref="T:System.DateTime" /&gt;</ph> value to write.</source>
          <target state="translated">Значение <ph id="ph1">&lt;see cref="T:System.DateTime" /&gt;</ph> для записи.</target>       </trans-unit>
        <trans-unit id="1231" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteValue(System.DateTime)">
          <source>Writes a <ph id="ph1">&lt;see cref="T:System.DateTime" /&gt;</ph> value.</source>
          <target state="translated">Записывает значение <ph id="ph1">&lt;see cref="T:System.DateTime" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteValue(System.DateTime)">
          <source>This method takes the common language runtime object and converts the input value to the desired output type using the XML Schema definition language (XSD) data type conversion rules.</source>
          <target state="translated">Этот метод принимает объект CLR и преобразует входное значение в необходимый выходной тип с помощью правил преобразования типов данных схемы XML определения языка XSD.</target>       </trans-unit>
        <trans-unit id="1233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteValue(System.DateTime)">
          <source>When the <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteValue%2A&gt;</ph> method is called, the <ph id="ph2">&lt;xref:System.Xml.XmlWriter&gt;</ph> converts the value to its string representations according to the XML Schema (XSD) data type rules and writes it out using the <ph id="ph3">&lt;xref:System.Xml.XmlWriter.WriteString%2A&gt;</ph> method.</source>
          <target state="translated">При вызове метода <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteValue%2A&gt;</ph> <ph id="ph2">&lt;xref:System.Xml.XmlWriter&gt;</ph> преобразует значение в строковое представление в соответствии с правилами типа данных XSD и записывает его с помощью метода <ph id="ph3">&lt;xref:System.Xml.XmlWriter.WriteString%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteValue(System.DateTime)">
          <source>If <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteValue%2A&gt;</ph> is called multiple times in succession, the values are not delimited by a space.</source>
          <target state="translated">Если <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteValue%2A&gt;</ph> вызывается несколько раз подряд, то значения не разделяются пробелом.</target>       </trans-unit>
        <trans-unit id="1235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteValue(System.DateTime)">
          <source>You must call <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteWhitespace%2A&gt;</ph> between calls to <ph id="ph2">&lt;xref:System.Xml.XmlWriter.WriteValue%2A&gt;</ph> to insert white space.</source>
          <target state="translated">Для вставки пробела необходимо вызывать метод <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteWhitespace%2A&gt;</ph> между вызовами <ph id="ph2">&lt;xref:System.Xml.XmlWriter.WriteValue%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1236" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteValue(System.DateTime)">
          <source>Pass an array type to the <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteValue%28System.Object%29?displayProperty=nameWithType&gt;</ph> overload to write out an array of distinct values.</source>
          <target state="translated">Является типом массива, чтобы передать <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteValue%28System.Object%29?displayProperty=nameWithType&gt;</ph> перегрузку, чтобы записать массив различных значений.</target>       </trans-unit>
        <trans-unit id="1237" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteValue(System.DateTime)">
          <source>If this method is called on an <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> instance that outputs text-only, the typed value is serialized to text.</source>
          <target state="translated">Если этот метод вызывается для <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> экземпляра, выходы текстовыми, типизированное значение сериализуется в текст.</target>       </trans-unit>
        <trans-unit id="1238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteValue(System.DateTime)">
          <source>For asynchronous operations, convert the return value of this method to a string and use the <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteStringAsync%2A&gt;</ph> method.</source>
          <target state="translated">Для асинхронных операций преобразовать возвращаемое значение этого метода в строку и использовать <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteStringAsync%2A&gt;</ph> метода.</target>       </trans-unit>
        <trans-unit id="1239" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteValue(System.DateTime)">
          <source>The following example writes a book node using typed data.</source>
          <target state="translated">Следующий пример записи узла книги с помощью введенных данных.</target>       </trans-unit>
        <trans-unit id="1240" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteValue(System.DateTime)">
          <source>An invalid value was specified.</source>
          <target state="translated">Указано недопустимое значение.</target>       </trans-unit>
        <trans-unit id="1241" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteValue(System.DateTime)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">Метод <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> вызван перед завершением предыдущей асинхронной операции.</target>       </trans-unit>
        <trans-unit id="1242" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteValue(System.DateTime)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">В этом случае возникает исключение <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> с сообщением "Асинхронная операция уже выполняется".</target>       </trans-unit>
        <trans-unit id="1243" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteValue(System.DateTimeOffset)">
          <source>The <ph id="ph1">&lt;see cref="T:System.DateTimeOffset" /&gt;</ph> value to write.</source>
          <target state="translated">Значение <ph id="ph1">&lt;see cref="T:System.DateTimeOffset" /&gt;</ph> для записи.</target>       </trans-unit>
        <trans-unit id="1244" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteValue(System.DateTimeOffset)">
          <source>Writes a <ph id="ph1">&lt;see cref="T:System.DateTimeOffset" /&gt;</ph> value.</source>
          <target state="translated">Записывает значение <ph id="ph1">&lt;see cref="T:System.DateTimeOffset" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteValue(System.DateTimeOffset)">
          <source>For asynchronous operations, convert the return value of this method to a string and use the <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteStringAsync%2A&gt;</ph> method.</source>
          <target state="translated">Для асинхронных операций преобразовать возвращаемое значение этого метода в строку и использовать <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteStringAsync%2A&gt;</ph> метода.</target>       </trans-unit>
        <trans-unit id="1246" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteValue(System.DateTimeOffset)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">Метод <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> вызван перед завершением предыдущей асинхронной операции.</target>       </trans-unit>
        <trans-unit id="1247" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteValue(System.DateTimeOffset)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">В этом случае возникает исключение <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> с сообщением "Асинхронная операция уже выполняется".</target>       </trans-unit>
        <trans-unit id="1248" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteValue(System.Decimal)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> value to write.</source>
          <target state="translated">Значение <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> для записи.</target>       </trans-unit>
        <trans-unit id="1249" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteValue(System.Decimal)">
          <source>Writes a <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> value.</source>
          <target state="translated">Записывает значение <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1250" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteValue(System.Decimal)">
          <source>This method takes the common language runtime object and converts the input value to the desired output type using the XML Schema definition language (XSD) data type conversion rules.</source>
          <target state="translated">Этот метод принимает объект CLR и преобразует входное значение в необходимый выходной тип с помощью правил преобразования типов данных схемы XML определения языка XSD.</target>       </trans-unit>
        <trans-unit id="1251" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteValue(System.Decimal)">
          <source>When the <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteValue%2A&gt;</ph> method is called, the <ph id="ph2">&lt;xref:System.Xml.XmlWriter&gt;</ph> converts the value to its string representations according to the XML Schema (XSD) data type rules and writes it out using the <ph id="ph3">&lt;xref:System.Xml.XmlWriter.WriteString%2A&gt;</ph> method.</source>
          <target state="translated">При вызове метода <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteValue%2A&gt;</ph> <ph id="ph2">&lt;xref:System.Xml.XmlWriter&gt;</ph> преобразует значение в строковое представление в соответствии с правилами типа данных XSD и записывает его с помощью метода <ph id="ph3">&lt;xref:System.Xml.XmlWriter.WriteString%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteValue(System.Decimal)">
          <source>If <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteValue%2A&gt;</ph> is called multiple times in succession, the values are not delimited by a space.</source>
          <target state="translated">Если <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteValue%2A&gt;</ph> вызывается несколько раз подряд, то значения не разделяются пробелом.</target>       </trans-unit>
        <trans-unit id="1253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteValue(System.Decimal)">
          <source>You must call <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteWhitespace%2A&gt;</ph> between calls to <ph id="ph2">&lt;xref:System.Xml.XmlWriter.WriteValue%2A&gt;</ph> to insert white space.</source>
          <target state="translated">Для вставки пробела необходимо вызывать метод <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteWhitespace%2A&gt;</ph> между вызовами <ph id="ph2">&lt;xref:System.Xml.XmlWriter.WriteValue%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteValue(System.Decimal)">
          <source>Pass an array type to the <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteValue%28System.Object%29?displayProperty=nameWithType&gt;</ph> overload to write out an array of distinct values.</source>
          <target state="translated">Является типом массива, чтобы передать <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteValue%28System.Object%29?displayProperty=nameWithType&gt;</ph> перегрузку, чтобы записать массив различных значений.</target>       </trans-unit>
        <trans-unit id="1255" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteValue(System.Decimal)">
          <source>If this method is called on an <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> instance that outputs text-only, the typed value is serialized to text.</source>
          <target state="translated">Если этот метод вызывается для <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> экземпляра, выходы текстовыми, типизированное значение сериализуется в текст.</target>       </trans-unit>
        <trans-unit id="1256" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteValue(System.Decimal)">
          <source>For asynchronous operations, convert the return value of this method to a string and use the <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteStringAsync%2A&gt;</ph> method.</source>
          <target state="translated">Для асинхронных операций преобразовать возвращаемое значение этого метода в строку и использовать <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteStringAsync%2A&gt;</ph> метода.</target>       </trans-unit>
        <trans-unit id="1257" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteValue(System.Decimal)">
          <source>An invalid value was specified.</source>
          <target state="translated">Указано недопустимое значение.</target>       </trans-unit>
        <trans-unit id="1258" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteValue(System.Decimal)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">Метод <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> вызван перед завершением предыдущей асинхронной операции.</target>       </trans-unit>
        <trans-unit id="1259" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteValue(System.Decimal)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">В этом случае возникает исключение <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> с сообщением "Асинхронная операция уже выполняется".</target>       </trans-unit>
        <trans-unit id="1260" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteValue(System.Double)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> value to write.</source>
          <target state="translated">Значение <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> для записи.</target>       </trans-unit>
        <trans-unit id="1261" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteValue(System.Double)">
          <source>Writes a <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> value.</source>
          <target state="translated">Записывает значение <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteValue(System.Double)">
          <source>This method takes the common language runtime object and converts the input value to the desired output type using the XML Schema definition language (XSD) data type conversion rules.</source>
          <target state="translated">Этот метод принимает объект CLR и преобразует входное значение в необходимый выходной тип с помощью правил преобразования типов данных схемы XML определения языка XSD.</target>       </trans-unit>
        <trans-unit id="1263" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteValue(System.Double)">
          <source>When the <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteValue%2A&gt;</ph> method is called, the <ph id="ph2">&lt;xref:System.Xml.XmlWriter&gt;</ph> converts the value to its string representations according to the XML Schema (XSD) data type rules and writes it out using the <ph id="ph3">&lt;xref:System.Xml.XmlWriter.WriteString%2A&gt;</ph> method.</source>
          <target state="translated">При вызове метода <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteValue%2A&gt;</ph> <ph id="ph2">&lt;xref:System.Xml.XmlWriter&gt;</ph> преобразует значение в строковое представление в соответствии с правилами типа данных XSD и записывает его с помощью метода <ph id="ph3">&lt;xref:System.Xml.XmlWriter.WriteString%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1264" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteValue(System.Double)">
          <source>If <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteValue%2A&gt;</ph> is called multiple times in succession, the values are not delimited by a space.</source>
          <target state="translated">Если <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteValue%2A&gt;</ph> вызывается несколько раз подряд, то значения не разделяются пробелом.</target>       </trans-unit>
        <trans-unit id="1265" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteValue(System.Double)">
          <source>You must call <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteWhitespace%2A&gt;</ph> between calls to <ph id="ph2">&lt;xref:System.Xml.XmlWriter.WriteValue%2A&gt;</ph> to insert white space.</source>
          <target state="translated">Для вставки пробела необходимо вызывать метод <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteWhitespace%2A&gt;</ph> между вызовами <ph id="ph2">&lt;xref:System.Xml.XmlWriter.WriteValue%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1266" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteValue(System.Double)">
          <source>Pass an array type to the <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteValue%28System.Object%29?displayProperty=nameWithType&gt;</ph> overload to write out an array of distinct values.</source>
          <target state="translated">Является типом массива, чтобы передать <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteValue%28System.Object%29?displayProperty=nameWithType&gt;</ph> перегрузку, чтобы записать массив различных значений.</target>       </trans-unit>
        <trans-unit id="1267" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteValue(System.Double)">
          <source>If this method is called on an <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> instance that outputs text-only, the typed value is serialized to text.</source>
          <target state="translated">Если этот метод вызывается для <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> экземпляра, выходы текстовыми, типизированное значение сериализуется в текст.</target>       </trans-unit>
        <trans-unit id="1268" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteValue(System.Double)">
          <source>For asynchronous operations, convert the return value of this method to a string and use the <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteStringAsync%2A&gt;</ph> method.</source>
          <target state="translated">Для асинхронных операций преобразовать возвращаемое значение этого метода в строку и использовать <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteStringAsync%2A&gt;</ph> метода.</target>       </trans-unit>
        <trans-unit id="1269" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteValue(System.Double)">
          <source>The following example writes a book node using typed data.</source>
          <target state="translated">Следующий пример записи узла книги с помощью введенных данных.</target>       </trans-unit>
        <trans-unit id="1270" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteValue(System.Double)">
          <source>An invalid value was specified.</source>
          <target state="translated">Указано недопустимое значение.</target>       </trans-unit>
        <trans-unit id="1271" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteValue(System.Double)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">Метод <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> вызван перед завершением предыдущей асинхронной операции.</target>       </trans-unit>
        <trans-unit id="1272" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteValue(System.Double)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">В этом случае возникает исключение <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> с сообщением "Асинхронная операция уже выполняется".</target>       </trans-unit>
        <trans-unit id="1273" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteValue(System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> value to write.</source>
          <target state="translated">Значение <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> для записи.</target>       </trans-unit>
        <trans-unit id="1274" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteValue(System.Int32)">
          <source>Writes a <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> value.</source>
          <target state="translated">Записывает значение <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1275" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteValue(System.Int32)">
          <source>This method takes the common language runtime object and converts the input value to the desired output type using the XML Schema definition language (XSD) data type conversion rules.</source>
          <target state="translated">Этот метод принимает объект CLR и преобразует входное значение в необходимый выходной тип с помощью правил преобразования типов данных схемы XML определения языка XSD.</target>       </trans-unit>
        <trans-unit id="1276" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteValue(System.Int32)">
          <source>When the <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteValue%2A&gt;</ph> method is called, the <ph id="ph2">&lt;xref:System.Xml.XmlWriter&gt;</ph> converts the value to its string representations according to the XML Schema (XSD) data type rules and writes it out using the <ph id="ph3">&lt;xref:System.Xml.XmlWriter.WriteString%2A&gt;</ph> method.</source>
          <target state="translated">При вызове метода <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteValue%2A&gt;</ph> <ph id="ph2">&lt;xref:System.Xml.XmlWriter&gt;</ph> преобразует значение в строковое представление в соответствии с правилами типа данных XSD и записывает его с помощью метода <ph id="ph3">&lt;xref:System.Xml.XmlWriter.WriteString%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1277" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteValue(System.Int32)">
          <source>If <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteValue%2A&gt;</ph> is called multiple times in succession, the values are not delimited by a space.</source>
          <target state="translated">Если <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteValue%2A&gt;</ph> вызывается несколько раз подряд, то значения не разделяются пробелом.</target>       </trans-unit>
        <trans-unit id="1278" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteValue(System.Int32)">
          <source>You must call <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteWhitespace%2A&gt;</ph> between calls to <ph id="ph2">&lt;xref:System.Xml.XmlWriter.WriteValue%2A&gt;</ph> to insert white space.</source>
          <target state="translated">Для вставки пробела необходимо вызывать метод <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteWhitespace%2A&gt;</ph> между вызовами <ph id="ph2">&lt;xref:System.Xml.XmlWriter.WriteValue%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1279" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteValue(System.Int32)">
          <source>Pass an array type to the <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteValue%28System.Object%29?displayProperty=nameWithType&gt;</ph> overload to write out an array of distinct values.</source>
          <target state="translated">Является типом массива, чтобы передать <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteValue%28System.Object%29?displayProperty=nameWithType&gt;</ph> перегрузку, чтобы записать массив различных значений.</target>       </trans-unit>
        <trans-unit id="1280" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteValue(System.Int32)">
          <source>If this method is called on an <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> instance that outputs text-only, the typed value is serialized to text.</source>
          <target state="translated">Если этот метод вызывается для <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> экземпляра, выходы текстовыми, типизированное значение сериализуется в текст.</target>       </trans-unit>
        <trans-unit id="1281" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteValue(System.Int32)">
          <source>For asynchronous operations, convert the return value of this method to a string and use the <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteStringAsync%2A&gt;</ph> method.</source>
          <target state="translated">Для асинхронных операций преобразовать возвращаемое значение этого метода в строку и использовать <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteStringAsync%2A&gt;</ph> метода.</target>       </trans-unit>
        <trans-unit id="1282" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteValue(System.Int32)">
          <source>An invalid value was specified.</source>
          <target state="translated">Указано недопустимое значение.</target>       </trans-unit>
        <trans-unit id="1283" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteValue(System.Int32)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">Метод <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> вызван перед завершением предыдущей асинхронной операции.</target>       </trans-unit>
        <trans-unit id="1284" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteValue(System.Int32)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">В этом случае возникает исключение <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> с сообщением "Асинхронная операция уже выполняется".</target>       </trans-unit>
        <trans-unit id="1285" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteValue(System.Int64)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> value to write.</source>
          <target state="translated">Значение <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> для записи.</target>       </trans-unit>
        <trans-unit id="1286" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteValue(System.Int64)">
          <source>Writes a <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> value.</source>
          <target state="translated">Записывает значение <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1287" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteValue(System.Int64)">
          <source>This method takes the common language runtime object and converts the input value to the desired output type using the XML Schema definition language (XSD) data type conversion rules.</source>
          <target state="translated">Этот метод принимает объект CLR и преобразует входное значение в необходимый выходной тип с помощью правил преобразования типов данных схемы XML определения языка XSD.</target>       </trans-unit>
        <trans-unit id="1288" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteValue(System.Int64)">
          <source>When the <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteValue%2A&gt;</ph> method is called, the <ph id="ph2">&lt;xref:System.Xml.XmlWriter&gt;</ph> converts the value to its string representations according to the XML Schema (XSD) data type rules and writes it out using the <ph id="ph3">&lt;xref:System.Xml.XmlWriter.WriteString%2A&gt;</ph> method.</source>
          <target state="translated">При вызове метода <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteValue%2A&gt;</ph> <ph id="ph2">&lt;xref:System.Xml.XmlWriter&gt;</ph> преобразует значение в строковое представление в соответствии с правилами типа данных XSD и записывает его с помощью метода <ph id="ph3">&lt;xref:System.Xml.XmlWriter.WriteString%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteValue(System.Int64)">
          <source>If <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteValue%2A&gt;</ph> is called multiple times in succession, the values are not delimited by a space.</source>
          <target state="translated">Если <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteValue%2A&gt;</ph> вызывается несколько раз подряд, то значения не разделяются пробелом.</target>       </trans-unit>
        <trans-unit id="1290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteValue(System.Int64)">
          <source>You must call <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteWhitespace%2A&gt;</ph> between calls to <ph id="ph2">&lt;xref:System.Xml.XmlWriter.WriteValue%2A&gt;</ph> to insert white space.</source>
          <target state="translated">Для вставки пробела необходимо вызывать метод <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteWhitespace%2A&gt;</ph> между вызовами <ph id="ph2">&lt;xref:System.Xml.XmlWriter.WriteValue%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1291" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteValue(System.Int64)">
          <source>Pass an array type to the <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteValue%28System.Object%29?displayProperty=nameWithType&gt;</ph> overload to write out an array of distinct values.</source>
          <target state="translated">Является типом массива, чтобы передать <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteValue%28System.Object%29?displayProperty=nameWithType&gt;</ph> перегрузку, чтобы записать массив различных значений.</target>       </trans-unit>
        <trans-unit id="1292" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteValue(System.Int64)">
          <source>If this method is called on an <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> instance that outputs text-only, the typed value is serialized to text.</source>
          <target state="translated">Если этот метод вызывается для <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> экземпляра, выходы текстовыми, типизированное значение сериализуется в текст.</target>       </trans-unit>
        <trans-unit id="1293" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteValue(System.Int64)">
          <source>For asynchronous operations, convert the return value of this method to a string and use the <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteStringAsync%2A&gt;</ph> method.</source>
          <target state="translated">Для асинхронных операций преобразовать возвращаемое значение этого метода в строку и использовать <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteStringAsync%2A&gt;</ph> метода.</target>       </trans-unit>
        <trans-unit id="1294" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteValue(System.Int64)">
          <source>An invalid value was specified.</source>
          <target state="translated">Указано недопустимое значение.</target>       </trans-unit>
        <trans-unit id="1295" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteValue(System.Int64)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">Метод <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> вызван перед завершением предыдущей асинхронной операции.</target>       </trans-unit>
        <trans-unit id="1296" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteValue(System.Int64)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">В этом случае возникает исключение <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> с сообщением "Асинхронная операция уже выполняется".</target>       </trans-unit>
        <trans-unit id="1297" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteValue(System.Object)">
          <source>The object value to write.</source>
          <target state="translated">Значение объекта для записи.</target>       </trans-unit>
        <trans-unit id="1298" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteValue(System.Object)">
          <source><bpt id="p1">**</bpt>Note<ept id="p1">**</ept> With the release of the .NET Framework 3.5, this method accepts <ph id="ph1">&lt;see cref="T:System.DateTimeOffset" /&gt;</ph> as a parameter.</source>
          <target state="translated"><bpt id="p1">**</bpt>Примечание<ept id="p1">**</ept>. С выпуском платформы .NET Framework 3.5 этот метод принимает <ph id="ph1">&lt;see cref="T:System.DateTimeOffset" /&gt;</ph> в качестве параметра.</target>       </trans-unit>
        <trans-unit id="1299" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteValue(System.Object)">
          <source>Writes the object value.</source>
          <target state="translated">Записывает значение объекта.</target>       </trans-unit>
        <trans-unit id="1300" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteValue(System.Object)">
          <source>This method takes the common language runtime (CLR) object and converts the input value to the desired output type using the XML Schema definition language (XSD) data type conversion rules.</source>
          <target state="translated">Этот метод использует объект среды CLR и преобразует входное значение в необходимый выходной тип с помощью правил преобразования типов данных схемы XML определения языка XSD.</target>       </trans-unit>
        <trans-unit id="1301" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteValue(System.Object)">
          <source>If the CLR object is a list type such as <ph id="ph1">&lt;xref:System.Collections.IEnumerable&gt;</ph>, <ph id="ph2">&lt;xref:System.Collections.IList&gt;</ph>, or <ph id="ph3">&lt;xref:System.Collections.ICollection&gt;</ph>, it is treated as an array of the value type.</source>
          <target state="translated">Если объект CLR принадлежит к типу списка таких как <ph id="ph1">&lt;xref:System.Collections.IEnumerable&gt;</ph>, <ph id="ph2">&lt;xref:System.Collections.IList&gt;</ph>, или <ph id="ph3">&lt;xref:System.Collections.ICollection&gt;</ph>, она обрабатывается как массив типа значения.</target>       </trans-unit>
        <trans-unit id="1302" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteValue(System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> converts the value to its string representations according to the XML Schema (XSD) data type rules and writes it out using the <ph id="ph2">&lt;xref:System.Xml.XmlWriter.WriteString%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> Преобразует значение в строковое представление в соответствии с типом данных схемы XML (XSD), правила и записывает его с помощью <ph id="ph2">&lt;xref:System.Xml.XmlWriter.WriteString%2A&gt;</ph> метод.</target>       </trans-unit>
        <trans-unit id="1303" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteValue(System.Object)">
          <source>If this method is called on an <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> instance that outputs text-only, the typed value is serialized to text.</source>
          <target state="translated">Если этот метод вызывается для <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> экземпляра, выходы текстовыми, типизированное значение сериализуется в текст.</target>       </trans-unit>
        <trans-unit id="1304" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteValue(System.Object)">
          <source>For asynchronous operations, convert the return value of this method to a string and use the <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteStringAsync%2A&gt;</ph> method.</source>
          <target state="translated">Для асинхронных операций преобразовать возвращаемое значение этого метода в строку и использовать <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteStringAsync%2A&gt;</ph> метода.</target>       </trans-unit>
        <trans-unit id="1305" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteValue(System.Object)">
          <source>An invalid value was specified.</source>
          <target state="translated">Указано недопустимое значение.</target>       </trans-unit>
        <trans-unit id="1306" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteValue(System.Object)">
          <source>The <ph id="ph1">&lt;paramref name="value" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Значение параметра <ph id="ph1">&lt;paramref name="value" /&gt;</ph> — <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1307" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteValue(System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">Метод <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> вызван перед завершением предыдущей асинхронной операции.</target>       </trans-unit>
        <trans-unit id="1308" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteValue(System.Object)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">В этом случае возникает исключение <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> с сообщением "Асинхронная операция уже выполняется".</target>       </trans-unit>
        <trans-unit id="1309" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteValue(System.Single)">
          <source>The single-precision floating-point number to write.</source>
          <target state="translated">Число с плавающей запятой одиночной точности для записи.</target>       </trans-unit>
        <trans-unit id="1310" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteValue(System.Single)">
          <source>Writes a single-precision floating-point number.</source>
          <target state="translated">Записывает число с плавающей запятой одиночной точности.</target>       </trans-unit>
        <trans-unit id="1311" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteValue(System.Single)">
          <source>This method takes the common language runtime object and converts the input value to the desired output type using the XML Schema definition language (XSD) data type conversion rules.</source>
          <target state="translated">Этот метод принимает объект CLR и преобразует входное значение в необходимый выходной тип с помощью правил преобразования типов данных схемы XML определения языка XSD.</target>       </trans-unit>
        <trans-unit id="1312" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteValue(System.Single)">
          <source>When the <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteValue%2A&gt;</ph> method is called, the <ph id="ph2">&lt;xref:System.Xml.XmlWriter&gt;</ph> converts the value to its string representations according to the XML Schema (XSD) data type rules and writes it out using the <ph id="ph3">&lt;xref:System.Xml.XmlWriter.WriteString%2A&gt;</ph> method.</source>
          <target state="translated">При вызове метода <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteValue%2A&gt;</ph> <ph id="ph2">&lt;xref:System.Xml.XmlWriter&gt;</ph> преобразует значение в строковое представление в соответствии с правилами типа данных XSD и записывает его с помощью метода <ph id="ph3">&lt;xref:System.Xml.XmlWriter.WriteString%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1313" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteValue(System.Single)">
          <source>If <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteValue%2A&gt;</ph> is called multiple times in succession, the values are not delimited by a space.</source>
          <target state="translated">Если <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteValue%2A&gt;</ph> вызывается несколько раз подряд, то значения не разделяются пробелом.</target>       </trans-unit>
        <trans-unit id="1314" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteValue(System.Single)">
          <source>You must call <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteWhitespace%2A&gt;</ph> between calls to <ph id="ph2">&lt;xref:System.Xml.XmlWriter.WriteValue%2A&gt;</ph> to insert white space.</source>
          <target state="translated">Для вставки пробела необходимо вызывать метод <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteWhitespace%2A&gt;</ph> между вызовами <ph id="ph2">&lt;xref:System.Xml.XmlWriter.WriteValue%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1315" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteValue(System.Single)">
          <source>Pass an array type to the <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteValue%28System.Object%29?displayProperty=nameWithType&gt;</ph> overload to write out an array of distinct values.</source>
          <target state="translated">Является типом массива, чтобы передать <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteValue%28System.Object%29?displayProperty=nameWithType&gt;</ph> перегрузку, чтобы записать массив различных значений.</target>       </trans-unit>
        <trans-unit id="1316" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteValue(System.Single)">
          <source>If this method is called on an <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> instance that outputs text-only, the typed value is serialized to text.</source>
          <target state="translated">Если этот метод вызывается для <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> экземпляра, выходы текстовыми, типизированное значение сериализуется в текст.</target>       </trans-unit>
        <trans-unit id="1317" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteValue(System.Single)">
          <source>For asynchronous operations, convert the return value of this method to a string and use the <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteStringAsync%2A&gt;</ph> method.</source>
          <target state="translated">Для асинхронных операций преобразовать возвращаемое значение этого метода в строку и использовать <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteStringAsync%2A&gt;</ph> метода.</target>       </trans-unit>
        <trans-unit id="1318" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteValue(System.Single)">
          <source>An invalid value was specified.</source>
          <target state="translated">Указано недопустимое значение.</target>       </trans-unit>
        <trans-unit id="1319" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteValue(System.Single)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">Метод <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> вызван перед завершением предыдущей асинхронной операции.</target>       </trans-unit>
        <trans-unit id="1320" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteValue(System.Single)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">В этом случае возникает исключение <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> с сообщением "Асинхронная операция уже выполняется".</target>       </trans-unit>
        <trans-unit id="1321" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteValue(System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> value to write.</source>
          <target state="translated">Значение <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> для записи.</target>       </trans-unit>
        <trans-unit id="1322" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteValue(System.String)">
          <source>Writes a <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> value.</source>
          <target state="translated">Записывает значение <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1323" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteValue(System.String)">
          <source>This method takes the common language runtime object and converts the input value to the desired output type using the XML Schema definition language (XSD) data type conversion rules.</source>
          <target state="translated">Этот метод принимает объект CLR и преобразует входное значение в необходимый выходной тип с помощью правил преобразования типов данных схемы XML определения языка XSD.</target>       </trans-unit>
        <trans-unit id="1324" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteValue(System.String)">
          <source>If <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteValue%2A&gt;</ph> is called multiple times in succession, the values are not delimited by a space.</source>
          <target state="translated">Если <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteValue%2A&gt;</ph> вызывается несколько раз подряд, то значения не разделяются пробелом.</target>       </trans-unit>
        <trans-unit id="1325" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteValue(System.String)">
          <source>You must call <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteWhitespace%2A&gt;</ph> between calls to <ph id="ph2">&lt;xref:System.Xml.XmlWriter.WriteValue%2A&gt;</ph> to insert white space.</source>
          <target state="translated">Для вставки пробела необходимо вызывать метод <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteWhitespace%2A&gt;</ph> между вызовами <ph id="ph2">&lt;xref:System.Xml.XmlWriter.WriteValue%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1326" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteValue(System.String)">
          <source>Pass an array type to the <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteValue%28System.Object%29?displayProperty=nameWithType&gt;</ph> overload to write out an array of distinct values.</source>
          <target state="translated">Является типом массива, чтобы передать <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteValue%28System.Object%29?displayProperty=nameWithType&gt;</ph> перегрузку, чтобы записать массив различных значений.</target>       </trans-unit>
        <trans-unit id="1327" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteValue(System.String)">
          <source>If this method is called on an <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> instance that outputs text-only, the typed value is serialized to text.</source>
          <target state="translated">Если этот метод вызывается для <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> экземпляра, выходы текстовыми, типизированное значение сериализуется в текст.</target>       </trans-unit>
        <trans-unit id="1328" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteValue(System.String)">
          <source>For asynchronous operations, use the <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteStringAsync%2A&gt;</ph> method.</source>
          <target state="translated">Асинхронные операции, используйте <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteStringAsync%2A&gt;</ph> метод.</target>       </trans-unit>
        <trans-unit id="1329" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteValue(System.String)">
          <source>An invalid value was specified.</source>
          <target state="translated">Указано недопустимое значение.</target>       </trans-unit>
        <trans-unit id="1330" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteValue(System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">Метод <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> вызван перед завершением предыдущей асинхронной операции.</target>       </trans-unit>
        <trans-unit id="1331" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteValue(System.String)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">В этом случае возникает исключение <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> с сообщением "Асинхронная операция уже выполняется".</target>       </trans-unit>
        <trans-unit id="1332" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteWhitespace(System.String)">
          <source>The string of white space characters.</source>
          <target state="translated">Строка символов-разделителей.</target>       </trans-unit>
        <trans-unit id="1333" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteWhitespace(System.String)">
          <source>When overridden in a derived class, writes out the given white space.</source>
          <target state="translated">Когда переопределено в производном классе, записывает указанный символ-разделитель.</target>       </trans-unit>
        <trans-unit id="1334" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteWhitespace(System.String)">
          <source>This method is used to manually format your document.</source>
          <target state="translated">Этот метод используется для форматирования документа вручную.</target>       </trans-unit>
        <trans-unit id="1335" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteWhitespace(System.String)">
          <source>For the asynchronous version of this method, see <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteWhitespaceAsync%2A&gt;</ph>.</source>
          <target state="translated">Асинхронная версия данного метода, в разделе <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteWhitespaceAsync%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1336" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteWhitespace(System.String)">
          <source>The string contains non-white space characters.</source>
          <target state="translated">Строка содержит символы, отличные от пробелов.</target>       </trans-unit>
        <trans-unit id="1337" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteWhitespace(System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">Метод <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> вызван перед завершением предыдущей асинхронной операции.</target>       </trans-unit>
        <trans-unit id="1338" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteWhitespace(System.String)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">В этом случае возникает исключение <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> с сообщением "Асинхронная операция уже выполняется".</target>       </trans-unit>
        <trans-unit id="1339" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteWhitespaceAsync(System.String)">
          <source>The string of white space characters.</source>
          <target state="translated">Строка символов-разделителей.</target>       </trans-unit>
        <trans-unit id="1340" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteWhitespaceAsync(System.String)">
          <source>Asynchronously writes out the given white space.</source>
          <target state="translated">Асинхронно записывает указанный символ-разделитель.</target>       </trans-unit>
        <trans-unit id="1341" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteWhitespaceAsync(System.String)">
          <source>The task that represents the asynchronous <ph id="ph1">&lt;see langword="WriteWhitespace" /&gt;</ph> operation.</source>
          <target state="translated">Задача, представляющая асинхронную операцию <ph id="ph1">&lt;see langword="WriteWhitespace" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1342" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteWhitespaceAsync(System.String)">
          <source>This is the asynchronous version of <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteWhitespace%2A&gt;</ph>, with the same functionality.</source>
          <target state="translated">Это асинхронная версия объекта <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteWhitespace%2A&gt;</ph>, с той же функции.</target>       </trans-unit>
        <trans-unit id="1343" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteWhitespaceAsync(System.String)">
          <source>To use this method, you must set the <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.Async%2A&gt;</ph> flag to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">Чтобы использовать этот метод, необходимо задать <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.Async%2A&gt;</ph> флаг <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="1344" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteWhitespaceAsync(System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> asynchronous method was called without setting the <ph id="ph2">&lt;see cref="P:System.Xml.XmlWriterSettings.Async" /&gt;</ph> flag to <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Асинхронный метод <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> вызван без присваивания флагу <ph id="ph2">&lt;see cref="P:System.Xml.XmlWriterSettings.Async" /&gt;</ph> значения <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1345" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteWhitespaceAsync(System.String)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</source>
          <target state="translated">В этом случае вызывается исключение <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> с сообщением "Задайте параметру XmlWriterSettings.Async значение true, если вы хотите использовать асинхронные методы".</target>       </trans-unit>
        <trans-unit id="1346" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlWriter.XmlLang">
          <source>When overridden in a derived class, gets the current <ph id="ph1">&lt;see langword="xml:lang" /&gt;</ph> scope.</source>
          <target state="translated">При переопределении в производном классе получает текущую область действия <ph id="ph1">&lt;see langword="xml:lang" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1347" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlWriter.XmlLang">
          <source>The current <ph id="ph1">&lt;see langword="xml:lang" /&gt;</ph> scope.</source>
          <target state="translated">Текущая область действия <ph id="ph1">&lt;see langword="xml:lang" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1348" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlWriter.XmlLang">
          <source>This property allows one component to find out in what state another component has left the writer.</source>
          <target state="translated">Это свойство позволяет одному компоненту определить, в каком состоянии другой компонент оставил модуль записи.</target>       </trans-unit>
        <trans-unit id="1349" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlWriter.XmlLang">
          <source>For example, perhaps one component wants to tell another which language help text to generate.</source>
          <target state="translated">Например может быть один компонент хочет сообщить другому какой язык создаваемого текста справки.</target>       </trans-unit>
        <trans-unit id="1350" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlWriter.XmlLang">
          <source>The language information is communicated by writing an <ph id="ph1">`xml:lang`</ph> attribute.</source>
          <target state="translated">Сведения о языке сообщаются путем записи <ph id="ph1">`xml:lang`</ph> атрибута.</target>       </trans-unit>
        <trans-unit id="1351" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlWriter.XmlLang">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">Метод <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> вызван перед завершением предыдущей асинхронной операции.</target>       </trans-unit>
        <trans-unit id="1352" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlWriter.XmlLang">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">В этом случае возникает исключение <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> с сообщением "Асинхронная операция уже выполняется".</target>       </trans-unit>
        <trans-unit id="1353" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlWriter.XmlSpace">
          <source>When overridden in a derived class, gets an <ph id="ph1">&lt;see cref="T:System.Xml.XmlSpace" /&gt;</ph> representing the current <ph id="ph2">&lt;see langword="xml:space" /&gt;</ph> scope.</source>
          <target state="translated">При переопределении в производном классе возвращает класс <ph id="ph1">&lt;see cref="T:System.Xml.XmlSpace" /&gt;</ph>, предоставляющий текущую область <ph id="ph2">&lt;see langword="xml:space" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1354" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlWriter.XmlSpace">
          <source>An <ph id="ph1">&lt;see langword="XmlSpace" /&gt;</ph> representing the current <ph id="ph2">&lt;see langword="xml:space" /&gt;</ph> scope.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see langword="XmlSpace" /&gt;</ph>, представляющий текущую область <ph id="ph2">&lt;see langword="xml:space" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1355" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlWriter.XmlSpace">
          <source><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Value</source>
          <target state="translated"><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Значение</target>       </trans-unit>
        <trans-unit id="1356" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlWriter.XmlSpace">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Meaning</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Описание</target>       </trans-unit>
        <trans-unit id="1357" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlWriter.XmlSpace">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;see langword="None" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph5">&lt;description&gt;</ph> This is the default if no <ph id="ph6">&lt;see langword="xml:space" /&gt;</ph> scope exists.</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;see langword="None" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph5">&lt;description&gt;</ph> Это значение по умолчанию, если не <ph id="ph6">&lt;see langword="xml:space" /&gt;</ph> область существует.</target>       </trans-unit>
        <trans-unit id="1358" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlWriter.XmlSpace">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;see langword="Default" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph5">&lt;description&gt;</ph> The current scope is <ph id="ph6">&lt;see langword="xml:space" /&gt;</ph>="default".</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;see langword="Default" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph5">&lt;description&gt;</ph> Текущая область — <ph id="ph6">&lt;see langword="xml:space" /&gt;</ph>= «default».</target>       </trans-unit>
        <trans-unit id="1359" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlWriter.XmlSpace">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;see langword="Preserve" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph5">&lt;description&gt;</ph> The current scope is <ph id="ph6">&lt;see langword="xml:space" /&gt;</ph>="preserve".</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;see langword="Preserve" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph5">&lt;description&gt;</ph> Текущая область — <ph id="ph6">&lt;see langword="xml:space" /&gt;</ph>= «preserve».</target>       </trans-unit>
        <trans-unit id="1360" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlWriter.XmlSpace">
          <source>This allows one component to find out what state another component has left the writer in.</source>
          <target state="translated">Это позволяет одному компоненту узнать, какое состояние другой компонент оставил модуль записи.</target>       </trans-unit>
        <trans-unit id="1361" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlWriter.XmlSpace">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">Метод <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> вызван перед завершением предыдущей асинхронной операции.</target>       </trans-unit>
        <trans-unit id="1362" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlWriter.XmlSpace">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">В этом случае возникает исключение <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> с сообщением "Асинхронная операция уже выполняется".</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>