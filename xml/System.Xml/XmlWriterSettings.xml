<Type Name="XmlWriterSettings" FullName="System.Xml.XmlWriterSettings">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3708673d1f08f8830ae66ec198637d8f7a756e30" />
    <Meta Name="ms.sourcegitcommit" Value="b15b8cf0f6dbc1504057c88969d9ef4b790891fe" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="05/11/2018" />
    <Meta Name="ms.locfileid" Value="34061577" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class XmlWriterSettings" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit XmlWriterSettings extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xml.XmlWriterSettings" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class XmlWriterSettings" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlWriterSettings sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Задает набор функций, которые должны поддерживаться объектом <see cref="T:System.Xml.XmlWriter" />, создаваемым с помощью метода <see cref="Overload:System.Xml.XmlWriter.Create" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xml.XmlWriter.Create%2A> Метод является предпочтительным механизмом для получения <xref:System.Xml.XmlWriter> экземпляров. <xref:System.Xml.XmlWriter.Create%2A> Использует метод <xref:System.Xml.XmlWriterSettings> класс, чтобы указать, какие функции следует реализовывать в <xref:System.Xml.XmlWriter> создаваемый объект.  
  
> [!NOTE]
>  Если вы используете <xref:System.Xml.XmlWriter> объекта с <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> метода, следует использовать <xref:System.Xml.Xsl.XslCompiledTransform.OutputSettings%2A> , чтобы получить <xref:System.Xml.XmlWriterSettings> объекта с правильными параметрами. Это гарантирует правильность параметров выходных данных для объекта <xref:System.Xml.XmlWriter>.  
  
 <xref:System.Xml.XmlWriterSettings> Класс предоставляет свойства этого элемента управления данных соответствия и выходные данные формата.  
  
 Для проверки согласованности данных и автоматического исправления используйте следующие свойства:  
  
|Свойство.|Что определяет|Значение|Значение по умолчанию|  
|--------------|---------------|-----------|-------------|  
|<xref:System.Xml.XmlWriterSettings.CheckCharacters%2A>|Нужно ли проверять, что символы находятся в юридических XML кодировка, как определено консорциумом W3C.|`true` или `false`|`true`|  
|<xref:System.Xml.XmlWriterSettings.ConformanceLevel%2A>|Необходимость проверки того, что на выходе — корректный XML 1.0 документ или фрагмент.|<xref:System.Xml.ConformanceLevel.Document?displayProperty=nameWithType> (уровня документа), <xref:System.Xml.ConformanceLevel.Fragment> (фрагмент уровня), или <xref:System.Xml.ConformanceLevel.Auto> (Автообнаружение)|<xref:System.Xml.ConformanceLevel.Document?displayProperty=nameWithType> (согласованности на уровне документа)|  
|<xref:System.Xml.XmlWriterSettings.WriteEndDocumentOnClose%2A>|Следует ли добавить ко всем элементам незакрытые закрывающие теги при <xref:System.Xml.XmlWriter.Close%2A> вызывается метод.|`true` или `false`|`true`|  
  
 Чтобы задать формат выходных данных, используйте эти свойства:  
  
|Свойство.|Что определяет|Значение|Значение по умолчанию|  
|--------------|---------------|-----------|-------------|  
|<xref:System.Xml.XmlWriterSettings.Encoding%2A>|Кодировка текста.|Значение <xref:System.Text.Encoding?displayProperty=nameWithType>|<xref:System.Text.Encoding.UTF8?displayProperty=nameWithType>|  
|<xref:System.Xml.XmlWriterSettings.Indent%2A>|Следует ли использовать отступ для элементов|`true` или `false`|`false` (без отступов)|  
|<xref:System.Xml.XmlWriterSettings.IndentChars%2A>|Строка для использования при отступе символов (используется, когда <xref:System.Xml.XmlWriterSettings.Indent%2A> равно `true`).|String|Два пробела|  
|<xref:System.Xml.XmlWriterSettings.NewLineChars%2A>|Строка символов, используемую для разрыва строки.|String|`\r\n` (возврат каретки, перевода строки)|  
|<xref:System.Xml.XmlWriterSettings.NewLineHandling%2A>|Способ обработки символов новой строки.|<xref:System.Xml.NewLineHandling?displayProperty=nameWithType> значение: <xref:System.Xml.NewLineHandling.Entitize> (нормализовать) <xref:System.Xml.NewLineHandling.Replace> (замена) или <xref:System.Xml.NewLineHandling.None> (оставьте без изменений)|<xref:System.Xml.NewLineHandling.Replace> (Замените знаков, указанное в <xref:System.Xml.XmlWriterSettings.NewLineChars%2A>)|  
|<xref:System.Xml.XmlWriterSettings.NewLineOnAttributes%2A>|Следует ли записывать атрибуты на отдельных строках (не имеет силу при <xref:System.Xml.XmlWriterSettings.Indent%2A> — `false`).|`true` или `false`|`false`|  
|<xref:System.Xml.XmlWriterSettings.OmitXmlDeclaration%2A>|Следует ли записывать XML-декларацию.|`true` или `false`|`false`|  
  
   
  
## Examples  
 В следующем примере создается <xref:System.Xml.XmlWriter> , записывает в XML-файл и записывает каждый атрибут на новой строке.  
  
 [!code-csharp[XmlWriterSettings.NewLineOnAttributes#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriterSettings.NewLineOnAttributes/CS/writenewlineattrs.cs#1)]
 [!code-vb[XmlWriterSettings.NewLineOnAttributes#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriterSettings.NewLineOnAttributes/VB/writenewlineattrs.vb#1)]  
  
 Образец выводятся следующие данные:  
  
```xml  
<order  
  orderID="367A54"  
  date="2001-05-03">  
  <price>19.95</price>  
</order>  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlWriterSettings ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriterSettings.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlWriterSettings();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.XmlWriterSettings" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Следующей таблице представлены исходные значения свойств для экземпляра класса <xref:System.Xml.XmlWriterSettings>.  
  
|Свойство.|Начальное значение|  
|--------------|-------------------|  
|<xref:System.Xml.XmlWriterSettings.Async%2A>|`false`.|  
|<xref:System.Xml.XmlWriterSettings.CheckCharacters%2A>|`true`.|  
|<xref:System.Xml.XmlWriterSettings.CloseOutput%2A>|`false`.|  
|<xref:System.Xml.XmlWriterSettings.ConformanceLevel%2A>|<xref:System.Xml.ConformanceLevel.Document>.|  
|<xref:System.Xml.XmlWriterSettings.Encoding%2A>|`Encoding.UTF8`.|  
|<xref:System.Xml.XmlWriterSettings.Indent%2A>|`false`.|  
|<xref:System.Xml.XmlWriterSettings.IndentChars%2A>|Два пробела.|  
|<xref:System.Xml.XmlWriterSettings.NewLineChars%2A>|`\r\n` (возврат каретки, новая строка).|  
|<xref:System.Xml.XmlWriterSettings.NewLineHandling%2A>|<xref:System.Xml.NewLineHandling.Replace>.|  
|<xref:System.Xml.XmlWriterSettings.NewLineOnAttributes%2A>|`false`.|  
|<xref:System.Xml.XmlWriterSettings.OmitXmlDeclaration%2A>|`false`.|  
|<xref:System.Xml.XmlWriterSettings.WriteEndDocumentOnClose%2A>|`true`.|  
  
   
  
## Examples  
 В следующем примере создается <xref:System.Xml.XmlWriter> объект, который использует символ табуляции для отступа.  
  
 [!code-csharp[XmlWriterSettings.Indent#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriterSettings.Indent/CS/writeindent.cs#1)]
 [!code-vb[XmlWriterSettings.Indent#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriterSettings.Indent/VB/writeindent.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Async">
      <MemberSignature Language="C#" Value="public bool Async { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Async" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriterSettings.Async" />
      <MemberSignature Language="VB.NET" Value="Public Property Async As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Async { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает значение, указывающее, можно ли использовать асинхронные методы <see cref="T:System.Xml.XmlWriter" /> для конкретного экземпляра <see cref="T:System.Xml.XmlWriter" />.</summary>
        <value>
          Значение <see langword="true" />, если могут использоваться асинхронные методы; в противном случае — значение <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Необходимо присвоить это значение `true` при создании нового <xref:System.Xml.XmlWriter> экземпляра, если вы хотите использовать асинхронные <xref:System.Xml.XmlWriter> методы в этом экземпляре. После <xref:System.Xml.XmlWriter> , создается экземпляр <xref:System.Xml.XmlWriterSettings.Async%2A> свойство доступно только для чтения. По умолчанию этому свойству присваивается значение `false`.  
  
 Этот флаг игнорируется <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> перегрузки. Это означает, что если вы создаете новый <xref:System.Xml.XmlWriter> на основе существующего <xref:System.Xml.XmlWriter>, async поведение зависит от входных данных <xref:System.Xml.XmlWriter>, и не могут использовать <xref:System.Xml.XmlWriterSettings.Async%2A> флаг, чтобы изменить поведение async.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckCharacters">
      <MemberSignature Language="C#" Value="public bool CheckCharacters { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CheckCharacters" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriterSettings.CheckCharacters" />
      <MemberSignature Language="VB.NET" Value="Public Property CheckCharacters As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CheckCharacters { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение, указывающее, должно ли средство записи XML выполнять проверку на предмет того, соответствуют ли все символы в документе разделу "2.2 Characters" документа W3C [XML 1.0 Recommendation](https://www.w3.org/TR/REC-xml/#charsets).</summary>
        <value>
          Значение <see langword="true" /> для выполнения проверки символов; в противном случае — значение <see langword="false" />. Значение по умолчанию: <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если <xref:System.Xml.XmlWriter> объект поддерживает проверку символов, выдает исключение при обнаружении символов вне диапазона допустимых символов XML, указан в разделе «2,2 символы» консорциума W3C [рекомендации XML 1.0](https://www.w3.org/TR/REC-xml/#charsets).  
  
 Проверка символов не включает проверку наличия недопустимых символов в именах XML или проверки правильности всех имен XML. Эти проверки являются частью проверки на соответствие и выполняются всегда.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public System.Xml.XmlWriterSettings Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlWriterSettings Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriterSettings.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As XmlWriterSettings" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlWriterSettings ^ Clone();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlWriterSettings</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Создает копию экземпляра <see cref="T:System.Xml.XmlWriterSettings" />.</summary>
        <returns>Точная копия объекта <see cref="T:System.Xml.XmlWriterSettings" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Клонированный <xref:System.Xml.XmlWriterSettings> объекта можно изменить, не затрагивая параметры на исходном объекте.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CloseOutput">
      <MemberSignature Language="C#" Value="public bool CloseOutput { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CloseOutput" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriterSettings.CloseOutput" />
      <MemberSignature Language="VB.NET" Value="Public Property CloseOutput As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CloseOutput { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение, указывающее, следует ли объекту <see cref="T:System.Xml.XmlWriter" /> закрывать также и основной поток или <see cref="T:System.IO.TextWriter" /> при вызове метода <see cref="M:System.Xml.XmlWriter.Close" />.</summary>
        <value>
          Значение <see langword="true" />, если следует закрыть основной поток или <see cref="T:System.IO.TextWriter" />; в противном случае — значение <see langword="false" />. Значение по умолчанию: <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот параметр полезен, если вам нужно записи в поток XML, а затем добавить дополнительную информацию в конец потока после <xref:System.Xml.XmlWriter> окончания записи.  
  
 Это свойство применяется только к <xref:System.Xml.XmlWriter> содержимого экземпляров, выходные данные XML в поток или <xref:System.IO.TextWriter>; в противном случае этот параметр игнорируется.  
  
   
  
## Examples  
 Следующий пример записывает фрагмент XML в потоке памяти.  
  
 [!code-csharp[XmlWriterSettings.CloseOutput#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriterSettings.CloseOutput/CS/writestream2.cs#1)]
 [!code-vb[XmlWriterSettings.CloseOutput#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriterSettings.CloseOutput/VB/writestream2.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConformanceLevel">
      <MemberSignature Language="C#" Value="public System.Xml.ConformanceLevel ConformanceLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.ConformanceLevel ConformanceLevel" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriterSettings.ConformanceLevel" />
      <MemberSignature Language="VB.NET" Value="Public Property ConformanceLevel As ConformanceLevel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::ConformanceLevel ConformanceLevel { System::Xml::ConformanceLevel get(); void set(System::Xml::ConformanceLevel value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.ConformanceLevel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает уровень соответствия, на предмет которого средство записи XML проверяет выходные данные XML.</summary>
        <value>Одно из значений перечисления, указывающее уровень соответствия (документ, фрагмент или автоматическое обнаружение). Значение по умолчанию: <see cref="F:System.Xml.ConformanceLevel.Document" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xml.XmlWriterSettings.ConformanceLevel%2A?displayProperty=nameWithType> Свойство настраивает модуль записи XML для проверки и обеспечения соответствия потока записываются с набором правил. Для просмотра, он соответствует правилам для документа XML 1.0 с правильным форматом или фрагмент документа можно проверить XML-данные. В следующей таблице описаны три параметра. Значение по умолчанию — согласованности на уровне документа.  
  
|Параметр|Описание:|  
|-------------|-----------------|  
|<xref:System.Xml.ConformanceLevel.Document>|Гарантирует, что выходные данные XML соответствует [правила для документа XML 1.0 с правильным форматом](https://www.w3.org/TR/REC-xml/#sec-well-formed) , могут обрабатываться любым процессором согласование.<br /><br /> Проверки согласованности документа содержит большую часть проверки уровня фрагмента и также обеспечивают следующее:<br /><br /> -Элемент верхнего уровня не все узлы, отличные от XML-декларации, DTD, элемента, комментария, пустого пространства или инструкции по обработке.<br />-XML-данных имеет только один узел элемента верхнего уровня.<br /><br /> Модуль записи XML не проанализировать сведения DTD, которая написана. Пользователь отвечает за обеспечение правильного формата DTD.|  
|<xref:System.Xml.ConformanceLevel.Fragment>|Гарантирует, что выходные данные XML соответствует [правила фрагмент документа правильного формата XML 1.0](https://www.w3.org/TR/REC-xml/#wf-entities).<br /><br /> Этот параметр принимает XML-данных, который имеет несколько корневых элементов либо текстовых узлов верхнего уровня. Этот уровень проверки гарантирует, что любое средство обработки сможет обработать считываемый поток как сущность XML 1.0 с внешним синтаксическим анализом.<br /><br /> Сведения о DTD не разрешена в фрагментов документа.|  
|<xref:System.Xml.ConformanceLevel.Auto>|Указывает, что модуль записи XML следует определять уровень проверки на соответствие на основе входящих данных. Этот параметр можно использовать, если вам неизвестно, будет ли созданный код XML правильного формата XML-документ или фрагмент.<br /><br /> Проверка согласованности на уровне документа применяется в следующих случаях:<br /><br /> -Если <xref:System.Xml.XmlWriter.WriteStartDocument%2A> вызывается метод.<br />-Если DTD сведения выводятся.<br /><br /> Проверка соответствия фрагмента применяется, если XML-данных содержит один из следующих:<br /><br /> -Узел текст, CDATA или EntityReference на корневом уровне.<br />-Более одного элемента корневого уровня.<br />-Отсутствие элемента корневого уровня.<br /><br /> Исключение <xref:System.Xml.XmlException> создается, если обнаруживается конфликт, например когда на корневом уровне одновременно записываются текстовый узел и DTD.<br /><br /> Если упаковки другой <xref:System.Xml.XmlWriter> объекта внешний объект не выполняет каких-либо проверок дополнительные соответствия; оставляется к базовому объекту.|  
  
 Если средство записи XML обнаруживает все сведения, нарушающих указанный уровень соответствия, создается исключение. В некоторых случаях средство записи XML автоматически исправляет ошибку соответствия. Например средство записи закрывает незакрытый атрибут без вызова исключения. В следующей таблице показаны как разные нарушений соответствия обрабатываются в каждый параметр.  
  
|Условие|<xref:System.Xml.ConformanceLevel.Document>|<xref:System.Xml.ConformanceLevel.Fragment>|<xref:System.Xml.ConformanceLevel.Auto>|  
|---------------|---------------------------------------------------------------------------------------------------------------------------------------------------|---------------------------------------------------------------------------------------------------------------------------------------------------|-----------------------------------------------------------------------------------------------------------------------------------------------|  
|Найден сведения DTD.|Не нарушение этого параметра. Тем не менее средство записи XML не проверяет DTD; пользователь должен обеспечить правильный формат DTD.|<xref:System.Xml.XmlException> создается исключение.|Применяется проверка соответствия документа.|  
|вызывается метод <xref:System.Xml.XmlWriter.WriteStartDocument%2A>;|Не считалось нарушением для этого параметра.|<xref:System.Xml.XmlException> создается исключение.|Применяется проверка соответствия документа.|  
|<xref:System.Xml.XmlWriter.WriteStartDocument%2A> вызывается несколько раз.|<xref:System.Xml.XmlException> создается исключение.|<xref:System.Xml.XmlException> создается исключение.|<xref:System.Xml.XmlException> создается исключение.|  
|Текстовое значение отображается на верхнем уровне (не ниже узла элемента или атрибута).|<xref:System.Xml.XmlException> создается исключение.|Не считалось нарушением.|Применяется проверка соответствия фрагмента.|  
|Несколько элементов или элементы отображаются на верхнем уровне.|<xref:System.Xml.XmlException> создается исключение.|Не считалось нарушением.|Применяется проверка соответствия фрагмента.|  
|Элемент верхнего уровня является пробелом.|Не считалось нарушением.|Не считалось нарушением.|Не считалось нарушением.|  
|<xref:System.Xml.XmlWriter.WriteEndAttribute%2A> не вызывается для завершения узла атрибута.|Исправленные записи XML.|Исправленные записи XML.|Исправленные записи XML.|  
|Модуль записи XML находится в состоянии неправильно вложенных (например, <xref:System.Xml.XmlWriter.WriteStartElement%2A> следуют вызов <xref:System.Xml.XmlWriter.WriteEndAttribute%2A>).|<xref:System.Xml.XmlException> создается исключение.|<xref:System.Xml.XmlException> создается исключение.|<xref:System.Xml.XmlException> создается исключение.|  
|Элемент верхнего уровня является атрибутом.|<xref:System.Xml.XmlException> создается исключение.|<xref:System.Xml.XmlException> создается исключение.|<xref:System.Xml.XmlException> создается исключение.|  
|Найдены несколько смежных текстовых узлов.|Не считалось нарушением, но отвечает пользователь для сцепления текстовые узлы.|Не считалось нарушением, но отвечает пользователь для сцепления текстовые узлы.|Не считалось нарушением, но отвечает пользователь для сцепления текстовые узлы.|  
|В элементе дважды объявлен один и тот же префикс пространства имен.|Модуль записи XML создает новый префикс для другого пространства имен.|Модуль записи XML создает новый префикс для другого пространства имен.|Модуль записи XML создает новый префикс для другого пространства имен.|  
|<xref:System.Xml.XmlWriter.WriteStartElement%2A> Указывает префикс и пространство имен, не объявленных внутри этой области или с другим пространством имен связан префикс.|Модуль записи XML записывает узел необходимые пространства имен.|Модуль записи XML записывает узел необходимые пространства имен.|Модуль записи XML записывает узел необходимые пространства имен.|  
|<xref:System.Xml.XmlWriter.WriteStartAttribute%2A> Указывает префикс и пространство имен, не объявленных внутри этой области.|Модуль записи XML записывает узел необходимые пространства имен.|Модуль записи XML записывает узел необходимые пространства имен.|Модуль записи XML записывает узел необходимые пространства имен.|  
|<xref:System.Xml.XmlWriter.WriteStartAttribute%2A> Указывает префикс и пространство имен, но префикс связан с другим пространством имен в области видимости.|Модуль записи XML игнорирует указанный префикс и либо ищет правильного префикса либо создает новый префикс.|Модуль записи XML игнорирует указанный префикс и либо ищет правильного префикса либо создает новый префикс.|Модуль записи XML игнорирует указанный префикс и либо ищет правильного префикса либо создает новый префикс.|  
|<xref:System.Xml.XmlWriter.WriteQualifiedName%2A> используется для записи содержимого элемента с помощью пространства имен, который не существует в области.|<xref:System.Xml.XmlException> создается исключение.|<xref:System.Xml.XmlException> создается исключение.|<xref:System.Xml.XmlException> создается исключение.|  
|<xref:System.Xml.XmlWriter.WriteQualifiedName%2A> используется для записи содержимого атрибута с помощью пространства имен, который не существует в области.|Модуль записи XML записывает объявление необходимые пространства имен.|Модуль записи XML записывает объявление необходимые пространства имен.|Модуль записи XML записывает объявление необходимые пространства имен.|  
|`xml:space` Атрибут не содержит допустимое значение.|<xref:System.Xml.XmlException> создается исключение.|<xref:System.Xml.XmlException> создается исключение.|<xref:System.Xml.XmlException> создается исключение.|  
|Обнаружено недопустимое имя.|<xref:System.Xml.XmlException> создается исключение.|<xref:System.Xml.XmlException> создается исключение.|<xref:System.Xml.XmlException> создается исключение.|  
|`xml` Префикс не соответствует URI.|Модуль записи XML не выполняется для этого типа нарушение.|Модуль записи XML не выполняется для этого типа нарушение.|Модуль записи XML не выполняется для этого типа нарушение.|  
|`xml` Не сопоставлен префикс http://www.w3.org/XML/1998/namespace URI.|<xref:System.Xml.XmlException> создается исключение.|<xref:System.Xml.XmlException> создается исключение.|<xref:System.Xml.XmlException> создается исключение.|  
|`xmlns` Префикс или локальное имя не соответствует URI.|Модуль записи XML не выполняется для этого типа нарушение.|Модуль записи XML не выполняется для этого типа нарушение.|Модуль записи XML не выполняется для этого типа нарушение.|  
|`xmlns` Префикс или локальное имя не соответствует http://www.w3.org/2000/xmlns URI.|<xref:System.Xml.XmlException> создается исключение.|<xref:System.Xml.XmlException> создается исключение.|<xref:System.Xml.XmlException> создается исключение.|  
  
   
  
## Examples  
 Следующий пример записывает фрагмент XML в потоке памяти.  
  
 [!code-csharp[XmlWriterSettings.CloseOutput#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriterSettings.CloseOutput/CS/writestream2.cs#1)]
 [!code-vb[XmlWriterSettings.CloseOutput#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriterSettings.CloseOutput/VB/writestream2.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DoNotEscapeUriAttributes">
      <MemberSignature Language="C#" Value="public bool DoNotEscapeUriAttributes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DoNotEscapeUriAttributes" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriterSettings.DoNotEscapeUriAttributes" />
      <MemberSignature Language="VB.NET" Value="Public Property DoNotEscapeUriAttributes As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DoNotEscapeUriAttributes { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение, указывающее, преобразует ли <see cref="T:System.Xml.XmlWriter" /> атрибуты URI в escape-последовательности.</summary>
        <value>
          <see langword="true" /> Если <see cref="T:System.Xml.XmlWriter" /> не экранирует URI атрибуты; в противном случае <see langword="false" />. Значение по умолчанию: <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Encoding">
      <MemberSignature Language="C#" Value="public System.Text.Encoding Encoding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding Encoding" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriterSettings.Encoding" />
      <MemberSignature Language="VB.NET" Value="Public Property Encoding As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::Encoding ^ Encoding { System::Text::Encoding ^ get(); void set(System::Text::Encoding ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает тип используемой кодировки текста.</summary>
        <value>Используемая кодировка текста. Значение по умолчанию: <see langword="Encoding.UTF8" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xml.XmlWriter> Кодирует буфер символов за один раз, а не символ за символом. Исключение создается, если <xref:System.Xml.XmlWriter.Flush%2A> метод вызывается при обнаружении ошибок кодирования.  
  
 <xref:System.Xml.XmlWriterSettings.Encoding%2A> Свойство применимо только к <xref:System.Xml.XmlWriter> экземпляров, созданных с помощью указанного <xref:System.IO.Stream> или с указанным именем файла. Если <xref:System.Xml.XmlWriter> создается экземпляр с заданным <xref:System.IO.TextWriter>, <xref:System.Xml.XmlWriterSettings.Encoding%2A> свойство переопределено с помощью кодирования базового <xref:System.IO.TextWriter>. Например, если это свойство имеет значение Юникода (UTF-16), для какого-либо <xref:System.Xml.XmlWriter>, но является базовым модулем записи <xref:System.IO.StreamWriter> (который является производным от <xref:System.IO.TextWriter>) кодировке его значение UTF8, выходные данные будут в кодировке UTF-8.  
  
 Если <xref:System.Xml.XmlWriter> и другие выходные параметры, создается экземпляр <xref:System.Xml.XmlWriterSettings.Encoding%2A> свойство игнорируется.  
  
 В следующем примере:  
  
-   Значением свойства <xref:System.Xml.XmlWriterSettings.Encoding%2A> по умолчанию является `Encoding.UTF8`.  
  
-   <xref:System.IO.StreamWriter> Равно `Encoding.Unicode` и <xref:System.IO.StreamWriter>кодировку переопределения <xref:System.Xml.XmlWriterSettings.Encoding%2A> параметр.  
  
-   Выходные данные будут `Encoding.Unicode`.  
  
```csharp  
using (StreamWriter output =  
    new StreamWriter(new FileStream("Xml01.xml", FileMode.Create), Encoding.Unicode))  
{  
    using (XmlWriter xmlWriter =  
        XmlWriter.Create(output, new XmlWriterSettings()))  
    {  
        xmlWriter.WriteStartDocument();  
        xmlWriter.WriteStartElement("Root");  
        xmlWriter.WriteEndElement();  
        xmlWriter.WriteEndDocument();  
    }  
}  
```  
  
> [!IMPORTANT]
>  Не следует принимать <xref:System.Text.Encoding> объекта из ненадежного источника.  
  
   
  
## Examples  
 Следующий пример записывает фрагмент XML в потоке памяти.  
  
 [!code-csharp[XmlWriterSettings.CloseOutput#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriterSettings.CloseOutput/CS/writestream2.cs#1)]
 [!code-vb[XmlWriterSettings.CloseOutput#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriterSettings.CloseOutput/VB/writestream2.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Indent">
      <MemberSignature Language="C#" Value="public bool Indent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Indent" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriterSettings.Indent" />
      <MemberSignature Language="VB.NET" Value="Public Property Indent As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Indent { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение, указывающее, следует ли использовать отступ для элементов.</summary>
        <value>
          Значение <see langword="true" />, если необходимо записывать отдельные элементы в новых строках с отступом; в противном случае — значение <see langword="false" />. Значение по умолчанию: <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это свойство применяется только к <xref:System.Xml.XmlWriter> экземпляров, выводят текст; в противном случае этот параметр игнорируется.  
  
 Элементы отображаются с отступом, при условии, что элемент не содержит смешанное содержимое. Один раз <xref:System.Xml.XmlWriter.WriteString%2A> или <xref:System.Xml.XmlWriter.WriteWhitespace%2A> записать его элемента со смешанным содержимым, вызывается метод <xref:System.Xml.XmlWriter> останавливает отступов. Расстановка отступов возобновляется после закрытия элемента со смешанным содержимым.  
  
   
  
## Examples  
 В следующем примере создается <xref:System.Xml.XmlWriter> объект, который использует символ табуляции для отступа.  
  
 [!code-csharp[XmlWriterSettings.Indent#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriterSettings.Indent/CS/writeindent.cs#1)]
 [!code-vb[XmlWriterSettings.Indent#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriterSettings.Indent/VB/writeindent.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IndentChars">
      <MemberSignature Language="C#" Value="public string IndentChars { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string IndentChars" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriterSettings.IndentChars" />
      <MemberSignature Language="VB.NET" Value="Public Property IndentChars As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ IndentChars { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает строку символов, используемую для отступов. Этот параметр используется, если значение свойства <see cref="P:System.Xml.XmlWriterSettings.Indent" /> равно <see langword="true" />.</summary>
        <value>Строка символов, используемая для отступов. Может принять любое строковое значение. Однако в целях обеспечения корректности XML-кода необходимо использовать только допустимые символы-разделители: символы пробела, табуляции, возврата каретки или перевода строки. По умолчанию - два пробела.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это свойство применяется только к <xref:System.Xml.XmlWriter> экземпляров, выводят текст; в противном случае этот параметр игнорируется. <xref:System.Xml.XmlWriter> Вызывает исключение, если знаки отступа приведет к недопустимый XML.  
  
   
  
## Examples  
 В следующем примере создается <xref:System.Xml.XmlWriter> объект, который использует символ табуляции для отступа.  
  
 [!code-csharp[XmlWriterSettings.Indent#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriterSettings.Indent/CS/writeindent.cs#1)]
 [!code-vb[XmlWriterSettings.Indent#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriterSettings.Indent/VB/writeindent.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Свойству <see cref="P:System.Xml.XmlWriterSettings.IndentChars" /> присваивается значение <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="NamespaceHandling">
      <MemberSignature Language="C#" Value="public System.Xml.NamespaceHandling NamespaceHandling { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.NamespaceHandling NamespaceHandling" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriterSettings.NamespaceHandling" />
      <MemberSignature Language="VB.NET" Value="Public Property NamespaceHandling As NamespaceHandling" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::NamespaceHandling NamespaceHandling { System::Xml::NamespaceHandling get(); void set(System::Xml::NamespaceHandling value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.NamespaceHandling</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает значение, указывающие, должен ли объект <see cref="T:System.Xml.XmlWriter" /> при записи содержимого XML удалять дубликаты объявлений пространств имен. По умолчанию средство записи выводит все объявления пространства имен, присутствующие в его сопоставителе пространства имен.</summary>
        <value>Перечисление <see cref="T:System.Xml.NamespaceHandling" />, которое указывает, нужно ли удалять дубликаты объявлений пространств имен в объекте <see cref="T:System.Xml.XmlWriter" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NewLineChars">
      <MemberSignature Language="C#" Value="public string NewLineChars { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NewLineChars" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriterSettings.NewLineChars" />
      <MemberSignature Language="VB.NET" Value="Public Property NewLineChars As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ NewLineChars { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает строку символов, используемую для разрыва строк.</summary>
        <value>Строка символов, используемая для разрыва строк. Может принять любое строковое значение. Однако в целях обеспечения корректности XML-кода необходимо использовать только допустимые символы-разделители: символы пробела, табуляции, возврата каретки или перевода строки. Значение по умолчанию — <c>\r\n</c> (возврат каретки, новая строка).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это свойство применяется только к <xref:System.Xml.XmlWriter> экземпляров, выводят текст; в противном случае этот параметр игнорируется. <xref:System.Xml.XmlWriter> Вызывает исключение, если символы разрыва строки приведет к недопустимый XML.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Свойству <see cref="P:System.Xml.XmlWriterSettings.NewLineChars" /> присваивается значение <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="NewLineHandling">
      <MemberSignature Language="C#" Value="public System.Xml.NewLineHandling NewLineHandling { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.NewLineHandling NewLineHandling" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriterSettings.NewLineHandling" />
      <MemberSignature Language="VB.NET" Value="Public Property NewLineHandling As NewLineHandling" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::NewLineHandling NewLineHandling { System::Xml::NewLineHandling get(); void set(System::Xml::NewLineHandling value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.NewLineHandling</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение, указывающее, следует ли осуществлять нормализацию разрывов строк в выходных данных.</summary>
        <value>Одно из значений перечисления <see cref="T:System.Xml.NewLineHandling" />. Значение по умолчанию: <see cref="F:System.Xml.NewLineHandling.Replace" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот параметр применяется при записи текстового содержимого или значений атрибута. Каждый из <xref:System.Xml.NewLineHandling> значения описан ниже:  
  
-   <xref:System.Xml.NewLineHandling.Entitize> Параметр сообщает <xref:System.Xml.XmlWriter> заменить символы новой строки, которые не в противном случае сохраняются, нормализация <xref:System.Xml.XmlReader> на сущности знаков. Это полезно в сценариях приема-передачи, где выходные данные считываются при нормализации <xref:System.Xml.XmlReader>. Дополнительные правила нормализации применяются к значениям атрибутов при round tripping с момента `\t`, `\n` и `\r` заменяются пробелом в значениях атрибутов при нормализации в <xref:System.Xml.XmlReader>.  
  
-   <xref:System.Xml.NewLineHandling.Replace> Параметр сообщает <xref:System.Xml.XmlWriter> заменить символы новой строки с `\r\n`, который является новый формат строки, используемый операционной системой Microsoft Windows. Это позволяет гарантировать, что файл может неправильно отображаться по приложения «Блокнот» или Microsoft Word. Этот параметр также заменяет новые строки в атрибуты сущности знаков для сохранения символов. Это значение по умолчанию.  
  
-   <xref:System.Xml.NewLineHandling.None> Параметр сообщает <xref:System.Xml.XmlWriter> оставить без изменений входных данных. Этот параметр используется, когда не требуется какой-либо обработки новой строки. Это полезно, когда выходные данные считываются по <xref:System.Xml.XmlReader> , выполняет нормализацию (например, <xref:System.Xml.XmlTextReader> с параметрами по умолчанию.)  
  
 В следующих таблицах показаны выходные данные <xref:System.Xml.XmlWriter.WriteString%2A> метод, если ей передать входное значение в зависимости от <xref:System.Xml.XmlWriterSettings.NewLineHandling%2A> значение свойства. В таблицах показаны выходные данные при записи текстового содержимого, а также при записи значения атрибута.  
  
 `Text Node Value:`  
  
||\r\n|\n|\r|\t|  
|-|------------|---------|---------|---------|  
|Преобразование в сущность|& #D; \n|\n|&AMP; #D;|\t|  
|Заменить|\r\n|\r\n|\r\n|\t|  
|Нет|\r\n|\n|\r|\t|  
  
 `Attribute Value:`  
  
||\r\n|\n|\r|\t|  
|-|------------|---------|---------|---------|  
|Преобразование в сущность|&AMP; #D; &AMP; #A;|&AMP; #A;|&AMP; #D;|&\#9;|  
|Заменить|&AMP; #D; &AMP; #A;|&AMP; #A;|&AMP; #D;|&\#9;|  
|Нет|\r\n|\n|\r|\t|  
  
> [!NOTE]
>  <xref:System.Xml.XmlWriter> Имеет следующие особенности при записи содержимого в раздел CDATA, комментарий или инструкцию по обработке. Новые строки не заменяются сущностями символов, даже если <xref:System.Xml.XmlWriterSettings.NewLineHandling%2A> свойству <xref:System.Xml.NewLineHandling.Entitize>. Это потому, что сущности знаков не распознаются в разделах CDATA, комментарии и инструкции обработки. Если <xref:System.Xml.XmlWriterSettings.NewLineHandling%2A> свойству <xref:System.Xml.NewLineHandling.None> или <xref:System.Xml.NewLineHandling.Replace>, происходит так же, как при записи текстовое значение узла.  
  
 В следующей таблице описаны какие нормализация <xref:System.Xml.XmlReader> возвращает для каждого входного пробела. Дополнительные сведения см. в разделе разделах 2.11 и 3.3.3 консорциума W3C [рекомендации XML 1.0](https://www.w3.org/TR/REC-xml/).  
  
> [!NOTE]
>  Представляет собой любой нормализации чтения <xref:System.Xml.XmlReader> объект, созданный <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> метод. Эти объекты всегда выполняют нормализацию разрывов строк и полную нормализацию атрибутов. <xref:System.Xml.XmlTextReader> Объект также может быть нормализации чтения, если это <xref:System.Xml.XmlTextReader.Normalization%2A> свойству `true`.  
  
||\r\n|\n|\r|\t|  
|-|------------|---------|---------|---------|  
|Значение текстового узла|\n|\n|\n|\t|  
|Значение атрибута|пробел|пробел|пробел|пробел|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NewLineOnAttributes">
      <MemberSignature Language="C#" Value="public bool NewLineOnAttributes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool NewLineOnAttributes" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriterSettings.NewLineOnAttributes" />
      <MemberSignature Language="VB.NET" Value="Public Property NewLineOnAttributes As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool NewLineOnAttributes { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение, указывающее, следует ли записывать атрибуты на новой строке.</summary>
        <value>
          Значение <see langword="true" />, если необходимо записывать атрибуты в отдельные строки; в противном случае — значение <see langword="false" />. Значение по умолчанию: <see langword="false" />.  
  
 <block subset="none" type="note"><para>  
 Этот параметр ни на что не влияет, если значение свойства  <see cref="P:System.Xml.XmlWriterSettings.Indent" /> равно <see langword="false" />.  
  
</para></block>  
  
 Если значение объекта <see cref="P:System.Xml.XmlWriterSettings.NewLineOnAttributes" /> равно <see langword="true" />, каждому атрибуту предшествует новая строка и дополнительный уровень отступа.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это свойство применяется только к <xref:System.Xml.XmlWriter> экземпляров, выводят текст; в противном случае этот параметр игнорируется.  
  
   
  
## Examples  
 В следующем примере создается <xref:System.Xml.XmlWriter> , записывает в XML-файл и записывает каждый атрибут на новой строке.  
  
 [!code-csharp[XmlWriterSettings.NewLineOnAttributes#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriterSettings.NewLineOnAttributes/CS/writenewlineattrs.cs#1)]
 [!code-vb[XmlWriterSettings.NewLineOnAttributes#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriterSettings.NewLineOnAttributes/VB/writenewlineattrs.vb#1)]  
  
 Образец выводятся следующие данные:  
  
```xml  
<order  
  orderID="367A54"  
  date="2001-05-03">  
  <price>19.95</price>  
</order>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OmitXmlDeclaration">
      <MemberSignature Language="C#" Value="public bool OmitXmlDeclaration { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool OmitXmlDeclaration" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriterSettings.OmitXmlDeclaration" />
      <MemberSignature Language="VB.NET" Value="Public Property OmitXmlDeclaration As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool OmitXmlDeclaration { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение, определяющее, следует ли опустить XML-объявление.</summary>
        <value>
          Значение <see langword="true" />, если необходимо опустить XML-объявление; в противном случае — значение <see langword="false" />. Значением по умолчанию является <see langword="false" />; XML-объявление записывается.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это свойство применяется только к <xref:System.Xml.XmlWriter> экземпляров, выводят текст; в противном случае этот параметр игнорируется.  
  
 Если <xref:System.Xml.XmlWriterSettings.OmitXmlDeclaration%2A> равно `false`, автоматически будет записан объявление XML  
  
 Если объявление XML всегда записывается <xref:System.Xml.XmlWriterSettings.ConformanceLevel%2A> равно <xref:System.Xml.ConformanceLevel.Document>, даже если <xref:System.Xml.XmlWriterSettings.OmitXmlDeclaration%2A> имеет значение `true`.  
  
 Если объявление XML никогда не будут записаны <xref:System.Xml.XmlWriterSettings.ConformanceLevel%2A> равно <xref:System.Xml.ConformanceLevel.Fragment>. Можно вызвать <xref:System.Xml.XmlWriter.WriteProcessingInstruction%2A> явным образом записать объявление XML.  
  
   
  
## Examples  
 Следующий пример записывает фрагмент XML в потоке памяти.  
  
 [!code-csharp[XmlWriterSettings.CloseOutput#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriterSettings.CloseOutput/CS/writestream2.cs#1)]
 [!code-vb[XmlWriterSettings.CloseOutput#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriterSettings.CloseOutput/VB/writestream2.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OutputMethod">
      <MemberSignature Language="C#" Value="public System.Xml.XmlOutputMethod OutputMethod { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.XmlOutputMethod OutputMethod" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriterSettings.OutputMethod" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OutputMethod As XmlOutputMethod" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::XmlOutputMethod OutputMethod { System::Xml::XmlOutputMethod get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlOutputMethod</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает метод, используемый для сериализации выходных данных объекта <see cref="T:System.Xml.XmlWriter" />.</summary>
        <value>Одно из значений перечисления <see cref="T:System.Xml.XmlOutputMethod" />. Значение по умолчанию: <see cref="F:System.Xml.XmlOutputMethod.Xml" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это свойство указывает метод, используемый для сериализации выходных данных. Выходные данные могут быть сериализованы с помощью правил HTML, XML 1.0 и т. д. Этот параметр задается процессором XSLT и используется внутри Visual Studio.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriterSettings.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reset();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Повторно загружает значения по умолчанию для элементов класса параметров.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Следующая таблица показывает значение по умолчанию значения свойств для экземпляра класса <xref:System.Xml.XmlWriterSettings>.  
  
|Свойство.|Исходное значение|  
|--------------|-------------------|  
|<xref:System.Xml.XmlWriterSettings.Async%2A>|`false`.|  
|<xref:System.Xml.XmlWriterSettings.CheckCharacters%2A>|`true`.|  
|<xref:System.Xml.XmlWriterSettings.CloseOutput%2A>|`false`.|  
|<xref:System.Xml.XmlWriterSettings.ConformanceLevel%2A>|<xref:System.Xml.ConformanceLevel.Document>.|  
|<xref:System.Xml.XmlWriterSettings.Encoding%2A>|`Encoding.UTF8`.|  
|<xref:System.Xml.XmlWriterSettings.Indent%2A>|`false`.|  
|<xref:System.Xml.XmlWriterSettings.IndentChars%2A>|Два пробела.|  
|<xref:System.Xml.XmlWriterSettings.NewLineChars%2A>|`\r\n`.|  
|<xref:System.Xml.XmlWriterSettings.NewLineHandling%2A>|<xref:System.Xml.NewLineHandling.Replace>.|  
|<xref:System.Xml.XmlWriterSettings.NewLineOnAttributes%2A>|`false`.|  
|<xref:System.Xml.XmlWriterSettings.OmitXmlDeclaration%2A>|`false`.|  
|<xref:System.Xml.XmlWriterSettings.WriteEndDocumentOnClose%2A>|`true`.|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteEndDocumentOnClose">
      <MemberSignature Language="C#" Value="public bool WriteEndDocumentOnClose { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool WriteEndDocumentOnClose" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriterSettings.WriteEndDocumentOnClose" />
      <MemberSignature Language="VB.NET" Value="Public Property WriteEndDocumentOnClose As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool WriteEndDocumentOnClose { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает значение, указывающее, добавляет ли <see cref="T:System.Xml.XmlWriter" /> закрывающие теги ко всем незакрытым тегам элементов при вызове метода <see cref="M:System.Xml.XmlWriter.Close" />.</summary>
        <value>
          Значение <see langword="true" />, если все незакрытые теги элементов будут закрыты; в противном случае — значение <see langword="false" />. Значение по умолчанию — <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если задан этот флаг `false`, выходной XML-файл не может быть правильного формата.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>