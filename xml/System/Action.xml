<Type Name="Action" FullName="System.Action">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f102b48542720505b62a9fc8aca11935323d2011" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public delegate void Action();" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed Action extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Action" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub Action()" />
  <TypeSignature Language="C++ CLI" Value="public delegate void Action();" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("System.Core, Version=3.5.0.0, Culture=Neutral, PublicKeyToken=b77a5c561934e089")</AttributeName>
    </Attribute>
  </Attributes>
  <Parameters />
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <summary>
      <span data-ttu-id="ac819-101">Инкапсулирует метод, который не имеет параметров и не возвращает значений.</span>
      <span class="sxs-lookup">
        <span data-stu-id="ac819-101">Encapsulates a method that has no parameters and does not return a value.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ac819-102">Этот делегат можно использовать для передачи метода в качестве параметра без явного объявления пользовательского делегата.</span><span class="sxs-lookup"><span data-stu-id="ac819-102">You can use this delegate to pass a method as a parameter without explicitly declaring a custom delegate.</span></span> <span data-ttu-id="ac819-103">Инкапсулированный метод должен соответствовать сигнатуре метода, определенные этим делегатом.</span><span class="sxs-lookup"><span data-stu-id="ac819-103">The encapsulated method must correspond to the method signature that is defined by this delegate.</span></span> <span data-ttu-id="ac819-104">Это означает, что инкапсулированный метод должен иметь никаких параметров и не возвращает значений.</span><span class="sxs-lookup"><span data-stu-id="ac819-104">This means that the encapsulated method must have no parameters and no return value.</span></span> <span data-ttu-id="ac819-105">(В C# метод должен возвращать `void`.</span><span class="sxs-lookup"><span data-stu-id="ac819-105">(In C#, the method must return `void`.</span></span> <span data-ttu-id="ac819-106">В Visual Basic, он должен быть определен по `Sub`...`End Sub`</span><span class="sxs-lookup"><span data-stu-id="ac819-106">In Visual Basic, it must be defined by the `Sub`…`End Sub`</span></span> <span data-ttu-id="ac819-107">Конструкция.</span><span class="sxs-lookup"><span data-stu-id="ac819-107">construct.</span></span> <span data-ttu-id="ac819-108">Он также может быть метод, возвращающий значение, которое учитывается.) Как правило этот метод используется для выполнения операции.</span><span class="sxs-lookup"><span data-stu-id="ac819-108">It can also be a method that returns a value that is ignored.) Typically, such a method is used to perform an operation.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ac819-109">Для ссылки на метод, который не имеет параметров и возвращает значение, используйте универсальный <xref:System.Func%601> вместо этого делегата.</span><span class="sxs-lookup"><span data-stu-id="ac819-109">To reference a method that has no parameters and returns a value, use the generic <xref:System.Func%601> delegate instead.</span></span>  
  
 <span data-ttu-id="ac819-110">При использовании <xref:System.Action> делегата, не нужно явным образом определять делегат, инкапсулирующий процедуры без параметров.</span><span class="sxs-lookup"><span data-stu-id="ac819-110">When you use the <xref:System.Action> delegate, you do not have to explicitly define a delegate that encapsulates a parameterless procedure.</span></span> <span data-ttu-id="ac819-111">Например, в следующем коде явно объявляется делегат с именем `ShowValue` и ссылка на `Name.DisplayToWindow` метод экземпляру его делегата экземпляра.</span><span class="sxs-lookup"><span data-stu-id="ac819-111">For example, the following code explicitly declares a delegate named `ShowValue` and assigns a reference to the `Name.DisplayToWindow` instance method to its delegate instance.</span></span>  
  
 [!code-cpp[System.Action.Delegate#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.action.delegate/cpp/delegate.cpp#1)]
 [!code-csharp[System.Action.Delegate#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.action.delegate/cs/delegate.cs#1)]
 [!code-vb[System.Action.Delegate#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.action.delegate/vb/delegate.vb#1)]  
  
 <span data-ttu-id="ac819-112">В следующем примере этот код упрощается путем создания экземпляра <xref:System.Action> делегат вместо явного объявления нового делегата и присвоения именованного метода.</span><span class="sxs-lookup"><span data-stu-id="ac819-112">The following example simplifies this code by instantiating the <xref:System.Action> delegate instead of explicitly defining a new delegate and assigning a named method to it.</span></span>  
  
 [!code-cpp[System.Action#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Action/cpp/action.cpp#2)]
 [!code-csharp[System.Action#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Action/cs/Action.cs#2)]
 [!code-vb[System.Action#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Action/vb/Action.vb#2)]  
  
 <span data-ttu-id="ac819-113">Можно также использовать <xref:System.Action> делегировать с анонимных методов в C#, как показано в следующем примере.</span><span class="sxs-lookup"><span data-stu-id="ac819-113">You can also use the <xref:System.Action> delegate with anonymous methods in C#, as the following example illustrates.</span></span> <span data-ttu-id="ac819-114">(Введение анонимных методов см. в разделе [анонимные методы](~/docs/csharp/programming-guide/statements-expressions-operators/anonymous-methods.md).)</span><span class="sxs-lookup"><span data-stu-id="ac819-114">(For an introduction to anonymous methods, see [Anonymous Methods](~/docs/csharp/programming-guide/statements-expressions-operators/anonymous-methods.md).)</span></span>  
  
 [!code-csharp[System.Action#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Action/cs/Anon.cs#3)]  
  
 <span data-ttu-id="ac819-115">Можно также назначить лямбда-выражение, <xref:System.Action> делегировать экземпляра, как показано в следующем примере.</span><span class="sxs-lookup"><span data-stu-id="ac819-115">You can also assign a lambda expression to an <xref:System.Action> delegate instance, as the following example illustrates.</span></span> <span data-ttu-id="ac819-116">(Введение лямбда-выражений см. в разделе [лямбда-выражения](~/docs/csharp/programming-guide/statements-expressions-operators/lambda-expressions.md).)</span><span class="sxs-lookup"><span data-stu-id="ac819-116">(For an introduction to lambda expressions, see [Lambda Expressions](~/docs/csharp/programming-guide/statements-expressions-operators/lambda-expressions.md).)</span></span>  
  
 [!code-csharp[System.Action#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Action/cs/Lambda.cs#4)]
 [!code-vb[System.Action#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Action/vb/lambda.vb#4)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Func`1" />
  </Docs>
</Type>