<Type Name="AppContext" FullName="System.AppContext">
  <TypeSignature Language="C#" Value="public static class AppContext" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit AppContext extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.AppContext" />
  <TypeSignature Language="VB.NET" Value="Public Class AppContext" />
  <TypeSignature Language="C++ CLI" Value="public ref class AppContext abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>System.AppContext</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="3f363-101">Предоставляет члены для задания и получения данных о контексте приложения.</span><span class="sxs-lookup"><span data-stu-id="3f363-101">Provides members for setting and retrieving data about an application's context.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3f363-102"><xref:System.AppContext> Класс позволяет авторам библиотек предоставлять согласованный механизм явного отказа для новых функциональных возможностей.</span><span class="sxs-lookup"><span data-stu-id="3f363-102">The <xref:System.AppContext> class enables library writers to provide a uniform opt-out mechanism for new functionality for their users.</span></span> <span data-ttu-id="3f363-103">Он устанавливает слабо связанный контракт между компонентами для передачи запроса на явный отказ.</span><span class="sxs-lookup"><span data-stu-id="3f363-103">It establishes a loosely-coupled contract between components in order to communicate an opt-out request.</span></span> <span data-ttu-id="3f363-104">Эта возможность обычно важна при внесении изменений в существующие функции.</span><span class="sxs-lookup"><span data-stu-id="3f363-104">This capability is typically important when a change is made to existing functionality.</span></span> <span data-ttu-id="3f363-105">В свою очередь, режим неявного согласия для новых функциональных возможностей уже существует.</span><span class="sxs-lookup"><span data-stu-id="3f363-105">Conversely, there is already an implicit opt-in for new functionality.</span></span>  
  
## <a name="appcontext-for-library-developers"></a><span data-ttu-id="3f363-106">Параметров AppContext разработчикам библиотек</span><span class="sxs-lookup"><span data-stu-id="3f363-106">AppContext for library developers</span></span>  
 <span data-ttu-id="3f363-107">Использование библиотек <xref:System.AppContext> переключается класса для определения и предоставления совместимости, во время библиотеки пользователи могут задавать эти параметры для влияния на поведение библиотек.</span><span class="sxs-lookup"><span data-stu-id="3f363-107">Libraries use  the <xref:System.AppContext> class to define and expose compatibility switches, while library users can set those switches to affect the library behavior.</span></span> <span data-ttu-id="3f363-108">По умолчанию библиотеки предоставляют новые функции и изменяют их (то есть предоставляют прежние функции) только в том случае, если установлен параметр.</span><span class="sxs-lookup"><span data-stu-id="3f363-108">By default, libraries provide the new functionality, and they only alter it (that is, they provide the previous functionality) if the switch is set.</span></span>  <span data-ttu-id="3f363-109">Это позволяет библиотекам для предоставления новое поведение для существующих API, продолжая поддерживать вызывающим объектам, которые зависят от предыдущего поведения.</span><span class="sxs-lookup"><span data-stu-id="3f363-109">This allows libraries to provide new behavior for an existing API while continuing to support callers who depend on the previous behavior.</span></span>  
  
### <a name="defining-the-switch-name"></a><span data-ttu-id="3f363-110">Определение имени параметра</span><span class="sxs-lookup"><span data-stu-id="3f363-110">Defining the switch name</span></span>  
 <span data-ttu-id="3f363-111">Наиболее распространенный способ позволяют потребителям библиотеки отказаться от изменений поведения является определение именованного переключателя.</span><span class="sxs-lookup"><span data-stu-id="3f363-111">The most common way to allow consumers of your library to opt out of a change of behavior is to define a named switch.</span></span>  <span data-ttu-id="3f363-112">Его `value` элемент представляет собой пару имя значение, состоящее из имени параметра и его <xref:System.Boolean> значение.</span><span class="sxs-lookup"><span data-stu-id="3f363-112">Its `value` element is a name/value pair that consists of the name of a switch and its <xref:System.Boolean> value.</span></span>  <span data-ttu-id="3f363-113">По умолчанию параметр всегда имеет неявное `false`, который определяет новое поведение (и определяет новое поведение участия в программе по умолчанию).</span><span class="sxs-lookup"><span data-stu-id="3f363-113">By default, the switch is always implicitly `false`, which provides the new behavior (and makes the new behavior opt-in by default).</span></span> <span data-ttu-id="3f363-114">Установите значение параметра `true` позволяет ему, который содержит устаревшее поведение.</span><span class="sxs-lookup"><span data-stu-id="3f363-114">Setting the switch to `true` enables it, which provides the legacy behavior.</span></span> <span data-ttu-id="3f363-115">После явного задания коммутатор `false` также определяет новое поведение.</span><span class="sxs-lookup"><span data-stu-id="3f363-115">Explicitly setting the switch to `false` also provides the new behavior.</span></span>  
  
 <span data-ttu-id="3f363-116">Рекомендуется использовать согласованный формат для имен коммутатора, так как они представляют собой формальный контракт, предоставляемый библиотекой.</span><span class="sxs-lookup"><span data-stu-id="3f363-116">It's beneficial to use a consistent format for switch names, since they are a formal contract exposed by a library.</span></span> <span data-ttu-id="3f363-117">Ниже приведены два очевидных формата:</span><span class="sxs-lookup"><span data-stu-id="3f363-117">The following are two obvious formats.</span></span>  
  
-   <span data-ttu-id="3f363-118">*параметр*.*пространство_имен* * имя_параметра*</span><span class="sxs-lookup"><span data-stu-id="3f363-118">*Switch*.*namespace*.*switchname*</span></span>  
  
-   <span data-ttu-id="3f363-119">*параметр*.*библиотека*.*имя_параметра*</span><span class="sxs-lookup"><span data-stu-id="3f363-119">*Switch*.*library*.*switchname*</span></span>  
  
 <span data-ttu-id="3f363-120">После определения и документов коммутатора, вызывающая сторона может использовать его с помощью реестра, добавив [ \<AppContextSwitchOverrides >](~/docs/framework/configure-apps/file-schema/runtime/appcontextswitchoverrides-element.md) элемент их файл конфигурации приложения или путем вызова <xref:System.AppContext.SetSwitch%28System.String%2CSystem.Boolean%29?displayProperty=nameWithType> метод программными средствами.</span><span class="sxs-lookup"><span data-stu-id="3f363-120">Once you define and document the switch, callers can use it by using the registry, by adding an  [\<AppContextSwitchOverrides>](~/docs/framework/configure-apps/file-schema/runtime/appcontextswitchoverrides-element.md) element to their application configuration file, or by calling the  <xref:System.AppContext.SetSwitch%28System.String%2CSystem.Boolean%29?displayProperty=nameWithType> method programmatically.</span></span> <span data-ttu-id="3f363-121">В разделе [параметров AppContext для пользователей библиотеки](#ForConsumers) Дополнительные сведения о способах вызывающим объектам использовать и задать значение <xref:System.AppContext> параметров конфигурации.</span><span class="sxs-lookup"><span data-stu-id="3f363-121">See the [AppContext for library consumers](#ForConsumers) section for more information about how callers use and set the value of <xref:System.AppContext> configuration switches.</span></span>  
  
 <span data-ttu-id="3f363-122">При запуске приложения общеязыковая среда выполнения автоматически считывает параметры совместимости реестра и загружает файл конфигурации приложения для заполнения приложения <xref:System.AppContext> экземпляра.</span><span class="sxs-lookup"><span data-stu-id="3f363-122">When the common language runtime runs an application, it automatically reads the registry's compatibility settings and loads the application configuration file in order to populate the application's <xref:System.AppContext> instance.</span></span> <span data-ttu-id="3f363-123">Поскольку <xref:System.AppContext> экземпляр заполняется программно вызывающим или средой выполнения, не нужно предпринимать никаких действий, например при вызове <xref:System.AppContext.SetSwitch%2A> метод для настройки <xref:System.AppContext> экземпляра.</span><span class="sxs-lookup"><span data-stu-id="3f363-123">Because the <xref:System.AppContext> instance is populated either programmatically by the caller or by the runtime, you do not have to take any action, such as calling the <xref:System.AppContext.SetSwitch%2A> method,  to configure the <xref:System.AppContext> instance.</span></span>  
  
### <a name="checking-the-setting"></a><span data-ttu-id="3f363-124">Проверка параметра</span><span class="sxs-lookup"><span data-stu-id="3f363-124">Checking the setting</span></span>  
 <span data-ttu-id="3f363-125">Затем можно проверить, если потребитель объявило значение коммутатора и соответствующим образом путем вызова act <xref:System.AppContext.TryGetSwitch%2A?displayProperty=nameWithType> метод.</span><span class="sxs-lookup"><span data-stu-id="3f363-125">You can then check if a consumer has declared the value of the switch and act appropriately by calling the <xref:System.AppContext.TryGetSwitch%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="3f363-126">Метод возвращает `true` Если `switchName` аргумента найдено, и когда этот метод возвращает его `isEnabled` аргумент указывает значение переключателя.</span><span class="sxs-lookup"><span data-stu-id="3f363-126">The method returns `true` if the `switchName` argument is found, and when the method returns, its `isEnabled` argument indicates the value of the switch.</span></span>  <span data-ttu-id="3f363-127">В противном случае метод возвращает значение `false`.</span><span class="sxs-lookup"><span data-stu-id="3f363-127">Otherwise, the method returns `false`.</span></span>  
  
### <a name="an-example"></a><span data-ttu-id="3f363-128">Пример</span><span class="sxs-lookup"><span data-stu-id="3f363-128">An example</span></span>  
 <span data-ttu-id="3f363-129">Следующий пример иллюстрирует использование <xref:System.AppContext> класс, позволяющий выбрать метод библиотеки исходного поведения клиент.</span><span class="sxs-lookup"><span data-stu-id="3f363-129">The following example illustrates the use of the <xref:System.AppContext> class to allow the customer to choose the original behavior of a library method.</span></span>   <span data-ttu-id="3f363-130">Ниже приведен версии 1.0 библиотеки с именем `StringLibrary`.</span><span class="sxs-lookup"><span data-stu-id="3f363-130">The following is version 1.0 of a library named `StringLibrary`.</span></span> <span data-ttu-id="3f363-131">Он определяет `SubstringStartsAt` метод, который выполняет порядковое сравнение, чтобы определить начальный индекс подстроки в длинной строке.</span><span class="sxs-lookup"><span data-stu-id="3f363-131">It defines a `SubstringStartsAt` method that performs an ordinal comparison to determine the starting index of a substring within a larger string.</span></span>  
  
 [!code-csharp[System.AppContext.Class#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.AppContext.Class/cs/Example4.cs#4)]
 [!code-vb[System.AppContext.Class#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.AppContext.Class/vb/Example4.vb#4)]  
  
 <span data-ttu-id="3f363-132">В следующем примере затем используется библиотеки для поиска начальный индекс подстроки «archæ» в «archaeologist».</span><span class="sxs-lookup"><span data-stu-id="3f363-132">The following example then uses the library to find the starting index of the substring "archæ" in "The archaeologist".</span></span> <span data-ttu-id="3f363-133">Так как этот метод выполняет порядковое сравнение, не удается найти подстроку.</span><span class="sxs-lookup"><span data-stu-id="3f363-133">Because the method performs an ordinal comparison, the substring cannot be found.</span></span>  
  
 [!code-csharp[System.AppContext.Class#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.AppContext.Class/cs/Example4.cs#5)]
 [!code-vb[System.AppContext.Class#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.AppContext.Class/vb/Example4.vb#5)]  
  
 <span data-ttu-id="3f363-134">Версия 2 библиотеки, однако изменения `SubstringStartsAt` метод, используемый для сравнения с учетом языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="3f363-134">Version 2 of the library, however, changes the `SubstringStartsAt` method to use culture-sensitive comparison.</span></span>  
  
 [!code-csharp[System.AppContext.Class#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.AppContext.Class/cs/Example6.cs#6)]
 [!code-vb[System.AppContext.Class#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.AppContext.Class/vb/Example6.vb#6)]  
  
 <span data-ttu-id="3f363-135">При повторной компиляции приложения для запуска в новую версию библиотеки, теперь сообщает обнаружения подстроку «archæ» с индексом 4 в «archaeologist».</span><span class="sxs-lookup"><span data-stu-id="3f363-135">When the app is recompiled to run against the new version of the library, it now reports that the substring "archæ" is found at index 4 in "The archaeologist".</span></span>  
  
 [!code-csharp[System.AppContext.Class#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.AppContext.Class/cs/Example6.cs#7)]
 [!code-vb[System.AppContext.Class#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.AppContext.Class/vb/Example6.vb#7)]  
  
 <span data-ttu-id="3f363-136">Это изменение может быть запрещено работу приложений, зависящих от исходное поведение, определив [ \<AppContextSwitchOverrides >](~/docs/framework/configure-apps/file-schema/runtime/appcontextswitchoverrides-element.md) переключения.</span><span class="sxs-lookup"><span data-stu-id="3f363-136">This change can be prevented from breaking the applications that depend on the original behavior by defining an [\<AppContextSwitchOverrides>](~/docs/framework/configure-apps/file-schema/runtime/appcontextswitchoverrides-element.md) switch.</span></span> <span data-ttu-id="3f363-137">В этом случае параметр с именем `StringLibrary.DoNotUseCultureSensitiveComparison`.</span><span class="sxs-lookup"><span data-stu-id="3f363-137">In this case, the switch is named `StringLibrary.DoNotUseCultureSensitiveComparison`.</span></span> <span data-ttu-id="3f363-138">Значением по умолчанию `false`, указывает, что библиотеки должен выполнить его сравнение с учетом языка и региональных параметров версии 2.0.</span><span class="sxs-lookup"><span data-stu-id="3f363-138">Its default value, `false`, indicates that the library should perform its version 2.0 culture-sensitive comparison.</span></span> <span data-ttu-id="3f363-139">`true` Указывает, что библиотеке должен выполнить порядковое сравнение его версии 1.0.</span><span class="sxs-lookup"><span data-stu-id="3f363-139">`true` indicates that the library should perform its version 1.0 ordinal comparison.</span></span>  <span data-ttu-id="3f363-140">Незначительное изменение приведенного выше кода позволяет задать переключатель, чтобы определить тип сравнения, который выполняет метод потребителю библиотеки.</span><span class="sxs-lookup"><span data-stu-id="3f363-140">A slight modification of the previous code allows the library consumer to set the switch to determine the kind of comparison the method performs.</span></span>  
  
 [!code-csharp[System.AppContext.Class#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.AppContext.Class/cs/Example8.cs#8)]
 [!code-vb[System.AppContext.Class#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.AppContext.Class/vb/Example8.vb#8)]  
  
 <span data-ttu-id="3f363-141">Если приложение затем может использовать следующий файл конфигурации для восстановления поведения версии 1.0.</span><span class="sxs-lookup"><span data-stu-id="3f363-141">If application can then use the following configuration file to restore the version 1.0 behavior.</span></span>  
  
```xml  
  
<configuration>  
   <runtime>  
      <AppContextSwitchOverrides value="StringLibrary.DoNotUseCultureSensitiveComparison=true" />   
   </runtime>  
</configuration>  
  
```  
  
 <span data-ttu-id="3f363-142">При запуске приложения в файле конфигурации отсутствует, она дает следующий результат:</span><span class="sxs-lookup"><span data-stu-id="3f363-142">When the application is run with the configuration file present, it produces the following output:</span></span>  
  
```  
'archæ' not found in 'The archaeologist'  
```  
  
<a name="ForConsumers"></a>   
## <a name="appcontext-for-library-consumers"></a><span data-ttu-id="3f363-143">Параметров AppContext для пользователей библиотеки</span><span class="sxs-lookup"><span data-stu-id="3f363-143">AppContext for library consumers</span></span>  
 <span data-ttu-id="3f363-144">Если потребитель библиотеки <xref:System.AppContext> позволяет воспользоваться преимуществами библиотеки или метод библиотеки механизм явного отказа для новых функциональных возможностей.</span><span class="sxs-lookup"><span data-stu-id="3f363-144">If you are the consumer of a library, the <xref:System.AppContext> class  allows you to take advantage of a library or library method's opt-out mechanism for new functionality.</span></span>   <span data-ttu-id="3f363-145">Отдельные методы библиотеки классов, который вы вызываете определить конкретного коммутаторов, включающие или отключающие новое поведение.</span><span class="sxs-lookup"><span data-stu-id="3f363-145">Individual methods of the class library that you are calling define particular switches that enable or disable a new behavior.</span></span> <span data-ttu-id="3f363-146">Значение параметра является логическим.</span><span class="sxs-lookup"><span data-stu-id="3f363-146">The value of the switch  is a Boolean.</span></span> <span data-ttu-id="3f363-147">Если это `false`, которой обычно является значение по умолчанию, новое поведение включено; Если это `true`, новое поведение отключена, и элемент ведет себя по-другому.</span><span class="sxs-lookup"><span data-stu-id="3f363-147">If it is `false`, which is typically the default value, the new behavior is enabled; if it is `true`, the new behavior is disabled, and the member behaves as it did previously.</span></span>  
  
 <span data-ttu-id="3f363-148">Значение параметра можно задать одним из трех способов:</span><span class="sxs-lookup"><span data-stu-id="3f363-148">You can set the value of a switch in one of three ways:</span></span>  
  
-   <span data-ttu-id="3f363-149">Путем вызова <xref:System.AppContext.SetSwitch%28System.String%2CSystem.Boolean%29?displayProperty=nameWithType> метод в коде.</span><span class="sxs-lookup"><span data-stu-id="3f363-149">By calling the <xref:System.AppContext.SetSwitch%28System.String%2CSystem.Boolean%29?displayProperty=nameWithType> method in your code.</span></span>  <span data-ttu-id="3f363-150">`switchName` Аргумент определяет имя коммутатора и `isEnabled` свойство определяет значение переключателя.</span><span class="sxs-lookup"><span data-stu-id="3f363-150">The `switchName` argument defines the switch name, and the `isEnabled` property defines the value of the switch.</span></span> <span data-ttu-id="3f363-151">Поскольку <xref:System.AppContext> является статическим классом, он доступен на основе на уровне домена приложения.</span><span class="sxs-lookup"><span data-stu-id="3f363-151">Because <xref:System.AppContext> is a static class, it is available on a per-application domain basis.</span></span>  
  
     <span data-ttu-id="3f363-152">Вызов <xref:System.AppContext.SetSwitch%28System.String%2CSystem.Boolean%29?displayProperty=nameWithType> имеет область приложения; то есть, он влияет только приложение.</span><span class="sxs-lookup"><span data-stu-id="3f363-152">Calling the <xref:System.AppContext.SetSwitch%28System.String%2CSystem.Boolean%29?displayProperty=nameWithType> has application scope; that is, it affects only the application.</span></span>  
  
-   <span data-ttu-id="3f363-153">Добавив `<AppContextSwitchOverrides>` элемент [ \<среды выполнения >](~/docs/framework/configure-apps/file-schema/runtime/runtime-element.md) раздел файла app.config.</span><span class="sxs-lookup"><span data-stu-id="3f363-153">By adding an `<AppContextSwitchOverrides>` element to the [\<runtime>](~/docs/framework/configure-apps/file-schema/runtime/runtime-element.md) section of your app.config file.</span></span> <span data-ttu-id="3f363-154">Параметр имеет один атрибут, `value`, значение которого является строка, которая представляет пару ключ значение, содержащее имя параметра и его значение.</span><span class="sxs-lookup"><span data-stu-id="3f363-154">The switch has a single attribute, `value`, whose value is a string that represents a key/value pair containing both the switch name and its value.</span></span>  
  
     <span data-ttu-id="3f363-155">Для определения нескольких коммутаторов, разделения пары ключ значение каждого коммутатора в [ \<AppContextSwitchOverrides >](~/docs/framework/configure-apps/file-schema/runtime/appcontextswitchoverrides-element.md) элемента `value` атрибут точкой с запятой.</span><span class="sxs-lookup"><span data-stu-id="3f363-155">To define multiple switches, separate each switch's key/value pair in the [\<AppContextSwitchOverrides>](~/docs/framework/configure-apps/file-schema/runtime/appcontextswitchoverrides-element.md) element's `value` attribute with a semicolon.</span></span> <span data-ttu-id="3f363-156">В этом случае `<AppContextSwitchOverrides>` элемент имеет следующий формат:</span><span class="sxs-lookup"><span data-stu-id="3f363-156">In that case, the `<AppContextSwitchOverrides>` element has the following format:</span></span>  
  
    ```xml  
    <AppContextSwitchOverrides value="switchName1=value1;switchName2=value2" />  
    ```  
  
     <span data-ttu-id="3f363-157">С помощью `<AppContextSwitchOverrides>` у элемента для определения параметра конфигурации области приложения, то есть оно влияет на только приложение.</span><span class="sxs-lookup"><span data-stu-id="3f363-157">Using the `<AppContextSwitchOverrides>` element to define a configuration setting has application scope; that is, it affects only the application.</span></span>  

    > [!NOTE]    
    > <span data-ttu-id="3f363-158">Сведения на коммутаторах, определенные в .NET Framework см. в разделе [ \<AppContextSwitchOverrides > элемент](~/docs/framework/configure-apps/file-schema/runtime/appcontextswitchoverrides-element.md).</span><span class="sxs-lookup"><span data-stu-id="3f363-158">For information on the switches defined by the .NET Framework, see the [\<AppContextSwitchOverrides> element](~/docs/framework/configure-apps/file-schema/runtime/appcontextswitchoverrides-element.md).</span></span>

-   <span data-ttu-id="3f363-159">Добавив строковое значение, имя которой представляет имя коммутатора для `HKLM\SOFTWARE\Microsoft\.NETFramework\AppContext` ключа в реестре.</span><span class="sxs-lookup"><span data-stu-id="3f363-159">By adding a string value whose name is the name of the switch to the `HKLM\SOFTWARE\Microsoft\.NETFramework\AppContext` key in the registry.</span></span> <span data-ttu-id="3f363-160">Его значение должно быть строковым представлением <xref:System.Boolean> , может быть проанализирован <xref:System.Boolean.Parse%2A?displayProperty=nameWithType> метода, то есть он должен быть «True», «true», «False» или «false».</span><span class="sxs-lookup"><span data-stu-id="3f363-160">Its value must be the string representation of a <xref:System.Boolean> that can be parsed by the <xref:System.Boolean.Parse%2A?displayProperty=nameWithType> method; that is, it must be "True", "true", "False", or "false".</span></span> <span data-ttu-id="3f363-161">Если среда выполнения обнаруживает любое другое значение, он игнорирует ключ.</span><span class="sxs-lookup"><span data-stu-id="3f363-161">If the runtime encounters any other value, it ignores the switch.</span></span>  
  
     <span data-ttu-id="3f363-162">Использование реестра для определения <xref:System.AppContext> коммутатор имеет область машины; то есть, он влияет на каждое приложение выполняется на компьютере.</span><span class="sxs-lookup"><span data-stu-id="3f363-162">Using the registry to define an <xref:System.AppContext> switch has machine scope; that is, it affects every application running on the machine.</span></span>  
  
 <span data-ttu-id="3f363-163">Если же коммутатору задано более чем одним способом, является порядок очередности для определения параметра, который переопределяет другие:</span><span class="sxs-lookup"><span data-stu-id="3f363-163">If you set the same switch in more than one way, the order of precedence for determining which setting overrides the others is:</span></span>  
  
1.  <span data-ttu-id="3f363-164">Программный параметр.</span><span class="sxs-lookup"><span data-stu-id="3f363-164">The programmatic setting.</span></span>  
  
2.  <span data-ttu-id="3f363-165">Параметр в файле конфигурации приложения.</span><span class="sxs-lookup"><span data-stu-id="3f363-165">The setting in the app config file.</span></span>  
  
3.  <span data-ttu-id="3f363-166">Параметр реестра.</span><span class="sxs-lookup"><span data-stu-id="3f363-166">The registry setting.</span></span>  
  
 <span data-ttu-id="3f363-167">Вот простое приложение, которое передает файл URI для <xref:System.IO.Path.GetDirectoryName%2A?displayProperty=nameWithType> метод.</span><span class="sxs-lookup"><span data-stu-id="3f363-167">The following is a simple application that passes a file URI to the <xref:System.IO.Path.GetDirectoryName%2A?displayProperty=nameWithType> method.</span></span>  <span data-ttu-id="3f363-168">Когда работает в среде .NET Framework 4.6, она вызывает <xref:System.ArgumentException> из-за `file://` больше не является допустимой частью пути к файлу.</span><span class="sxs-lookup"><span data-stu-id="3f363-168">When run under the .NET Framework 4.6, it throws an <xref:System.ArgumentException> because `file://` is no longer a valid part of a file path.</span></span>  
  
 [!code-csharp[System.AppContext.Class#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.AppContext.Class/cs/ForConsumers1.cs#10)]
 [!code-vb[System.AppContext.Class#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.AppContext.Class/vb/ForConsumers1.vb#10)]  
  
 <span data-ttu-id="3f363-169">Чтобы восстановить прежнее поведение данного метода и избежать возникновения исключения, можно добавить `Switch.System.IO.UseLegacyPathHandling` переключитесь в файле конфигурации приложения, например:</span><span class="sxs-lookup"><span data-stu-id="3f363-169">To restore the method's previous behavior and prevent the exception, you can add the `Switch.System.IO.UseLegacyPathHandling` switch to the application configuration file for the example:</span></span>  
  
```xml  
<configuration>  
    <runtime>  
        <AppContextSwitchOverrides value="Switch.System.IO.UseLegacyPathHandling=true" />    
    </runtime>  
</configuration>  
```  
## <a name="see-also"></a><span data-ttu-id="3f363-170">См. также</span><span class="sxs-lookup"><span data-stu-id="3f363-170">See also</span></span>
[<span data-ttu-id="3f363-171">Коммутатор параметров AppContext</span><span class="sxs-lookup"><span data-stu-id="3f363-171">AppContext switch</span></span>](~/docs/framework/configure-apps/file-schema/runtime/appcontextswitchoverrides-element.md)

 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="BaseDirectory">
      <MemberSignature Language="C#" Value="public static string BaseDirectory { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string BaseDirectory" />
      <MemberSignature Language="DocId" Value="P:System.AppContext.BaseDirectory" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property BaseDirectory As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ BaseDirectory { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AppContext</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3f363-172">Возвращает путь к базовому каталогу, в котором сопоставитель сборок производит поиск.</span><span class="sxs-lookup"><span data-stu-id="3f363-172">Gets the pathname of the base directory that the assembly resolver uses to probe for assemblies.</span></span></summary>
        <value><span data-ttu-id="3f363-173">Путь к базовому каталогу, в котором сопоставитель сборок производит поиск.</span><span class="sxs-lookup"><span data-stu-id="3f363-173">the pathname of the base directory that the assembly resolver uses to probe for assemblies.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3f363-174">Это каждого свойства домена приложения.</span><span class="sxs-lookup"><span data-stu-id="3f363-174">This is a per application domain property.</span></span> <span data-ttu-id="3f363-175">Его значение соответствует <xref:System.AppDomain.BaseDirectory%2A?displayProperty=nameWithType> свойства текущего домена приложения.</span><span class="sxs-lookup"><span data-stu-id="3f363-175">Its value corresponds to the <xref:System.AppDomain.BaseDirectory%2A?displayProperty=nameWithType> property of the current application domain.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetData">
      <MemberSignature Language="C#" Value="public static object GetData (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetData(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AppContext.GetData(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetData (name As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetData(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AppContext</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="3f363-176">Имя элемента данных.</span><span class="sxs-lookup"><span data-stu-id="3f363-176">The name of the data element.</span></span></param>
        <summary><span data-ttu-id="3f363-177">Возвращает значение именованного элемента данных, назначенное текущему домену приложения.</span><span class="sxs-lookup"><span data-stu-id="3f363-177">Returns the value of the named data element assigned to the current application domain.</span></span></summary>
        <returns><span data-ttu-id="3f363-178">Значение <paramref name="name" />, если <paramref name="name" /> определяет именованное значение; в противном случае — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="3f363-178">The value of <paramref name="name" />, if <paramref name="name" /> identifies a named value; otherwise, <see langword="null" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetSwitch">
      <MemberSignature Language="C#" Value="public static void SetSwitch (string switchName, bool isEnabled);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetSwitch(string switchName, bool isEnabled) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AppContext.SetSwitch(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetSwitch (switchName As String, isEnabled As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetSwitch(System::String ^ switchName, bool isEnabled);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AppContext</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="switchName" Type="System.String" />
        <Parameter Name="isEnabled" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="switchName"><span data-ttu-id="3f363-179">Имя переключателя.</span><span class="sxs-lookup"><span data-stu-id="3f363-179">The name of the switch.</span></span></param>
        <param name="isEnabled"><span data-ttu-id="3f363-180">Значение переключателя.</span><span class="sxs-lookup"><span data-stu-id="3f363-180">The value of the switch.</span></span></param>
        <summary><span data-ttu-id="3f363-181">Задает значение переключателя.</span><span class="sxs-lookup"><span data-stu-id="3f363-181">Sets the value of a switch.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3f363-182"><xref:System.AppContext> Класс позволяет авторам библиотек предоставлять согласованный механизм явного отказа для новых функциональных возможностей.</span><span class="sxs-lookup"><span data-stu-id="3f363-182">The <xref:System.AppContext> class enables library writers to provide a uniform opt-out mechanism for new functionality for their users.</span></span> <span data-ttu-id="3f363-183">Он устанавливает слабо связанный контракт между компонентами для передачи запроса на явный отказ.</span><span class="sxs-lookup"><span data-stu-id="3f363-183">It establishes a loosely-coupled contract between components in order to communicate an opt-out request.</span></span> <span data-ttu-id="3f363-184">Эта возможность обычно важна при внесении изменений в существующие функции.</span><span class="sxs-lookup"><span data-stu-id="3f363-184">This capability is typically important when a change is made to existing functionality.</span></span> <span data-ttu-id="3f363-185">В свою очередь, режим неявного согласия для новых функциональных возможностей уже существует.</span><span class="sxs-lookup"><span data-stu-id="3f363-185">Conversely, there is already an implicit opt-in for new functionality.</span></span>  
  
 <span data-ttu-id="3f363-186"><xref:System.AppContext.SetSwitch%2A> Метод вызывается методом приложения (или библиотека), чтобы объявить значение параметра (который всегда имеет <xref:System.Boolean> значение), определяемое зависимой библиотекой.</span><span class="sxs-lookup"><span data-stu-id="3f363-186">The <xref:System.AppContext.SetSwitch%2A> method is called by an application (or a library) to declare the value of a switch (which is always a <xref:System.Boolean> value) that a dependent library defines.</span></span> <span data-ttu-id="3f363-187">Параметр всегда имеет неявное `false`, который определяет новое поведение.</span><span class="sxs-lookup"><span data-stu-id="3f363-187">The switch is always implicitly `false`, which provides the new behavior.</span></span> <span data-ttu-id="3f363-188">Установите значение параметра `true` позволяет ему, который содержит устаревшее поведение.</span><span class="sxs-lookup"><span data-stu-id="3f363-188">Setting the switch to `true` enables it, which provides the legacy behavior.</span></span> <span data-ttu-id="3f363-189">После явного задания коммутатор `false` также определяет новое поведение.</span><span class="sxs-lookup"><span data-stu-id="3f363-189">Explicitly setting the switch to `false` also provides the new behavior.</span></span> <span data-ttu-id="3f363-190">Зависимые библиотеки затем можно проверить значение переключателя, вызвав <xref:System.AppContext.TryGetSwitch%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="3f363-190">The dependent library can then check the value of the switch by calling the <xref:System.AppContext.TryGetSwitch%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3f363-191">Рекомендуется использовать согласованный формат для имен коммутатора, так как они представляют собой формальный контракт, предоставляемый библиотекой.</span><span class="sxs-lookup"><span data-stu-id="3f363-191">It's beneficial to use a consistent format for switch names, since they are a formal contract exposed by a library.</span></span> <span data-ttu-id="3f363-192">Ниже приведены два очевидных формата:</span><span class="sxs-lookup"><span data-stu-id="3f363-192">The following are two obvious formats.</span></span>  
>   
>  -   <span data-ttu-id="3f363-193">*параметр*.*пространство_имен* * имя_параметра*</span><span class="sxs-lookup"><span data-stu-id="3f363-193">*Switch*.*namespace*.*switchname*</span></span>  
> -   <span data-ttu-id="3f363-194">*параметр*.*библиотека*.*имя_параметра*</span><span class="sxs-lookup"><span data-stu-id="3f363-194">*Switch*.*library*.*switchname*</span></span>  
  
 <span data-ttu-id="3f363-195">Помимо Программная установка значения параметра, его можно также задать:</span><span class="sxs-lookup"><span data-stu-id="3f363-195">In addition to setting the value of a switch programmatically, it can also be set:</span></span>  
  
-   <span data-ttu-id="3f363-196">Путем добавления имени параметра и значение для [ \<AppContextSwitchOverrides >](~/docs/framework/configure-apps/file-schema/runtime/appcontextswitchoverrides-element.md) элемент в [ \<среды выполнения >](~/docs/framework/configure-apps/file-schema/runtime/runtime-element.md) раздел файла конфигурации приложения.</span><span class="sxs-lookup"><span data-stu-id="3f363-196">By adding the switch name and value to the [\<AppContextSwitchOverrides>](~/docs/framework/configure-apps/file-schema/runtime/appcontextswitchoverrides-element.md) element in the [\<runtime>](~/docs/framework/configure-apps/file-schema/runtime/runtime-element.md) section of an application configuration file.</span></span> <span data-ttu-id="3f363-197">Например, следующий код определяет параметр с именем `Libraries.FPLibrary.UseExactFloatingPointComparison` , значение которого является `False`.</span><span class="sxs-lookup"><span data-stu-id="3f363-197">For example, the following defines a switch named `Libraries.FPLibrary.UseExactFloatingPointComparison` whose value is `False`.</span></span>  
  
    ```xml  
  
    <configuration>  
       <runtime>  
          <AppContextSwitchOverrides value="Libraries.FPLibrary.UseExactFloatingPointComparison=false" />   
       </runtime>  
    </configuration>  
  
    ```  
  
-   <span data-ttu-id="3f363-198">Добавив строковое значение, имя которой представляет имя коммутатора для `HKLM\SOFTWARE\Microsoft\.NETFramework\AppContext` ключа в реестре.</span><span class="sxs-lookup"><span data-stu-id="3f363-198">By adding a string value whose name is the name of the switch to the `HKLM\SOFTWARE\Microsoft\.NETFramework\AppContext` key in the registry.</span></span> <span data-ttu-id="3f363-199">Его значение должно быть строковым представлением <xref:System.Boolean> , может быть проанализирован <xref:System.Boolean.Parse%2A?displayProperty=nameWithType> метода, то есть он должен быть «True», «true», «False» или «false».</span><span class="sxs-lookup"><span data-stu-id="3f363-199">Its value must be the string representation of a <xref:System.Boolean> that can be parsed by the <xref:System.Boolean.Parse%2A?displayProperty=nameWithType> method; that is, it must be "True", "true", "False", or "false".</span></span>  
  
 <span data-ttu-id="3f363-200">Если `switchName` уже существует, его значение перезаписывается `isEnabled` аргумент.</span><span class="sxs-lookup"><span data-stu-id="3f363-200">If `switchName` already exists, its value is overwritten by the `isEnabled` argument.</span></span>  <span data-ttu-id="3f363-201">То есть, последний вызов <xref:System.AppContext.SetSwitch%2A> метод переопределяет значение, определенное в реестре, в файле конфигурации приложения или с предыдущих вызовов <xref:System.AppContext.SetSwitch%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="3f363-201">That is, the most recent call to the <xref:System.AppContext.SetSwitch%2A> method overrides the value defined in the registry, in an app configuration file, or by previous calls to the <xref:System.AppContext.SetSwitch%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3f363-202">Следующий код задает параметр с именем `Switch.AmazingLib.ThrowOnException` для `true`, который позволяет устаревшее поведение.</span><span class="sxs-lookup"><span data-stu-id="3f363-202">The following line of code sets a switch named `Switch.AmazingLib.ThrowOnException` to `true`, which enables a legacy behavior.</span></span> <span data-ttu-id="3f363-203">Библиотеку можно затем проверить, установлен ли потребитель библиотека значение переключателя путем вызова <xref:System.AppContext.TryGetSwitch%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="3f363-203">The library can then check whether a library consumer has set the value of the switch by calling the <xref:System.AppContext.TryGetSwitch%2A> method.</span></span>  
  
 [!code-csharp[System.AppContext.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.AppContext.Class/cs/TestValue1.cs#1)]
 [!code-vb[System.AppContext.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.AppContext.Class/vb/TestValue1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3f363-204">Свойство <paramref name="switchName" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="3f363-204"><paramref name="switchName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3f363-205">Свойство <paramref name="switchName" /> имеет значение <see cref="F:System.String.Empty" />.</span><span class="sxs-lookup"><span data-stu-id="3f363-205"><paramref name="switchName" /> is <see cref="F:System.String.Empty" />.</span></span></exception>
        <altmember cref="M:System.AppContext.TryGetSwitch(System.String,System.Boolean@)" />
      </Docs>
    </Member>
    <Member MemberName="TargetFrameworkName">
      <MemberSignature Language="C#" Value="public static string TargetFrameworkName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string TargetFrameworkName" />
      <MemberSignature Language="DocId" Value="P:System.AppContext.TargetFrameworkName" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property TargetFrameworkName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ TargetFrameworkName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AppContext</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3f363-206">Получает имя целевой версии платформы текущего приложения.</span><span class="sxs-lookup"><span data-stu-id="3f363-206">Gets the name of the framework version targeted by the current application.</span></span></summary>
        <value><span data-ttu-id="3f363-207">Имя целевой версии платформы текущего приложения.</span><span class="sxs-lookup"><span data-stu-id="3f363-207">The name of the framework version targeted by the current application.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3f363-208">Имя требуемой версии .NET framework, соответствует значению <xref:System.Runtime.Versioning.TargetFrameworkAttribute.FrameworkName%2A?displayProperty=nameWithType> свойство.</span><span class="sxs-lookup"><span data-stu-id="3f363-208">The name of the target framework version corresponds to the value of the <xref:System.Runtime.Versioning.TargetFrameworkAttribute.FrameworkName%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="3f363-209">Список имен платформы .NET framework для платформы .NET Framework см. в разделе [ &lt;supportedRuntime&gt; элемент](~/docs/framework/configure-apps/file-schema/startup/supportedruntime-element.md) элемента.</span><span class="sxs-lookup"><span data-stu-id="3f363-209">For a list of target framework names for the .NET Framework, see the [&lt;supportedRuntime&gt; Element](~/docs/framework/configure-apps/file-schema/startup/supportedruntime-element.md) element.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Runtime.Versioning.TargetFrameworkAttribute" />
        <altmember cref="P:System.Runtime.Versioning.TargetFrameworkAttribute.FrameworkName" />
      </Docs>
    </Member>
    <Member MemberName="TryGetSwitch">
      <MemberSignature Language="C#" Value="public static bool TryGetSwitch (string switchName, out bool isEnabled);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryGetSwitch(string switchName, [out] bool&amp; isEnabled) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AppContext.TryGetSwitch(System.String,System.Boolean@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryGetSwitch (switchName As String, ByRef isEnabled As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryGetSwitch(System::String ^ switchName, [Runtime::InteropServices::Out] bool % isEnabled);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AppContext</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="switchName" Type="System.String" />
        <Parameter Name="isEnabled" Type="System.Boolean&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="switchName"><span data-ttu-id="3f363-210">Имя переключателя.</span><span class="sxs-lookup"><span data-stu-id="3f363-210">The name of the switch.</span></span></param>
        <param name="isEnabled"><span data-ttu-id="3f363-211">При возвращении этого метода содержит значение для <c>switchName</c>, если <c>switchName</c> найден, или <see langword="false" />, если <c>switchName</c> не найден.</span><span class="sxs-lookup"><span data-stu-id="3f363-211">When this method returns, contains the value of <c>switchName</c> if <c>switchName</c> was found, or <see langword="false" /> if <c>switchName</c> was not found.</span></span> <span data-ttu-id="3f363-212">Этот параметр передается неинициализированным.</span><span class="sxs-lookup"><span data-stu-id="3f363-212">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="3f363-213">Предпринимает попытку получения значения переключателя.</span><span class="sxs-lookup"><span data-stu-id="3f363-213">Tries to get the value of a switch.</span></span></summary>
        <returns>
          <span data-ttu-id="3f363-214"><see langword="true" />, если для <paramref name="switchName" /> задано значение и аргумент <paramref name="isEnabled" /> содержит значение переключателя; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="3f363-214"><see langword="true" /> if <paramref name="switchName" /> was set and the <paramref name="isEnabled" /> argument contains the value of the switch; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3f363-215"><xref:System.AppContext> Класс позволяет авторам библиотек предоставлять согласованный механизм явного отказа для новых функциональных возможностей.</span><span class="sxs-lookup"><span data-stu-id="3f363-215">The <xref:System.AppContext> class enables library writers to provide a uniform opt-out mechanism for new functionality for their users.</span></span> <span data-ttu-id="3f363-216">Он устанавливает слабо связанный контракт между компонентами для передачи запроса на явный отказ.</span><span class="sxs-lookup"><span data-stu-id="3f363-216">It establishes a loosely-coupled contract between components in order to communicate an opt-out request.</span></span> <span data-ttu-id="3f363-217">Эта возможность обычно важна при внесении изменений в существующие функции.</span><span class="sxs-lookup"><span data-stu-id="3f363-217">This capability is typically important when a change is made to existing functionality.</span></span> <span data-ttu-id="3f363-218">В свою очередь, режим неявного согласия для новых функциональных возможностей уже существует.</span><span class="sxs-lookup"><span data-stu-id="3f363-218">Conversely, there is already an implicit opt-in for new functionality.</span></span>  
  
 <span data-ttu-id="3f363-219">Общеязыковая среда выполнения автоматически заполняет коммутаторов, назначенный <xref:System.AppContext> экземпляра путем чтения реестра и файл конфигурации приложения.</span><span class="sxs-lookup"><span data-stu-id="3f363-219">The common language runtime automatically populates the switches assigned to an <xref:System.AppContext> instance by reading the registry and the application's configuration file.</span></span> <span data-ttu-id="3f363-220">Затем можно переопределить значения этих параметров, и добавлены новые параметры, путем вызова <xref:System.AppContext.SetSwitch%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="3f363-220">The value of these switches can then be overridden, and new switches added, by calling the <xref:System.AppContext.SetSwitch%2A> method.</span></span>  
  
 <span data-ttu-id="3f363-221">Вызывает библиотеку <xref:System.AppContext.TryGetSwitch%2A> метод для проверки ли ее пользователей было объявлено значение переключателя, а затем соответствующим образом реагировать на него.</span><span class="sxs-lookup"><span data-stu-id="3f363-221">A library calls the <xref:System.AppContext.TryGetSwitch%2A> method to check whether its consumers have declared the value of the switch and then act appropriately on it.</span></span>  <span data-ttu-id="3f363-222">По умолчанию параметр не определен, новые функциональные возможности включения...</span><span class="sxs-lookup"><span data-stu-id="3f363-222">By default, if the switch is not defined, the new functionality is enabled..</span></span> <span data-ttu-id="3f363-223">Если определен параметр и его значение равно `false`, новые функциональные возможности включена.</span><span class="sxs-lookup"><span data-stu-id="3f363-223">If the switch is defined and its value is `false`, the new functionality is also enabled.</span></span> <span data-ttu-id="3f363-224">Если его значение равно `true`, устаревшее поведение включен.</span><span class="sxs-lookup"><span data-stu-id="3f363-224">If its value is `true`, the legacy behavior is enabled.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3f363-225">В следующем примере определяется, задан ли потребитель библиотеки коммутатор с именем `Switch.AmazingLib.ThrowOnException`.</span><span class="sxs-lookup"><span data-stu-id="3f363-225">The following example determines whether a library consumer has set a switch named `Switch.AmazingLib.ThrowOnException`.</span></span>  
  
 [!code-csharp[System.AppContext.Class#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.AppContext.Class/cs/TestValue1.cs#2)]
 [!code-vb[System.AppContext.Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.AppContext.Class/vb/TestValue1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3f363-226">Свойство <paramref name="switchName" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="3f363-226"><paramref name="switchName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3f363-227">Свойство <paramref name="switchName" /> имеет значение <see cref="F:System.String.Empty" />.</span><span class="sxs-lookup"><span data-stu-id="3f363-227"><paramref name="switchName" /> is <see cref="F:System.String.Empty" />.</span></span></exception>
        <altmember cref="M:System.AppContext.SetSwitch(System.String,System.Boolean)" />
      </Docs>
    </Member>
  </Members>
</Type>