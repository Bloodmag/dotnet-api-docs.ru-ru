<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="AppDomainSetup.xml" source-language="en-US" target-language="ru-RU">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5de1a8d1ecd07f9f8d0291eb6d18e2d042042a9b2.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">de1a8d1ecd07f9f8d0291eb6d18e2d042042a9b2</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.AppDomainSetup">
          <source>Represents assembly binding information that can be added to an instance of <ph id="ph1">&lt;see cref="T:System.AppDomain" /&gt;</ph>.</source>
          <target state="translated">Предоставляет сведения о привязке сборок, которые могут быть добавлены к экземпляру класса <ph id="ph1">&lt;see cref="T:System.AppDomain" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppDomainSetup">
          <source>Changing the properties of an <ph id="ph1">&lt;xref:System.AppDomainSetup&gt;</ph> instance does not affect any existing <ph id="ph2">&lt;xref:System.AppDomain&gt;</ph>.</source>
          <target state="translated">Изменение свойств <ph id="ph1">&lt;xref:System.AppDomainSetup&gt;</ph> экземпляра не влияет на существующие <ph id="ph2">&lt;xref:System.AppDomain&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppDomainSetup">
          <source>It can affect only the creation of a new <ph id="ph1">&lt;xref:System.AppDomain&gt;</ph>, when the <ph id="ph2">&lt;xref:System.AppDomain.CreateDomain%2A&gt;</ph> method is called with the <ph id="ph3">&lt;xref:System.AppDomainSetup&gt;</ph> instance as a parameter.</source>
          <target state="translated">Это может затронуть только создание нового <ph id="ph1">&lt;xref:System.AppDomain&gt;</ph>, когда <ph id="ph2">&lt;xref:System.AppDomain.CreateDomain%2A&gt;</ph> метод вызывается с <ph id="ph3">&lt;xref:System.AppDomainSetup&gt;</ph> экземпляр в качестве параметра.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppDomainSetup">
          <source>This class implements the <ph id="ph1">&lt;xref:System.IAppDomainSetup&gt;</ph> interface.</source>
          <target state="translated">Этот класс реализует интерфейс <ph id="ph1">&lt;xref:System.IAppDomainSetup&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppDomainSetup">
          <source>The default value for the <ph id="ph1">&lt;xref:System.AppDomainSetup.DisallowCodeDownload%2A&gt;</ph> property is false.</source>
          <target state="translated">Значение по умолчанию для <ph id="ph1">&lt;xref:System.AppDomainSetup.DisallowCodeDownload%2A&gt;</ph> свойство имеет значение false.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppDomainSetup">
          <source>This setting is unsafe for services.</source>
          <target state="translated">Этот параметр является безопасной для служб.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppDomainSetup">
          <source>To help prevent services from downloading partially trusted code, set this property to true</source>
          <target state="translated">Чтобы предотвратить службы загрузку частично доверенным кодом, присвойте этому свойству значение true</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="T:System.AppDomainSetup">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.AppDomainSetup" /&gt;</ph> class.</source>
          <target state="translated">Инициализирует новый экземпляр класса <ph id="ph1">&lt;see cref="T:System.AppDomainSetup" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.AppDomainSetup.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.AppDomainSetup" /&gt;</ph> class.</source>
          <target state="translated">Инициализирует новый экземпляр класса <ph id="ph1">&lt;see cref="T:System.AppDomainSetup" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.AppDomainSetup.#ctor(System.ActivationContext)">
          <source>The activation context to be used for an application domain.</source>
          <target state="translated">Контекст активации, который необходимо использовать для текущего домена приложения.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.AppDomainSetup.#ctor(System.ActivationContext)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.AppDomainSetup" /&gt;</ph> class with the specified activation context to use for manifest-based activation of an application domain.</source>
          <target state="translated">Инициализирует новый экземпляр класса <ph id="ph1">&lt;see cref="T:System.AppDomainSetup" /&gt;</ph> заданным контекстом активации для использования при активации домена приложения на основе манифеста.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AppDomainSetup.#ctor(System.ActivationContext)">
          <source>The <ph id="ph1">&lt;xref:System.ActivationContext&gt;</ph> object specified for <ph id="ph2">`activationContext`</ph> is used to generate an <ph id="ph3">&lt;xref:System.Runtime.Hosting.ActivationArguments&gt;</ph> object containing information required to activate a new application domain.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ActivationContext&gt;</ph> Объект, указанный для <ph id="ph2">`activationContext`</ph> используется для создания <ph id="ph3">&lt;xref:System.Runtime.Hosting.ActivationArguments&gt;</ph> объект, содержащий сведения, необходимые для активации нового домена приложения.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AppDomainSetup.#ctor(System.ActivationContext)">
          <source>This <ph id="ph1">&lt;xref:System.Runtime.Hosting.ActivationArguments&gt;</ph> object can be accessed by using the <ph id="ph2">&lt;xref:System.AppDomainSetup.ActivationArguments%2A&gt;</ph> property.</source>
          <target state="translated">Это <ph id="ph1">&lt;xref:System.Runtime.Hosting.ActivationArguments&gt;</ph> объекту осуществляется с помощью <ph id="ph2">&lt;xref:System.AppDomainSetup.ActivationArguments%2A&gt;</ph> свойство.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.AppDomainSetup.#ctor(System.ActivationContext)">
          <source><ph id="ph1">&lt;paramref name="activationContext" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Свойство <ph id="ph1">&lt;paramref name="activationContext" /&gt;</ph> имеет значение <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.AppDomainSetup.#ctor(System.Runtime.Hosting.ActivationArguments)">
          <source>An object that specifies information required for the manifest-based activation of a new application domain.</source>
          <target state="translated">Объект, определяющий сведения, необходимые для активации нового домена приложения на основе манифеста.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.AppDomainSetup.#ctor(System.Runtime.Hosting.ActivationArguments)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.AppDomainSetup" /&gt;</ph> class with the specified activation arguments required for manifest-based activation of an application domain.</source>
          <target state="translated">Инициализирует новый экземпляр класса <ph id="ph1">&lt;see cref="T:System.AppDomainSetup" /&gt;</ph> заданными аргументами контекста активации, необходимыми для активации домена приложения на основе манифеста.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AppDomainSetup.#ctor(System.Runtime.Hosting.ActivationArguments)">
          <source>The object specified for <ph id="ph1">`activationArguments`</ph> can be accessed by using the <ph id="ph2">&lt;xref:System.AppDomainSetup.ActivationArguments%2A&gt;</ph> property.</source>
          <target state="translated">Объект, указанный для <ph id="ph1">`activationArguments`</ph> может осуществляться с помощью <ph id="ph2">&lt;xref:System.AppDomainSetup.ActivationArguments%2A&gt;</ph> свойство.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.AppDomainSetup.#ctor(System.Runtime.Hosting.ActivationArguments)">
          <source><ph id="ph1">&lt;paramref name="activationArguments" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Свойство <ph id="ph1">&lt;paramref name="activationArguments" /&gt;</ph> имеет значение <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="P:System.AppDomainSetup.ActivationArguments">
          <source>Gets or sets data about the activation of an application domain.</source>
          <target state="translated">Возвращает или задает данные об активации домена приложения.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AppDomainSetup.ActivationArguments">
          <source>An object that contains data about the activation of an application domain.</source>
          <target state="translated">Объект, содержащий данные об активации домена приложения.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AppDomainSetup.ActivationArguments">
          <source>No exception is thrown if this property is set to <ph id="ph1">`null`</ph>.</source>
          <target state="translated">Исключение не возникает, если это свойство имеет значение <ph id="ph1">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AppDomainSetup.ActivationArguments">
          <source>The information provided by the <ph id="ph1">&lt;xref:System.Runtime.Hosting.ActivationArguments&gt;</ph> object supports manifest-based activation.</source>
          <target state="translated">Сведения, предоставляемые <ph id="ph1">&lt;xref:System.Runtime.Hosting.ActivationArguments&gt;</ph> объект поддерживает активацию на основе манифеста.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="P:System.AppDomainSetup.ActivationArguments">
          <source>The property is set to an <ph id="ph1">&lt;see cref="T:System.Runtime.Hosting.ActivationArguments" /&gt;</ph> object whose application identity does not match the application identity of the <ph id="ph2">&lt;see cref="T:System.Security.Policy.ApplicationTrust" /&gt;</ph> object returned by the <ph id="ph3">&lt;see cref="P:System.AppDomainSetup.ApplicationTrust" /&gt;</ph> property.</source>
          <target state="translated">Свойство имеет значение объекта <ph id="ph1">&lt;see cref="T:System.Runtime.Hosting.ActivationArguments" /&gt;</ph>, удостоверение приложения которого не соответствует удостоверению приложения объекта <ph id="ph2">&lt;see cref="T:System.Security.Policy.ApplicationTrust" /&gt;</ph>, возвращенного свойством <ph id="ph3">&lt;see cref="P:System.AppDomainSetup.ApplicationTrust" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="P:System.AppDomainSetup.ActivationArguments">
          <source>No exception is thrown if the <ph id="ph1">&lt;see cref="P:System.AppDomainSetup.ApplicationTrust" /&gt;</ph> property is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Если свойство <ph id="ph1">&lt;see cref="P:System.AppDomainSetup.ApplicationTrust" /&gt;</ph> имеет значение <ph id="ph2">&lt;see langword="null" /&gt;</ph>, исключение не вызывается.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="P:System.AppDomainSetup.AppDomainInitializer">
          <source>Gets or sets the <ph id="ph1">&lt;see cref="T:System.AppDomainInitializer" /&gt;</ph> delegate, which represents a callback method that is invoked when the application domain is initialized.</source>
          <target state="translated">Возвращает или задает делегат <ph id="ph1">&lt;see cref="T:System.AppDomainInitializer" /&gt;</ph>, представляющий метод обратного вызова, вызываемый при инициализации домена приложения.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AppDomainSetup.AppDomainInitializer">
          <source>A delegate that represents a callback method that is invoked when the application domain is initialized.</source>
          <target state="translated">Делегат, представляющий метод обратного вызова, вызываемый при инициализации домена приложения.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AppDomainSetup.AppDomainInitializer">
          <source>To pass information to the callback method, assign an array of strings to the <ph id="ph1">&lt;xref:System.AppDomainSetup.AppDomainInitializerArguments%2A&gt;</ph> property.</source>
          <target state="translated">Для передачи данных в метод обратного вызова, назначьте массив строк для <ph id="ph1">&lt;xref:System.AppDomainSetup.AppDomainInitializerArguments%2A&gt;</ph> свойства.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AppDomainSetup.AppDomainInitializer">
          <source>The array is passed to the callback method each time an <ph id="ph1">&lt;xref:System.AppDomain&gt;</ph> is initialized.</source>
          <target state="translated">Массив передается в метод обратного вызова при каждом <ph id="ph1">&lt;xref:System.AppDomain&gt;</ph> инициализируется.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AppDomainSetup.AppDomainInitializer">
          <source>The callback method is executed in the context of the newly created application domain.</source>
          <target state="translated">Метод обратного вызова выполняется в контексте вновь созданный домен приложения.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AppDomainSetup.AppDomainInitializer">
          <source>The following example creates a child application domain named <ph id="ph1">`ChildDomain`</ph>, using an <ph id="ph2">&lt;xref:System.AppDomainSetup&gt;</ph> object and evidence from the default application domain.</source>
          <target state="translated">В следующем примере создается дочернего домена приложения с именем <ph id="ph1">`ChildDomain`</ph>, с использованием <ph id="ph2">&lt;xref:System.AppDomainSetup&gt;</ph> объекта и свидетельства из домена приложения по умолчанию.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AppDomainSetup.AppDomainInitializer">
          <source>The <ph id="ph1">&lt;xref:System.AppDomainSetup.AppDomainInitializer%2A&gt;</ph> property is set to the callback method <ph id="ph2">`AppDomainInit`</ph>, which is invoked when the child domain is initialized.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.AppDomainSetup.AppDomainInitializer%2A&gt;</ph> Свойству метод обратного вызова <ph id="ph2">`AppDomainInit`</ph>, который вызывается при инициализации дочернего домена.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AppDomainSetup.AppDomainInitializer">
          <source>The arguments for the callback method are placed in an array of strings, which is assigned to the <ph id="ph1">&lt;xref:System.AppDomainSetup.AppDomainInitializerArguments%2A&gt;</ph> property.</source>
          <target state="translated">Аргументы для метода обратного вызова, помещаются в массив строк, который назначается <ph id="ph1">&lt;xref:System.AppDomainSetup.AppDomainInitializerArguments%2A&gt;</ph> свойство.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AppDomainSetup.AppDomainInitializer">
          <source>When the child domain is created, the callback method simply prints the strings.</source>
          <target state="translated">При создании дочернего домена метод обратного вызова просто выводит строки.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="P:System.AppDomainSetup.AppDomainInitializerArguments">
          <source>Gets or sets the arguments passed to the callback method represented by the <ph id="ph1">&lt;see cref="T:System.AppDomainInitializer" /&gt;</ph> delegate.</source>
          <target state="translated">Возвращает или задает аргументы, передаваемые методу обратного вызова, представленному делегатом <ph id="ph1">&lt;see cref="T:System.AppDomainInitializer" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="P:System.AppDomainSetup.AppDomainInitializerArguments">
          <source>The callback method is invoked when the application domain is initialized.</source>
          <target state="translated">Этот метод обратного вызова вызывается при инициализации домена приложения.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AppDomainSetup.AppDomainInitializerArguments">
          <source>An array of strings that is passed to the callback method represented by the <ph id="ph1">&lt;see cref="T:System.AppDomainInitializer" /&gt;</ph> delegate, when the callback method is invoked during <ph id="ph2">&lt;see cref="T:System.AppDomain" /&gt;</ph> initialization.</source>
          <target state="translated">Массив строк, передаваемый методу обратного вызова, представленному делегатом <ph id="ph1">&lt;see cref="T:System.AppDomainInitializer" /&gt;</ph>, когда метод обратного вызова вызывается при инициализации <ph id="ph2">&lt;see cref="T:System.AppDomain" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AppDomainSetup.AppDomainInitializerArguments">
          <source>Use the <ph id="ph1">&lt;xref:System.AppDomainSetup.AppDomainInitializer%2A&gt;</ph> property to specify a callback method that is invoked during <ph id="ph2">&lt;xref:System.AppDomain&gt;</ph> initialization.</source>
          <target state="translated">Используйте <ph id="ph1">&lt;xref:System.AppDomainSetup.AppDomainInitializer%2A&gt;</ph> свойство, чтобы указать метод обратного вызова, который вызывается во время <ph id="ph2">&lt;xref:System.AppDomain&gt;</ph> инициализации.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AppDomainSetup.AppDomainInitializerArguments">
          <source>If the <ph id="ph1">&lt;xref:System.AppDomainSetup.AppDomainInitializer%2A&gt;</ph> property is not set, the array assigned to this property is not used.</source>
          <target state="translated">Если <ph id="ph1">&lt;xref:System.AppDomainSetup.AppDomainInitializer%2A&gt;</ph> свойство не задано, массив, назначенный этому свойству не используется.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AppDomainSetup.AppDomainInitializerArguments">
          <source>The callback method is executed in the context of the newly created application domain.</source>
          <target state="translated">Метод обратного вызова выполняется в контексте вновь созданный домен приложения.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AppDomainSetup.AppDomainInitializerArguments">
          <source>The following code example creates a child application domain named <ph id="ph1">`ChildDomain`</ph>, using an <ph id="ph2">&lt;xref:System.AppDomainSetup&gt;</ph> object and evidence from the default application domain.</source>
          <target state="translated">В следующем примере кода создается дочернего домена приложения с именем <ph id="ph1">`ChildDomain`</ph>, с использованием <ph id="ph2">&lt;xref:System.AppDomainSetup&gt;</ph> объекта и свидетельства из домена приложения по умолчанию.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AppDomainSetup.AppDomainInitializerArguments">
          <source>The <ph id="ph1">&lt;xref:System.AppDomainSetup.AppDomainInitializer%2A&gt;</ph> property is set to the callback method <ph id="ph2">`AppDomainInit`</ph>, which is invoked when the child domain is initialized.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.AppDomainSetup.AppDomainInitializer%2A&gt;</ph> Свойству метод обратного вызова <ph id="ph2">`AppDomainInit`</ph>, который вызывается при инициализации дочернего домена.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AppDomainSetup.AppDomainInitializerArguments">
          <source>The arguments for the callback method are placed in an array of strings, which is assigned to the <ph id="ph1">&lt;xref:System.AppDomainSetup.AppDomainInitializerArguments%2A&gt;</ph> property.</source>
          <target state="translated">Аргументы для метода обратного вызова, помещаются в массив строк, который назначается <ph id="ph1">&lt;xref:System.AppDomainSetup.AppDomainInitializerArguments%2A&gt;</ph> свойство.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AppDomainSetup.AppDomainInitializerArguments">
          <source>When the child domain is created, the callback method simply prints the strings.</source>
          <target state="translated">При создании дочернего домена метод обратного вызова просто выводит строки.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="P:System.AppDomainSetup.AppDomainManagerAssembly">
          <source>Gets or sets the display name of the assembly that provides the type of the application domain manager for application domains created using this <ph id="ph1">&lt;see cref="T:System.AppDomainSetup" /&gt;</ph> object.</source>
          <target state="translated">Возвращает или задает отображаемое имя сборки, предоставляющей тип диспетчера доменов приложений для доменов приложений, созданных с помощью объекта <ph id="ph1">&lt;see cref="T:System.AppDomainSetup" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AppDomainSetup.AppDomainManagerAssembly">
          <source>The display name of the assembly that provides the <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of the application domain manager.</source>
          <target state="translated">Отображаемое имя сборки, предоставляющей <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> диспетчера доменов приложений.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AppDomainSetup.AppDomainManagerAssembly">
          <source>To specify the type of the application domain manager, set both this property and the <ph id="ph1">&lt;xref:System.AppDomainSetup.AppDomainManagerType%2A&gt;</ph> property.</source>
          <target state="translated">Чтобы задать тип диспетчера домена приложения, необходимо установить и данное свойство и <ph id="ph1">&lt;xref:System.AppDomainSetup.AppDomainManagerType%2A&gt;</ph> свойства.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AppDomainSetup.AppDomainManagerAssembly">
          <source>If either of these properties is not set, the other is ignored.</source>
          <target state="translated">Если любое из этих свойств не задано, другое обрабатывается.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AppDomainSetup.AppDomainManagerAssembly">
          <source>If no type is provided, the application domain manager is created from the same type as the parent application domain (that is, the application domain from which the <ph id="ph1">&lt;xref:System.AppDomain.CreateDomain%2A?displayProperty=nameWithType&gt;</ph> method is called).</source>
          <target state="translated">Если тип не указан, диспетчер домена приложения создается из того же типа как родительский домен приложения (то есть домен приложения, из которого <ph id="ph1">&lt;xref:System.AppDomain.CreateDomain%2A?displayProperty=nameWithType&gt;</ph> вызывается метод).</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AppDomainSetup.AppDomainManagerAssembly">
          <source>When the application domain is loaded, <ph id="ph1">&lt;xref:System.TypeLoadException&gt;</ph> is thrown if the assembly does not exist, or if the assembly does not contain the type specified by the <ph id="ph2">&lt;xref:System.AppDomainSetup.AppDomainManagerType%2A&gt;</ph> property.</source>
          <target state="translated">При загрузке домена приложения <ph id="ph1">&lt;xref:System.TypeLoadException&gt;</ph> возникает, если сборка не существует или не содержит тип, заданный параметром <ph id="ph2">&lt;xref:System.AppDomainSetup.AppDomainManagerType%2A&gt;</ph> свойство.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AppDomainSetup.AppDomainManagerAssembly">
          <source><ph id="ph1">&lt;xref:System.IO.FileLoadException&gt;</ph> is thrown if the assembly is found but the version information does not match.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.FileLoadException&gt;</ph> возникает, если сборка найдена, но не соответствует сведения о версии.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AppDomainSetup.AppDomainManagerAssembly">
          <source>To set the application domain manager for the default application domain, use the <bpt id="p1">[</bpt><ph id="ph1">\&lt;</ph>appDomainManagerAssembly&gt;<ept id="p1">](~/docs/framework/configure-apps/file-schema/runtime/appdomainmanagerassembly-element.md)</ept> and <bpt id="p2">[</bpt><ph id="ph2">\&lt;</ph>appDomainManagerType&gt;<ept id="p2">](~/docs/framework/configure-apps/file-schema/runtime/appdomainmanagertype-element.md)</ept> elements in the <bpt id="p3">[</bpt><ph id="ph3">\&lt;</ph>runtime&gt;<ept id="p3">](~/docs/framework/configure-apps/file-schema/runtime/runtime-element.md)</ept> section of the application configuration file, or use the environment variables described in <ph id="ph4">&lt;xref:System.AppDomainManager&gt;</ph>.</source>
          <target state="translated">Чтобы установить диспетчер домена приложения для домена приложения по умолчанию, используйте <bpt id="p1">[</bpt> <ph id="ph1">\&lt;</ph>appDomainManagerAssembly &gt;<ept id="p1">](~/docs/framework/configure-apps/file-schema/runtime/appdomainmanagerassembly-element.md)</ept> и <bpt id="p2">[</bpt> <ph id="ph2">\&lt;</ph>appDomainManagerType &gt;<ept id="p2">](~/docs/framework/configure-apps/file-schema/runtime/appdomainmanagertype-element.md)</ept> элементов в <bpt id="p3">[</bpt> <ph id="ph3">\&lt;</ph>среды выполнения &gt;<ept id="p3">](~/docs/framework/configure-apps/file-schema/runtime/runtime-element.md)</ept> раздел файла конфигурации приложения или используйте переменные среды, описанные в <ph id="ph4">&lt;xref:System.AppDomainManager&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AppDomainSetup.AppDomainManagerAssembly">
          <source>This feature requires the application to have full trust.</source>
          <target state="translated">Этот компонент требуется приложение полного доверия.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AppDomainSetup.AppDomainManagerAssembly">
          <source>(For example, an application running on the desktop has full trust.) If the application does not have full trust, a <ph id="ph1">&lt;xref:System.TypeLoadException&gt;</ph> is thrown.</source>
          <target state="translated">(Например, приложения, работающего на рабочем столе имеет полное доверие). Если приложение не имеет полного доверия <ph id="ph1">&lt;xref:System.TypeLoadException&gt;</ph> возникает исключение.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AppDomainSetup.AppDomainManagerAssembly">
          <source>The format of the assembly display name is given by the <ph id="ph1">&lt;xref:System.Reflection.Assembly.FullName%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">Формат выводимого имени сборки задано параметром <ph id="ph1">&lt;xref:System.Reflection.Assembly.FullName%2A?displayProperty=nameWithType&gt;</ph> свойство.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="P:System.AppDomainSetup.AppDomainManagerType">
          <source>Gets or sets the full name of the type that provides the application domain manager for application domains created using this <ph id="ph1">&lt;see cref="T:System.AppDomainSetup" /&gt;</ph> object.</source>
          <target state="translated">Получает или задает полное имя типа, содержащего диспетчер доменов приложений для доменов приложений, созданных с помощью данного объекта <ph id="ph1">&lt;see cref="T:System.AppDomainSetup" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AppDomainSetup.AppDomainManagerType">
          <source>The full name of the type, including the namespace.</source>
          <target state="translated">Полное имя типа, включая пространство имен.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AppDomainSetup.AppDomainManagerType">
          <source>To specify the type of the application domain manager, set both this property and the <ph id="ph1">&lt;xref:System.AppDomainSetup.AppDomainManagerAssembly%2A&gt;</ph> property.</source>
          <target state="translated">Чтобы задать тип диспетчера домена приложения, необходимо установить и данное свойство и <ph id="ph1">&lt;xref:System.AppDomainSetup.AppDomainManagerAssembly%2A&gt;</ph> свойства.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AppDomainSetup.AppDomainManagerType">
          <source>If either of these properties is not set, the other is ignored.</source>
          <target state="translated">Если любое из этих свойств не задано, другое обрабатывается.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AppDomainSetup.AppDomainManagerType">
          <source>If no type is provided, the application domain manager is created from the same type as the parent application domain (that is, the application domain from which the <ph id="ph1">&lt;xref:System.AppDomain.CreateDomain%2A?displayProperty=nameWithType&gt;</ph> method is called).</source>
          <target state="translated">Если тип не указан, диспетчер домена приложения создается из того же типа как родительский домен приложения (то есть домен приложения, из которого <ph id="ph1">&lt;xref:System.AppDomain.CreateDomain%2A?displayProperty=nameWithType&gt;</ph> вызывается метод).</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AppDomainSetup.AppDomainManagerType">
          <source>When the application domain is loaded, <ph id="ph1">&lt;xref:System.TypeLoadException&gt;</ph> is thrown if the assembly specified by the <ph id="ph2">&lt;xref:System.AppDomainSetup.AppDomainManagerAssembly%2A&gt;</ph> property does not contain the type specified by this property.</source>
          <target state="translated">При загрузке домена приложения <ph id="ph1">&lt;xref:System.TypeLoadException&gt;</ph> выдается, если сборка, заданная <ph id="ph2">&lt;xref:System.AppDomainSetup.AppDomainManagerAssembly%2A&gt;</ph> свойства не содержит тип, заданный этим свойством.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AppDomainSetup.AppDomainManagerType">
          <source>To set the application domain manager for the default application domain, use the <bpt id="p1">[</bpt><ph id="ph1">\&lt;</ph>appDomainManagerAssembly&gt;<ept id="p1">](~/docs/framework/configure-apps/file-schema/runtime/appdomainmanagerassembly-element.md)</ept> and <bpt id="p2">[</bpt><ph id="ph2">\&lt;</ph>appDomainManagerType&gt;<ept id="p2">](~/docs/framework/configure-apps/file-schema/runtime/appdomainmanagertype-element.md)</ept> elements in the <bpt id="p3">[</bpt><ph id="ph3">\&lt;</ph>runtime&gt;<ept id="p3">](~/docs/framework/configure-apps/file-schema/runtime/runtime-element.md)</ept> section of the application configuration file, or use the environment variables described in <ph id="ph4">&lt;xref:System.AppDomainManager&gt;</ph>.</source>
          <target state="translated">Чтобы установить диспетчер домена приложения для домена приложения по умолчанию, используйте <bpt id="p1">[</bpt> <ph id="ph1">\&lt;</ph>appDomainManagerAssembly &gt;<ept id="p1">](~/docs/framework/configure-apps/file-schema/runtime/appdomainmanagerassembly-element.md)</ept> и <bpt id="p2">[</bpt> <ph id="ph2">\&lt;</ph>appDomainManagerType &gt;<ept id="p2">](~/docs/framework/configure-apps/file-schema/runtime/appdomainmanagertype-element.md)</ept> элементов в <bpt id="p3">[</bpt> <ph id="ph3">\&lt;</ph>среды выполнения &gt;<ept id="p3">](~/docs/framework/configure-apps/file-schema/runtime/runtime-element.md)</ept> раздел файла конфигурации приложения или используйте переменные среды, описанные в <ph id="ph4">&lt;xref:System.AppDomainManager&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AppDomainSetup.AppDomainManagerType">
          <source>This feature requires the application to have full trust.</source>
          <target state="translated">Этот компонент требуется приложение полного доверия.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AppDomainSetup.AppDomainManagerType">
          <source>(For example, an application running on the desktop has full trust.) If the application does not have full trust, a <ph id="ph1">&lt;xref:System.TypeLoadException&gt;</ph> is thrown.</source>
          <target state="translated">(Например, приложения, работающего на рабочем столе имеет полное доверие). Если приложение не имеет полного доверия <ph id="ph1">&lt;xref:System.TypeLoadException&gt;</ph> возникает исключение.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AppDomainSetup.AppDomainManagerType">
          <source>The format of the full name of a type is given by the <ph id="ph1">&lt;xref:System.Type.FullName%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">Задается формат полного имени типа <ph id="ph1">&lt;xref:System.Type.FullName%2A?displayProperty=nameWithType&gt;</ph> свойство.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="P:System.AppDomainSetup.ApplicationBase">
          <source>Gets or sets the name of the directory containing the application.</source>
          <target state="translated">Возвращает или задает имя каталога, содержащего приложение.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AppDomainSetup.ApplicationBase">
          <source>The name of the application base directory.</source>
          <target state="translated">Имя базовой папки приложения.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AppDomainSetup.ApplicationBase">
          <source>The application base directory is where the assembly manager begins probing for assemblies.</source>
          <target state="translated">Базовая папка приложения — где диспетчер сборок начинает поиск сборок.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AppDomainSetup.ApplicationBase">
          <source>The <ph id="ph1">&lt;xref:System.AppDomainSetup.ApplicationBase%2A&gt;</ph> property can influence which permissions are granted to an application domain.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.AppDomainSetup.ApplicationBase%2A&gt;</ph> Свойство может влиять на разрешения, которые предоставляются для домена приложения.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AppDomainSetup.ApplicationBase">
          <source>For example, an application domain originating from the local computer normally receives full trust based on its location of origin.</source>
          <target state="translated">Например домен приложения, рассчитанные на локальном компьютере, обычно получает полное доверие, основанное на его исходном размещении.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AppDomainSetup.ApplicationBase">
          <source>However, if the <ph id="ph1">&lt;xref:System.AppDomainSetup.ApplicationBase%2A&gt;</ph> property of that <ph id="ph2">&lt;xref:System.AppDomain&gt;</ph> is set to the full name of an intranet directory, the <ph id="ph3">&lt;xref:System.AppDomainSetup.ApplicationBase%2A&gt;</ph> setting restricts the permissions granted to the application domain to a LocalIntranet grant even though the application domain actually originates from the local computer.</source>
          <target state="translated">Однако если <ph id="ph1">&lt;xref:System.AppDomainSetup.ApplicationBase%2A&gt;</ph> , свойство <ph id="ph2">&lt;xref:System.AppDomain&gt;</ph> присвоено полное имя в интрасети каталог <ph id="ph3">&lt;xref:System.AppDomainSetup.ApplicationBase%2A&gt;</ph> параметр ограничивает разрешения, предоставленные в домен приложения до LocalIntranet, даже если домен приложения действительно исходит от локального компьютера.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AppDomainSetup.ApplicationBase">
          <source>The following example demonstrates how to use the <ph id="ph1">&lt;xref:System.AppDomainSetup.ApplicationBase%2A&gt;</ph> property to set the location where the assembly loader begins probing for assemblies to load into a new application domain.</source>
          <target state="translated">В следующем примере демонстрируется использование <ph id="ph1">&lt;xref:System.AppDomainSetup.ApplicationBase%2A&gt;</ph> свойство для задания местоположения, где загрузчик сборок начинает поиск сборок для загрузки в новый домен приложения.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AppDomainSetup.ApplicationBase">
          <source>You must ensure that the folder you specify exists.</source>
          <target state="translated">Необходимо убедиться, что папка существует.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AppDomainSetup.ApplicationBase">
          <source>for access to the path information.</source>
          <target state="translated">для доступа к информации о пути.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AppDomainSetup.ApplicationBase">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /&gt;</ph></source>
          <target state="translated">Связанное перечисление: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="P:System.AppDomainSetup.ApplicationName">
          <source>Gets or sets the name of the application.</source>
          <target state="translated">Возвращает или задает имя приложения.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AppDomainSetup.ApplicationName">
          <source>The name of the application.</source>
          <target state="translated">Имя приложения.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AppDomainSetup.ApplicationName">
          <source>The following example shows how to set the <ph id="ph1">&lt;xref:System.AppDomainSetup.ApplicationName%2A&gt;</ph> property when you create a new application domain.</source>
          <target state="translated">Следующий пример показывает, как задать <ph id="ph1">&lt;xref:System.AppDomainSetup.ApplicationName%2A&gt;</ph> свойства при создании нового домена приложения.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AppDomainSetup.ApplicationName">
          <source>The example creates a new application domain, and then calls the <ph id="ph1">&lt;xref:System.AppDomain.CreateInstanceAndUnwrap%2A?displayProperty=nameWithType&gt;</ph> method to load the example assembly into the new application domain and create an instance of the <ph id="ph2">`Worker`</ph> class.</source>
          <target state="translated">В примере создается новый домен приложения и затем вызывает метод <ph id="ph1">&lt;xref:System.AppDomain.CreateInstanceAndUnwrap%2A?displayProperty=nameWithType&gt;</ph> метод, чтобы загрузить пример сборку в домене приложения и создать экземпляр <ph id="ph2">`Worker`</ph> класса.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AppDomainSetup.ApplicationName">
          <source>The <ph id="ph1">`Worker`</ph> class inherits <ph id="ph2">&lt;xref:System.MarshalByRefObject&gt;</ph>, so the example can use the proxy returned by <ph id="ph3">&lt;xref:System.AppDomain.CreateInstanceAndUnwrap%2A&gt;</ph> to call the <ph id="ph4">`TestLoad`</ph> method.</source>
          <target state="translated"><ph id="ph1">`Worker`</ph> Класс наследует <ph id="ph2">&lt;xref:System.MarshalByRefObject&gt;</ph>, поэтому можно использовать, например прокси-сервера, возвращенный <ph id="ph3">&lt;xref:System.AppDomain.CreateInstanceAndUnwrap%2A&gt;</ph> для вызова <ph id="ph4">`TestLoad`</ph> метод.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AppDomainSetup.ApplicationName">
          <source>The <ph id="ph1">`TestLoad`</ph> method loads an assembly that you specify.</source>
          <target state="translated"><ph id="ph1">`TestLoad`</ph> Метод загружает из указанной сборки.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AppDomainSetup.ApplicationName">
          <source>You must either specify a valid, fully qualified assembly name, or comment out the <ph id="ph1">&lt;xref:System.Reflection.Assembly.Load%28System.String%29&gt;</ph> method.</source>
          <target state="translated">Необходимо задать имя допустимым, полное имя сборки, или закомментируйте <ph id="ph1">&lt;xref:System.Reflection.Assembly.Load%28System.String%29&gt;</ph> метод.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AppDomainSetup.ApplicationName">
          <source>The <ph id="ph1">`TestLoad`</ph> method lists the assemblies that are loaded into the new application domain, showing that your specified assembly and the example assembly are loaded.</source>
          <target state="translated"><ph id="ph1">`TestLoad`</ph> Метод перечислены сборкам, загружаемым в новый домен приложения, показывающая загрузку указанной сборки и сборка примера.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AppDomainSetup.ApplicationName">
          <source>The example uses the <ph id="ph1">&lt;xref:System.LoaderOptimizationAttribute&gt;</ph> attribute to tell the assembly loader how the application will share code across application domains.</source>
          <target state="translated">В этом примере <ph id="ph1">&lt;xref:System.LoaderOptimizationAttribute&gt;</ph> атрибут, чтобы сообщить загрузчику сборок, как приложение будет совместное использование кода между доменами приложений.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="P:System.AppDomainSetup.ApplicationTrust">
          <source>Gets or sets an object containing security and trust information.</source>
          <target state="translated">Возвращает или задает объект, содержащий сведения о безопасности и доверии.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AppDomainSetup.ApplicationTrust">
          <source>An object that contains security and trust information.</source>
          <target state="translated">Объект, содержащий сведения о безопасности и доверии.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AppDomainSetup.ApplicationTrust">
          <source>This property is <ph id="ph1">`null`</ph> when the <ph id="ph2">&lt;xref:System.AppDomainSetup&gt;</ph> is created.</source>
          <target state="translated">Это свойство является <ph id="ph1">`null`</ph> при <ph id="ph2">&lt;xref:System.AppDomainSetup&gt;</ph> создается.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AppDomainSetup.ApplicationTrust">
          <source>Once changed, it cannot be reset to a null reference.</source>
          <target state="translated">После изменения его невозможно сбросить на указатель null.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="P:System.AppDomainSetup.ApplicationTrust">
          <source>The property is set to an <ph id="ph1">&lt;see cref="T:System.Security.Policy.ApplicationTrust" /&gt;</ph> object whose application identity does not match the application identity of the <ph id="ph2">&lt;see cref="T:System.Runtime.Hosting.ActivationArguments" /&gt;</ph> object returned by the <ph id="ph3">&lt;see cref="P:System.AppDomainSetup.ActivationArguments" /&gt;</ph> property.</source>
          <target state="translated">Свойство имеет значение объекта <ph id="ph1">&lt;see cref="T:System.Security.Policy.ApplicationTrust" /&gt;</ph>, удостоверение приложения которого не соответствует удостоверению приложения объекта <ph id="ph2">&lt;see cref="T:System.Runtime.Hosting.ActivationArguments" /&gt;</ph>, возвращенного свойством <ph id="ph3">&lt;see cref="P:System.AppDomainSetup.ActivationArguments" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="P:System.AppDomainSetup.ApplicationTrust">
          <source>No exception is thrown if the <ph id="ph1">&lt;see cref="P:System.AppDomainSetup.ActivationArguments" /&gt;</ph> property is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Если свойство <ph id="ph1">&lt;see cref="P:System.AppDomainSetup.ActivationArguments" /&gt;</ph> имеет значение <ph id="ph2">&lt;see langword="null" /&gt;</ph>, исключение не вызывается.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="P:System.AppDomainSetup.ApplicationTrust">
          <source>The property is set to <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Для свойства задано значение <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="P:System.AppDomainSetup.CachePath">
          <source>Gets or sets the name of an area specific to the application where files are shadow copied.</source>
          <target state="translated">Возвращает или задает имя области, определенной для приложения, где создаются теневые копии файлов.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AppDomainSetup.CachePath">
          <source>The fully qualified name of the directory path and file name where files are shadow copied.</source>
          <target state="translated">Полный путь к каталогу и полное имя файла, соответствующие создаваемой теневой копии.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AppDomainSetup.CachePath">
          <source>In order for this property to have an effect, the <ph id="ph1">&lt;xref:System.AppDomainSetup.ApplicationName%2A&gt;</ph> property must also be set.</source>
          <target state="translated">Чтобы это свойство вступил в силу <ph id="ph1">&lt;xref:System.AppDomainSetup.ApplicationName%2A&gt;</ph> необходимо задать свойство.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AppDomainSetup.CachePath">
          <source>If the <ph id="ph1">&lt;xref:System.AppDomainSetup.ApplicationName%2A&gt;</ph> property is not set, the <ph id="ph2">&lt;xref:System.AppDomainSetup.CachePath%2A&gt;</ph> property is ignored and the shadow copy cache location defaults to the download cache.</source>
          <target state="translated">Если <ph id="ph1">&lt;xref:System.AppDomainSetup.ApplicationName%2A&gt;</ph> свойство не задано, <ph id="ph2">&lt;xref:System.AppDomainSetup.CachePath%2A&gt;</ph> игнорируется и расположению теневых копий кэша по умолчанию используется кэш загрузки.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AppDomainSetup.CachePath">
          <source>For more information on shadow copying, see <bpt id="p1">[</bpt>Shadow Copying Assemblies<ept id="p1">](~/docs/framework/app-domains/shadow-copy-assemblies.md)</ept>.</source>
          <target state="translated">Дополнительные сведения о теневом копировании см. в разделе <bpt id="p1">[</bpt>теневое копирование сборок<ept id="p1">](~/docs/framework/app-domains/shadow-copy-assemblies.md)</ept>.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AppDomainSetup.CachePath">
          <source>for access to the path information.</source>
          <target state="translated">для доступа к информации о пути.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AppDomainSetup.CachePath">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /&gt;</ph></source>
          <target state="translated">Связанное перечисление: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="P:System.AppDomainSetup.ConfigurationFile">
          <source>Gets or sets the name of the configuration file for an application domain.</source>
          <target state="translated">Возвращает или задает имя файла конфигурации для домена приложения.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AppDomainSetup.ConfigurationFile">
          <source>The name of the configuration file.</source>
          <target state="translated">Имя файла конфигурации.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AppDomainSetup.ConfigurationFile">
          <source>The configuration file describes the search rules and configuration data for the application domain.</source>
          <target state="translated">В файле конфигурации описываются правила поиска и данные конфигурации для домена приложения.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AppDomainSetup.ConfigurationFile">
          <source>The host that creates the application domain is responsible for supplying this data because the meaningful values vary from situation to situation.</source>
          <target state="translated">Сервер, который создает домен приложения отвечает за предоставление этих данных, так как значения изменяются от ситуации.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AppDomainSetup.ConfigurationFile">
          <source>For example, the configuration data for ASP.NET applications is stored for each application, site, and computer, while the configuration data for an executable is stored for each application, user, and computer.</source>
          <target state="translated">Например данные конфигурации для приложений ASP.NET хранятся для каждого приложения, узла или компьютера, а хранятся данные конфигурации для исполняемого файла для каждого приложения, пользователя и компьютера.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AppDomainSetup.ConfigurationFile">
          <source>Only the host knows the specifics of the configuration data for a particular circumstance.</source>
          <target state="translated">Только у узла есть особенности данные конфигурации для конкретного случая.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AppDomainSetup.ConfigurationFile">
          <source>for access to the path information.</source>
          <target state="translated">для доступа к информации о пути.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AppDomainSetup.ConfigurationFile">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /&gt;</ph></source>
          <target state="translated">Связанное перечисление: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="P:System.AppDomainSetup.DisallowApplicationBaseProbing">
          <source>Specifies whether the application base path and private binary path are probed when searching for assemblies to load.</source>
          <target state="translated">Указывает, выполняется ли поиск загружаемых сборок в базовой папке приложения и папке приватных двоичных файлов.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AppDomainSetup.DisallowApplicationBaseProbing">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if probing is not allowed; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Значение <ph id="ph1">&lt;see langword="true" /&gt;</ph>, если проверка не разрешена. В противном случае — значение <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AppDomainSetup.DisallowApplicationBaseProbing">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Значение по умолчанию: <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AppDomainSetup.DisallowApplicationBaseProbing">
          <source>If the <ph id="ph1">&lt;xref:System.AppDomainSetup.DisallowApplicationBaseProbing%2A&gt;</ph> property is <ph id="ph2">`true`</ph>, the value of the <ph id="ph3">&lt;xref:System.AppDomainSetup.ApplicationBase%2A&gt;</ph> property is ignored.</source>
          <target state="translated">Если <ph id="ph1">&lt;xref:System.AppDomainSetup.DisallowApplicationBaseProbing%2A&gt;</ph> свойство <ph id="ph2">`true`</ph>, значение <ph id="ph3">&lt;xref:System.AppDomainSetup.ApplicationBase%2A&gt;</ph> свойство игнорируется.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AppDomainSetup.DisallowApplicationBaseProbing">
          <source>That is, no assemblies are probed for in the directories specified by the <ph id="ph1">&lt;xref:System.AppDomainSetup.ApplicationBase%2A&gt;</ph> property.</source>
          <target state="translated">То есть сборки не проверяются для в каталогах, указанных в <ph id="ph1">&lt;xref:System.AppDomainSetup.ApplicationBase%2A&gt;</ph> свойство.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AppDomainSetup.DisallowApplicationBaseProbing">
          <source>In addition, the values of the <ph id="ph1">&lt;xref:System.AppDomainSetup.PrivateBinPath%2A&gt;</ph> property and the <ph id="ph2">&lt;xref:System.AppDomainSetup.PrivateBinPathProbe%2A&gt;</ph> property are ignored.</source>
          <target state="translated">Кроме того, значения <ph id="ph1">&lt;xref:System.AppDomainSetup.PrivateBinPath%2A&gt;</ph> свойство и <ph id="ph2">&lt;xref:System.AppDomainSetup.PrivateBinPathProbe%2A&gt;</ph> свойства игнорируются.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AppDomainSetup.DisallowApplicationBaseProbing">
          <source>No assemblies are probed for in the directories specified by the <ph id="ph1">&lt;xref:System.AppDomainSetup.PrivateBinPath%2A&gt;</ph> property.</source>
          <target state="translated">Сборки не проверяются для в каталогах, указанных в <ph id="ph1">&lt;xref:System.AppDomainSetup.PrivateBinPath%2A&gt;</ph> свойство.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AppDomainSetup.DisallowApplicationBaseProbing">
          <source>The <ph id="ph1">&lt;xref:System.AppDomainSetup.DisallowApplicationBaseProbing%2A&gt;</ph> property provides an additional layer of control over the loading process.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.AppDomainSetup.DisallowApplicationBaseProbing%2A&gt;</ph> Свойство обеспечивает дополнительный уровень контроля над процесс загрузки.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AppDomainSetup.DisallowApplicationBaseProbing">
          <source>In the normal assembly loading sequence, the application base is probed before the <ph id="ph1">&lt;xref:System.AppDomain.AssemblyResolve?displayProperty=nameWithType&gt;</ph> event is raised.</source>
          <target state="translated">Загрузка последовательность обычных сборки, базовая папка приложения проверяется перед <ph id="ph1">&lt;xref:System.AppDomain.AssemblyResolve?displayProperty=nameWithType&gt;</ph> события.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AppDomainSetup.DisallowApplicationBaseProbing">
          <source>However, some applications might need to load assemblies from an OLE compound file within a document, or from a unique known location that is neither in the global assembly cache nor in the directories specified by the <ph id="ph1">&lt;xref:System.AppDomainSetup.ApplicationBase%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.AppDomainSetup.PrivateBinPath%2A&gt;</ph> properties.</source>
          <target state="translated">Однако для некоторых приложений может потребоваться загрузить сборки с составным файлом OLE в документе или находятся в разных местах известных, ни в глобальном кэше сборок, так и в каталогах, указанных в <ph id="ph1">&lt;xref:System.AppDomainSetup.ApplicationBase%2A&gt;</ph> и <ph id="ph2">&lt;xref:System.AppDomainSetup.PrivateBinPath%2A&gt;</ph> свойства.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AppDomainSetup.DisallowApplicationBaseProbing">
          <source>Such applications can use the <ph id="ph1">&lt;xref:System.AppDomainSetup.DisallowApplicationBaseProbing%2A&gt;</ph> property to avoid the delay caused by normal probing, and to avoid loading copies of the necessary assembly that might be located in the normal probing paths.</source>
          <target state="translated">Такие приложения могут использовать <ph id="ph1">&lt;xref:System.AppDomainSetup.DisallowApplicationBaseProbing%2A&gt;</ph> свойство избежать задержки, вызванной обычной проверки и загрузки копий необходимой сборки, которые могут быть расположены в обычно осуществляется поиск.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="P:System.AppDomainSetup.DisallowBindingRedirects">
          <source>Gets or sets a value that indicates whether an application domain allows assembly binding redirection.</source>
          <target state="translated">Возвращает или задает значение, определяющее, допускает ли домен приложения перенаправление привязки сборок.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AppDomainSetup.DisallowBindingRedirects">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if redirection of assemblies is not allowed; <ph id="ph2">&lt;see langword="false" /&gt;</ph> if it is allowed.</source>
          <target state="translated">Значение <ph id="ph1">&lt;see langword="true" /&gt;</ph>, если перенаправление сборок запрещено; значение <ph id="ph2">&lt;see langword="false" /&gt;</ph>, если оно разрешено.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AppDomainSetup.DisallowBindingRedirects">
          <source>The <ph id="ph1">&lt;xref:System.AppDomainSetup.DisallowBindingRedirects%2A&gt;</ph> property is designed to be used by services and server applications where assembly binding redirection is not part of the application scenario.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.AppDomainSetup.DisallowBindingRedirects%2A&gt;</ph> Свойство предназначено для использования службами и приложениями серверов, в которых перенаправление привязки сборок не является частью сценария приложения.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="P:System.AppDomainSetup.DisallowCodeDownload">
          <source>Gets or sets a value that indicates whether HTTP download of assemblies is allowed for an application domain.</source>
          <target state="translated">Возвращает или задает значение, указывающее, разрешена ли загрузка сборок для этого домена приложения по протоколу HTTP.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AppDomainSetup.DisallowCodeDownload">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if HTTP download of assemblies is not allowed; <ph id="ph2">&lt;see langword="false" /&gt;</ph> if it is allowed.</source>
          <target state="translated">Значение <ph id="ph1">&lt;see langword="true" /&gt;</ph>, если загрузка сборок по протоколу HTTP запрещена; значение <ph id="ph2">&lt;see langword="false" /&gt;</ph>, если она разрешена.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AppDomainSetup.DisallowCodeDownload">
          <source>The <ph id="ph1">&lt;xref:System.AppDomainSetup.DisallowCodeDownload%2A&gt;</ph> property is designed to be used by services and server applications where downloading code from an intranet or the Internet is not part of the application scenario.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.AppDomainSetup.DisallowCodeDownload%2A&gt;</ph> Свойство предназначено для использования службами и приложениями серверов, в которых загрузка кода из интрасети или Интернета не является частью сценария приложения.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AppDomainSetup.DisallowCodeDownload">
          <source>The default value for the <ph id="ph1">&lt;xref:System.AppDomainSetup.DisallowCodeDownload%2A&gt;</ph> property is <ph id="ph2">`false`</ph>.</source>
          <target state="translated">Значение по умолчанию для <ph id="ph1">&lt;xref:System.AppDomainSetup.DisallowCodeDownload%2A&gt;</ph> свойство <ph id="ph2">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AppDomainSetup.DisallowCodeDownload">
          <source>This setting is unsafe for services.</source>
          <target state="translated">Этот параметр является безопасной для служб.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AppDomainSetup.DisallowCodeDownload">
          <source>To help prevent services from downloading partially trusted code, set this property to <ph id="ph1">`true`</ph>.</source>
          <target state="translated">Чтобы предотвратить службы загрузку частично доверенным кодом, присвойте этому свойству значение <ph id="ph1">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="P:System.AppDomainSetup.DisallowPublisherPolicy">
          <source>Gets or sets a value that indicates whether the <bpt id="p1">[</bpt><ph id="ph1">&amp;lt;</ph>publisherPolicy<ph id="ph2">&amp;gt;</ph><ept id="p1">](~/docs/framework/configure-apps/file-schema/runtime/publisherpolicy-element.md)</ept> section of the configuration file is applied to an application domain.</source>
          <target state="translated">Возвращает или задает значение, указывающее, применяется ли к домену приложения раздел <bpt id="p1">[</bpt><ph id="ph1">&amp;lt;</ph>publisherPolicy<ph id="ph2">&amp;gt;</ph><ept id="p1">](~/docs/framework/configure-apps/file-schema/runtime/publisherpolicy-element.md)</ept> файла конфигурации.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AppDomainSetup.DisallowPublisherPolicy">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see langword="&amp;lt;publisherPolicy&amp;gt;" /&gt;</ph> section of the configuration file for an application domain is ignored; <ph id="ph3">&lt;see langword="false" /&gt;</ph> if the declared publisher policy is honored.</source>
          <target state="translated">Значение <ph id="ph1">&lt;see langword="true" /&gt;</ph>, если раздел <ph id="ph2">&lt;see langword="&amp;lt;publisherPolicy&amp;gt;" /&gt;</ph> файла конфигурации для домена приложения игнорируется; значение <ph id="ph3">&lt;see langword="false" /&gt;</ph>, если применяется объявленная политика издателя.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AppDomainSetup.DisallowPublisherPolicy">
          <source>The <ph id="ph1">&lt;xref:System.AppDomainSetup.DisallowPublisherPolicy%2A&gt;</ph> property specifically applies to a Web application that is loaded locally.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.AppDomainSetup.DisallowPublisherPolicy%2A&gt;</ph> Свойство применяемом веб-приложению, которое загружается локально.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AppDomainSetup.DisallowPublisherPolicy">
          <source>Use this property to help prevent a malicious attempt to execute an unsafe Web application in safe mode.</source>
          <target state="translated">Это свойство можно используйте для предотвращения вредоносных попыток выполнить небезопасное веб-приложение в безопасном режиме.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AppDomainSetup.DisallowPublisherPolicy">
          <source>For more information about bypassing publisher policy, see the <bpt id="p1">[</bpt>Redirecting Assembly Versions<ept id="p1">](~/docs/framework/configure-apps/redirect-assembly-versions.md)</ept> topic.</source>
          <target state="translated">Дополнительные сведения о возможностях обойти политику издателя см. в разделе <bpt id="p1">[</bpt>Перенаправление версий сборок<ept id="p1">](~/docs/framework/configure-apps/redirect-assembly-versions.md)</ept> раздела.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AppDomainSetup.DisallowPublisherPolicy">
          <source>For more information about safe mode, see the "Examining the Configuration Files" section of the <bpt id="p1">[</bpt>How the Runtime Locates Assemblies<ept id="p1">](~/docs/framework/deployment/how-the-runtime-locates-assemblies.md)</ept> topic.</source>
          <target state="translated">Дополнительные сведения о безопасном режиме см. в разделе «Проверка файлов конфигурации» из <bpt id="p1">[</bpt>как среда выполнения находит сборки<ept id="p1">](~/docs/framework/deployment/how-the-runtime-locates-assemblies.md)</ept> раздела.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="P:System.AppDomainSetup.DynamicBase">
          <source>Gets or sets the base directory where the directory for dynamically generated files is located.</source>
          <target state="translated">Возвращает или задает базовую папку, в которой находится папка для динамически создаваемых файлов.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AppDomainSetup.DynamicBase">
          <source>The directory where the <ph id="ph1">&lt;see cref="P:System.AppDomain.DynamicDirectory" /&gt;</ph> is located.</source>
          <target state="translated">Каталог, в котором расположена папка <ph id="ph1">&lt;see cref="P:System.AppDomain.DynamicDirectory" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AppDomainSetup.DynamicBase">
          <source>The return value of this property is different from the value assigned.</source>
          <target state="translated">Возвращаемое значение этого свойства отличается от присвоенного значения.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AppDomainSetup.DynamicBase">
          <source>Use this property to set the base directory where the dynamic directory for the new application domain will be located.</source>
          <target state="translated">Это свойство позволяет задать базовый каталог, в котором будет находиться динамического каталог для нового домена приложения.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AppDomainSetup.DynamicBase">
          <source>When code in the new application domain loads an assembly, assembly resolution looks first in the normal probing paths.</source>
          <target state="translated">Когда код в новый домен приложения загружает сборки, разрешение сборки находит первую позицию обычно осуществляется поиск.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AppDomainSetup.DynamicBase">
          <source>If it does not find the assembly, it looks in the dynamic directory, which is returned by the <ph id="ph1">&lt;xref:System.AppDomain.DynamicDirectory%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">Если не удается найти сборку, выполняет поиск в каталоге динамических, который возвращается методом <ph id="ph1">&lt;xref:System.AppDomain.DynamicDirectory%2A?displayProperty=nameWithType&gt;</ph> свойство.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AppDomainSetup.DynamicBase">
          <source>Dynamic assemblies that will be loaded and executed by the new application domain can be placed there.</source>
          <target state="translated">Может быть помещен динамических сборок, которые будут загружаться и исполнен новый домен приложения.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AppDomainSetup.DynamicBase">
          <source>When you assign a path to the <ph id="ph1">&lt;xref:System.AppDomainSetup.DynamicBase%2A&gt;</ph> property, an additional subdirectory is added; the name of this subdirectory is the hash code of the value assigned to the <ph id="ph2">&lt;xref:System.AppDomainSetup.ApplicationName%2A&gt;</ph> property.</source>
          <target state="translated">При назначении путь к <ph id="ph1">&lt;xref:System.AppDomainSetup.DynamicBase%2A&gt;</ph> свойство, добавлены дополнительные подкаталог; этот подкаталог называется хэш-код значения, назначенные <ph id="ph2">&lt;xref:System.AppDomainSetup.ApplicationName%2A&gt;</ph> свойство.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AppDomainSetup.DynamicBase">
          <source>Thus, the base directory subsequently returned by this property is always different from the value assigned.</source>
          <target state="translated">Таким образом базовый каталог, возвращаемых впоследствии это свойство всегда отличается от значения, присвоенного.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AppDomainSetup.DynamicBase">
          <source>Assigning a value to this property does not create any directories.</source>
          <target state="translated">Присвоение этому свойству значение не создает все каталоги.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AppDomainSetup.DynamicBase">
          <source>The directories must be created or verified by the code that uses them.</source>
          <target state="translated">Каталоги должны быть созданы и протестирован код, который использует их.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AppDomainSetup.DynamicBase">
          <source>The dynamic directory is a subdirectory of <ph id="ph1">&lt;xref:System.AppDomainSetup.DynamicBase%2A&gt;</ph>.</source>
          <target state="translated">Динамические каталог находится в подкаталоге <ph id="ph1">&lt;xref:System.AppDomainSetup.DynamicBase%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AppDomainSetup.DynamicBase">
          <source>Its simple name is the value returned by the <ph id="ph1">&lt;xref:System.AppDomainSetup.ApplicationName%2A&gt;</ph> property, so its format is <bpt id="p1">*</bpt>original path<ept id="p1">*</ept><ph id="ph2">\\</ph><bpt id="p2">*</bpt>hash code<ept id="p2">*</ept><ph id="ph3">\\</ph><bpt id="p3">*</bpt>application name<ept id="p3">*</ept>.</source>
          <target state="translated">Его простое имя — значение, возвращаемое <ph id="ph1">&lt;xref:System.AppDomainSetup.ApplicationName%2A&gt;</ph> свойства, поэтому его формат <bpt id="p1">*</bpt>исходный путь<ept id="p1">*</ept><ph id="ph2">\\</ph><bpt id="p2">*</bpt>хэш-код<ept id="p2">*</ept><ph id="ph3">\\</ph><bpt id="p3">*</bpt>имя приложения<ept id="p3">*</ept>.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AppDomainSetup.DynamicBase">
          <source>The following example demonstrates how to use the <ph id="ph1">&lt;xref:System.AppDomainSetup.DynamicBase%2A&gt;</ph> property to set the path an application domain probes when loading dynamic assemblies.</source>
          <target state="translated">В следующем примере демонстрируется использование <ph id="ph1">&lt;xref:System.AppDomainSetup.DynamicBase%2A&gt;</ph> проверяет свойство, чтобы задать путь домена приложения при загрузке динамических сборок.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AppDomainSetup.DynamicBase">
          <source>The example creates an <ph id="ph1">&lt;xref:System.AppDomainSetup&gt;</ph> object and sets its <ph id="ph2">&lt;xref:System.AppDomainSetup.ApplicationName%2A&gt;</ph> property to "Example" and its <ph id="ph3">&lt;xref:System.AppDomainSetup.DynamicBase%2A&gt;</ph> property to "C:\DynamicAssemblyDir".</source>
          <target state="translated">В примере создается <ph id="ph1">&lt;xref:System.AppDomainSetup&gt;</ph> и устанавливает его <ph id="ph2">&lt;xref:System.AppDomainSetup.ApplicationName%2A&gt;</ph> свойства «Пример» и его <ph id="ph3">&lt;xref:System.AppDomainSetup.DynamicBase%2A&gt;</ph> свойства «C:\DynamicAssemblyDir».</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AppDomainSetup.DynamicBase">
          <source>The example then displays the <ph id="ph1">&lt;xref:System.AppDomainSetup.DynamicBase%2A&gt;</ph> property, to show that the hash code of the application name has been appended as a subdirectory of the path that was originally assigned.</source>
          <target state="translated">Затем в примере выводится <ph id="ph1">&lt;xref:System.AppDomainSetup.DynamicBase%2A&gt;</ph> свойство, чтобы показать, как подкаталог путь, который первоначально был назначен добавленную хэш-код с именем приложения.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AppDomainSetup.DynamicBase">
          <source>The base directory in this example is intended to be outside the probing path for the example application.</source>
          <target state="translated">Базовый каталог, в этом примере предполагается использовать за пределами путь поиска сборок для примера приложения.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AppDomainSetup.DynamicBase">
          <source>Be sure to compile the example in a different location.</source>
          <target state="translated">Необходимо скомпилировать этот пример в другом месте.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AppDomainSetup.DynamicBase">
          <source>Delete the base directory and all its subdirectories each time you run the example.</source>
          <target state="translated">Удаление базового каталога и всех его подкаталогах при каждом запуске примера.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AppDomainSetup.DynamicBase">
          <source>The example creates a new application domain using the <ph id="ph1">&lt;xref:System.AppDomainSetup&gt;</ph> object.</source>
          <target state="translated">В примере создается новый домен приложения с помощью <ph id="ph1">&lt;xref:System.AppDomainSetup&gt;</ph> объекта.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AppDomainSetup.DynamicBase">
          <source>The example then creates the dynamic directory if it does not already exist.</source>
          <target state="translated">Затем в примере создается динамический каталог, если он еще не существует.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AppDomainSetup.DynamicBase">
          <source>Although the example uses the application domain's <ph id="ph1">&lt;xref:System.AppDomain.DynamicDirectory%2A?displayProperty=nameWithType&gt;</ph> property to get the name of the dynamic directory, it could just as easily create the directory beforehand by concatenating the original path, the hash code of the application name, and the application name.</source>
          <target state="translated">Несмотря на то, что в этом примере домен приложения <ph id="ph1">&lt;xref:System.AppDomain.DynamicDirectory%2A?displayProperty=nameWithType&gt;</ph> свойства, чтобы получить имя каталога, динамические, он может просто создать каталог заранее путем объединения исходный путь, имя приложения, хэш-код и Имя приложения.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AppDomainSetup.DynamicBase">
          <source>The example has a <ph id="ph1">`GenerateDynamicAssembly`</ph> method that emits an assembly named <ph id="ph2">`DynamicHelloWorld.dll`</ph> and stores it in the new application domain's dynamic directory.</source>
          <target state="translated">В примере <ph id="ph1">`GenerateDynamicAssembly`</ph> метод, который создает сборку с именем <ph id="ph2">`DynamicHelloWorld.dll`</ph> и сохраняет его в каталоге динамического новый домен приложения.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AppDomainSetup.DynamicBase">
          <source>The dynamic assembly contains one type, <ph id="ph1">`HelloWorld`</ph>, that has a static method (<ph id="ph2">`Shared`</ph> method in Visual Basic) named <ph id="ph3">`HelloFromAD`</ph>.</source>
          <target state="translated">Динамическая сборка содержит один тип <ph id="ph1">`HelloWorld`</ph>, который имеет статический метод (<ph id="ph2">`Shared`</ph> в Visual Basic) с именем <ph id="ph3">`HelloFromAD`</ph>.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AppDomainSetup.DynamicBase">
          <source>Calling this method displays the name of the application domain.</source>
          <target state="translated">Вызов этого метода имя домена приложения.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AppDomainSetup.DynamicBase">
          <source>The <ph id="ph1">`Example`</ph> class derives from <ph id="ph2">&lt;xref:System.MarshalByRefObject&gt;</ph>, so the example can create an instance of the class in the new application domain and call its <ph id="ph3">`Test`</ph> method.</source>
          <target state="translated"><ph id="ph1">`Example`</ph> Класс является производным от <ph id="ph2">&lt;xref:System.MarshalByRefObject&gt;</ph>, поэтому в примере можно создать экземпляр класса в новом домене приложения и вызовите его <ph id="ph3">`Test`</ph> метод.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AppDomainSetup.DynamicBase">
          <source>The <ph id="ph1">`Test`</ph> method loads the dynamic assembly by its display name and calls the static <ph id="ph2">`HelloFromAD`</ph> method.</source>
          <target state="translated"><ph id="ph1">`Test`</ph> Метод загружает динамическую сборку по его отображаемому имени и вызывает статический <ph id="ph2">`HelloFromAD`</ph> метод.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AppDomainSetup.DynamicBase">
          <source>You can show that the dynamic directory is searched after the normal probing paths by writing code for an assembly named <ph id="ph1">`DynamicHelloWorld.dll`</ph> and compiling it in the same directory as this example.</source>
          <target state="translated">Может показывать, что dynamic directory поиск после обычно осуществляется поиск путем написания кода для сборки с именем <ph id="ph1">`DynamicHelloWorld.dll`</ph> и компилирует его в том же каталоге, что в этом примере.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AppDomainSetup.DynamicBase">
          <source>The assembly must have a class named <ph id="ph1">`HelloWorld`</ph> with a static method named <ph id="ph2">`HelloFromAD`</ph>.</source>
          <target state="translated">Сборка должна иметь класс с именем <ph id="ph1">`HelloWorld`</ph> со статическим методом с именем <ph id="ph2">`HelloFromAD`</ph>.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AppDomainSetup.DynamicBase">
          <source>This method does not have to have the same functionality as the one in the example; it can simply display a string to the console.</source>
          <target state="translated">Этот метод не имеет те же функции, как в примере; он может просто отображать строку на консоль.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AppDomainSetup.DynamicBase">
          <source>The assembly must also have an <ph id="ph1">&lt;xref:System.Reflection.AssemblyVersionAttribute&gt;</ph> attribute that sets its version to 1.0.0.0.</source>
          <target state="translated">Эта сборка должна также иметь <ph id="ph1">&lt;xref:System.Reflection.AssemblyVersionAttribute&gt;</ph> атрибут, который задает его версию 1.0.0.0.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AppDomainSetup.DynamicBase">
          <source>When you run the example, the assembly you compiled in the current directory is found before the dynamic directory is searched.</source>
          <target state="translated">При запуске примера сборки, которые компилируются в текущем каталоге находится перед поиска динамического каталога.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="P:System.AppDomainSetup.DynamicBase">
          <source>This property cannot be set because the application name on the application domain is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Невозможно задать это свойство, так как имя приложения в домене приложения — <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AppDomainSetup.DynamicBase">
          <source>for access to the path information.</source>
          <target state="translated">для доступа к информации о пути.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AppDomainSetup.DynamicBase">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /&gt;</ph></source>
          <target state="translated">Связанное перечисление: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="M:System.AppDomainSetup.GetConfigurationBytes">
          <source>Returns the XML configuration information set by the <ph id="ph1">&lt;see cref="M:System.AppDomainSetup.SetConfigurationBytes(System.Byte[])" /&gt;</ph> method, which overrides the application's XML configuration information.</source>
          <target state="translated">Возвращает XML-данные конфигурации, заданные методом <ph id="ph1">&lt;see cref="M:System.AppDomainSetup.SetConfigurationBytes(System.Byte[])" /&gt;</ph>, который переопределяет XML-данные конфигурации приложения.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="M:System.AppDomainSetup.GetConfigurationBytes">
          <source>An array that contains the XML configuration information that was set by the <ph id="ph1">&lt;see cref="M:System.AppDomainSetup.SetConfigurationBytes(System.Byte[])" /&gt;</ph> method, or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if the <ph id="ph3">&lt;see cref="M:System.AppDomainSetup.SetConfigurationBytes(System.Byte[])" /&gt;</ph> method has not been called.</source>
          <target state="translated">Массив, содержащий XML-данные конфигурации, заданные с помощью метода <ph id="ph1">&lt;see cref="M:System.AppDomainSetup.SetConfigurationBytes(System.Byte[])" /&gt;</ph>, или <ph id="ph2">&lt;see langword="null" /&gt;</ph>, если метод <ph id="ph3">&lt;see cref="M:System.AppDomainSetup.SetConfigurationBytes(System.Byte[])" /&gt;</ph> не вызывался.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AppDomainSetup.GetConfigurationBytes">
          <source>The <ph id="ph1">&lt;xref:System.AppDomainSetup.SetConfigurationBytes%2A&gt;</ph> method provides a way to override the configuration information of an application that creates a new application domain.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.AppDomainSetup.SetConfigurationBytes%2A&gt;</ph> Метод позволяет переопределить данные конфигурации приложения, который создает новый домен приложения.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AppDomainSetup.GetConfigurationBytes">
          <source>The configuration file information in <ph id="ph1">`value`</ph> overrides the configuration file information for the application.</source>
          <target state="translated">Сведения о файлах конфигурации в <ph id="ph1">`value`</ph> переопределяет сведения о файлах конфигурации приложения.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AppDomainSetup.GetConfigurationBytes">
          <source>For example, when the Example.exe application creates a new application domain, it can override the configuration information originally obtained from Example.exe.config file.</source>
          <target state="translated">Например когда приложение Example.exe создает новый домен приложения, оно может заменить данные конфигурации, изначально полученные из файла Example.exe.config.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AppDomainSetup.GetConfigurationBytes">
          <source>Some consumers of configuration file information do not use the information stored by the <ph id="ph1">&lt;xref:System.AppDomainSetup.SetConfigurationBytes%2A&gt;</ph> method.</source>
          <target state="translated">Некоторые потребители данных файла конфигурации не используйте сведения, хранящиеся <ph id="ph1">&lt;xref:System.AppDomainSetup.SetConfigurationBytes%2A&gt;</ph> метод.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AppDomainSetup.GetConfigurationBytes">
          <source>The runtime does not enforce this.</source>
          <target state="translated">Среда выполнения это не применяется.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AppDomainSetup.GetConfigurationBytes">
          <source>To ensure that all configuration file information is overridden in a new application domain, use the <ph id="ph1">&lt;xref:System.AppDomainSetup.ConfigurationFile%2A&gt;</ph> property to specify a configuration file.</source>
          <target state="translated">Чтобы убедиться, что все сведения о файле конфигурации переопределяется в новый домен приложения, используйте <ph id="ph1">&lt;xref:System.AppDomainSetup.ConfigurationFile%2A&gt;</ph> свойство, чтобы указать файл конфигурации.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AppDomainSetup.GetConfigurationBytes">
          <source>The <ph id="ph1">&lt;xref:System.AppDomainSetup.SetConfigurationBytes%2A&gt;</ph> method does affect assembly binding.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.AppDomainSetup.SetConfigurationBytes%2A&gt;</ph> Метод влияет на привязки сборок.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AppDomainSetup.GetConfigurationBytes">
          <source>The XML in <ph id="ph1">`value`</ph> is the same as the XML in a normal configuration file, except that it is stored as a <ph id="ph2">&lt;xref:System.Byte&gt;</ph> array.</source>
          <target state="translated">XML-данные в <ph id="ph1">`value`</ph> является таким же, как XML-данные в обычном конфигурационном файле, за исключением того, что он хранится в виде <ph id="ph2">&lt;xref:System.Byte&gt;</ph> массива.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AppDomainSetup.GetConfigurationBytes">
          <source>To access the configuration bytes for an application domain, use the <ph id="ph1">&lt;xref:System.AppDomain.SetupInformation%2A?displayProperty=nameWithType&gt;</ph> property to get the <ph id="ph2">&lt;xref:System.AppDomainSetup&gt;</ph> object for the application domain, then use the <ph id="ph3">&lt;xref:System.AppDomainSetup.GetConfigurationBytes%2A&gt;</ph> method.</source>
          <target state="translated">Для доступа к байт конфигурации для домена приложения, используйте <ph id="ph1">&lt;xref:System.AppDomain.SetupInformation%2A?displayProperty=nameWithType&gt;</ph> свойства <ph id="ph2">&lt;xref:System.AppDomainSetup&gt;</ph> объекта для домена приложения, а затем используйте <ph id="ph3">&lt;xref:System.AppDomainSetup.GetConfigurationBytes%2A&gt;</ph> метод.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" uid="P:System.AppDomainSetup.LicenseFile">
          <source>Gets or sets the location of the license file associated with this domain.</source>
          <target state="translated">Возвращает или задает расположение файла лицензии, связанного с этим доменом.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AppDomainSetup.LicenseFile">
          <source>The location and name of the license file.</source>
          <target state="translated">Имя и расположение файла лицензии.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AppDomainSetup.LicenseFile">
          <source>for access to the path information.</source>
          <target state="translated">для доступа к информации о пути.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AppDomainSetup.LicenseFile">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /&gt;</ph></source>
          <target state="translated">Связанное перечисление: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" uid="P:System.AppDomainSetup.LoaderOptimization">
          <source>Specifies the optimization policy used to load an executable.</source>
          <target state="translated">Определяет политику оптимизации, используемую для загрузки исполняемого файла.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AppDomainSetup.LoaderOptimization">
          <source>An enumerated constant that is used with the <ph id="ph1">&lt;see cref="T:System.LoaderOptimizationAttribute" /&gt;</ph>.</source>
          <target state="translated">Константа перечислимого типа, которая используется с атрибутом <ph id="ph1">&lt;see cref="T:System.LoaderOptimizationAttribute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AppDomainSetup.LoaderOptimization">
          <source>The following example creates a dynamic assembly and saves it to disk, and then uses the <ph id="ph1">&lt;xref:System.AppDomainSetup.LoaderOptimization%2A&gt;</ph> property to set the optimization policy used to load the assembly into an application domain.</source>
          <target state="translated">В следующем примере создается динамическая сборка и сохраняется на диске, а затем используется <ph id="ph1">&lt;xref:System.AppDomainSetup.LoaderOptimization%2A&gt;</ph> свойство, чтобы задать политику оптимизации, используемую для загрузки сборки в домен приложения.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" uid="P:System.AppDomainSetup.PartialTrustVisibleAssemblies">
          <source>Gets or sets a list of assemblies marked with the <ph id="ph1">&lt;see cref="F:System.Security.PartialTrustVisibilityLevel.NotVisibleByDefault" /&gt;</ph> flag that are made visible to partial-trust code running in a sandboxed application domain.</source>
          <target state="translated">Получает или задает список помеченных флагом <ph id="ph1">&lt;see cref="F:System.Security.PartialTrustVisibilityLevel.NotVisibleByDefault" /&gt;</ph> сборок, которые видимы коду с частичным доверием в изолированном домене приложения.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AppDomainSetup.PartialTrustVisibleAssemblies">
          <source>An array of partial assembly names, where each partial name consists of the simple assembly name and the public key.</source>
          <target state="translated">Массив частичных имен сборок, каждое из которых состоит из простого имени сборки и открытого ключа.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AppDomainSetup.PartialTrustVisibleAssemblies">
          <source>Beginning with the <ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph>, the <ph id="ph2">&lt;xref:System.Security.AllowPartiallyTrustedCallersAttribute&gt;</ph> (APTCA) attribute can be made conditional by setting its <ph id="ph3">&lt;xref:System.Security.AllowPartiallyTrustedCallersAttribute.PartialTrustVisibilityLevel%2A&gt;</ph> property to <ph id="ph4">&lt;xref:System.Security.PartialTrustVisibilityLevel.NotVisibleByDefault&gt;</ph>.</source>
          <target state="translated">Начиная с версии <ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph>, <ph id="ph2">&lt;xref:System.Security.AllowPartiallyTrustedCallersAttribute&gt;</ph> (APTCA) атрибута можно сделать условного, установив его <ph id="ph3">&lt;xref:System.Security.AllowPartiallyTrustedCallersAttribute.PartialTrustVisibilityLevel%2A&gt;</ph> свойства <ph id="ph4">&lt;xref:System.Security.PartialTrustVisibilityLevel.NotVisibleByDefault&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AppDomainSetup.PartialTrustVisibleAssemblies">
          <source>An APTCA assembly that is marked with <ph id="ph1">&lt;xref:System.Security.PartialTrustVisibilityLevel.NotVisibleByDefault&gt;</ph> cannot be used by partially trusted code unless the host application allows it.</source>
          <target state="translated">Сборки с атрибутом APTCA <ph id="ph1">&lt;xref:System.Security.PartialTrustVisibilityLevel.NotVisibleByDefault&gt;</ph> не может использоваться кодом с частичным доверием, если ведущее приложение не разрешает его.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AppDomainSetup.PartialTrustVisibleAssemblies">
          <source>The host of a sandboxed application domain allows code in the application domain to use assemblies with conditional APTCA attributes by creating an array that contains the simple name and public key of each assembly, and assigning the array to this property.</source>
          <target state="translated">Узел изолированного домена приложения позволяет коду в домене приложения для использования сборок с условными атрибутами APTCA, создав массив, содержащий простое имя и открытый ключ каждой сборки и присвоение этому свойству массива.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AppDomainSetup.PartialTrustVisibleAssemblies">
          <source>For example, an element of the array might look like the following: "MyAssembly, PublicKey=0024000004800000940000000602000000240000525341310004000001000100db2ad5e5fedc67ea526ff72ad426ef68e08e241d296c499eedfec6648dcc62b1a12f72be5833a45bbec481b68415b08a5fbc9f9ef247b523dd72bbea65bb532784ddc5c704544bd2f1c2d46fdbe41e4f949e76f9947357b2d5cf8ca9f970701bbd6e8ab64ad31b20ad0be9b56dae4f6b83332b92a2a3b8ea2804c40efbc0b6b9".</source>
          <target state="translated">Например, элемент массива может выглядеть следующим образом: «MyAssembly, PublicKey = 0024000004800000940000000602000000240000525341310004000001000100db2ad5e5fedc67ea526ff72ad426ef68e08e241d296c499eedfec6648dcc62b1a12f72be5833a45bbec481b68415b08a5fbc9f9ef247b523dd72bbea65bb532784ddc5c704544bd2f1c2d46fdbe41e4f949e76f9947357b2d5cf8ca9f970701bbd6e8ab64ad31b20ad 0be9b56dae4f6b83332b92a2a3b8ea2804c40efbc0b6b9».</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AppDomainSetup.PartialTrustVisibleAssemblies">
          <source>If you are using a subclass of <ph id="ph1">&lt;xref:System.AppDomainManager&gt;</ph>, and the assembly that defines it depends on assemblies that are marked with the conditional APTCA attribute, you must include those assemblies in the list that you pass to the <ph id="ph2">&lt;xref:System.AppDomainSetup.PartialTrustVisibleAssemblies%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.AppDomainSetup&gt;</ph> you use to create application domains.</source>
          <target state="translated">Если вы используете подкласс <ph id="ph1">&lt;xref:System.AppDomainManager&gt;</ph>и сборку, определяющую он зависит от сборки с условным атрибутом APTCA, необходимо включить эти сборки в список, передаваемый <ph id="ph2">&lt;xref:System.AppDomainSetup.PartialTrustVisibleAssemblies%2A&gt;</ph> свойство <ph id="ph3">&lt;xref:System.AppDomainSetup&gt;</ph>используется для создания доменов приложений.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AppDomainSetup.PartialTrustVisibleAssemblies">
          <source>Otherwise the assemblies that are marked with the conditional APTCA attribute will be disabled.</source>
          <target state="translated">В противном случае сборки с условным атрибутом APTCA, будут отключены.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AppDomainSetup.PartialTrustVisibleAssemblies">
          <source>When you are debugging an application that is running in a sandboxed application domain, some <ph id="ph1">&lt;xref:System.Security.SecurityException&gt;</ph> messages can be misleading.</source>
          <target state="translated">При отладке приложения, которое выполняется в изолированном домене приложения, некоторые <ph id="ph1">&lt;xref:System.Security.SecurityException&gt;</ph> сообщения можно ввести в заблуждение.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AppDomainSetup.PartialTrustVisibleAssemblies">
          <source>For example, a message might state that one of your fully trusted assemblies has only limited permissions, when the real cause of the problem is that a security demand that exceeds the grant set of the sandboxed application domain has propagated to the boundary of the sandboxed application domain and failed.</source>
          <target state="translated">Например, сообщение может указывать, что один из сборок с полным доверием имеет только ограниченные разрешения, когда фактическую причину проблемы, требование безопасности, превышает набор разрешений изолированного домена приложения распространена на границе изолированный домен приложения, которая завершилась неудачно.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" uid="P:System.AppDomainSetup.PrivateBinPath">
          <source>Gets or sets the list of directories under the application base directory that are probed for private assemblies.</source>
          <target state="translated">Возвращает или задает список каталогов в базовой папке приложения, в которых выполняется поиск закрытых сборок.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AppDomainSetup.PrivateBinPath">
          <source>A list of directory names separated by semicolons.</source>
          <target state="translated">Список имен каталогов, разделенных точкой с запятой.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AppDomainSetup.PrivateBinPath">
          <source>Private assemblies are deployed in the same directory structure as the application.</source>
          <target state="translated">Закрытые сборки развертываются в одну и ту же структуру каталогов приложения.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AppDomainSetup.PrivateBinPath">
          <source>If the directories specified for <ph id="ph1">&lt;xref:System.AppDomainSetup.PrivateBinPath%2A&gt;</ph> are not under <ph id="ph2">&lt;xref:System.AppDomainSetup.ApplicationBase%2A&gt;</ph>, they are ignored.</source>
          <target state="translated">Если указано каталогов для <ph id="ph1">&lt;xref:System.AppDomainSetup.PrivateBinPath%2A&gt;</ph> не находящиеся под <ph id="ph2">&lt;xref:System.AppDomainSetup.ApplicationBase%2A&gt;</ph>, они игнорируются.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" uid="P:System.AppDomainSetup.PrivateBinPathProbe">
          <source>Gets or sets a string value that includes or excludes <ph id="ph1">&lt;see cref="P:System.AppDomainSetup.ApplicationBase" /&gt;</ph> from the search path for the application, and searches only <ph id="ph2">&lt;see cref="P:System.AppDomainSetup.PrivateBinPath" /&gt;</ph>.</source>
          <target state="translated">Возвращает или задает строковое значение, включающее <ph id="ph1">&lt;see cref="P:System.AppDomainSetup.ApplicationBase" /&gt;</ph> в путь поиска для приложения или исключающее его из пути поиска для приложения, чтобы поиск выполнялся только в <ph id="ph2">&lt;see cref="P:System.AppDomainSetup.PrivateBinPath" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AppDomainSetup.PrivateBinPathProbe">
          <source>A null reference (<ph id="ph1">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic) to include the application base path when searching for assemblies; any non-null string value to exclude the path.</source>
          <target state="translated">Пустая ссылка (<ph id="ph1">&lt;see langword="Nothing" /&gt;</ph> в Visual Basic) для включения пути базовой папки приложения при поиске сборок; любое непустое строковое значение для исключения пути.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AppDomainSetup.PrivateBinPathProbe">
          <source>The default value is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Значение по умолчанию — <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AppDomainSetup.PrivateBinPathProbe">
          <source>Set this property to any non-null string value, including <ph id="ph1">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph> (""), to exclude the application directory path — that is, <ph id="ph2">&lt;xref:System.AppDomainSetup.ApplicationBase%2A&gt;</ph> — from the search path for the application, and to search for assemblies only in <ph id="ph3">&lt;xref:System.AppDomainSetup.PrivateBinPath%2A&gt;</ph>.</source>
          <target state="translated">Присвойте этому свойству значение любое непустое строковое значение, включая <ph id="ph1">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph> ("»), чтобы исключить пути каталога приложения — т. е <ph id="ph2">&lt;xref:System.AppDomainSetup.ApplicationBase%2A&gt;</ph> — из пути поиска для приложения и для поиска сборок только в <ph id="ph3">&lt;xref:System.AppDomainSetup.PrivateBinPath%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" uid="P:System.AppDomainSetup.SandboxInterop">
          <source>Gets or sets a value that indicates whether interface caching is disabled for interop calls in the application domain, so that a <bpt id="p1">&lt;c&gt;</bpt>QueryInterface<ept id="p1">&lt;/c&gt;</ept> is performed on each call.</source>
          <target state="translated">Возвращает или задает значение, указывающее, отключено ли кэширование интерфейсов для вызовов взаимодействия в домене приложения, так что <bpt id="p1">&lt;c&gt;</bpt>QueryInterface<ept id="p1">&lt;/c&gt;</ept> выполняется для каждого вызова.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AppDomainSetup.SandboxInterop">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if interface caching is disabled for interop calls in application domains created with the current <ph id="ph2">&lt;see cref="T:System.AppDomainSetup" /&gt;</ph> object; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, если кэширование интерфейсов отключено для вызовов взаимодействия в доменах приложения, созданных с текущим объектом <ph id="ph2">&lt;see cref="T:System.AppDomainSetup" /&gt;</ph>; в противном случае — <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AppDomainSetup.SandboxInterop">
          <source>Disabling interface caching has a significant impact on the performance of interop calls.</source>
          <target state="translated">Отключение кэширования интерфейсов оказывает значительное влияние на производительность вызовов взаимодействия.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AppDomainSetup.SandboxInterop">
          <source>This member is introduced in the <ph id="ph1">[!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)]</ph>.</source>
          <target state="translated">Этот член впервые появился в <ph id="ph1">[!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)]</ph>.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" uid="M:System.AppDomainSetup.SetCompatibilitySwitches(System.Collections.Generic.IEnumerable{System.String})">
          <source>An enumerable set of string values that specify compatibility switches, or <ph id="ph1">&lt;see langword="null" /&gt;</ph> to erase the existing compatibility switches.</source>
          <target state="translated">Перечислимый набор строковых значений, задающий переключатели совместимости, или значение <ph id="ph1">&lt;see langword="null" /&gt;</ph> для снятия существующих переключателей совместимости.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" uid="M:System.AppDomainSetup.SetCompatibilitySwitches(System.Collections.Generic.IEnumerable{System.String})">
          <source>Sets the specified switches, making the application domain compatible with previous versions of the .NET Framework for the specified issues.</source>
          <target state="translated">Устанавливает заданные переключатели, благодаря чему домен приложения становится совместимым с предыдущими версиями платформы .NET Framework для указанных аспектов.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AppDomainSetup.SetCompatibilitySwitches(System.Collections.Generic.IEnumerable{System.String})">
          <source>Major versions of the .NET Framework sometimes introduce breaking changes from the previous version.</source>
          <target state="translated">Основной номер версии платформы .NET Framework иногда даже приводить к критические изменения от предыдущей версии.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AppDomainSetup.SetCompatibilitySwitches(System.Collections.Generic.IEnumerable{System.String})">
          <source>For example, the <ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph> introduces a small number of breaking changes from the <ph id="ph2">[!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)]</ph>.</source>
          <target state="translated">Например <ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph> представлен ряд небольших критические изменения из <ph id="ph2">[!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)]</ph>.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AppDomainSetup.SetCompatibilitySwitches(System.Collections.Generic.IEnumerable{System.String})">
          <source>Use the <ph id="ph1">&lt;xref:System.AppDomainSetup.SetCompatibilitySwitches%2A&gt;</ph> method to specify that one or more of these breaking changes should be rolled back for the application domain, to make the behavior compatible with the previous version of the .NET Framework.</source>
          <target state="translated">Используйте <ph id="ph1">&lt;xref:System.AppDomainSetup.SetCompatibilitySwitches%2A&gt;</ph> метод, чтобы указать, что один или несколько этих критических изменений следует выполнить откат для домена приложения, чтобы сделать поведение, совместимым с предыдущей версии платформы .NET Framework.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AppDomainSetup.SetCompatibilitySwitches(System.Collections.Generic.IEnumerable{System.String})">
          <source>Each time you call this method, it replaces the existing switch settings.</source>
          <target state="translated">Каждый раз при вызове этого метода, он заменяет существующие настройки коммутатора.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AppDomainSetup.SetCompatibilitySwitches(System.Collections.Generic.IEnumerable{System.String})">
          <source>To erase the settings, specify <ph id="ph1">`null`</ph> for the <ph id="ph2">`switches`</ph> parameter.</source>
          <target state="translated">Чтобы удалить параметры, укажите <ph id="ph1">`null`</ph> для <ph id="ph2">`switches`</ph> параметра.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AppDomainSetup.SetCompatibilitySwitches(System.Collections.Generic.IEnumerable{System.String})">
          <source>The set of string values you provide for <ph id="ph1">`switches`</ph> can be a simple string array, because arrays implement the <ph id="ph2">&lt;xref:System.Collections.IEnumerable&gt;</ph> interface.</source>
          <target state="translated">Набор строковых значений, укажите для <ph id="ph1">`switches`</ph> может быть массив простых строк, поскольку массивы реализуют <ph id="ph2">&lt;xref:System.Collections.IEnumerable&gt;</ph> интерфейса.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AppDomainSetup.SetCompatibilitySwitches(System.Collections.Generic.IEnumerable{System.String})">
          <source>The following table provides examples of compatibility switches that can be set to restore the behavior of earlier versions of the .NET Framework.</source>
          <target state="translated">Следующая таблица примеры переключатели совместимости, которые могут быть установлены для восстановления поведения предыдущих версий платформы .NET Framework.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AppDomainSetup.SetCompatibilitySwitches(System.Collections.Generic.IEnumerable{System.String})">
          <source>Switch</source>
          <target state="translated">Параметр</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AppDomainSetup.SetCompatibilitySwitches(System.Collections.Generic.IEnumerable{System.String})">
          <source>Meaning</source>
          <target state="translated">Значение</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AppDomainSetup.SetCompatibilitySwitches(System.Collections.Generic.IEnumerable{System.String})">
          <source>"NetFx40_LegacySecurityPolicy"</source>
          <target state="translated">"NetFx40_LegacySecurityPolicy"</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AppDomainSetup.SetCompatibilitySwitches(System.Collections.Generic.IEnumerable{System.String})">
          <source>Code access security (CAS) for the <ph id="ph1">[!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)]</ph> is enabled in this application domain.</source>
          <target state="translated">Код доступа (CAS) для <ph id="ph1">[!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)]</ph> включена в этом домене приложения.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AppDomainSetup.SetCompatibilitySwitches(System.Collections.Generic.IEnumerable{System.String})">
          <source>See <bpt id="p1">[</bpt><ph id="ph1">&amp;lt;</ph>NetFx40_LegacySecurityPolicy<ph id="ph2">&amp;gt;</ph> Element<ept id="p1">](~/docs/framework/configure-apps/file-schema/runtime/netfx40-legacysecuritypolicy-element.md)</ept>.</source>
          <target state="translated">В разделе <bpt id="p1">[</bpt> <ph id="ph1">&amp;lt;</ph>NetFx40_LegacySecurityPolicy<ph id="ph2">&amp;gt;</ph> элемент<ept id="p1">](~/docs/framework/configure-apps/file-schema/runtime/netfx40-legacysecuritypolicy-element.md)</ept>.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AppDomainSetup.SetCompatibilitySwitches(System.Collections.Generic.IEnumerable{System.String})">
          <source>"NetFx40_Legacy20SortingBehavior"</source>
          <target state="translated">"NetFx40_Legacy20SortingBehavior"</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AppDomainSetup.SetCompatibilitySwitches(System.Collections.Generic.IEnumerable{System.String})">
          <source>String sorting defaults for the <ph id="ph1">[!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)]</ph> are enabled in this application domain.</source>
          <target state="translated">Значения по умолчанию для сортировки строк <ph id="ph1">[!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)]</ph> включены в этом домене приложения.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AppDomainSetup.SetCompatibilitySwitches(System.Collections.Generic.IEnumerable{System.String})">
          <source>Successfully restoring legacy sorting behavior also requires the sort00001000.dll dynamic link library to be available on the local system.</source>
          <target state="translated">Успешно восстановление устаревший порядок сортировки также требуется библиотека динамической компоновки sort00001000.dll доступны в локальной системе.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AppDomainSetup.SetCompatibilitySwitches(System.Collections.Generic.IEnumerable{System.String})">
          <source>See <bpt id="p1">[</bpt><ph id="ph1">&amp;lt;</ph>CompatSortNLSVersion<ph id="ph2">&amp;gt;</ph> Element<ept id="p1">](~/docs/framework/configure-apps/file-schema/runtime/compatsortnlsversion-element.md)</ept>.</source>
          <target state="translated">В разделе <bpt id="p1">[</bpt> <ph id="ph1">&amp;lt;</ph>CompatSortNLSVersion<ph id="ph2">&amp;gt;</ph> элемент<ept id="p1">](~/docs/framework/configure-apps/file-schema/runtime/compatsortnlsversion-element.md)</ept>.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AppDomainSetup.SetCompatibilitySwitches(System.Collections.Generic.IEnumerable{System.String})">
          <source>"NetFx40_Legacy40SortingBehavior"</source>
          <target state="translated">"NetFx40_Legacy40SortingBehavior"</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AppDomainSetup.SetCompatibilitySwitches(System.Collections.Generic.IEnumerable{System.String})">
          <source>String sorting defaults for the <ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph> and Unicode 5.0 are enabled in this application domain.</source>
          <target state="translated">Значения по умолчанию для сортировки строк <ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph> и Unicode 5.0 включены в этом домене приложения.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AppDomainSetup.SetCompatibilitySwitches(System.Collections.Generic.IEnumerable{System.String})">
          <source>Successfully restoring legacy sorting behavior also requires the sort00060101.dll dynamic link library to be available on the local system.</source>
          <target state="translated">Успешно восстановление устаревший порядок сортировки также требует библиотеку динамической компоновки sort00060101.dll доступны в локальной системе.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AppDomainSetup.SetCompatibilitySwitches(System.Collections.Generic.IEnumerable{System.String})">
          <source>"NetFx40_TimeSpanLegacyFormatMode"</source>
          <target state="translated">"NetFx40_TimeSpanLegacyFormatMode"</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AppDomainSetup.SetCompatibilitySwitches(System.Collections.Generic.IEnumerable{System.String})">
          <source><ph id="ph1">&lt;xref:System.TimeSpan&gt;</ph> formatting behavior for the <ph id="ph2">[!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)]</ph> is enabled in this application domain.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.TimeSpan&gt;</ph> форматирование поведение для <ph id="ph2">[!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)]</ph> включена в этом домене приложения.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AppDomainSetup.SetCompatibilitySwitches(System.Collections.Generic.IEnumerable{System.String})">
          <source>See <bpt id="p1">[</bpt><ph id="ph1">&amp;lt;</ph>TimeSpan_LegacyFormatMode<ph id="ph2">&amp;gt;</ph> Element<ept id="p1">](~/docs/framework/configure-apps/file-schema/runtime/timespan-legacyformatmode-element.md)</ept> and the "Restoring Legacy TimeSpan Formatting" section of the <ph id="ph3">&lt;xref:System.TimeSpan&gt;</ph> topic.</source>
          <target state="translated">В разделе <bpt id="p1">[</bpt> <ph id="ph1">&amp;lt;</ph>TimeSpan_LegacyFormatMode<ph id="ph2">&amp;gt;</ph> элемент<ept id="p1">](~/docs/framework/configure-apps/file-schema/runtime/timespan-legacyformatmode-element.md)</ept> и в разделе «Восстановление форматирование прежних версий TimeSpan» <ph id="ph3">&lt;xref:System.TimeSpan&gt;</ph> раздела.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AppDomainSetup.SetCompatibilitySwitches(System.Collections.Generic.IEnumerable{System.String})">
          <source>"UseRandomizedStringHashAlgorithm"</source>
          <target state="translated">"UseRandomizedStringHashAlgorithm"</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AppDomainSetup.SetCompatibilitySwitches(System.Collections.Generic.IEnumerable{System.String})">
          <source>The runtime calculates hash codes for strings on a per application domain basis instead of using a single hashing algorithm that produces a consistent hash code across application domains.</source>
          <target state="translated">Среда выполнения вычисляет хэш-кодов для строк для каждого домена приложения, вместо использования один алгоритм хэширования, который создает согласованные хэш-код в доменах приложений.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AppDomainSetup.SetCompatibilitySwitches(System.Collections.Generic.IEnumerable{System.String})">
          <source>See <bpt id="p1">[</bpt><ph id="ph1">&amp;lt;</ph>UseRandomizedStringHashAlgorithm<ph id="ph2">&amp;gt;</ph> Element<ept id="p1">](~/docs/framework/configure-apps/file-schema/runtime/userandomizedstringhashalgorithm-element.md)</ept>.</source>
          <target state="translated">В разделе <bpt id="p1">[</bpt> <ph id="ph1">&amp;lt;</ph>UseRandomizedStringHashAlgorithm<ph id="ph2">&amp;gt;</ph> элемент<ept id="p1">](~/docs/framework/configure-apps/file-schema/runtime/userandomizedstringhashalgorithm-element.md)</ept>.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" uid="M:System.AppDomainSetup.SetConfigurationBytes(System.Byte[])">
          <source>An array that contains the XML configuration information to be used for the application domain.</source>
          <target state="translated">Массив, содержащий XML-данные конфигурации для домена приложения.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" uid="M:System.AppDomainSetup.SetConfigurationBytes(System.Byte[])">
          <source>Provides XML configuration information for the application domain, replacing the application's XML configuration information.</source>
          <target state="translated">Предоставляет XML-данные конфигурации для домена приложения, заменяя XML-данные конфигурации приложения.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AppDomainSetup.SetConfigurationBytes(System.Byte[])">
          <source>The <ph id="ph1">&lt;xref:System.AppDomainSetup.SetConfigurationBytes%2A&gt;</ph> method provides a way to replace the configuration information of an application that creates a new application domain.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.AppDomainSetup.SetConfigurationBytes%2A&gt;</ph> Метод предоставляет способ для замены параметров приложения, который создает новый домен приложения.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AppDomainSetup.SetConfigurationBytes(System.Byte[])">
          <source>The configuration file information in <ph id="ph1">`value`</ph> replaces the configuration file information for the application.</source>
          <target state="translated">Сведения о файлах конфигурации в <ph id="ph1">`value`</ph> заменяет сведения о файлах конфигурации приложения.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AppDomainSetup.SetConfigurationBytes(System.Byte[])">
          <source>For example, when the Example.exe application creates a new application domain, it can replace the configuration information originally obtained from the Example.exe.config file.</source>
          <target state="translated">Например когда приложение Example.exe создает новый домен приложения, можно заменить данные конфигурации, изначально полученные из файла Example.exe.config.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AppDomainSetup.SetConfigurationBytes(System.Byte[])">
          <source>Some consumers of configuration file information do not use the information stored by the <ph id="ph1">&lt;xref:System.AppDomainSetup.SetConfigurationBytes%2A&gt;</ph> method.</source>
          <target state="translated">Некоторые потребители данных файла конфигурации не используйте сведения, хранящиеся <ph id="ph1">&lt;xref:System.AppDomainSetup.SetConfigurationBytes%2A&gt;</ph> метод.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AppDomainSetup.SetConfigurationBytes(System.Byte[])">
          <source>The runtime does not enforce this.</source>
          <target state="translated">Среда выполнения это не применяется.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AppDomainSetup.SetConfigurationBytes(System.Byte[])">
          <source>To ensure that all configuration file information is replaced in a new application domain, use the <ph id="ph1">&lt;xref:System.AppDomainSetup.ConfigurationFile%2A&gt;</ph> property to specify a configuration file.</source>
          <target state="translated">Чтобы гарантировать замены, все сведения о файлах конфигурации в новом домене приложения, используйте <ph id="ph1">&lt;xref:System.AppDomainSetup.ConfigurationFile%2A&gt;</ph> свойство, чтобы указать файл конфигурации.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AppDomainSetup.SetConfigurationBytes(System.Byte[])">
          <source>The <ph id="ph1">&lt;xref:System.AppDomainSetup.SetConfigurationBytes%2A&gt;</ph> method does affect assembly binding.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.AppDomainSetup.SetConfigurationBytes%2A&gt;</ph> Метод влияет на привязки сборок.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AppDomainSetup.SetConfigurationBytes(System.Byte[])">
          <source>The XML in <ph id="ph1">`value`</ph> is the same as the XML in a normal configuration file, except that it is stored as a <ph id="ph2">&lt;xref:System.Byte&gt;</ph> array.</source>
          <target state="translated">XML-данные в <ph id="ph1">`value`</ph> является таким же, как XML-данные в обычном конфигурационном файле, за исключением того, что он хранится в виде <ph id="ph2">&lt;xref:System.Byte&gt;</ph> массива.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" uid="M:System.AppDomainSetup.SetNativeFunction(System.String,System.Int32,System.IntPtr)">
          <source>The name of the string comparison function to override.</source>
          <target state="translated">Имя переопределяемой функции сравнения строк.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" uid="M:System.AppDomainSetup.SetNativeFunction(System.String,System.Int32,System.IntPtr)">
          <source>The function version.</source>
          <target state="translated">Версия функции.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" uid="M:System.AppDomainSetup.SetNativeFunction(System.String,System.Int32,System.IntPtr)">
          <source>For <ph id="ph1">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>, its value must be 1 or greater.</source>
          <target state="translated">Для <ph id="ph1">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph> значение должно быть больше или равно 1.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" uid="M:System.AppDomainSetup.SetNativeFunction(System.String,System.Int32,System.IntPtr)">
          <source>A pointer to the function that overrides <bpt id="p1">&lt;c&gt;</bpt>functionName<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Указатель на функцию, переопределяющую <bpt id="p1">&lt;c&gt;</bpt>functionName<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" uid="M:System.AppDomainSetup.SetNativeFunction(System.String,System.Int32,System.IntPtr)">
          <source>Provides the common language runtime with an alternate implementation of a string comparison function.</source>
          <target state="translated">Предоставляет среду CLR с резервной реализацией функции сравнения строк.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AppDomainSetup.SetNativeFunction(System.String,System.Int32,System.IntPtr)">
          <source>The following string comparison and sorting methods can be overridden by the <ph id="ph1">&lt;xref:System.AppDomainSetup.SetNativeFunction%2A&gt;</ph> method:</source>
          <target state="translated">Следующее строковое сравнение и сортировка методы могут быть переопределены <ph id="ph1">&lt;xref:System.AppDomainSetup.SetNativeFunction%2A&gt;</ph> метод:</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AppDomainSetup.SetNativeFunction(System.String,System.Int32,System.IntPtr)">
          <source>For information about these functions, see <bpt id="p1">[</bpt>National Language Support Functions<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=228134)</ept>.</source>
          <target state="translated">Сведения об этих функциях см. в разделе <bpt id="p1">[</bpt>функции поддержки национальных языков<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=228134)</ept>.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" uid="M:System.AppDomainSetup.SetNativeFunction(System.String,System.Int32,System.IntPtr)">
          <source><ph id="ph1">&lt;paramref name="functionName" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Свойство <ph id="ph1">&lt;paramref name="functionName" /&gt;</ph> имеет значение <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" uid="M:System.AppDomainSetup.SetNativeFunction(System.String,System.Int32,System.IntPtr)">
          <source><ph id="ph1">&lt;paramref name="functionVersion" /&gt;</ph> is not 1 or greater.</source>
          <target state="translated">Значение параметра <ph id="ph1">&lt;paramref name="functionVersion" /&gt;</ph> не равно 1 или выше.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" uid="M:System.AppDomainSetup.SetNativeFunction(System.String,System.Int32,System.IntPtr)">
          <source>-or-</source>
          <target state="translated">- или -</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" uid="M:System.AppDomainSetup.SetNativeFunction(System.String,System.Int32,System.IntPtr)">
          <source><ph id="ph1">&lt;paramref name="functionPointer" /&gt;</ph> is <ph id="ph2">&lt;see cref="F:System.IntPtr.Zero" /&gt;</ph>.</source>
          <target state="translated">Свойство <ph id="ph1">&lt;paramref name="functionPointer" /&gt;</ph> имеет значение <ph id="ph2">&lt;see cref="F:System.IntPtr.Zero" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AppDomainSetup.SetNativeFunction(System.String,System.Int32,System.IntPtr)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">требуется полное доверие для непосредственно вызывающего метода.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AppDomainSetup.SetNativeFunction(System.String,System.Int32,System.IntPtr)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Этот член не может использоваться частично доверенным или прозрачным кодом.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" uid="P:System.AppDomainSetup.ShadowCopyDirectories">
          <source>Gets or sets the names of the directories containing assemblies to be shadow copied.</source>
          <target state="translated">Возвращает или задает имена каталогов, содержащих сборки, для которых будут созданы теневые копии.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AppDomainSetup.ShadowCopyDirectories">
          <source>A list of directory names separated by semicolons.</source>
          <target state="translated">Список имен каталогов, разделенных точкой с запятой.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AppDomainSetup.ShadowCopyDirectories">
          <source>When shadow copying is enabled, the default is to shadow copy all assemblies found through probing; that is, in the directories specified by the <ph id="ph1">&lt;xref:System.AppDomainSetup.PrivateBinPath%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.AppDomainSetup.ApplicationBase%2A&gt;</ph> properties.</source>
          <target state="translated">Если теневое копирование включено, значение по умолчанию — теневого копирования, все сборки, найденные в процессе поиска; то есть, в каталогах, указанных в <ph id="ph1">&lt;xref:System.AppDomainSetup.PrivateBinPath%2A&gt;</ph> и <ph id="ph2">&lt;xref:System.AppDomainSetup.ApplicationBase%2A&gt;</ph> свойства.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AppDomainSetup.ShadowCopyDirectories">
          <source>The <ph id="ph1">&lt;xref:System.AppDomainSetup.ShadowCopyDirectories%2A&gt;</ph> property restricts the shadow copy to the assemblies in the directories specified by <ph id="ph2">&lt;xref:System.AppDomainSetup.ShadowCopyDirectories%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.AppDomainSetup.ShadowCopyDirectories%2A&gt;</ph> Свойство ограничивает теневого копирования сборок в каталогах, указанных в <ph id="ph2">&lt;xref:System.AppDomainSetup.ShadowCopyDirectories%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AppDomainSetup.ShadowCopyDirectories">
          <source>If you don’t assign a string to the <ph id="ph1">&lt;xref:System.AppDomainSetup.ShadowCopyDirectories%2A&gt;</ph> property, or if you set this property to <ph id="ph2">`null`</ph>, all assemblies in the directories specified by the <ph id="ph3">&lt;xref:System.AppDomainSetup.ApplicationBase%2A&gt;</ph> and <ph id="ph4">&lt;xref:System.AppDomainSetup.PrivateBinPath%2A&gt;</ph> properties are shadow copied.</source>
          <target state="translated">Если не присвоить строку свойству <ph id="ph1">&lt;xref:System.AppDomainSetup.ShadowCopyDirectories%2A&gt;</ph> или присвоить ему значение <ph id="ph2">`null`</ph>, выполняется теневое копирование всех сборок в каталогах, указанных в свойствах <ph id="ph3">&lt;xref:System.AppDomainSetup.ApplicationBase%2A&gt;</ph> и <ph id="ph4">&lt;xref:System.AppDomainSetup.PrivateBinPath%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AppDomainSetup.ShadowCopyDirectories">
          <source>Directory paths must not contain semicolons, because the semicolon is the delimiter character.</source>
          <target state="translated">Пути к каталогам не должны содержать точку с запятой, так как она является разделителем.</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AppDomainSetup.ShadowCopyDirectories">
          <source>There is no escape character for semicolons.</source>
          <target state="translated">Escape-символа для точки с запятой не существует.</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AppDomainSetup.ShadowCopyDirectories">
          <source>When shadow copying is in effect, assembly files are copied to another location before the assemblies are loaded.</source>
          <target state="translated">Когда теневое копирование включено, перед сборки загружаются файлы сборки копируются в другое расположение.</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AppDomainSetup.ShadowCopyDirectories">
          <source>The original assembly file is not locked, so it can be updated.</source>
          <target state="translated">Исходный файл сборки не заблокирован, поэтому он может быть обновлен.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AppDomainSetup.ShadowCopyDirectories">
          <source>For more information on shadow copying, see <bpt id="p1">[</bpt>Shadow Copying Assemblies<ept id="p1">](~/docs/framework/app-domains/shadow-copy-assemblies.md)</ept>.</source>
          <target state="translated">Дополнительные сведения о теневом копировании см. в разделе <bpt id="p1">[</bpt>теневое копирование сборок<ept id="p1">](~/docs/framework/app-domains/shadow-copy-assemblies.md)</ept>.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AppDomainSetup.ShadowCopyDirectories">
          <source>for access to the path information.</source>
          <target state="translated">для доступа к информации о пути.</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AppDomainSetup.ShadowCopyDirectories">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /&gt;</ph></source>
          <target state="translated">Связанное перечисление: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" uid="P:System.AppDomainSetup.ShadowCopyFiles">
          <source>Gets or sets a string that indicates whether shadow copying is turned on or off.</source>
          <target state="translated">Возвращает или задает строку, позволяющую определить, включено ли теневое копирование.</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AppDomainSetup.ShadowCopyFiles">
          <source>The string value "true" to indicate that shadow copying is turned on; or "false" to indicate that shadow copying is turned off.</source>
          <target state="translated">Строковое значение true, свидетельствующее о том, что теневое копирование включено, или значение false, указывающее на то, что оно отключено.</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AppDomainSetup.ShadowCopyFiles">
          <source>For more information on shadow copying, see <bpt id="p1">[</bpt>Shadow Copying Assemblies<ept id="p1">](~/docs/framework/app-domains/shadow-copy-assemblies.md)</ept>.</source>
          <target state="translated">Дополнительные сведения о теневом копировании см. в разделе <bpt id="p1">[</bpt>теневое копирование сборок<ept id="p1">](~/docs/framework/app-domains/shadow-copy-assemblies.md)</ept>.</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" uid="P:System.AppDomainSetup.TargetFrameworkName">
          <source>Gets or sets a string that specifies the target version and profile of the .NET Framework for the application domain, in a format that can be parsed by the <ph id="ph1">&lt;see cref="M:System.Runtime.Versioning.FrameworkName.#ctor(System.String)" /&gt;</ph> constructor.</source>
          <target state="translated">Получает или задает строку, которая задает целевую версию и профиль .NET Framework для домена приложения, в формате, который может быть проанализирован конструктором <ph id="ph1">&lt;see cref="M:System.Runtime.Versioning.FrameworkName.#ctor(System.String)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AppDomainSetup.TargetFrameworkName">
          <source>The target version and profile of the .NET Framework.</source>
          <target state="translated">Целевая версия и профиль платформы .NET Framework.</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AppDomainSetup.TargetFrameworkName">
          <source>Set this property to tell the currently running version of the .NET Framework that the application domain will be used to load and run assemblies that have been compiled for the target version and profile.</source>
          <target state="translated">Задайте это свойство, чтобы сообщить выполняющаяся версия платформы .NET Framework, что домен приложения будет использоваться для загрузки и выполнения сборок, которые были скомпилированы для целевой версии или профиля.</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AppDomainSetup.TargetFrameworkName">
          <source>If the currently running version of the .NET Framework has optional behaviors that affect the compatibility of code that was compiled with the target version, it can enable or disable those behaviors, as appropriate, to improve compatibility.</source>
          <target state="translated">Если выполняющаяся версия платформы .NET Framework имеет необязательный поведения, которые влияют на совместимость кода, которая была скомпилирована в целевой версии, его можно включить или отключить эти поведения, чтобы улучшить совместимость соответствующим образом.</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AppDomainSetup.TargetFrameworkName">
          <source>This can be useful when an application supports add-ins compiled with multiple versions of the .NET Framework by running them in separate application domains.</source>
          <target state="translated">Это полезно в том случае, если приложение поддерживает надстройки, скомпилированные с несколькими версиями платформы .NET Framework, запустив их в разных доменах приложения.</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AppDomainSetup.TargetFrameworkName">
          <source>For client applications, the value of the <ph id="ph1">&lt;xref:System.AppDomainSetup.TargetFrameworkName%2A&gt;</ph> property is inferred from the <ph id="ph2">&lt;xref:System.Runtime.Versioning.TargetFrameworkAttribute&gt;</ph> attribute.</source>
          <target state="translated">Для клиентских приложений, значение <ph id="ph1">&lt;xref:System.AppDomainSetup.TargetFrameworkName%2A&gt;</ph> свойства выводится из <ph id="ph2">&lt;xref:System.Runtime.Versioning.TargetFrameworkAttribute&gt;</ph> атрибута.</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AppDomainSetup.TargetFrameworkName">
          <source>In <ph id="ph1">[!INCLUDE[vs_dev10_long](~/includes/vs-dev10-long-md.md)]</ph> and later, this attribute is added to the assembly automatically based on the setting of the project's <bpt id="p1">**</bpt>Target Framework<ept id="p1">**</ept> property.</source>
          <target state="translated">В <ph id="ph1">[!INCLUDE[vs_dev10_long](~/includes/vs-dev10-long-md.md)]</ph> и более поздней версии, этот атрибут добавляется к сборке, автоматически на основе параметров проекта <bpt id="p1">**</bpt>требуемой версии .NET Framework<ept id="p1">**</ept> свойство.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>