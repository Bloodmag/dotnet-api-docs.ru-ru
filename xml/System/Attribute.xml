<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="Attribute.xml" source-language="en-US" target-language="ru-RU">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5438da30acd4c8aab15e23998267de1a8ca100d97.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">438da30acd4c8aab15e23998267de1a8ca100d97</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Attribute">
          <source>Represents the base class for custom attributes.</source>
          <target state="translated">Представляет базовый класс для настраиваемых атрибутов.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Attribute">
          <source>The <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> class associates predefined system information or user-defined custom information with a target element.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Attribute&gt;</ph> Класс связывает сведения стандартные системные и пользовательские данные, определяемые пользователем с целевым элементом.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Attribute">
          <source>A target element can be an assembly, class, constructor, delegate, enum, event, field, interface, method, portable executable file module, parameter, property, return value, struct, or another attribute.</source>
          <target state="translated">Элемент target может быть сборки, класса, конструктор, делегат, enum, события, поля, интерфейс, метод, переносимый исполняемый файл модуля, параметр, свойство, возвращаемое значение, структура или другой атрибут.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Attribute">
          <source>Information provided by an attribute is also known as metadata.</source>
          <target state="translated">Сведения, предоставляемые атрибут называется также метаданных.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Attribute">
          <source>Metadata can be examined at run time by your application to control how your program processes data, or before run time by external tools to control how your application itself is processed or maintained.</source>
          <target state="translated">Метаданные можно просмотреть во время выполнения в приложении для управления, как приложение обрабатывает данные, или до времени выполнения внешними средствами для управления как самого приложения обработки или сохраняется.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Attribute">
          <source>For example, the .NET Framework predefines and uses attribute types to control run-time behavior, and some programming languages use attribute types to represent language features not directly supported by the .NET Framework common type system.</source>
          <target state="translated">Например .NET Framework предопределены и используются типы атрибутов для управления поведением во время выполнения, а некоторые языки программирования используют типы атрибутов для представления языковых функций, не поддерживаемого непосредственно компонентом системы общих типов .NET Framework.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Attribute">
          <source>All attribute types derive directly or indirectly from the <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> class.</source>
          <target state="translated">Все типы атрибута наследуются прямо или косвенно от <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> класса.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Attribute">
          <source>Attributes can be applied to any target element; multiple attributes can be applied to the same target element; and attributes can be inherited by an element derived from a target element.</source>
          <target state="translated">Атрибуты могут применяться к любому целевому элементу; несколько атрибутов, которые могут применяться для того же целевого элемента; и атрибуты могут наследоваться элементом, являющимся производным от целевого элемента.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Attribute">
          <source>Use the <ph id="ph1">&lt;xref:System.AttributeTargets&gt;</ph> class to specify the target element to which the attribute is applied.</source>
          <target state="translated">Используйте <ph id="ph1">&lt;xref:System.AttributeTargets&gt;</ph> класса для указания целевого элемента, к которому применяется атрибут.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Attribute">
          <source>The <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> class provides convenient methods to retrieve and test custom attributes.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Attribute&gt;</ph> Класс предоставляет удобные методы для извлечения и проверки настраиваемых атрибутов.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Attribute">
          <source>For more information about using attributes, see <bpt id="p1">[</bpt>Applying Attributes<ept id="p1">](~/docs/standard/attributes/applying-attributes.md)</ept> and <bpt id="p2">[</bpt>Attributes<ept id="p2">](~/docs/standard/attributes/index.md)</ept>.</source>
          <target state="translated">Дополнительные сведения об использовании атрибутов см. в разделе <bpt id="p1">[</bpt>применение атрибутов<ept id="p1">](~/docs/standard/attributes/applying-attributes.md)</ept> и <bpt id="p2">[</bpt>атрибуты<ept id="p2">](~/docs/standard/attributes/index.md)</ept>.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Attribute">
          <source>The following code example demonstrates the usage of <ph id="ph1">&lt;xref:System.Attribute&gt;</ph>.</source>
          <target state="translated">В следующем примере кода показано использование метода <ph id="ph1">&lt;xref:System.Attribute&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Attribute">
          <source>This type is thread safe.</source>
          <target state="translated">Данный тип потокобезопасен.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Attribute.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> class.</source>
          <target state="translated">Инициализирует новый экземпляр класса <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.#ctor">
          <source>This constructor is only called by classes that derive from <ph id="ph1">&lt;xref:System.Attribute&gt;</ph>.</source>
          <target state="translated">Этот конструктор вызывается только классы, производные от <ph id="ph1">&lt;xref:System.Attribute&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.#ctor">
          <source>The following code example shows the definition of a custom parameter <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> class with its constructor.</source>
          <target state="translated">В следующем примере кода показано определение пользовательского параметра <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> его конструктору класса.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Attribute.Equals(System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> to compare with this instance or <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>, который необходимо сравнить с этим экземпляром, или значение <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Attribute.Equals(System.Object)">
          <source>Returns a value that indicates whether this instance is equal to a specified object.</source>
          <target state="translated">Возвращает значение, показывающее, равен ли экземпляр указанному объекту.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Attribute.Equals(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="obj" /&gt;</ph> and this instance are of the same type and have identical field values; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, если <ph id="ph2">&lt;paramref name="obj" /&gt;</ph> и тип данного экземпляра и значения полей полностью совпадают, в противном случае <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.Equals(System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Attribute.Equals%2A&gt;</ph> method uses reflection to retrieve field information for the current instance and the <ph id="ph2">`obj`</ph> argument.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Attribute.Equals%2A&gt;</ph> Метод отражение используется для получения сведений о поле для текущего экземпляра и <ph id="ph2">`obj`</ph> аргумент.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.Equals(System.Object)">
          <source>It then compares field values.</source>
          <target state="translated">Затем он сравнивает значения полей.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.Equals(System.Object)">
          <source>When implementing your own class derived from <ph id="ph1">&lt;xref:System.Attribute&gt;</ph>, you can override the <ph id="ph2">&lt;xref:System.Attribute.Equals%2A&gt;</ph> method.</source>
          <target state="translated">При реализации собственного класса, производного от <ph id="ph1">&lt;xref:System.Attribute&gt;</ph>, можно переопределить <ph id="ph2">&lt;xref:System.Attribute.Equals%2A&gt;</ph> метод.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.Equals(System.Object)">
          <source>Because it uses reflection, we recommend that you do so.</source>
          <target state="translated">Так как он использует отражение, рекомендуется сделать это.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.Equals(System.Object)">
          <source>However, your override should perform a standard test for reference equality (the two arguments represent the same object instance) or value equality (the two arguments are of the same type and have identical field values).</source>
          <target state="translated">Тем не менее переопределенный следует выполнить стандартный тестирование равенство ссылок (два аргумента представляют один и тот же экземпляр объекта) или равные значения (два аргумента, того же типа и значения совпадают).</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.Equals(System.Object)">
          <source>If you want to perform a custom comparison to determine whether two attributes objects are equal, you can override the <ph id="ph1">&lt;xref:System.Attribute.Match%2A&gt;</ph> method.</source>
          <target state="translated">Если вы хотите выполнить пользовательские сравнение для определения двух атрибутов объекты равны, возможность переопределения <ph id="ph1">&lt;xref:System.Attribute.Match%2A&gt;</ph> метод.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.Equals(System.Object)">
          <source>The following example defines two custom parameter <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> classes, then creates several objects of each class and uses the <ph id="ph2">&lt;xref:System.Attribute.Equals%2A&gt;</ph> method to compare them.</source>
          <target state="translated">В следующем примере определяются два пользовательских параметра <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> классы, а затем создает несколько объектов для каждого класса и использует <ph id="ph2">&lt;xref:System.Attribute.Equals%2A&gt;</ph> метод, чтобы сравнить их.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="T:System.Attribute">
          <source>Retrieves a custom attribute of a specified type applied to an assembly, module, type member, or method parameter.</source>
          <target state="translated">Извлекает настраиваемый атрибут указанного типа, который применен к сборке, модулю, члену типа или параметру метода.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)">
          <source>An object derived from the <ph id="ph1">&lt;see cref="T:System.Reflection.Assembly" /&gt;</ph> class that describes a reusable collection of modules.</source>
          <target state="translated">Объект, являющийся производным от класса <ph id="ph1">&lt;see cref="T:System.Reflection.Assembly" /&gt;</ph>, который описывает многократно используемую коллекцию модулей.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)">
          <source>The type, or a base type, of the custom attribute to search for.</source>
          <target state="translated">Тип или базовый тип искомого настраиваемого атрибута.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)">
          <source>Retrieves a custom attribute applied to a specified assembly.</source>
          <target state="translated">Извлекает настраиваемый атрибут, примененный к заданной сборке.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)">
          <source>Parameters specify the assembly and the type of the custom attribute to search for.</source>
          <target state="translated">Параметры определяют сборку и тип настраиваемого атрибута для поиска.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)">
          <source>A reference to the single custom attribute of type <ph id="ph1">&lt;paramref name="attributeType" /&gt;</ph> that is applied to <ph id="ph2">&lt;paramref name="element" /&gt;</ph>, or <ph id="ph3">&lt;see langword="null" /&gt;</ph> if there is no such attribute.</source>
          <target state="translated">Ссылка на один настраиваемый атрибут типа <ph id="ph1">&lt;paramref name="attributeType" /&gt;</ph>, примененный к <ph id="ph2">&lt;paramref name="element" /&gt;</ph>, или <ph id="ph3">&lt;see langword="null" /&gt;</ph>, если такого атрибута нет.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)">
          <source>Use the <ph id="ph1">&lt;xref:System.Attribute.GetCustomAttributes%2A&gt;</ph> method if you expect more than one value to be returned, or <ph id="ph2">&lt;xref:System.Reflection.AmbiguousMatchException&gt;</ph> will be thrown.</source>
          <target state="translated">Используйте <ph id="ph1">&lt;xref:System.Attribute.GetCustomAttributes%2A&gt;</ph> метод, если ожидается более одного значения, которые должны быть возвращены, или <ph id="ph2">&lt;xref:System.Reflection.AmbiguousMatchException&gt;</ph> будет создано.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)">
          <source>Starting with the .NET Framework version 2.0, this method returns security attributes if the attributes are stored in the new metadata format.</source>
          <target state="translated">Начиная с .NET Framework версии 2.0 этот метод возвращает атрибуты безопасности, если эти атрибуты хранятся в новом формате метаданных.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)">
          <source>Assemblies compiled with version 2.0 or later use the new format.</source>
          <target state="translated">Новый формат используется для сборок, скомпилированных в версии 2.0 или более поздней версии.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)">
          <source>Dynamic assemblies and assemblies compiled with earlier versions of the .NET Framework use the old XML format.</source>
          <target state="translated">Динамические сборки и сборки, скомпилирована в более ранних версиях платформы .NET Framework используется старый формат XML.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)">
          <source>See <bpt id="p1">[</bpt>Emitting Declarative Security Attributes<ept id="p1">](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5)</ept>.</source>
          <target state="translated">В разделе <bpt id="p1">[</bpt>выпуск декларативных атрибутов безопасности<ept id="p1">](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5)</ept>.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)">
          <source>The following code example illustrates the use of the <ph id="ph1">&lt;xref:System.Attribute.GetCustomAttribute%2A&gt;</ph> method taking an <ph id="ph2">&lt;xref:System.Reflection.Assembly&gt;</ph> as a parameter.</source>
          <target state="translated">В следующем примере кода показано использование <ph id="ph1">&lt;xref:System.Attribute.GetCustomAttribute%2A&gt;</ph> метод ведения <ph id="ph2">&lt;xref:System.Reflection.Assembly&gt;</ph> как параметр.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)">
          <source><ph id="ph1">&lt;paramref name="element" /&gt;</ph> or <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Параметр <ph id="ph1">&lt;paramref name="element" /&gt;</ph> или <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> имеет значение <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)">
          <source><ph id="ph1">&lt;paramref name="attributeType" /&gt;</ph> is not derived from <ph id="ph2">&lt;see cref="T:System.Attribute" /&gt;</ph>.</source>
          <target state="translated">Тип <ph id="ph1">&lt;paramref name="attributeType" /&gt;</ph> не является производным объекта <ph id="ph2">&lt;see cref="T:System.Attribute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)">
          <source>More than one of the requested attributes was found.</source>
          <target state="translated">Найдено несколько запрошенных атрибутов.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)">
          <source>An object derived from the <ph id="ph1">&lt;see cref="T:System.Reflection.MemberInfo" /&gt;</ph> class that describes a constructor, event, field, method, or property member of a class.</source>
          <target state="translated">Объект, производный от класса <ph id="ph1">&lt;see cref="T:System.Reflection.MemberInfo" /&gt;</ph>, который описывает член класса (конструктор, событие, поле, метод или свойство).</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)">
          <source>The type, or a base type, of the custom attribute to search for.</source>
          <target state="translated">Тип или базовый тип искомого настраиваемого атрибута.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)">
          <source>Retrieves a custom attribute applied to a member of a type.</source>
          <target state="translated">Извлекает настраиваемый атрибут, примененный к члену типа.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)">
          <source>Parameters specify the member, and the type of the custom attribute to search for.</source>
          <target state="translated">Параметры определяют член и тип настраиваемого атрибута для поиска.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)">
          <source>A reference to the single custom attribute of type <ph id="ph1">&lt;paramref name="attributeType" /&gt;</ph> that is applied to <ph id="ph2">&lt;paramref name="element" /&gt;</ph>, or <ph id="ph3">&lt;see langword="null" /&gt;</ph> if there is no such attribute.</source>
          <target state="translated">Ссылка на один настраиваемый атрибут типа <ph id="ph1">&lt;paramref name="attributeType" /&gt;</ph>, примененный к <ph id="ph2">&lt;paramref name="element" /&gt;</ph>, или <ph id="ph3">&lt;see langword="null" /&gt;</ph>, если такого атрибута нет.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)">
          <source>A match is determined in the same way described in the Return Value section of <ph id="ph1">&lt;xref:System.Type.IsAssignableFrom%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Совпадение определяется таким же образом, как описано в разделе возвращают значение <ph id="ph1">&lt;xref:System.Type.IsAssignableFrom%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)">
          <source>Starting with the .NET Framework version 2.0, this method returns security attributes on types, methods, and constructors if the attributes are stored in the new metadata format.</source>
          <target state="translated">Начиная с .NET Framework версии 2.0, этот метод возвращает атрибуты безопасности для типов, методов и конструкторов, если эти атрибуты хранятся в новом формате метаданных.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)">
          <source>Assemblies compiled with version 2.0 or later use the new format.</source>
          <target state="translated">Новый формат используется для сборок, скомпилированных в версии 2.0 или более поздней версии.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)">
          <source>Dynamic assemblies and assemblies compiled with earlier versions of the .NET Framework use the old XML format.</source>
          <target state="translated">Динамические сборки и сборки, скомпилирована в более ранних версиях платформы .NET Framework используется старый формат XML.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)">
          <source>See <bpt id="p1">[</bpt>Emitting Declarative Security Attributes<ept id="p1">](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5)</ept>.</source>
          <target state="translated">В разделе <bpt id="p1">[</bpt>выпуск декларативных атрибутов безопасности<ept id="p1">](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5)</ept>.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)">
          <source>The following code example illustrates the use of the <ph id="ph1">&lt;xref:System.Attribute.GetCustomAttribute%2A&gt;</ph> method taking a <ph id="ph2">&lt;xref:System.Reflection.MemberInfo&gt;</ph> as a parameter.</source>
          <target state="translated">В следующем примере кода показано использование <ph id="ph1">&lt;xref:System.Attribute.GetCustomAttribute%2A&gt;</ph> метод ведения <ph id="ph2">&lt;xref:System.Reflection.MemberInfo&gt;</ph> как параметр.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)">
          <source><ph id="ph1">&lt;paramref name="element" /&gt;</ph> or <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Параметр <ph id="ph1">&lt;paramref name="element" /&gt;</ph> или <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> имеет значение <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)">
          <source><ph id="ph1">&lt;paramref name="attributeType" /&gt;</ph> is not derived from <ph id="ph2">&lt;see cref="T:System.Attribute" /&gt;</ph>.</source>
          <target state="translated">Тип <ph id="ph1">&lt;paramref name="attributeType" /&gt;</ph> не является производным объекта <ph id="ph2">&lt;see cref="T:System.Attribute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)">
          <source><ph id="ph1">&lt;paramref name="element" /&gt;</ph> is not a constructor, method, property, event, type, or field.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="element" /&gt;</ph> не представляет конструктор, метод, свойство, событие, тип или поле.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)">
          <source>More than one of the requested attributes was found.</source>
          <target state="translated">Найдено несколько запрошенных атрибутов.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)">
          <source>A custom attribute type cannot be loaded.</source>
          <target state="translated">Не удалось загрузить тип настраиваемого атрибута.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)">
          <source>An object derived from the <ph id="ph1">&lt;see cref="T:System.Reflection.Module" /&gt;</ph> class that describes a portable executable file.</source>
          <target state="translated">Объект, являющийся производным от класса <ph id="ph1">&lt;see cref="T:System.Reflection.Module" /&gt;</ph>, который описывает переносимый исполняемый файл.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)">
          <source>The type, or a base type, of the custom attribute to search for.</source>
          <target state="translated">Тип или базовый тип искомого настраиваемого атрибута.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)">
          <source>Retrieves a custom attribute applied to a module.</source>
          <target state="translated">Извлекает настраиваемый атрибут, примененный к модулю.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)">
          <source>Parameters specify the module, and the type of the custom attribute to search for.</source>
          <target state="translated">Параметры определяют модуль и тип настраиваемого атрибута для поиска.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)">
          <source>A reference to the single custom attribute of type <ph id="ph1">&lt;paramref name="attributeType" /&gt;</ph> that is applied to <ph id="ph2">&lt;paramref name="element" /&gt;</ph>, or <ph id="ph3">&lt;see langword="null" /&gt;</ph> if there is no such attribute.</source>
          <target state="translated">Ссылка на один настраиваемый атрибут типа <ph id="ph1">&lt;paramref name="attributeType" /&gt;</ph>, примененный к <ph id="ph2">&lt;paramref name="element" /&gt;</ph>, или <ph id="ph3">&lt;see langword="null" /&gt;</ph>, если такого атрибута нет.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)">
          <source>The following code example illustrates the use of the <ph id="ph1">&lt;xref:System.Attribute.GetCustomAttribute%2A&gt;</ph> method taking a <ph id="ph2">&lt;xref:System.Reflection.Module&gt;</ph> as a parameter.</source>
          <target state="translated">В следующем примере кода показано использование <ph id="ph1">&lt;xref:System.Attribute.GetCustomAttribute%2A&gt;</ph> метод ведения <ph id="ph2">&lt;xref:System.Reflection.Module&gt;</ph> как параметр.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)">
          <source><ph id="ph1">&lt;paramref name="element" /&gt;</ph> or <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Параметр <ph id="ph1">&lt;paramref name="element" /&gt;</ph> или <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> имеет значение <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)">
          <source><ph id="ph1">&lt;paramref name="attributeType" /&gt;</ph> is not derived from <ph id="ph2">&lt;see cref="T:System.Attribute" /&gt;</ph>.</source>
          <target state="translated">Тип <ph id="ph1">&lt;paramref name="attributeType" /&gt;</ph> не является производным объекта <ph id="ph2">&lt;see cref="T:System.Attribute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)">
          <source>More than one of the requested attributes was found.</source>
          <target state="translated">Найдено несколько запрошенных атрибутов.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)">
          <source>An object derived from the <ph id="ph1">&lt;see cref="T:System.Reflection.ParameterInfo" /&gt;</ph> class that describes a parameter of a member of a class.</source>
          <target state="translated">Объект, являющийся производным от класса <ph id="ph1">&lt;see cref="T:System.Reflection.ParameterInfo" /&gt;</ph>, который описывает параметр члена класса.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)">
          <source>The type, or a base type, of the custom attribute to search for.</source>
          <target state="translated">Тип или базовый тип искомого настраиваемого атрибута.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)">
          <source>Retrieves a custom attribute applied to a method parameter.</source>
          <target state="translated">Извлекает настраиваемый атрибут, примененный к параметру метода.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)">
          <source>Parameters specify the method parameter, and the type of the custom attribute to search for.</source>
          <target state="translated">Параметры определяют параметр метода и тип настраиваемого атрибута для поиска.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)">
          <source>A reference to the single custom attribute of type <ph id="ph1">&lt;paramref name="attributeType" /&gt;</ph> that is applied to <ph id="ph2">&lt;paramref name="element" /&gt;</ph>, or <ph id="ph3">&lt;see langword="null" /&gt;</ph> if there is no such attribute.</source>
          <target state="translated">Ссылка на один настраиваемый атрибут типа <ph id="ph1">&lt;paramref name="attributeType" /&gt;</ph>, примененный к <ph id="ph2">&lt;paramref name="element" /&gt;</ph>, или <ph id="ph3">&lt;see langword="null" /&gt;</ph>, если такого атрибута нет.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)">
          <source>If <ph id="ph1">`element`</ph> represents a parameter in a method of a derived type, the return value includes the inheritable custom attributes applied to the same parameter in the overridden base methods.</source>
          <target state="translated">Если <ph id="ph1">`element`</ph> представляет параметр метода производного типа, возвращаемое значение включает наследуемые настраиваемые атрибуты, примененные к тому же параметру в переопределенных базовых методов.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)">
          <source>The following code example defines a custom parameter <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> class and applies the custom attribute to a method in a derived class and the base of the derived class.</source>
          <target state="translated">В следующем примере кода определяется пользовательский параметр <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> класса и этот настраиваемый атрибут применяется метод в производном классе, а базовый производного класса.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)">
          <source>The example shows the use of the <ph id="ph1">&lt;xref:System.Attribute.GetCustomAttribute%2A&gt;</ph> method to return the attributes.</source>
          <target state="translated">В примере показано использование <ph id="ph1">&lt;xref:System.Attribute.GetCustomAttribute%2A&gt;</ph> метода для возвращения атрибуты.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)">
          <source><ph id="ph1">&lt;paramref name="element" /&gt;</ph> or <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Параметр <ph id="ph1">&lt;paramref name="element" /&gt;</ph> или <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> имеет значение <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)">
          <source><ph id="ph1">&lt;paramref name="attributeType" /&gt;</ph> is not derived from <ph id="ph2">&lt;see cref="T:System.Attribute" /&gt;</ph>.</source>
          <target state="translated">Тип <ph id="ph1">&lt;paramref name="attributeType" /&gt;</ph> не является производным объекта <ph id="ph2">&lt;see cref="T:System.Attribute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)">
          <source>More than one of the requested attributes was found.</source>
          <target state="translated">Найдено несколько запрошенных атрибутов.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)">
          <source>A custom attribute type cannot be loaded.</source>
          <target state="translated">Не удалось загрузить тип настраиваемого атрибута.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)">
          <source>An object derived from the <ph id="ph1">&lt;see cref="T:System.Reflection.Assembly" /&gt;</ph> class that describes a reusable collection of modules.</source>
          <target state="translated">Объект, являющийся производным от класса <ph id="ph1">&lt;see cref="T:System.Reflection.Assembly" /&gt;</ph>, который описывает многократно используемую коллекцию модулей.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)">
          <source>The type, or a base type, of the custom attribute to search for.</source>
          <target state="translated">Тип или базовый тип искомого настраиваемого атрибута.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)">
          <source>This parameter is ignored, and does not affect the operation of this method.</source>
          <target state="translated">Этот параметр игнорируется и не влияет на работу данного метода.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)">
          <source>Retrieves a custom attribute applied to an assembly.</source>
          <target state="translated">Извлекает настраиваемый атрибут, примененный к сборке.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)">
          <source>Parameters specify the assembly, the type of the custom attribute to search for, and an ignored search option.</source>
          <target state="translated">Параметры определяют сборку, тип настраиваемого атрибута для поиска и игнорированный параметр поиска.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)">
          <source>A reference to the single custom attribute of type <ph id="ph1">&lt;paramref name="attributeType" /&gt;</ph> that is applied to <ph id="ph2">&lt;paramref name="element" /&gt;</ph>, or <ph id="ph3">&lt;see langword="null" /&gt;</ph> if there is no such attribute.</source>
          <target state="translated">Ссылка на один настраиваемый атрибут типа <ph id="ph1">&lt;paramref name="attributeType" /&gt;</ph>, примененный к <ph id="ph2">&lt;paramref name="element" /&gt;</ph>, или <ph id="ph3">&lt;see langword="null" /&gt;</ph>, если такого атрибута нет.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)">
          <source>Starting with the .NET Framework version 2.0, this method returns security attributes if the attributes are stored in the new metadata format.</source>
          <target state="translated">Начиная с .NET Framework версии 2.0 этот метод возвращает атрибуты безопасности, если эти атрибуты хранятся в новом формате метаданных.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)">
          <source>Assemblies compiled with version 2.0 or later use the new format.</source>
          <target state="translated">Новый формат используется для сборок, скомпилированных в версии 2.0 или более поздней версии.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)">
          <source>Dynamic assemblies and assemblies compiled with earlier versions of the .NET Framework use the old XML format.</source>
          <target state="translated">Динамические сборки и сборки, скомпилирована в более ранних версиях платформы .NET Framework используется старый формат XML.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)">
          <source>See <bpt id="p1">[</bpt>Emitting Declarative Security Attributes<ept id="p1">](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5)</ept>.</source>
          <target state="translated">В разделе <bpt id="p1">[</bpt>выпуск декларативных атрибутов безопасности<ept id="p1">](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5)</ept>.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)">
          <source>The following code example illustrates the use of the <ph id="ph1">&lt;xref:System.Attribute.GetCustomAttribute%2A&gt;</ph> method taking an <ph id="ph2">&lt;xref:System.Reflection.Assembly&gt;</ph> as a parameter.</source>
          <target state="translated">В следующем примере кода показано использование <ph id="ph1">&lt;xref:System.Attribute.GetCustomAttribute%2A&gt;</ph> метод ведения <ph id="ph2">&lt;xref:System.Reflection.Assembly&gt;</ph> как параметр.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="element" /&gt;</ph> or <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Параметр <ph id="ph1">&lt;paramref name="element" /&gt;</ph> или <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> имеет значение <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="attributeType" /&gt;</ph> is not derived from <ph id="ph2">&lt;see cref="T:System.Attribute" /&gt;</ph>.</source>
          <target state="translated">Тип <ph id="ph1">&lt;paramref name="attributeType" /&gt;</ph> не является производным объекта <ph id="ph2">&lt;see cref="T:System.Attribute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)">
          <source>More than one of the requested attributes was found.</source>
          <target state="translated">Найдено несколько запрошенных атрибутов.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)">
          <source>An object derived from the <ph id="ph1">&lt;see cref="T:System.Reflection.MemberInfo" /&gt;</ph> class that describes a constructor, event, field, method, or property member of a class.</source>
          <target state="translated">Объект, производный от класса <ph id="ph1">&lt;see cref="T:System.Reflection.MemberInfo" /&gt;</ph>, который описывает член класса (конструктор, событие, поле, метод или свойство).</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)">
          <source>The type, or a base type, of the custom attribute to search for.</source>
          <target state="translated">Тип или базовый тип искомого настраиваемого атрибута.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)">
          <source>If <ph id="ph1">&lt;see langword="true" /&gt;</ph>, specifies to also search the ancestors of <bpt id="p1">&lt;c&gt;</bpt>element<ept id="p1">&lt;/c&gt;</ept> for custom attributes.</source>
          <target state="translated">Если <ph id="ph1">&lt;see langword="true" /&gt;</ph>, задает для настраиваемых атрибутов поиск родительских элементов для <bpt id="p1">&lt;c&gt;</bpt>element<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)">
          <source>Retrieves a custom attribute applied to a member of a type.</source>
          <target state="translated">Извлекает настраиваемый атрибут, примененный к члену типа.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)">
          <source>Parameters specify the member, the type of the custom attribute to search for, and whether to search ancestors of the member.</source>
          <target state="translated">Параметры определяют член и тип настраиваемого атрибута для поиска и признак поиска родительского элемента члена.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)">
          <source>A reference to the single custom attribute of type <ph id="ph1">&lt;paramref name="attributeType" /&gt;</ph> that is applied to <ph id="ph2">&lt;paramref name="element" /&gt;</ph>, or <ph id="ph3">&lt;see langword="null" /&gt;</ph> if there is no such attribute.</source>
          <target state="translated">Ссылка на один настраиваемый атрибут типа <ph id="ph1">&lt;paramref name="attributeType" /&gt;</ph>, примененный к <ph id="ph2">&lt;paramref name="element" /&gt;</ph>, или <ph id="ph3">&lt;see langword="null" /&gt;</ph>, если такого атрибута нет.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)">
          <source>Starting with the .NET Framework version 2.0, this method returns security attributes on types, methods, and constructors if the attributes are stored in the new metadata format.</source>
          <target state="translated">Начиная с .NET Framework версии 2.0, этот метод возвращает атрибуты безопасности для типов, методов и конструкторов, если эти атрибуты хранятся в новом формате метаданных.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)">
          <source>Assemblies compiled with version 2.0 or later use the new format.</source>
          <target state="translated">Новый формат используется для сборок, скомпилированных в версии 2.0 или более поздней версии.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)">
          <source>Dynamic assemblies and assemblies compiled with earlier versions of the .NET Framework use the old XML format.</source>
          <target state="translated">Динамические сборки и сборки, скомпилирована в более ранних версиях платформы .NET Framework используется старый формат XML.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)">
          <source>See <bpt id="p1">[</bpt>Emitting Declarative Security Attributes<ept id="p1">](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5)</ept>.</source>
          <target state="translated">В разделе <bpt id="p1">[</bpt>выпуск декларативных атрибутов безопасности<ept id="p1">](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5)</ept>.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)">
          <source>The following code example illustrates the use of the <ph id="ph1">&lt;xref:System.Attribute.GetCustomAttribute%2A&gt;</ph> method taking a <ph id="ph2">&lt;xref:System.Reflection.MemberInfo&gt;</ph> as a parameter.</source>
          <target state="translated">В следующем примере кода показано использование <ph id="ph1">&lt;xref:System.Attribute.GetCustomAttribute%2A&gt;</ph> метод ведения <ph id="ph2">&lt;xref:System.Reflection.MemberInfo&gt;</ph> как параметр.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="element" /&gt;</ph> or <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Параметр <ph id="ph1">&lt;paramref name="element" /&gt;</ph> или <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> имеет значение <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="attributeType" /&gt;</ph> is not derived from <ph id="ph2">&lt;see cref="T:System.Attribute" /&gt;</ph>.</source>
          <target state="translated">Тип <ph id="ph1">&lt;paramref name="attributeType" /&gt;</ph> не является производным объекта <ph id="ph2">&lt;see cref="T:System.Attribute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="element" /&gt;</ph> is not a constructor, method, property, event, type, or field.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="element" /&gt;</ph> не представляет конструктор, метод, свойство, событие, тип или поле.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)">
          <source>More than one of the requested attributes was found.</source>
          <target state="translated">Найдено несколько запрошенных атрибутов.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)">
          <source>A custom attribute type cannot be loaded.</source>
          <target state="translated">Не удалось загрузить тип настраиваемого атрибута.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)">
          <source>An object derived from the <ph id="ph1">&lt;see cref="T:System.Reflection.Module" /&gt;</ph> class that describes a portable executable file.</source>
          <target state="translated">Объект, являющийся производным от класса <ph id="ph1">&lt;see cref="T:System.Reflection.Module" /&gt;</ph>, который описывает переносимый исполняемый файл.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)">
          <source>The type, or a base type, of the custom attribute to search for.</source>
          <target state="translated">Тип или базовый тип искомого настраиваемого атрибута.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)">
          <source>This parameter is ignored, and does not affect the operation of this method.</source>
          <target state="translated">Этот параметр игнорируется и не влияет на работу данного метода.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)">
          <source>Retrieves a custom attribute applied to a module.</source>
          <target state="translated">Извлекает настраиваемый атрибут, примененный к модулю.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)">
          <source>Parameters specify the module, the type of the custom attribute to search for, and an ignored search option.</source>
          <target state="translated">Параметры определяют модуль, тип настраиваемого атрибута для поиска и игнорированный параметр поиска.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)">
          <source>A reference to the single custom attribute of type <ph id="ph1">&lt;paramref name="attributeType" /&gt;</ph> that is applied to <ph id="ph2">&lt;paramref name="element" /&gt;</ph>, or <ph id="ph3">&lt;see langword="null" /&gt;</ph> if there is no such attribute.</source>
          <target state="translated">Ссылка на один настраиваемый атрибут типа <ph id="ph1">&lt;paramref name="attributeType" /&gt;</ph>, примененный к <ph id="ph2">&lt;paramref name="element" /&gt;</ph>, или <ph id="ph3">&lt;see langword="null" /&gt;</ph>, если такого атрибута нет.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)">
          <source>The following code example illustrates the use of the <ph id="ph1">&lt;xref:System.Attribute.GetCustomAttribute%2A&gt;</ph> method taking a <ph id="ph2">&lt;xref:System.Reflection.Module&gt;</ph> as a parameter.</source>
          <target state="translated">В следующем примере кода показано использование <ph id="ph1">&lt;xref:System.Attribute.GetCustomAttribute%2A&gt;</ph> метод ведения <ph id="ph2">&lt;xref:System.Reflection.Module&gt;</ph> как параметр.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="element" /&gt;</ph> or <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Параметр <ph id="ph1">&lt;paramref name="element" /&gt;</ph> или <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> имеет значение <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="attributeType" /&gt;</ph> is not derived from <ph id="ph2">&lt;see cref="T:System.Attribute" /&gt;</ph>.</source>
          <target state="translated">Тип <ph id="ph1">&lt;paramref name="attributeType" /&gt;</ph> не является производным объекта <ph id="ph2">&lt;see cref="T:System.Attribute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)">
          <source>More than one of the requested attributes was found.</source>
          <target state="translated">Найдено несколько запрошенных атрибутов.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)">
          <source>An object derived from the <ph id="ph1">&lt;see cref="T:System.Reflection.ParameterInfo" /&gt;</ph> class that describes a parameter of a member of a class.</source>
          <target state="translated">Объект, являющийся производным от класса <ph id="ph1">&lt;see cref="T:System.Reflection.ParameterInfo" /&gt;</ph>, который описывает параметр члена класса.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)">
          <source>The type, or a base type, of the custom attribute to search for.</source>
          <target state="translated">Тип или базовый тип искомого настраиваемого атрибута.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)">
          <source>If <ph id="ph1">&lt;see langword="true" /&gt;</ph>, specifies to also search the ancestors of <bpt id="p1">&lt;c&gt;</bpt>element<ept id="p1">&lt;/c&gt;</ept> for custom attributes.</source>
          <target state="translated">Если <ph id="ph1">&lt;see langword="true" /&gt;</ph>, задает для настраиваемых атрибутов поиск родительских элементов для <bpt id="p1">&lt;c&gt;</bpt>element<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)">
          <source>Retrieves a custom attribute applied to a method parameter.</source>
          <target state="translated">Извлекает настраиваемый атрибут, примененный к параметру метода.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)">
          <source>Parameters specify the method parameter, the type of the custom attribute to search for, and whether to search ancestors of the method parameter.</source>
          <target state="translated">Параметры определяют параметр метода и тип настраиваемого атрибута для поиска и признак поиска родительского элемента параметра метода.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)">
          <source>A reference to the single custom attribute of type <ph id="ph1">&lt;paramref name="attributeType" /&gt;</ph> that is applied to <ph id="ph2">&lt;paramref name="element" /&gt;</ph>, or <ph id="ph3">&lt;see langword="null" /&gt;</ph> if there is no such attribute.</source>
          <target state="translated">Ссылка на один настраиваемый атрибут типа <ph id="ph1">&lt;paramref name="attributeType" /&gt;</ph>, примененный к <ph id="ph2">&lt;paramref name="element" /&gt;</ph>, или <ph id="ph3">&lt;see langword="null" /&gt;</ph>, если такого атрибута нет.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)">
          <source>If <ph id="ph1">`element`</ph> represents a parameter in a method of a derived type, the return value includes the inheritable custom attributes applied to the same parameter in the overridden base methods.</source>
          <target state="translated">Если <ph id="ph1">`element`</ph> представляет параметр метода производного типа, возвращаемое значение включает наследуемые настраиваемые атрибуты, примененные к тому же параметру в переопределенных базовых методов.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)">
          <source>The following code example defines a custom parameter <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> class and applies the custom attribute to a method in a derived class and the base of the derived class.</source>
          <target state="translated">В следующем примере кода определяется пользовательский параметр <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> класса и этот настраиваемый атрибут применяется метод в производном классе, а базовый производного класса.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)">
          <source>The example shows the use of the <ph id="ph1">&lt;xref:System.Attribute.GetCustomAttribute%2A&gt;</ph> method to return the attributes.</source>
          <target state="translated">В примере показано использование <ph id="ph1">&lt;xref:System.Attribute.GetCustomAttribute%2A&gt;</ph> метода для возвращения атрибуты.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="element" /&gt;</ph> or <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Параметр <ph id="ph1">&lt;paramref name="element" /&gt;</ph> или <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> имеет значение <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="attributeType" /&gt;</ph> is not derived from <ph id="ph2">&lt;see cref="T:System.Attribute" /&gt;</ph>.</source>
          <target state="translated">Тип <ph id="ph1">&lt;paramref name="attributeType" /&gt;</ph> не является производным объекта <ph id="ph2">&lt;see cref="T:System.Attribute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)">
          <source>More than one of the requested attributes was found.</source>
          <target state="translated">Найдено несколько запрошенных атрибутов.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)">
          <source>A custom attribute type cannot be loaded.</source>
          <target state="translated">Не удалось загрузить тип настраиваемого атрибута.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="T:System.Attribute">
          <source>Retrieves an array of the custom attributes applied to an assembly, module, type member, or method parameter.</source>
          <target state="translated">Извлекает массив настраиваемых атрибутов, примененных к сборке, модулю, члену типа или параметру метода.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Assembly)">
          <source>An object derived from the <ph id="ph1">&lt;see cref="T:System.Reflection.Assembly" /&gt;</ph> class that describes a reusable collection of modules.</source>
          <target state="translated">Объект, являющийся производным от класса <ph id="ph1">&lt;see cref="T:System.Reflection.Assembly" /&gt;</ph>, который описывает многократно используемую коллекцию модулей.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Assembly)">
          <source>Retrieves an array of the custom attributes applied to an assembly.</source>
          <target state="translated">Извлекает массив настраиваемых атрибутов, примененных к сборке.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Assembly)">
          <source>A parameter specifies the assembly.</source>
          <target state="translated">Параметр указывает сборку.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Assembly)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> array that contains the custom attributes applied to <ph id="ph2">&lt;paramref name="element" /&gt;</ph>, or an empty array if no such custom attributes exist.</source>
          <target state="translated">Массив <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph>, содержащий настраиваемые атрибуты, примененные к <ph id="ph2">&lt;paramref name="element" /&gt;</ph>, или пустой массив, если таких настраиваемых атрибутов нет.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Assembly)">
          <source>Starting with the .NET Framework version 2.0, this method returns security attributes if the attributes are stored in the new metadata format.</source>
          <target state="translated">Начиная с .NET Framework версии 2.0 этот метод возвращает атрибуты безопасности, если эти атрибуты хранятся в новом формате метаданных.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Assembly)">
          <source>Assemblies compiled with version 2.0 or later use the new format.</source>
          <target state="translated">Новый формат используется для сборок, скомпилированных в версии 2.0 или более поздней версии.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Assembly)">
          <source>Dynamic assemblies and assemblies compiled with earlier versions of the .NET Framework use the old XML format.</source>
          <target state="translated">Динамические сборки и сборки, скомпилирована в более ранних версиях платформы .NET Framework используется старый формат XML.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Assembly)">
          <source>See <bpt id="p1">[</bpt>Emitting Declarative Security Attributes<ept id="p1">](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5)</ept>.</source>
          <target state="translated">В разделе <bpt id="p1">[</bpt>выпуск декларативных атрибутов безопасности<ept id="p1">](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5)</ept>.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Assembly)">
          <source>The following example retrieves the custom attributes found in the current assembly.</source>
          <target state="translated">Следующий пример извлекает настраиваемые атрибуты, найденные в текущей сборке.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Assembly)">
          <source><ph id="ph1">&lt;paramref name="element" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Свойство <ph id="ph1">&lt;paramref name="element" /&gt;</ph> имеет значение <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)">
          <source>An object derived from the <ph id="ph1">&lt;see cref="T:System.Reflection.MemberInfo" /&gt;</ph> class that describes a constructor, event, field, method, or property member of a class.</source>
          <target state="translated">Объект, производный от класса <ph id="ph1">&lt;see cref="T:System.Reflection.MemberInfo" /&gt;</ph>, который описывает член класса (конструктор, событие, поле, метод или свойство).</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)">
          <source>Retrieves an array of the custom attributes applied to a member of a type.</source>
          <target state="translated">Извлекает массив настраиваемых атрибутов, примененных к члену типа.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)">
          <source>A parameter specifies the member.</source>
          <target state="translated">Параметр задает имя этого члена.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> array that contains the custom attributes applied to <ph id="ph2">&lt;paramref name="element" /&gt;</ph>, or an empty array if no such custom attributes exist.</source>
          <target state="translated">Массив <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph>, содержащий настраиваемые атрибуты, примененные к <ph id="ph2">&lt;paramref name="element" /&gt;</ph>, или пустой массив, если таких настраиваемых атрибутов нет.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)">
          <source>The return value contains the custom attributes for ancestors of <ph id="ph1">`element`</ph>.</source>
          <target state="translated">Возвращаемое значение содержит пользовательские атрибуты родительских элементов <ph id="ph1">`element`</ph>.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)">
          <source>Starting with the .NET Framework version 2.0, this method returns security attributes on methods, constructors, and types if the attributes are stored in the new metadata format.</source>
          <target state="translated">Начиная с .NET Framework версии 2.0 этот метод возвращает атрибуты безопасности для методов, конструкторов и типов, если эти атрибуты хранятся в новом формате метаданных.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)">
          <source>Assemblies compiled with version 2.0 or later use the new format.</source>
          <target state="translated">Новый формат используется для сборок, скомпилированных в версии 2.0 или более поздней версии.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)">
          <source>Dynamic assemblies and assemblies compiled with earlier versions of the .NET Framework use the old XML format.</source>
          <target state="translated">Динамические сборки и сборки, скомпилирована в более ранних версиях платформы .NET Framework используется старый формат XML.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)">
          <source>See <bpt id="p1">[</bpt>Emitting Declarative Security Attributes<ept id="p1">](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5)</ept>.</source>
          <target state="translated">В разделе <bpt id="p1">[</bpt>выпуск декларативных атрибутов безопасности<ept id="p1">](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5)</ept>.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)">
          <source>The following code example demonstrates the use of <ph id="ph1">&lt;xref:System.Attribute.GetCustomAttribute%2A&gt;</ph>, taking a <ph id="ph2">&lt;xref:System.Reflection.MemberInfo&gt;</ph> as a parameter.</source>
          <target state="translated">В следующем примере кода показано использование <ph id="ph1">&lt;xref:System.Attribute.GetCustomAttribute%2A&gt;</ph>, принимающий <ph id="ph2">&lt;xref:System.Reflection.MemberInfo&gt;</ph> как параметр.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)">
          <source><ph id="ph1">&lt;paramref name="element" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Свойство <ph id="ph1">&lt;paramref name="element" /&gt;</ph> имеет значение <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)">
          <source><ph id="ph1">&lt;paramref name="element" /&gt;</ph> is not a constructor, method, property, event, type, or field.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="element" /&gt;</ph> не представляет конструктор, метод, свойство, событие, тип или поле.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)">
          <source>A custom attribute type cannot be loaded.</source>
          <target state="translated">Не удалось загрузить тип настраиваемого атрибута.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Module)">
          <source>An object derived from the <ph id="ph1">&lt;see cref="T:System.Reflection.Module" /&gt;</ph> class that describes a portable executable file.</source>
          <target state="translated">Объект, являющийся производным от класса <ph id="ph1">&lt;see cref="T:System.Reflection.Module" /&gt;</ph>, который описывает переносимый исполняемый файл.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Module)">
          <source>Retrieves an array of the custom attributes applied to a module.</source>
          <target state="translated">Извлекает массив настраиваемых атрибутов, примененных к модулю.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Module)">
          <source>A parameter specifies the module.</source>
          <target state="translated">Параметр задает имя этого модуля.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Module)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> array that contains the custom attributes applied to <ph id="ph2">&lt;paramref name="element" /&gt;</ph>, or an empty array if no such custom attributes exist.</source>
          <target state="translated">Массив <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph>, содержащий настраиваемые атрибуты, примененные к <ph id="ph2">&lt;paramref name="element" /&gt;</ph>, или пустой массив, если таких настраиваемых атрибутов нет.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Module)">
          <source>The following code example demonstrates the use of <ph id="ph1">&lt;xref:System.Attribute.GetCustomAttributes%2A&gt;</ph>, taking a <ph id="ph2">&lt;xref:System.Reflection.Module&gt;</ph> as a parameter.</source>
          <target state="translated">В следующем примере кода показано использование <ph id="ph1">&lt;xref:System.Attribute.GetCustomAttributes%2A&gt;</ph>, принимающий <ph id="ph2">&lt;xref:System.Reflection.Module&gt;</ph> как параметр.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Module)">
          <source><ph id="ph1">&lt;paramref name="element" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Свойство <ph id="ph1">&lt;paramref name="element" /&gt;</ph> имеет значение <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)">
          <source>An object derived from the <ph id="ph1">&lt;see cref="T:System.Reflection.ParameterInfo" /&gt;</ph> class that describes a parameter of a member of a class.</source>
          <target state="translated">Объект, являющийся производным от класса <ph id="ph1">&lt;see cref="T:System.Reflection.ParameterInfo" /&gt;</ph>, который описывает параметр члена класса.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)">
          <source>Retrieves an array of the custom attributes applied to a method parameter.</source>
          <target state="translated">Извлекает массив настраиваемых атрибутов, примененных к параметру метода.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)">
          <source>A parameter specifies the method parameter.</source>
          <target state="translated">В параметре задается параметр метода.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> array that contains the custom attributes applied to <ph id="ph2">&lt;paramref name="element" /&gt;</ph>, or an empty array if no such custom attributes exist.</source>
          <target state="translated">Массив <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph>, содержащий настраиваемые атрибуты, примененные к <ph id="ph2">&lt;paramref name="element" /&gt;</ph>, или пустой массив, если таких настраиваемых атрибутов нет.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)">
          <source>If <ph id="ph1">`element`</ph> represents a parameter in a method of a derived type, the return value includes the inheritable custom attributes applied to the same parameter in the overridden base methods.</source>
          <target state="translated">Если <ph id="ph1">`element`</ph> представляет параметр метода производного типа, возвращаемое значение включает наследуемые настраиваемые атрибуты, примененные к тому же параметру в переопределенных базовых методов.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)">
          <source>The following code example demonstrates the use of <ph id="ph1">&lt;xref:System.Attribute.GetCustomAttributes%2A&gt;</ph>, taking a <ph id="ph2">&lt;xref:System.Reflection.ParameterInfo&gt;</ph> as a parameter.</source>
          <target state="translated">В следующем примере кода показано использование <ph id="ph1">&lt;xref:System.Attribute.GetCustomAttributes%2A&gt;</ph>, принимающий <ph id="ph2">&lt;xref:System.Reflection.ParameterInfo&gt;</ph> как параметр.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)">
          <source><ph id="ph1">&lt;paramref name="element" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Свойство <ph id="ph1">&lt;paramref name="element" /&gt;</ph> имеет значение <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)">
          <source>A custom attribute type cannot be loaded.</source>
          <target state="translated">Не удалось загрузить тип настраиваемого атрибута.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)">
          <source>An object derived from the <ph id="ph1">&lt;see cref="T:System.Reflection.Assembly" /&gt;</ph> class that describes a reusable collection of modules.</source>
          <target state="translated">Объект, являющийся производным от класса <ph id="ph1">&lt;see cref="T:System.Reflection.Assembly" /&gt;</ph>, который описывает многократно используемую коллекцию модулей.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)">
          <source>This parameter is ignored, and does not affect the operation of this method.</source>
          <target state="translated">Этот параметр игнорируется и не влияет на работу данного метода.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)">
          <source>Retrieves an array of the custom attributes applied to an assembly.</source>
          <target state="translated">Извлекает массив настраиваемых атрибутов, примененных к сборке.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)">
          <source>Parameters specify the assembly, and an ignored search option.</source>
          <target state="translated">Параметры задают сборку и игнорируемый параметр поиска.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> array that contains the custom attributes applied to <ph id="ph2">&lt;paramref name="element" /&gt;</ph>, or an empty array if no such custom attributes exist.</source>
          <target state="translated">Массив <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph>, содержащий настраиваемые атрибуты, примененные к <ph id="ph2">&lt;paramref name="element" /&gt;</ph>, или пустой массив, если таких настраиваемых атрибутов нет.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)">
          <source>Starting with the .NET Framework version 2.0, this method returns security attributes if the attributes are stored in the new metadata format.</source>
          <target state="translated">Начиная с .NET Framework версии 2.0 этот метод возвращает атрибуты безопасности, если эти атрибуты хранятся в новом формате метаданных.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)">
          <source>Assemblies compiled with version 2.0 or later use the new format.</source>
          <target state="translated">Новый формат используется для сборок, скомпилированных в версии 2.0 или более поздней версии.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)">
          <source>Dynamic assemblies and assemblies compiled with earlier versions of the .NET Framework use the old XML format.</source>
          <target state="translated">Динамические сборки и сборки, скомпилирована в более ранних версиях платформы .NET Framework используется старый формат XML.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)">
          <source>See <bpt id="p1">[</bpt>Emitting Declarative Security Attributes<ept id="p1">](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5)</ept>.</source>
          <target state="translated">В разделе <bpt id="p1">[</bpt>выпуск декларативных атрибутов безопасности<ept id="p1">](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5)</ept>.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)">
          <source>The following code example demonstrates the use of <ph id="ph1">&lt;xref:System.Attribute.GetCustomAttributes%2A&gt;</ph>, taking an <ph id="ph2">&lt;xref:System.Reflection.Assembly&gt;</ph> as a parameter.</source>
          <target state="translated">В следующем примере кода показано использование <ph id="ph1">&lt;xref:System.Attribute.GetCustomAttributes%2A&gt;</ph>, принимающий <ph id="ph2">&lt;xref:System.Reflection.Assembly&gt;</ph> как параметр.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="element" /&gt;</ph> or <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Параметр <ph id="ph1">&lt;paramref name="element" /&gt;</ph> или <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> имеет значение <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)">
          <source>An object derived from the <ph id="ph1">&lt;see cref="T:System.Reflection.Assembly" /&gt;</ph> class that describes a reusable collection of modules.</source>
          <target state="translated">Объект, являющийся производным от класса <ph id="ph1">&lt;see cref="T:System.Reflection.Assembly" /&gt;</ph>, который описывает многократно используемую коллекцию модулей.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)">
          <source>The type, or a base type, of the custom attribute to search for.</source>
          <target state="translated">Тип или базовый тип искомого настраиваемого атрибута.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)">
          <source>Retrieves an array of the custom attributes applied to an assembly.</source>
          <target state="translated">Извлекает массив настраиваемых атрибутов, примененных к сборке.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)">
          <source>Parameters specify the assembly, and the type of the custom attribute to search for.</source>
          <target state="translated">Параметры определяют сборку и тип настраиваемого атрибута для поиска.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> array that contains the custom attributes of type <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> applied to <ph id="ph3">&lt;paramref name="element" /&gt;</ph>, or an empty array if no such custom attributes exist.</source>
          <target state="translated">Массив <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph>, содержащий настраиваемые атрибуты типа <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph>, примененные к <ph id="ph3">&lt;paramref name="element" /&gt;</ph>, или пустой массив, если таких настраиваемых атрибутов нет.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)">
          <source>Starting with the .NET Framework version 2.0, this method returns security attributes if the attributes are stored in the new metadata format.</source>
          <target state="translated">Начиная с .NET Framework версии 2.0 этот метод возвращает атрибуты безопасности, если эти атрибуты хранятся в новом формате метаданных.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)">
          <source>Assemblies compiled with version 2.0 or later use the new format.</source>
          <target state="translated">Новый формат используется для сборок, скомпилированных в версии 2.0 или более поздней версии.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)">
          <source>Dynamic assemblies and assemblies compiled with earlier versions of the .NET Framework use the old XML format.</source>
          <target state="translated">Динамические сборки и сборки, скомпилирована в более ранних версиях платформы .NET Framework используется старый формат XML.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)">
          <source>See <bpt id="p1">[</bpt>Emitting Declarative Security Attributes<ept id="p1">](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5)</ept>.</source>
          <target state="translated">В разделе <bpt id="p1">[</bpt>выпуск декларативных атрибутов безопасности<ept id="p1">](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5)</ept>.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)">
          <source>The following code example demonstrates the use of <ph id="ph1">&lt;xref:System.Attribute.GetCustomAttributes%2A&gt;</ph>, taking an <ph id="ph2">&lt;xref:System.Reflection.Assembly&gt;</ph> as a parameter.</source>
          <target state="translated">В следующем примере кода показано использование <ph id="ph1">&lt;xref:System.Attribute.GetCustomAttributes%2A&gt;</ph>, принимающий <ph id="ph2">&lt;xref:System.Reflection.Assembly&gt;</ph> как параметр.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)">
          <source><ph id="ph1">&lt;paramref name="element" /&gt;</ph> or <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Параметр <ph id="ph1">&lt;paramref name="element" /&gt;</ph> или <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> имеет значение <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)">
          <source><ph id="ph1">&lt;paramref name="attributeType" /&gt;</ph> is not derived from <ph id="ph2">&lt;see cref="T:System.Attribute" /&gt;</ph>.</source>
          <target state="translated">Тип <ph id="ph1">&lt;paramref name="attributeType" /&gt;</ph> не является производным объекта <ph id="ph2">&lt;see cref="T:System.Attribute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)">
          <source>An object derived from the <ph id="ph1">&lt;see cref="T:System.Reflection.MemberInfo" /&gt;</ph> class that describes a constructor, event, field, method, or property member of a class.</source>
          <target state="translated">Объект, производный от класса <ph id="ph1">&lt;see cref="T:System.Reflection.MemberInfo" /&gt;</ph>, который описывает член класса (конструктор, событие, поле, метод или свойство).</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)">
          <source>If <ph id="ph1">&lt;see langword="true" /&gt;</ph>, specifies to also search the ancestors of <bpt id="p1">&lt;c&gt;</bpt>element<ept id="p1">&lt;/c&gt;</ept> for custom attributes.</source>
          <target state="translated">Если <ph id="ph1">&lt;see langword="true" /&gt;</ph>, задает для настраиваемых атрибутов поиск родительских элементов для <bpt id="p1">&lt;c&gt;</bpt>element<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)">
          <source>Retrieves an array of the custom attributes applied to a member of a type.</source>
          <target state="translated">Извлекает массив настраиваемых атрибутов, примененных к члену типа.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)">
          <source>Parameters specify the member, the type of the custom attribute to search for, and whether to search ancestors of the member.</source>
          <target state="translated">Параметры определяют член и тип настраиваемого атрибута для поиска и признак поиска родительского элемента члена.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> array that contains the custom attributes applied to <ph id="ph2">&lt;paramref name="element" /&gt;</ph>, or an empty array if no such custom attributes exist.</source>
          <target state="translated">Массив <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph>, содержащий настраиваемые атрибуты, примененные к <ph id="ph2">&lt;paramref name="element" /&gt;</ph>, или пустой массив, если таких настраиваемых атрибутов нет.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)">
          <source>The return value contains the custom attributes for ancestors of <ph id="ph1">`element`</ph> if <ph id="ph2">`inherit`</ph> is <ph id="ph3">`true`</ph>.</source>
          <target state="translated">Возвращаемое значение содержит пользовательские атрибуты родительских элементов <ph id="ph1">`element`</ph> Если <ph id="ph2">`inherit`</ph> — <ph id="ph3">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)">
          <source>Starting with the .NET Framework version 2.0, this method returns security attributes on methods, constructors, and types if the attributes are stored in the new metadata format.</source>
          <target state="translated">Начиная с .NET Framework версии 2.0 этот метод возвращает атрибуты безопасности для методов, конструкторов и типов, если эти атрибуты хранятся в новом формате метаданных.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)">
          <source>Assemblies compiled with version 2.0 or later use the new format.</source>
          <target state="translated">Новый формат используется для сборок, скомпилированных в версии 2.0 или более поздней версии.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)">
          <source>Dynamic assemblies and assemblies compiled with earlier versions of the .NET Framework use the old XML format.</source>
          <target state="translated">Динамические сборки и сборки, скомпилирована в более ранних версиях платформы .NET Framework используется старый формат XML.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)">
          <source>See <bpt id="p1">[</bpt>Emitting Declarative Security Attributes<ept id="p1">](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5)</ept>.</source>
          <target state="translated">В разделе <bpt id="p1">[</bpt>выпуск декларативных атрибутов безопасности<ept id="p1">](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5)</ept>.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)">
          <source>The following code example demonstrates the use of <ph id="ph1">&lt;xref:System.Attribute.GetCustomAttributes%2A&gt;</ph>, taking a <ph id="ph2">&lt;xref:System.Reflection.MemberInfo&gt;</ph> as a parameter.</source>
          <target state="translated">В следующем примере кода показано использование <ph id="ph1">&lt;xref:System.Attribute.GetCustomAttributes%2A&gt;</ph>, принимающий <ph id="ph2">&lt;xref:System.Reflection.MemberInfo&gt;</ph> как параметр.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="element" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Свойство <ph id="ph1">&lt;paramref name="element" /&gt;</ph> имеет значение <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="element" /&gt;</ph> is not a constructor, method, property, event, type, or field.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="element" /&gt;</ph> не представляет конструктор, метод, свойство, событие, тип или поле.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)">
          <source>A custom attribute type cannot be loaded.</source>
          <target state="translated">Не удалось загрузить тип настраиваемого атрибута.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)">
          <source>An object derived from the <ph id="ph1">&lt;see cref="T:System.Reflection.MemberInfo" /&gt;</ph> class that describes a constructor, event, field, method, or property member of a class.</source>
          <target state="translated">Объект, производный от класса <ph id="ph1">&lt;see cref="T:System.Reflection.MemberInfo" /&gt;</ph>, который описывает член класса (конструктор, событие, поле, метод или свойство).</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)">
          <source>The type, or a base type, of the custom attribute to search for.</source>
          <target state="translated">Тип или базовый тип искомого настраиваемого атрибута.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)">
          <source>Retrieves an array of the custom attributes applied to a member of a type.</source>
          <target state="translated">Извлекает массив настраиваемых атрибутов, примененных к члену типа.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)">
          <source>Parameters specify the member, and the type of the custom attribute to search for.</source>
          <target state="translated">Параметры определяют член и тип настраиваемого атрибута для поиска.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> array that contains the custom attributes of type <ph id="ph2">&lt;paramref name="type" /&gt;</ph> applied to <ph id="ph3">&lt;paramref name="element" /&gt;</ph>, or an empty array if no such custom attributes exist.</source>
          <target state="translated">Массив <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph>, содержащий настраиваемые атрибуты типа <ph id="ph2">&lt;paramref name="type" /&gt;</ph>, примененные к <ph id="ph3">&lt;paramref name="element" /&gt;</ph>, или пустой массив, если таких настраиваемых атрибутов нет.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)">
          <source>The return value contains the custom attributes for ancestors of <ph id="ph1">`element`</ph>.</source>
          <target state="translated">Возвращаемое значение содержит пользовательские атрибуты родительских элементов <ph id="ph1">`element`</ph>.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)">
          <source>Starting with the .NET Framework version 2.0, this method returns security attributes on methods, constructors, and types if the attributes are stored in the new metadata format.</source>
          <target state="translated">Начиная с .NET Framework версии 2.0 этот метод возвращает атрибуты безопасности для методов, конструкторов и типов, если эти атрибуты хранятся в новом формате метаданных.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)">
          <source>Assemblies compiled with version 2.0 or later use the new format.</source>
          <target state="translated">Новый формат используется для сборок, скомпилированных в версии 2.0 или более поздней версии.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)">
          <source>Dynamic assemblies and assemblies compiled with earlier versions of the .NET Framework use the old XML format.</source>
          <target state="translated">Динамические сборки и сборки, скомпилирована в более ранних версиях платформы .NET Framework используется старый формат XML.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)">
          <source>See <bpt id="p1">[</bpt>Emitting Declarative Security Attributes<ept id="p1">](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5)</ept>.</source>
          <target state="translated">В разделе <bpt id="p1">[</bpt>выпуск декларативных атрибутов безопасности<ept id="p1">](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5)</ept>.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)">
          <source>The following code example demonstrates the use of <ph id="ph1">&lt;xref:System.Attribute.GetCustomAttribute%2A&gt;</ph>, taking a <ph id="ph2">&lt;xref:System.Reflection.MemberInfo&gt;</ph> as a parameter.</source>
          <target state="translated">В следующем примере кода показано использование <ph id="ph1">&lt;xref:System.Attribute.GetCustomAttribute%2A&gt;</ph>, принимающий <ph id="ph2">&lt;xref:System.Reflection.MemberInfo&gt;</ph> как параметр.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)">
          <source><ph id="ph1">&lt;paramref name="element" /&gt;</ph> or <ph id="ph2">&lt;paramref name="type" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Параметр <ph id="ph1">&lt;paramref name="element" /&gt;</ph> или <ph id="ph2">&lt;paramref name="type" /&gt;</ph> имеет значение <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)">
          <source><ph id="ph1">&lt;paramref name="type" /&gt;</ph> is not derived from <ph id="ph2">&lt;see cref="T:System.Attribute" /&gt;</ph>.</source>
          <target state="translated">Тип <ph id="ph1">&lt;paramref name="type" /&gt;</ph> не является производным объекта <ph id="ph2">&lt;see cref="T:System.Attribute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)">
          <source><ph id="ph1">&lt;paramref name="element" /&gt;</ph> is not a constructor, method, property, event, type, or field.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="element" /&gt;</ph> не представляет конструктор, метод, свойство, событие, тип или поле.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)">
          <source>A custom attribute type cannot be loaded.</source>
          <target state="translated">Не удалось загрузить тип настраиваемого атрибута.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)">
          <source>An object derived from the <ph id="ph1">&lt;see cref="T:System.Reflection.Module" /&gt;</ph> class that describes a portable executable file.</source>
          <target state="translated">Объект, являющийся производным от класса <ph id="ph1">&lt;see cref="T:System.Reflection.Module" /&gt;</ph>, который описывает переносимый исполняемый файл.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)">
          <source>This parameter is ignored, and does not affect the operation of this method.</source>
          <target state="translated">Этот параметр игнорируется и не влияет на работу данного метода.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)">
          <source>Retrieves an array of the custom attributes applied to a module.</source>
          <target state="translated">Извлекает массив настраиваемых атрибутов, примененных к модулю.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)">
          <source>Parameters specify the module, and an ignored search option.</source>
          <target state="translated">Параметры задают модуль и игнорируемый параметр поиска.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> array that contains the custom attributes applied to <ph id="ph2">&lt;paramref name="element" /&gt;</ph>, or an empty array if no such custom attributes exist.</source>
          <target state="translated">Массив <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph>, содержащий настраиваемые атрибуты, примененные к <ph id="ph2">&lt;paramref name="element" /&gt;</ph>, или пустой массив, если таких настраиваемых атрибутов нет.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)">
          <source>The return value contains the custom attributes for ancestors of <ph id="ph1">`element`</ph> if <ph id="ph2">`inherit`</ph> is <ph id="ph3">`true`</ph>.</source>
          <target state="translated">Возвращаемое значение содержит пользовательские атрибуты родительских элементов <ph id="ph1">`element`</ph> Если <ph id="ph2">`inherit`</ph> — <ph id="ph3">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)">
          <source>The following code example demonstrates the use of <ph id="ph1">&lt;xref:System.Attribute.GetCustomAttributes%2A&gt;</ph>, taking a <ph id="ph2">&lt;xref:System.Reflection.Module&gt;</ph> as a parameter.</source>
          <target state="translated">В следующем примере кода показано использование <ph id="ph1">&lt;xref:System.Attribute.GetCustomAttributes%2A&gt;</ph>, принимающий <ph id="ph2">&lt;xref:System.Reflection.Module&gt;</ph> как параметр.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="element" /&gt;</ph> or <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Параметр <ph id="ph1">&lt;paramref name="element" /&gt;</ph> или <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> имеет значение <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)">
          <source>An object derived from the <ph id="ph1">&lt;see cref="T:System.Reflection.Module" /&gt;</ph> class that describes a portable executable file.</source>
          <target state="translated">Объект, являющийся производным от класса <ph id="ph1">&lt;see cref="T:System.Reflection.Module" /&gt;</ph>, который описывает переносимый исполняемый файл.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)">
          <source>The type, or a base type, of the custom attribute to search for.</source>
          <target state="translated">Тип или базовый тип искомого настраиваемого атрибута.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)">
          <source>Retrieves an array of the custom attributes applied to a module.</source>
          <target state="translated">Извлекает массив настраиваемых атрибутов, примененных к модулю.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)">
          <source>Parameters specify the module, and the type of the custom attribute to search for.</source>
          <target state="translated">Параметры определяют модуль и тип настраиваемого атрибута для поиска.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> array that contains the custom attributes of type <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> applied to <ph id="ph3">&lt;paramref name="element" /&gt;</ph>, or an empty array if no such custom attributes exist.</source>
          <target state="translated">Массив <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph>, содержащий настраиваемые атрибуты типа <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph>, примененные к <ph id="ph3">&lt;paramref name="element" /&gt;</ph>, или пустой массив, если таких настраиваемых атрибутов нет.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)">
          <source>The following code example demonstrates the use of <ph id="ph1">&lt;xref:System.Attribute.GetCustomAttributes%2A&gt;</ph>, taking a <ph id="ph2">&lt;xref:System.Reflection.Module&gt;</ph> as a parameter.</source>
          <target state="translated">В следующем примере кода показано использование <ph id="ph1">&lt;xref:System.Attribute.GetCustomAttributes%2A&gt;</ph>, принимающий <ph id="ph2">&lt;xref:System.Reflection.Module&gt;</ph> как параметр.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)">
          <source><ph id="ph1">&lt;paramref name="element" /&gt;</ph> or <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Параметр <ph id="ph1">&lt;paramref name="element" /&gt;</ph> или <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> имеет значение <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)">
          <source><ph id="ph1">&lt;paramref name="attributeType" /&gt;</ph> is not derived from <ph id="ph2">&lt;see cref="T:System.Attribute" /&gt;</ph>.</source>
          <target state="translated">Тип <ph id="ph1">&lt;paramref name="attributeType" /&gt;</ph> не является производным объекта <ph id="ph2">&lt;see cref="T:System.Attribute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)">
          <source>An object derived from the <ph id="ph1">&lt;see cref="T:System.Reflection.ParameterInfo" /&gt;</ph> class that describes a parameter of a member of a class.</source>
          <target state="translated">Объект, являющийся производным от класса <ph id="ph1">&lt;see cref="T:System.Reflection.ParameterInfo" /&gt;</ph>, который описывает параметр члена класса.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)">
          <source>If <ph id="ph1">&lt;see langword="true" /&gt;</ph>, specifies to also search the ancestors of <bpt id="p1">&lt;c&gt;</bpt>element<ept id="p1">&lt;/c&gt;</ept> for custom attributes.</source>
          <target state="translated">Если <ph id="ph1">&lt;see langword="true" /&gt;</ph>, задает для настраиваемых атрибутов поиск родительских элементов для <bpt id="p1">&lt;c&gt;</bpt>element<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)">
          <source>Retrieves an array of the custom attributes applied to a method parameter.</source>
          <target state="translated">Извлекает массив настраиваемых атрибутов, примененных к параметру метода.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)">
          <source>Parameters specify the method parameter, and whether to search ancestors of the method parameter.</source>
          <target state="translated">Параметры определяют параметр метода и признак поиска родительского элемента параметра метода.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> array that contains the custom attributes applied to <ph id="ph2">&lt;paramref name="element" /&gt;</ph>, or an empty array if no such custom attributes exist.</source>
          <target state="translated">Массив <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph>, содержащий настраиваемые атрибуты, примененные к <ph id="ph2">&lt;paramref name="element" /&gt;</ph>, или пустой массив, если таких настраиваемых атрибутов нет.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)">
          <source>If <ph id="ph1">`element`</ph> represents a parameter in a method of a derived type, the return value includes the inheritable custom attributes applied to the same parameter in the overridden base methods.</source>
          <target state="translated">Если <ph id="ph1">`element`</ph> представляет параметр метода производного типа, возвращаемое значение включает наследуемые настраиваемые атрибуты, примененные к тому же параметру в переопределенных базовых методов.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)">
          <source>The following code example demonstrates the use of <ph id="ph1">&lt;xref:System.Attribute.GetCustomAttributes%2A&gt;</ph>, taking a <ph id="ph2">&lt;xref:System.Reflection.ParameterInfo&gt;</ph> as a parameter.</source>
          <target state="translated">В следующем примере кода показано использование <ph id="ph1">&lt;xref:System.Attribute.GetCustomAttributes%2A&gt;</ph>, принимающий <ph id="ph2">&lt;xref:System.Reflection.ParameterInfo&gt;</ph> как параметр.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="P:System.Reflection.ParameterInfo.Member" /&gt;</ph> property of <ph id="ph2">&lt;paramref name="element" /&gt;</ph> is <ph id="ph3">&lt;see langword="null." /&gt;</ph><ph id="ph4">&lt;see langword="" /&gt;</ph></source>
          <target state="translated">Свойство <ph id="ph1">&lt;see cref="P:System.Reflection.ParameterInfo.Member" /&gt;</ph> параметра <ph id="ph2">&lt;paramref name="element" /&gt;</ph> имеет значение <ph id="ph3">&lt;see langword="null." /&gt;</ph><ph id="ph4">&lt;see langword="" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="element" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Свойство <ph id="ph1">&lt;paramref name="element" /&gt;</ph> имеет значение <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)">
          <source>A custom attribute type cannot be loaded.</source>
          <target state="translated">Не удалось загрузить тип настраиваемого атрибута.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)">
          <source>An object derived from the <ph id="ph1">&lt;see cref="T:System.Reflection.ParameterInfo" /&gt;</ph> class that describes a parameter of a member of a class.</source>
          <target state="translated">Объект, являющийся производным от класса <ph id="ph1">&lt;see cref="T:System.Reflection.ParameterInfo" /&gt;</ph>, который описывает параметр члена класса.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)">
          <source>The type, or a base type, of the custom attribute to search for.</source>
          <target state="translated">Тип или базовый тип искомого настраиваемого атрибута.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)">
          <source>Retrieves an array of the custom attributes applied to a method parameter.</source>
          <target state="translated">Извлекает массив настраиваемых атрибутов, примененных к параметру метода.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)">
          <source>Parameters specify the method parameter, and the type of the custom attribute to search for.</source>
          <target state="translated">Параметры определяют параметр метода и тип настраиваемого атрибута для поиска.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> array that contains the custom attributes of type <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> applied to <ph id="ph3">&lt;paramref name="element" /&gt;</ph>, or an empty array if no such custom attributes exist.</source>
          <target state="translated">Массив <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph>, содержащий настраиваемые атрибуты типа <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph>, примененные к <ph id="ph3">&lt;paramref name="element" /&gt;</ph>, или пустой массив, если таких настраиваемых атрибутов нет.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)">
          <source>If <ph id="ph1">`element`</ph> represents a parameter in a method of a derived type, the return value includes the inheritable custom attributes applied to the same parameter in the overridden base methods.</source>
          <target state="translated">Если <ph id="ph1">`element`</ph> представляет параметр метода производного типа, возвращаемое значение включает наследуемые настраиваемые атрибуты, примененные к тому же параметру в переопределенных базовых методов.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)">
          <source>The following code example demonstrates the use of <ph id="ph1">&lt;xref:System.Attribute.GetCustomAttributes%2A&gt;</ph>, taking a <ph id="ph2">&lt;xref:System.Reflection.ParameterInfo&gt;</ph> as a parameter.</source>
          <target state="translated">В следующем примере кода показано использование <ph id="ph1">&lt;xref:System.Attribute.GetCustomAttributes%2A&gt;</ph>, принимающий <ph id="ph2">&lt;xref:System.Reflection.ParameterInfo&gt;</ph> как параметр.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)">
          <source><ph id="ph1">&lt;paramref name="element" /&gt;</ph> or <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Параметр <ph id="ph1">&lt;paramref name="element" /&gt;</ph> или <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> имеет значение <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)">
          <source><ph id="ph1">&lt;paramref name="attributeType" /&gt;</ph> is not derived from <ph id="ph2">&lt;see cref="T:System.Attribute" /&gt;</ph>.</source>
          <target state="translated">Тип <ph id="ph1">&lt;paramref name="attributeType" /&gt;</ph> не является производным объекта <ph id="ph2">&lt;see cref="T:System.Attribute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)">
          <source>A custom attribute type cannot be loaded.</source>
          <target state="translated">Не удалось загрузить тип настраиваемого атрибута.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)">
          <source>An object derived from the <ph id="ph1">&lt;see cref="T:System.Reflection.Assembly" /&gt;</ph> class that describes a reusable collection of modules.</source>
          <target state="translated">Объект, являющийся производным от класса <ph id="ph1">&lt;see cref="T:System.Reflection.Assembly" /&gt;</ph>, который описывает многократно используемую коллекцию модулей.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)">
          <source>The type, or a base type, of the custom attribute to search for.</source>
          <target state="translated">Тип или базовый тип искомого настраиваемого атрибута.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)">
          <source>This parameter is ignored, and does not affect the operation of this method.</source>
          <target state="translated">Этот параметр игнорируется и не влияет на работу данного метода.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)">
          <source>Retrieves an array of the custom attributes applied to an assembly.</source>
          <target state="translated">Извлекает массив настраиваемых атрибутов, примененных к сборке.</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)">
          <source>Parameters specify the assembly, the type of the custom attribute to search for, and an ignored search option.</source>
          <target state="translated">Параметры определяют сборку, тип настраиваемого атрибута для поиска и игнорированный параметр поиска.</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> array that contains the custom attributes of type <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> applied to <ph id="ph3">&lt;paramref name="element" /&gt;</ph>, or an empty array if no such custom attributes exist.</source>
          <target state="translated">Массив <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph>, содержащий настраиваемые атрибуты типа <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph>, примененные к <ph id="ph3">&lt;paramref name="element" /&gt;</ph>, или пустой массив, если таких настраиваемых атрибутов нет.</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)">
          <source>Starting with the .NET Framework version 2.0, this method returns security attributes if the attributes are stored in the new metadata format.</source>
          <target state="translated">Начиная с .NET Framework версии 2.0 этот метод возвращает атрибуты безопасности, если эти атрибуты хранятся в новом формате метаданных.</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)">
          <source>Assemblies compiled with version 2.0 or later use the new format.</source>
          <target state="translated">Новый формат используется для сборок, скомпилированных в версии 2.0 или более поздней версии.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)">
          <source>Dynamic assemblies and assemblies compiled with earlier versions of the .NET Framework use the old XML format.</source>
          <target state="translated">Динамические сборки и сборки, скомпилирована в более ранних версиях платформы .NET Framework используется старый формат XML.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)">
          <source>See <bpt id="p1">[</bpt>Emitting Declarative Security Attributes<ept id="p1">](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5)</ept>.</source>
          <target state="translated">В разделе <bpt id="p1">[</bpt>выпуск декларативных атрибутов безопасности<ept id="p1">](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5)</ept>.</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)">
          <source>The following code example demonstrates the use of <ph id="ph1">&lt;xref:System.Attribute.GetCustomAttributes%2A&gt;</ph>, taking an <ph id="ph2">&lt;xref:System.Reflection.Assembly&gt;</ph> as a parameter.</source>
          <target state="translated">В следующем примере кода показано использование <ph id="ph1">&lt;xref:System.Attribute.GetCustomAttributes%2A&gt;</ph>, принимающий <ph id="ph2">&lt;xref:System.Reflection.Assembly&gt;</ph> как параметр.</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="element" /&gt;</ph> or <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Параметр <ph id="ph1">&lt;paramref name="element" /&gt;</ph> или <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> имеет значение <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="attributeType" /&gt;</ph> is not derived from <ph id="ph2">&lt;see cref="T:System.Attribute" /&gt;</ph>.</source>
          <target state="translated">Тип <ph id="ph1">&lt;paramref name="attributeType" /&gt;</ph> не является производным объекта <ph id="ph2">&lt;see cref="T:System.Attribute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)">
          <source>An object derived from the <ph id="ph1">&lt;see cref="T:System.Reflection.MemberInfo" /&gt;</ph> class that describes a constructor, event, field, method, or property member of a class.</source>
          <target state="translated">Объект, производный от класса <ph id="ph1">&lt;see cref="T:System.Reflection.MemberInfo" /&gt;</ph>, который описывает член класса (конструктор, событие, поле, метод или свойство).</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)">
          <source>The type, or a base type, of the custom attribute to search for.</source>
          <target state="translated">Тип или базовый тип искомого настраиваемого атрибута.</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)">
          <source>If <ph id="ph1">&lt;see langword="true" /&gt;</ph>, specifies to also search the ancestors of <bpt id="p1">&lt;c&gt;</bpt>element<ept id="p1">&lt;/c&gt;</ept> for custom attributes.</source>
          <target state="translated">Если <ph id="ph1">&lt;see langword="true" /&gt;</ph>, задает для настраиваемых атрибутов поиск родительских элементов для <bpt id="p1">&lt;c&gt;</bpt>element<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)">
          <source>Retrieves an array of the custom attributes applied to a member of a type.</source>
          <target state="translated">Извлекает массив настраиваемых атрибутов, примененных к члену типа.</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)">
          <source>Parameters specify the member, the type of the custom attribute to search for, and whether to search ancestors of the member.</source>
          <target state="translated">Параметры определяют член и тип настраиваемого атрибута для поиска и признак поиска родительского элемента члена.</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> array that contains the custom attributes of type <ph id="ph2">&lt;paramref name="type" /&gt;</ph> applied to <ph id="ph3">&lt;paramref name="element" /&gt;</ph>, or an empty array if no such custom attributes exist.</source>
          <target state="translated">Массив <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph>, содержащий настраиваемые атрибуты типа <ph id="ph2">&lt;paramref name="type" /&gt;</ph>, примененные к <ph id="ph3">&lt;paramref name="element" /&gt;</ph>, или пустой массив, если таких настраиваемых атрибутов нет.</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)">
          <source>The return value contains the custom attributes for ancestors of <ph id="ph1">`element`</ph> if <ph id="ph2">`inherit`</ph> is <ph id="ph3">`true`</ph>.</source>
          <target state="translated">Возвращаемое значение содержит пользовательские атрибуты родительских элементов <ph id="ph1">`element`</ph> Если <ph id="ph2">`inherit`</ph> — <ph id="ph3">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)">
          <source>Starting with the .NET Framework version 2.0, this method returns security attributes on methods, constructors, and types if the attributes are stored in the new metadata format.</source>
          <target state="translated">Начиная с .NET Framework версии 2.0 этот метод возвращает атрибуты безопасности для методов, конструкторов и типов, если эти атрибуты хранятся в новом формате метаданных.</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)">
          <source>Assemblies compiled with version 2.0 or later use the new format.</source>
          <target state="translated">Новый формат используется для сборок, скомпилированных в версии 2.0 или более поздней версии.</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)">
          <source>Dynamic assemblies and assemblies compiled with earlier versions of the .NET Framework use the old XML format.</source>
          <target state="translated">Динамические сборки и сборки, скомпилирована в более ранних версиях платформы .NET Framework используется старый формат XML.</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)">
          <source>See <bpt id="p1">[</bpt>Emitting Declarative Security Attributes<ept id="p1">](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5)</ept>.</source>
          <target state="translated">В разделе <bpt id="p1">[</bpt>выпуск декларативных атрибутов безопасности<ept id="p1">](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5)</ept>.</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)">
          <source>The following code example demonstrates the use of <ph id="ph1">&lt;xref:System.Attribute.GetCustomAttributes%2A&gt;</ph>, taking a <ph id="ph2">&lt;xref:System.Reflection.MemberInfo&gt;</ph> as a parameter.</source>
          <target state="translated">В следующем примере кода показано использование <ph id="ph1">&lt;xref:System.Attribute.GetCustomAttributes%2A&gt;</ph>, принимающий <ph id="ph2">&lt;xref:System.Reflection.MemberInfo&gt;</ph> как параметр.</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="element" /&gt;</ph> or <ph id="ph2">&lt;paramref name="type" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Параметр <ph id="ph1">&lt;paramref name="element" /&gt;</ph> или <ph id="ph2">&lt;paramref name="type" /&gt;</ph> имеет значение <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="type" /&gt;</ph> is not derived from <ph id="ph2">&lt;see cref="T:System.Attribute" /&gt;</ph>.</source>
          <target state="translated">Тип <ph id="ph1">&lt;paramref name="type" /&gt;</ph> не является производным объекта <ph id="ph2">&lt;see cref="T:System.Attribute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="element" /&gt;</ph> is not a constructor, method, property, event, type, or field.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="element" /&gt;</ph> не представляет конструктор, метод, свойство, событие, тип или поле.</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)">
          <source>A custom attribute type cannot be loaded.</source>
          <target state="translated">Не удалось загрузить тип настраиваемого атрибута.</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)">
          <source>An object derived from the <ph id="ph1">&lt;see cref="T:System.Reflection.Module" /&gt;</ph> class that describes a portable executable file.</source>
          <target state="translated">Объект, являющийся производным от класса <ph id="ph1">&lt;see cref="T:System.Reflection.Module" /&gt;</ph>, который описывает переносимый исполняемый файл.</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)">
          <source>The type, or a base type, of the custom attribute to search for.</source>
          <target state="translated">Тип или базовый тип искомого настраиваемого атрибута.</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)">
          <source>This parameter is ignored, and does not affect the operation of this method.</source>
          <target state="translated">Этот параметр игнорируется и не влияет на работу данного метода.</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)">
          <source>Retrieves an array of the custom attributes applied to a module.</source>
          <target state="translated">Извлекает массив настраиваемых атрибутов, примененных к модулю.</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)">
          <source>Parameters specify the module, the type of the custom attribute to search for, and an ignored search option.</source>
          <target state="translated">Параметры определяют модуль, тип настраиваемого атрибута для поиска и игнорированный параметр поиска.</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> array that contains the custom attributes of type <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> applied to <ph id="ph3">&lt;paramref name="element" /&gt;</ph>, or an empty array if no such custom attributes exist.</source>
          <target state="translated">Массив <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph>, содержащий настраиваемые атрибуты типа <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph>, примененные к <ph id="ph3">&lt;paramref name="element" /&gt;</ph>, или пустой массив, если таких настраиваемых атрибутов нет.</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)">
          <source>The return value contains the custom attributes for ancestors of <ph id="ph1">`element`</ph> if <ph id="ph2">`inherit`</ph> is <ph id="ph3">`true`</ph>.</source>
          <target state="translated">Возвращаемое значение содержит пользовательские атрибуты родительских элементов <ph id="ph1">`element`</ph> Если <ph id="ph2">`inherit`</ph> — <ph id="ph3">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)">
          <source>The following code example demonstrates the use of <ph id="ph1">&lt;xref:System.Attribute.GetCustomAttributes%2A&gt;</ph>, taking a <ph id="ph2">&lt;xref:System.Reflection.Module&gt;</ph> as a parameter.</source>
          <target state="translated">В следующем примере кода показано использование <ph id="ph1">&lt;xref:System.Attribute.GetCustomAttributes%2A&gt;</ph>, принимающий <ph id="ph2">&lt;xref:System.Reflection.Module&gt;</ph> как параметр.</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="element" /&gt;</ph> or <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Параметр <ph id="ph1">&lt;paramref name="element" /&gt;</ph> или <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> имеет значение <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="attributeType" /&gt;</ph> is not derived from <ph id="ph2">&lt;see cref="T:System.Attribute" /&gt;</ph>.</source>
          <target state="translated">Тип <ph id="ph1">&lt;paramref name="attributeType" /&gt;</ph> не является производным объекта <ph id="ph2">&lt;see cref="T:System.Attribute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)">
          <source>An object derived from the <ph id="ph1">&lt;see cref="T:System.Reflection.ParameterInfo" /&gt;</ph> class that describes a parameter of a member of a class.</source>
          <target state="translated">Объект, являющийся производным от класса <ph id="ph1">&lt;see cref="T:System.Reflection.ParameterInfo" /&gt;</ph>, который описывает параметр члена класса.</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)">
          <source>The type, or a base type, of the custom attribute to search for.</source>
          <target state="translated">Тип или базовый тип искомого настраиваемого атрибута.</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)">
          <source>If <ph id="ph1">&lt;see langword="true" /&gt;</ph>, specifies to also search the ancestors of <bpt id="p1">&lt;c&gt;</bpt>element<ept id="p1">&lt;/c&gt;</ept> for custom attributes.</source>
          <target state="translated">Если <ph id="ph1">&lt;see langword="true" /&gt;</ph>, задает для настраиваемых атрибутов поиск родительских элементов для <bpt id="p1">&lt;c&gt;</bpt>element<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)">
          <source>Retrieves an array of the custom attributes applied to a method parameter.</source>
          <target state="translated">Извлекает массив настраиваемых атрибутов, примененных к параметру метода.</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)">
          <source>Parameters specify the method parameter, the type of the custom attribute to search for, and whether to search ancestors of the method parameter.</source>
          <target state="translated">Параметры определяют параметр метода и тип настраиваемого атрибута для поиска и признак поиска родительского элемента параметра метода.</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> array that contains the custom attributes of type <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> applied to <ph id="ph3">&lt;paramref name="element" /&gt;</ph>, or an empty array if no such custom attributes exist.</source>
          <target state="translated">Массив <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph>, содержащий настраиваемые атрибуты типа <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph>, примененные к <ph id="ph3">&lt;paramref name="element" /&gt;</ph>, или пустой массив, если таких настраиваемых атрибутов нет.</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)">
          <source>If <ph id="ph1">`element`</ph> represents a parameter in a method of a derived type, the return value includes the inheritable custom attributes applied to the same parameter in the overridden base methods.</source>
          <target state="translated">Если <ph id="ph1">`element`</ph> представляет параметр метода производного типа, возвращаемое значение включает наследуемые настраиваемые атрибуты, примененные к тому же параметру в переопределенных базовых методов.</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)">
          <source>The following code example demonstrates the use of <ph id="ph1">&lt;xref:System.Attribute.GetCustomAttributes%2A&gt;</ph>, taking a <ph id="ph2">&lt;xref:System.Reflection.ParameterInfo&gt;</ph> as a parameter.</source>
          <target state="translated">В следующем примере кода показано использование <ph id="ph1">&lt;xref:System.Attribute.GetCustomAttributes%2A&gt;</ph>, принимающий <ph id="ph2">&lt;xref:System.Reflection.ParameterInfo&gt;</ph> как параметр.</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="element" /&gt;</ph> or <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Параметр <ph id="ph1">&lt;paramref name="element" /&gt;</ph> или <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> имеет значение <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="attributeType" /&gt;</ph> is not derived from <ph id="ph2">&lt;see cref="T:System.Attribute" /&gt;</ph>.</source>
          <target state="translated">Тип <ph id="ph1">&lt;paramref name="attributeType" /&gt;</ph> не является производным объекта <ph id="ph2">&lt;see cref="T:System.Attribute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)">
          <source>A custom attribute type cannot be loaded.</source>
          <target state="translated">Не удалось загрузить тип настраиваемого атрибута.</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetHashCode">
          <source>Returns the hash code for this instance.</source>
          <target state="translated">Возвращает хэш-код данного экземпляра.</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" uid="M:System.Attribute.GetHashCode">
          <source>A 32-bit signed integer hash code.</source>
          <target state="translated">Хэш-код в виде 32-разрядного целого числа со знаком.</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.GetHashCode">
          <source>The following code example illustrates the use of <ph id="ph1">&lt;xref:System.Attribute.GetHashCode%2A&gt;</ph> in the context of <ph id="ph2">&lt;xref:System.Attribute&gt;</ph>.</source>
          <target state="translated">В следующем примере кода показано использование <ph id="ph1">&lt;xref:System.Attribute.GetHashCode%2A&gt;</ph> в контексте <ph id="ph2">&lt;xref:System.Attribute&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" uid="M:System.Attribute.IsDefaultAttribute">
          <source>When overridden in a derived class, indicates whether the value of this instance is the default value for the derived class.</source>
          <target state="translated">При переопределении в производном классе указывает, является ли значение этого экземпляра значением по умолчанию для производного класса.</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" uid="M:System.Attribute.IsDefaultAttribute">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if this instance is the default attribute for the class; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Значение <ph id="ph1">&lt;see langword="true" /&gt;</ph>, если этот экземпляр является атрибутом по умолчанию для класса; в противном случае — значение <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.IsDefaultAttribute">
          <source>The default implementation of this class returns <ph id="ph1">`false`</ph>, and must be implemented in the derived class to be useful to that class.</source>
          <target state="translated">Реализация по умолчанию этого класса возвращает <ph id="ph1">`false`</ph>и должен быть реализован в производном классе, чтобы быть полезной для этого класса.</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.IsDefaultAttribute">
          <source>The implementation of this method in a derived class compares the value of this instance to a standard default value, then returns a Boolean value that indicates whether the value of this instance is equal to the standard value.</source>
          <target state="translated">Реализация этого метода в производном классе сравнивает значение данного экземпляра, значение по умолчанию, затем возвращает логическое значение, указывающее, равен ли значение данного экземпляра стандартное значение.</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.IsDefaultAttribute">
          <source>The standard value is typically coded as a constant in the implementation, or stored programmatically in a field used by the implementation.</source>
          <target state="translated">Стандартное значение обычно закодировано как константа в реализации, или программно хранится в поле, используемое для реализации.</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.IsDefaultAttribute">
          <source>The following code example illustrates the use of <ph id="ph1">&lt;xref:System.Attribute.IsDefaultAttribute%2A&gt;</ph>.</source>
          <target state="translated">В следующем примере кода показано использование <ph id="ph1">&lt;xref:System.Attribute.IsDefaultAttribute%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" uid="T:System.Attribute">
          <source>Determines whether any custom attributes of a specified type are applied to an assembly, module, type member, or method parameter.</source>
          <target state="translated">Определяет, применен ли какой-либо настраиваемый атрибут указанного типа к сборке, модулю, члену типа или параметру метода.</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" uid="M:System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)">
          <source>An object derived from the <ph id="ph1">&lt;see cref="T:System.Reflection.Assembly" /&gt;</ph> class that describes a reusable collection of modules.</source>
          <target state="translated">Объект, являющийся производным от класса <ph id="ph1">&lt;see cref="T:System.Reflection.Assembly" /&gt;</ph>, который описывает многократно используемую коллекцию модулей.</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" uid="M:System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)">
          <source>The type, or a base type, of the custom attribute to search for.</source>
          <target state="translated">Тип или базовый тип искомого настраиваемого атрибута.</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" uid="M:System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)">
          <source>Determines whether any custom attributes are applied to an assembly.</source>
          <target state="translated">Определяет, применены ли какие-либо настраиваемые атрибуты к сборке.</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" uid="M:System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)">
          <source>Parameters specify the assembly, and the type of the custom attribute to search for.</source>
          <target state="translated">Параметры определяют сборку и тип настраиваемого атрибута для поиска.</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" uid="M:System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if a custom attribute of type <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> is applied to <ph id="ph3">&lt;paramref name="element" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, если настраиваемый атрибут типа <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> применен к элементу, указанному в параметре <ph id="ph3">&lt;paramref name="element" /&gt;</ph>; в противном случае — <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)">
          <source>Starting with the .NET Framework version 2.0, this method returns <ph id="ph1">`true`</ph> if the assembly has security attributes stored in the new metadata format.</source>
          <target state="translated">Начиная с .NET Framework версии 2.0 этот метод возвращает <ph id="ph1">`true`</ph> , если сборка имеет атрибуты безопасности, которые хранятся в новом формате метаданных.</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)">
          <source>Assemblies compiled with version 2.0 or later use the new format.</source>
          <target state="translated">Новый формат используется для сборок, скомпилированных в версии 2.0 или более поздней версии.</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)">
          <source>Dynamic assemblies and assemblies compiled with earlier versions of the .NET Framework use the old XML format.</source>
          <target state="translated">Динамические сборки и сборки, скомпилирована в более ранних версиях платформы .NET Framework используется старый формат XML.</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)">
          <source>See <bpt id="p1">[</bpt>Emitting Declarative Security Attributes<ept id="p1">](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5)</ept>.</source>
          <target state="translated">В разделе <bpt id="p1">[</bpt>выпуск декларативных атрибутов безопасности<ept id="p1">](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5)</ept>.</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)">
          <source>The following code example illustrates the use of <ph id="ph1">&lt;xref:System.Attribute.IsDefined%2A&gt;</ph>, taking an <ph id="ph2">&lt;xref:System.Reflection.Assembly&gt;</ph> as a parameter.</source>
          <target state="translated">В следующем примере кода показано использование <ph id="ph1">&lt;xref:System.Attribute.IsDefined%2A&gt;</ph>, принимающий <ph id="ph2">&lt;xref:System.Reflection.Assembly&gt;</ph> как параметр.</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" uid="M:System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)">
          <source><ph id="ph1">&lt;paramref name="element" /&gt;</ph> or <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Параметр <ph id="ph1">&lt;paramref name="element" /&gt;</ph> или <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> имеет значение <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" uid="M:System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)">
          <source><ph id="ph1">&lt;paramref name="attributeType" /&gt;</ph> is not derived from <ph id="ph2">&lt;see cref="T:System.Attribute" /&gt;</ph>.</source>
          <target state="translated">Тип <ph id="ph1">&lt;paramref name="attributeType" /&gt;</ph> не является производным объекта <ph id="ph2">&lt;see cref="T:System.Attribute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" uid="M:System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)">
          <source>An object derived from the <ph id="ph1">&lt;see cref="T:System.Reflection.MemberInfo" /&gt;</ph> class that describes a constructor, event, field, method, type, or property member of a class.</source>
          <target state="translated">Объект, производный от класса <ph id="ph1">&lt;see cref="T:System.Reflection.MemberInfo" /&gt;</ph>, описывающий член класса — конструктор, событие, поле, тип, метод или свойство.</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" uid="M:System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)">
          <source>The type, or a base type, of the custom attribute to search for.</source>
          <target state="translated">Тип или базовый тип искомого настраиваемого атрибута.</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" uid="M:System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)">
          <source>Determines whether any custom attributes are applied to a member of a type.</source>
          <target state="translated">Определяет, применены ли какие-либо настраиваемые атрибуты к члену типа.</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" uid="M:System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)">
          <source>Parameters specify the member, and the type of the custom attribute to search for.</source>
          <target state="translated">Параметры определяют член и тип настраиваемого атрибута для поиска.</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" uid="M:System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if a custom attribute of type <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> is applied to <ph id="ph3">&lt;paramref name="element" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, если настраиваемый атрибут типа <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> применен к элементу, указанному в параметре <ph id="ph3">&lt;paramref name="element" /&gt;</ph>; в противном случае — <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)">
          <source>The ancestors of <ph id="ph1">`element`</ph> are searched for custom attributes.</source>
          <target state="translated">Для родительских элементов <ph id="ph1">`element`</ph> осуществляется поиск пользовательских атрибутов.</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)">
          <source>Starting with the .NET Framework version 2.0, this method returns <ph id="ph1">`true`</ph> if a type, method, or constructor has security attributes stored in the new metadata format.</source>
          <target state="translated">Начиная с .NET Framework версии 2.0 этот метод возвращает <ph id="ph1">`true`</ph> Если тип, метод или конструктор имеет атрибуты безопасности, которые хранятся в новом формате метаданных.</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)">
          <source>Assemblies compiled with version 2.0 or later use the new format.</source>
          <target state="translated">Новый формат используется для сборок, скомпилированных в версии 2.0 или более поздней версии.</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)">
          <source>Dynamic assemblies and assemblies compiled with earlier versions of the .NET Framework use the old XML format.</source>
          <target state="translated">Динамические сборки и сборки, скомпилирована в более ранних версиях платформы .NET Framework используется старый формат XML.</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)">
          <source>See <bpt id="p1">[</bpt>Emitting Declarative Security Attributes<ept id="p1">](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5)</ept>.</source>
          <target state="translated">В разделе <bpt id="p1">[</bpt>выпуск декларативных атрибутов безопасности<ept id="p1">](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5)</ept>.</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)">
          <source>The following code example illustrates the use of <ph id="ph1">&lt;xref:System.Attribute.IsDefined%2A&gt;</ph>, taking a <ph id="ph2">&lt;xref:System.Reflection.MemberInfo&gt;</ph> as a parameter.</source>
          <target state="translated">В следующем примере кода показано использование <ph id="ph1">&lt;xref:System.Attribute.IsDefined%2A&gt;</ph>, принимающий <ph id="ph2">&lt;xref:System.Reflection.MemberInfo&gt;</ph> как параметр.</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" uid="M:System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)">
          <source><ph id="ph1">&lt;paramref name="element" /&gt;</ph> or <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Параметр <ph id="ph1">&lt;paramref name="element" /&gt;</ph> или <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> имеет значение <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" uid="M:System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)">
          <source><ph id="ph1">&lt;paramref name="attributeType" /&gt;</ph> is not derived from <ph id="ph2">&lt;see cref="T:System.Attribute" /&gt;</ph>.</source>
          <target state="translated">Тип <ph id="ph1">&lt;paramref name="attributeType" /&gt;</ph> не является производным объекта <ph id="ph2">&lt;see cref="T:System.Attribute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" uid="M:System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)">
          <source><ph id="ph1">&lt;paramref name="element" /&gt;</ph> is not a constructor, method, property, event, type, or field.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="element" /&gt;</ph> не представляет конструктор, метод, свойство, событие, тип или поле.</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" uid="M:System.Attribute.IsDefined(System.Reflection.Module,System.Type)">
          <source>An object derived from the <ph id="ph1">&lt;see cref="T:System.Reflection.Module" /&gt;</ph> class that describes a portable executable file.</source>
          <target state="translated">Объект, являющийся производным от класса <ph id="ph1">&lt;see cref="T:System.Reflection.Module" /&gt;</ph>, который описывает переносимый исполняемый файл.</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" uid="M:System.Attribute.IsDefined(System.Reflection.Module,System.Type)">
          <source>The type, or a base type, of the custom attribute to search for.</source>
          <target state="translated">Тип или базовый тип искомого настраиваемого атрибута.</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" uid="M:System.Attribute.IsDefined(System.Reflection.Module,System.Type)">
          <source>Determines whether any custom attributes of a specified type are applied to a module.</source>
          <target state="translated">Определяет применены ли какие-либо пользовательские атрибуты заданного типа к модулю.</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" uid="M:System.Attribute.IsDefined(System.Reflection.Module,System.Type)">
          <source>Parameters specify the module, and the type of the custom attribute to search for.</source>
          <target state="translated">Параметры определяют модуль и тип настраиваемого атрибута для поиска.</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" uid="M:System.Attribute.IsDefined(System.Reflection.Module,System.Type)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if a custom attribute of type <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> is applied to <ph id="ph3">&lt;paramref name="element" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, если настраиваемый атрибут типа <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> применен к элементу, указанному в параметре <ph id="ph3">&lt;paramref name="element" /&gt;</ph>; в противном случае — <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.IsDefined(System.Reflection.Module,System.Type)">
          <source>The ancestors of <ph id="ph1">`element`</ph> are not searched for custom attributes.</source>
          <target state="translated">Для родительских элементов <ph id="ph1">`element`</ph> не осуществляется поиск настраиваемых атрибутов.</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.IsDefined(System.Reflection.Module,System.Type)">
          <source>The following code example illustrates the use of <ph id="ph1">&lt;xref:System.Attribute.IsDefined%2A&gt;</ph>, taking a <ph id="ph2">&lt;xref:System.Reflection.Module&gt;</ph> as a parameter.</source>
          <target state="translated">В следующем примере кода показано использование <ph id="ph1">&lt;xref:System.Attribute.IsDefined%2A&gt;</ph>, принимающий <ph id="ph2">&lt;xref:System.Reflection.Module&gt;</ph> как параметр.</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" uid="M:System.Attribute.IsDefined(System.Reflection.Module,System.Type)">
          <source><ph id="ph1">&lt;paramref name="element" /&gt;</ph> or <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Параметр <ph id="ph1">&lt;paramref name="element" /&gt;</ph> или <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> имеет значение <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" uid="M:System.Attribute.IsDefined(System.Reflection.Module,System.Type)">
          <source><ph id="ph1">&lt;paramref name="attributeType" /&gt;</ph> is not derived from <ph id="ph2">&lt;see cref="T:System.Attribute" /&gt;</ph>.</source>
          <target state="translated">Тип <ph id="ph1">&lt;paramref name="attributeType" /&gt;</ph> не является производным объекта <ph id="ph2">&lt;see cref="T:System.Attribute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" uid="M:System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)">
          <source>An object derived from the <ph id="ph1">&lt;see cref="T:System.Reflection.ParameterInfo" /&gt;</ph> class that describes a parameter of a member of a class.</source>
          <target state="translated">Объект, являющийся производным от класса <ph id="ph1">&lt;see cref="T:System.Reflection.ParameterInfo" /&gt;</ph>, который описывает параметр члена класса.</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" uid="M:System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)">
          <source>The type, or a base type, of the custom attribute to search for.</source>
          <target state="translated">Тип или базовый тип искомого настраиваемого атрибута.</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" uid="M:System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)">
          <source>Determines whether any custom attributes are applied to a method parameter.</source>
          <target state="translated">Определяет, применены ли какие-либо настраиваемые атрибуты к параметру метода.</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" uid="M:System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)">
          <source>Parameters specify the method parameter, and the type of the custom attribute to search for.</source>
          <target state="translated">Параметры определяют параметр метода и тип настраиваемого атрибута для поиска.</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" uid="M:System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if a custom attribute of type <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> is applied to <ph id="ph3">&lt;paramref name="element" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, если настраиваемый атрибут типа <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> применен к элементу, указанному в параметре <ph id="ph3">&lt;paramref name="element" /&gt;</ph>; в противном случае — <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)">
          <source>The ancestors of <ph id="ph1">`element`</ph> are searched for custom attributes.</source>
          <target state="translated">Для родительских элементов <ph id="ph1">`element`</ph> осуществляется поиск пользовательских атрибутов.</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)">
          <source>The following code example illustrates the use of <ph id="ph1">&lt;xref:System.Attribute.IsDefined%2A&gt;</ph>, taking a <ph id="ph2">&lt;xref:System.Reflection.ParameterInfo&gt;</ph> as a parameter.</source>
          <target state="translated">В следующем примере кода показано использование <ph id="ph1">&lt;xref:System.Attribute.IsDefined%2A&gt;</ph>, принимающий <ph id="ph2">&lt;xref:System.Reflection.ParameterInfo&gt;</ph> как параметр.</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" uid="M:System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)">
          <source><ph id="ph1">&lt;paramref name="element" /&gt;</ph> or <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Параметр <ph id="ph1">&lt;paramref name="element" /&gt;</ph> или <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> имеет значение <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" uid="M:System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)">
          <source><ph id="ph1">&lt;paramref name="attributeType" /&gt;</ph> is not derived from <ph id="ph2">&lt;see cref="T:System.Attribute" /&gt;</ph>.</source>
          <target state="translated">Тип <ph id="ph1">&lt;paramref name="attributeType" /&gt;</ph> не является производным объекта <ph id="ph2">&lt;see cref="T:System.Attribute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" uid="M:System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)">
          <source>An object derived from the <ph id="ph1">&lt;see cref="T:System.Reflection.Assembly" /&gt;</ph> class that describes a reusable collection of modules.</source>
          <target state="translated">Объект, являющийся производным от класса <ph id="ph1">&lt;see cref="T:System.Reflection.Assembly" /&gt;</ph>, который описывает многократно используемую коллекцию модулей.</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" uid="M:System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)">
          <source>The type, or a base type, of the custom attribute to search for.</source>
          <target state="translated">Тип или базовый тип искомого настраиваемого атрибута.</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" uid="M:System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)">
          <source>This parameter is ignored, and does not affect the operation of this method.</source>
          <target state="translated">Этот параметр игнорируется и не влияет на работу данного метода.</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" uid="M:System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)">
          <source>Determines whether any custom attributes are applied to an assembly.</source>
          <target state="translated">Определяет, применены ли какие-либо настраиваемые атрибуты к сборке.</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" uid="M:System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)">
          <source>Parameters specify the assembly, the type of the custom attribute to search for, and an ignored search option.</source>
          <target state="translated">Параметры определяют сборку, тип настраиваемого атрибута для поиска и игнорированный параметр поиска.</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" uid="M:System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if a custom attribute of type <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> is applied to <ph id="ph3">&lt;paramref name="element" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, если настраиваемый атрибут типа <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> применен к элементу, указанному в параметре <ph id="ph3">&lt;paramref name="element" /&gt;</ph>; в противном случае — <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)">
          <source>Starting with the .NET Framework version 2.0, this method returns <ph id="ph1">`true`</ph> if the assembly has security attributes stored in the new metadata format.</source>
          <target state="translated">Начиная с .NET Framework версии 2.0 этот метод возвращает <ph id="ph1">`true`</ph> , если сборка имеет атрибуты безопасности, которые хранятся в новом формате метаданных.</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)">
          <source>Assemblies compiled with version 2.0 or later use the new format.</source>
          <target state="translated">Новый формат используется для сборок, скомпилированных в версии 2.0 или более поздней версии.</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)">
          <source>Dynamic assemblies and assemblies compiled with earlier versions of the .NET Framework use the old XML format.</source>
          <target state="translated">Динамические сборки и сборки, скомпилирована в более ранних версиях платформы .NET Framework используется старый формат XML.</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)">
          <source>See <bpt id="p1">[</bpt>Emitting Declarative Security Attributes<ept id="p1">](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5)</ept>.</source>
          <target state="translated">В разделе <bpt id="p1">[</bpt>выпуск декларативных атрибутов безопасности<ept id="p1">](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5)</ept>.</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)">
          <source>The following code example illustrates the use of <ph id="ph1">&lt;xref:System.Attribute.IsDefined%2A&gt;</ph>, taking an <ph id="ph2">&lt;xref:System.Reflection.Assembly&gt;</ph> as a parameter.</source>
          <target state="translated">В следующем примере кода показано использование <ph id="ph1">&lt;xref:System.Attribute.IsDefined%2A&gt;</ph>, принимающий <ph id="ph2">&lt;xref:System.Reflection.Assembly&gt;</ph> как параметр.</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" uid="M:System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="element" /&gt;</ph> or <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Параметр <ph id="ph1">&lt;paramref name="element" /&gt;</ph> или <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> имеет значение <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" uid="M:System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="attributeType" /&gt;</ph> is not derived from <ph id="ph2">&lt;see cref="T:System.Attribute" /&gt;</ph>.</source>
          <target state="translated">Тип <ph id="ph1">&lt;paramref name="attributeType" /&gt;</ph> не является производным объекта <ph id="ph2">&lt;see cref="T:System.Attribute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" uid="M:System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)">
          <source>An object derived from the <ph id="ph1">&lt;see cref="T:System.Reflection.MemberInfo" /&gt;</ph> class that describes a constructor, event, field, method, type, or property member of a class.</source>
          <target state="translated">Объект, производный от класса <ph id="ph1">&lt;see cref="T:System.Reflection.MemberInfo" /&gt;</ph>, описывающий член класса — конструктор, событие, поле, тип, метод или свойство.</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" uid="M:System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)">
          <source>The type, or a base type, of the custom attribute to search for.</source>
          <target state="translated">Тип или базовый тип искомого настраиваемого атрибута.</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" uid="M:System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)">
          <source>If <ph id="ph1">&lt;see langword="true" /&gt;</ph>, specifies to also search the ancestors of <bpt id="p1">&lt;c&gt;</bpt>element<ept id="p1">&lt;/c&gt;</ept> for custom attributes.</source>
          <target state="translated">Если <ph id="ph1">&lt;see langword="true" /&gt;</ph>, задает для настраиваемых атрибутов поиск родительских элементов для <bpt id="p1">&lt;c&gt;</bpt>element<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" uid="M:System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)">
          <source>Determines whether any custom attributes are applied to a member of a type.</source>
          <target state="translated">Определяет, применены ли какие-либо настраиваемые атрибуты к члену типа.</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" uid="M:System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)">
          <source>Parameters specify the member, the type of the custom attribute to search for, and whether to search ancestors of the member.</source>
          <target state="translated">Параметры определяют член и тип настраиваемого атрибута для поиска и признак поиска родительского элемента члена.</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" uid="M:System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if a custom attribute of type <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> is applied to <ph id="ph3">&lt;paramref name="element" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, если настраиваемый атрибут типа <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> применен к элементу, указанному в параметре <ph id="ph3">&lt;paramref name="element" /&gt;</ph>; в противном случае — <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)">
          <source>Starting with the .NET Framework version 2.0, this method returns <ph id="ph1">`true`</ph> if a type, method, or constructor has security attributes stored in the new metadata format.</source>
          <target state="translated">Начиная с .NET Framework версии 2.0 этот метод возвращает <ph id="ph1">`true`</ph> Если тип, метод или конструктор имеет атрибуты безопасности, которые хранятся в новом формате метаданных.</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)">
          <source>Assemblies compiled with version 2.0 or later use the new format.</source>
          <target state="translated">Новый формат используется для сборок, скомпилированных в версии 2.0 или более поздней версии.</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)">
          <source>Dynamic assemblies and assemblies compiled with earlier versions of the .NET Framework use the old XML format.</source>
          <target state="translated">Динамические сборки и сборки, скомпилирована в более ранних версиях платформы .NET Framework используется старый формат XML.</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)">
          <source>See <bpt id="p1">[</bpt>Emitting Declarative Security Attributes<ept id="p1">](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5)</ept>.</source>
          <target state="translated">В разделе <bpt id="p1">[</bpt>выпуск декларативных атрибутов безопасности<ept id="p1">](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5)</ept>.</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)">
          <source>The following code example illustrates the use of <ph id="ph1">&lt;xref:System.Attribute.IsDefined%2A&gt;</ph>, taking a <ph id="ph2">&lt;xref:System.Reflection.MemberInfo&gt;</ph> as a parameter.</source>
          <target state="translated">В следующем примере кода показано использование <ph id="ph1">&lt;xref:System.Attribute.IsDefined%2A&gt;</ph>, принимающий <ph id="ph2">&lt;xref:System.Reflection.MemberInfo&gt;</ph> как параметр.</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve" uid="M:System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="element" /&gt;</ph> or <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Параметр <ph id="ph1">&lt;paramref name="element" /&gt;</ph> или <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> имеет значение <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve" uid="M:System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="attributeType" /&gt;</ph> is not derived from <ph id="ph2">&lt;see cref="T:System.Attribute" /&gt;</ph>.</source>
          <target state="translated">Тип <ph id="ph1">&lt;paramref name="attributeType" /&gt;</ph> не является производным объекта <ph id="ph2">&lt;see cref="T:System.Attribute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve" uid="M:System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="element" /&gt;</ph> is not a constructor, method, property, event, type, or field.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="element" /&gt;</ph> не представляет конструктор, метод, свойство, событие, тип или поле.</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve" uid="M:System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)">
          <source>An object derived from the <ph id="ph1">&lt;see cref="T:System.Reflection.Module" /&gt;</ph> class that describes a portable executable file.</source>
          <target state="translated">Объект, являющийся производным от класса <ph id="ph1">&lt;see cref="T:System.Reflection.Module" /&gt;</ph>, который описывает переносимый исполняемый файл.</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve" uid="M:System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)">
          <source>The type, or a base type, of the custom attribute to search for.</source>
          <target state="translated">Тип или базовый тип искомого настраиваемого атрибута.</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve" uid="M:System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)">
          <source>This parameter is ignored, and does not affect the operation of this method.</source>
          <target state="translated">Этот параметр игнорируется и не влияет на работу данного метода.</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve" uid="M:System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)">
          <source>Determines whether any custom attributes are applied to a module.</source>
          <target state="translated">Определяет, применены ли какие-либо настраиваемые атрибуты к модулю.</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve" uid="M:System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)">
          <source>Parameters specify the module, the type of the custom attribute to search for, and an ignored search option.</source>
          <target state="translated">Параметры определяют модуль, тип настраиваемого атрибута для поиска и игнорированный параметр поиска.</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve" uid="M:System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if a custom attribute of type <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> is applied to <ph id="ph3">&lt;paramref name="element" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, если настраиваемый атрибут типа <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> применен к элементу, указанному в параметре <ph id="ph3">&lt;paramref name="element" /&gt;</ph>; в противном случае — <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)">
          <source>This method ignores the <ph id="ph1">`inherit`</ph> parameter and does not search the ancestors of <ph id="ph2">`element`</ph> for custom attributes.</source>
          <target state="translated">Этот метод игнорирует <ph id="ph1">`inherit`</ph> параметр и не выполняет поиск родительских элементов <ph id="ph2">`element`</ph> для настраиваемых атрибутов.</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)">
          <source>The following code example illustrates the use of <ph id="ph1">&lt;xref:System.Attribute.IsDefined%2A&gt;</ph>, taking a <ph id="ph2">&lt;xref:System.Reflection.Module&gt;</ph> as a parameter.</source>
          <target state="translated">В следующем примере кода показано использование <ph id="ph1">&lt;xref:System.Attribute.IsDefined%2A&gt;</ph>, принимающий <ph id="ph2">&lt;xref:System.Reflection.Module&gt;</ph> как параметр.</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve" uid="M:System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="element" /&gt;</ph> or <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Параметр <ph id="ph1">&lt;paramref name="element" /&gt;</ph> или <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> имеет значение <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve" uid="M:System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="attributeType" /&gt;</ph> is not derived from <ph id="ph2">&lt;see cref="T:System.Attribute" /&gt;</ph>.</source>
          <target state="translated">Тип <ph id="ph1">&lt;paramref name="attributeType" /&gt;</ph> не является производным объекта <ph id="ph2">&lt;see cref="T:System.Attribute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve" uid="M:System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)">
          <source>An object derived from the <ph id="ph1">&lt;see cref="T:System.Reflection.ParameterInfo" /&gt;</ph> class that describes a parameter of a member of a class.</source>
          <target state="translated">Объект, являющийся производным от класса <ph id="ph1">&lt;see cref="T:System.Reflection.ParameterInfo" /&gt;</ph>, который описывает параметр члена класса.</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve" uid="M:System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)">
          <source>The type, or a base type, of the custom attribute to search for.</source>
          <target state="translated">Тип или базовый тип искомого настраиваемого атрибута.</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve" uid="M:System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)">
          <source>If <ph id="ph1">&lt;see langword="true" /&gt;</ph>, specifies to also search the ancestors of <bpt id="p1">&lt;c&gt;</bpt>element<ept id="p1">&lt;/c&gt;</ept> for custom attributes.</source>
          <target state="translated">Если <ph id="ph1">&lt;see langword="true" /&gt;</ph>, задает для настраиваемых атрибутов поиск родительских элементов для <bpt id="p1">&lt;c&gt;</bpt>element<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve" uid="M:System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)">
          <source>Determines whether any custom attributes are applied to a method parameter.</source>
          <target state="translated">Определяет, применены ли какие-либо настраиваемые атрибуты к параметру метода.</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve" uid="M:System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)">
          <source>Parameters specify the method parameter, the type of the custom attribute to search for, and whether to search ancestors of the method parameter.</source>
          <target state="translated">Параметры определяют параметр метода и тип настраиваемого атрибута для поиска и признак поиска родительского элемента параметра метода.</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve" uid="M:System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if a custom attribute of type <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> is applied to <ph id="ph3">&lt;paramref name="element" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, если настраиваемый атрибут типа <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> применен к элементу, указанному в параметре <ph id="ph3">&lt;paramref name="element" /&gt;</ph>; в противном случае — <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)">
          <source>The following code example illustrates the use of <ph id="ph1">&lt;xref:System.Attribute.IsDefined%2A&gt;</ph>, taking a <ph id="ph2">&lt;xref:System.Reflection.ParameterInfo&gt;</ph> as a parameter.</source>
          <target state="translated">В следующем примере кода показано использование <ph id="ph1">&lt;xref:System.Attribute.IsDefined%2A&gt;</ph>, принимающий <ph id="ph2">&lt;xref:System.Reflection.ParameterInfo&gt;</ph> как параметр.</target>       </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve" uid="M:System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="element" /&gt;</ph> or <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Параметр <ph id="ph1">&lt;paramref name="element" /&gt;</ph> или <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> имеет значение <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve" uid="M:System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="attributeType" /&gt;</ph> is not derived from <ph id="ph2">&lt;see cref="T:System.Attribute" /&gt;</ph>.</source>
          <target state="translated">Тип <ph id="ph1">&lt;paramref name="attributeType" /&gt;</ph> не является производным объекта <ph id="ph2">&lt;see cref="T:System.Attribute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve" uid="M:System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="element" /&gt;</ph> is not a method, constructor, or type.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="element" /&gt;</ph> не является методом, конструктором или типом.</target>       </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve" uid="M:System.Attribute.Match(System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> to compare with this instance of <ph id="ph2">&lt;see cref="T:System.Attribute" /&gt;</ph>.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>, который необходимо сравнить с этим экземпляром <ph id="ph2">&lt;see cref="T:System.Attribute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve" uid="M:System.Attribute.Match(System.Object)">
          <source>When overridden in a derived class, returns a value that indicates whether this instance equals a specified object.</source>
          <target state="translated">При переопределении в производном классе возвращает значение, указывающее, является ли этот экземпляр равным заданному объекту.</target>       </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve" uid="M:System.Attribute.Match(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if this instance equals <ph id="ph2">&lt;paramref name="obj" /&gt;</ph>; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, если этот экземпляр эквивалентен объекту, заданному в параметре <ph id="ph2">&lt;paramref name="obj" /&gt;</ph>; в противном случае — <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.Match(System.Object)">
          <source>This method determines if one <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> equals another.</source>
          <target state="translated">Этот метод определяет, если один <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> равно другой.</target>       </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.Match(System.Object)">
          <source>Its default implementation is the same as <ph id="ph1">&lt;xref:System.Attribute.Equals%2A&gt;</ph>, which determines whether two attributes are of the same type and have the same field values.</source>
          <target state="translated">Его реализация по умолчанию является таким же, как <ph id="ph1">&lt;xref:System.Attribute.Equals%2A&gt;</ph>, которое определяет, имеют ли два атрибута того же типа и имеют те же значения полей.</target>       </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.Match(System.Object)">
          <source>In general, the <ph id="ph1">&lt;xref:System.Attribute.Equals%2A&gt;</ph> method is intended to perform a standard test for reference or value equality.</source>
          <target state="translated">Как правило <ph id="ph1">&lt;xref:System.Attribute.Equals%2A&gt;</ph> метод предназначен для стандартной проверки на равенство значений и ссылок.</target>       </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.Match(System.Object)">
          <source>You can override the <ph id="ph1">&lt;xref:System.Attribute.Match%2A&gt;</ph> method when you want to perform a custom comparison for equality that is based on some criteria other than that two attribute instances are of the same type and have identifical values.</source>
          <target state="translated">Можно переопределить <ph id="ph1">&lt;xref:System.Attribute.Match%2A&gt;</ph> метод, если вы хотите выполнить пользовательское сравнение на равенство, основанный на некоторых условий отличный от экземпляры два атрибута имеют тот же тип и иметь identifical значения.</target>       </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.Match(System.Object)">
          <source>For example, you can override the <ph id="ph1">&lt;xref:System.Attribute.Match%2A&gt;</ph> method to compare attributes in the following scenarios:</source>
          <target state="translated">Например, можно переопределить <ph id="ph1">&lt;xref:System.Attribute.Match%2A&gt;</ph> метод, чтобы сравнить атрибуты в следующих сценариях:</target>       </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.Match(System.Object)">
          <source>An attribute includes a bit field, and you consider two attribute instances equal if a particular bit is set.</source>
          <target state="translated">Атрибут содержит битовое поле, и рассмотрите два атрибута экземпляра равны, если определенный бит устанавливается, совпадают.</target>       </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.Match(System.Object)">
          <source>For example, a <ph id="ph1">`NumericDisplay`</ph> attribute might include a bit field that indicates what numeric formats (such as binary, octal, decimal, and hexadecimal) a client supports.</source>
          <target state="translated">Например <ph id="ph1">`NumericDisplay`</ph> атрибут может включать битовое поле, которое указывает, какие числовых форматов (например, двоичного, восьмеричный, decimal и шестнадцатеричном формате) поддерживает клиент.</target>       </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.Match(System.Object)">
          <source>The overridden <ph id="ph1">&lt;xref:System.Attribute.Match%2A&gt;</ph> method might consider two instances equal if they support the same numeric format.</source>
          <target state="translated">Переопределенный <ph id="ph1">&lt;xref:System.Attribute.Match%2A&gt;</ph> метод рассмотреть два экземпляра равны, если они поддерживают один и тот же числовой формат.</target>       </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.Match(System.Object)">
          <source>An attribute includes multiple fields that contain the same kind of information, or it contains an array in which values can be in any order.</source>
          <target state="translated">Атрибут содержит несколько полей, содержащих одинаковые сведения или он содержит массив, в котором значения могут находиться в любом порядке.</target>       </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.Match(System.Object)">
          <source>For example, an <ph id="ph1">`Author`</ph> attribute might include multiple fields for author names.</source>
          <target state="translated">Например <ph id="ph1">`Author`</ph> атрибут может включать несколько полей для имена авторов.</target>       </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.Match(System.Object)">
          <source>The overridden <ph id="ph1">&lt;xref:System.Attribute.Match%2A&gt;</ph> method might consider two instances equal if they have the same authors regardless of whether each field is equal to the corresponding field.</source>
          <target state="translated">Переопределенный <ph id="ph1">&lt;xref:System.Attribute.Match%2A&gt;</ph> метод рассмотреть два экземпляра равны, если у авторов же независимо от того, каждое поле в соответствующее поле равно совпадают.</target>       </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.Match(System.Object)">
          <source>Example</source>
          <target state="translated">Пример</target>       </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.Match(System.Object)">
          <source>The following example illustrates the use of <ph id="ph1">&lt;xref:System.Attribute.Match%2A&gt;</ph> to create a custom comparison method for attribute values.</source>
          <target state="translated">Следующий пример иллюстрирует использование <ph id="ph1">&lt;xref:System.Attribute.Match%2A&gt;</ph> для создания настраиваемого метода сравнения для значений атрибутов.</target>       </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.Match(System.Object)">
          <source>If defines an <ph id="ph1">`AuthorsAttribute`</ph> that internally contains a <ph id="ph2">`List&lt;String&gt;`</ph> that stores authors' names.</source>
          <target state="translated">Если определяет <ph id="ph1">`AuthorsAttribute`</ph> внутренне, содержащий <ph id="ph2">`List&lt;String&gt;`</ph> , в которых хранятся имена авторов.</target>       </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.Match(System.Object)">
          <source>Because the names can occur in any order in the list, it overrides the <ph id="ph1">&lt;xref:System.Attribute.Match%2A&gt;</ph> method to compare author names regardless of their position in the list.</source>
          <target state="translated">Поскольку имена могут происходить в любом порядке в списке, он переопределяет <ph id="ph1">&lt;xref:System.Attribute.Match%2A&gt;</ph> метод для сравнения имен авторов независимо от их положение в списке.</target>       </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.Match(System.Object)">
          <source>Note the <ph id="ph1">&lt;xref:System.Attribute.Equals%2A&gt;</ph> method, which performs a test for value equality, returns different results from the <ph id="ph2">&lt;xref:System.Attribute.Match%2A&gt;</ph> method.</source>
          <target state="translated">Примечание <ph id="ph1">&lt;xref:System.Attribute.Equals%2A&gt;</ph> метод, который выполняет проверку на равенство значений, возвращает результаты, отличные от <ph id="ph2">&lt;xref:System.Attribute.Match%2A&gt;</ph> метод.</target>       </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve" uid="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)">
          <source>Reserved for future use.</source>
          <target state="translated">Зарезервировано для будущего использования.</target>       </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve" uid="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)">
          <source>Must be IID_NULL.</source>
          <target state="translated">Должно быть равным IID_NULL.</target>       </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve" uid="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)">
          <source>Passed-in array of names to be mapped.</source>
          <target state="translated">Переданный массив имен, которые необходимо сопоставить.</target>       </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve" uid="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)">
          <source>Count of the names to be mapped.</source>
          <target state="translated">Количество сопоставляемых имен.</target>       </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve" uid="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)">
          <source>The locale context in which to interpret the names.</source>
          <target state="translated">Контекст языкового стандарта для интерпретации имен.</target>       </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve" uid="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)">
          <source>Caller-allocated array that receives the IDs corresponding to the names.</source>
          <target state="translated">Массив, зарезервированный вызывающим объектом, куда помещаются идентификаторы, соответствующие именам.</target>       </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve" uid="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)">
          <source>Maps a set of names to a corresponding set of dispatch identifiers.</source>
          <target state="translated">Сопоставляет набор имен соответствующему набору идентификаторов диспетчеризации.</target>       </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Этот метод предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.</target>       </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)">
          <source>For more information about <ph id="ph1">`IDispatch::GetIDsOfNames`</ph>, see the MSDN Library.</source>
          <target state="translated">Дополнительные сведения о <ph id="ph1">`IDispatch::GetIDsOfNames`</ph>, см. в библиотеке MSDN.</target>       </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve" uid="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)">
          <source>Late-bound access using the COM <bpt id="p1">&lt;c&gt;</bpt>IDispatch<ept id="p1">&lt;/c&gt;</ept> interface is not supported.</source>
          <target state="translated">Доступ с поздним связыванием с помощью COM-интерфейса <bpt id="p1">&lt;c&gt;</bpt>IDispatch<ept id="p1">&lt;/c&gt;</ept> не поддерживается.</target>       </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve" uid="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)">
          <source>The type information to return.</source>
          <target state="translated">Возвращаемые сведения о типе.</target>       </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve" uid="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)">
          <source>The locale identifier for the type information.</source>
          <target state="translated">Идентификатор языкового стандарта для сведений о типе.</target>       </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve" uid="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)">
          <source>Receives a pointer to the requested type information object.</source>
          <target state="translated">Получает указатель на объект с запрошенными сведениями о типе.</target>       </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve" uid="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)">
          <source>Retrieves the type information for an object, which can be used to get the type information for an interface.</source>
          <target state="translated">Возвращает сведения о типе объекта, которые можно использовать для получения сведений о типе интерфейса.</target>       </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Этот метод предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.</target>       </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)">
          <source>For more information about <ph id="ph1">`IDispatch::GetTypeInfo`</ph>, see the MSDN Library.</source>
          <target state="translated">Дополнительные сведения о <ph id="ph1">`IDispatch::GetTypeInfo`</ph>, см. в библиотеке MSDN.</target>       </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve" uid="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)">
          <source>Late-bound access using the COM <bpt id="p1">&lt;c&gt;</bpt>IDispatch<ept id="p1">&lt;/c&gt;</ept> interface is not supported.</source>
          <target state="translated">Доступ с поздним связыванием с помощью COM-интерфейса <bpt id="p1">&lt;c&gt;</bpt>IDispatch<ept id="p1">&lt;/c&gt;</ept> не поддерживается.</target>       </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve" uid="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)">
          <source>Points to a location that receives the number of type information interfaces provided by the object.</source>
          <target state="translated">Указатель, по которому записывается число предоставляемых объектом интерфейсов, предназначенных для получения сведений о типе.</target>       </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve" uid="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)">
          <source>Retrieves the number of type information interfaces that an object provides (either 0 or 1).</source>
          <target state="translated">Возвращает количество предоставляемых объектом интерфейсов для доступа к сведениям о типе (0 или 1).</target>       </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Этот метод предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.</target>       </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)">
          <source>For more information about <ph id="ph1">`IDispatch::GetTypeInfoCount`</ph>, see the MSDN Library.</source>
          <target state="translated">Дополнительные сведения о <ph id="ph1">`IDispatch::GetTypeInfoCount`</ph>, см. в библиотеке MSDN.</target>       </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve" uid="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)">
          <source>Late-bound access using the COM <bpt id="p1">&lt;c&gt;</bpt>IDispatch<ept id="p1">&lt;/c&gt;</ept> interface is not supported.</source>
          <target state="translated">Доступ с поздним связыванием с помощью COM-интерфейса <bpt id="p1">&lt;c&gt;</bpt>IDispatch<ept id="p1">&lt;/c&gt;</ept> не поддерживается.</target>       </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve" uid="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
          <source>Identifies the member.</source>
          <target state="translated">Идентифицирует член.</target>       </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve" uid="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
          <source>Reserved for future use.</source>
          <target state="translated">Зарезервировано для будущего использования.</target>       </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve" uid="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
          <source>Must be IID_NULL.</source>
          <target state="translated">Должно быть равным IID_NULL.</target>       </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve" uid="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
          <source>The locale context in which to interpret arguments.</source>
          <target state="translated">Контекст языкового стандарта, в котором следует интерпретировать аргументы.</target>       </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve" uid="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
          <source>Flags describing the context of the call.</source>
          <target state="translated">Флаги, описывающие контекст вызова.</target>       </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve" uid="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
          <source>Pointer to a structure containing an array of arguments, an array of argument DISPIDs for named arguments, and counts for the number of elements in the arrays.</source>
          <target state="translated">Указатель на структуру, содержащую массив аргументов, массив DISPID для именованных аргументов, а также счетчики количества элементов в массивах.</target>       </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve" uid="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
          <source>Pointer to the location where the result is to be stored.</source>
          <target state="translated">Указатель, по которому будет сохранен результат.</target>       </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve" uid="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
          <source>Pointer to a structure that contains exception information.</source>
          <target state="translated">Указатель на структуру, содержащую сведения об исключении.</target>       </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve" uid="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
          <source>The index of the first argument that has an error.</source>
          <target state="translated">Индекс первого аргумента, вызвавшего ошибку.</target>       </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve" uid="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
          <source>Provides access to properties and methods exposed by an object.</source>
          <target state="translated">Предоставляет доступ к открытым свойствам и методам объекта.</target>       </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Этот метод предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.</target>       </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
          <source>For more information about <ph id="ph1">`IDispatch::Invoke`</ph>, see the MSDN Library.</source>
          <target state="translated">Дополнительные сведения о <ph id="ph1">`IDispatch::Invoke`</ph>, см. в библиотеке MSDN.</target>       </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve" uid="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
          <source>Late-bound access using the COM <bpt id="p1">&lt;c&gt;</bpt>IDispatch<ept id="p1">&lt;/c&gt;</ept> interface is not supported.</source>
          <target state="translated">Доступ с поздним связыванием с помощью COM-интерфейса <bpt id="p1">&lt;c&gt;</bpt>IDispatch<ept id="p1">&lt;/c&gt;</ept> не поддерживается.</target>       </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve" uid="P:System.Attribute.TypeId">
          <source>When implemented in a derived class, gets a unique identifier for this <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph>.</source>
          <target state="translated">В случае реализации в производном классе возвращает уникальный идентификатор для этого атрибута <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Attribute.TypeId">
          <source>An <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> that is a unique identifier for the attribute.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>, являющийся уникальным идентификатором атрибута.</target>       </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Attribute.TypeId">
          <source>As implemented, this identifier is merely the <ph id="ph1">&lt;xref:System.Type&gt;</ph> of the attribute.</source>
          <target state="translated">Реализация этого идентификатора представляет просто <ph id="ph1">&lt;xref:System.Type&gt;</ph> атрибута.</target>       </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Attribute.TypeId">
          <source>However, it is intended that the unique identifier be used to identify two attributes of the same type.</source>
          <target state="translated">Однако предполагается, что уникальный идентификатор используется для определения двух атрибутов одного типа.</target>       </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Attribute.TypeId">
          <source>The following code example implements the <ph id="ph1">&lt;xref:System.Attribute.TypeId%2A&gt;</ph> property in a custom parameter <ph id="ph2">&lt;xref:System.Attribute&gt;</ph> class and shows its use.</source>
          <target state="translated">Следующий пример кода реализует <ph id="ph1">&lt;xref:System.Attribute.TypeId%2A&gt;</ph> свойства в пользовательский параметр <ph id="ph2">&lt;xref:System.Attribute&gt;</ph> класса и показывает его использования.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>