<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="Base64FormattingOptions.xml" source-language="en-US" target-language="ru-RU">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5bf1895ccae5afd78294487563647fd47661be95b.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">bf1895ccae5afd78294487563647fd47661be95b</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Base64FormattingOptions">
          <source>Specifies whether relevant <ph id="ph1">&lt;see cref="Overload:System.Convert.ToBase64CharArray" /&gt;</ph> and <ph id="ph2">&lt;see cref="Overload:System.Convert.ToBase64String" /&gt;</ph> methods insert line breaks in their output.</source>
          <target state="translated">Указывает, вставляют ли соответствующие методы <ph id="ph1">&lt;see cref="Overload:System.Convert.ToBase64CharArray" /&gt;</ph> и <ph id="ph2">&lt;see cref="Overload:System.Convert.ToBase64String" /&gt;</ph> символы разрыва строки в свои результаты.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Base64FormattingOptions">
          <source>The <ph id="ph1">&lt;xref:System.Convert.ToBase64CharArray%2A?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Convert.ToBase64String%2A?displayProperty=nameWithType&gt;</ph> methods convert the value of an array of 8-bit unsigned integers to an equivalent string representation that consists of base 64 digits.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Convert.ToBase64CharArray%2A?displayProperty=nameWithType&gt;</ph> И <ph id="ph2">&lt;xref:System.Convert.ToBase64String%2A?displayProperty=nameWithType&gt;</ph> методы преобразуют значение массива 8-разрядных целых чисел без знака в эквивалентное строковое представление, состоящее из первых 64 символов.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Base64FormattingOptions">
          <source>The string representation can contain one or more line breaks, where a line break is defined as a carriage return character (U+000D) followed by a line feed character (U+000A).</source>
          <target state="translated">Строковое представление может содержать один или несколько символов разрыва строки, где символ новой строки определяется как каретки возвращать символ (U + 000D) и символом (U + 000A) перевода строки.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Base64FormattingOptions">
          <source>Because line breaks are considered whitespace characters in a base-64 encoding, they are ignored when converting a base-64 encoded string back to a byte array.</source>
          <target state="translated">Так как разрывы строки рассматриваются как символы пробела в кодировке base-64, они учитываются при преобразовании base-64 кодированную строку обратно в массив байтов.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Base64FormattingOptions">
          <source>The line breaks are simply convenient when displaying the encoded string to a control or a device such as a console window.</source>
          <target state="translated">Разрывы строки просто удобны при отображении закодированную строку к элементу управления или устройство, такое как окно консоли.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Base64FormattingOptions">
          <source>The None and InsertLineBreaks values are mutually exclusive.</source>
          <target state="translated">None и InsertLineBreaks значения являются взаимно исключающими.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Base64FormattingOptions">
          <source>Therefore, although the <ph id="ph1">&lt;xref:System.Base64FormattingOptions.None?displayProperty=nameWithType&gt;</ph> enumeration is marked with the <ph id="ph2">&lt;xref:System.FlagsAttribute&gt;</ph> attribute, it makes no sense to perform a bitwise combination of these two values.</source>
          <target state="translated">Таким образом несмотря на то что <ph id="ph1">&lt;xref:System.Base64FormattingOptions.None?displayProperty=nameWithType&gt;</ph> перечисление помечено атрибутом <ph id="ph2">&lt;xref:System.FlagsAttribute&gt;</ph> атрибута, то нет смысла выполнять побитовое сочетание этих двух значений.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Base64FormattingOptions">
          <source>The following example calls the <ph id="ph1">&lt;xref:System.Convert.ToBase64String%28System.Byte%5B%5D%2CSystem.Base64FormattingOptions%29?displayProperty=nameWithType&gt;</ph> with a InsertLineBreaks argument to insert line breaks in the string that is produced by encoding a 100-element byte array.</source>
          <target state="translated">В следующем примере вызывается <ph id="ph1">&lt;xref:System.Convert.ToBase64String%28System.Byte%5B%5D%2CSystem.Base64FormattingOptions%29?displayProperty=nameWithType&gt;</ph> с InsertLineBreaks разрывы аргумент, чтобы вставить строку в строку, полученных при кодировании 100-элементного байтового массива.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Base64FormattingOptions">
          <source>As the output from the example shows, the <ph id="ph1">&lt;xref:System.Convert.FromBase64String%2A?displayProperty=nameWithType&gt;</ph> succeeds in restoring the original byte array; the line break characters are ignored during the conversion.</source>
          <target state="translated">Как видно в результатах показано в примере <ph id="ph1">&lt;xref:System.Convert.FromBase64String%2A?displayProperty=nameWithType&gt;</ph> успешно восстановление исходного массива байтов; символы разрыва строки учитываются во время преобразования.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="F:System.Base64FormattingOptions.InsertLineBreaks">
          <source>Inserts line breaks after every 76 characters in the string representation.</source>
          <target state="translated">Вставляет разрывы строк после каждых 76 символов в строковом представлении.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="F:System.Base64FormattingOptions.None">
          <source>Does not insert line breaks after every 76 characters in the string representation.</source>
          <target state="translated">Не вставляет разрывы строк после каждых 76 символов в строковом представлении.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>