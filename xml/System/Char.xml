<Type Name="Char" FullName="System.Char">
  <TypeSignature Language="C#" Value="public struct Char : IComparable, IComparable&lt;char&gt;, IConvertible, IEquatable&lt;char&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable sealed beforefieldinit char extends System.ValueType implements class System.IComparable, class System.IComparable`1&lt;char&gt;, class System.IConvertible, class System.IEquatable`1&lt;char&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Char" />
  <TypeSignature Language="VB.NET" Value="Public Structure Char&#xA;Implements IComparable, IComparable(Of Char), IConvertible, IEquatable(Of Char)" />
  <TypeSignature Language="C++ CLI" Value="public value class Char : IComparable, IComparable&lt;char&gt;, IConvertible, IEquatable&lt;char&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IComparable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IComparable&lt;System.Char&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IConvertible</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Char&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="02b23-101">Представляет символ как элемент кода UTF-16.</span><span class="sxs-lookup"><span data-stu-id="02b23-101">Represents a character as a UTF-16 code unit.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02b23-102">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] Использует <xref:System.Char> структуры для представления символа Юникода.</span><span class="sxs-lookup"><span data-stu-id="02b23-102">The [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] uses the <xref:System.Char> structure to represent a Unicode character.</span></span> <span data-ttu-id="02b23-103">В стандарте Юникода идентифицирует каждый символ Юникода с уникальным 21-Битовая скалярным числом, называемым кодовой точкой и определяет форму кодировки UTF-16, указывающее, кодируется как кодовую точку в последовательность 16-разрядных значений одного или нескольких.</span><span class="sxs-lookup"><span data-stu-id="02b23-103">The Unicode Standard identifies each Unicode character with a unique 21-bit scalar number called a code point, and defines the UTF-16 encoding form that specifies how a code point is encoded into a sequence of one or more 16-bit values.</span></span> <span data-ttu-id="02b23-104">Каждый 16-битовое значение лежит в диапазоне от шестнадцатеричное 0x0000 до 0xFFFF и хранится в <xref:System.Char> структуры.</span><span class="sxs-lookup"><span data-stu-id="02b23-104">Each 16-bit value ranges from hexadecimal 0x0000 through 0xFFFF and is stored in a <xref:System.Char> structure.</span></span>  <span data-ttu-id="02b23-105">Значение <xref:System.Char> объекта является его значение в 16-разрядное числовое (порядковый номер).</span><span class="sxs-lookup"><span data-stu-id="02b23-105">The value of a <xref:System.Char> object is its 16-bit numeric (ordinal) value.</span></span>  
  
 <span data-ttu-id="02b23-106">В следующих подразделах подробно связь между <xref:System.Char> объекта и символа и рассматриваются некоторые общие задачи, выполняемые с <xref:System.Char> экземпляров.</span><span class="sxs-lookup"><span data-stu-id="02b23-106">The following sections examine the relationship between a <xref:System.Char> object and a character and discuss some common tasks performed with <xref:System.Char> instances.</span></span>  
  
 <span data-ttu-id="02b23-107">[Char-строки, объекты и символы Юникода](#Relationship) </span><span class="sxs-lookup"><span data-stu-id="02b23-107">[Char objects, Unicode characters, and strings](#Relationship) </span></span>  
 <span data-ttu-id="02b23-108">[Символы и категории символов](#Categories) </span><span class="sxs-lookup"><span data-stu-id="02b23-108">[Characters and character categories](#Categories) </span></span>  
 <span data-ttu-id="02b23-109">[Символы и текстовые элементы](#Elements) </span><span class="sxs-lookup"><span data-stu-id="02b23-109">[Characters and text elements](#Elements) </span></span>  
 <span data-ttu-id="02b23-110">[Стандартные операции](#Operations) </span><span class="sxs-lookup"><span data-stu-id="02b23-110">[Common operations](#Operations) </span></span>  
 [<span data-ttu-id="02b23-111">Значения Char и взаимодействия</span><span class="sxs-lookup"><span data-stu-id="02b23-111">Char values and interop</span></span>](#Interop)  
  
<a name="Relationship"></a>   
## <a name="char-objects-unicode-characters-and-strings"></a><span data-ttu-id="02b23-112">Char-строки, объекты и символы Юникода</span><span class="sxs-lookup"><span data-stu-id="02b23-112">Char objects, Unicode characters, and strings</span></span>  
 <span data-ttu-id="02b23-113">Объект <xref:System.String> объект является упорядоченной коллекции <xref:System.Char> структуры, представляющих строку текста.</span><span class="sxs-lookup"><span data-stu-id="02b23-113">A <xref:System.String> object is a sequential collection of <xref:System.Char> structures that represents a string of text.</span></span> <span data-ttu-id="02b23-114">Большинство символов Юникода может быть представлен один <xref:System.Char> объекта, но символ, который кодируется как базового символа, суррогатная пара или объединенная последовательность символов представляется с помощью нескольких <xref:System.Char> объектов.</span><span class="sxs-lookup"><span data-stu-id="02b23-114">Most Unicode characters can be represented by a single <xref:System.Char> object, but a character that is encoded as a base character, surrogate pair, and/or combining character sequence is represented by multiple <xref:System.Char> objects.</span></span> <span data-ttu-id="02b23-115">По этой причине <xref:System.Char> структуры в <xref:System.String> объекта не обязательно эквивалентен одного символа Юникода.</span><span class="sxs-lookup"><span data-stu-id="02b23-115">For this reason, a <xref:System.Char> structure in a <xref:System.String> object is not necessarily equivalent to a single Unicode character.</span></span>  
  
 <span data-ttu-id="02b23-116">Несколько блоков 16-разрядного кода используются для представления одного символа Юникода в следующих случаях:</span><span class="sxs-lookup"><span data-stu-id="02b23-116">Multiple 16-bit code units are used to represent single Unicode characters in the following cases:</span></span>  
  
-   <span data-ttu-id="02b23-117">Глифы, которые может содержать один символ или базового символа, за которыми следует один или несколько символов объединения.</span><span class="sxs-lookup"><span data-stu-id="02b23-117">Glyphs, which may consist of a single character or of a base character followed by one or more combining characters.</span></span> <span data-ttu-id="02b23-118">Например, символ ä представляется одним a <xref:System.Char> объекта, код которого измеряются U + 0061 следуют a <xref:System.Char> объект которого единицы кода, U + 0308.</span><span class="sxs-lookup"><span data-stu-id="02b23-118">For example, the character ä is represented by a <xref:System.Char> object whose code unit is U+0061 followed by a <xref:System.Char> object whose code unit is U+0308.</span></span> <span data-ttu-id="02b23-119">(Знаку также определяются один объект <xref:System.Char> объекта, имеющего единицы кода типа U + 00E4.) В следующем примере показано, что знаку состоит из двух <xref:System.Char> объектов.</span><span class="sxs-lookup"><span data-stu-id="02b23-119">(The character ä can also be defined by a single <xref:System.Char> object that has a code unit of U+00E4.) The following example illustrates that the character ä consists of two <xref:System.Char> objects.</span></span>  
  
     [!code-csharp[System.Char.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.char.class/cs/grapheme1.cs#1)]
     [!code-vb[System.Char.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.char.class/vb/grapheme1.vb#1)]  
  
-   <span data-ttu-id="02b23-120">Символы вне Basic Юникода многоязычное поле (BMP).</span><span class="sxs-lookup"><span data-stu-id="02b23-120">Characters outside the Unicode Basic Multilingual Plane (BMP).</span></span> <span data-ttu-id="02b23-121">Юникод поддерживает шестнадцать плоскости помимо BMP, который представляет плоскость 0.</span><span class="sxs-lookup"><span data-stu-id="02b23-121">Unicode supports sixteen planes in addition to the BMP, which represents plane 0.</span></span> <span data-ttu-id="02b23-122">Кодовую точку Юникода в UTF-32 представлен 21-Битовая значением, которое содержит плоскость.</span><span class="sxs-lookup"><span data-stu-id="02b23-122">A Unicode code point is represented in UTF-32 by a 21-bit value that includes the plane.</span></span> <span data-ttu-id="02b23-123">Например U + 1D160 представляет символ МУЗЫКАЛЬНЫЕ Примечание ВОСЬМОЙ символ.</span><span class="sxs-lookup"><span data-stu-id="02b23-123">For example, U+1D160 represents the MUSICAL SYMBOL EIGHTH NOTE character.</span></span> <span data-ttu-id="02b23-124">Так как кодировка UTF-16 только 16 бит, символы за пределами BMP, представляются суррогатной пары в кодировке UTF-16.</span><span class="sxs-lookup"><span data-stu-id="02b23-124">Because UTF-16 encoding has only 16 bits, characters outside the BMP are represented by surrogate pairs in UTF-16.</span></span> <span data-ttu-id="02b23-125">Следующий пример показывает, что эквивалентно U + 1D160, символ МУЗЫКАЛЬНЫЕ Примечание ВОСЬМОЙ символ UTF-32, U + D834 U + DD60.</span><span class="sxs-lookup"><span data-stu-id="02b23-125">The following example illustrates that the UTF-32 equivalent of U+1D160, the MUSICAL SYMBOL EIGHTH NOTE character, is U+D834 U+DD60.</span></span> <span data-ttu-id="02b23-126">U + D834 является старшим символом-заместителем; символы-заместители высокого уровня в диапазоне от U + D800 до U + DBFF.</span><span class="sxs-lookup"><span data-stu-id="02b23-126">U+D834 is the high surrogate; high surrogates range from U+D800 through U+DBFF.</span></span> <span data-ttu-id="02b23-127">U + DD60 является младшим символом-заместителем; низкий суррогаты в диапазоне от U + DC00 до U + DFFF.</span><span class="sxs-lookup"><span data-stu-id="02b23-127">U+DD60 is the low surrogate; low surrogates range from U+DC00 through U+DFFF.</span></span>  
  
     [!code-csharp[System.Char.Class#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.char.class/cs/surrogate1.cs#2)]
     [!code-vb[System.Char.Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.char.class/vb/surrogate1.vb#2)]  
  
<a name="Categories"></a>   
## <a name="characters-and-character-categories"></a><span data-ttu-id="02b23-128">Символы и категории символов</span><span class="sxs-lookup"><span data-stu-id="02b23-128">Characters and character categories</span></span>  
 <span data-ttu-id="02b23-129">Каждый символ Юникода или допустимую суррогатную пару принадлежит к категории Юникода.</span><span class="sxs-lookup"><span data-stu-id="02b23-129">Each Unicode character or valid surrogate pair belongs to a Unicode category.</span></span> <span data-ttu-id="02b23-130">В платформе .NET Framework категории Юникода представлены члены <xref:System.Globalization.UnicodeCategory> перечисления и содержат значения, такие как <xref:System.Globalization.UnicodeCategory.CurrencySymbol?displayProperty=nameWithType>, <xref:System.Globalization.UnicodeCategory.LowercaseLetter?displayProperty=nameWithType>, и <xref:System.Globalization.UnicodeCategory.SpaceSeparator?displayProperty=nameWithType>, например.</span><span class="sxs-lookup"><span data-stu-id="02b23-130">In the .NET Framework, Unicode categories are represented by members of the <xref:System.Globalization.UnicodeCategory> enumeration and include values such as <xref:System.Globalization.UnicodeCategory.CurrencySymbol?displayProperty=nameWithType>, <xref:System.Globalization.UnicodeCategory.LowercaseLetter?displayProperty=nameWithType>, and <xref:System.Globalization.UnicodeCategory.SpaceSeparator?displayProperty=nameWithType>, for example.</span></span>  
  
 <span data-ttu-id="02b23-131">Чтобы определить категорию Юникода для символа, вызовите <xref:System.Char.GetUnicodeCategory%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="02b23-131">To determine the Unicode category of a character, you call the <xref:System.Char.GetUnicodeCategory%2A> method.</span></span> <span data-ttu-id="02b23-132">Например, в следующем примере вызывается <xref:System.Char.GetUnicodeCategory%2A> для отображения категорию Юникода каждого символа в строке.</span><span class="sxs-lookup"><span data-stu-id="02b23-132">For example, the following example calls the <xref:System.Char.GetUnicodeCategory%2A> to display the Unicode category of each character in a string.</span></span>  
  
 [!code-csharp[System.Char.Class#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.char.class/cs/GetUnicodeCategory3.cs#6)]
 [!code-vb[System.Char.Class#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.char.class/vb/GetUnicodeCategory3.vb#6)]  
  
 <span data-ttu-id="02b23-133">На внутреннем уровне для символы вне диапазона ASCII (U + 0000 до U + 00FF) <xref:System.Char.GetUnicodeCategory%2A> метод зависит от категории Юникода, о которых сообщили <xref:System.Globalization.CharUnicodeInfo> класса.</span><span class="sxs-lookup"><span data-stu-id="02b23-133">Internally, for characters outside the ASCII range (U+0000 through U+00FF), the <xref:System.Char.GetUnicodeCategory%2A> method depends on Unicode categories reported by the <xref:System.Globalization.CharUnicodeInfo> class.</span></span> <span data-ttu-id="02b23-134">Начиная с [!INCLUDE[net_v462](~/includes/net-v462-md.md)], классифицированных символов Юникода на основе [Юникод, версия 8.0.0](http://www.unicode.org/versions/Unicode8.0.0/).</span><span class="sxs-lookup"><span data-stu-id="02b23-134">Starting with the [!INCLUDE[net_v462](~/includes/net-v462-md.md)], Unicode characters are classified based on [The Unicode Standard, Version 8.0.0](http://www.unicode.org/versions/Unicode8.0.0/).</span></span> <span data-ttu-id="02b23-135">В версиях .NET Framework из [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] для [!INCLUDE[net_v461](~/includes/net-v461-md.md)], они попадают на основе [Юникод, версия 6.3.0](http://www.unicode.org/versions/Unicode6.3.0/).</span><span class="sxs-lookup"><span data-stu-id="02b23-135">In versions of the .NET Framework from the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] to  the [!INCLUDE[net_v461](~/includes/net-v461-md.md)], they are classified based on [The Unicode Standard, Version 6.3.0](http://www.unicode.org/versions/Unicode6.3.0/).</span></span>  
  
<a name="Elements"></a>   
## <a name="characters-and-text-elements"></a><span data-ttu-id="02b23-136">Символы и текстовые элементы</span><span class="sxs-lookup"><span data-stu-id="02b23-136">Characters and text elements</span></span>  
 <span data-ttu-id="02b23-137">Так как один символ может быть представлена на нескольких <xref:System.Char> объектов, не всегда может применяться для работы с отдельными <xref:System.Char> объектов.</span><span class="sxs-lookup"><span data-stu-id="02b23-137">Because a single character can be represented by multiple <xref:System.Char> objects, it is not always meaningful to work with individual <xref:System.Char> objects.</span></span> <span data-ttu-id="02b23-138">Например в следующем примере преобразуется кодовые точки Юникода, которые представляют Aegean цифры 0 – 9 для частей кода в кодировке UTF-16.</span><span class="sxs-lookup"><span data-stu-id="02b23-138">For instance, the following example converts the Unicode code points that represent the Aegean numbers zero through 9 to UTF-16 encoded code units.</span></span> <span data-ttu-id="02b23-139">Так как ошибочно означает <xref:System.Char> объектов с символами, неправильно сообщает, что результирующая строка содержит 20 символов.</span><span class="sxs-lookup"><span data-stu-id="02b23-139">Because it erroneously equates <xref:System.Char> objects with characters, it inaccurately reports that the resulting string has 20 characters.</span></span>  
  
 [!code-csharp[System.Char.Class#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.char.class/cs/textelements2.cs#3)]
 [!code-vb[System.Char.Class#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.char.class/vb/textelements2.vb#3)]  
  
 <span data-ttu-id="02b23-140">Необходимо выполнить следующие действия, чтобы избежать предположения о том, <xref:System.Char> представляет один символ.</span><span class="sxs-lookup"><span data-stu-id="02b23-140">You can do the following to avoid the assumption that a <xref:System.Char> object represents a single character.</span></span>  
  
-   <span data-ttu-id="02b23-141">Вы можете работать с <xref:System.String> объект целиком вместо работы с его отдельных символов для представления и анализировать лингвистического содержимого.</span><span class="sxs-lookup"><span data-stu-id="02b23-141">You can work with a <xref:System.String> object in its entirety instead of working with its individual characters to represent and analyze linguistic content.</span></span>  
  
-   <span data-ttu-id="02b23-142">Можно использовать <xref:System.Globalization.StringInfo> класс для работы с элементами текста вместо отдельных <xref:System.Char> объектов.</span><span class="sxs-lookup"><span data-stu-id="02b23-142">You can use the <xref:System.Globalization.StringInfo> class to work with text elements instead of individual <xref:System.Char> objects.</span></span> <span data-ttu-id="02b23-143">В следующем примере используется <xref:System.Globalization.StringInfo> объекта для подсчета числа элементов текста в строке, которая состоит из Aegean порядковые номера от нуля до девяти.</span><span class="sxs-lookup"><span data-stu-id="02b23-143">The following example uses the <xref:System.Globalization.StringInfo> object to count the number of text elements in a string that consists of the Aegean numbers zero through nine.</span></span> <span data-ttu-id="02b23-144">Так как он считает, что пара символов-заместителей один символ, неправильно сообщает, строка содержит десять символов.</span><span class="sxs-lookup"><span data-stu-id="02b23-144">Because it considers a surrogate pair a single character, it correctly reports that the string contains ten characters.</span></span>  
  
     [!code-csharp[System.Char.Class#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.char.class/cs/textelements2a.cs#4)]
     [!code-vb[System.Char.Class#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.char.class/vb/textelements2a.vb#4)]  
  
-   <span data-ttu-id="02b23-145">Если строка содержит базовый символ, который имеет один или несколько символов объединения, можно вызвать <xref:System.String.Normalize%2A?displayProperty=nameWithType> метод преобразования подстроки в единый блок кода в кодировке UTF-16.</span><span class="sxs-lookup"><span data-stu-id="02b23-145">If a string contains a base character that has one or more combining characters, you can call the <xref:System.String.Normalize%2A?displayProperty=nameWithType> method to convert the substring to a single UTF-16 encoded code unit.</span></span> <span data-ttu-id="02b23-146">В следующем примере вызывается <xref:System.String.Normalize%2A?displayProperty=nameWithType> способов преобразования базового символа 0061 (латинскую букву A) и несамостоятельный знак 0308 (ОБЪЕДИНЕНИЕ DIAERESIS) U + 00E4 (ЛАТИНИЦА НЕБОЛЬШОЙ буквы с DIAERESIS).</span><span class="sxs-lookup"><span data-stu-id="02b23-146">The following example calls the <xref:System.String.Normalize%2A?displayProperty=nameWithType> method to convert the base character U+0061 (LATIN SMALL LETTER A) and combining character U+0308 (COMBINING DIAERESIS) to U+00E4 (LATIN SMALL LETTER A WITH DIAERESIS).</span></span>  
  
     [!code-csharp[System.Char.Class#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.char.class/cs/normalized.cs#5)]
     [!code-vb[System.Char.Class#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.char.class/vb/normalized.vb#5)]  
  
<a name="Operations"></a>   
## <a name="common-operations"></a><span data-ttu-id="02b23-147">Стандартные операции</span><span class="sxs-lookup"><span data-stu-id="02b23-147">Common operations</span></span>  
 <span data-ttu-id="02b23-148"><xref:System.Char> Структура предоставляет методы для сравнения <xref:System.Char> объектов, преобразуйте значение текущей <xref:System.Char> объекта на объект другого типа и определить категорию Юникода для <xref:System.Char> объекта:</span><span class="sxs-lookup"><span data-stu-id="02b23-148">The <xref:System.Char> structure provides methods to compare <xref:System.Char> objects, convert the value of the current <xref:System.Char> object to an object of another type, and determine the Unicode category of a <xref:System.Char> object:</span></span>  
  
|<span data-ttu-id="02b23-149">Действие</span><span class="sxs-lookup"><span data-stu-id="02b23-149">To do this</span></span>|<span data-ttu-id="02b23-150">Используйте эти `System.Char` методы</span><span class="sxs-lookup"><span data-stu-id="02b23-150">Use these `System.Char` methods</span></span>|  
|----------------|-------------------------------------|  
|<span data-ttu-id="02b23-151">Сравнение <xref:System.Char> объектов</span><span class="sxs-lookup"><span data-stu-id="02b23-151">Compare <xref:System.Char> objects</span></span>|<span data-ttu-id="02b23-152"><xref:System.Char.CompareTo%2A> и <xref:System.Char.Equals%2A>.</span><span class="sxs-lookup"><span data-stu-id="02b23-152"><xref:System.Char.CompareTo%2A> and <xref:System.Char.Equals%2A></span></span>|  
|<span data-ttu-id="02b23-153">Преобразование кодовой точкой в строку</span><span class="sxs-lookup"><span data-stu-id="02b23-153">Convert a code point to a string</span></span>|<xref:System.Char.ConvertFromUtf32%2A>|  
|<span data-ttu-id="02b23-154">Преобразовать <xref:System.Char> объекта или суррогатной пары <xref:System.Char> объектов кодовая точка</span><span class="sxs-lookup"><span data-stu-id="02b23-154">Convert a <xref:System.Char> object or a surrogate pair of <xref:System.Char> objects to a code point</span></span>|<span data-ttu-id="02b23-155">Для одного символа: <xref:System.Convert.ToInt32%28System.Char%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="02b23-155">For a single character: <xref:System.Convert.ToInt32%28System.Char%29?displayProperty=nameWithType></span></span><br /><br /> <span data-ttu-id="02b23-156">Пара символов-заместителей или символ в строке: <xref:System.Char.ConvertToUtf32%2A?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="02b23-156">For a surrogate pair or a character in a string: <xref:System.Char.ConvertToUtf32%2A?displayProperty=nameWithType></span></span>|  
|<span data-ttu-id="02b23-157">Получить категорию Юникода для символа</span><span class="sxs-lookup"><span data-stu-id="02b23-157">Get the Unicode category of a character</span></span>|<xref:System.Char.GetUnicodeCategory%2A>|  
|<span data-ttu-id="02b23-158">Определить, является ли символ в определенной категории Юникода, например цифры, буквы, знаки препинания, управляющий символ и т. д</span><span class="sxs-lookup"><span data-stu-id="02b23-158">Determine whether a character is in a particular Unicode category such as digit, letter, punctuation, control character, and so on</span></span>|<span data-ttu-id="02b23-159"><xref:System.Char.IsControl%2A>, <xref:System.Char.IsDigit%2A>, <xref:System.Char.IsHighSurrogate%2A>, <xref:System.Char.IsLetter%2A>, <xref:System.Char.IsLetterOrDigit%2A>, <xref:System.Char.IsLower%2A>, <xref:System.Char.IsLowSurrogate%2A>, <xref:System.Char.IsNumber%2A>, <xref:System.Char.IsPunctuation%2A>, <xref:System.Char.IsSeparator%2A>, <xref:System.Char.IsSurrogate%2A>, <xref:System.Char.IsSurrogatePair%2A>, <xref:System.Char.IsSymbol%2A>, <xref:System.Char.IsUpper%2A>, и <xref:System.Char.IsWhiteSpace%2A></span><span class="sxs-lookup"><span data-stu-id="02b23-159"><xref:System.Char.IsControl%2A>, <xref:System.Char.IsDigit%2A>, <xref:System.Char.IsHighSurrogate%2A>, <xref:System.Char.IsLetter%2A>, <xref:System.Char.IsLetterOrDigit%2A>, <xref:System.Char.IsLower%2A>, <xref:System.Char.IsLowSurrogate%2A>, <xref:System.Char.IsNumber%2A>, <xref:System.Char.IsPunctuation%2A>, <xref:System.Char.IsSeparator%2A>, <xref:System.Char.IsSurrogate%2A>, <xref:System.Char.IsSurrogatePair%2A>, <xref:System.Char.IsSymbol%2A>, <xref:System.Char.IsUpper%2A>, and <xref:System.Char.IsWhiteSpace%2A></span></span>|  
|<span data-ttu-id="02b23-160">Преобразовать <xref:System.Char> объект, который представляет число к числовым типом значения.</span><span class="sxs-lookup"><span data-stu-id="02b23-160">Convert a <xref:System.Char> object that represents a number to a numeric value type</span></span>|<xref:System.Char.GetNumericValue%2A>|  
|<span data-ttu-id="02b23-161">Преобразовать символ в строке в <xref:System.Char> объекта</span><span class="sxs-lookup"><span data-stu-id="02b23-161">Convert a character in a string into a <xref:System.Char> object</span></span>|<span data-ttu-id="02b23-162"><xref:System.Char.Parse%2A> и <xref:System.Char.TryParse%2A>.</span><span class="sxs-lookup"><span data-stu-id="02b23-162"><xref:System.Char.Parse%2A> and <xref:System.Char.TryParse%2A></span></span>|  
|<span data-ttu-id="02b23-163">Преобразовать <xref:System.Char> объект <xref:System.String> объекта</span><span class="sxs-lookup"><span data-stu-id="02b23-163">Convert a <xref:System.Char> object to a <xref:System.String> object</span></span>|<xref:System.Char.ToString%2A>|  
|<span data-ttu-id="02b23-164">Изменение регистра <xref:System.Char> объекта</span><span class="sxs-lookup"><span data-stu-id="02b23-164">Change the case of a <xref:System.Char> object</span></span>|<span data-ttu-id="02b23-165"><xref:System.Char.ToLower%2A>, <xref:System.Char.ToLowerInvariant%2A>, <xref:System.Char.ToUpper%2A> и <xref:System.Char.ToUpperInvariant%2A></span><span class="sxs-lookup"><span data-stu-id="02b23-165"><xref:System.Char.ToLower%2A>, <xref:System.Char.ToLowerInvariant%2A>, <xref:System.Char.ToUpper%2A>, and <xref:System.Char.ToUpperInvariant%2A></span></span>|  
  
<a name="Interop"></a>   
## <a name="char-values-and-interop"></a><span data-ttu-id="02b23-166">Значения Char и взаимодействия</span><span class="sxs-lookup"><span data-stu-id="02b23-166">Char values and interop</span></span>  
<span data-ttu-id="02b23-167">Когда управляемый <xref:System.Char> тип, который представляется как единица кода в кодировке Юникода UTF-16, передается в неуправляемый код, упаковщик взаимодействия преобразует кодировку ANSI по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="02b23-167">When a managed <xref:System.Char> type, which is represented as a Unicode UTF-16 encoded code unit, is passed to unmanaged code, the interop marshaler converts the character set to ANSI by default.</span></span> <span data-ttu-id="02b23-168">Можно применить <xref:System.Runtime.InteropServices.DllImportAttribute> атрибут платформы неуправляемого кода и <xref:System.Runtime.InteropServices.StructLayoutAttribute> атрибут объявления COM-взаимодействия для управления кодировкой, используемой маршалируется <xref:System.Char> типа.</span><span class="sxs-lookup"><span data-stu-id="02b23-168">You can apply the <xref:System.Runtime.InteropServices.DllImportAttribute> attribute to platform invoke declarations and the <xref:System.Runtime.InteropServices.StructLayoutAttribute> attribute to a COM interop declaration to control which character set a marshaled <xref:System.Char> type uses.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="02b23-169">В следующем примере кода показаны некоторые из методов в <xref:System.Char>.</span><span class="sxs-lookup"><span data-stu-id="02b23-169">The following code example demonstrates some of the methods in <xref:System.Char>.</span></span>  
  
 [!code-cpp[System.Char &#91;Type Level&#93;#23](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char [Type Level]/CPP/charstructure.cpp#23)]
 [!code-csharp[System.Char &#91;Type Level&#93;#23](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char [Type Level]/CS/charstructure.cs#23)]
 [!code-vb[System.Char &#91;Type Level&#93;#23](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char [Type Level]/VB/charstructure.vb#23)]  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="02b23-170">Все члены этого типа являются потокобезопасными.</span><span class="sxs-lookup"><span data-stu-id="02b23-170">All members of this type are thread safe.</span></span> <span data-ttu-id="02b23-171">Элементы, используемые для изменения состояния экземпляра на самом деле возвращается новый экземпляр инициализирован с новым значением.</span><span class="sxs-lookup"><span data-stu-id="02b23-171">Members that appear to modify instance state actually return a new instance initialized with the new value.</span></span> <span data-ttu-id="02b23-172">Как с любым другим типом, чтения и записи к общей переменной, содержащий экземпляр этого типа должны быть защищены блокировкой, чтобы гарантировать потокобезопасность.</span><span class="sxs-lookup"><span data-stu-id="02b23-172">As with any other type, reading and writing to a shared variable that contains an instance of this type must be protected by a lock to guarantee thread safety.</span></span></threadsafe>
    <altmember cref="T:System.IComparable" />
    <altmember cref="T:System.IConvertible" />
    <altmember cref="T:System.String" />
  </Docs>
  <Members>
    <MemberGroup MemberName="CompareTo">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="02b23-173">Сравнивает данный экземпляр с заданным объектом или типом значения и показывает, расположен ли данный экземпляр перед, после или на той же позиции в порядке сортировки, что и заданный объект или тип значения.</span><span class="sxs-lookup"><span data-stu-id="02b23-173">Compares this instance to a specified object or value type, and indicates whether this instance precedes, follows, or appears in the same position in the sort order as the specified object or value type.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.CompareTo(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (value As Char) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(char value);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable`1.CompareTo(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="02b23-174">Объект <see cref="T:System.Char" /> для сравнения.</span><span class="sxs-lookup"><span data-stu-id="02b23-174">A <see cref="T:System.Char" /> object to compare.</span></span></param>
        <summary><span data-ttu-id="02b23-175">Сравнивает данный экземпляр с заданным объектом <see cref="T:System.Char" /> и показывает, расположен ли данный экземпляр перед, после или на той же позиции в порядке сортировки, что и заданный объект <see cref="T:System.Char" />.</span><span class="sxs-lookup"><span data-stu-id="02b23-175">Compares this instance to a specified <see cref="T:System.Char" /> object and indicates whether this instance precedes, follows, or appears in the same position in the sort order as the specified <see cref="T:System.Char" /> object.</span></span></summary>
        <returns><span data-ttu-id="02b23-176">Число со знаком, которое показывает позицию данного экземпляра в порядке сортировки по отношению к параметру <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="02b23-176">A signed number indicating the position of this instance in the sort order in relation to the <paramref name="value" /> parameter.</span></span>  
  
 <span data-ttu-id="02b23-177"><list type="table"><listheader><term> Возвращаемое значение</span><span class="sxs-lookup"><span data-stu-id="02b23-177"><list type="table"><listheader><term> Return Value</span></span>  
  
 <span data-ttu-id="02b23-178"></term><description> Описание</span><span class="sxs-lookup"><span data-stu-id="02b23-178"></term><description> Description</span></span>  
  
 <span data-ttu-id="02b23-179"></description></listheader><item><term> Меньше нуля</span><span class="sxs-lookup"><span data-stu-id="02b23-179"></description></listheader><item><term> Less than zero</span></span>  
  
 <span data-ttu-id="02b23-180"></term><description> Данный экземпляр предшествует параметру <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="02b23-180"></term><description> This instance precedes <paramref name="value" />.</span></span>  
  
 <span data-ttu-id="02b23-181"></description></item><item><term> Нуль</span><span class="sxs-lookup"><span data-stu-id="02b23-181"></description></item><item><term> Zero</span></span>  
  
 <span data-ttu-id="02b23-182"></term><description> Данный экземпляр имеет ту же позицию в порядке сортировки, что и <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="02b23-182"></term><description> This instance has the same position in the sort order as <paramref name="value" />.</span></span>  
  
 <span data-ttu-id="02b23-183"></description></item><item><term> Больше нуля</span><span class="sxs-lookup"><span data-stu-id="02b23-183"></description></item><item><term> Greater than zero</span></span>  
  
 <span data-ttu-id="02b23-184"></term><description> Данный экземпляр следует за параметром <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="02b23-184"></term><description> This instance follows <paramref name="value" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02b23-185">Этот метод реализует <xref:System.IComparable%601?displayProperty=nameWithType> интерфейс, а также выполняет немного быстрее, чем <xref:System.Char.CompareTo%2A?displayProperty=nameWithType> метода, так как его не нужно выполнять преобразование `value` параметр объекта.</span><span class="sxs-lookup"><span data-stu-id="02b23-185">This method implements the <xref:System.IComparable%601?displayProperty=nameWithType> interface and performs slightly better than the <xref:System.Char.CompareTo%2A?displayProperty=nameWithType> method because it does not have to convert the `value` parameter to an object.</span></span>  
  
 <span data-ttu-id="02b23-186">Сравнение, выполненное с помощью данного метода основан на закодированные значения этого экземпляра и `value`, не зависящими лексикографического.</span><span class="sxs-lookup"><span data-stu-id="02b23-186">The comparison performed by this method is based on the encoded values of this instance and `value`, not their lexicographical characteristics.</span></span>  
  
 <span data-ttu-id="02b23-187">Если <xref:System.Char.CompareTo%2A> тип параметра метода имеет меньшее число битов (является более коротким) чем тип экземпляра, некоторые языки программирования выполняют неявное расширяющее преобразование, которое преобразует значение параметра в значение с большим числом битов.</span><span class="sxs-lookup"><span data-stu-id="02b23-187">If the <xref:System.Char.CompareTo%2A> method parameter type has fewer bits (is narrower) than the instance type, some programming languages perform an implicit widening conversion that transforms the value of the parameter into a value with more bits.</span></span>  
  
 <span data-ttu-id="02b23-188">Предположим, что типом экземпляра является <xref:System.Int32> и тип параметра является <xref:System.Byte>.</span><span class="sxs-lookup"><span data-stu-id="02b23-188">For example, suppose the instance type is <xref:System.Int32> and the parameter type is <xref:System.Byte>.</span></span> <span data-ttu-id="02b23-189">Компилятор Microsoft C# создает инструкции для представления значения параметра, как <xref:System.Int32> объекта, а затем создает <xref:System.Int32.CompareTo%2A?displayProperty=nameWithType> метод, который сравнивает значения <xref:System.Int32> экземпляра и <xref:System.Int32> параметр представление.</span><span class="sxs-lookup"><span data-stu-id="02b23-189">The Microsoft C# compiler generates instructions to represent the value of the parameter as an <xref:System.Int32> object, then generates a <xref:System.Int32.CompareTo%2A?displayProperty=nameWithType> method that compares the values of the <xref:System.Int32> instance and the <xref:System.Int32> parameter representation.</span></span>  
  
 <span data-ttu-id="02b23-190">Как правило неявное расширяющее преобразование выполняются для числовых типов.</span><span class="sxs-lookup"><span data-stu-id="02b23-190">Typically, implicit widening conversions are performed on numeric types.</span></span> <span data-ttu-id="02b23-191">Обратитесь к документации язык программирования, чтобы определить, выполняет ли компилятор расширяющее преобразование.</span><span class="sxs-lookup"><span data-stu-id="02b23-191">Consult your programming language's documentation to determine if its compiler performs widening conversions.</span></span> <span data-ttu-id="02b23-192">Если несоответствие типов экземпляра и параметра и отсутствии подходящего преобразования недоступен, компилятор выдает инструкции для упаковки параметра и вызывает <xref:System.Char.CompareTo%2A> перегрузку, принимающую <xref:System.Object> параметра.</span><span class="sxs-lookup"><span data-stu-id="02b23-192">If the instance and parameter types mismatch and a suitable conversion is not available, the compiler generates instructions to box the parameter and invoke the <xref:System.Char.CompareTo%2A> overload that takes an <xref:System.Object> parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="02b23-193">В следующем примере кода демонстрируются универсальные и неуниверсальные версии `CompareTo` метод для нескольких типов значений и ссылочных типов.</span><span class="sxs-lookup"><span data-stu-id="02b23-193">The following code example demonstrates generic and non-generic versions of the `CompareTo` method for several value and reference types.</span></span>  
  
 [!code-cpp[T.CompareTo#1](~/samples/snippets/cpp/VS_Snippets_CLR/T.CompareTo/CPP/cat.cpp#1)]
 [!code-csharp[T.CompareTo#1](~/samples/snippets/csharp/VS_Snippets_CLR/T.CompareTo/CS/cat.cs#1)]
 [!code-vb[T.CompareTo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/T.CompareTo/VB/cat.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IComparable" />
        <altmember cref="M:System.Char.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (value As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="02b23-194">Объект, сравниваемый с этим экземпляром, или <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="02b23-194">An object to compare this instance to, or <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="02b23-195">Сравнивает данный экземпляр с заданным объектом и показывает, расположен ли данный экземпляр перед, после или на той же позиции в порядке сортировки, что и заданный объект <see cref="T:System.Object" />.</span><span class="sxs-lookup"><span data-stu-id="02b23-195">Compares this instance to a specified object and indicates whether this instance precedes, follows, or appears in the same position in the sort order as the specified <see cref="T:System.Object" />.</span></span></summary>
        <returns><span data-ttu-id="02b23-196">Число со знаком, которое показывает позицию данного экземпляра в порядке сортировки по отношению к параметру <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="02b23-196">A signed number indicating the position of this instance in the sort order in relation to the <paramref name="value" /> parameter.</span></span>  
  
 <span data-ttu-id="02b23-197"><list type="table"><listheader><term> Возвращаемое значение</span><span class="sxs-lookup"><span data-stu-id="02b23-197"><list type="table"><listheader><term> Return Value</span></span>  
  
 <span data-ttu-id="02b23-198"></term><description> Описание</span><span class="sxs-lookup"><span data-stu-id="02b23-198"></term><description> Description</span></span>  
  
 <span data-ttu-id="02b23-199"></description></listheader><item><term> Меньше нуля</span><span class="sxs-lookup"><span data-stu-id="02b23-199"></description></listheader><item><term> Less than zero</span></span>  
  
 <span data-ttu-id="02b23-200"></term><description> Данный экземпляр предшествует параметру <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="02b23-200"></term><description> This instance precedes <paramref name="value" />.</span></span>  
  
 <span data-ttu-id="02b23-201"></description></item><item><term> Нуль</span><span class="sxs-lookup"><span data-stu-id="02b23-201"></description></item><item><term> Zero</span></span>  
  
 <span data-ttu-id="02b23-202"></term><description> Данный экземпляр имеет ту же позицию в порядке сортировки, что и <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="02b23-202"></term><description> This instance has the same position in the sort order as <paramref name="value" />.</span></span>  
  
 <span data-ttu-id="02b23-203"></description></item><item><term> Больше нуля</span><span class="sxs-lookup"><span data-stu-id="02b23-203"></description></item><item><term> Greater than zero</span></span>  
  
 <span data-ttu-id="02b23-204"></term><description> Данный экземпляр следует за параметром <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="02b23-204"></term><description> This instance follows <paramref name="value" />.</span></span>  
  
 <span data-ttu-id="02b23-205">- или -</span><span class="sxs-lookup"><span data-stu-id="02b23-205">-or-</span></span>  
  
 <span data-ttu-id="02b23-206">Свойство <paramref name="value" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="02b23-206"><paramref name="value" /> is <see langword="null" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02b23-207"><xref:System.Char.CompareTo%2A> Реализует метод <xref:System.IComparable> интерфейса.</span><span class="sxs-lookup"><span data-stu-id="02b23-207">The <xref:System.Char.CompareTo%2A> method implements the <xref:System.IComparable> interface.</span></span>  
  
 <span data-ttu-id="02b23-208">`value` Параметр должен быть `null` или экземпляром <xref:System.Char>; в противном случае создается исключение.</span><span class="sxs-lookup"><span data-stu-id="02b23-208">The `value` parameter must be `null` or an instance of <xref:System.Char>; otherwise, an exception is thrown.</span></span>  
  
 <span data-ttu-id="02b23-209">Сравнение, выполненное с помощью данного метода основан на закодированные значения этого экземпляра и `value`, не обязательно их лексикографического характеристики.</span><span class="sxs-lookup"><span data-stu-id="02b23-209">The comparison performed by this method is based on the encoded values of this instance and `value`, not necessarily their lexicographical characteristics.</span></span> <span data-ttu-id="02b23-210">Любой экземпляр <xref:System.Char>, независимо от его значения, считается больше, чем `null`.</span><span class="sxs-lookup"><span data-stu-id="02b23-210">Any instance of <xref:System.Char>, regardless of its value, is considered greater than `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="02b23-211">В следующем примере кода показано <xref:System.Char.CompareTo%2A>.</span><span class="sxs-lookup"><span data-stu-id="02b23-211">The following code example demonstrates <xref:System.Char.CompareTo%2A>.</span></span>  
  
 [!code-cpp[System.Char.CompareTo#19](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.CompareTo/CPP/compareto.cpp#19)]
 [!code-csharp[System.Char.CompareTo#19](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.CompareTo/CS/compareto.cs#19)]
 [!code-vb[System.Char.CompareTo#19](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.CompareTo/VB/compareto.vb#19)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="02b23-212"><paramref name="value" /> не является объектом <see cref="T:System.Char" />.</span><span class="sxs-lookup"><span data-stu-id="02b23-212"><paramref name="value" /> is not a <see cref="T:System.Char" /> object.</span></span></exception>
        <altmember cref="T:System.IComparable" />
        <altmember cref="M:System.Char.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="ConvertFromUtf32">
      <MemberSignature Language="C#" Value="public static string ConvertFromUtf32 (int utf32);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ConvertFromUtf32(int32 utf32) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.ConvertFromUtf32(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConvertFromUtf32 (utf32 As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ConvertFromUtf32(int utf32);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="utf32" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="utf32"><span data-ttu-id="02b23-213">21-битовая кодовая точка Юникода.</span><span class="sxs-lookup"><span data-stu-id="02b23-213">A 21-bit Unicode code point.</span></span></param>
        <summary><span data-ttu-id="02b23-214">Преобразует заданную кодовую точку Юникода в строку в кодировке UTF-16.</span><span class="sxs-lookup"><span data-stu-id="02b23-214">Converts the specified Unicode code point into a UTF-16 encoded string.</span></span></summary>
        <returns><span data-ttu-id="02b23-215">Строка, состоящая из одного объекта <see cref="T:System.Char" /> или суррогатной пары объектов <see cref="T:System.Char" />, эквивалентной кодовой точке, заданной в параметре <paramref name="utf32" />.</span><span class="sxs-lookup"><span data-stu-id="02b23-215">A string consisting of one <see cref="T:System.Char" /> object or a surrogate pair of <see cref="T:System.Char" /> objects equivalent to the code point specified by the <paramref name="utf32" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02b23-216">Используйте этот метод для преобразования 21-Битовая кодовая точка Юникода в строку в кодировке UTF-16 перед тестированием строки с помощью методов, таких как <xref:System.Char.IsLowSurrogate%28System.Char%29> и <xref:System.Char.IsHighSurrogate%28System.Char%29>.</span><span class="sxs-lookup"><span data-stu-id="02b23-216">Use this method to convert a 21-bit Unicode code point to a UTF-16 encoded string before testing the string with methods such as <xref:System.Char.IsLowSurrogate%28System.Char%29> and <xref:System.Char.IsHighSurrogate%28System.Char%29>.</span></span>  
  
 <span data-ttu-id="02b23-217">Допустимая кодовая точка вне базовый многоязыковый набор кодировок (BMP) всегда дает допустимую суррогатную пару.</span><span class="sxs-lookup"><span data-stu-id="02b23-217">A valid code point outside the Basic Multilingual Plane (BMP) always yields a valid surrogate pair.</span></span> <span data-ttu-id="02b23-218">Тем не менее допустимой кодовой точки в BMP может выдавать допустимого результата согласно стандарту Юникод, поскольку лингвистические обработка не используется в преобразовании.</span><span class="sxs-lookup"><span data-stu-id="02b23-218">However, a valid code point within the BMP might not yield a valid result according to the Unicode standard because no linguistic processing is used in the conversion.</span></span> <span data-ttu-id="02b23-219">По этой причине использование <xref:System.Text.UTF32Encoding?displayProperty=nameWithType> класса используется для преобразования массовой данные UTF-32 в массового данные UTF-16.</span><span class="sxs-lookup"><span data-stu-id="02b23-219">For that reason, use the <xref:System.Text.UTF32Encoding?displayProperty=nameWithType> class to convert bulk UTF-32 data into bulk UTF-16 data.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="02b23-220">В следующем примере кода показано <xref:System.Char.ConvertToUtf32%2A> и <xref:System.Char.ConvertFromUtf32%2A> методы.</span><span class="sxs-lookup"><span data-stu-id="02b23-220">The following code example demonstrates the <xref:System.Char.ConvertToUtf32%2A> and <xref:System.Char.ConvertFromUtf32%2A> methods.</span></span>  
  
 [!code-cpp[char.cvtutf32#1](~/samples/snippets/cpp/VS_Snippets_CLR/char.cvtutf32/CPP/utf.cpp#1)]
 [!code-csharp[char.cvtutf32#1](~/samples/snippets/csharp/VS_Snippets_CLR/char.cvtutf32/CS/utf.cs#1)]
 [!code-vb[char.cvtutf32#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/char.cvtutf32/VB/utf.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="02b23-221"><paramref name="utf32" /> является недопустимой 21-битовой кодовой точкой Юникода, входящей в диапазон начиная от U+0 до U+10FFFF, за исключением суррогатной пары в диапазоне от U+D800 до U+DBFF.</span><span class="sxs-lookup"><span data-stu-id="02b23-221"><paramref name="utf32" /> is not a valid 21-bit Unicode code point ranging from U+0 through U+10FFFF, excluding the surrogate pair range from U+D800 through U+DFFF.</span></span></exception>
        <altmember cref="M:System.Char.ConvertToUtf32(System.Char,System.Char)" />
        <altmember cref="T:System.Text.UTF32Encoding" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ConvertToUtf32">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="02b23-222">Преобразует значение суррогатной пары в кодировке UTF-16 в кодовую точку Юникода.</span><span class="sxs-lookup"><span data-stu-id="02b23-222">Converts the value of a UTF-16 encoded surrogate pair into a Unicode code point.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ConvertToUtf32">
      <MemberSignature Language="C#" Value="public static int ConvertToUtf32 (char highSurrogate, char lowSurrogate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ConvertToUtf32(char highSurrogate, char lowSurrogate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.ConvertToUtf32(System.Char,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConvertToUtf32 (highSurrogate As Char, lowSurrogate As Char) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ConvertToUtf32(char highSurrogate, char lowSurrogate);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="highSurrogate" Type="System.Char" />
        <Parameter Name="lowSurrogate" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="highSurrogate"><span data-ttu-id="02b23-223">Старшая замещающая единица кода (то есть единица кода в диапазоне от U+D800 до U+DBFF).</span><span class="sxs-lookup"><span data-stu-id="02b23-223">A high surrogate code unit (that is, a code unit ranging from U+D800 through U+DBFF).</span></span></param>
        <param name="lowSurrogate"><span data-ttu-id="02b23-224">Младшая замещающая единица кода (то есть единица кода в диапазоне от U+DC00 до U+DFFF).</span><span class="sxs-lookup"><span data-stu-id="02b23-224">A low surrogate code unit (that is, a code unit ranging from U+DC00 through U+DFFF).</span></span></param>
        <summary><span data-ttu-id="02b23-225">Преобразует значение суррогатной пары в кодировке UTF-16 в кодовую точку Юникода.</span><span class="sxs-lookup"><span data-stu-id="02b23-225">Converts the value of a UTF-16 encoded surrogate pair into a Unicode code point.</span></span></summary>
        <returns><span data-ttu-id="02b23-226">21-битовая кодовая точка Юникода, представленная параметрами <paramref name="highSurrogate" /> и <paramref name="lowSurrogate" />.</span><span class="sxs-lookup"><span data-stu-id="02b23-226">The 21-bit Unicode code point represented by the <paramref name="highSurrogate" /> and <paramref name="lowSurrogate" /> parameters.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02b23-227">Используйте этот метод для преобразования суррогатной пары в 21-Битовая кодовая точка Юникода.</span><span class="sxs-lookup"><span data-stu-id="02b23-227">Use this method to convert a surrogate pair into a 21-bit Unicode code point.</span></span> <span data-ttu-id="02b23-228">Чтобы преобразовать данные UTF-16 в данные UTF-32, используйте <xref:System.Text.UTF32Encoding?displayProperty=nameWithType> класса.</span><span class="sxs-lookup"><span data-stu-id="02b23-228">To convert UTF-16 data into UTF-32 data, use the <xref:System.Text.UTF32Encoding?displayProperty=nameWithType> class.</span></span>  
  
 <span data-ttu-id="02b23-229">Как правило кодировку UTF-16 представляет один символ Юникода как элемент 16-разрядного кода.</span><span class="sxs-lookup"><span data-stu-id="02b23-229">Ordinarily, UTF-16 encoding represents a single Unicode character as a 16-bit code unit.</span></span> <span data-ttu-id="02b23-230">Тем не менее оно также поддерживает суррогатные пары, которые позволяют представлять один абстрактный символ в виде двух 16-разрядного кода единиц.</span><span class="sxs-lookup"><span data-stu-id="02b23-230">However, it also supports surrogate pairs, which allow a single abstract character to be represented as two 16-bit code units.</span></span> <span data-ttu-id="02b23-231">Эти два <xref:System.Char> объекты должны иметь единицами кода в диапазоне от U + D800 до U + DBFF для первого символов-заместителей (высокий) и от U + DC00 до U + DFFF для второго символов-заместителей (низкий).</span><span class="sxs-lookup"><span data-stu-id="02b23-231">These two <xref:System.Char> objects must have code units that range from U+D800 to U+DBFF for the first (high) surrogate and from U+DC00 to U+DFFF for the second (low) surrogate.</span></span> <span data-ttu-id="02b23-232">Суррогатные пары поддерживаются только UTF-16 кодировки.</span><span class="sxs-lookup"><span data-stu-id="02b23-232">Surrogate pairs are supported only by UTF-16 encoding.</span></span> <span data-ttu-id="02b23-233">Этот метод позволяет символ, представленный суррогатную пару UTF-16 для преобразования символа, с использованием кодировки UTF-32.</span><span class="sxs-lookup"><span data-stu-id="02b23-233">This method allows a character represented by a UTF-16 surrogate pair to be converted to a character using UTF-32 encoding.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="02b23-234">В следующем примере кода показано <xref:System.Char.ConvertToUtf32%2A> и <xref:System.Char.ConvertFromUtf32%2A> методы.</span><span class="sxs-lookup"><span data-stu-id="02b23-234">The following code example demonstrates the <xref:System.Char.ConvertToUtf32%2A> and <xref:System.Char.ConvertFromUtf32%2A> methods.</span></span>  
  
 [!code-cpp[char.cvtutf32#1](~/samples/snippets/cpp/VS_Snippets_CLR/char.cvtutf32/CPP/utf.cpp#1)]
 [!code-csharp[char.cvtutf32#1](~/samples/snippets/csharp/VS_Snippets_CLR/char.cvtutf32/CS/utf.cs#1)]
 [!code-vb[char.cvtutf32#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/char.cvtutf32/VB/utf.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="02b23-235"><paramref name="highSurrogate" /> не лежит в диапазоне от U+D800 до U+DBFF, или<paramref name="lowSurrogate" /> не лежит в диапазоне от U+DC00 до U+DFFF.</span><span class="sxs-lookup"><span data-stu-id="02b23-235"><paramref name="highSurrogate" /> is not in the range U+D800 through U+DBFF, or <paramref name="lowSurrogate" /> is not in the range U+DC00 through U+DFFF.</span></span></exception>
        <altmember cref="M:System.Char.ConvertFromUtf32(System.Int32)" />
        <altmember cref="T:System.Text.UTF32Encoding" />
      </Docs>
    </Member>
    <Member MemberName="ConvertToUtf32">
      <MemberSignature Language="C#" Value="public static int ConvertToUtf32 (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ConvertToUtf32(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.ConvertToUtf32(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConvertToUtf32 (s As String, index As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ConvertToUtf32(System::String ^ s, int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="02b23-236">Строка, содержащая символ или суррогатную пару.</span><span class="sxs-lookup"><span data-stu-id="02b23-236">A string that contains a character or surrogate pair.</span></span></param>
        <param name="index"><span data-ttu-id="02b23-237">Позиция индекса символа или суррогатной пары в <c>s</c>.</span><span class="sxs-lookup"><span data-stu-id="02b23-237">The index position of the character or surrogate pair in <c>s</c>.</span></span></param>
        <summary><span data-ttu-id="02b23-238">Преобразует значение символа в кодировке UTF-16 или суррогатную пару в заданной позиции в строке в кодовую точку Юникода.</span><span class="sxs-lookup"><span data-stu-id="02b23-238">Converts the value of a UTF-16 encoded character or surrogate pair at a specified position in a string into a Unicode code point.</span></span></summary>
        <returns><span data-ttu-id="02b23-239">21-битовая кодовая точка Юникода, представленная символом или суррогатной парой в позиции в строке <paramref name="s" />, заданной параметром <paramref name="index" />.</span><span class="sxs-lookup"><span data-stu-id="02b23-239">The 21-bit Unicode code point represented by the character or surrogate pair at the position in the <paramref name="s" /> parameter specified by the <paramref name="index" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02b23-240">Используйте этот метод для преобразования символа или суррогатной пары в 21-Битовая кодовая точка Юникода.</span><span class="sxs-lookup"><span data-stu-id="02b23-240">Use this method to convert a character or surrogate pair into a 21-bit Unicode code point.</span></span> <span data-ttu-id="02b23-241">Чтобы преобразовать данные UTF-16 в данные UTF-32, используйте <xref:System.Text.UTF32Encoding?displayProperty=nameWithType> класса.</span><span class="sxs-lookup"><span data-stu-id="02b23-241">To convert UTF-16 data into UTF-32 data, use the <xref:System.Text.UTF32Encoding?displayProperty=nameWithType> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="02b23-242">В следующем примере кода показано <xref:System.Char.ConvertToUtf32%2A> и <xref:System.Char.ConvertFromUtf32%2A> методы.</span><span class="sxs-lookup"><span data-stu-id="02b23-242">The following code example demonstrates the <xref:System.Char.ConvertToUtf32%2A> and <xref:System.Char.ConvertFromUtf32%2A> methods.</span></span>  
  
 [!code-cpp[char.cvtutf32#1](~/samples/snippets/cpp/VS_Snippets_CLR/char.cvtutf32/CPP/utf.cpp#1)]
 [!code-csharp[char.cvtutf32#1](~/samples/snippets/csharp/VS_Snippets_CLR/char.cvtutf32/CS/utf.cs#1)]
 [!code-vb[char.cvtutf32#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/char.cvtutf32/VB/utf.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="02b23-243">Свойство <paramref name="s" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="02b23-243"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="02b23-244"><paramref name="index" /> не является позицией в <paramref name="s" />.</span><span class="sxs-lookup"><span data-stu-id="02b23-244"><paramref name="index" /> is not a position within <paramref name="s" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="02b23-245">Заданная позиция индекса содержит суррогатную пару. Первый символ в паре не является допустимым старшим заместителем, или второй символ в паре не является допустимым младшим заместителем.</span><span class="sxs-lookup"><span data-stu-id="02b23-245">The specified index position contains a surrogate pair, and either the first character in the pair is not a valid high surrogate or the second character in the pair is not a valid low surrogate.</span></span></exception>
        <altmember cref="M:System.Char.ConvertFromUtf32(System.Int32)" />
        <altmember cref="T:System.Text.UTF32Encoding" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="02b23-246">Возвращает значение, показывающее, равен ли данный экземпляр указанному объекту или значению <see cref="T:System.Char" />.</span><span class="sxs-lookup"><span data-stu-id="02b23-246">Returns a value that indicates whether this instance is equal to a specified object or <see cref="T:System.Char" /> value.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (char obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(char obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.Equals(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (obj As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(char obj);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="02b23-247">Объект, сравниваемый с этим экземпляром.</span><span class="sxs-lookup"><span data-stu-id="02b23-247">An object to compare to this instance.</span></span></param>
        <summary><span data-ttu-id="02b23-248">Возвращает значение, указывающее, равен ли данный экземпляр указанному объекту <see cref="T:System.Char" />.</span><span class="sxs-lookup"><span data-stu-id="02b23-248">Returns a value that indicates whether this instance is equal to the specified <see cref="T:System.Char" /> object.</span></span></summary>
        <returns>
          <span data-ttu-id="02b23-249">Значение <see langword="true" />, если параметр <paramref name="obj" /> равен значению данного экземпляра; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="02b23-249"><see langword="true" /> if the <paramref name="obj" /> parameter equals the value of this instance; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02b23-250">Этот метод реализует <xref:System.IEquatable%601?displayProperty=nameWithType> интерфейсов и выполняет немного быстрее, чем <xref:System.Char.Equals%28System.Object%29?displayProperty=nameWithType> так, как необходимо распаковать `obj` параметра.</span><span class="sxs-lookup"><span data-stu-id="02b23-250">This method implements the <xref:System.IEquatable%601?displayProperty=nameWithType> interface, and performs slightly better than <xref:System.Char.Equals%28System.Object%29?displayProperty=nameWithType> because it does not need to unbox the `obj` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Char.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="02b23-251">Объект, сравниваемый с этим экземпляром или <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="02b23-251">An object to compare with this instance or <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="02b23-252">Возвращает значение, показывающее, равен ли экземпляр указанному объекту.</span><span class="sxs-lookup"><span data-stu-id="02b23-252">Returns a value that indicates whether this instance is equal to a specified object.</span></span></summary>
        <returns>
          <span data-ttu-id="02b23-253">Значение <see langword="true" />, если параметр <paramref name="obj" /> является экземпляром типа <see cref="T:System.Char" /> и равен значению данного экземпляра; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="02b23-253"><see langword="true" /> if <paramref name="obj" /> is an instance of <see cref="T:System.Char" /> and equals the value of this instance; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02b23-254">Сравнение, выполненное с помощью данного метода основан на закодированные значения этого экземпляра и `obj`, не обязательно их лексикографического характеристики.</span><span class="sxs-lookup"><span data-stu-id="02b23-254">The comparison performed by this method is based on the encoded values of this instance and `obj`, not necessarily their lexicographical characteristics.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="02b23-255">В следующем примере кода показано <xref:System.Char.Equals%2A>.</span><span class="sxs-lookup"><span data-stu-id="02b23-255">The following code example demonstrates <xref:System.Char.Equals%2A>.</span></span>  
  
 [!code-cpp[System.Char.Equals#20](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.Equals/CPP/equals.cpp#20)]
 [!code-csharp[System.Char.Equals#20](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.Equals/CS/equals.cs#20)]
 [!code-vb[System.Char.Equals#20](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.Equals/VB/equals.vb#20)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Char.CompareTo(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="02b23-256">Возвращает хэш-код данного экземпляра.</span><span class="sxs-lookup"><span data-stu-id="02b23-256">Returns the hash code for this instance.</span></span></summary>
        <returns><span data-ttu-id="02b23-257">Хэш-код в виде 32-разрядного целого числа со знаком.</span><span class="sxs-lookup"><span data-stu-id="02b23-257">A 32-bit signed integer hash code.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetNumericValue">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="02b23-258">Преобразовывает указанный числовой символ Юникода в число двойной точности с плавающей запятой.</span><span class="sxs-lookup"><span data-stu-id="02b23-258">Converts a specified numeric Unicode character to a double-precision floating-point number.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetNumericValue">
      <MemberSignature Language="C#" Value="public static double GetNumericValue (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 GetNumericValue(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.GetNumericValue(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetNumericValue (c As Char) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double GetNumericValue(char c);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c"><span data-ttu-id="02b23-259">Знак Юникода, который необходимо преобразовать.</span><span class="sxs-lookup"><span data-stu-id="02b23-259">The Unicode character to convert.</span></span></param>
        <summary><span data-ttu-id="02b23-260">Преобразует указанный числовой символ Юникода в число двойной точности с плавающей запятой.</span><span class="sxs-lookup"><span data-stu-id="02b23-260">Converts the specified numeric Unicode character to a double-precision floating point number.</span></span></summary>
        <returns><span data-ttu-id="02b23-261">Числовое значение параметра <paramref name="c" />, если данный символ представляет число; в противном случае — значение -1,0.</span><span class="sxs-lookup"><span data-stu-id="02b23-261">The numeric value of <paramref name="c" /> if that character represents a number; otherwise, -1.0.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02b23-262">`c` Параметр должен быть <xref:System.Char> представление числового значения.</span><span class="sxs-lookup"><span data-stu-id="02b23-262">The `c` parameter must be the <xref:System.Char> representation of a numeric value.</span></span> <span data-ttu-id="02b23-263">Например если `c` «5», возвращаемое значение равно 5.</span><span class="sxs-lookup"><span data-stu-id="02b23-263">For example, if `c` is "5", the return value is 5.</span></span> <span data-ttu-id="02b23-264">Однако если `c` — «z», возвращает значение -1,0.</span><span class="sxs-lookup"><span data-stu-id="02b23-264">However, if `c` is "z", the return value is -1.0.</span></span>  
  
 <span data-ttu-id="02b23-265">Символ имеет связанное числовое значение только в том случае, если он является членом одной из следующих <xref:System.Globalization.UnicodeCategory> категорий: `DecimalDigitNumber`, `LetterNumber`, или `OtherNumber`.</span><span class="sxs-lookup"><span data-stu-id="02b23-265">A character has an associated numeric value if and only if it is a member of one of the following <xref:System.Globalization.UnicodeCategory> categories: `DecimalDigitNumber`, `LetterNumber`, or `OtherNumber`.</span></span>  
  
 <span data-ttu-id="02b23-266"><xref:System.Char.GetNumericValue%2A> Метод предполагает, что `c` соответствует знаку лингвистические и проверяет, можно ли преобразовать этот символ десятичной цифрой.</span><span class="sxs-lookup"><span data-stu-id="02b23-266">The <xref:System.Char.GetNumericValue%2A> method assumes that `c` corresponds to a single linguistic character and checks whether that character can be converted to a decimal digit.</span></span> <span data-ttu-id="02b23-267">Тем не менее, некоторые числа в стандарте Юникода представлены двумя <xref:System.Char> объекты, которые суррогатную пару.</span><span class="sxs-lookup"><span data-stu-id="02b23-267">However, some numbers in the Unicode standard are represented by two <xref:System.Char> objects that form a surrogate pair.</span></span> <span data-ttu-id="02b23-268">Например Aegean системы нумерации состоит кодовых точек U + 10107 до U + 10133.</span><span class="sxs-lookup"><span data-stu-id="02b23-268">For example, the Aegean numbering system consists of code points U+10107 through U+10133.</span></span> <span data-ttu-id="02b23-269">В следующем примере используется <xref:System.Char.ConvertFromUtf32%2A> метод для создания экземпляра строка, представляющая AEGEAN номер один.</span><span class="sxs-lookup"><span data-stu-id="02b23-269">The following example uses the <xref:System.Char.ConvertFromUtf32%2A> method to instantiate a string that represents AEGEAN NUMBER ONE.</span></span> <span data-ttu-id="02b23-270">Как видно в результатах показано в примере <xref:System.Char.GetNumericValue%28System.Char%29> метод возвращает -1, если он передается старшим или младшим символом-заместителем этого символа.</span><span class="sxs-lookup"><span data-stu-id="02b23-270">As the output from the example shows, the <xref:System.Char.GetNumericValue%28System.Char%29> method returns -1 if it is passed either a high surrogate or a low surrogate of this character.</span></span>  
  
 [!code-csharp[System.Char.GetNumericValue#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.GetNumericValue/CS/getnumericvalue1.cs#2)]
 [!code-vb[System.Char.GetNumericValue#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.GetNumericValue/VB/getnumericvalue1.vb#2)]  
  
   
  
## Examples  
 <span data-ttu-id="02b23-271">В следующем примере демонстрируется <xref:System.Char.GetNumericValue%2A>.</span><span class="sxs-lookup"><span data-stu-id="02b23-271">The following example demonstrates <xref:System.Char.GetNumericValue%2A>.</span></span>  
  
 [!code-cpp[System.Char.GetNumericValue#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.GetNumericValue/CPP/getnumericvalue.cpp#1)]
 [!code-csharp[System.Char.GetNumericValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.GetNumericValue/CS/getnumericvalue.cs#1)]
 [!code-vb[System.Char.GetNumericValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.GetNumericValue/VB/getnumericvalue.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNumericValue">
      <MemberSignature Language="C#" Value="public static double GetNumericValue (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 GetNumericValue(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.GetNumericValue(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetNumericValue (s As String, index As Integer) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double GetNumericValue(System::String ^ s, int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="02b23-272">Объект <see cref="T:System.String" />.</span><span class="sxs-lookup"><span data-stu-id="02b23-272">A <see cref="T:System.String" />.</span></span></param>
        <param name="index"><span data-ttu-id="02b23-273">Позиция символа в <c>s</c>.</span><span class="sxs-lookup"><span data-stu-id="02b23-273">The character position in <c>s</c>.</span></span></param>
        <summary><span data-ttu-id="02b23-274">Преобразует числовой символ Юникода в указанной позиции в указанной строке в число двойной точности с плавающей запятой.</span><span class="sxs-lookup"><span data-stu-id="02b23-274">Converts the numeric Unicode character at the specified position in a specified string to a double-precision floating point number.</span></span></summary>
        <returns><span data-ttu-id="02b23-275">Числовое значение символа в позиции <paramref name="index" /> в <paramref name="s" />, если данный символ представляет число; в противном случае — значение -1.</span><span class="sxs-lookup"><span data-stu-id="02b23-275">The numeric value of the character at position <paramref name="index" /> in <paramref name="s" /> if that character represents a number; otherwise, -1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02b23-276">`s` Параметр должен быть строковое представление числового значения.</span><span class="sxs-lookup"><span data-stu-id="02b23-276">The `s` parameter must be the string representation of a numeric value.</span></span> <span data-ttu-id="02b23-277">Например если символ в позиции `index` в `s` «5», возвращаемое значение равно 5.</span><span class="sxs-lookup"><span data-stu-id="02b23-277">For example, if the character at position `index` in `s` is "5", the return value is 5.</span></span> <span data-ttu-id="02b23-278">Тем не менее если символ в позиции `index` в `s` — «z», возвращается значение-1.</span><span class="sxs-lookup"><span data-stu-id="02b23-278">However, if the character at position `index` in `s` is "z", the return value is -1.</span></span>  
  
 <span data-ttu-id="02b23-279">Позиций символов в строке индексируются, начиная с нуля.</span><span class="sxs-lookup"><span data-stu-id="02b23-279">Character positions in a string are indexed starting from zero.</span></span>  
  
 <span data-ttu-id="02b23-280">Символ имеет связанное числовое значение только в том случае, если он является членом одной из следующих <xref:System.Globalization.UnicodeCategory> категорий: `DecimalDigitNumber`, `LetterNumber`, или `OtherNumber`.</span><span class="sxs-lookup"><span data-stu-id="02b23-280">A character has an associated numeric value if and only if it is a member of one of the following <xref:System.Globalization.UnicodeCategory> categories: `DecimalDigitNumber`, `LetterNumber`, or `OtherNumber`.</span></span>  
  
 <span data-ttu-id="02b23-281">Если <xref:System.Char> объект в позиции `index` является первым символом допустимую суррогатную пару <xref:System.Char.GetNumericValue%28System.String%2CSystem.Int32%29> метод определяет, формирует ли суррогатная пара цифры.</span><span class="sxs-lookup"><span data-stu-id="02b23-281">If the <xref:System.Char> object at position `index` is the first character of a valid surrogate pair, the <xref:System.Char.GetNumericValue%28System.String%2CSystem.Int32%29> method determines whether the surrogate pair forms a numeric digit.</span></span> <span data-ttu-id="02b23-282">Например Aegean системы нумерации состоит кодовых точек U + 10107 до U + 10133.</span><span class="sxs-lookup"><span data-stu-id="02b23-282">For example, the Aegean numbering system consists of code points U+10107 through U+10133.</span></span> <span data-ttu-id="02b23-283">В следующем примере используется <xref:System.Char.ConvertFromUtf32%2A> метод для создания экземпляра строка, представляющая номер каждого Aegean.</span><span class="sxs-lookup"><span data-stu-id="02b23-283">The following example uses the <xref:System.Char.ConvertFromUtf32%2A> method to instantiate a string that represents each Aegean number.</span></span> <span data-ttu-id="02b23-284">Как видно в результатах показано в примере <xref:System.Char.GetNumericValue%28System.String%2CSystem.Int32%29> метод возвращает верное числовое значение, если он передается старшим символом-заместителем Aegean номера.</span><span class="sxs-lookup"><span data-stu-id="02b23-284">As the output from the example shows, the <xref:System.Char.GetNumericValue%28System.String%2CSystem.Int32%29> method returns the correct numeric value if it is passed the high surrogate of an Aegean number.</span></span> <span data-ttu-id="02b23-285">Тем не менее если он передается младшим символом-заместителем, рассматривает только младший заместитель изоляции и возвращает – 1.</span><span class="sxs-lookup"><span data-stu-id="02b23-285">However, if it is passed the low surrogate, it considers only the low surrogate in isolation and returns -1.</span></span>  
  
 [!code-csharp[System.Char.GetNumericValue#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.GetNumericValue/CS/getnumericvalue1.cs#3)]
 [!code-vb[System.Char.GetNumericValue#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.GetNumericValue/VB/getnumericvalue1.vb#3)]  
  
   
  
## Examples  
 <span data-ttu-id="02b23-286">В следующем примере кода показано <xref:System.Char.GetNumericValue%2A>.</span><span class="sxs-lookup"><span data-stu-id="02b23-286">The following code example demonstrates <xref:System.Char.GetNumericValue%2A>.</span></span>  
  
 [!code-cpp[System.Char.GetNumericValue#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.GetNumericValue/CPP/getnumericvalue.cpp#1)]
 [!code-csharp[System.Char.GetNumericValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.GetNumericValue/CS/getnumericvalue.cs#1)]
 [!code-vb[System.Char.GetNumericValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.GetNumericValue/VB/getnumericvalue.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="02b23-287">Свойство <paramref name="s" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="02b23-287"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="02b23-288">Параметр <paramref name="index" /> имеет значение меньше нуля или больше последней позиции в <paramref name="s" />.</span><span class="sxs-lookup"><span data-stu-id="02b23-288"><paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetTypeCode">
      <MemberSignature Language="C#" Value="public TypeCode GetTypeCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.TypeCode GetTypeCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.GetTypeCode" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTypeCode () As TypeCode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual TypeCode GetTypeCode();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.GetTypeCode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TypeCode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="02b23-289">Возвращает <see cref="T:System.TypeCode" /> для типа значения <see cref="T:System.Char" />.</span><span class="sxs-lookup"><span data-stu-id="02b23-289">Returns the <see cref="T:System.TypeCode" /> for value type <see cref="T:System.Char" />.</span></span></summary>
        <returns><span data-ttu-id="02b23-290">Константа перечислимого типа, <see cref="F:System.TypeCode.Char" />.</span><span class="sxs-lookup"><span data-stu-id="02b23-290">The enumerated constant, <see cref="F:System.TypeCode.Char" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetUnicodeCategory">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="02b23-291">Относит символ Юникода к группе, определенной одним из значений <see cref="T:System.Globalization.UnicodeCategory" />.</span><span class="sxs-lookup"><span data-stu-id="02b23-291">Categorizes a Unicode character into a group identified by one of the <see cref="T:System.Globalization.UnicodeCategory" /> values.</span></span></summary>
        <altmember cref="M:System.Globalization.CharUnicodeInfo.GetUnicodeCategory(System.Char)" />
      </Docs>
    </MemberGroup>
    <Member MemberName="GetUnicodeCategory">
      <MemberSignature Language="C#" Value="public static System.Globalization.UnicodeCategory GetUnicodeCategory (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Globalization.UnicodeCategory GetUnicodeCategory(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.GetUnicodeCategory(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetUnicodeCategory (c As Char) As UnicodeCategory" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Globalization::UnicodeCategory GetUnicodeCategory(char c);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.UnicodeCategory</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c"><span data-ttu-id="02b23-292">Знак Юникода, который подлежит категоризации.</span><span class="sxs-lookup"><span data-stu-id="02b23-292">The Unicode character to categorize.</span></span></param>
        <summary><span data-ttu-id="02b23-293">Относит указанный символ Юникода к группе, определенной одним из значений <see cref="T:System.Globalization.UnicodeCategory" />.</span><span class="sxs-lookup"><span data-stu-id="02b23-293">Categorizes a specified Unicode character into a group identified by one of the <see cref="T:System.Globalization.UnicodeCategory" /> values.</span></span></summary>
        <returns><span data-ttu-id="02b23-294">Значение <see cref="T:System.Globalization.UnicodeCategory" />, которое определяет группу, содержащую <paramref name="c" />.</span><span class="sxs-lookup"><span data-stu-id="02b23-294">A <see cref="T:System.Globalization.UnicodeCategory" /> value that identifies the group that contains <paramref name="c" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02b23-295"><xref:System.Char.GetUnicodeCategory%2A?displayProperty=nameWithType> Метод не всегда возвращает такой же <xref:System.Globalization.UnicodeCategory> как <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.Char%29?displayProperty=nameWithType> метод, если он передается как параметр определенный символ.</span><span class="sxs-lookup"><span data-stu-id="02b23-295">The <xref:System.Char.GetUnicodeCategory%2A?displayProperty=nameWithType> method does not always return the same <xref:System.Globalization.UnicodeCategory> value as the <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.Char%29?displayProperty=nameWithType> method when it is passed a particular character as a parameter.</span></span> <span data-ttu-id="02b23-296"><xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.Char%29?displayProperty=nameWithType> Метод создан в соответствии с текущей версией в стандарте Юникода.</span><span class="sxs-lookup"><span data-stu-id="02b23-296">The <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.Char%29?displayProperty=nameWithType> method is designed to reflect the current version of the Unicode standard.</span></span> <span data-ttu-id="02b23-297">В отличие от этого несмотря на то что <xref:System.Char.GetUnicodeCategory%2A?displayProperty=nameWithType> метод обычно отражает текущую версию стандарта Юникод, он может возвращать категорию символа, основываясь на предыдущей версии стандарта, или он может возвращать категорию, отличающуюся от текущего стандарта в порядке для сохранения обратной совместимости.</span><span class="sxs-lookup"><span data-stu-id="02b23-297">In contrast, although the <xref:System.Char.GetUnicodeCategory%2A?displayProperty=nameWithType> method usually reflects the current version of the Unicode standard, it may return a character's category based on a previous version of the standard or it may return a category that differs from the current standard in order to preserve backward compatibility.</span></span> <span data-ttu-id="02b23-298">Поэтому мы рекомендуем использовать <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.Char%29?displayProperty=nameWithType> вместо метода <xref:System.Char.GetUnicodeCategory%28System.Char%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="02b23-298">As a result, we recommend that you use the <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.Char%29?displayProperty=nameWithType> method instead of <xref:System.Char.GetUnicodeCategory%28System.Char%29?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="02b23-299">Начиная с [!INCLUDE[net_v462](~/includes/net-v462-md.md)], классифицированных символов Юникода на основе [стандарт Unix, версия 8.0.0](http://www.unicode.org/versions/Unicode8.0.0/).</span><span class="sxs-lookup"><span data-stu-id="02b23-299">Starting with the [!INCLUDE[net_v462](~/includes/net-v462-md.md)], Unicode characters are classified based on [The Unix Standard, Version 8.0.0](http://www.unicode.org/versions/Unicode8.0.0/).</span></span> <span data-ttu-id="02b23-300">В версиях .NET Framework из [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] для [!INCLUDE[net_v461](~/includes/net-v461-md.md)], они попадают на основе [стандарт Unix, версия 6.3.0](http://www.unicode.org/versions/Unicode6.3.0/).</span><span class="sxs-lookup"><span data-stu-id="02b23-300">In versions of the .NET Framework from the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] to  the [!INCLUDE[net_v461](~/includes/net-v461-md.md)], they are classified based on [The Unix Standard, Version 6.3.0](http://www.unicode.org/versions/Unicode6.3.0/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="02b23-301">В следующем примере кода показано <xref:System.Char.GetUnicodeCategory%2A>.</span><span class="sxs-lookup"><span data-stu-id="02b23-301">The following code example demonstrates <xref:System.Char.GetUnicodeCategory%2A>.</span></span>  
  
 [!code-cpp[System.Char.GetUnicodeCategory#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.GetUnicodeCategory/CPP/getunicodecategory.cpp#1)]
 [!code-csharp[System.Char.GetUnicodeCategory#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.GetUnicodeCategory/CS/getunicodecategory.cs#1)]
 [!code-vb[System.Char.GetUnicodeCategory#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.GetUnicodeCategory/VB/getunicodecategory.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Globalization.CharUnicodeInfo.GetUnicodeCategory(System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="GetUnicodeCategory">
      <MemberSignature Language="C#" Value="public static System.Globalization.UnicodeCategory GetUnicodeCategory (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Globalization.UnicodeCategory GetUnicodeCategory(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.GetUnicodeCategory(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetUnicodeCategory (s As String, index As Integer) As UnicodeCategory" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Globalization::UnicodeCategory GetUnicodeCategory(System::String ^ s, int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.UnicodeCategory</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="02b23-302">Объект <see cref="T:System.String" />.</span><span class="sxs-lookup"><span data-stu-id="02b23-302">A <see cref="T:System.String" />.</span></span></param>
        <param name="index"><span data-ttu-id="02b23-303">Позиция символа в <c>s</c>.</span><span class="sxs-lookup"><span data-stu-id="02b23-303">The character position in <c>s</c>.</span></span></param>
        <summary><span data-ttu-id="02b23-304">Относит символ Юникода в указанной позиции к группе, определенной одним из значений <see cref="T:System.Globalization.UnicodeCategory" />.</span><span class="sxs-lookup"><span data-stu-id="02b23-304">Categorizes the character at the specified position in a specified string into a group identified by one of the <see cref="T:System.Globalization.UnicodeCategory" /> values.</span></span></summary>
        <returns><span data-ttu-id="02b23-305">Перечислимая константа <see cref="T:System.Globalization.UnicodeCategory" />, определяющая группу, которая содержит символ в позиции <paramref name="index" /> в <paramref name="s" />.</span><span class="sxs-lookup"><span data-stu-id="02b23-305">A <see cref="T:System.Globalization.UnicodeCategory" /> enumerated constant that identifies the group that contains the character at position <paramref name="index" /> in <paramref name="s" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02b23-306">Позиций символов в строке индексируются, начиная с нуля.</span><span class="sxs-lookup"><span data-stu-id="02b23-306">Character positions in a string are indexed starting from zero.</span></span>  
  
 <span data-ttu-id="02b23-307"><xref:System.Char.GetUnicodeCategory%2A?displayProperty=nameWithType> Метод не всегда возвращает такой же <xref:System.Globalization.UnicodeCategory> как <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.String%2CSystem.Int32%29?displayProperty=nameWithType> метод, если он передается как параметр определенный символ.</span><span class="sxs-lookup"><span data-stu-id="02b23-307">The <xref:System.Char.GetUnicodeCategory%2A?displayProperty=nameWithType> method does not always return the same <xref:System.Globalization.UnicodeCategory> value as the <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.String%2CSystem.Int32%29?displayProperty=nameWithType> method when it is passed a particular character as a parameter.</span></span> <span data-ttu-id="02b23-308"><xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.String%2CSystem.Int32%29?displayProperty=nameWithType> Метод создан в соответствии с текущей версией в стандарте Юникода.</span><span class="sxs-lookup"><span data-stu-id="02b23-308">The <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.String%2CSystem.Int32%29?displayProperty=nameWithType> method is designed to reflect the current version of the Unicode standard.</span></span> <span data-ttu-id="02b23-309">В отличие от этого несмотря на то что <xref:System.Char.GetUnicodeCategory%2A?displayProperty=nameWithType> метод обычно отражает текущую версию стандарта Юникод, он может возвращать категорию символа, основываясь на предыдущей версии стандарта, или он может возвращать категорию, отличающуюся от текущего стандарта в порядке для сохранения обратной совместимости.</span><span class="sxs-lookup"><span data-stu-id="02b23-309">In contrast, although the <xref:System.Char.GetUnicodeCategory%2A?displayProperty=nameWithType> method usually reflects the current version of the Unicode standard, it may return a character's category based on a previous version of the standard or it may return a category that differs from the current standard in order to preserve backward compatibility.</span></span> <span data-ttu-id="02b23-310">Поэтому мы рекомендуем использовать <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.Char%29?displayProperty=nameWithType> вместо метода <xref:System.Char.GetUnicodeCategory%28System.String%2CSystem.Int32%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="02b23-310">As a result, we recommend that you use the <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.Char%29?displayProperty=nameWithType> method instead of <xref:System.Char.GetUnicodeCategory%28System.String%2CSystem.Int32%29?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="02b23-311">Начиная с [!INCLUDE[net_v462](~/includes/net-v462-md.md)], классифицированных символов Юникода на основе [стандарт Unix, версия 8.0.0](http://www.unicode.org/versions/Unicode8.0.0/).</span><span class="sxs-lookup"><span data-stu-id="02b23-311">Starting with the [!INCLUDE[net_v462](~/includes/net-v462-md.md)], Unicode characters are classified based on [The Unix Standard, Version 8.0.0](http://www.unicode.org/versions/Unicode8.0.0/).</span></span> <span data-ttu-id="02b23-312">В версиях .NET Framework из [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] для [!INCLUDE[net_v461](~/includes/net-v461-md.md)], они попадают на основе [стандарт Unix, версия 6.3.0](http://www.unicode.org/versions/Unicode6.3.0/).</span><span class="sxs-lookup"><span data-stu-id="02b23-312">In versions of the .NET Framework from the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] to  the [!INCLUDE[net_v461](~/includes/net-v461-md.md)], they are classified based on [The Unix Standard, Version 6.3.0](http://www.unicode.org/versions/Unicode6.3.0/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="02b23-313">В следующем примере демонстрируется <xref:System.Char.GetUnicodeCategory%2A>.</span><span class="sxs-lookup"><span data-stu-id="02b23-313">The following example demonstrates <xref:System.Char.GetUnicodeCategory%2A>.</span></span>  
  
 [!code-cpp[System.Char.GetUnicodeCategory#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.GetUnicodeCategory/CPP/getunicodecategory.cpp#1)]
 [!code-csharp[System.Char.GetUnicodeCategory#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.GetUnicodeCategory/CS/getunicodecategory.cs#1)]
 [!code-vb[System.Char.GetUnicodeCategory#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.GetUnicodeCategory/VB/getunicodecategory.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="02b23-314">Свойство <paramref name="s" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="02b23-314"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="02b23-315">Параметр <paramref name="index" /> имеет значение меньше нуля или больше последней позиции в <paramref name="s" />.</span><span class="sxs-lookup"><span data-stu-id="02b23-315"><paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />.</span></span></exception>
        <altmember cref="M:System.Globalization.CharUnicodeInfo.GetUnicodeCategory(System.Char)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsControl">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="02b23-316">Показывает, относится ли указанный символ Юникода к категории управляющих символов.</span><span class="sxs-lookup"><span data-stu-id="02b23-316">Indicates whether a specified Unicode character is categorized as a control character.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02b23-317">Управляющие символы форматирование и другие непечатаемые символы, такие как ACK, МЕТКА, CR, FF, LF и VT.</span><span class="sxs-lookup"><span data-stu-id="02b23-317">Control characters are formatting and other non-printing characters, such as ACK, BEL, CR, FF, LF, and VT.</span></span> <span data-ttu-id="02b23-318">В стандарте Юникода назначает кодовые точки от \U0000 до \U001F, \U007F и от \U0080 до \U009F для управляющие символы.</span><span class="sxs-lookup"><span data-stu-id="02b23-318">The Unicode standard assigns code points from \U0000 to \U001F, \U007F, and from \U0080 to \U009F to control characters.</span></span> <span data-ttu-id="02b23-319">Согласно стандарту Юникод данные значения должны интерпретироваться как управляющие символы, если их использование определено в приложении.</span><span class="sxs-lookup"><span data-stu-id="02b23-319">According to the Unicode standard, these values are to be interpreted as control characters unless their use is otherwise defined by an application.</span></span> <span data-ttu-id="02b23-320">Допустимые управляющие знаки являются членами <xref:System.Globalization.UnicodeCategory.Control?displayProperty=nameWithType> категории.</span><span class="sxs-lookup"><span data-stu-id="02b23-320">Valid control characters are members of the <xref:System.Globalization.UnicodeCategory.Control?displayProperty=nameWithType> category.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsControl">
      <MemberSignature Language="C#" Value="public static bool IsControl (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsControl(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsControl(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsControl (c As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsControl(char c);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c"><span data-ttu-id="02b23-321">Знак Юникода, который необходимо вычислить.</span><span class="sxs-lookup"><span data-stu-id="02b23-321">The Unicode character to evaluate.</span></span></param>
        <summary><span data-ttu-id="02b23-322">Показывает, относится ли указанный символ Юникода к категории управляющих символов.</span><span class="sxs-lookup"><span data-stu-id="02b23-322">Indicates whether the specified Unicode character is categorized as a control character.</span></span></summary>
        <returns>
          <span data-ttu-id="02b23-323"><see langword="true" />, если <paramref name="c" /> является управляющим символом; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="02b23-323"><see langword="true" /> if <paramref name="c" /> is a control character; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02b23-324">Управляющие символы форматирование и другие непечатаемые символы, такие как ACK, МЕТКА, CR, FF, LF и VT.</span><span class="sxs-lookup"><span data-stu-id="02b23-324">Control characters are formatting and other non-printing characters, such as ACK, BEL, CR, FF, LF, and VT.</span></span> <span data-ttu-id="02b23-325">T стандарта Юникод назначает кодовые точки от \U0000 до \U001F, \U007F и от \U0080 до \U009F для управляющие символы.</span><span class="sxs-lookup"><span data-stu-id="02b23-325">T The Unicode standard assigns code points from \U0000 to \U001F, \U007F, and from \U0080 to \U009F to control characters.</span></span> <span data-ttu-id="02b23-326">Согласно стандарту Юникод данные значения должны интерпретироваться как управляющие символы, если их использование определено в приложении.</span><span class="sxs-lookup"><span data-stu-id="02b23-326">According to the Unicode standard, these values are to be interpreted as control characters unless their use is otherwise defined by an application.</span></span> <span data-ttu-id="02b23-327">Допустимые управляющие знаки являются членами <xref:System.Globalization.UnicodeCategory.Control?displayProperty=nameWithType> категории.</span><span class="sxs-lookup"><span data-stu-id="02b23-327">Valid control characters are members of the <xref:System.Globalization.UnicodeCategory.Control?displayProperty=nameWithType> category.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="02b23-328">В следующем примере перечисляются кодовую точку Юникода каждого управляющие символы.</span><span class="sxs-lookup"><span data-stu-id="02b23-328">The following example lists the Unicode code point of each of the control characters.</span></span>  
  
 [!code-cpp[System.Char.IsControl#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsControl/CPP/iscontrol1.cpp#1)]
 [!code-csharp[System.Char.IsControl#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsControl/CS/IsControl1.cs#1)]
 [!code-vb[System.Char.IsControl#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsControl/VB/IsControl1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsControl">
      <MemberSignature Language="C#" Value="public static bool IsControl (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsControl(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsControl(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsControl (s As String, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsControl(System::String ^ s, int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="02b23-329">Строка.</span><span class="sxs-lookup"><span data-stu-id="02b23-329">A string.</span></span></param>
        <param name="index"><span data-ttu-id="02b23-330">Позиция символа, который необходимо вычислить, в <c>s</c>.</span><span class="sxs-lookup"><span data-stu-id="02b23-330">The position of the character to evaluate in <c>s</c>.</span></span></param>
        <summary><span data-ttu-id="02b23-331">Показывает, относится ли символ в указанной позиции в указанной строке к категории управляющих символов.</span><span class="sxs-lookup"><span data-stu-id="02b23-331">Indicates whether the character at the specified position in a specified string is categorized as a control character.</span></span></summary>
        <returns>
          <span data-ttu-id="02b23-332"><see langword="true" />, если символ позиции <paramref name="index" /> в <paramref name="s" /> является управляющим; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="02b23-332"><see langword="true" /> if the character at position <paramref name="index" /> in <paramref name="s" /> is a control character; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02b23-333">Позиций символов в строке индексируются, начиная с нуля.</span><span class="sxs-lookup"><span data-stu-id="02b23-333">Character positions in a string are indexed starting from zero.</span></span>  
  
 <span data-ttu-id="02b23-334">Управляющие символы форматирование и другие непечатаемые символы, такие как ACK, МЕТКА, CR, FF, LF и VT.</span><span class="sxs-lookup"><span data-stu-id="02b23-334">Control characters are formatting and other non-printing characters, such as ACK, BEL, CR, FF, LF, and VT.</span></span> <span data-ttu-id="02b23-335">В стандарте Юникода назначает кодовые точки от \U0000 до \U001F, \U007F и от \U0080 до \U009F для управляющие символы.</span><span class="sxs-lookup"><span data-stu-id="02b23-335">The Unicode standard assigns code points from \U0000 to \U001F, \U007F, and from \U0080 to \U009F to control characters.</span></span> <span data-ttu-id="02b23-336">Согласно стандарту Юникод данные значения должны интерпретироваться как управляющие символы, если их использование определено в приложении.</span><span class="sxs-lookup"><span data-stu-id="02b23-336">According to the Unicode standard, these values are to be interpreted as control characters unless their use is otherwise defined by an application.</span></span> <span data-ttu-id="02b23-337">Допустимые управляющие знаки являются членами <xref:System.Globalization.UnicodeCategory.Control?displayProperty=nameWithType> категории.</span><span class="sxs-lookup"><span data-stu-id="02b23-337">Valid control characters are members of the <xref:System.Globalization.UnicodeCategory.Control?displayProperty=nameWithType> category.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="02b23-338">Следующий пример перечисляет символы в строке и определяет, являются ли они управляющие символы.</span><span class="sxs-lookup"><span data-stu-id="02b23-338">The following example enumerates the characters in a string and determines whether any are control characters.</span></span>  
  
 [!code-cpp[System.Char.IsControl#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsControl/CPP/iscontrol2.cpp#2)]
 [!code-csharp[System.Char.IsControl#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsControl/CS/IsControl2.cs#2)]
 [!code-vb[System.Char.IsControl#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsControl/VB/IsControl2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="02b23-339">Свойство <paramref name="s" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="02b23-339"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="02b23-340">Параметр <paramref name="index" /> имеет значение меньше нуля или больше последней позиции в <paramref name="s" />.</span><span class="sxs-lookup"><span data-stu-id="02b23-340"><paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="IsDigit">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="02b23-341">Показывает, относится ли символ Юникода к категории десятичных цифр.</span><span class="sxs-lookup"><span data-stu-id="02b23-341">Indicates whether a Unicode character is categorized as a decimal digit.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02b23-342">Допустимые цифры являются членами <xref:System.Globalization.UnicodeCategory.DecimalDigitNumber?displayProperty=nameWithType> категории.</span><span class="sxs-lookup"><span data-stu-id="02b23-342">Valid digits are members of the <xref:System.Globalization.UnicodeCategory.DecimalDigitNumber?displayProperty=nameWithType> category.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsDigit">
      <MemberSignature Language="C#" Value="public static bool IsDigit (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsDigit(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsDigit(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsDigit (c As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsDigit(char c);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c"><span data-ttu-id="02b23-343">Знак Юникода, который необходимо вычислить.</span><span class="sxs-lookup"><span data-stu-id="02b23-343">The Unicode character to evaluate.</span></span></param>
        <summary><span data-ttu-id="02b23-344">Показывает, относится ли указанный символ Юникода к категории десятичных цифр.</span><span class="sxs-lookup"><span data-stu-id="02b23-344">Indicates whether the specified Unicode character is categorized as a decimal digit.</span></span></summary>
        <returns>
          <span data-ttu-id="02b23-345"><see langword="true" />, если <paramref name="c" /> является десятичной цифрой; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="02b23-345"><see langword="true" /> if <paramref name="c" /> is a decimal digit; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02b23-346">Этот метод определяет, является ли <xref:System.Char> является цифрой основание системы счисления-10.</span><span class="sxs-lookup"><span data-stu-id="02b23-346">This method determines whether a <xref:System.Char> is a radix-10 digit.</span></span> <span data-ttu-id="02b23-347">Эта ситуация отличается от <xref:System.Char.IsNumber%2A>, который определяет ли `Char` является любой числовой категории Юникода.</span><span class="sxs-lookup"><span data-stu-id="02b23-347">This contrasts with <xref:System.Char.IsNumber%2A>, which determines whether a `Char` is of any numeric Unicode category.</span></span> <span data-ttu-id="02b23-348">Номера содержат символы, такие как дроби, индексы, надстрочный, римские цифры, числители валюты, обведенные числа и цифры конкретного скрипта.</span><span class="sxs-lookup"><span data-stu-id="02b23-348">Numbers include characters such as fractions, subscripts, superscripts, Roman numerals, currency numerators, encircled numbers, and script-specific digits.</span></span>  
  
 <span data-ttu-id="02b23-349">Допустимые цифры являются членами <xref:System.Globalization.UnicodeCategory.DecimalDigitNumber?displayProperty=nameWithType> категории.</span><span class="sxs-lookup"><span data-stu-id="02b23-349">Valid digits are members of the <xref:System.Globalization.UnicodeCategory.DecimalDigitNumber?displayProperty=nameWithType> category.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="02b23-350">В следующем примере кода показано <xref:System.Char.IsDigit%2A>.</span><span class="sxs-lookup"><span data-stu-id="02b23-350">The following code example demonstrates <xref:System.Char.IsDigit%2A>.</span></span>  
  
 [!code-cpp[System.Char.IsDigit#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsDigit/CPP/isdigit.cpp#4)]
 [!code-csharp[System.Char.IsDigit#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsDigit/CS/isdigit.cs#4)]
 [!code-vb[System.Char.IsDigit#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsDigit/VB/isdigit.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Boolean" />
        <altmember cref="M:System.Char.IsNumber(System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="IsDigit">
      <MemberSignature Language="C#" Value="public static bool IsDigit (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsDigit(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsDigit(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsDigit (s As String, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsDigit(System::String ^ s, int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="02b23-351">Строка.</span><span class="sxs-lookup"><span data-stu-id="02b23-351">A string.</span></span></param>
        <param name="index"><span data-ttu-id="02b23-352">Позиция символа, который необходимо вычислить, в <c>s</c>.</span><span class="sxs-lookup"><span data-stu-id="02b23-352">The position of the character to evaluate in <c>s</c>.</span></span></param>
        <summary><span data-ttu-id="02b23-353">Показывает, относится ли указанный символ Юникода в указанной позиции в указанной строке к категории десятичных цифр.</span><span class="sxs-lookup"><span data-stu-id="02b23-353">Indicates whether the character at the specified position in a specified string is categorized as a decimal digit.</span></span></summary>
        <returns>
          <span data-ttu-id="02b23-354"><see langword="true" />, если символ в позиции <paramref name="index" /> в <paramref name="s" /> является десятичной цифрой; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="02b23-354"><see langword="true" /> if the character at position <paramref name="index" /> in <paramref name="s" /> is a decimal digit; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02b23-355">Этот метод определяет, является ли <xref:System.Char> является цифрой основание системы счисления-10.</span><span class="sxs-lookup"><span data-stu-id="02b23-355">This method determines whether a <xref:System.Char> is a radix-10 digit.</span></span> <span data-ttu-id="02b23-356">Эта ситуация отличается от <xref:System.Char.IsNumber%2A>, который определяет ли <xref:System.Char> является любой числовой категории Юникода.</span><span class="sxs-lookup"><span data-stu-id="02b23-356">This contrasts with <xref:System.Char.IsNumber%2A>, which determines whether a <xref:System.Char> is of any numeric Unicode category.</span></span> <span data-ttu-id="02b23-357">Номера содержат символы, такие как дроби, индексы, надстрочный, римские цифры, числители валюты, обведенные числа и цифры конкретного скрипта.</span><span class="sxs-lookup"><span data-stu-id="02b23-357">Numbers include characters such as fractions, subscripts, superscripts, Roman numerals, currency numerators, encircled numbers, and script-specific digits.</span></span>  
  
 <span data-ttu-id="02b23-358">Позиций символов в строке индексируются, начиная с нуля.</span><span class="sxs-lookup"><span data-stu-id="02b23-358">Character positions in a string are indexed starting from zero.</span></span>  
  
 <span data-ttu-id="02b23-359">Допустимые цифры являются членами <xref:System.Globalization.UnicodeCategory.DecimalDigitNumber?displayProperty=nameWithType> категории.</span><span class="sxs-lookup"><span data-stu-id="02b23-359">Valid digits are members of the <xref:System.Globalization.UnicodeCategory.DecimalDigitNumber?displayProperty=nameWithType> category.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="02b23-360">В следующем примере кода показано <xref:System.Char.IsDigit%2A>.</span><span class="sxs-lookup"><span data-stu-id="02b23-360">The following code example demonstrates <xref:System.Char.IsDigit%2A>.</span></span>  
  
 [!code-cpp[System.Char.IsDigit#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsDigit/CPP/isdigit.cpp#4)]
 [!code-csharp[System.Char.IsDigit#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsDigit/CS/isdigit.cs#4)]
 [!code-vb[System.Char.IsDigit#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsDigit/VB/isdigit.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="02b23-361">Свойство <paramref name="s" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="02b23-361"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="02b23-362">Параметр <paramref name="index" /> имеет значение меньше нуля или больше последней позиции в <paramref name="s" />.</span><span class="sxs-lookup"><span data-stu-id="02b23-362"><paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />.</span></span></exception>
        <altmember cref="T:System.Boolean" />
        <altmember cref="M:System.Char.IsNumber(System.Char)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsHighSurrogate">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="02b23-363">Определяет, является ли заданный объект <see cref="T:System.Char" /> старшим символом-заместителем.</span><span class="sxs-lookup"><span data-stu-id="02b23-363">Indicates whether the specified <see cref="T:System.Char" /> object is a high surrogate.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsHighSurrogate">
      <MemberSignature Language="C#" Value="public static bool IsHighSurrogate (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsHighSurrogate(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsHighSurrogate(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsHighSurrogate (c As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsHighSurrogate(char c);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c"><span data-ttu-id="02b23-364">Знак Юникода, который необходимо вычислить.</span><span class="sxs-lookup"><span data-stu-id="02b23-364">The Unicode character to evaluate.</span></span></param>
        <summary><span data-ttu-id="02b23-365">Определяет, является ли заданный объект <see cref="T:System.Char" /> старшим символом-заместителем.</span><span class="sxs-lookup"><span data-stu-id="02b23-365">Indicates whether the specified <see cref="T:System.Char" /> object is a high surrogate.</span></span></summary>
        <returns>
          <span data-ttu-id="02b23-366"><see langword="true" />,  если числовое значение параметра <paramref name="c" /> лежит в диапазоне от U+D800 до U+DBFF; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="02b23-366"><see langword="true" /> if the numeric value of the <paramref name="c" /> parameter ranges from U+D800 through U+DBFF; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02b23-367">Помимо представления отдельных символов с помощью 16-битовой кодовой точки, кодировка UTF-16 позволяет представлять абстрактные символы с помощью двух точек 16-разрядного кода, которые называются суррогатную пару.</span><span class="sxs-lookup"><span data-stu-id="02b23-367">In addition to representing single characters using a 16-bit code point, UTF-16 encoding allows abstract characters to be represented using two 16-bit code points, which is known as a surrogate pair.</span></span> <span data-ttu-id="02b23-368">Первый элемент в данной паре является старшим символом-заместителем.</span><span class="sxs-lookup"><span data-stu-id="02b23-368">The first element in this pair is the high surrogate.</span></span> <span data-ttu-id="02b23-369">Его кодовая точка находится в диапазоне от U + D800 до U + DBFF.</span><span class="sxs-lookup"><span data-stu-id="02b23-369">Its code point can range from U+D800 to U+DBFF.</span></span> <span data-ttu-id="02b23-370">Отдельный заменяющий не имеет интерпретации свое собственное. он имеет значение только при использовании в составе суррогатную пару.</span><span class="sxs-lookup"><span data-stu-id="02b23-370">An individual surrogate has no interpretation of its own; it is meaningful only when used as part of a surrogate pair.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="02b23-371">В следующем примере кода показано <xref:System.Char.IsHighSurrogate%2A>, <xref:System.Char.IsLowSurrogate%2A>, и <xref:System.Char.IsSurrogatePair%2A> методы.</span><span class="sxs-lookup"><span data-stu-id="02b23-371">The following code example demonstrates the <xref:System.Char.IsHighSurrogate%2A>, <xref:System.Char.IsLowSurrogate%2A>, and <xref:System.Char.IsSurrogatePair%2A> methods.</span></span>  
  
 [!code-cpp[char.surrogate#1](~/samples/snippets/cpp/VS_Snippets_CLR/char.surrogate/CPP/sur.cpp#1)]
 [!code-csharp[char.surrogate#1](~/samples/snippets/csharp/VS_Snippets_CLR/char.surrogate/CS/sur.cs#1)]
 [!code-vb[char.surrogate#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/char.surrogate/VB/sur.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsHighSurrogate">
      <MemberSignature Language="C#" Value="public static bool IsHighSurrogate (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsHighSurrogate(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsHighSurrogate(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsHighSurrogate (s As String, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsHighSurrogate(System::String ^ s, int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="02b23-372">Строка.</span><span class="sxs-lookup"><span data-stu-id="02b23-372">A string.</span></span></param>
        <param name="index"><span data-ttu-id="02b23-373">Позиция символа, который необходимо вычислить, в <c>s</c>.</span><span class="sxs-lookup"><span data-stu-id="02b23-373">The position of the character to evaluate in <c>s</c>.</span></span></param>
        <summary><span data-ttu-id="02b23-374">Определяет, является ли объект <see cref="T:System.Char" /> в заданной позиции в строке старшим символом-заместителем.</span><span class="sxs-lookup"><span data-stu-id="02b23-374">Indicates whether the <see cref="T:System.Char" /> object at the specified position in a string is a high surrogate.</span></span></summary>
        <returns>
          <span data-ttu-id="02b23-375"><see langword="true" />,  если числовое значение заданного символа в параметре <paramref name="s" /> лежит в диапазоне от U+D800 до U+DBFF; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="02b23-375"><see langword="true" /> if the numeric value of the specified character in the <paramref name="s" /> parameter ranges from U+D800 through U+DBFF; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02b23-376">`index` Параметра начинается с нуля.</span><span class="sxs-lookup"><span data-stu-id="02b23-376">The `index` parameter is zero-based.</span></span>  
  
 <span data-ttu-id="02b23-377">Помимо представления отдельных символов с помощью 16-битовой кодовой точки, кодировка UTF-16 позволяет представлять абстрактные символы с помощью двух точек 16-разрядного кода, которые называются суррогатную пару.</span><span class="sxs-lookup"><span data-stu-id="02b23-377">In addition to representing single characters using a 16-bit code point, UTF-16 encoding allows abstract characters to be represented using two 16-bit code points, which is known as a surrogate pair.</span></span> <span data-ttu-id="02b23-378">Первый элемент в данной паре является старшим символом-заместителем.</span><span class="sxs-lookup"><span data-stu-id="02b23-378">The first element in this pair is the high surrogate.</span></span> <span data-ttu-id="02b23-379">Его кодовая точка находится в диапазоне от U + D800 до U + DBFF.</span><span class="sxs-lookup"><span data-stu-id="02b23-379">Its code point can range from U+D800 to U+DBFF.</span></span> <span data-ttu-id="02b23-380">Отдельный заменяющий не имеет интерпретации свое собственное. он имеет значение только при использовании в составе суррогатную пару.</span><span class="sxs-lookup"><span data-stu-id="02b23-380">An individual surrogate has no interpretation of its own; it is meaningful only when used as part of a surrogate pair.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="02b23-381">В следующем примере кода показано <xref:System.Char.IsHighSurrogate%2A>, <xref:System.Char.IsLowSurrogate%2A>, и <xref:System.Char.IsSurrogatePair%2A> методы.</span><span class="sxs-lookup"><span data-stu-id="02b23-381">The following code example demonstrates the <xref:System.Char.IsHighSurrogate%2A>, <xref:System.Char.IsLowSurrogate%2A>, and <xref:System.Char.IsSurrogatePair%2A> methods.</span></span>  
  
 [!code-cpp[char.surrogate#1](~/samples/snippets/cpp/VS_Snippets_CLR/char.surrogate/CPP/sur.cpp#1)]
 [!code-csharp[char.surrogate#1](~/samples/snippets/csharp/VS_Snippets_CLR/char.surrogate/CS/sur.cs#1)]
 [!code-vb[char.surrogate#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/char.surrogate/VB/sur.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="02b23-382">Свойство <paramref name="s" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="02b23-382"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="02b23-383"><paramref name="index" /> не является позицией в <paramref name="s" />.</span><span class="sxs-lookup"><span data-stu-id="02b23-383"><paramref name="index" /> is not a position within <paramref name="s" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="IsLetter">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="02b23-384">Показывает, относится ли символ Юникода к категории букв Юникода.</span><span class="sxs-lookup"><span data-stu-id="02b23-384">Indicates whether a Unicode character is categorized as a Unicode letter.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02b23-385">Этот метод определяет, является ли <xref:System.Char> является членом какой-либо категории букв Юникода.</span><span class="sxs-lookup"><span data-stu-id="02b23-385">This method determines whether a <xref:System.Char> is a member of any category of Unicode letter.</span></span> <span data-ttu-id="02b23-386">Ниже перечислены буквы Юникода.</span><span class="sxs-lookup"><span data-stu-id="02b23-386">Unicode letters include the following:</span></span>  
  
-   <span data-ttu-id="02b23-387">Буквы в верхнем регистре, такие как U + 0041 (прописная латинская буква А) до U + 005A (LATIN CAPITAL LETTER Z), или U + 0400 (КИРИЛЛИЦА ЗАГЛАВНАЯ буква IE с апостроф) до U + 042F (КИРИЛЛИЦА прописная буква ИНТЕРЕСНЫМИ).</span><span class="sxs-lookup"><span data-stu-id="02b23-387">Uppercase letters, such as U+0041 (LATIN CAPITAL LETTER A) through U+005A (LATIN CAPITAL LETTER Z), or U+0400 (CYRILLIC CAPITAL LETTER IE WITH GRAVE) through U+042F (CYRILLIC CAPITAL LETTER YA).</span></span> <span data-ttu-id="02b23-388">Эти символы являются членами <xref:System.Globalization.UnicodeCategory.UppercaseLetter?displayProperty=nameWithType> категории.</span><span class="sxs-lookup"><span data-stu-id="02b23-388">These characters are members of the <xref:System.Globalization.UnicodeCategory.UppercaseLetter?displayProperty=nameWithType> category.</span></span>  
  
-   <span data-ttu-id="02b23-389">Строчные буквы, например, U + 0061 (латинскую букву A) до U + 007A (ЛАТИНИЦА НЕБОЛЬШОЙ буква Z), или U + 03AC (ГРЕЧЕСКИЙ НЕБОЛЬШОЙ буква АЛЬФА с ТОНОСОМ) до U + 03CE (ГРЕЧЕСКИЙ НЕБОЛЬШОЙ буква ОМЕГА с ТОНОСОМ).</span><span class="sxs-lookup"><span data-stu-id="02b23-389">Lowercase letters, such as U+0061 (LATIN SMALL LETTER A) through U+007A (LATIN SMALL LETTER Z), or U+03AC (GREEK SMALL LETTER ALPHA WITH TONOS) through U+03CE (GREEK SMALL LETTER OMEGA WITH TONOS).</span></span> <span data-ttu-id="02b23-390">Эти символы являются членами <xref:System.Globalization.UnicodeCategory.LowercaseLetter?displayProperty=nameWithType> категории.</span><span class="sxs-lookup"><span data-stu-id="02b23-390">These characters are members of the <xref:System.Globalization.UnicodeCategory.LowercaseLetter?displayProperty=nameWithType> category.</span></span>  
  
-   <span data-ttu-id="02b23-391">Title регистр символов, таких как 01 C 5 (ЛАТИНИЦА ЗАГЛАВНОЙ буквы D с НЕБОЛЬШОЙ буква Z с ГАЛОЧКОЙ) или U + 1FFC (ГРЕЧЕСКИЙ ЗАГЛАВНАЯ буква ОМЕГА с PROSGEGRAMMENI).</span><span class="sxs-lookup"><span data-stu-id="02b23-391">Title case letters, such as U+01C5 (LATIN CAPITAL LETTER D WITH SMALL LETTER Z WITH CARON) or U+1FFC (GREEK CAPITAL LETTER OMEGA WITH PROSGEGRAMMENI).</span></span> <span data-ttu-id="02b23-392">Эти символы являются членами <xref:System.Globalization.UnicodeCategory.TitlecaseLetter?displayProperty=nameWithType> категории.</span><span class="sxs-lookup"><span data-stu-id="02b23-392">These characters are members of the <xref:System.Globalization.UnicodeCategory.TitlecaseLetter?displayProperty=nameWithType> category.</span></span>  
  
-   <span data-ttu-id="02b23-393">Модификаторы, такие как U + 02B0 (МОДИФИКАТОР буквы НЕБОЛЬШОЙ H) до U + 02C 1 (МОДИФИКАТОР буквы ПЕРЕВЕРНУТ GLOTTAL ОСТАНОВКА), или U + 1D2C (A прописная буква МОДИФИКАТОР) до U + 1 d 61 (ХИ НЕБОЛЬШОЙ БУКВОЙ МОДИФИКАТОРА).</span><span class="sxs-lookup"><span data-stu-id="02b23-393">Modifiers, such as U+02B0 (MODIFIER LETTER SMALL H) through U+02C1 (MODIFIER LETTER REVERSED GLOTTAL STOP), or U+1D2C (MODIFIER LETTER CAPITAL A) through U+1D61 (MODIFIER LETTER SMALL CHI).</span></span> <span data-ttu-id="02b23-394">Эти символы являются членами <xref:System.Globalization.UnicodeCategory.ModifierLetter?displayProperty=nameWithType> категории.</span><span class="sxs-lookup"><span data-stu-id="02b23-394">These characters are members of the <xref:System.Globalization.UnicodeCategory.ModifierLetter?displayProperty=nameWithType> category.</span></span>  
  
-   <span data-ttu-id="02b23-395">Другими буквами, такие как U + 05 D 0 (ИВРИТ буква АЛЕФ) до U + 05EA (ИВРИТ буква TAV), U + 0621 (АРАБСКИЙ ГАМЗА буква) до U + 063A (АРАБСКИЙ буква GHAIN) или U + 4E00 (\<идеографический символ ККЯ, первый >) до U + 9 FC 3 (\<идеографический символ ККЯ, Дата последнего >).</span><span class="sxs-lookup"><span data-stu-id="02b23-395">Other letters, such as U+05D0 (HEBREW LETTER ALEF) through U+05EA (HEBREW LETTER TAV), U+0621 (ARABIC LETTER HAMZA) through U+063A (ARABIC LETTER GHAIN), or U+4E00 (\<CJK Ideograph, First>) through U+9FC3 (\<CJK Ideograph, Last>).</span></span> <span data-ttu-id="02b23-396">Эти символы являются членами <xref:System.Globalization.UnicodeCategory.OtherLetter?displayProperty=nameWithType> категории.</span><span class="sxs-lookup"><span data-stu-id="02b23-396">These characters are members of the <xref:System.Globalization.UnicodeCategory.OtherLetter?displayProperty=nameWithType> category.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsLetter">
      <MemberSignature Language="C#" Value="public static bool IsLetter (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsLetter(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsLetter(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsLetter (c As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsLetter(char c);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c"><span data-ttu-id="02b23-397">Знак Юникода, который необходимо вычислить.</span><span class="sxs-lookup"><span data-stu-id="02b23-397">The Unicode character to evaluate.</span></span></param>
        <summary><span data-ttu-id="02b23-398">Показывает, относится ли указанный символ Юникода к категории букв Юникода.</span><span class="sxs-lookup"><span data-stu-id="02b23-398">Indicates whether the specified Unicode character is categorized as a Unicode letter.</span></span></summary>
        <returns>
          <span data-ttu-id="02b23-399">Значение <see langword="true" />, если <paramref name="c" /> является буквой; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="02b23-399"><see langword="true" /> if <paramref name="c" /> is a letter; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02b23-400">Этот метод определяет, является ли <xref:System.Char> является членом какой-либо категории букв Юникода.</span><span class="sxs-lookup"><span data-stu-id="02b23-400">This method determines whether a <xref:System.Char> is a member of any category of Unicode letter.</span></span> <span data-ttu-id="02b23-401">Ниже перечислены буквы Юникода.</span><span class="sxs-lookup"><span data-stu-id="02b23-401">Unicode letters include the following:</span></span>  
  
-   <span data-ttu-id="02b23-402">Буквы в верхнем регистре, такие как U + 0041 (прописная латинская буква А) до U + 005A (LATIN CAPITAL LETTER Z), или U + 0400 (КИРИЛЛИЦА ЗАГЛАВНАЯ буква IE с апостроф) до U + 042F (КИРИЛЛИЦА прописная буква ИНТЕРЕСНЫМИ).</span><span class="sxs-lookup"><span data-stu-id="02b23-402">Uppercase letters, such as U+0041 (LATIN CAPITAL LETTER A) through U+005A (LATIN CAPITAL LETTER Z), or U+0400 (CYRILLIC CAPITAL LETTER IE WITH GRAVE) through U+042F (CYRILLIC CAPITAL LETTER YA).</span></span> <span data-ttu-id="02b23-403">Эти символы являются членами <xref:System.Globalization.UnicodeCategory.UppercaseLetter?displayProperty=nameWithType> категории.</span><span class="sxs-lookup"><span data-stu-id="02b23-403">These characters are members of the <xref:System.Globalization.UnicodeCategory.UppercaseLetter?displayProperty=nameWithType> category.</span></span>  
  
-   <span data-ttu-id="02b23-404">Строчные буквы, например, U + 0061 (латинскую букву A) до U + 007A (ЛАТИНИЦА НЕБОЛЬШОЙ буква Z), или U + 03AC (ГРЕЧЕСКИЙ НЕБОЛЬШОЙ буква АЛЬФА с ТОНОСОМ) до U + 03CE (ГРЕЧЕСКИЙ НЕБОЛЬШОЙ буква ОМЕГА с ТОНОСОМ).</span><span class="sxs-lookup"><span data-stu-id="02b23-404">Lowercase letters, such as U+0061 (LATIN SMALL LETTER A) through U+007A (LATIN SMALL LETTER Z), or U+03AC (GREEK SMALL LETTER ALPHA WITH TONOS) through U+03CE (GREEK SMALL LETTER OMEGA WITH TONOS).</span></span> <span data-ttu-id="02b23-405">Эти символы являются членами <xref:System.Globalization.UnicodeCategory.LowercaseLetter?displayProperty=nameWithType> категории.</span><span class="sxs-lookup"><span data-stu-id="02b23-405">These characters are members of the <xref:System.Globalization.UnicodeCategory.LowercaseLetter?displayProperty=nameWithType> category.</span></span>  
  
-   <span data-ttu-id="02b23-406">Title регистр символов, таких как 01 C 5 (ЛАТИНИЦА ЗАГЛАВНОЙ буквы D с НЕБОЛЬШОЙ буква Z с ГАЛОЧКОЙ) или U + 1FFC (ГРЕЧЕСКИЙ ЗАГЛАВНАЯ буква ОМЕГА с PROSGEGRAMMENI).</span><span class="sxs-lookup"><span data-stu-id="02b23-406">Title case letters, such as U+01C5 (LATIN CAPITAL LETTER D WITH SMALL LETTER Z WITH CARON) or U+1FFC (GREEK CAPITAL LETTER OMEGA WITH PROSGEGRAMMENI).</span></span> <span data-ttu-id="02b23-407">Эти символы являются членами <xref:System.Globalization.UnicodeCategory.TitlecaseLetter?displayProperty=nameWithType> категории.</span><span class="sxs-lookup"><span data-stu-id="02b23-407">These characters are members of the <xref:System.Globalization.UnicodeCategory.TitlecaseLetter?displayProperty=nameWithType> category.</span></span>  
  
-   <span data-ttu-id="02b23-408">Модификаторы, такие как U + 02B0 (МОДИФИКАТОР буквы НЕБОЛЬШОЙ H) до U + 02C 1 (МОДИФИКАТОР буквы ПЕРЕВЕРНУТ GLOTTAL ОСТАНОВКА), или U + 1D2C (A прописная буква МОДИФИКАТОР) до U + 1 d 61 (ХИ НЕБОЛЬШОЙ БУКВОЙ МОДИФИКАТОРА).</span><span class="sxs-lookup"><span data-stu-id="02b23-408">Modifiers, such as U+02B0 (MODIFIER LETTER SMALL H) through U+02C1 (MODIFIER LETTER REVERSED GLOTTAL STOP), or U+1D2C (MODIFIER LETTER CAPITAL A) through U+1D61 (MODIFIER LETTER SMALL CHI).</span></span> <span data-ttu-id="02b23-409">Эти символы являются членами <xref:System.Globalization.UnicodeCategory.ModifierLetter?displayProperty=nameWithType> категории.</span><span class="sxs-lookup"><span data-stu-id="02b23-409">These characters are members of the <xref:System.Globalization.UnicodeCategory.ModifierLetter?displayProperty=nameWithType> category.</span></span>  
  
-   <span data-ttu-id="02b23-410">Другими буквами, такие как U + 05 D 0 (ИВРИТ буква АЛЕФ) до U + 05EA (ИВРИТ буква TAV), U + 0621 (АРАБСКИЙ ГАМЗА буква) до U + 063A (АРАБСКИЙ буква GHAIN) или U + 4E00 (\<идеографический символ ККЯ, первый >) до U + 9 FC 3 (\<идеографический символ ККЯ, Дата последнего >).</span><span class="sxs-lookup"><span data-stu-id="02b23-410">Other letters, such as U+05D0 (HEBREW LETTER ALEF) through U+05EA (HEBREW LETTER TAV), U+0621 (ARABIC LETTER HAMZA) through U+063A (ARABIC LETTER GHAIN), or U+4E00 (\<CJK Ideograph, First>) through U+9FC3 (\<CJK Ideograph, Last>).</span></span> <span data-ttu-id="02b23-411">Эти символы являются членами <xref:System.Globalization.UnicodeCategory.OtherLetter?displayProperty=nameWithType> категории.</span><span class="sxs-lookup"><span data-stu-id="02b23-411">These characters are members of the <xref:System.Globalization.UnicodeCategory.OtherLetter?displayProperty=nameWithType> category.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="02b23-412">В следующем примере кода показано <xref:System.Char.IsLetter%2A>.</span><span class="sxs-lookup"><span data-stu-id="02b23-412">The following code example demonstrates <xref:System.Char.IsLetter%2A>.</span></span>  
  
 [!code-cpp[System.Char.IsLetter#5](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsLetter/CPP/isletter.cpp#5)]
 [!code-csharp[System.Char.IsLetter#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsLetter/CS/isletter.cs#5)]
 [!code-vb[System.Char.IsLetter#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsLetter/VB/isletter.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Boolean" />
      </Docs>
    </Member>
    <Member MemberName="IsLetter">
      <MemberSignature Language="C#" Value="public static bool IsLetter (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsLetter(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsLetter(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsLetter (s As String, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsLetter(System::String ^ s, int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="02b23-413">Строка.</span><span class="sxs-lookup"><span data-stu-id="02b23-413">A string.</span></span></param>
        <param name="index"><span data-ttu-id="02b23-414">Позиция символа, который необходимо вычислить, в <c>s</c>.</span><span class="sxs-lookup"><span data-stu-id="02b23-414">The position of the character to evaluate in <c>s</c>.</span></span></param>
        <summary><span data-ttu-id="02b23-415">Показывает, относится ли символ в указанной позиции в указанной строке к категории букв Юникода.</span><span class="sxs-lookup"><span data-stu-id="02b23-415">Indicates whether the character at the specified position in a specified string is categorized as a Unicode letter.</span></span></summary>
        <returns>
          <span data-ttu-id="02b23-416">Значение <see langword="true" />, если знак в позиции <paramref name="index" /> в <paramref name="s" /> является буквой; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="02b23-416"><see langword="true" /> if the character at position <paramref name="index" /> in <paramref name="s" /> is a letter; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02b23-417">Позиций символов в строке индексируются, начиная с нуля.</span><span class="sxs-lookup"><span data-stu-id="02b23-417">Character positions in a string are indexed starting from zero.</span></span>  
  
 <span data-ttu-id="02b23-418">Этот метод определяет, является ли указанный символ в указанной позиции индекса в строке является членом какой-либо категории букв Юникода.</span><span class="sxs-lookup"><span data-stu-id="02b23-418">This method determines whether the character at a specified index position in a string is a member of any category of Unicode letter.</span></span> <span data-ttu-id="02b23-419">Ниже перечислены буквы Юникода.</span><span class="sxs-lookup"><span data-stu-id="02b23-419">Unicode letters include the following:</span></span>  
  
-   <span data-ttu-id="02b23-420">Буквы в верхнем регистре, такие как U + 0041 (прописная латинская буква А) до U + 005A (LATIN CAPITAL LETTER Z), или U + 0400 (КИРИЛЛИЦА ЗАГЛАВНАЯ буква IE с апостроф) до U + 042F (КИРИЛЛИЦА прописная буква ИНТЕРЕСНЫМИ).</span><span class="sxs-lookup"><span data-stu-id="02b23-420">Uppercase letters, such as U+0041 (LATIN CAPITAL LETTER A) through U+005A (LATIN CAPITAL LETTER Z), or U+0400 (CYRILLIC CAPITAL LETTER IE WITH GRAVE) through U+042F (CYRILLIC CAPITAL LETTER YA).</span></span> <span data-ttu-id="02b23-421">Эти символы являются членами <xref:System.Globalization.UnicodeCategory.UppercaseLetter?displayProperty=nameWithType> категории.</span><span class="sxs-lookup"><span data-stu-id="02b23-421">These characters are members of the <xref:System.Globalization.UnicodeCategory.UppercaseLetter?displayProperty=nameWithType> category.</span></span>  
  
-   <span data-ttu-id="02b23-422">Строчные буквы, например, U + 0061 (латинскую букву A) до U + 007A (ЛАТИНИЦА НЕБОЛЬШОЙ буква Z), или U + 03AC (ГРЕЧЕСКИЙ НЕБОЛЬШОЙ буква АЛЬФА с ТОНОСОМ) до U + 03CE (ГРЕЧЕСКИЙ НЕБОЛЬШОЙ буква ОМЕГА с ТОНОСОМ).</span><span class="sxs-lookup"><span data-stu-id="02b23-422">Lowercase letters, such as U+0061 (LATIN SMALL LETTER A) through U+007A (LATIN SMALL LETTER Z), or U+03AC (GREEK SMALL LETTER ALPHA WITH TONOS) through U+03CE (GREEK SMALL LETTER OMEGA WITH TONOS).</span></span> <span data-ttu-id="02b23-423">Эти символы являются членами <xref:System.Globalization.UnicodeCategory.LowercaseLetter?displayProperty=nameWithType> категории.</span><span class="sxs-lookup"><span data-stu-id="02b23-423">These characters are members of the <xref:System.Globalization.UnicodeCategory.LowercaseLetter?displayProperty=nameWithType> category.</span></span>  
  
-   <span data-ttu-id="02b23-424">Title регистр символов, таких как 01 C 5 (ЛАТИНИЦА ЗАГЛАВНОЙ буквы D с НЕБОЛЬШОЙ буква Z с ГАЛОЧКОЙ) или U + 1FFC (ГРЕЧЕСКИЙ ЗАГЛАВНАЯ буква ОМЕГА с PROSGEGRAMMENI).</span><span class="sxs-lookup"><span data-stu-id="02b23-424">Title case letters, such as U+01C5 (LATIN CAPITAL LETTER D WITH SMALL LETTER Z WITH CARON) or U+1FFC (GREEK CAPITAL LETTER OMEGA WITH PROSGEGRAMMENI).</span></span> <span data-ttu-id="02b23-425">Эти символы являются членами <xref:System.Globalization.UnicodeCategory.TitlecaseLetter?displayProperty=nameWithType> категории.</span><span class="sxs-lookup"><span data-stu-id="02b23-425">These characters are members of the <xref:System.Globalization.UnicodeCategory.TitlecaseLetter?displayProperty=nameWithType> category.</span></span>  
  
-   <span data-ttu-id="02b23-426">Модификаторы, такие как U + 02B0 (МОДИФИКАТОР буквы НЕБОЛЬШОЙ H) до U + 02C 1 (МОДИФИКАТОР буквы ПЕРЕВЕРНУТ GLOTTAL ОСТАНОВКА), или U + 1D2C (A прописная буква МОДИФИКАТОР) до U + 1 d 61 (ХИ НЕБОЛЬШОЙ БУКВОЙ МОДИФИКАТОРА).</span><span class="sxs-lookup"><span data-stu-id="02b23-426">Modifiers, such as U+02B0 (MODIFIER LETTER SMALL H) through U+02C1 (MODIFIER LETTER REVERSED GLOTTAL STOP), or U+1D2C (MODIFIER LETTER CAPITAL A) through U+1D61 (MODIFIER LETTER SMALL CHI).</span></span> <span data-ttu-id="02b23-427">Эти символы являются членами <xref:System.Globalization.UnicodeCategory.ModifierLetter?displayProperty=nameWithType> категории.</span><span class="sxs-lookup"><span data-stu-id="02b23-427">These characters are members of the <xref:System.Globalization.UnicodeCategory.ModifierLetter?displayProperty=nameWithType> category.</span></span>  
  
-   <span data-ttu-id="02b23-428">Другими буквами, такие как U + 05 D 0 (ИВРИТ буква АЛЕФ) до U + 05EA (ИВРИТ буква TAV), U + 0621 (АРАБСКИЙ ГАМЗА буква) до U + 063A (АРАБСКИЙ буква GHAIN) или U + 4E00 (\<идеографический символ ККЯ, первый >) до U + 9 FC 3 (\<идеографический символ ККЯ, Дата последнего >).</span><span class="sxs-lookup"><span data-stu-id="02b23-428">Other letters, such as U+05D0 (HEBREW LETTER ALEF) through U+05EA (HEBREW LETTER TAV), U+0621 (ARABIC LETTER HAMZA) through U+063A (ARABIC LETTER GHAIN), or U+4E00 (\<CJK Ideograph, First>) through U+9FC3 (\<CJK Ideograph, Last>).</span></span> <span data-ttu-id="02b23-429">Эти символы являются членами <xref:System.Globalization.UnicodeCategory.OtherLetter?displayProperty=nameWithType> категории.</span><span class="sxs-lookup"><span data-stu-id="02b23-429">These characters are members of the <xref:System.Globalization.UnicodeCategory.OtherLetter?displayProperty=nameWithType> category.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="02b23-430">В следующем примере кода показано <xref:System.Char.IsLetter%2A>.</span><span class="sxs-lookup"><span data-stu-id="02b23-430">The following code example demonstrates <xref:System.Char.IsLetter%2A>.</span></span>  
  
 [!code-cpp[System.Char.IsLetter#5](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsLetter/CPP/isletter.cpp#5)]
 [!code-csharp[System.Char.IsLetter#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsLetter/CS/isletter.cs#5)]
 [!code-vb[System.Char.IsLetter#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsLetter/VB/isletter.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="02b23-431">Свойство <paramref name="s" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="02b23-431"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="02b23-432">Параметр <paramref name="index" /> имеет значение меньше нуля или больше последней позиции в <paramref name="s" />.</span><span class="sxs-lookup"><span data-stu-id="02b23-432"><paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />.</span></span></exception>
        <altmember cref="T:System.Boolean" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsLetterOrDigit">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="02b23-433">Показывает, относится ли символ Юникода к категории букв или десятичных цифр.</span><span class="sxs-lookup"><span data-stu-id="02b23-433">Indicates whether a Unicode character is categorized as a letter or a decimal digit.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02b23-434">Допустимые буквы и цифры являются членами следующих категорий в <xref:System.Globalization.UnicodeCategory>: `UppercaseLetter`, `LowercaseLetter`, `TitlecaseLetter`, `ModifierLetter`, `OtherLetter`, или `DecimalDigitNumber`.</span><span class="sxs-lookup"><span data-stu-id="02b23-434">Valid letters and decimal digits are members of the following categories in <xref:System.Globalization.UnicodeCategory>: `UppercaseLetter`, `LowercaseLetter`, `TitlecaseLetter`, `ModifierLetter`, `OtherLetter`, or `DecimalDigitNumber`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsLetterOrDigit">
      <MemberSignature Language="C#" Value="public static bool IsLetterOrDigit (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsLetterOrDigit(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsLetterOrDigit(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsLetterOrDigit (c As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsLetterOrDigit(char c);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c"><span data-ttu-id="02b23-435">Знак Юникода, который необходимо вычислить.</span><span class="sxs-lookup"><span data-stu-id="02b23-435">The Unicode character to evaluate.</span></span></param>
        <summary><span data-ttu-id="02b23-436">Показывает, относится ли указанный символ Юникода к категории букв или десятичных цифр.</span><span class="sxs-lookup"><span data-stu-id="02b23-436">Indicates whether the specified Unicode character is categorized as a letter or a decimal digit.</span></span></summary>
        <returns>
          <span data-ttu-id="02b23-437">Значение <see langword="true" />, если <paramref name="c" /> является буквой или десятичной цифрой; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="02b23-437"><see langword="true" /> if <paramref name="c" /> is a letter or a decimal digit; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02b23-438">Допустимые буквы и цифры являются членами следующих категорий в <xref:System.Globalization.UnicodeCategory>: `UppercaseLetter`, `LowercaseLetter`, `TitlecaseLetter`, `ModifierLetter`, `OtherLetter`, или `DecimalDigitNumber`.</span><span class="sxs-lookup"><span data-stu-id="02b23-438">Valid letters and decimal digits are members of the following categories in <xref:System.Globalization.UnicodeCategory>: `UppercaseLetter`, `LowercaseLetter`, `TitlecaseLetter`, `ModifierLetter`, `OtherLetter`, or `DecimalDigitNumber`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="02b23-439">В следующем примере кода показано <xref:System.Char.IsLetterOrDigit%2A>.</span><span class="sxs-lookup"><span data-stu-id="02b23-439">The following code example demonstrates <xref:System.Char.IsLetterOrDigit%2A>.</span></span>  
  
 [!code-cpp[System.Char.IsLetterOrDigit#6](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsLetterOrDigit/CPP/isletterordigit.cpp#6)]
 [!code-csharp[System.Char.IsLetterOrDigit#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsLetterOrDigit/CS/isletterordigit.cs#6)]
 [!code-vb[System.Char.IsLetterOrDigit#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsLetterOrDigit/VB/isletterordigit.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Boolean" />
      </Docs>
    </Member>
    <Member MemberName="IsLetterOrDigit">
      <MemberSignature Language="C#" Value="public static bool IsLetterOrDigit (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsLetterOrDigit(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsLetterOrDigit(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsLetterOrDigit (s As String, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsLetterOrDigit(System::String ^ s, int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="02b23-440">Строка.</span><span class="sxs-lookup"><span data-stu-id="02b23-440">A string.</span></span></param>
        <param name="index"><span data-ttu-id="02b23-441">Позиция символа, который необходимо вычислить, в <c>s</c>.</span><span class="sxs-lookup"><span data-stu-id="02b23-441">The position of the character to evaluate in <c>s</c>.</span></span></param>
        <summary><span data-ttu-id="02b23-442">Показывает, относится ли символ в указанной позиции в указанной строке к категории букв или десятичных цифр.</span><span class="sxs-lookup"><span data-stu-id="02b23-442">Indicates whether the character at the specified position in a specified string is categorized as a letter or a decimal digit.</span></span></summary>
        <returns>
          <span data-ttu-id="02b23-443">Значение <see langword="true" />, если знак в позиции <paramref name="index" /> в <paramref name="s" /> является буквой или десятичной цифрой; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="02b23-443"><see langword="true" /> if the character at position <paramref name="index" /> in <paramref name="s" /> is a letter or a decimal digit; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02b23-444">Позиций символов в строке индексируются, начиная с нуля.</span><span class="sxs-lookup"><span data-stu-id="02b23-444">Character positions in a string are indexed starting from zero.</span></span>  
  
 <span data-ttu-id="02b23-445">Допустимые буквы и цифры являются членами следующих категорий в <xref:System.Globalization.UnicodeCategory>: `UppercaseLetter`, `LowercaseLetter`, `TitlecaseLetter`, `ModifierLetter`, `OtherLetter`, или `DecimalDigitNumber`.</span><span class="sxs-lookup"><span data-stu-id="02b23-445">Valid letters and decimal digits are members of the following categories in <xref:System.Globalization.UnicodeCategory>: `UppercaseLetter`, `LowercaseLetter`, `TitlecaseLetter`, `ModifierLetter`, `OtherLetter`, or `DecimalDigitNumber`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="02b23-446">В следующем примере кода показано <xref:System.Char.IsLetterOrDigit%2A>.</span><span class="sxs-lookup"><span data-stu-id="02b23-446">The following code example demonstrates <xref:System.Char.IsLetterOrDigit%2A>.</span></span>  
  
 [!code-cpp[System.Char.IsLetterOrDigit#6](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsLetterOrDigit/CPP/isletterordigit.cpp#6)]
 [!code-csharp[System.Char.IsLetterOrDigit#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsLetterOrDigit/CS/isletterordigit.cs#6)]
 [!code-vb[System.Char.IsLetterOrDigit#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsLetterOrDigit/VB/isletterordigit.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="02b23-447">Свойство <paramref name="s" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="02b23-447"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="02b23-448">Параметр <paramref name="index" /> имеет значение меньше нуля или больше последней позиции в <paramref name="s" />.</span><span class="sxs-lookup"><span data-stu-id="02b23-448"><paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />.</span></span></exception>
        <altmember cref="T:System.Boolean" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsLower">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="02b23-449">Показывает, относится ли символ Юникода к категории букв нижнего регистра.</span><span class="sxs-lookup"><span data-stu-id="02b23-449">Indicates whether a Unicode character is categorized as a lowercase letter.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsLower">
      <MemberSignature Language="C#" Value="public static bool IsLower (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsLower(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsLower(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsLower (c As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsLower(char c);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c"><span data-ttu-id="02b23-450">Знак Юникода, который необходимо вычислить.</span><span class="sxs-lookup"><span data-stu-id="02b23-450">The Unicode character to evaluate.</span></span></param>
        <summary><span data-ttu-id="02b23-451">Показывает, относится ли указанный символ Юникода к категории букв нижнего регистра.</span><span class="sxs-lookup"><span data-stu-id="02b23-451">Indicates whether the specified Unicode character is categorized as a lowercase letter.</span></span></summary>
        <returns>
          <span data-ttu-id="02b23-452">Значение <see langword="true" />, если <paramref name="c" /> является буквой в нижнем регистре; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="02b23-452"><see langword="true" /> if <paramref name="c" /> is a lowercase letter; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02b23-453">Допустимые буквы нижнего регистра являются членами следующей категории в <xref:System.Globalization.UnicodeCategory>: `LowercaseLetter`.</span><span class="sxs-lookup"><span data-stu-id="02b23-453">Valid lowercase letters are members of the following category in <xref:System.Globalization.UnicodeCategory>: `LowercaseLetter`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="02b23-454">В следующем примере кода показано <xref:System.Char.IsLower%2A>.</span><span class="sxs-lookup"><span data-stu-id="02b23-454">The following code example demonstrates <xref:System.Char.IsLower%2A>.</span></span>  
  
 [!code-cpp[System.Char.IsLower#7](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsLower/CPP/islower.cpp#7)]
 [!code-csharp[System.Char.IsLower#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsLower/CS/islower.cs#7)]
 [!code-vb[System.Char.IsLower#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsLower/VB/islower.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Boolean" />
        <altmember cref="M:System.Char.IsUpper(System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="IsLower">
      <MemberSignature Language="C#" Value="public static bool IsLower (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsLower(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsLower(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsLower (s As String, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsLower(System::String ^ s, int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="02b23-455">Строка.</span><span class="sxs-lookup"><span data-stu-id="02b23-455">A string.</span></span></param>
        <param name="index"><span data-ttu-id="02b23-456">Позиция символа, который необходимо вычислить, в <c>s</c>.</span><span class="sxs-lookup"><span data-stu-id="02b23-456">The position of the character to evaluate in <c>s</c>.</span></span></param>
        <summary><span data-ttu-id="02b23-457">Показывает, относится ли указанный символ в указанной позиции в указанной строке к категории букв нижнего регистра.</span><span class="sxs-lookup"><span data-stu-id="02b23-457">Indicates whether the character at the specified position in a specified string is categorized as a lowercase letter.</span></span></summary>
        <returns>
          <span data-ttu-id="02b23-458"><see langword="true" />, если символ в позиции <paramref name="index" /> в <paramref name="s" /> является буквой нижнего регистра; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="02b23-458"><see langword="true" /> if the character at position <paramref name="index" /> in <paramref name="s" /> is a lowercase letter; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02b23-459">Позиций символов в строке индексируются, начиная с нуля.</span><span class="sxs-lookup"><span data-stu-id="02b23-459">Character positions in a string are indexed starting from zero.</span></span>  
  
 <span data-ttu-id="02b23-460">Допустимые буквы нижнего регистра являются членами следующей категории в <xref:System.Globalization.UnicodeCategory>: `LowercaseLetter`.</span><span class="sxs-lookup"><span data-stu-id="02b23-460">Valid lowercase letters are members of the following category in <xref:System.Globalization.UnicodeCategory>: `LowercaseLetter`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="02b23-461">В следующем примере кода показано <xref:System.Char.IsLower%2A>.</span><span class="sxs-lookup"><span data-stu-id="02b23-461">The following code example demonstrates <xref:System.Char.IsLower%2A>.</span></span>  
  
 [!code-cpp[System.Char.IsLower#7](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsLower/CPP/islower.cpp#7)]
 [!code-csharp[System.Char.IsLower#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsLower/CS/islower.cs#7)]
 [!code-vb[System.Char.IsLower#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsLower/VB/islower.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="02b23-462">Свойство <paramref name="s" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="02b23-462"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="02b23-463">Параметр <paramref name="index" /> имеет значение меньше нуля или больше последней позиции в <paramref name="s" />.</span><span class="sxs-lookup"><span data-stu-id="02b23-463"><paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />.</span></span></exception>
        <altmember cref="T:System.Boolean" />
        <altmember cref="T:System.String" />
        <altmember cref="M:System.Char.IsUpper(System.Char)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsLowSurrogate">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="02b23-464">Определяет, является ли заданный объект <see cref="T:System.Char" /> младшим символом-заместителем.</span><span class="sxs-lookup"><span data-stu-id="02b23-464">Indicates whether the specified <see cref="T:System.Char" /> object is a low surrogate.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsLowSurrogate">
      <MemberSignature Language="C#" Value="public static bool IsLowSurrogate (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsLowSurrogate(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsLowSurrogate(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsLowSurrogate (c As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsLowSurrogate(char c);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c"><span data-ttu-id="02b23-465">Символ, который необходимо вычислить.</span><span class="sxs-lookup"><span data-stu-id="02b23-465">The character to evaluate.</span></span></param>
        <summary><span data-ttu-id="02b23-466">Определяет, является ли заданный объект <see cref="T:System.Char" /> младшим символом-заместителем.</span><span class="sxs-lookup"><span data-stu-id="02b23-466">Indicates whether the specified <see cref="T:System.Char" /> object is a low surrogate.</span></span></summary>
        <returns>
          <span data-ttu-id="02b23-467"><see langword="true" />,  если числовое значение параметра <paramref name="c" /> лежит в диапазоне от U+DC00 до U+DFFF; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="02b23-467"><see langword="true" /> if the numeric value of the <paramref name="c" /> parameter ranges from U+DC00 through U+DFFF; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02b23-468">Помимо представления отдельных символов с помощью 16-битовой кодовой точки, кодировка UTF-16 позволяет представлять абстрактные символы с помощью двух точек 16-разрядного кода, которые называются суррогатную пару.</span><span class="sxs-lookup"><span data-stu-id="02b23-468">In addition to representing single characters using a 16-bit code point, UTF-16 encoding allows abstract characters to be represented using two 16-bit code points, which is known as a surrogate pair.</span></span> <span data-ttu-id="02b23-469">Второй элемент в данной паре является младшим символом-заместителем.</span><span class="sxs-lookup"><span data-stu-id="02b23-469">The second element in this pair is the low surrogate.</span></span> <span data-ttu-id="02b23-470">Его кодовая точка находится в диапазоне от U + DC00 до U + DFFF.</span><span class="sxs-lookup"><span data-stu-id="02b23-470">Its code point can range from U+DC00 to U+DFFF.</span></span> <span data-ttu-id="02b23-471">Отдельный заменяющий не имеет интерпретации свое собственное. он имеет значение только при использовании в составе суррогатную пару.</span><span class="sxs-lookup"><span data-stu-id="02b23-471">An individual surrogate has no interpretation of its own; it is meaningful only when used as part of a surrogate pair.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="02b23-472">В следующем примере кода показано <xref:System.Char.IsHighSurrogate%2A>, <xref:System.Char.IsLowSurrogate%2A>, и <xref:System.Char.IsSurrogatePair%2A> методы.</span><span class="sxs-lookup"><span data-stu-id="02b23-472">The following code example demonstrates the <xref:System.Char.IsHighSurrogate%2A>, <xref:System.Char.IsLowSurrogate%2A>, and <xref:System.Char.IsSurrogatePair%2A> methods.</span></span>  
  
 [!code-cpp[char.surrogate#1](~/samples/snippets/cpp/VS_Snippets_CLR/char.surrogate/CPP/sur.cpp#1)]
 [!code-csharp[char.surrogate#1](~/samples/snippets/csharp/VS_Snippets_CLR/char.surrogate/CS/sur.cs#1)]
 [!code-vb[char.surrogate#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/char.surrogate/VB/sur.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsLowSurrogate">
      <MemberSignature Language="C#" Value="public static bool IsLowSurrogate (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsLowSurrogate(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsLowSurrogate(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsLowSurrogate (s As String, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsLowSurrogate(System::String ^ s, int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="02b23-473">Строка.</span><span class="sxs-lookup"><span data-stu-id="02b23-473">A string.</span></span></param>
        <param name="index"><span data-ttu-id="02b23-474">Позиция символа, который необходимо вычислить, в <c>s</c>.</span><span class="sxs-lookup"><span data-stu-id="02b23-474">The position of the character to evaluate in <c>s</c>.</span></span></param>
        <summary><span data-ttu-id="02b23-475">Определяет, является ли объект <see cref="T:System.Char" /> в заданной позиции в строке младшим символом-заместителем.</span><span class="sxs-lookup"><span data-stu-id="02b23-475">Indicates whether the <see cref="T:System.Char" /> object at the specified position in a string is a low surrogate.</span></span></summary>
        <returns>
          <span data-ttu-id="02b23-476">Значение <see langword="true" />, если числовое значение заданного символа в параметре <paramref name="s" /> лежит в диапазоне от U+DC00 до U+DFFF; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="02b23-476"><see langword="true" /> if the numeric value of the specified character in the <paramref name="s" /> parameter ranges from U+DC00 through U+DFFF; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02b23-477">`index` Параметра начинается с нуля.</span><span class="sxs-lookup"><span data-stu-id="02b23-477">The `index` parameter is zero-based.</span></span>  
  
 <span data-ttu-id="02b23-478">Помимо представления отдельных символов с помощью 16-битовой кодовой точки, кодировка UTF-16 позволяет представлять абстрактные символы с помощью двух точек 16-разрядного кода, которые называются суррогатную пару.</span><span class="sxs-lookup"><span data-stu-id="02b23-478">In addition to representing single characters using a 16-bit code point, UTF-16 encoding allows abstract characters to be represented using two 16-bit code points, which is known as a surrogate pair.</span></span> <span data-ttu-id="02b23-479">Второй элемент в данной паре является младшим символом-заместителем.</span><span class="sxs-lookup"><span data-stu-id="02b23-479">The second element in this pair is the low surrogate.</span></span> <span data-ttu-id="02b23-480">Его кодовая точка находится в диапазоне от U + DC00 до U + DFFF.</span><span class="sxs-lookup"><span data-stu-id="02b23-480">Its code point can range from U+DC00 to U+DFFF.</span></span> <span data-ttu-id="02b23-481">Отдельный заменяющий не имеет интерпретации свое собственное. он имеет значение только при использовании в составе суррогатную пару.</span><span class="sxs-lookup"><span data-stu-id="02b23-481">An individual surrogate has no interpretation of its own; it is meaningful only when used as part of a surrogate pair.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="02b23-482">В следующем примере кода показано <xref:System.Char.IsHighSurrogate%2A>, <xref:System.Char.IsLowSurrogate%2A>, и <xref:System.Char.IsSurrogatePair%2A> методы.</span><span class="sxs-lookup"><span data-stu-id="02b23-482">The following code example demonstrates the <xref:System.Char.IsHighSurrogate%2A>, <xref:System.Char.IsLowSurrogate%2A>, and <xref:System.Char.IsSurrogatePair%2A> methods.</span></span>  
  
 [!code-cpp[char.surrogate#1](~/samples/snippets/cpp/VS_Snippets_CLR/char.surrogate/CPP/sur.cpp#1)]
 [!code-csharp[char.surrogate#1](~/samples/snippets/csharp/VS_Snippets_CLR/char.surrogate/CS/sur.cs#1)]
 [!code-vb[char.surrogate#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/char.surrogate/VB/sur.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="02b23-483">Свойство <paramref name="s" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="02b23-483"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="02b23-484"><paramref name="index" /> не является позицией в <paramref name="s" />.</span><span class="sxs-lookup"><span data-stu-id="02b23-484"><paramref name="index" /> is not a position within <paramref name="s" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="IsNumber">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="02b23-485">Показывает, относится ли символ Юникода к категории цифр.</span><span class="sxs-lookup"><span data-stu-id="02b23-485">Indicates whether a Unicode character is categorized as a number.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsNumber">
      <MemberSignature Language="C#" Value="public static bool IsNumber (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsNumber(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsNumber(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsNumber (c As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsNumber(char c);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c"><span data-ttu-id="02b23-486">Знак Юникода, который необходимо вычислить.</span><span class="sxs-lookup"><span data-stu-id="02b23-486">The Unicode character to evaluate.</span></span></param>
        <summary><span data-ttu-id="02b23-487">Показывает, относится ли указанный символ Юникода к категории цифр.</span><span class="sxs-lookup"><span data-stu-id="02b23-487">Indicates whether the specified Unicode character is categorized as a number.</span></span></summary>
        <returns>
          <span data-ttu-id="02b23-488"><see langword="true" />, если <paramref name="c" /> является цифрой; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="02b23-488"><see langword="true" /> if <paramref name="c" /> is a number; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02b23-489">Этот метод определяет, является ли <xref:System.Char> является любой числовой категории Юникода.</span><span class="sxs-lookup"><span data-stu-id="02b23-489">This method determines whether a <xref:System.Char> is of any numeric Unicode category.</span></span> <span data-ttu-id="02b23-490">В дополнение к включению цифр, числа содержат символы, дроби, индексы, надстрочный, римские цифры, числители валюты и обведенные числа.</span><span class="sxs-lookup"><span data-stu-id="02b23-490">In addition to including digits, numbers include characters, fractions, subscripts, superscripts, Roman numerals, currency numerators, and encircled numbers.</span></span> <span data-ttu-id="02b23-491">Этот метод отличается от <xref:System.Char.IsDigit%2A> метод, который определяет, является ли <xref:System.Char> является цифрой основание системы счисления-10.</span><span class="sxs-lookup"><span data-stu-id="02b23-491">This method contrasts with the <xref:System.Char.IsDigit%2A> method, which determines whether a <xref:System.Char> is a radix-10 digit.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="02b23-492"><xref:System.Char.IsNumber%28System.Char%29> Метод не предназначен для определения, является ли строка состоит из цифр (например, путем вызова метода для каждого символа в строке).</span><span class="sxs-lookup"><span data-stu-id="02b23-492">The <xref:System.Char.IsNumber%28System.Char%29> method is not intended to determine whether a string consists of numeric characters (for example, by calling the method for each character in a string).</span></span> <span data-ttu-id="02b23-493">Чтобы определить, является ли строка состоит из цифр, вызовите одну из перегрузок `TryParse` метод (например, <xref:System.Int32.TryParse%2A?displayProperty=nameWithType> или <xref:System.Double.TryParse%2A?displayProperty=nameWithType> типа целого или с плавающей точкой.</span><span class="sxs-lookup"><span data-stu-id="02b23-493">To determine whether a string consists of numeric characters, call one of the overloads of the `TryParse` method (such as <xref:System.Int32.TryParse%2A?displayProperty=nameWithType> or <xref:System.Double.TryParse%2A?displayProperty=nameWithType> of an integral or floating point type.</span></span>  
  
 <span data-ttu-id="02b23-494">Допустимые номера являются членами <xref:System.Globalization.UnicodeCategory.DecimalDigitNumber?displayProperty=nameWithType>, <xref:System.Globalization.UnicodeCategory.LetterNumber?displayProperty=nameWithType>, или <xref:System.Globalization.UnicodeCategory.OtherNumber?displayProperty=nameWithType> категории.</span><span class="sxs-lookup"><span data-stu-id="02b23-494">Valid numbers are members of the <xref:System.Globalization.UnicodeCategory.DecimalDigitNumber?displayProperty=nameWithType>, <xref:System.Globalization.UnicodeCategory.LetterNumber?displayProperty=nameWithType>, or <xref:System.Globalization.UnicodeCategory.OtherNumber?displayProperty=nameWithType> category.</span></span>  
  
 <span data-ttu-id="02b23-495"><xref:System.Char.IsNumber%28System.Char%29> Метод предполагает, что `c` соответствует знаку лингвистические и проверяет, является ли данный символ представляет число.</span><span class="sxs-lookup"><span data-stu-id="02b23-495">The <xref:System.Char.IsNumber%28System.Char%29> method assumes that `c` corresponds to a single linguistic character and checks whether that character represents a number.</span></span> <span data-ttu-id="02b23-496">Тем не менее, некоторые числа в стандарте Юникода представлены двумя <xref:System.Char> объекты, которые суррогатную пару.</span><span class="sxs-lookup"><span data-stu-id="02b23-496">However, some numbers in the Unicode standard are represented by two <xref:System.Char> objects that form a surrogate pair.</span></span> <span data-ttu-id="02b23-497">Например Aegean системы нумерации состоит кодовых точек U + 10107 до U + 10133.</span><span class="sxs-lookup"><span data-stu-id="02b23-497">For example, the Aegean numbering system consists of code points U+10107 through U+10133.</span></span> <span data-ttu-id="02b23-498">В следующем примере используется <xref:System.Char.ConvertFromUtf32%2A> метод для создания экземпляра строка, представляющая AEGEAN номер один.</span><span class="sxs-lookup"><span data-stu-id="02b23-498">The following example uses the <xref:System.Char.ConvertFromUtf32%2A> method to instantiate a string that represents AEGEAN NUMBER ONE.</span></span> <span data-ttu-id="02b23-499">Как видно в результатах показано в примере <xref:System.Char.IsNumber%28System.Char%29> возвращает метод `false` при передаче старшим или младшим символом-заместителем этого символа.</span><span class="sxs-lookup"><span data-stu-id="02b23-499">As the output from the example shows, the <xref:System.Char.IsNumber%28System.Char%29> method returns `false` if it is passed either a high surrogate or a low surrogate of this character.</span></span>  
  
 [!code-csharp[System.Char.IsNumber#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsNumber/CS/isnumber1.cs#1)]
 [!code-vb[System.Char.IsNumber#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsNumber/VB/isnumber1.vb#1)]  
  
   
  
## Examples  
 <span data-ttu-id="02b23-500">В следующем примере демонстрируется <xref:System.Char.IsNumber%2A>.</span><span class="sxs-lookup"><span data-stu-id="02b23-500">The following example demonstrates <xref:System.Char.IsNumber%2A>.</span></span>  
  
 [!code-cpp[System.Char.IsNumber#8](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsNumber/CPP/isnumber.cpp#8)]
 [!code-csharp[System.Char.IsNumber#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsNumber/CS/isnumber.cs#8)]
 [!code-vb[System.Char.IsNumber#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsNumber/VB/isnumber.vb#8)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Boolean" />
        <altmember cref="M:System.Char.IsDigit(System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="IsNumber">
      <MemberSignature Language="C#" Value="public static bool IsNumber (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsNumber(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsNumber(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsNumber (s As String, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsNumber(System::String ^ s, int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="02b23-501">Строка.</span><span class="sxs-lookup"><span data-stu-id="02b23-501">A string.</span></span></param>
        <param name="index"><span data-ttu-id="02b23-502">Позиция символа, который необходимо вычислить, в <c>s</c>.</span><span class="sxs-lookup"><span data-stu-id="02b23-502">The position of the character to evaluate in <c>s</c>.</span></span></param>
        <summary><span data-ttu-id="02b23-503">Показывает, относится ли указанный символ в указанной позиции в указанной строке к категории цифр.</span><span class="sxs-lookup"><span data-stu-id="02b23-503">Indicates whether the character at the specified position in a specified string is categorized as a number.</span></span></summary>
        <returns>
          <span data-ttu-id="02b23-504"><see langword="true" />, если символ в позиции <paramref name="index" /> в <paramref name="s" /> является цифрой; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="02b23-504"><see langword="true" /> if the character at position <paramref name="index" /> in <paramref name="s" /> is a number; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02b23-505">Этот метод определяет, является ли <xref:System.Char> является любой числовой категории Юникода.</span><span class="sxs-lookup"><span data-stu-id="02b23-505">This method determines whether a <xref:System.Char> is of any numeric Unicode category.</span></span> <span data-ttu-id="02b23-506">В дополнение к включению цифр, числа содержат символы, дроби, индексы, надстрочный, римские цифры, числители валюты и обведенные числа.</span><span class="sxs-lookup"><span data-stu-id="02b23-506">In addition to including digits, numbers include characters, fractions, subscripts, superscripts, Roman numerals, currency numerators, and encircled numbers.</span></span> <span data-ttu-id="02b23-507">Этот метод отличается от <xref:System.Char.IsDigit%2A> метод, который определяет, является ли <xref:System.Char> является цифрой основание системы счисления-10.</span><span class="sxs-lookup"><span data-stu-id="02b23-507">This method contrasts with the <xref:System.Char.IsDigit%2A> method, which determines whether a <xref:System.Char> is a radix-10 digit.</span></span>  
  
 <span data-ttu-id="02b23-508">Позиций символов в строке индексируются, начиная с нуля.</span><span class="sxs-lookup"><span data-stu-id="02b23-508">Character positions in a string are indexed starting from zero.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="02b23-509"><xref:System.Char.IsNumber%28System.String%2CSystem.Int32%29> Метод не предназначен для определения, является ли строка состоит из цифр (например, путем вызова метода для каждого символа в строке).</span><span class="sxs-lookup"><span data-stu-id="02b23-509">The <xref:System.Char.IsNumber%28System.String%2CSystem.Int32%29> method is not intended to determine whether a string consists of numeric characters (for example, by calling the method for each character in a string).</span></span> <span data-ttu-id="02b23-510">Чтобы определить, является ли строка состоит из цифр, вызовите одну из перегрузок `TryParse` метод (например, <xref:System.Int32.TryParse%2A?displayProperty=nameWithType> или <xref:System.Double.TryParse%2A?displayProperty=nameWithType> типа целого или с плавающей точкой.</span><span class="sxs-lookup"><span data-stu-id="02b23-510">To determine whether a string consists of numeric characters, call one of the overloads of the `TryParse` method (such as <xref:System.Int32.TryParse%2A?displayProperty=nameWithType> or <xref:System.Double.TryParse%2A?displayProperty=nameWithType> of an integral or floating point type.</span></span>  
  
 <span data-ttu-id="02b23-511">Допустимые номера являются членами <xref:System.Globalization.UnicodeCategory.DecimalDigitNumber?displayProperty=nameWithType>, <xref:System.Globalization.UnicodeCategory.LetterNumber?displayProperty=nameWithType>, или <xref:System.Globalization.UnicodeCategory.OtherNumber?displayProperty=nameWithType> категории.</span><span class="sxs-lookup"><span data-stu-id="02b23-511">Valid numbers are members of the <xref:System.Globalization.UnicodeCategory.DecimalDigitNumber?displayProperty=nameWithType>, <xref:System.Globalization.UnicodeCategory.LetterNumber?displayProperty=nameWithType>, or <xref:System.Globalization.UnicodeCategory.OtherNumber?displayProperty=nameWithType> category.</span></span>  
  
 <span data-ttu-id="02b23-512">Если <xref:System.Char> объект в позиции `index` является первым символом допустимую суррогатную пару <xref:System.Char.IsNumber%28System.String%2CSystem.Int32%29> метод определяет, формирует ли суррогатная пара цифры.</span><span class="sxs-lookup"><span data-stu-id="02b23-512">If the <xref:System.Char> object at position `index` is the first character of a valid surrogate pair, the <xref:System.Char.IsNumber%28System.String%2CSystem.Int32%29> method determines whether the surrogate pair forms a numeric digit.</span></span> <span data-ttu-id="02b23-513">Например Aegean системы нумерации состоит кодовых точек U + 10107 до U + 10133.</span><span class="sxs-lookup"><span data-stu-id="02b23-513">For example, the Aegean numbering system consists of code points U+10107 through U+10133.</span></span> <span data-ttu-id="02b23-514">В следующем примере используется <xref:System.Char.ConvertFromUtf32%2A> метод для создания экземпляра строка, представляющая AEGEAN номер один.</span><span class="sxs-lookup"><span data-stu-id="02b23-514">The following example uses the <xref:System.Char.ConvertFromUtf32%2A> method to instantiate a string that represents AEGEAN NUMBER ONE.</span></span> <span data-ttu-id="02b23-515">Как видно в результатах показано в примере <xref:System.Char.IsNumber%28System.String%2CSystem.Int32%29> возвращает метод `true` при передаче из AEGEAN номер один старший заместитель.</span><span class="sxs-lookup"><span data-stu-id="02b23-515">As the output from the example shows, the <xref:System.Char.IsNumber%28System.String%2CSystem.Int32%29> method returns `true` if it is passed the high surrogate of AEGEAN NUMBER ONE.</span></span> <span data-ttu-id="02b23-516">Тем не менее, если он передается младшим символом-заместителем, он считает, что категория младшим символом-заместителем и возвращает `false`.</span><span class="sxs-lookup"><span data-stu-id="02b23-516">However, if it is passed the low surrogate, it considers only the category of the low surrogate and returns `false`.</span></span>  
  
 [!code-csharp[System.Char.IsNumber#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsNumber/CS/isnumber1.cs#2)]
 [!code-vb[System.Char.IsNumber#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsNumber/VB/isnumber1.vb#2)]  
  
   
  
## Examples  
 <span data-ttu-id="02b23-517">В следующем примере демонстрируется <xref:System.Char.IsNumber%2A>.</span><span class="sxs-lookup"><span data-stu-id="02b23-517">The following example demonstrates <xref:System.Char.IsNumber%2A>.</span></span>  
  
 [!code-cpp[System.Char.IsNumber#8](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsNumber/CPP/isnumber.cpp#8)]
 [!code-csharp[System.Char.IsNumber#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsNumber/CS/isnumber.cs#8)]
 [!code-vb[System.Char.IsNumber#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsNumber/VB/isnumber.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="02b23-518">Свойство <paramref name="s" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="02b23-518"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="02b23-519">Параметр <paramref name="index" /> имеет значение меньше нуля или больше последней позиции в <paramref name="s" />.</span><span class="sxs-lookup"><span data-stu-id="02b23-519"><paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />.</span></span></exception>
        <altmember cref="T:System.Boolean" />
        <altmember cref="T:System.String" />
        <altmember cref="M:System.Char.IsDigit(System.Char)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsPunctuation">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="02b23-520">Показывает, относится ли символ Юникода к категории знаков препинания.</span><span class="sxs-lookup"><span data-stu-id="02b23-520">Indicates whether a Unicode character is categorized as a punctuation mark.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02b23-521">Допустимые знаки пунктуации являются членами следующих категорий в <xref:System.Globalization.UnicodeCategory>: `ConnectorPunctuation`, `DashPunctuation`, `OpenPunctuation`, `ClosePunctuation`, `InititalQuotePunctuation`, `FinalQuotePunctuation`, или `OtherPunctuation`.</span><span class="sxs-lookup"><span data-stu-id="02b23-521">Valid punctuation marks are members of the following categories in <xref:System.Globalization.UnicodeCategory>: `ConnectorPunctuation`, `DashPunctuation`, `OpenPunctuation`, `ClosePunctuation`, `InititalQuotePunctuation`, `FinalQuotePunctuation`, or `OtherPunctuation`.</span></span> <span data-ttu-id="02b23-522">Они включают символы с кодовых точек Юникода, перечисленные в следующей таблице.</span><span class="sxs-lookup"><span data-stu-id="02b23-522">They include characters with the Unicode code points listed in the following table.</span></span>  
  
|||||  
|-|-|-|-|  
|<span data-ttu-id="02b23-523">U + 0021 для U + 0023</span><span class="sxs-lookup"><span data-stu-id="02b23-523">U+0021 to U+0023</span></span>|<span data-ttu-id="02b23-524">U + 060C и D 060 U +</span><span class="sxs-lookup"><span data-stu-id="02b23-524">U+060C and U+060D</span></span>|<span data-ttu-id="02b23-525">U + 1800 для U + 180A</span><span class="sxs-lookup"><span data-stu-id="02b23-525">U+1800 to U+180A</span></span>|<span data-ttu-id="02b23-526">U + 3014 к U + 301F</span><span class="sxs-lookup"><span data-stu-id="02b23-526">U+3014 to U+301F</span></span>|  
|<span data-ttu-id="02b23-527">U + 0025 для U + 002A</span><span class="sxs-lookup"><span data-stu-id="02b23-527">U+0025 to U+002A</span></span>|<span data-ttu-id="02b23-528">U+061B</span><span class="sxs-lookup"><span data-stu-id="02b23-528">U+061B</span></span>|<span data-ttu-id="02b23-529">U + 1944 и U + 1945</span><span class="sxs-lookup"><span data-stu-id="02b23-529">U+1944 and U+1945</span></span>|<span data-ttu-id="02b23-530">U+3030</span><span class="sxs-lookup"><span data-stu-id="02b23-530">U+3030</span></span>|  
|<span data-ttu-id="02b23-531">U + 002C до U + 002F</span><span class="sxs-lookup"><span data-stu-id="02b23-531">U+002C to U+002F</span></span>|<span data-ttu-id="02b23-532">U + 061E и U + 061F</span><span class="sxs-lookup"><span data-stu-id="02b23-532">U+061E and U+061F</span></span>|<span data-ttu-id="02b23-533">U + 19DE и U + 19DF</span><span class="sxs-lookup"><span data-stu-id="02b23-533">U+19DE and U+19DF</span></span>|<span data-ttu-id="02b23-534">U+303D</span><span class="sxs-lookup"><span data-stu-id="02b23-534">U+303D</span></span>|  
|<span data-ttu-id="02b23-535">U + 003A и U + 003B</span><span class="sxs-lookup"><span data-stu-id="02b23-535">U+003A and U+003B</span></span>|<span data-ttu-id="02b23-536">U + 066A до U + 066D</span><span class="sxs-lookup"><span data-stu-id="02b23-536">U+066A to U+066D</span></span>|<span data-ttu-id="02b23-537">U + 1A1E и U + 1A1F</span><span class="sxs-lookup"><span data-stu-id="02b23-537">U+1A1E and U+1A1F</span></span>|<span data-ttu-id="02b23-538">U+30A0</span><span class="sxs-lookup"><span data-stu-id="02b23-538">U+30A0</span></span>|  
|<span data-ttu-id="02b23-539">U + 003F и U + 0040</span><span class="sxs-lookup"><span data-stu-id="02b23-539">U+003F and U+0040</span></span>|<span data-ttu-id="02b23-540">U+06D4</span><span class="sxs-lookup"><span data-stu-id="02b23-540">U+06D4</span></span>|<span data-ttu-id="02b23-541">U + 1B5A для U + 1B60</span><span class="sxs-lookup"><span data-stu-id="02b23-541">U+1B5A to U+1B60</span></span>|<span data-ttu-id="02b23-542">U+30FB</span><span class="sxs-lookup"><span data-stu-id="02b23-542">U+30FB</span></span>|  
|<span data-ttu-id="02b23-543">U + 005B до U + 005D</span><span class="sxs-lookup"><span data-stu-id="02b23-543">U+005B to U+005D</span></span>|<span data-ttu-id="02b23-544">U + 0700 до U + 070D</span><span class="sxs-lookup"><span data-stu-id="02b23-544">U+0700 to U+070D</span></span>|<span data-ttu-id="02b23-545">U + 2010 до U + 2027</span><span class="sxs-lookup"><span data-stu-id="02b23-545">U+2010 to U+2027</span></span>|<span data-ttu-id="02b23-546">U + A874 для U + A877</span><span class="sxs-lookup"><span data-stu-id="02b23-546">U+A874 to U+A877</span></span>|  
|<span data-ttu-id="02b23-547">U+005F</span><span class="sxs-lookup"><span data-stu-id="02b23-547">U+005F</span></span>|<span data-ttu-id="02b23-548">U + 07F7 для U + 07F9</span><span class="sxs-lookup"><span data-stu-id="02b23-548">U+07F7 to U+07F9</span></span>|<span data-ttu-id="02b23-549">U + 2030 U + 2043</span><span class="sxs-lookup"><span data-stu-id="02b23-549">U+2030 to U+2043</span></span>|<span data-ttu-id="02b23-550">U + FD3E и U + FD3F</span><span class="sxs-lookup"><span data-stu-id="02b23-550">U+FD3E and U+FD3F</span></span>|  
|<span data-ttu-id="02b23-551">U+007B</span><span class="sxs-lookup"><span data-stu-id="02b23-551">U+007B</span></span>|<span data-ttu-id="02b23-552">U + 0964 и U + 0965</span><span class="sxs-lookup"><span data-stu-id="02b23-552">U+0964 and U+0965</span></span>|<span data-ttu-id="02b23-553">U + 2045 для U + 2051</span><span class="sxs-lookup"><span data-stu-id="02b23-553">U+2045 to U+2051</span></span>|<span data-ttu-id="02b23-554">U + FE10 для U + FE19</span><span class="sxs-lookup"><span data-stu-id="02b23-554">U+FE10 to U+FE19</span></span>|  
|<span data-ttu-id="02b23-555">U+007D</span><span class="sxs-lookup"><span data-stu-id="02b23-555">U+007D</span></span>|<span data-ttu-id="02b23-556">U+0970</span><span class="sxs-lookup"><span data-stu-id="02b23-556">U+0970</span></span>|<span data-ttu-id="02b23-557">U + 2053 для U + 205E</span><span class="sxs-lookup"><span data-stu-id="02b23-557">U+2053 to U+205E</span></span>|<span data-ttu-id="02b23-558">U + FE30 для U + FE52</span><span class="sxs-lookup"><span data-stu-id="02b23-558">U+FE30 to U+FE52</span></span>|  
|<span data-ttu-id="02b23-559">U+00A1</span><span class="sxs-lookup"><span data-stu-id="02b23-559">U+00A1</span></span>|<span data-ttu-id="02b23-560">U+0DF4</span><span class="sxs-lookup"><span data-stu-id="02b23-560">U+0DF4</span></span>|<span data-ttu-id="02b23-561">U + 207D и U + 207E</span><span class="sxs-lookup"><span data-stu-id="02b23-561">U+207D and  U+207E</span></span>|<span data-ttu-id="02b23-562">U + FE54 для U + FE61</span><span class="sxs-lookup"><span data-stu-id="02b23-562">U+FE54 to U+FE61</span></span>|  
|<span data-ttu-id="02b23-563">U+00AB</span><span class="sxs-lookup"><span data-stu-id="02b23-563">U+00AB</span></span>|<span data-ttu-id="02b23-564">U + 0E4F для U + 0E5B</span><span class="sxs-lookup"><span data-stu-id="02b23-564">U+0E4F to U+0E5B</span></span>|<span data-ttu-id="02b23-565">U + 208D и U + 208E</span><span class="sxs-lookup"><span data-stu-id="02b23-565">U+208D and U+208E</span></span>|<span data-ttu-id="02b23-566">U+FE63</span><span class="sxs-lookup"><span data-stu-id="02b23-566">U+FE63</span></span>|  
|<span data-ttu-id="02b23-567">U+00AD</span><span class="sxs-lookup"><span data-stu-id="02b23-567">U+00AD</span></span>|<span data-ttu-id="02b23-568">U + 0F04 для U + 0F12</span><span class="sxs-lookup"><span data-stu-id="02b23-568">U+0F04 to U+0F12</span></span>|<span data-ttu-id="02b23-569">U + 2329 до U + 232A</span><span class="sxs-lookup"><span data-stu-id="02b23-569">U+2329 and U+232A</span></span>|<span data-ttu-id="02b23-570">U+FE68</span><span class="sxs-lookup"><span data-stu-id="02b23-570">U+FE68</span></span>|  
|<span data-ttu-id="02b23-571">U+00B7</span><span class="sxs-lookup"><span data-stu-id="02b23-571">U+00B7</span></span>|<span data-ttu-id="02b23-572">U + 0F3A для U + 0F3D</span><span class="sxs-lookup"><span data-stu-id="02b23-572">U+0F3A to U+0F3D</span></span>|<span data-ttu-id="02b23-573">U + 2768 для U + 2775</span><span class="sxs-lookup"><span data-stu-id="02b23-573">U+2768 to U+2775</span></span>|<span data-ttu-id="02b23-574">U + FE6A и U + FE6B</span><span class="sxs-lookup"><span data-stu-id="02b23-574">U+FE6A and U+FE6B</span></span>|  
|<span data-ttu-id="02b23-575">U+00BB</span><span class="sxs-lookup"><span data-stu-id="02b23-575">U+00BB</span></span>|<span data-ttu-id="02b23-576">U+0F85</span><span class="sxs-lookup"><span data-stu-id="02b23-576">U+0F85</span></span>|<span data-ttu-id="02b23-577">5 27C U + U + 27C 6</span><span class="sxs-lookup"><span data-stu-id="02b23-577">U+27C5 to U+27C6</span></span>|<span data-ttu-id="02b23-578">U + FF01 для U + FF03</span><span class="sxs-lookup"><span data-stu-id="02b23-578">U+FF01 to U+FF03</span></span>|  
|<span data-ttu-id="02b23-579">U+00BF</span><span class="sxs-lookup"><span data-stu-id="02b23-579">U+00BF</span></span>|<span data-ttu-id="02b23-580">U + 0FD0 и U + 0FD1</span><span class="sxs-lookup"><span data-stu-id="02b23-580">U+0FD0 and U+0FD1</span></span>|<span data-ttu-id="02b23-581">U + 27E6 для U + 27EB</span><span class="sxs-lookup"><span data-stu-id="02b23-581">U+27E6 to U+27EB</span></span>|<span data-ttu-id="02b23-582">U + FF05 для U + FF0A</span><span class="sxs-lookup"><span data-stu-id="02b23-582">U+FF05 to U+FF0A</span></span>|  
|<span data-ttu-id="02b23-583">U+037E</span><span class="sxs-lookup"><span data-stu-id="02b23-583">U+037E</span></span>|<span data-ttu-id="02b23-584">U + 104A для U + 104F</span><span class="sxs-lookup"><span data-stu-id="02b23-584">U+104A to U+104F</span></span>|<span data-ttu-id="02b23-585">U + 2983 для U + 2998</span><span class="sxs-lookup"><span data-stu-id="02b23-585">U+2983 to U+2998</span></span>|<span data-ttu-id="02b23-586">U + FF0C для U + FF0F</span><span class="sxs-lookup"><span data-stu-id="02b23-586">U+FF0C to U+FF0F</span></span>|  
|<span data-ttu-id="02b23-587">U+0387</span><span class="sxs-lookup"><span data-stu-id="02b23-587">U+0387</span></span>|<span data-ttu-id="02b23-588">U+10FB</span><span class="sxs-lookup"><span data-stu-id="02b23-588">U+10FB</span></span>|<span data-ttu-id="02b23-589">U + 8 29D, чтобы U + 29DB</span><span class="sxs-lookup"><span data-stu-id="02b23-589">U+29D8 to U+29DB</span></span>|<span data-ttu-id="02b23-590">U + FF1A и U + FF1B</span><span class="sxs-lookup"><span data-stu-id="02b23-590">U+FF1A and U+FF1B</span></span>|  
|<span data-ttu-id="02b23-591">U + 055A для U + 055F</span><span class="sxs-lookup"><span data-stu-id="02b23-591">U+055A to U+055F</span></span>|<span data-ttu-id="02b23-592">U + 1361 для U + 1368</span><span class="sxs-lookup"><span data-stu-id="02b23-592">U+1361 to U+1368</span></span>|<span data-ttu-id="02b23-593">U + 29FC и U + 29FD</span><span class="sxs-lookup"><span data-stu-id="02b23-593">U+29FC and U+29FD</span></span>|<span data-ttu-id="02b23-594">U + FF1F и U + FF20</span><span class="sxs-lookup"><span data-stu-id="02b23-594">U+FF1F and U+FF20</span></span>|  
|<span data-ttu-id="02b23-595">U + 0589 до U + 058A</span><span class="sxs-lookup"><span data-stu-id="02b23-595">U+0589 and U+058A</span></span>|<span data-ttu-id="02b23-596">U + 166D и U + 166E</span><span class="sxs-lookup"><span data-stu-id="02b23-596">U+166D and U+166E</span></span>|<span data-ttu-id="02b23-597">U + 2CF9 для U + 2CFC</span><span class="sxs-lookup"><span data-stu-id="02b23-597">U+2CF9 to U+2CFC</span></span>|<span data-ttu-id="02b23-598">U + FF3B для U + FF3D</span><span class="sxs-lookup"><span data-stu-id="02b23-598">U+FF3B to U+FF3D</span></span>|  
|<span data-ttu-id="02b23-599">U+05BE</span><span class="sxs-lookup"><span data-stu-id="02b23-599">U+05BE</span></span>|<span data-ttu-id="02b23-600">U + 169B и U + 169C</span><span class="sxs-lookup"><span data-stu-id="02b23-600">U+169B and U+169C</span></span>|<span data-ttu-id="02b23-601">U + 2CFE и U + 2CFF</span><span class="sxs-lookup"><span data-stu-id="02b23-601">U+2CFE and U+2CFF</span></span>|<span data-ttu-id="02b23-602">U+FF3F</span><span class="sxs-lookup"><span data-stu-id="02b23-602">U+FF3F</span></span>|  
|<span data-ttu-id="02b23-603">U+05C0</span><span class="sxs-lookup"><span data-stu-id="02b23-603">U+05C0</span></span>|<span data-ttu-id="02b23-604">U + 16EB для U + 16ED</span><span class="sxs-lookup"><span data-stu-id="02b23-604">U+16EB to U+16ED</span></span>|<span data-ttu-id="02b23-605">U + 2E00 для U + 2E17</span><span class="sxs-lookup"><span data-stu-id="02b23-605">U+2E00 to U+2E17</span></span>|<span data-ttu-id="02b23-606">U+FF5B</span><span class="sxs-lookup"><span data-stu-id="02b23-606">U+FF5B</span></span>|  
|<span data-ttu-id="02b23-607">U+05C3</span><span class="sxs-lookup"><span data-stu-id="02b23-607">U+05C3</span></span>|<span data-ttu-id="02b23-608">U + 1735 и U + 1736</span><span class="sxs-lookup"><span data-stu-id="02b23-608">U+1735 and U+1736</span></span>|<span data-ttu-id="02b23-609">U + 2E1C и U + 2E1D</span><span class="sxs-lookup"><span data-stu-id="02b23-609">U+2E1C and U+2E1D</span></span>|<span data-ttu-id="02b23-610">U+FF5D</span><span class="sxs-lookup"><span data-stu-id="02b23-610">U+FF5D</span></span>|  
|<span data-ttu-id="02b23-611">U+05C6</span><span class="sxs-lookup"><span data-stu-id="02b23-611">U+05C6</span></span>|<span data-ttu-id="02b23-612">U + 17D 4 до U + 17D 6</span><span class="sxs-lookup"><span data-stu-id="02b23-612">U+17D4 to U+17D6</span></span>|<span data-ttu-id="02b23-613">U + 3001 для U + 3003</span><span class="sxs-lookup"><span data-stu-id="02b23-613">U+3001 to U+3003</span></span>|<span data-ttu-id="02b23-614">U + FF5F для U + FF65</span><span class="sxs-lookup"><span data-stu-id="02b23-614">U+FF5F to U+FF65</span></span>|  
|<span data-ttu-id="02b23-615">U + 05F3 и U + 05F4</span><span class="sxs-lookup"><span data-stu-id="02b23-615">U+05F3 and U+05F4</span></span>|<span data-ttu-id="02b23-616">U + 8 17D, чтобы U + 17DA</span><span class="sxs-lookup"><span data-stu-id="02b23-616">U+17D8 to U+17DA</span></span>|<span data-ttu-id="02b23-617">U + 3008 для U + 3011</span><span class="sxs-lookup"><span data-stu-id="02b23-617">U+3008 to U+3011</span></span>||  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsPunctuation">
      <MemberSignature Language="C#" Value="public static bool IsPunctuation (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsPunctuation(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsPunctuation(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsPunctuation (c As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsPunctuation(char c);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c"><span data-ttu-id="02b23-618">Знак Юникода, который необходимо вычислить.</span><span class="sxs-lookup"><span data-stu-id="02b23-618">The Unicode character to evaluate.</span></span></param>
        <summary><span data-ttu-id="02b23-619">Показывает, относится ли указанный символ Юникода к категории знаков препинания.</span><span class="sxs-lookup"><span data-stu-id="02b23-619">Indicates whether the specified Unicode character is categorized as a punctuation mark.</span></span></summary>
        <returns>
          <span data-ttu-id="02b23-620">Значение <see langword="true" />, если <paramref name="c" /> является знаком препинания; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="02b23-620"><see langword="true" /> if <paramref name="c" /> is a punctuation mark; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02b23-621">Допустимые знаки пунктуации являются членами следующих категорий в <xref:System.Globalization.UnicodeCategory>: `ConnectorPunctuation`, `DashPunctuation`, `OpenPunctuation`, `ClosePunctuation`, `InititalQuotePunctuation`, `FinalQuotePunctuation`, или `OtherPunctuation`.</span><span class="sxs-lookup"><span data-stu-id="02b23-621">Valid punctuation marks are members of the following categories in <xref:System.Globalization.UnicodeCategory>: `ConnectorPunctuation`, `DashPunctuation`, `OpenPunctuation`, `ClosePunctuation`, `InititalQuotePunctuation`, `FinalQuotePunctuation`, or `OtherPunctuation`.</span></span> <span data-ttu-id="02b23-622">Они включают символы с кодовых точек Юникода, перечисленные в следующей таблице.</span><span class="sxs-lookup"><span data-stu-id="02b23-622">They include characters with the Unicode code points listed in the following table.</span></span>  
  
|||||  
|-|-|-|-|  
|<span data-ttu-id="02b23-623">U + 0021 для U + 0023</span><span class="sxs-lookup"><span data-stu-id="02b23-623">U+0021 to U+0023</span></span>|<span data-ttu-id="02b23-624">U + 060C и D 060 U +</span><span class="sxs-lookup"><span data-stu-id="02b23-624">U+060C and U+060D</span></span>|<span data-ttu-id="02b23-625">U + 1800 для U + 180A</span><span class="sxs-lookup"><span data-stu-id="02b23-625">U+1800 to U+180A</span></span>|<span data-ttu-id="02b23-626">U + 3014 к U + 301F</span><span class="sxs-lookup"><span data-stu-id="02b23-626">U+3014 to U+301F</span></span>|  
|<span data-ttu-id="02b23-627">U + 0025 для U + 002A</span><span class="sxs-lookup"><span data-stu-id="02b23-627">U+0025 to U+002A</span></span>|<span data-ttu-id="02b23-628">U+061B</span><span class="sxs-lookup"><span data-stu-id="02b23-628">U+061B</span></span>|<span data-ttu-id="02b23-629">U + 1944 и U + 1945</span><span class="sxs-lookup"><span data-stu-id="02b23-629">U+1944 and U+1945</span></span>|<span data-ttu-id="02b23-630">U+3030</span><span class="sxs-lookup"><span data-stu-id="02b23-630">U+3030</span></span>|  
|<span data-ttu-id="02b23-631">U + 002C до U + 002F</span><span class="sxs-lookup"><span data-stu-id="02b23-631">U+002C to U+002F</span></span>|<span data-ttu-id="02b23-632">U + 061E и U + 061F</span><span class="sxs-lookup"><span data-stu-id="02b23-632">U+061E and U+061F</span></span>|<span data-ttu-id="02b23-633">U + 19DE и U + 19DF</span><span class="sxs-lookup"><span data-stu-id="02b23-633">U+19DE and U+19DF</span></span>|<span data-ttu-id="02b23-634">U+303D</span><span class="sxs-lookup"><span data-stu-id="02b23-634">U+303D</span></span>|  
|<span data-ttu-id="02b23-635">U + 003A и U + 003B</span><span class="sxs-lookup"><span data-stu-id="02b23-635">U+003A and U+003B</span></span>|<span data-ttu-id="02b23-636">U + 066A до U + 066D</span><span class="sxs-lookup"><span data-stu-id="02b23-636">U+066A to U+066D</span></span>|<span data-ttu-id="02b23-637">U + 1A1E и U + 1A1F</span><span class="sxs-lookup"><span data-stu-id="02b23-637">U+1A1E and U+1A1F</span></span>|<span data-ttu-id="02b23-638">U+30A0</span><span class="sxs-lookup"><span data-stu-id="02b23-638">U+30A0</span></span>|  
|<span data-ttu-id="02b23-639">U + 003F и U + 0040</span><span class="sxs-lookup"><span data-stu-id="02b23-639">U+003F and U+0040</span></span>|<span data-ttu-id="02b23-640">U+06D4</span><span class="sxs-lookup"><span data-stu-id="02b23-640">U+06D4</span></span>|<span data-ttu-id="02b23-641">U + 1B5A для U + 1B60</span><span class="sxs-lookup"><span data-stu-id="02b23-641">U+1B5A to U+1B60</span></span>|<span data-ttu-id="02b23-642">U+30FB</span><span class="sxs-lookup"><span data-stu-id="02b23-642">U+30FB</span></span>|  
|<span data-ttu-id="02b23-643">U + 005B до U + 005D</span><span class="sxs-lookup"><span data-stu-id="02b23-643">U+005B to U+005D</span></span>|<span data-ttu-id="02b23-644">U + 0700 до U + 070D</span><span class="sxs-lookup"><span data-stu-id="02b23-644">U+0700 to U+070D</span></span>|<span data-ttu-id="02b23-645">U + 2010 до U + 2027</span><span class="sxs-lookup"><span data-stu-id="02b23-645">U+2010 to U+2027</span></span>|<span data-ttu-id="02b23-646">U + A874 для U + A877</span><span class="sxs-lookup"><span data-stu-id="02b23-646">U+A874 to U+A877</span></span>|  
|<span data-ttu-id="02b23-647">U+005F</span><span class="sxs-lookup"><span data-stu-id="02b23-647">U+005F</span></span>|<span data-ttu-id="02b23-648">U + 07F7 для U + 07F9</span><span class="sxs-lookup"><span data-stu-id="02b23-648">U+07F7 to U+07F9</span></span>|<span data-ttu-id="02b23-649">U + 2030 U + 2043</span><span class="sxs-lookup"><span data-stu-id="02b23-649">U+2030 to U+2043</span></span>|<span data-ttu-id="02b23-650">U + FD3E и U + FD3F</span><span class="sxs-lookup"><span data-stu-id="02b23-650">U+FD3E and U+FD3F</span></span>|  
|<span data-ttu-id="02b23-651">U+007B</span><span class="sxs-lookup"><span data-stu-id="02b23-651">U+007B</span></span>|<span data-ttu-id="02b23-652">U + 0964 и U + 0965</span><span class="sxs-lookup"><span data-stu-id="02b23-652">U+0964 and U+0965</span></span>|<span data-ttu-id="02b23-653">U + 2045 для U + 2051</span><span class="sxs-lookup"><span data-stu-id="02b23-653">U+2045 to U+2051</span></span>|<span data-ttu-id="02b23-654">U + FE10 для U + FE19</span><span class="sxs-lookup"><span data-stu-id="02b23-654">U+FE10 to U+FE19</span></span>|  
|<span data-ttu-id="02b23-655">U+007D</span><span class="sxs-lookup"><span data-stu-id="02b23-655">U+007D</span></span>|<span data-ttu-id="02b23-656">U+0970</span><span class="sxs-lookup"><span data-stu-id="02b23-656">U+0970</span></span>|<span data-ttu-id="02b23-657">U + 2053 для U + 205E</span><span class="sxs-lookup"><span data-stu-id="02b23-657">U+2053 to U+205E</span></span>|<span data-ttu-id="02b23-658">U + FE30 для U + FE52</span><span class="sxs-lookup"><span data-stu-id="02b23-658">U+FE30 to U+FE52</span></span>|  
|<span data-ttu-id="02b23-659">U+00A1</span><span class="sxs-lookup"><span data-stu-id="02b23-659">U+00A1</span></span>|<span data-ttu-id="02b23-660">U+0DF4</span><span class="sxs-lookup"><span data-stu-id="02b23-660">U+0DF4</span></span>|<span data-ttu-id="02b23-661">U + 207D и U + 207E</span><span class="sxs-lookup"><span data-stu-id="02b23-661">U+207D and  U+207E</span></span>|<span data-ttu-id="02b23-662">U + FE54 для U + FE61</span><span class="sxs-lookup"><span data-stu-id="02b23-662">U+FE54 to U+FE61</span></span>|  
|<span data-ttu-id="02b23-663">U+00AB</span><span class="sxs-lookup"><span data-stu-id="02b23-663">U+00AB</span></span>|<span data-ttu-id="02b23-664">U + 0E4F для U + 0E5B</span><span class="sxs-lookup"><span data-stu-id="02b23-664">U+0E4F to U+0E5B</span></span>|<span data-ttu-id="02b23-665">U + 208D и U + 208E</span><span class="sxs-lookup"><span data-stu-id="02b23-665">U+208D and U+208E</span></span>|<span data-ttu-id="02b23-666">U+FE63</span><span class="sxs-lookup"><span data-stu-id="02b23-666">U+FE63</span></span>|  
|<span data-ttu-id="02b23-667">U+00AD</span><span class="sxs-lookup"><span data-stu-id="02b23-667">U+00AD</span></span>|<span data-ttu-id="02b23-668">U + 0F04 для U + 0F12</span><span class="sxs-lookup"><span data-stu-id="02b23-668">U+0F04 to U+0F12</span></span>|<span data-ttu-id="02b23-669">U + 2329 до U + 232A</span><span class="sxs-lookup"><span data-stu-id="02b23-669">U+2329 and U+232A</span></span>|<span data-ttu-id="02b23-670">U+FE68</span><span class="sxs-lookup"><span data-stu-id="02b23-670">U+FE68</span></span>|  
|<span data-ttu-id="02b23-671">U+00B7</span><span class="sxs-lookup"><span data-stu-id="02b23-671">U+00B7</span></span>|<span data-ttu-id="02b23-672">U + 0F3A для U + 0F3D</span><span class="sxs-lookup"><span data-stu-id="02b23-672">U+0F3A to U+0F3D</span></span>|<span data-ttu-id="02b23-673">U + 2768 для U + 2775</span><span class="sxs-lookup"><span data-stu-id="02b23-673">U+2768 to U+2775</span></span>|<span data-ttu-id="02b23-674">U + FE6A и U + FE6B</span><span class="sxs-lookup"><span data-stu-id="02b23-674">U+FE6A and U+FE6B</span></span>|  
|<span data-ttu-id="02b23-675">U+00BB</span><span class="sxs-lookup"><span data-stu-id="02b23-675">U+00BB</span></span>|<span data-ttu-id="02b23-676">U+0F85</span><span class="sxs-lookup"><span data-stu-id="02b23-676">U+0F85</span></span>|<span data-ttu-id="02b23-677">5 27C U + U + 27C 6</span><span class="sxs-lookup"><span data-stu-id="02b23-677">U+27C5 to U+27C6</span></span>|<span data-ttu-id="02b23-678">U + FF01 для U + FF03</span><span class="sxs-lookup"><span data-stu-id="02b23-678">U+FF01 to U+FF03</span></span>|  
|<span data-ttu-id="02b23-679">U+00BF</span><span class="sxs-lookup"><span data-stu-id="02b23-679">U+00BF</span></span>|<span data-ttu-id="02b23-680">U + 0FD0 и U + 0FD1</span><span class="sxs-lookup"><span data-stu-id="02b23-680">U+0FD0 and U+0FD1</span></span>|<span data-ttu-id="02b23-681">U + 27E6 для U + 27EB</span><span class="sxs-lookup"><span data-stu-id="02b23-681">U+27E6 to U+27EB</span></span>|<span data-ttu-id="02b23-682">U + FF05 для U + FF0A</span><span class="sxs-lookup"><span data-stu-id="02b23-682">U+FF05 to U+FF0A</span></span>|  
|<span data-ttu-id="02b23-683">U+037E</span><span class="sxs-lookup"><span data-stu-id="02b23-683">U+037E</span></span>|<span data-ttu-id="02b23-684">U + 104A для U + 104F</span><span class="sxs-lookup"><span data-stu-id="02b23-684">U+104A to U+104F</span></span>|<span data-ttu-id="02b23-685">U + 2983 для U + 2998</span><span class="sxs-lookup"><span data-stu-id="02b23-685">U+2983 to U+2998</span></span>|<span data-ttu-id="02b23-686">U + FF0C для U + FF0F</span><span class="sxs-lookup"><span data-stu-id="02b23-686">U+FF0C to U+FF0F</span></span>|  
|<span data-ttu-id="02b23-687">U+0387</span><span class="sxs-lookup"><span data-stu-id="02b23-687">U+0387</span></span>|<span data-ttu-id="02b23-688">U+10FB</span><span class="sxs-lookup"><span data-stu-id="02b23-688">U+10FB</span></span>|<span data-ttu-id="02b23-689">U + 8 29D, чтобы U + 29DB</span><span class="sxs-lookup"><span data-stu-id="02b23-689">U+29D8 to U+29DB</span></span>|<span data-ttu-id="02b23-690">U + FF1A и U + FF1B</span><span class="sxs-lookup"><span data-stu-id="02b23-690">U+FF1A and U+FF1B</span></span>|  
|<span data-ttu-id="02b23-691">U + 055A для U + 055F</span><span class="sxs-lookup"><span data-stu-id="02b23-691">U+055A to U+055F</span></span>|<span data-ttu-id="02b23-692">U + 1361 для U + 1368</span><span class="sxs-lookup"><span data-stu-id="02b23-692">U+1361 to U+1368</span></span>|<span data-ttu-id="02b23-693">U + 29FC и U + 29FD</span><span class="sxs-lookup"><span data-stu-id="02b23-693">U+29FC and U+29FD</span></span>|<span data-ttu-id="02b23-694">U + FF1F и U + FF20</span><span class="sxs-lookup"><span data-stu-id="02b23-694">U+FF1F and U+FF20</span></span>|  
|<span data-ttu-id="02b23-695">U + 0589 до U + 058A</span><span class="sxs-lookup"><span data-stu-id="02b23-695">U+0589 and U+058A</span></span>|<span data-ttu-id="02b23-696">U + 166D и U + 166E</span><span class="sxs-lookup"><span data-stu-id="02b23-696">U+166D and U+166E</span></span>|<span data-ttu-id="02b23-697">U + 2CF9 для U + 2CFC</span><span class="sxs-lookup"><span data-stu-id="02b23-697">U+2CF9 to U+2CFC</span></span>|<span data-ttu-id="02b23-698">U + FF3B для U + FF3D</span><span class="sxs-lookup"><span data-stu-id="02b23-698">U+FF3B to U+FF3D</span></span>|  
|<span data-ttu-id="02b23-699">U+05BE</span><span class="sxs-lookup"><span data-stu-id="02b23-699">U+05BE</span></span>|<span data-ttu-id="02b23-700">U + 169B и U + 169C</span><span class="sxs-lookup"><span data-stu-id="02b23-700">U+169B and U+169C</span></span>|<span data-ttu-id="02b23-701">U + 2CFE и U + 2CFF</span><span class="sxs-lookup"><span data-stu-id="02b23-701">U+2CFE and U+2CFF</span></span>|<span data-ttu-id="02b23-702">U+FF3F</span><span class="sxs-lookup"><span data-stu-id="02b23-702">U+FF3F</span></span>|  
|<span data-ttu-id="02b23-703">U+05C0</span><span class="sxs-lookup"><span data-stu-id="02b23-703">U+05C0</span></span>|<span data-ttu-id="02b23-704">U + 16EB для U + 16ED</span><span class="sxs-lookup"><span data-stu-id="02b23-704">U+16EB to U+16ED</span></span>|<span data-ttu-id="02b23-705">U + 2E00 для U + 2E17</span><span class="sxs-lookup"><span data-stu-id="02b23-705">U+2E00 to U+2E17</span></span>|<span data-ttu-id="02b23-706">U+FF5B</span><span class="sxs-lookup"><span data-stu-id="02b23-706">U+FF5B</span></span>|  
|<span data-ttu-id="02b23-707">U+05C3</span><span class="sxs-lookup"><span data-stu-id="02b23-707">U+05C3</span></span>|<span data-ttu-id="02b23-708">U + 1735 и U + 1736</span><span class="sxs-lookup"><span data-stu-id="02b23-708">U+1735 and U+1736</span></span>|<span data-ttu-id="02b23-709">U + 2E1C и U + 2E1D</span><span class="sxs-lookup"><span data-stu-id="02b23-709">U+2E1C and U+2E1D</span></span>|<span data-ttu-id="02b23-710">U+FF5D</span><span class="sxs-lookup"><span data-stu-id="02b23-710">U+FF5D</span></span>|  
|<span data-ttu-id="02b23-711">U+05C6</span><span class="sxs-lookup"><span data-stu-id="02b23-711">U+05C6</span></span>|<span data-ttu-id="02b23-712">U + 17D 4 до U + 17D 6</span><span class="sxs-lookup"><span data-stu-id="02b23-712">U+17D4 to U+17D6</span></span>|<span data-ttu-id="02b23-713">U + 3001 для U + 3003</span><span class="sxs-lookup"><span data-stu-id="02b23-713">U+3001 to U+3003</span></span>|<span data-ttu-id="02b23-714">U + FF5F для U + FF65</span><span class="sxs-lookup"><span data-stu-id="02b23-714">U+FF5F to U+FF65</span></span>|  
|<span data-ttu-id="02b23-715">U + 05F3 и U + 05F4</span><span class="sxs-lookup"><span data-stu-id="02b23-715">U+05F3 and U+05F4</span></span>|<span data-ttu-id="02b23-716">U + 8 17D, чтобы U + 17DA</span><span class="sxs-lookup"><span data-stu-id="02b23-716">U+17D8 to U+17DA</span></span>|<span data-ttu-id="02b23-717">U + 3008 для U + 3011</span><span class="sxs-lookup"><span data-stu-id="02b23-717">U+3008 to U+3011</span></span>||  
  
   
  
## Examples  
 <span data-ttu-id="02b23-718">В следующем примере кода показано <xref:System.Char.IsPunctuation%2A>.</span><span class="sxs-lookup"><span data-stu-id="02b23-718">The following code example demonstrates <xref:System.Char.IsPunctuation%2A>.</span></span>  
  
 [!code-cpp[System.Char.IsPunctuation#9](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsPunctuation/CPP/ispunctuation.cpp#9)]
 [!code-csharp[System.Char.IsPunctuation#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsPunctuation/CS/ispunctuation.cs#9)]
 [!code-vb[System.Char.IsPunctuation#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsPunctuation/VB/ispunctuation.vb#9)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Boolean" />
      </Docs>
    </Member>
    <Member MemberName="IsPunctuation">
      <MemberSignature Language="C#" Value="public static bool IsPunctuation (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsPunctuation(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsPunctuation(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsPunctuation (s As String, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsPunctuation(System::String ^ s, int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="02b23-719">Строка.</span><span class="sxs-lookup"><span data-stu-id="02b23-719">A string.</span></span></param>
        <param name="index"><span data-ttu-id="02b23-720">Позиция символа, который необходимо вычислить, в <c>s</c>.</span><span class="sxs-lookup"><span data-stu-id="02b23-720">The position of the character to evaluate in <c>s</c>.</span></span></param>
        <summary><span data-ttu-id="02b23-721">Показывает, относится ли указанный символ в указанной позиции в указанной строке к категории знаков препинания.</span><span class="sxs-lookup"><span data-stu-id="02b23-721">Indicates whether the character at the specified position in a specified string is categorized as a punctuation mark.</span></span></summary>
        <returns>
          <span data-ttu-id="02b23-722"><see langword="true" />, если знак в позиции <paramref name="index" /> в <paramref name="s" /> является знаком препинания; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="02b23-722"><see langword="true" /> if the character at position <paramref name="index" /> in <paramref name="s" /> is a punctuation mark; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02b23-723">Позиций символов в строке индексируются, начиная с нуля.</span><span class="sxs-lookup"><span data-stu-id="02b23-723">Character positions in a string are indexed starting from zero.</span></span>  
  
 <span data-ttu-id="02b23-724">Допустимые знаки пунктуации являются членами следующих категорий в <xref:System.Globalization.UnicodeCategory>: `ConnectorPunctuation`, `DashPunctuation`, `OpenPunctuation`, `ClosePunctuation`, `InititalQuotePunctuation`, `FinalQuotePunctuation`, или `OtherPunctuation`.</span><span class="sxs-lookup"><span data-stu-id="02b23-724">Valid punctuation marks are members of the following categories in <xref:System.Globalization.UnicodeCategory>: `ConnectorPunctuation`, `DashPunctuation`, `OpenPunctuation`, `ClosePunctuation`, `InititalQuotePunctuation`, `FinalQuotePunctuation`, or `OtherPunctuation`.</span></span> <span data-ttu-id="02b23-725">Они включают символы с кодовых точек Юникода, перечисленные в следующей таблице.</span><span class="sxs-lookup"><span data-stu-id="02b23-725">They include characters with the Unicode code points listed in the following table.</span></span>  
  
|||||  
|-|-|-|-|  
|<span data-ttu-id="02b23-726">U + 0021 для U + 0023</span><span class="sxs-lookup"><span data-stu-id="02b23-726">U+0021 to U+0023</span></span>|<span data-ttu-id="02b23-727">U + 060C и D 060 U +</span><span class="sxs-lookup"><span data-stu-id="02b23-727">U+060C and U+060D</span></span>|<span data-ttu-id="02b23-728">U + 1800 для U + 180A</span><span class="sxs-lookup"><span data-stu-id="02b23-728">U+1800 to U+180A</span></span>|<span data-ttu-id="02b23-729">U + 3014 к U + 301F</span><span class="sxs-lookup"><span data-stu-id="02b23-729">U+3014 to U+301F</span></span>|  
|<span data-ttu-id="02b23-730">U + 0025 для U + 002A</span><span class="sxs-lookup"><span data-stu-id="02b23-730">U+0025 to U+002A</span></span>|<span data-ttu-id="02b23-731">U+061B</span><span class="sxs-lookup"><span data-stu-id="02b23-731">U+061B</span></span>|<span data-ttu-id="02b23-732">U + 1944 и U + 1945</span><span class="sxs-lookup"><span data-stu-id="02b23-732">U+1944 and U+1945</span></span>|<span data-ttu-id="02b23-733">U+3030</span><span class="sxs-lookup"><span data-stu-id="02b23-733">U+3030</span></span>|  
|<span data-ttu-id="02b23-734">U + 002C до U + 002F</span><span class="sxs-lookup"><span data-stu-id="02b23-734">U+002C to U+002F</span></span>|<span data-ttu-id="02b23-735">U + 061E и U + 061F</span><span class="sxs-lookup"><span data-stu-id="02b23-735">U+061E and U+061F</span></span>|<span data-ttu-id="02b23-736">U + 19DE и U + 19DF</span><span class="sxs-lookup"><span data-stu-id="02b23-736">U+19DE and U+19DF</span></span>|<span data-ttu-id="02b23-737">U+303D</span><span class="sxs-lookup"><span data-stu-id="02b23-737">U+303D</span></span>|  
|<span data-ttu-id="02b23-738">U + 003A и U + 003B</span><span class="sxs-lookup"><span data-stu-id="02b23-738">U+003A and U+003B</span></span>|<span data-ttu-id="02b23-739">U + 066A до U + 066D</span><span class="sxs-lookup"><span data-stu-id="02b23-739">U+066A to U+066D</span></span>|<span data-ttu-id="02b23-740">U + 1A1E и U + 1A1F</span><span class="sxs-lookup"><span data-stu-id="02b23-740">U+1A1E and U+1A1F</span></span>|<span data-ttu-id="02b23-741">U+30A0</span><span class="sxs-lookup"><span data-stu-id="02b23-741">U+30A0</span></span>|  
|<span data-ttu-id="02b23-742">U + 003F и U + 0040</span><span class="sxs-lookup"><span data-stu-id="02b23-742">U+003F and U+0040</span></span>|<span data-ttu-id="02b23-743">U+06D4</span><span class="sxs-lookup"><span data-stu-id="02b23-743">U+06D4</span></span>|<span data-ttu-id="02b23-744">U + 1B5A для U + 1B60</span><span class="sxs-lookup"><span data-stu-id="02b23-744">U+1B5A to U+1B60</span></span>|<span data-ttu-id="02b23-745">U+30FB</span><span class="sxs-lookup"><span data-stu-id="02b23-745">U+30FB</span></span>|  
|<span data-ttu-id="02b23-746">U + 005B до U + 005D</span><span class="sxs-lookup"><span data-stu-id="02b23-746">U+005B to U+005D</span></span>|<span data-ttu-id="02b23-747">U + 0700 до U + 070D</span><span class="sxs-lookup"><span data-stu-id="02b23-747">U+0700 to U+070D</span></span>|<span data-ttu-id="02b23-748">U + 2010 до U + 2027</span><span class="sxs-lookup"><span data-stu-id="02b23-748">U+2010 to U+2027</span></span>|<span data-ttu-id="02b23-749">U + A874 для U + A877</span><span class="sxs-lookup"><span data-stu-id="02b23-749">U+A874 to U+A877</span></span>|  
|<span data-ttu-id="02b23-750">U+005F</span><span class="sxs-lookup"><span data-stu-id="02b23-750">U+005F</span></span>|<span data-ttu-id="02b23-751">U + 07F7 для U + 07F9</span><span class="sxs-lookup"><span data-stu-id="02b23-751">U+07F7 to U+07F9</span></span>|<span data-ttu-id="02b23-752">U + 2030 U + 2043</span><span class="sxs-lookup"><span data-stu-id="02b23-752">U+2030 to U+2043</span></span>|<span data-ttu-id="02b23-753">U + FD3E и U + FD3F</span><span class="sxs-lookup"><span data-stu-id="02b23-753">U+FD3E and U+FD3F</span></span>|  
|<span data-ttu-id="02b23-754">U+007B</span><span class="sxs-lookup"><span data-stu-id="02b23-754">U+007B</span></span>|<span data-ttu-id="02b23-755">U + 0964 и U + 0965</span><span class="sxs-lookup"><span data-stu-id="02b23-755">U+0964 and U+0965</span></span>|<span data-ttu-id="02b23-756">U + 2045 для U + 2051</span><span class="sxs-lookup"><span data-stu-id="02b23-756">U+2045 to U+2051</span></span>|<span data-ttu-id="02b23-757">U + FE10 для U + FE19</span><span class="sxs-lookup"><span data-stu-id="02b23-757">U+FE10 to U+FE19</span></span>|  
|<span data-ttu-id="02b23-758">U+007D</span><span class="sxs-lookup"><span data-stu-id="02b23-758">U+007D</span></span>|<span data-ttu-id="02b23-759">U+0970</span><span class="sxs-lookup"><span data-stu-id="02b23-759">U+0970</span></span>|<span data-ttu-id="02b23-760">U + 2053 для U + 205E</span><span class="sxs-lookup"><span data-stu-id="02b23-760">U+2053 to U+205E</span></span>|<span data-ttu-id="02b23-761">U + FE30 для U + FE52</span><span class="sxs-lookup"><span data-stu-id="02b23-761">U+FE30 to U+FE52</span></span>|  
|<span data-ttu-id="02b23-762">U+00A1</span><span class="sxs-lookup"><span data-stu-id="02b23-762">U+00A1</span></span>|<span data-ttu-id="02b23-763">U+0DF4</span><span class="sxs-lookup"><span data-stu-id="02b23-763">U+0DF4</span></span>|<span data-ttu-id="02b23-764">U + 207D и U + 207E</span><span class="sxs-lookup"><span data-stu-id="02b23-764">U+207D and  U+207E</span></span>|<span data-ttu-id="02b23-765">U + FE54 для U + FE61</span><span class="sxs-lookup"><span data-stu-id="02b23-765">U+FE54 to U+FE61</span></span>|  
|<span data-ttu-id="02b23-766">U+00AB</span><span class="sxs-lookup"><span data-stu-id="02b23-766">U+00AB</span></span>|<span data-ttu-id="02b23-767">U + 0E4F для U + 0E5B</span><span class="sxs-lookup"><span data-stu-id="02b23-767">U+0E4F to U+0E5B</span></span>|<span data-ttu-id="02b23-768">U + 208D и U + 208E</span><span class="sxs-lookup"><span data-stu-id="02b23-768">U+208D and U+208E</span></span>|<span data-ttu-id="02b23-769">U+FE63</span><span class="sxs-lookup"><span data-stu-id="02b23-769">U+FE63</span></span>|  
|<span data-ttu-id="02b23-770">U+00AD</span><span class="sxs-lookup"><span data-stu-id="02b23-770">U+00AD</span></span>|<span data-ttu-id="02b23-771">U + 0F04 для U + 0F12</span><span class="sxs-lookup"><span data-stu-id="02b23-771">U+0F04 to U+0F12</span></span>|<span data-ttu-id="02b23-772">U + 2329 до U + 232A</span><span class="sxs-lookup"><span data-stu-id="02b23-772">U+2329 and U+232A</span></span>|<span data-ttu-id="02b23-773">U+FE68</span><span class="sxs-lookup"><span data-stu-id="02b23-773">U+FE68</span></span>|  
|<span data-ttu-id="02b23-774">U+00B7</span><span class="sxs-lookup"><span data-stu-id="02b23-774">U+00B7</span></span>|<span data-ttu-id="02b23-775">U + 0F3A для U + 0F3D</span><span class="sxs-lookup"><span data-stu-id="02b23-775">U+0F3A to U+0F3D</span></span>|<span data-ttu-id="02b23-776">U + 2768 для U + 2775</span><span class="sxs-lookup"><span data-stu-id="02b23-776">U+2768 to U+2775</span></span>|<span data-ttu-id="02b23-777">U + FE6A и U + FE6B</span><span class="sxs-lookup"><span data-stu-id="02b23-777">U+FE6A and U+FE6B</span></span>|  
|<span data-ttu-id="02b23-778">U+00BB</span><span class="sxs-lookup"><span data-stu-id="02b23-778">U+00BB</span></span>|<span data-ttu-id="02b23-779">U+0F85</span><span class="sxs-lookup"><span data-stu-id="02b23-779">U+0F85</span></span>|<span data-ttu-id="02b23-780">5 27C U + U + 27C 6</span><span class="sxs-lookup"><span data-stu-id="02b23-780">U+27C5 to U+27C6</span></span>|<span data-ttu-id="02b23-781">U + FF01 для U + FF03</span><span class="sxs-lookup"><span data-stu-id="02b23-781">U+FF01 to U+FF03</span></span>|  
|<span data-ttu-id="02b23-782">U+00BF</span><span class="sxs-lookup"><span data-stu-id="02b23-782">U+00BF</span></span>|<span data-ttu-id="02b23-783">U + 0FD0 и U + 0FD1</span><span class="sxs-lookup"><span data-stu-id="02b23-783">U+0FD0 and U+0FD1</span></span>|<span data-ttu-id="02b23-784">U + 27E6 для U + 27EB</span><span class="sxs-lookup"><span data-stu-id="02b23-784">U+27E6 to U+27EB</span></span>|<span data-ttu-id="02b23-785">U + FF05 для U + FF0A</span><span class="sxs-lookup"><span data-stu-id="02b23-785">U+FF05 to U+FF0A</span></span>|  
|<span data-ttu-id="02b23-786">U+037E</span><span class="sxs-lookup"><span data-stu-id="02b23-786">U+037E</span></span>|<span data-ttu-id="02b23-787">U + 104A для U + 104F</span><span class="sxs-lookup"><span data-stu-id="02b23-787">U+104A to U+104F</span></span>|<span data-ttu-id="02b23-788">U + 2983 для U + 2998</span><span class="sxs-lookup"><span data-stu-id="02b23-788">U+2983 to U+2998</span></span>|<span data-ttu-id="02b23-789">U + FF0C для U + FF0F</span><span class="sxs-lookup"><span data-stu-id="02b23-789">U+FF0C to U+FF0F</span></span>|  
|<span data-ttu-id="02b23-790">U+0387</span><span class="sxs-lookup"><span data-stu-id="02b23-790">U+0387</span></span>|<span data-ttu-id="02b23-791">U+10FB</span><span class="sxs-lookup"><span data-stu-id="02b23-791">U+10FB</span></span>|<span data-ttu-id="02b23-792">U + 8 29D, чтобы U + 29DB</span><span class="sxs-lookup"><span data-stu-id="02b23-792">U+29D8 to U+29DB</span></span>|<span data-ttu-id="02b23-793">U + FF1A и U + FF1B</span><span class="sxs-lookup"><span data-stu-id="02b23-793">U+FF1A and U+FF1B</span></span>|  
|<span data-ttu-id="02b23-794">U + 055A для U + 055F</span><span class="sxs-lookup"><span data-stu-id="02b23-794">U+055A to U+055F</span></span>|<span data-ttu-id="02b23-795">U + 1361 для U + 1368</span><span class="sxs-lookup"><span data-stu-id="02b23-795">U+1361 to U+1368</span></span>|<span data-ttu-id="02b23-796">U + 29FC и U + 29FD</span><span class="sxs-lookup"><span data-stu-id="02b23-796">U+29FC and U+29FD</span></span>|<span data-ttu-id="02b23-797">U + FF1F и U + FF20</span><span class="sxs-lookup"><span data-stu-id="02b23-797">U+FF1F and U+FF20</span></span>|  
|<span data-ttu-id="02b23-798">U + 0589 до U + 058A</span><span class="sxs-lookup"><span data-stu-id="02b23-798">U+0589 and U+058A</span></span>|<span data-ttu-id="02b23-799">U + 166D и U + 166E</span><span class="sxs-lookup"><span data-stu-id="02b23-799">U+166D and U+166E</span></span>|<span data-ttu-id="02b23-800">U + 2CF9 для U + 2CFC</span><span class="sxs-lookup"><span data-stu-id="02b23-800">U+2CF9 to U+2CFC</span></span>|<span data-ttu-id="02b23-801">U + FF3B для U + FF3D</span><span class="sxs-lookup"><span data-stu-id="02b23-801">U+FF3B to U+FF3D</span></span>|  
|<span data-ttu-id="02b23-802">U+05BE</span><span class="sxs-lookup"><span data-stu-id="02b23-802">U+05BE</span></span>|<span data-ttu-id="02b23-803">U + 169B и U + 169C</span><span class="sxs-lookup"><span data-stu-id="02b23-803">U+169B and U+169C</span></span>|<span data-ttu-id="02b23-804">U + 2CFE и U + 2CFF</span><span class="sxs-lookup"><span data-stu-id="02b23-804">U+2CFE and U+2CFF</span></span>|<span data-ttu-id="02b23-805">U+FF3F</span><span class="sxs-lookup"><span data-stu-id="02b23-805">U+FF3F</span></span>|  
|<span data-ttu-id="02b23-806">U+05C0</span><span class="sxs-lookup"><span data-stu-id="02b23-806">U+05C0</span></span>|<span data-ttu-id="02b23-807">U + 16EB для U + 16ED</span><span class="sxs-lookup"><span data-stu-id="02b23-807">U+16EB to U+16ED</span></span>|<span data-ttu-id="02b23-808">U + 2E00 для U + 2E17</span><span class="sxs-lookup"><span data-stu-id="02b23-808">U+2E00 to U+2E17</span></span>|<span data-ttu-id="02b23-809">U+FF5B</span><span class="sxs-lookup"><span data-stu-id="02b23-809">U+FF5B</span></span>|  
|<span data-ttu-id="02b23-810">U+05C3</span><span class="sxs-lookup"><span data-stu-id="02b23-810">U+05C3</span></span>|<span data-ttu-id="02b23-811">U + 1735 и U + 1736</span><span class="sxs-lookup"><span data-stu-id="02b23-811">U+1735 and U+1736</span></span>|<span data-ttu-id="02b23-812">U + 2E1C и U + 2E1D</span><span class="sxs-lookup"><span data-stu-id="02b23-812">U+2E1C and U+2E1D</span></span>|<span data-ttu-id="02b23-813">U+FF5D</span><span class="sxs-lookup"><span data-stu-id="02b23-813">U+FF5D</span></span>|  
|<span data-ttu-id="02b23-814">U+05C6</span><span class="sxs-lookup"><span data-stu-id="02b23-814">U+05C6</span></span>|<span data-ttu-id="02b23-815">U + 17D 4 до U + 17D 6</span><span class="sxs-lookup"><span data-stu-id="02b23-815">U+17D4 to U+17D6</span></span>|<span data-ttu-id="02b23-816">U + 3001 для U + 3003</span><span class="sxs-lookup"><span data-stu-id="02b23-816">U+3001 to U+3003</span></span>|<span data-ttu-id="02b23-817">U + FF5F для U + FF65</span><span class="sxs-lookup"><span data-stu-id="02b23-817">U+FF5F to U+FF65</span></span>|  
|<span data-ttu-id="02b23-818">U + 05F3 и U + 05F4</span><span class="sxs-lookup"><span data-stu-id="02b23-818">U+05F3 and U+05F4</span></span>|<span data-ttu-id="02b23-819">U + 8 17D, чтобы U + 17DA</span><span class="sxs-lookup"><span data-stu-id="02b23-819">U+17D8 to U+17DA</span></span>|<span data-ttu-id="02b23-820">U + 3008 для U + 3011</span><span class="sxs-lookup"><span data-stu-id="02b23-820">U+3008 to U+3011</span></span>||  
  
   
  
## Examples  
 <span data-ttu-id="02b23-821">В следующем примере кода показано <xref:System.Char.IsPunctuation%2A>.</span><span class="sxs-lookup"><span data-stu-id="02b23-821">The following code example demonstrates <xref:System.Char.IsPunctuation%2A>.</span></span>  
  
 [!code-cpp[System.Char.IsPunctuation#9](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsPunctuation/CPP/ispunctuation.cpp#9)]
 [!code-csharp[System.Char.IsPunctuation#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsPunctuation/CS/ispunctuation.cs#9)]
 [!code-vb[System.Char.IsPunctuation#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsPunctuation/VB/ispunctuation.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="02b23-822">Свойство <paramref name="s" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="02b23-822"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="02b23-823">Параметр <paramref name="index" /> имеет значение меньше нуля или больше последней позиции в <paramref name="s" />.</span><span class="sxs-lookup"><span data-stu-id="02b23-823"><paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />.</span></span></exception>
        <altmember cref="T:System.Boolean" />
        <altmember cref="T:System.String" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsSeparator">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="02b23-824">Показывает, относится ли символ Юникода к категории знаков-разделителей.</span><span class="sxs-lookup"><span data-stu-id="02b23-824">Indicates whether a Unicode character is categorized as a separator character.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02b23-825">В стандарте Юникода распознает три подкатегории разделителей:</span><span class="sxs-lookup"><span data-stu-id="02b23-825">The Unicode standard recognizes three subcategories of separators:</span></span>  
  
-   <span data-ttu-id="02b23-826">Пробел в качестве разделителей ( <xref:System.Globalization.UnicodeCategory.SpaceSeparator?displayProperty=nameWithType> категории), которая содержит символы, например \u0020.</span><span class="sxs-lookup"><span data-stu-id="02b23-826">Space separators (the <xref:System.Globalization.UnicodeCategory.SpaceSeparator?displayProperty=nameWithType> category), which includes characters such as \u0020.</span></span>  
  
-   <span data-ttu-id="02b23-827">Строки в качестве разделителей ( <xref:System.Globalization.UnicodeCategory.LineSeparator?displayProperty=nameWithType> категории), которая содержит \u2028.</span><span class="sxs-lookup"><span data-stu-id="02b23-827">Line separators (the <xref:System.Globalization.UnicodeCategory.LineSeparator?displayProperty=nameWithType> category), which includes \u2028.</span></span>  
  
-   <span data-ttu-id="02b23-828">Абзаца разделители ( <xref:System.Globalization.UnicodeCategory.ParagraphSeparator?displayProperty=nameWithType> категории), которая содержит \u2029.</span><span class="sxs-lookup"><span data-stu-id="02b23-828">Paragraph separators (the <xref:System.Globalization.UnicodeCategory.ParagraphSeparator?displayProperty=nameWithType> category), which includes \u2029.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="02b23-829">В стандарте Юникода классифицирует \u000A символов (LF), \u000C (FF) и \u000D (CR) как управляющие символы (члены <xref:System.Globalization.UnicodeCategory.Control?displayProperty=nameWithType> категории), а не как символы-разделители.</span><span class="sxs-lookup"><span data-stu-id="02b23-829">The Unicode standard classifies the characters \u000A (LF), \u000C (FF), and \u000D (CR) as control characters (members of the <xref:System.Globalization.UnicodeCategory.Control?displayProperty=nameWithType> category), not as separator characters.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsSeparator">
      <MemberSignature Language="C#" Value="public static bool IsSeparator (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsSeparator(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsSeparator(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsSeparator (c As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsSeparator(char c);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c"><span data-ttu-id="02b23-830">Знак Юникода, который необходимо вычислить.</span><span class="sxs-lookup"><span data-stu-id="02b23-830">The Unicode character to evaluate.</span></span></param>
        <summary><span data-ttu-id="02b23-831">Показывает, относится ли указанный символ Юникода к категории знаков-разделителей.</span><span class="sxs-lookup"><span data-stu-id="02b23-831">Indicates whether the specified Unicode character is categorized as a separator character.</span></span></summary>
        <returns>
          <span data-ttu-id="02b23-832">Значение <see langword="true" />, если <paramref name="c" /> является знаком-разделителем; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="02b23-832"><see langword="true" /> if <paramref name="c" /> is a separator character; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02b23-833">В стандарте Юникода распознает три подкатегории разделителей:</span><span class="sxs-lookup"><span data-stu-id="02b23-833">The Unicode standard recognizes three subcategories of separators:</span></span>  
  
-   <span data-ttu-id="02b23-834">Пробел в качестве разделителей ( <xref:System.Globalization.UnicodeCategory.SpaceSeparator?displayProperty=nameWithType> категории), которая содержит символы, например \u0020.</span><span class="sxs-lookup"><span data-stu-id="02b23-834">Space separators (the <xref:System.Globalization.UnicodeCategory.SpaceSeparator?displayProperty=nameWithType> category), which includes characters such as \u0020.</span></span>  
  
-   <span data-ttu-id="02b23-835">Строки в качестве разделителей ( <xref:System.Globalization.UnicodeCategory.LineSeparator?displayProperty=nameWithType> категории), которая содержит \u2028.</span><span class="sxs-lookup"><span data-stu-id="02b23-835">Line separators (the <xref:System.Globalization.UnicodeCategory.LineSeparator?displayProperty=nameWithType> category), which includes \u2028.</span></span>  
  
-   <span data-ttu-id="02b23-836">Абзаца разделители ( <xref:System.Globalization.UnicodeCategory.ParagraphSeparator?displayProperty=nameWithType> категории), которая содержит \u2029.</span><span class="sxs-lookup"><span data-stu-id="02b23-836">Paragraph separators (the <xref:System.Globalization.UnicodeCategory.ParagraphSeparator?displayProperty=nameWithType> category), which includes \u2029.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="02b23-837">В стандарте Юникода классифицирует \u000A символов (LF), \u000C (FF) и \u000D (CR) как управляющие символы (члены <xref:System.Globalization.UnicodeCategory.Control?displayProperty=nameWithType> категории), а не как символы-разделители.</span><span class="sxs-lookup"><span data-stu-id="02b23-837">The Unicode standard classifies the characters \u000A (LF), \u000C (FF), and \u000D (CR) as control characters (members of the <xref:System.Globalization.UnicodeCategory.Control?displayProperty=nameWithType> category), not as separator characters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="02b23-838">В следующем примере приводится <xref:System.Char> объекты, которые классифицируются как символы-разделители.</span><span class="sxs-lookup"><span data-stu-id="02b23-838">The following example lists the <xref:System.Char> objects that are classified as separator characters.</span></span>  
  
 [!code-cpp[System.Char.IsSeparator#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsSeparator/CPP/isseparator1.cpp#1)]
 [!code-csharp[System.Char.IsSeparator#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsSeparator/CS/isseparator1.cs#1)]
 [!code-vb[System.Char.IsSeparator#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsSeparator/VB/isseparator1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Globalization.UnicodeCategory" />
      </Docs>
    </Member>
    <Member MemberName="IsSeparator">
      <MemberSignature Language="C#" Value="public static bool IsSeparator (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsSeparator(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsSeparator(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsSeparator (s As String, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsSeparator(System::String ^ s, int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="02b23-839">Строка.</span><span class="sxs-lookup"><span data-stu-id="02b23-839">A string.</span></span></param>
        <param name="index"><span data-ttu-id="02b23-840">Позиция символа, который необходимо вычислить, в <c>s</c>.</span><span class="sxs-lookup"><span data-stu-id="02b23-840">The position of the character to evaluate in <c>s</c>.</span></span></param>
        <summary><span data-ttu-id="02b23-841">Показывает, относится ли указанный символ в указанной позиции в указанной строке к категории знаков-разделителей.</span><span class="sxs-lookup"><span data-stu-id="02b23-841">Indicates whether the character at the specified position in a specified string is categorized as a separator character.</span></span></summary>
        <returns>
          <span data-ttu-id="02b23-842"><see langword="true" />, если символ в позиции <paramref name="index" /> в <paramref name="s" /> является знаком-разделителем; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="02b23-842"><see langword="true" /> if the character at position <paramref name="index" /> in <paramref name="s" /> is a separator character; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02b23-843">Позиций символов в строке индексируются, начиная с нуля.</span><span class="sxs-lookup"><span data-stu-id="02b23-843">Character positions in a string are indexed starting from zero.</span></span>  
  
 <span data-ttu-id="02b23-844">В стандарте Юникода распознает три подкатегории разделителей:</span><span class="sxs-lookup"><span data-stu-id="02b23-844">The Unicode standard recognizes three subcategories of separators:</span></span>  
  
-   <span data-ttu-id="02b23-845">Пробел в качестве разделителей ( <xref:System.Globalization.UnicodeCategory.SpaceSeparator?displayProperty=nameWithType> категории), которая содержит символы, например \u0020.</span><span class="sxs-lookup"><span data-stu-id="02b23-845">Space separators (the <xref:System.Globalization.UnicodeCategory.SpaceSeparator?displayProperty=nameWithType> category), which includes characters such as \u0020.</span></span>  
  
-   <span data-ttu-id="02b23-846">Строки в качестве разделителей ( <xref:System.Globalization.UnicodeCategory.LineSeparator?displayProperty=nameWithType> категории), которая содержит \u2028.</span><span class="sxs-lookup"><span data-stu-id="02b23-846">Line separators (the <xref:System.Globalization.UnicodeCategory.LineSeparator?displayProperty=nameWithType> category), which includes \u2028.</span></span>  
  
-   <span data-ttu-id="02b23-847">Абзаца разделители ( <xref:System.Globalization.UnicodeCategory.ParagraphSeparator?displayProperty=nameWithType> категории), которая содержит \u2029.</span><span class="sxs-lookup"><span data-stu-id="02b23-847">Paragraph separators (the <xref:System.Globalization.UnicodeCategory.ParagraphSeparator?displayProperty=nameWithType> category), which includes \u2029.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="02b23-848">В стандарте Юникода классифицирует \u000A символов (LF), \u000C (FF) и \u000D (CR) как управляющие символы (члены <xref:System.Globalization.UnicodeCategory.Control?displayProperty=nameWithType> категории), а не как символы-разделители.</span><span class="sxs-lookup"><span data-stu-id="02b23-848">The Unicode standard classifies the characters \u000A (LF), \u000C (FF), and \u000D (CR) as control characters (members of the <xref:System.Globalization.UnicodeCategory.Control?displayProperty=nameWithType> category), not as separator characters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="02b23-849">В следующем примере демонстрируется <xref:System.Char.IsSeparator%2A>.</span><span class="sxs-lookup"><span data-stu-id="02b23-849">The following example demonstrates <xref:System.Char.IsSeparator%2A>.</span></span>  
  
 [!code-cpp[System.Char.IsSeparator#10](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsSeparator/CPP/isseparator.cpp#10)]
 [!code-csharp[System.Char.IsSeparator#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsSeparator/CS/isseparator.cs#10)]
 [!code-vb[System.Char.IsSeparator#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsSeparator/VB/isseparator.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="02b23-850">Свойство <paramref name="s" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="02b23-850"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="02b23-851">Параметр <paramref name="index" /> имеет значение меньше нуля или больше последней позиции в <paramref name="s" />.</span><span class="sxs-lookup"><span data-stu-id="02b23-851"><paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />.</span></span></exception>
        <altmember cref="T:System.Boolean" />
        <altmember cref="T:System.String" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsSurrogate">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="02b23-852">Показывает, имеет ли символ заменяющую кодовую единицу.</span><span class="sxs-lookup"><span data-stu-id="02b23-852">Indicates whether a character has a surrogate code unit.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsSurrogate">
      <MemberSignature Language="C#" Value="public static bool IsSurrogate (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsSurrogate(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsSurrogate(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsSurrogate (c As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsSurrogate(char c);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c"><span data-ttu-id="02b23-853">Знак Юникода, который необходимо вычислить.</span><span class="sxs-lookup"><span data-stu-id="02b23-853">The Unicode character to evaluate.</span></span></param>
        <summary><span data-ttu-id="02b23-854">Указывает, имеет ли заданный символ заменяющую кодовую единицу.</span><span class="sxs-lookup"><span data-stu-id="02b23-854">Indicates whether the specified character has a surrogate code unit.</span></span></summary>
        <returns>
          <span data-ttu-id="02b23-855">Значение <see langword="true" />, если параметр <paramref name="c" /> имеет большее или меньшее заменяющее значение; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="02b23-855"><see langword="true" /> if <paramref name="c" /> is either a high surrogate or a low surrogate; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02b23-856">Суррогат — <xref:System.Char> объекта с элементом кода UTF-16 в диапазоне от U + D800 до U + DFFF.</span><span class="sxs-lookup"><span data-stu-id="02b23-856">A surrogate is a <xref:System.Char> object with a UTF-16 code unit in the range from U+D800 to U+DFFF.</span></span> <span data-ttu-id="02b23-857">Каждый символ с Единица кода в этом диапазоне принадлежит <xref:System.Globalization.UnicodeCategory.Surrogate?displayProperty=nameWithType> категории.</span><span class="sxs-lookup"><span data-stu-id="02b23-857">Each character with a code unit in this range belongs to the <xref:System.Globalization.UnicodeCategory.Surrogate?displayProperty=nameWithType> category.</span></span> <span data-ttu-id="02b23-858">Отдельные заменяющую кодовую единицу имеет без интерпретации, но имеет смысл только при использовании в составе суррогатную пару.</span><span class="sxs-lookup"><span data-stu-id="02b23-858">The individual surrogate code unit has no interpretation of its own, but has meaning only when used as part of a surrogate pair.</span></span> <span data-ttu-id="02b23-859">Дополнительные сведения о суррогатных парах см. в стандарте Юникода в [домашней странице Юникода](http://go.microsoft.com/fwlink/?linkid=37123).</span><span class="sxs-lookup"><span data-stu-id="02b23-859">For more information about surrogate pairs, see the Unicode Standard at the [Unicode home page](http://go.microsoft.com/fwlink/?linkid=37123).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="02b23-860">В следующем примере демонстрируется <xref:System.Char.IsSurrogate%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="02b23-860">The following example demonstrates the <xref:System.Char.IsSurrogate%2A> method.</span></span>  
  
 [!code-cpp[System.Char.IsSurrogate#11](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsSurrogate/CPP/issurrogate.cpp#11)]
 [!code-csharp[System.Char.IsSurrogate#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsSurrogate/CS/issurrogate.cs#11)]
 [!code-vb[System.Char.IsSurrogate#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsSurrogate/VB/issurrogate.vb#11)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Char.IsHighSurrogate" />
        <altmember cref="Overload:System.Char.IsLowSurrogate" />
        <altmember cref="Overload:System.Char.IsSurrogatePair" />
      </Docs>
    </Member>
    <Member MemberName="IsSurrogate">
      <MemberSignature Language="C#" Value="public static bool IsSurrogate (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsSurrogate(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsSurrogate(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsSurrogate (s As String, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsSurrogate(System::String ^ s, int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="02b23-861">Строка.</span><span class="sxs-lookup"><span data-stu-id="02b23-861">A string.</span></span></param>
        <param name="index"><span data-ttu-id="02b23-862">Позиция символа, который необходимо вычислить, в <c>s</c>.</span><span class="sxs-lookup"><span data-stu-id="02b23-862">The position of the character to evaluate in <c>s</c>.</span></span></param>
        <summary><span data-ttu-id="02b23-863">Указывает, имеет ли указанный символ в указанной позиции в указанной строке заменяющую кодовую единицу.</span><span class="sxs-lookup"><span data-stu-id="02b23-863">Indicates whether the character at the specified position in a specified string has a surrogate code unit.</span></span></summary>
        <returns>
          <span data-ttu-id="02b23-864">Значение <see langword="true" />, если символ в позиции <paramref name="index" /> в <paramref name="s" /> является большим или меньшим заменяющим значением; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="02b23-864"><see langword="true" /> if the character at position <paramref name="index" /> in <paramref name="s" /> is a either a high surrogate or a low surrogate; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02b23-865">Позиций символов в строке индексируются, начиная с нуля.</span><span class="sxs-lookup"><span data-stu-id="02b23-865">Character positions in a string are indexed starting from zero.</span></span>  
  
 <span data-ttu-id="02b23-866">Суррогат — <xref:System.Char> объекта с элементом кода UTF-16 в диапазоне от U + D800 до U + DFFF.</span><span class="sxs-lookup"><span data-stu-id="02b23-866">A surrogate is a <xref:System.Char> object with a UTF-16 code unit in the range from U+D800 to U+DFFF.</span></span> <span data-ttu-id="02b23-867">Каждый символ с Единица кода в этом диапазоне принадлежит <xref:System.Globalization.UnicodeCategory.Surrogate?displayProperty=nameWithType> категории.</span><span class="sxs-lookup"><span data-stu-id="02b23-867">Each character with a code unit in this range belongs to the <xref:System.Globalization.UnicodeCategory.Surrogate?displayProperty=nameWithType> category.</span></span> <span data-ttu-id="02b23-868">Отдельные заменяющую кодовую единицу имеет без интерпретации, но имеет смысл только при использовании в составе суррогатную пару.</span><span class="sxs-lookup"><span data-stu-id="02b23-868">The individual surrogate code unit has no interpretation of its own, but has meaning only when used as part of a surrogate pair.</span></span> <span data-ttu-id="02b23-869">Дополнительные сведения о суррогатных парах см. в стандарте Юникода в [домашней странице Юникода](http://go.microsoft.com/fwlink/?linkid=37123).</span><span class="sxs-lookup"><span data-stu-id="02b23-869">For more information about surrogate pairs, see the Unicode Standard at the [Unicode home page](http://go.microsoft.com/fwlink/?linkid=37123).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="02b23-870">В следующем примере кода показано <xref:System.Char.IsSurrogate%2A>.</span><span class="sxs-lookup"><span data-stu-id="02b23-870">The following code example demonstrates <xref:System.Char.IsSurrogate%2A>.</span></span>  
  
 [!code-cpp[System.Char.IsSurrogate#11](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsSurrogate/CPP/issurrogate.cpp#11)]
 [!code-csharp[System.Char.IsSurrogate#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsSurrogate/CS/issurrogate.cs#11)]
 [!code-vb[System.Char.IsSurrogate#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsSurrogate/VB/issurrogate.vb#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="02b23-871">Свойство <paramref name="s" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="02b23-871"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="02b23-872">Параметр <paramref name="index" /> имеет значение меньше нуля или больше последней позиции в <paramref name="s" />.</span><span class="sxs-lookup"><span data-stu-id="02b23-872"><paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />.</span></span></exception>
        <altmember cref="Overload:System.Char.IsHighSurrogate" />
        <altmember cref="Overload:System.Char.IsLowSurrogate" />
        <altmember cref="Overload:System.Char.IsSurrogatePair" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsSurrogatePair">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="02b23-873">Определяет, образуют ли два заданных объекта <see cref="T:System.Char" /> суррогатную пару.</span><span class="sxs-lookup"><span data-stu-id="02b23-873">Indicates whether two specified <see cref="T:System.Char" /> objects form a surrogate pair.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsSurrogatePair">
      <MemberSignature Language="C#" Value="public static bool IsSurrogatePair (char highSurrogate, char lowSurrogate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsSurrogatePair(char highSurrogate, char lowSurrogate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsSurrogatePair(System.Char,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsSurrogatePair (highSurrogate As Char, lowSurrogate As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsSurrogatePair(char highSurrogate, char lowSurrogate);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="highSurrogate" Type="System.Char" />
        <Parameter Name="lowSurrogate" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="highSurrogate"><span data-ttu-id="02b23-874">Символ, который необходимо вычислить в качестве старшего знака-заменителя в паре.</span><span class="sxs-lookup"><span data-stu-id="02b23-874">The character to evaluate as the high surrogate of a surrogate pair.</span></span></param>
        <param name="lowSurrogate"><span data-ttu-id="02b23-875">Символ, который необходимо вычислить в качестве младшего знака-заменителя в паре.</span><span class="sxs-lookup"><span data-stu-id="02b23-875">The character to evaluate as the low surrogate of a surrogate pair.</span></span></param>
        <summary><span data-ttu-id="02b23-876">Определяет, образуют ли два заданных объекта <see cref="T:System.Char" /> суррогатную пару.</span><span class="sxs-lookup"><span data-stu-id="02b23-876">Indicates whether the two specified <see cref="T:System.Char" /> objects form a surrogate pair.</span></span></summary>
        <returns>
          <span data-ttu-id="02b23-877">Значение <see langword="true" />, если числовое значение параметра <paramref name="highSurrogate" /> лежит в диапазоне от U+D800 до U+DBFF, а числовое значение параметра <paramref name="lowSurrogate" /> лежит в диапазоне от U+DC00 до U+DFFF; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="02b23-877"><see langword="true" /> if the numeric value of the <paramref name="highSurrogate" /> parameter ranges from U+D800 through U+DBFF, and the numeric value of the <paramref name="lowSurrogate" /> parameter ranges from U+DC00 through U+DFFF; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02b23-878">Как правило один символ представляется одной единицы кода Юникод 16-разрядное.</span><span class="sxs-lookup"><span data-stu-id="02b23-878">Ordinarily, a single character is represented by a single 16-bit Unicode code unit.</span></span> <span data-ttu-id="02b23-879">Кодировка UTF-16 также поддерживает суррогатные пары, которые позволяют один абстрактный символ в виде на две единицы, 16-разрядного кода.</span><span class="sxs-lookup"><span data-stu-id="02b23-879">UTF-16 encoding also supports surrogate pairs, which allow a single abstract character to be represented by two 16-bit code units.</span></span> <span data-ttu-id="02b23-880">Первый модуль кода, значение которого находится в диапазоне от U + D800 до U + DBFF, является старшим символом-заместителем.</span><span class="sxs-lookup"><span data-stu-id="02b23-880">The first code unit, whose value can range from U+D800 to U+DBFF, is the high surrogate.</span></span> <span data-ttu-id="02b23-881">Второй модуль кода, значение которого находится в диапазоне от U + DC00 до U + DFFF, является младшим символом-заместителем.</span><span class="sxs-lookup"><span data-stu-id="02b23-881">The second code unit, whose value can range from U+DC00 to U+DFFF, is the low surrogate.</span></span> <span data-ttu-id="02b23-882">Отдельные замещающих кодовых точек имеют собственные без интерпретации.</span><span class="sxs-lookup"><span data-stu-id="02b23-882">Individual surrogate code points have no interpretation of their own.</span></span> <span data-ttu-id="02b23-883">Дополнительные сведения о суррогаты и стандарт Юникод см. в разделе [домашней странице Юникода](http://go.microsoft.com/fwlink/?LinkId=37123).</span><span class="sxs-lookup"><span data-stu-id="02b23-883">For more information about surrogates and the Unicode Standard, see the [Unicode home page](http://go.microsoft.com/fwlink/?LinkId=37123).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="02b23-884">В следующем примере кода показано <xref:System.Char.IsHighSurrogate%2A>, <xref:System.Char.IsLowSurrogate%2A>, и <xref:System.Char.IsSurrogatePair%2A> методы.</span><span class="sxs-lookup"><span data-stu-id="02b23-884">The following code example demonstrates the <xref:System.Char.IsHighSurrogate%2A>, <xref:System.Char.IsLowSurrogate%2A>, and <xref:System.Char.IsSurrogatePair%2A> methods.</span></span>  
  
 [!code-cpp[char.surrogate#1](~/samples/snippets/cpp/VS_Snippets_CLR/char.surrogate/CPP/sur.cpp#1)]
 [!code-csharp[char.surrogate#1](~/samples/snippets/csharp/VS_Snippets_CLR/char.surrogate/CS/sur.cs#1)]
 [!code-vb[char.surrogate#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/char.surrogate/VB/sur.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Char.IsHighSurrogate(System.Char)" />
        <altmember cref="M:System.Char.IsLowSurrogate(System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="IsSurrogatePair">
      <MemberSignature Language="C#" Value="public static bool IsSurrogatePair (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsSurrogatePair(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsSurrogatePair(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsSurrogatePair (s As String, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsSurrogatePair(System::String ^ s, int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="02b23-885">Строка.</span><span class="sxs-lookup"><span data-stu-id="02b23-885">A string.</span></span></param>
        <param name="index"><span data-ttu-id="02b23-886">Начальная позиция пары символов, которые необходимо вычислить, в <c>s</c>.</span><span class="sxs-lookup"><span data-stu-id="02b23-886">The starting position of the pair of characters to evaluate within <c>s</c>.</span></span></param>
        <summary><span data-ttu-id="02b23-887">Определяет, образуют ли два смежных объекта <see cref="T:System.Char" /> в заданной позиции в строке суррогатную пару.</span><span class="sxs-lookup"><span data-stu-id="02b23-887">Indicates whether two adjacent <see cref="T:System.Char" /> objects at a specified position in a string form a surrogate pair.</span></span></summary>
        <returns>
          <span data-ttu-id="02b23-888">Значение <see langword="true" />, если параметр <paramref name="s" /> включает соседние знаки в позициях <paramref name="index" /> и <paramref name="index" /> + 1, числовое значение знака в позиции <paramref name="index" /> лежит в диапазоне от U+D800 до U+DBFF и числовое значение знака в позиции <paramref name="index" /> +1 лежит в диапазоне от U+DC00 до U+DFFF; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="02b23-888"><see langword="true" /> if the <paramref name="s" /> parameter includes adjacent characters at positions <paramref name="index" /> and <paramref name="index" /> + 1, and the numeric value of the character at position <paramref name="index" /> ranges from U+D800 through U+DBFF, and the numeric value of the character at position <paramref name="index" />+1 ranges from U+DC00 through U+DFFF; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02b23-889">Как правило один символ представляется одной единицы кода Юникод 16-разрядное.</span><span class="sxs-lookup"><span data-stu-id="02b23-889">Ordinarily, a single character is represented by a single 16-bit Unicode code unit.</span></span> <span data-ttu-id="02b23-890">Кодировка UTF-16 также поддерживает суррогатные пары, которые позволяют один абстрактный символ в виде на две единицы, 16-разрядного кода.</span><span class="sxs-lookup"><span data-stu-id="02b23-890">UTF-16 encoding also supports surrogate pairs, which allow a single abstract character to be represented by two 16-bit code units.</span></span> <span data-ttu-id="02b23-891">Первый модуль кода, значение которого находится в диапазоне от U + D800 до U + DBFF, является старшим символом-заместителем.</span><span class="sxs-lookup"><span data-stu-id="02b23-891">The first code unit, whose value can range from U+D800 to U+DBFF, is the high surrogate.</span></span> <span data-ttu-id="02b23-892">Второй модуль кода, значение которого находится в диапазоне от U + DC00 до U + DFFF, является младшим символом-заместителем.</span><span class="sxs-lookup"><span data-stu-id="02b23-892">The second code unit, whose value can range from U+DC00 to U+DFFF, is the low surrogate.</span></span> <span data-ttu-id="02b23-893">Отдельные замещающих кодовых точек имеют собственные без интерпретации.</span><span class="sxs-lookup"><span data-stu-id="02b23-893">Individual surrogate code points have no interpretation of their own.</span></span> <span data-ttu-id="02b23-894">Дополнительные сведения о суррогаты и стандарт Юникод см. в разделе [домашней странице Юникода](http://go.microsoft.com/fwlink/?LinkId=37123).</span><span class="sxs-lookup"><span data-stu-id="02b23-894">For more information about surrogates and the Unicode Standard, see the [Unicode home page](http://go.microsoft.com/fwlink/?LinkId=37123).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="02b23-895">В следующем примере кода показано <xref:System.Char.IsHighSurrogate%2A>, <xref:System.Char.IsLowSurrogate%2A>, и <xref:System.Char.IsSurrogatePair%2A> методы.</span><span class="sxs-lookup"><span data-stu-id="02b23-895">The following code example demonstrates the <xref:System.Char.IsHighSurrogate%2A>, <xref:System.Char.IsLowSurrogate%2A>, and <xref:System.Char.IsSurrogatePair%2A> methods.</span></span>  
  
 [!code-cpp[char.surrogate#1](~/samples/snippets/cpp/VS_Snippets_CLR/char.surrogate/CPP/sur.cpp#1)]
 [!code-csharp[char.surrogate#1](~/samples/snippets/csharp/VS_Snippets_CLR/char.surrogate/CS/sur.cs#1)]
 [!code-vb[char.surrogate#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/char.surrogate/VB/sur.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="02b23-896">Свойство <paramref name="s" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="02b23-896"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="02b23-897"><paramref name="index" /> не является позицией в <paramref name="s" />.</span><span class="sxs-lookup"><span data-stu-id="02b23-897"><paramref name="index" /> is not a position within <paramref name="s" />.</span></span></exception>
        <altmember cref="M:System.Char.IsHighSurrogate(System.Char)" />
        <altmember cref="M:System.Char.IsLowSurrogate(System.Char)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsSymbol">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="02b23-898">Показывает, относится ли символ Юникода к категории символьных знаков.</span><span class="sxs-lookup"><span data-stu-id="02b23-898">Indicates whether a Unicode character is categorized as a symbol character.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02b23-899">Допустимые символы являются членами следующих категорий в <xref:System.Globalization.UnicodeCategory>: `MathSymbol`, `CurrencySymbol`, `ModifierSymbol`, и `OtherSymbol`.</span><span class="sxs-lookup"><span data-stu-id="02b23-899">Valid symbols are members of the following categories in <xref:System.Globalization.UnicodeCategory>: `MathSymbol`, `CurrencySymbol`, `ModifierSymbol`, and `OtherSymbol`.</span></span>  
  
 <span data-ttu-id="02b23-900">Символы в стандарте Юникод — это широко определенный набор символов, включая следующие:</span><span class="sxs-lookup"><span data-stu-id="02b23-900">Symbols in the Unicode standard are a loosely defined set of characters that include the following:</span></span>  
  
-   <span data-ttu-id="02b23-901">Символы валют.</span><span class="sxs-lookup"><span data-stu-id="02b23-901">Currency symbols.</span></span>  
  
-   <span data-ttu-id="02b23-902">Буквенные символы, которые включают набор математических буквенно-цифровых символов, а также символы, такие как похожие № и™.</span><span class="sxs-lookup"><span data-stu-id="02b23-902">Letterlike symbols, which include a set of mathematical alphanumeric symbols as well as symbols such as ℅, №, and ™.</span></span>  
  
-   <span data-ttu-id="02b23-903">Число форм, таких как верхние и нижние индексы.</span><span class="sxs-lookup"><span data-stu-id="02b23-903">Number forms, such as subscripts and superscripts.</span></span>  
  
-   <span data-ttu-id="02b23-904">Математические операторы и стрелки.</span><span class="sxs-lookup"><span data-stu-id="02b23-904">Mathematical operators and arrows.</span></span>  
  
-   <span data-ttu-id="02b23-905">Геометрические символы.</span><span class="sxs-lookup"><span data-stu-id="02b23-905">Geometric symbols.</span></span>  
  
-   <span data-ttu-id="02b23-906">Технические символы.</span><span class="sxs-lookup"><span data-stu-id="02b23-906">Technical symbols.</span></span>  
  
-   <span data-ttu-id="02b23-907">Брайля.</span><span class="sxs-lookup"><span data-stu-id="02b23-907">Braille patterns.</span></span>  
  
-   <span data-ttu-id="02b23-908">Графические метки.</span><span class="sxs-lookup"><span data-stu-id="02b23-908">Dingbats.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsSymbol">
      <MemberSignature Language="C#" Value="public static bool IsSymbol (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsSymbol(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsSymbol(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsSymbol (c As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsSymbol(char c);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c"><span data-ttu-id="02b23-909">Знак Юникода, который необходимо вычислить.</span><span class="sxs-lookup"><span data-stu-id="02b23-909">The Unicode character to evaluate.</span></span></param>
        <summary><span data-ttu-id="02b23-910">Показывает, относится ли указанный символ Юникода к категории символьных знаков.</span><span class="sxs-lookup"><span data-stu-id="02b23-910">Indicates whether the specified Unicode character is categorized as a symbol character.</span></span></summary>
        <returns>
          <span data-ttu-id="02b23-911"><see langword="true" />, если <paramref name="c" /> является символьным знаком; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="02b23-911"><see langword="true" /> if <paramref name="c" /> is a symbol character; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02b23-912">Допустимые символы являются членами следующих категорий в <xref:System.Globalization.UnicodeCategory>: `MathSymbol`, `CurrencySymbol`, `ModifierSymbol`, и `OtherSymbol`.</span><span class="sxs-lookup"><span data-stu-id="02b23-912">Valid symbols are members of the following categories in <xref:System.Globalization.UnicodeCategory>: `MathSymbol`, `CurrencySymbol`, `ModifierSymbol`, and `OtherSymbol`.</span></span>  
  
 <span data-ttu-id="02b23-913">Символы в стандарте Юникод — это широко определенный набор символов, включая следующие:</span><span class="sxs-lookup"><span data-stu-id="02b23-913">Symbols in the Unicode standard are a loosely defined set of characters that include the following:</span></span>  
  
-   <span data-ttu-id="02b23-914">Символы валют.</span><span class="sxs-lookup"><span data-stu-id="02b23-914">Currency symbols.</span></span>  
  
-   <span data-ttu-id="02b23-915">Буквенные символы, которые включают набор математических буквенно-цифровых символов, а также символы, такие как похожие № и™.</span><span class="sxs-lookup"><span data-stu-id="02b23-915">Letterlike symbols, which include a set of mathematical alphanumeric symbols as well as symbols such as ℅, №, and ™.</span></span>  
  
-   <span data-ttu-id="02b23-916">Число форм, таких как верхние и нижние индексы.</span><span class="sxs-lookup"><span data-stu-id="02b23-916">Number forms, such as subscripts and superscripts.</span></span>  
  
-   <span data-ttu-id="02b23-917">Математические операторы и стрелки.</span><span class="sxs-lookup"><span data-stu-id="02b23-917">Mathematical operators and arrows.</span></span>  
  
-   <span data-ttu-id="02b23-918">Геометрические символы.</span><span class="sxs-lookup"><span data-stu-id="02b23-918">Geometric symbols.</span></span>  
  
-   <span data-ttu-id="02b23-919">Технические символы.</span><span class="sxs-lookup"><span data-stu-id="02b23-919">Technical symbols.</span></span>  
  
-   <span data-ttu-id="02b23-920">Брайля.</span><span class="sxs-lookup"><span data-stu-id="02b23-920">Braille patterns.</span></span>  
  
-   <span data-ttu-id="02b23-921">Графические метки.</span><span class="sxs-lookup"><span data-stu-id="02b23-921">Dingbats.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="02b23-922">В следующем примере кода показано <xref:System.Char.IsSymbol%2A>.</span><span class="sxs-lookup"><span data-stu-id="02b23-922">The following code example demonstrates <xref:System.Char.IsSymbol%2A>.</span></span>  
  
 [!code-cpp[System.Char.IsSymbol#12](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsSymbol/CPP/issymbol.cpp#12)]
 [!code-csharp[System.Char.IsSymbol#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsSymbol/CS/issymbol.cs#12)]
 [!code-vb[System.Char.IsSymbol#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsSymbol/VB/issymbol.vb#12)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Boolean" />
      </Docs>
    </Member>
    <Member MemberName="IsSymbol">
      <MemberSignature Language="C#" Value="public static bool IsSymbol (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsSymbol(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsSymbol(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsSymbol (s As String, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsSymbol(System::String ^ s, int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="02b23-923">Строка.</span><span class="sxs-lookup"><span data-stu-id="02b23-923">A string.</span></span></param>
        <param name="index"><span data-ttu-id="02b23-924">Позиция символа, который необходимо вычислить, в <c>s</c>.</span><span class="sxs-lookup"><span data-stu-id="02b23-924">The position of the character to evaluate in <c>s</c>.</span></span></param>
        <summary><span data-ttu-id="02b23-925">Показывает, относится ли указанный символ в указанной позиции в указанной строке к категории символьных знаков.</span><span class="sxs-lookup"><span data-stu-id="02b23-925">Indicates whether the character at the specified position in a specified string is categorized as a symbol character.</span></span></summary>
        <returns>
          <span data-ttu-id="02b23-926"><see langword="true" />, если символ в позиции <paramref name="index" /> в <paramref name="s" /> является символьным знаком; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="02b23-926"><see langword="true" /> if the character at position <paramref name="index" /> in <paramref name="s" /> is a symbol character; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02b23-927">Позиций символов в строке индексируются, начиная с нуля.</span><span class="sxs-lookup"><span data-stu-id="02b23-927">Character positions in a string are indexed starting from zero.</span></span>  
  
 <span data-ttu-id="02b23-928">Допустимые символы являются членами следующих категорий в <xref:System.Globalization.UnicodeCategory?displayProperty=nameWithType>: `MathSymbol`, `CurrencySymbol`, `ModifierSymbol`, и `OtherSymbol`.</span><span class="sxs-lookup"><span data-stu-id="02b23-928">Valid symbols are members of the following categories in <xref:System.Globalization.UnicodeCategory?displayProperty=nameWithType>: `MathSymbol`, `CurrencySymbol`, `ModifierSymbol`, and `OtherSymbol`.</span></span>  
  
 <span data-ttu-id="02b23-929">Символы в стандарте Юникод — это широко определенный набор символов, включая следующие:</span><span class="sxs-lookup"><span data-stu-id="02b23-929">Symbols in the Unicode standard are a loosely defined set of characters that include the following:</span></span>  
  
-   <span data-ttu-id="02b23-930">Символы валют.</span><span class="sxs-lookup"><span data-stu-id="02b23-930">Currency symbols.</span></span>  
  
-   <span data-ttu-id="02b23-931">Буквенные символы, которые включают набор математических буквенно-цифровых символов, а также символы, такие как похожие № и™.</span><span class="sxs-lookup"><span data-stu-id="02b23-931">Letterlike symbols, which include a set of mathematical alphanumeric symbols as well as symbols such as ℅, №, and ™.</span></span>  
  
-   <span data-ttu-id="02b23-932">Число форм, таких как верхние и нижние индексы.</span><span class="sxs-lookup"><span data-stu-id="02b23-932">Number forms, such as subscripts and superscripts.</span></span>  
  
-   <span data-ttu-id="02b23-933">Математические операторы и стрелки.</span><span class="sxs-lookup"><span data-stu-id="02b23-933">Mathematical operators and arrows.</span></span>  
  
-   <span data-ttu-id="02b23-934">Геометрические символы.</span><span class="sxs-lookup"><span data-stu-id="02b23-934">Geometric symbols.</span></span>  
  
-   <span data-ttu-id="02b23-935">Технические символы.</span><span class="sxs-lookup"><span data-stu-id="02b23-935">Technical symbols.</span></span>  
  
-   <span data-ttu-id="02b23-936">Брайля.</span><span class="sxs-lookup"><span data-stu-id="02b23-936">Braille patterns.</span></span>  
  
-   <span data-ttu-id="02b23-937">Графические метки.</span><span class="sxs-lookup"><span data-stu-id="02b23-937">Dingbats.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="02b23-938">В следующем примере кода показано <xref:System.Char.IsSymbol%2A>.</span><span class="sxs-lookup"><span data-stu-id="02b23-938">The following code example demonstrates <xref:System.Char.IsSymbol%2A>.</span></span>  
  
 [!code-cpp[System.Char.IsSymbol#12](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsSymbol/CPP/issymbol.cpp#12)]
 [!code-csharp[System.Char.IsSymbol#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsSymbol/CS/issymbol.cs#12)]
 [!code-vb[System.Char.IsSymbol#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsSymbol/VB/issymbol.vb#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="02b23-939">Свойство <paramref name="s" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="02b23-939"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="02b23-940">Параметр <paramref name="index" /> имеет значение меньше нуля или больше последней позиции в <paramref name="s" />.</span><span class="sxs-lookup"><span data-stu-id="02b23-940"><paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />.</span></span></exception>
        <altmember cref="T:System.Boolean" />
        <altmember cref="T:System.String" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsUpper">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="02b23-941">Показывает, относится ли символ Юникода к категории букв верхнего регистра.</span><span class="sxs-lookup"><span data-stu-id="02b23-941">Indicates whether a Unicode character is categorized as an uppercase letter.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsUpper">
      <MemberSignature Language="C#" Value="public static bool IsUpper (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsUpper(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsUpper(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsUpper (c As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsUpper(char c);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c"><span data-ttu-id="02b23-942">Знак Юникода, который необходимо вычислить.</span><span class="sxs-lookup"><span data-stu-id="02b23-942">The Unicode character to evaluate.</span></span></param>
        <summary><span data-ttu-id="02b23-943">Показывает, относится ли указанный символ Юникода к категории букв верхнего регистра.</span><span class="sxs-lookup"><span data-stu-id="02b23-943">Indicates whether the specified Unicode character is categorized as an uppercase letter.</span></span></summary>
        <returns>
          <span data-ttu-id="02b23-944">Значение <see langword="true" />, если <paramref name="c" /> является буквой верхнего регистра; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="02b23-944"><see langword="true" /> if <paramref name="c" /> is an uppercase letter; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02b23-945">Допустимые буквы верхнего регистра являются членами следующей категории в <xref:System.Globalization.UnicodeCategory>: `UppercaseLetter`.</span><span class="sxs-lookup"><span data-stu-id="02b23-945">Valid uppercase letters are members of the following category in <xref:System.Globalization.UnicodeCategory>: `UppercaseLetter`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Boolean" />
        <altmember cref="M:System.Char.IsLower(System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="IsUpper">
      <MemberSignature Language="C#" Value="public static bool IsUpper (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsUpper(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsUpper(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsUpper (s As String, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsUpper(System::String ^ s, int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="02b23-946">Строка.</span><span class="sxs-lookup"><span data-stu-id="02b23-946">A string.</span></span></param>
        <param name="index"><span data-ttu-id="02b23-947">Позиция символа, который необходимо вычислить, в <c>s</c>.</span><span class="sxs-lookup"><span data-stu-id="02b23-947">The position of the character to evaluate in <c>s</c>.</span></span></param>
        <summary><span data-ttu-id="02b23-948">Показывает, относится ли указанный символ в указанной позиции в указанной строке к категории букв верхнего регистра.</span><span class="sxs-lookup"><span data-stu-id="02b23-948">Indicates whether the character at the specified position in a specified string is categorized as an uppercase letter.</span></span></summary>
        <returns>
          <span data-ttu-id="02b23-949"><see langword="true" />, если сивел в позиции <paramref name="index" /> в <paramref name="s" /> является буквой верхнего регистра; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="02b23-949"><see langword="true" /> if the character at position <paramref name="index" /> in <paramref name="s" /> is an uppercase letter; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02b23-950">Позиций символов в строке индексируются, начиная с нуля.</span><span class="sxs-lookup"><span data-stu-id="02b23-950">Character positions in a string are indexed starting from zero.</span></span>  
  
 <span data-ttu-id="02b23-951">Допустимые буквы верхнего регистра являются членами следующей категории в <xref:System.Globalization.UnicodeCategory>: `UppercaseLetter`.</span><span class="sxs-lookup"><span data-stu-id="02b23-951">Valid uppercase letters are members of the following category in <xref:System.Globalization.UnicodeCategory>: `UppercaseLetter`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="02b23-952">Свойство <paramref name="s" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="02b23-952"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="02b23-953">Параметр <paramref name="index" /> имеет значение меньше нуля или больше последней позиции в <paramref name="s" />.</span><span class="sxs-lookup"><span data-stu-id="02b23-953"><paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />.</span></span></exception>
        <altmember cref="T:System.Boolean" />
        <altmember cref="T:System.String" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsWhiteSpace">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="02b23-954">Показывает, относится ли символ Юникода к категории пробелов.</span><span class="sxs-lookup"><span data-stu-id="02b23-954">Indicates whether a Unicode character is categorized as white space.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02b23-955">Пробелами являются следующие символы Юникода:</span><span class="sxs-lookup"><span data-stu-id="02b23-955">White space characters are the following Unicode characters:</span></span>  
  
-   <span data-ttu-id="02b23-956">Члены <xref:System.Globalization.UnicodeCategory.SpaceSeparator> категорию, которая включает в себя знаки ПРОБЕЛА (U + 0020), Огамическое ПИСЬМО ПРОСТРАНСТВА ПОМЕТЬТЕ (U + 1680), EN QUAD (U + 2000), EM QUAD (U + 2001 г.), EN пробел (U + 2002), EM ПРОСТРАНСТВА (U + 2003), ТРЕХ каждого ШПАЦИИ (U + 2004 г.), ЧЕТЫРЕХ каждого ШПАЦИИ (U + 2005), ШЕСТИ каждого EM ПРОБЕЛ (U + 2006 г.), РИСУНОК ПРОСТРАНСТВА (U + 2007), знаки ПРЕПИНАНИЯ ТОНКАЯ пробел (U + 2008), пробел (U + 2009 г.), ПЕРЕКРЕСТИЕМ пробел (U + 200A), УЗКИХ неразрывный пробел (U + 202F), средний МАТЕМАТИЧЕСКИХ пробел (U + 205F) и ИДЕОГРАФИЧЕСКИЙ пробел (U + 3000).</span><span class="sxs-lookup"><span data-stu-id="02b23-956">Members of the <xref:System.Globalization.UnicodeCategory.SpaceSeparator> category, which includes the characters SPACE (U+0020), OGHAM SPACE MARK (U+1680), EN QUAD (U+2000), EM QUAD (U+2001), EN SPACE (U+2002), EM SPACE (U+2003), THREE-PER-EM SPACE (U+2004), FOUR-PER-EM SPACE (U+2005), SIX-PER-EM SPACE (U+2006), FIGURE SPACE (U+2007), PUNCTUATION SPACE (U+2008), THIN SPACE (U+2009), HAIR SPACE (U+200A), NARROW NO-BREAK SPACE (U+202F), MEDIUM MATHEMATICAL SPACE (U+205F), and IDEOGRAPHIC SPACE (U+3000).</span></span>  
  
-   <span data-ttu-id="02b23-957">Члены <xref:System.Globalization.UnicodeCategory.LineSeparator> категорию, которая состоит только из символ РАЗДЕЛИТЕЛЯ СТРОК (U + 2028).</span><span class="sxs-lookup"><span data-stu-id="02b23-957">Members of the <xref:System.Globalization.UnicodeCategory.LineSeparator> category, which consists solely of the LINE SEPARATOR character (U+2028).</span></span>  
  
-   <span data-ttu-id="02b23-958">Члены <xref:System.Globalization.UnicodeCategory.ParagraphSeparator> категорию, которая состоит только из символ-РАЗДЕЛИТЕЛЬ АБЗАЦЕВ (U + 2029).</span><span class="sxs-lookup"><span data-stu-id="02b23-958">Members of the <xref:System.Globalization.UnicodeCategory.ParagraphSeparator> category, which consists solely of the PARAGRAPH SEPARATOR character (U+2029).</span></span>  
  
-   <span data-ttu-id="02b23-959">Символы горизонтальная табуляция (U + 0009), перевод строки (U + 000A), вертикальная табуляция (U + 000B), перевод страницы (U + 000C), возврат каретки (U + 000D), следующая строка (U + 0085) и неразрывный пробел (U + 00A0).</span><span class="sxs-lookup"><span data-stu-id="02b23-959">The characters CHARACTER TABULATION (U+0009), LINE FEED (U+000A), LINE TABULATION (U+000B), FORM FEED (U+000C), CARRIAGE RETURN (U+000D), NEXT LINE (U+0085), and NO-BREAK SPACE (U+00A0).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsWhiteSpace">
      <MemberSignature Language="C#" Value="public static bool IsWhiteSpace (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsWhiteSpace(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsWhiteSpace(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsWhiteSpace (c As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsWhiteSpace(char c);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c"><span data-ttu-id="02b23-960">Знак Юникода, который необходимо вычислить.</span><span class="sxs-lookup"><span data-stu-id="02b23-960">The Unicode character to evaluate.</span></span></param>
        <summary><span data-ttu-id="02b23-961">Показывает, относится ли указанный символ Юникода к категории пробелов.</span><span class="sxs-lookup"><span data-stu-id="02b23-961">Indicates whether the specified Unicode character is categorized as white space.</span></span></summary>
        <returns>
          <span data-ttu-id="02b23-962">Значение <see langword="true" />, если <paramref name="c" /> является пробелом; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="02b23-962"><see langword="true" /> if <paramref name="c" /> is white space; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02b23-963">Пробелами являются следующие символы Юникода:</span><span class="sxs-lookup"><span data-stu-id="02b23-963">White space characters are the following Unicode characters:</span></span>  
  
-   <span data-ttu-id="02b23-964">Члены <xref:System.Globalization.UnicodeCategory.SpaceSeparator> категорию, которая включает символы ПРОСТРАНСТВА (U + 0020) неразрывный пробел (U + 00A0), ПОМЕТЬТЕ ПРОСТРАНСТВА Огамическое ПИСЬМО (U + 1680), EN QUAD (U + 2000), EM QUAD (U + 2001 г.), EN пробел (U + 2002), EM ПРОСТРАНСТВА (U + 2003), ТРИ на ШПАЦИИ (U + 2004 г.), (ЧЕТЫРЕ на ШПАЦИИ U+ 2005), ШЕСТИ каждого ШПАЦИИ (U + 2006 г.), РИСУНОК ПРОСТРАНСТВА (U + 2007), знаки ПУНКТУАЦИИ ТОНКАЯ пробел (U + 2008), пробел (U + 2009 г.), ПЕРЕКРЕСТИЕМ пробел (U + 200A), УЗКИХ неразрывный пробел (U + 202F), средний МАТЕМАТИЧЕСКИХ пробел (U + 205F) и ИДЕОГРАФИЧЕСКИЙ пробел (U + 3000).</span><span class="sxs-lookup"><span data-stu-id="02b23-964">Members of the <xref:System.Globalization.UnicodeCategory.SpaceSeparator> category, which includes the characters SPACE (U+0020), NO-BREAK SPACE (U+00A0), OGHAM SPACE MARK (U+1680), EN QUAD (U+2000), EM QUAD (U+2001), EN SPACE (U+2002), EM SPACE (U+2003), THREE-PER-EM SPACE (U+2004), FOUR-PER-EM SPACE (U+2005), SIX-PER-EM SPACE (U+2006), FIGURE SPACE (U+2007), PUNCTUATION SPACE (U+2008), THIN SPACE (U+2009), HAIR SPACE (U+200A), NARROW NO-BREAK SPACE (U+202F), MEDIUM MATHEMATICAL SPACE (U+205F), and IDEOGRAPHIC SPACE (U+3000).</span></span>  
  
-   <span data-ttu-id="02b23-965">Члены <xref:System.Globalization.UnicodeCategory.LineSeparator> категорию, которая состоит только из символ РАЗДЕЛИТЕЛЯ СТРОК (U + 2028).</span><span class="sxs-lookup"><span data-stu-id="02b23-965">Members of the <xref:System.Globalization.UnicodeCategory.LineSeparator> category, which consists solely of the LINE SEPARATOR character (U+2028).</span></span>  
  
-   <span data-ttu-id="02b23-966">Члены <xref:System.Globalization.UnicodeCategory.ParagraphSeparator> категорию, которая состоит только из символ-РАЗДЕЛИТЕЛЬ АБЗАЦЕВ (U + 2029).</span><span class="sxs-lookup"><span data-stu-id="02b23-966">Members of the <xref:System.Globalization.UnicodeCategory.ParagraphSeparator> category, which consists solely of the PARAGRAPH SEPARATOR character (U+2029).</span></span>  
  
-   <span data-ttu-id="02b23-967">Символы горизонтальная табуляция (U + 0009), строка веб-КАНАЛА (U + 000A), вертикальная табуляция (U + 000B), перевод страницы (U + 000C), возврат каретки (U + 000D), а следующая строка (U + 0085).</span><span class="sxs-lookup"><span data-stu-id="02b23-967">The characters CHARACTER TABULATION (U+0009), LINE FEED (U+000A), LINE TABULATION (U+000B), FORM FEED (U+000C), CARRIAGE RETURN (U+000D), and NEXT LINE (U+0085).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="02b23-968">В следующем примере демонстрируется <xref:System.Char.IsWhiteSpace%28System.Char%29> метод.</span><span class="sxs-lookup"><span data-stu-id="02b23-968">The following example demonstrates the <xref:System.Char.IsWhiteSpace%28System.Char%29> method.</span></span>  
  
 [!code-cpp[System.Char.IsWhiteSpace#14](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsWhiteSpace/CPP/iswhitespace.cpp#14)]
 [!code-csharp[System.Char.IsWhiteSpace#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsWhiteSpace/CS/iswhitespace.cs#14)]
 [!code-vb[System.Char.IsWhiteSpace#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsWhiteSpace/VB/iswhitespace.vb#14)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Boolean" />
        <altmember cref="T:System.Globalization.UnicodeCategory" />
      </Docs>
    </Member>
    <Member MemberName="IsWhiteSpace">
      <MemberSignature Language="C#" Value="public static bool IsWhiteSpace (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsWhiteSpace(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsWhiteSpace(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsWhiteSpace (s As String, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsWhiteSpace(System::String ^ s, int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="02b23-969">Строка.</span><span class="sxs-lookup"><span data-stu-id="02b23-969">A string.</span></span></param>
        <param name="index"><span data-ttu-id="02b23-970">Позиция символа, который необходимо вычислить, в <c>s</c>.</span><span class="sxs-lookup"><span data-stu-id="02b23-970">The position of the character to evaluate in <c>s</c>.</span></span></param>
        <summary><span data-ttu-id="02b23-971">Показывает, относится ли указанный символ в указанной позиции в указанной строке к категории пробелов.</span><span class="sxs-lookup"><span data-stu-id="02b23-971">Indicates whether the character at the specified position in a specified string is categorized as white space.</span></span></summary>
        <returns>
          <span data-ttu-id="02b23-972"><see langword="true" />, если символ в позиции <paramref name="index" /> в <paramref name="s" /> является пробелом; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="02b23-972"><see langword="true" /> if the character at position <paramref name="index" /> in <paramref name="s" /> is white space; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02b23-973">Позиций символов в строке индексируются, начиная с нуля.</span><span class="sxs-lookup"><span data-stu-id="02b23-973">Character positions in a string are indexed starting from zero.</span></span>  
  
 <span data-ttu-id="02b23-974">Пробелами являются следующие символы Юникода:</span><span class="sxs-lookup"><span data-stu-id="02b23-974">White space characters are the following Unicode characters:</span></span>  
  
-   <span data-ttu-id="02b23-975">Члены <xref:System.Globalization.UnicodeCategory.SpaceSeparator> категорию, которая включает символы ПРОСТРАНСТВА (U + 0020) неразрывный пробел (U + 00A0), ПОМЕТЬТЕ ПРОСТРАНСТВА Огамическое ПИСЬМО (U + 1680), EN QUAD (U + 2000), EM QUAD (U + 2001 г.), EN пробел (U + 2002), EM ПРОСТРАНСТВА (U + 2003), ТРИ на ШПАЦИИ (U + 2004 г.), (ЧЕТЫРЕ на ШПАЦИИ U+ 2005), ШЕСТИ каждого ШПАЦИИ (U + 2006 г.), РИСУНОК ПРОСТРАНСТВА (U + 2007), знаки ПУНКТУАЦИИ ТОНКАЯ пробел (U + 2008), пробел (U + 2009 г.), ПЕРЕКРЕСТИЕМ пробел (U + 200A), УЗКИХ неразрывный пробел (U + 202F), средний МАТЕМАТИЧЕСКИХ пробел (U + 205F) и ИДЕОГРАФИЧЕСКИЙ пробел (U + 3000).</span><span class="sxs-lookup"><span data-stu-id="02b23-975">Members of the <xref:System.Globalization.UnicodeCategory.SpaceSeparator> category, which includes the characters SPACE (U+0020), NO-BREAK SPACE (U+00A0), OGHAM SPACE MARK (U+1680), EN QUAD (U+2000), EM QUAD (U+2001), EN SPACE (U+2002), EM SPACE (U+2003), THREE-PER-EM SPACE (U+2004), FOUR-PER-EM SPACE (U+2005), SIX-PER-EM SPACE (U+2006), FIGURE SPACE (U+2007), PUNCTUATION SPACE (U+2008), THIN SPACE (U+2009), HAIR SPACE (U+200A), NARROW NO-BREAK SPACE (U+202F), MEDIUM MATHEMATICAL SPACE (U+205F), and IDEOGRAPHIC SPACE (U+3000).</span></span>  
  
-   <span data-ttu-id="02b23-976">Члены <xref:System.Globalization.UnicodeCategory.LineSeparator> категорию, которая состоит только из символ РАЗДЕЛИТЕЛЯ СТРОК (U + 2028).</span><span class="sxs-lookup"><span data-stu-id="02b23-976">Members of the <xref:System.Globalization.UnicodeCategory.LineSeparator> category, which consists solely of the LINE SEPARATOR character (U+2028).</span></span>  
  
-   <span data-ttu-id="02b23-977">Члены <xref:System.Globalization.UnicodeCategory.ParagraphSeparator> категорию, которая состоит только из символ-РАЗДЕЛИТЕЛЬ АБЗАЦЕВ (U + 2029).</span><span class="sxs-lookup"><span data-stu-id="02b23-977">Members of the <xref:System.Globalization.UnicodeCategory.ParagraphSeparator> category, which consists solely of the PARAGRAPH SEPARATOR character (U+2029).</span></span>  
  
-   <span data-ttu-id="02b23-978">Символы горизонтальная табуляция (U + 0009), строка веб-КАНАЛА (U + 000A), вертикальная табуляция (U + 000B), перевод страницы (U + 000C), возврат каретки (U + 000D), а следующая строка (U + 0085).</span><span class="sxs-lookup"><span data-stu-id="02b23-978">The characters CHARACTER TABULATION (U+0009), LINE FEED (U+000A), LINE TABULATION (U+000B), FORM FEED (U+000C), CARRIAGE RETURN (U+000D), and NEXT LINE (U+0085).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="02b23-979">В следующем примере кода показано <xref:System.Char.IsWhiteSpace%2A>.</span><span class="sxs-lookup"><span data-stu-id="02b23-979">The following code example demonstrates <xref:System.Char.IsWhiteSpace%2A>.</span></span>  
  
 [!code-cpp[System.Char.IsWhiteSpace#14](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsWhiteSpace/CPP/iswhitespace.cpp#14)]
 [!code-csharp[System.Char.IsWhiteSpace#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsWhiteSpace/CS/iswhitespace.cs#14)]
 [!code-vb[System.Char.IsWhiteSpace#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsWhiteSpace/VB/iswhitespace.vb#14)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="02b23-980">Свойство <paramref name="s" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="02b23-980"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="02b23-981">Параметр <paramref name="index" /> имеет значение меньше нуля или больше последней позиции в <paramref name="s" />.</span><span class="sxs-lookup"><span data-stu-id="02b23-981"><paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />.</span></span></exception>
        <altmember cref="T:System.Boolean" />
        <altmember cref="T:System.String" />
        <altmember cref="T:System.Globalization.UnicodeCategory" />
      </Docs>
    </Member>
    <Member MemberName="MaxValue">
      <MemberSignature Language="C#" Value="public const char MaxValue;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal char MaxValue" />
      <MemberSignature Language="DocId" Value="F:System.Char.MaxValue" />
      <MemberSignature Language="VB.NET" Value="Public Const MaxValue As Char " />
      <MemberSignature Language="C++ CLI" Value="public: char MaxValue;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="02b23-982">Представляет наибольшее возможное значение типа <see cref="T:System.Char" />.</span><span class="sxs-lookup"><span data-stu-id="02b23-982">Represents the largest possible value of a <see cref="T:System.Char" />.</span></span> <span data-ttu-id="02b23-983">Это поле является константой.</span><span class="sxs-lookup"><span data-stu-id="02b23-983">This field is constant.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02b23-984">Значение этой константы является шестнадцатеричным 0xFF.</span><span class="sxs-lookup"><span data-stu-id="02b23-984">The value of this constant is hexadecimal 0xFFFF.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Char.MinValue" />
      </Docs>
    </Member>
    <Member MemberName="MinValue">
      <MemberSignature Language="C#" Value="public const char MinValue;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal char MinValue" />
      <MemberSignature Language="DocId" Value="F:System.Char.MinValue" />
      <MemberSignature Language="VB.NET" Value="Public Const MinValue As Char " />
      <MemberSignature Language="C++ CLI" Value="public: char MinValue;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="02b23-985">Представляет минимально допустимое значение типа <see cref="T:System.Char" />.</span><span class="sxs-lookup"><span data-stu-id="02b23-985">Represents the smallest possible value of a <see cref="T:System.Char" />.</span></span> <span data-ttu-id="02b23-986">Это поле является константой.</span><span class="sxs-lookup"><span data-stu-id="02b23-986">This field is constant.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02b23-987">Значение этой константы является шестнадцатеричным 0x00.</span><span class="sxs-lookup"><span data-stu-id="02b23-987">The value of this constant is hexadecimal 0x00.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Char.MaxValue" />
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static char Parse (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char Parse(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.Parse(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char Parse(System::String ^ s);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="02b23-988">Строка, содержащая один символ, или <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="02b23-988">A string that contains a single character, or <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="02b23-989">Преобразует значение указанной строки в эквивалентный символ Юникода.</span><span class="sxs-lookup"><span data-stu-id="02b23-989">Converts the value of the specified string to its equivalent Unicode character.</span></span></summary>
        <returns><span data-ttu-id="02b23-990">Символ Юникода, эквивалентный единственному символу в <paramref name="s" />.</span><span class="sxs-lookup"><span data-stu-id="02b23-990">A Unicode character equivalent to the sole character in <paramref name="s" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="02b23-991">В следующем примере кода показано <xref:System.Char.Parse%2A>.</span><span class="sxs-lookup"><span data-stu-id="02b23-991">The following code example demonstrates <xref:System.Char.Parse%2A>.</span></span>  
  
 [!code-cpp[System.Char.Parse#15](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.Parse/CPP/parse.cpp#15)]
 [!code-csharp[System.Char.Parse#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.Parse/CS/parse.cs#15)]
 [!code-vb[System.Char.Parse#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.Parse/VB/parse.vb#15)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="02b23-992">Свойство <paramref name="s" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="02b23-992"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="02b23-993">Длина <paramref name="s" /> не равна 1.</span><span class="sxs-lookup"><span data-stu-id="02b23-993">The length of <paramref name="s" /> is not 1.</span></span></exception>
        <altmember cref="M:System.Char.ToString" />
      </Docs>
    </Member>
    <Member MemberName="System.IComparable.CompareTo">
      <MemberSignature Language="C#" Value="int IComparable.CompareTo (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.IComparable.CompareTo(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.System#IComparable#CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function CompareTo (value As Object) As Integer Implements IComparable.CompareTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.IComparable.CompareTo(System::Object ^ value) = IComparable::CompareTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.GetTypeCode">
      <MemberSignature Language="C#" Value="TypeCode IConvertible.GetTypeCode ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.TypeCode System.IConvertible.GetTypeCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.System#IConvertible#GetTypeCode" />
      <MemberSignature Language="VB.NET" Value="Function GetTypeCode () As TypeCode Implements IConvertible.GetTypeCode" />
      <MemberSignature Language="C++ CLI" Value=" virtual TypeCode System.IConvertible.GetTypeCode() = IConvertible::GetTypeCode;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.GetTypeCode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TypeCode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToBoolean">
      <MemberSignature Language="C#" Value="bool IConvertible.ToBoolean (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.IConvertible.ToBoolean(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.System#IConvertible#ToBoolean(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToBoolean (provider As IFormatProvider) As Boolean Implements IConvertible.ToBoolean" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.IConvertible.ToBoolean(IFormatProvider ^ provider) = IConvertible::ToBoolean;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToBoolean(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="02b23-994">Этот параметр не учитывается.</span><span class="sxs-lookup"><span data-stu-id="02b23-994">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="02b23-995">**Примечание**. Это преобразование не поддерживается.</span><span class="sxs-lookup"><span data-stu-id="02b23-995">**Note** This conversion is not supported.</span></span> <span data-ttu-id="02b23-996">Попытка его выполнения приводит к созданию исключения <see cref="T:System.InvalidCastException" />.</span><span class="sxs-lookup"><span data-stu-id="02b23-996">Attempting to do so throws an <see cref="T:System.InvalidCastException" />.</span></span></summary>
        <returns><span data-ttu-id="02b23-997">Данное преобразование не поддерживается.</span><span class="sxs-lookup"><span data-stu-id="02b23-997">This conversion is not supported.</span></span> <span data-ttu-id="02b23-998">Возвращаемое значение отсутствует.</span><span class="sxs-lookup"><span data-stu-id="02b23-998">No value is returned.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="02b23-999">Данное преобразование не поддерживается.</span><span class="sxs-lookup"><span data-stu-id="02b23-999">This conversion is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToByte">
      <MemberSignature Language="C#" Value="byte IConvertible.ToByte (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int8 System.IConvertible.ToByte(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.System#IConvertible#ToByte(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToByte (provider As IFormatProvider) As Byte Implements IConvertible.ToByte" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Byte System.IConvertible.ToByte(IFormatProvider ^ provider) = IConvertible::ToByte;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToByte(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="02b23-1000">Этот параметр не учитывается.</span><span class="sxs-lookup"><span data-stu-id="02b23-1000">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="02b23-1001">Описание этого члена см. в разделе <see cref="M:System.IConvertible.ToByte(System.IFormatProvider)" />.</span><span class="sxs-lookup"><span data-stu-id="02b23-1001">For a description of this member, see <see cref="M:System.IConvertible.ToByte(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="02b23-1002">Преобразованное значение текущего объекта <see cref="T:System.Char" />.</span><span class="sxs-lookup"><span data-stu-id="02b23-1002">The converted value of the current <see cref="T:System.Char" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02b23-1003">Этот член представляет собой явную реализацию члена интерфейса.</span><span class="sxs-lookup"><span data-stu-id="02b23-1003">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="02b23-1004">Он может использоваться, только если экземпляр <xref:System.Char> приведен к типу интерфейса <xref:System.IConvertible>.</span><span class="sxs-lookup"><span data-stu-id="02b23-1004">It can be used only when the <xref:System.Char> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="02b23-1005">Взамен рекомендуется использовать заключается в вызове <xref:System.Convert.ToByte%28System.Char%29?displayProperty=nameWithType> метод вместо него.</span><span class="sxs-lookup"><span data-stu-id="02b23-1005">The recommended alternative is to call the <xref:System.Convert.ToByte%28System.Char%29?displayProperty=nameWithType> method instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToChar">
      <MemberSignature Language="C#" Value="char IConvertible.ToChar (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance char System.IConvertible.ToChar(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.System#IConvertible#ToChar(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToChar (provider As IFormatProvider) As Char Implements IConvertible.ToChar" />
      <MemberSignature Language="C++ CLI" Value=" virtual char System.IConvertible.ToChar(IFormatProvider ^ provider) = IConvertible::ToChar;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToChar(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="02b23-1006">Этот параметр не учитывается.</span><span class="sxs-lookup"><span data-stu-id="02b23-1006">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="02b23-1007">Описание этого члена см. в разделе <see cref="M:System.IConvertible.ToChar(System.IFormatProvider)" />.</span><span class="sxs-lookup"><span data-stu-id="02b23-1007">For a description of this member, see <see cref="M:System.IConvertible.ToChar(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="02b23-1008">Значение текущего объекта <see cref="T:System.Char" /> не изменилось.</span><span class="sxs-lookup"><span data-stu-id="02b23-1008">The value of the current <see cref="T:System.Char" /> object unchanged.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02b23-1009">Этот член представляет собой явную реализацию члена интерфейса.</span><span class="sxs-lookup"><span data-stu-id="02b23-1009">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="02b23-1010">Он может использоваться, только если экземпляр <xref:System.Char> приведен к типу интерфейса <xref:System.IConvertible>.</span><span class="sxs-lookup"><span data-stu-id="02b23-1010">It can be used only when the <xref:System.Char> instance is cast to an <xref:System.IConvertible> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDateTime">
      <MemberSignature Language="C#" Value="DateTime IConvertible.ToDateTime (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.DateTime System.IConvertible.ToDateTime(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.System#IConvertible#ToDateTime(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDateTime (provider As IFormatProvider) As DateTime Implements IConvertible.ToDateTime" />
      <MemberSignature Language="C++ CLI" Value=" virtual DateTime System.IConvertible.ToDateTime(IFormatProvider ^ provider) = IConvertible::ToDateTime;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDateTime(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="02b23-1011">Этот параметр не учитывается.</span><span class="sxs-lookup"><span data-stu-id="02b23-1011">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="02b23-1012">**Примечание**. Это преобразование не поддерживается.</span><span class="sxs-lookup"><span data-stu-id="02b23-1012">**Note** This conversion is not supported.</span></span> <span data-ttu-id="02b23-1013">Попытка его выполнения приводит к созданию исключения <see cref="T:System.InvalidCastException" />.</span><span class="sxs-lookup"><span data-stu-id="02b23-1013">Attempting to do so throws an <see cref="T:System.InvalidCastException" />.</span></span></summary>
        <returns><span data-ttu-id="02b23-1014">Возвращаемое значение отсутствует.</span><span class="sxs-lookup"><span data-stu-id="02b23-1014">No value is returned.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="02b23-1015">Данное преобразование не поддерживается.</span><span class="sxs-lookup"><span data-stu-id="02b23-1015">This conversion is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDecimal">
      <MemberSignature Language="C#" Value="decimal IConvertible.ToDecimal (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.Decimal System.IConvertible.ToDecimal(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.System#IConvertible#ToDecimal(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDecimal (provider As IFormatProvider) As Decimal Implements IConvertible.ToDecimal" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Decimal System.IConvertible.ToDecimal(IFormatProvider ^ provider) = IConvertible::ToDecimal;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDecimal(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="02b23-1016">Этот параметр не учитывается.</span><span class="sxs-lookup"><span data-stu-id="02b23-1016">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="02b23-1017">**Примечание**. Это преобразование не поддерживается.</span><span class="sxs-lookup"><span data-stu-id="02b23-1017">**Note** This conversion is not supported.</span></span> <span data-ttu-id="02b23-1018">Попытка его выполнения приводит к созданию исключения <see cref="T:System.InvalidCastException" />.</span><span class="sxs-lookup"><span data-stu-id="02b23-1018">Attempting to do so throws an <see cref="T:System.InvalidCastException" />.</span></span></summary>
        <returns><span data-ttu-id="02b23-1019">Возвращаемое значение отсутствует.</span><span class="sxs-lookup"><span data-stu-id="02b23-1019">No value is returned.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="02b23-1020">Данное преобразование не поддерживается.</span><span class="sxs-lookup"><span data-stu-id="02b23-1020">This conversion is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDouble">
      <MemberSignature Language="C#" Value="double IConvertible.ToDouble (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance float64 System.IConvertible.ToDouble(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.System#IConvertible#ToDouble(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDouble (provider As IFormatProvider) As Double Implements IConvertible.ToDouble" />
      <MemberSignature Language="C++ CLI" Value=" virtual double System.IConvertible.ToDouble(IFormatProvider ^ provider) = IConvertible::ToDouble;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDouble(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="02b23-1021">Этот параметр не учитывается.</span><span class="sxs-lookup"><span data-stu-id="02b23-1021">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="02b23-1022">**Примечание**. Это преобразование не поддерживается.</span><span class="sxs-lookup"><span data-stu-id="02b23-1022">**Note** This conversion is not supported.</span></span> <span data-ttu-id="02b23-1023">Попытка его выполнения приводит к созданию исключения <see cref="T:System.InvalidCastException" />.</span><span class="sxs-lookup"><span data-stu-id="02b23-1023">Attempting to do so throws an <see cref="T:System.InvalidCastException" />.</span></span></summary>
        <returns><span data-ttu-id="02b23-1024">Возвращаемое значение отсутствует.</span><span class="sxs-lookup"><span data-stu-id="02b23-1024">No value is returned.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="02b23-1025">Данное преобразование не поддерживается.</span><span class="sxs-lookup"><span data-stu-id="02b23-1025">This conversion is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt16">
      <MemberSignature Language="C#" Value="short IConvertible.ToInt16 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int16 System.IConvertible.ToInt16(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.System#IConvertible#ToInt16(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt16 (provider As IFormatProvider) As Short Implements IConvertible.ToInt16" />
      <MemberSignature Language="C++ CLI" Value=" virtual short System.IConvertible.ToInt16(IFormatProvider ^ provider) = IConvertible::ToInt16;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt16(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="02b23-1026">Этот параметр не учитывается.</span><span class="sxs-lookup"><span data-stu-id="02b23-1026">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="02b23-1027">Описание этого члена см. в разделе <see cref="M:System.IConvertible.ToInt16(System.IFormatProvider)" />.</span><span class="sxs-lookup"><span data-stu-id="02b23-1027">For a description of this member, see <see cref="M:System.IConvertible.ToInt16(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="02b23-1028">Преобразованное значение текущего объекта <see cref="T:System.Char" />.</span><span class="sxs-lookup"><span data-stu-id="02b23-1028">The converted value of the current <see cref="T:System.Char" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02b23-1029">Этот член представляет собой явную реализацию члена интерфейса.</span><span class="sxs-lookup"><span data-stu-id="02b23-1029">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="02b23-1030">Он может использоваться, только если экземпляр <xref:System.Char> приведен к типу интерфейса <xref:System.IConvertible>.</span><span class="sxs-lookup"><span data-stu-id="02b23-1030">It can be used only when the <xref:System.Char> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="02b23-1031">Взамен рекомендуется использовать заключается в вызове <xref:System.Convert.ToInt16%28System.Char%29?displayProperty=nameWithType> метод вместо него.</span><span class="sxs-lookup"><span data-stu-id="02b23-1031">The recommended alternative is to call the <xref:System.Convert.ToInt16%28System.Char%29?displayProperty=nameWithType> method instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt32">
      <MemberSignature Language="C#" Value="int IConvertible.ToInt32 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.IConvertible.ToInt32(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.System#IConvertible#ToInt32(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt32 (provider As IFormatProvider) As Integer Implements IConvertible.ToInt32" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.IConvertible.ToInt32(IFormatProvider ^ provider) = IConvertible::ToInt32;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt32(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="02b23-1032">Этот параметр не учитывается.</span><span class="sxs-lookup"><span data-stu-id="02b23-1032">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="02b23-1033">Описание этого члена см. в разделе <see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" />.</span><span class="sxs-lookup"><span data-stu-id="02b23-1033">For a description of this member, see <see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="02b23-1034">Преобразованное значение текущего объекта <see cref="T:System.Char" />.</span><span class="sxs-lookup"><span data-stu-id="02b23-1034">The converted value of the current <see cref="T:System.Char" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02b23-1035">Этот член представляет собой явную реализацию члена интерфейса.</span><span class="sxs-lookup"><span data-stu-id="02b23-1035">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="02b23-1036">Он может использоваться, только если экземпляр <xref:System.Char> приведен к типу интерфейса <xref:System.IConvertible>.</span><span class="sxs-lookup"><span data-stu-id="02b23-1036">It can be used only when the <xref:System.Char> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="02b23-1037">Взамен рекомендуется использовать заключается в вызове <xref:System.Convert.ToInt32%28System.Char%29?displayProperty=nameWithType> метод вместо него.</span><span class="sxs-lookup"><span data-stu-id="02b23-1037">The recommended alternative is to call the <xref:System.Convert.ToInt32%28System.Char%29?displayProperty=nameWithType> method instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt64">
      <MemberSignature Language="C#" Value="long IConvertible.ToInt64 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int64 System.IConvertible.ToInt64(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.System#IConvertible#ToInt64(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt64 (provider As IFormatProvider) As Long Implements IConvertible.ToInt64" />
      <MemberSignature Language="C++ CLI" Value=" virtual long System.IConvertible.ToInt64(IFormatProvider ^ provider) = IConvertible::ToInt64;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt64(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="02b23-1038">Этот параметр не учитывается.</span><span class="sxs-lookup"><span data-stu-id="02b23-1038">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="02b23-1039">Описание этого члена см. в разделе <see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" />.</span><span class="sxs-lookup"><span data-stu-id="02b23-1039">For a description of this member, see <see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="02b23-1040">Преобразованное значение текущего объекта <see cref="T:System.Char" />.</span><span class="sxs-lookup"><span data-stu-id="02b23-1040">The converted value of the current <see cref="T:System.Char" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02b23-1041">Этот член представляет собой явную реализацию члена интерфейса.</span><span class="sxs-lookup"><span data-stu-id="02b23-1041">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="02b23-1042">Он может использоваться, только если экземпляр <xref:System.Char> приведен к типу интерфейса <xref:System.IConvertible>.</span><span class="sxs-lookup"><span data-stu-id="02b23-1042">It can be used only when the <xref:System.Char> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="02b23-1043">Взамен рекомендуется использовать заключается в вызове <xref:System.Convert.ToInt64%28System.Char%29?displayProperty=nameWithType> метод вместо него.</span><span class="sxs-lookup"><span data-stu-id="02b23-1043">The recommended alternative is to call the <xref:System.Convert.ToInt64%28System.Char%29?displayProperty=nameWithType> method instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToSByte">
      <MemberSignature Language="C#" Value="sbyte IConvertible.ToSByte (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int8 System.IConvertible.ToSByte(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.System#IConvertible#ToSByte(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToSByte (provider As IFormatProvider) As SByte Implements IConvertible.ToSByte" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::SByte System.IConvertible.ToSByte(IFormatProvider ^ provider) = IConvertible::ToSByte;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToSByte(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="02b23-1044">Этот параметр не учитывается.</span><span class="sxs-lookup"><span data-stu-id="02b23-1044">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="02b23-1045">Описание этого члена см. в разделе <see cref="M:System.IConvertible.ToSByte(System.IFormatProvider)" />.</span><span class="sxs-lookup"><span data-stu-id="02b23-1045">For a description of this member, see <see cref="M:System.IConvertible.ToSByte(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="02b23-1046">Преобразованное значение текущего объекта <see cref="T:System.Char" />.</span><span class="sxs-lookup"><span data-stu-id="02b23-1046">The converted value of the current <see cref="T:System.Char" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02b23-1047">Этот член представляет собой явную реализацию члена интерфейса.</span><span class="sxs-lookup"><span data-stu-id="02b23-1047">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="02b23-1048">Он может использоваться, только если экземпляр <xref:System.Char> приведен к типу интерфейса <xref:System.IConvertible>.</span><span class="sxs-lookup"><span data-stu-id="02b23-1048">It can be used only when the <xref:System.Char> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="02b23-1049">Взамен рекомендуется использовать заключается в вызове <xref:System.Convert.ToSByte%28System.Char%29?displayProperty=nameWithType> метод вместо него.</span><span class="sxs-lookup"><span data-stu-id="02b23-1049">The recommended alternative is to call the <xref:System.Convert.ToSByte%28System.Char%29?displayProperty=nameWithType> method instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToSingle">
      <MemberSignature Language="C#" Value="float IConvertible.ToSingle (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance float32 System.IConvertible.ToSingle(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.System#IConvertible#ToSingle(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToSingle (provider As IFormatProvider) As Single Implements IConvertible.ToSingle" />
      <MemberSignature Language="C++ CLI" Value=" virtual float System.IConvertible.ToSingle(IFormatProvider ^ provider) = IConvertible::ToSingle;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToSingle(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="02b23-1050">Этот параметр не учитывается.</span><span class="sxs-lookup"><span data-stu-id="02b23-1050">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="02b23-1051">**Примечание**. Это преобразование не поддерживается.</span><span class="sxs-lookup"><span data-stu-id="02b23-1051">**Note** This conversion is not supported.</span></span> <span data-ttu-id="02b23-1052">Попытка его выполнения приводит к созданию исключения <see cref="T:System.InvalidCastException" />.</span><span class="sxs-lookup"><span data-stu-id="02b23-1052">Attempting to do so throws an <see cref="T:System.InvalidCastException" />.</span></span></summary>
        <returns><span data-ttu-id="02b23-1053">Возвращаемое значение отсутствует.</span><span class="sxs-lookup"><span data-stu-id="02b23-1053">No value is returned.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="02b23-1054">Данное преобразование не поддерживается.</span><span class="sxs-lookup"><span data-stu-id="02b23-1054">This conversion is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToString">
      <MemberSignature Language="C#" Value="string IConvertible.ToString (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.IConvertible.ToString(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.System#IConvertible#ToString(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToString (provider As IFormatProvider) As String Implements IConvertible.ToString" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ System.IConvertible.ToString(IFormatProvider ^ provider) = IConvertible::ToString;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToString(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToType">
      <MemberSignature Language="C#" Value="object IConvertible.ToType (Type type, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.IConvertible.ToType(class System.Type type, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.System#IConvertible#ToType(System.Type,System.IFormatProvider)" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.IConvertible.ToType(Type ^ type, IFormatProvider ^ provider) = IConvertible::ToType;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToType(System.Type,System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="02b23-1055">Объект <see cref="T:System.Type" />.</span><span class="sxs-lookup"><span data-stu-id="02b23-1055">A <see cref="T:System.Type" /> object.</span></span></param>
        <param name="provider"><span data-ttu-id="02b23-1056">Объект <see cref="T:System.IFormatProvider" />.</span><span class="sxs-lookup"><span data-stu-id="02b23-1056">An <see cref="T:System.IFormatProvider" /> object.</span></span></param>
        <summary><span data-ttu-id="02b23-1057">Описание этого члена см. в разделе <see cref="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)" />.</span><span class="sxs-lookup"><span data-stu-id="02b23-1057">For a description of this member, see <see cref="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="02b23-1058">Объект указанного типа.</span><span class="sxs-lookup"><span data-stu-id="02b23-1058">An object of the specified type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02b23-1059">Этот член представляет собой явную реализацию члена интерфейса.</span><span class="sxs-lookup"><span data-stu-id="02b23-1059">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="02b23-1060">Он может использоваться, только если экземпляр <xref:System.Char> приведен к типу интерфейса <xref:System.IConvertible>.</span><span class="sxs-lookup"><span data-stu-id="02b23-1060">It can be used only when the <xref:System.Char> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="02b23-1061">Взамен рекомендуется использовать заключается в вызове <xref:System.Convert.ChangeType%28System.Object%2CSystem.Type%2CSystem.IFormatProvider%29> метод вместо него.</span><span class="sxs-lookup"><span data-stu-id="02b23-1061">The recommended alternative is to call the <xref:System.Convert.ChangeType%28System.Object%2CSystem.Type%2CSystem.IFormatProvider%29> method instead.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="02b23-1062">Свойство <paramref name="type" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="02b23-1062"><paramref name="type" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="02b23-1063">Не удалось преобразовать значение текущего объекта <see cref="T:System.Char" /> в тип, заданный в параметре <paramref name="type" />.</span><span class="sxs-lookup"><span data-stu-id="02b23-1063">The value of the current <see cref="T:System.Char" /> object cannot be converted to the type specified by the <paramref name="type" /> parameter.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt16">
      <MemberSignature Language="C#" Value="ushort IConvertible.ToUInt16 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int16 System.IConvertible.ToUInt16(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.System#IConvertible#ToUInt16(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt16 (provider As IFormatProvider) As UShort Implements IConvertible.ToUInt16" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt16 System.IConvertible.ToUInt16(IFormatProvider ^ provider) = IConvertible::ToUInt16;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt16(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="02b23-1064">Объект <see cref="T:System.IFormatProvider" />.</span><span class="sxs-lookup"><span data-stu-id="02b23-1064">An <see cref="T:System.IFormatProvider" /> object.</span></span> <span data-ttu-id="02b23-1065">(Укажите <see langword="null" />, так как параметр <c>provider</c> игнорируется.)</span><span class="sxs-lookup"><span data-stu-id="02b23-1065">(Specify <see langword="null" /> because the <c>provider</c> parameter is ignored.)</span></span></param>
        <summary><span data-ttu-id="02b23-1066">Описание этого члена см. в разделе <see cref="M:System.IConvertible.ToUInt16(System.IFormatProvider)" />.</span><span class="sxs-lookup"><span data-stu-id="02b23-1066">For a description of this member, see <see cref="M:System.IConvertible.ToUInt16(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="02b23-1067">Преобразованное значение текущего объекта <see cref="T:System.Char" />.</span><span class="sxs-lookup"><span data-stu-id="02b23-1067">The converted value of the current <see cref="T:System.Char" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02b23-1068">Этот член представляет собой явную реализацию члена интерфейса.</span><span class="sxs-lookup"><span data-stu-id="02b23-1068">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="02b23-1069">Он может использоваться, только если экземпляр <xref:System.Char> приведен к типу интерфейса <xref:System.IConvertible>.</span><span class="sxs-lookup"><span data-stu-id="02b23-1069">It can be used only when the <xref:System.Char> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="02b23-1070">Взамен рекомендуется использовать заключается в вызове <xref:System.Convert.ToUInt16%28System.Char%29?displayProperty=nameWithType> метод вместо него.</span><span class="sxs-lookup"><span data-stu-id="02b23-1070">The recommended alternative is to call the <xref:System.Convert.ToUInt16%28System.Char%29?displayProperty=nameWithType> method instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt32">
      <MemberSignature Language="C#" Value="uint IConvertible.ToUInt32 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int32 System.IConvertible.ToUInt32(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.System#IConvertible#ToUInt32(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt32 (provider As IFormatProvider) As UInteger Implements IConvertible.ToUInt32" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt32 System.IConvertible.ToUInt32(IFormatProvider ^ provider) = IConvertible::ToUInt32;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt32(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="02b23-1071">Объект <see cref="T:System.IFormatProvider" />.</span><span class="sxs-lookup"><span data-stu-id="02b23-1071">An <see cref="T:System.IFormatProvider" /> object.</span></span> <span data-ttu-id="02b23-1072">(Укажите <see langword="null" />, так как параметр <c>provider</c> игнорируется.)</span><span class="sxs-lookup"><span data-stu-id="02b23-1072">(Specify <see langword="null" /> because the <c>provider</c> parameter is ignored.)</span></span></param>
        <summary><span data-ttu-id="02b23-1073">Описание этого члена см. в разделе <see cref="M:System.IConvertible.ToUInt32(System.IFormatProvider)" />.</span><span class="sxs-lookup"><span data-stu-id="02b23-1073">For a description of this member, see <see cref="M:System.IConvertible.ToUInt32(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="02b23-1074">Преобразованное значение текущего объекта <see cref="T:System.Char" />.</span><span class="sxs-lookup"><span data-stu-id="02b23-1074">The converted value of the current <see cref="T:System.Char" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02b23-1075">Этот член представляет собой явную реализацию члена интерфейса.</span><span class="sxs-lookup"><span data-stu-id="02b23-1075">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="02b23-1076">Он может использоваться, только если экземпляр <xref:System.Char> приведен к типу интерфейса <xref:System.IConvertible>.</span><span class="sxs-lookup"><span data-stu-id="02b23-1076">It can be used only when the <xref:System.Char> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="02b23-1077">Взамен рекомендуется использовать заключается в вызове <xref:System.Convert.ToUInt32%28System.Char%29?displayProperty=nameWithType> метод вместо него.</span><span class="sxs-lookup"><span data-stu-id="02b23-1077">The recommended alternative is to call the <xref:System.Convert.ToUInt32%28System.Char%29?displayProperty=nameWithType> method instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt64">
      <MemberSignature Language="C#" Value="ulong IConvertible.ToUInt64 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int64 System.IConvertible.ToUInt64(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.System#IConvertible#ToUInt64(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt64 (provider As IFormatProvider) As ULong Implements IConvertible.ToUInt64" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt64 System.IConvertible.ToUInt64(IFormatProvider ^ provider) = IConvertible::ToUInt64;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt64(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="02b23-1078">Объект <see cref="T:System.IFormatProvider" />.</span><span class="sxs-lookup"><span data-stu-id="02b23-1078">An <see cref="T:System.IFormatProvider" /> object.</span></span> <span data-ttu-id="02b23-1079">(Укажите <see langword="null" />, так как параметр <c>provider</c> игнорируется.)</span><span class="sxs-lookup"><span data-stu-id="02b23-1079">(Specify <see langword="null" /> because the <c>provider</c> parameter is ignored.)</span></span></param>
        <summary><span data-ttu-id="02b23-1080">Описание этого члена см. в разделе <see cref="M:System.IConvertible.ToUInt64(System.IFormatProvider)" />.</span><span class="sxs-lookup"><span data-stu-id="02b23-1080">For a description of this member, see <see cref="M:System.IConvertible.ToUInt64(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="02b23-1081">Преобразованное значение текущего объекта <see cref="T:System.Char" />.</span><span class="sxs-lookup"><span data-stu-id="02b23-1081">The converted value of the current <see cref="T:System.Char" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02b23-1082">Этот член представляет собой явную реализацию члена интерфейса.</span><span class="sxs-lookup"><span data-stu-id="02b23-1082">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="02b23-1083">Он может использоваться, только если экземпляр <xref:System.Char> приведен к типу интерфейса <xref:System.IConvertible>.</span><span class="sxs-lookup"><span data-stu-id="02b23-1083">It can be used only when the <xref:System.Char> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="02b23-1084">Взамен рекомендуется использовать заключается в вызове <xref:System.Convert.ToUInt64%28System.Char%29?displayProperty=nameWithType> метод вместо него.</span><span class="sxs-lookup"><span data-stu-id="02b23-1084">The recommended alternative is to call the <xref:System.Convert.ToUInt64%28System.Char%29?displayProperty=nameWithType> method instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToLower">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="02b23-1085">Преобразует значение символа Юникода в его эквивалент в нижнем регистре.</span><span class="sxs-lookup"><span data-stu-id="02b23-1085">Converts the value of a Unicode character to its lowercase equivalent.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToLower">
      <MemberSignature Language="C#" Value="public static char ToLower (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char ToLower(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.ToLower(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToLower (c As Char) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char ToLower(char c);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c"><span data-ttu-id="02b23-1086">Знак Юникода, который необходимо преобразовать.</span><span class="sxs-lookup"><span data-stu-id="02b23-1086">The Unicode character to convert.</span></span></param>
        <summary><span data-ttu-id="02b23-1087">Преобразует значение символа Юникода в его эквивалент в нижнем регистре.</span><span class="sxs-lookup"><span data-stu-id="02b23-1087">Converts the value of a Unicode character to its lowercase equivalent.</span></span></summary>
        <returns><span data-ttu-id="02b23-1088">Эквивалент <paramref name="c" /> в нижнем регистре или значение <paramref name="c" /> без изменений, если <paramref name="c" /> уже является буквой нижнего регистра или не является буквой алфавита.</span><span class="sxs-lookup"><span data-stu-id="02b23-1088">The lowercase equivalent of <paramref name="c" />, or the unchanged value of <paramref name="c" />, if <paramref name="c" /> is already lowercase or not alphabetic.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02b23-1089">Правила использования регистров, поступают из текущего языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="02b23-1089">Casing rules are obtained from the current culture.</span></span>  
  
 <span data-ttu-id="02b23-1090">Используйте <xref:System.String.ToLower%2A?displayProperty=nameWithType> для преобразования строки в нижний регистр.</span><span class="sxs-lookup"><span data-stu-id="02b23-1090">Use <xref:System.String.ToLower%2A?displayProperty=nameWithType> to convert a string to lowercase.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="02b23-1091">В следующем примере демонстрируется <xref:System.Char.ToLower%2A>.</span><span class="sxs-lookup"><span data-stu-id="02b23-1091">The following example demonstrates <xref:System.Char.ToLower%2A>.</span></span>  
  
 [!code-cpp[System.Char.ToLower#16](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.ToLower/CPP/tolower.cpp#16)]
 [!code-csharp[System.Char.ToLower#16](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.ToLower/CS/tolower.cs#16)]
 [!code-vb[System.Char.ToLower#16](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.ToLower/VB/tolower.vb#16)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage">
          <para><span data-ttu-id="02b23-1092">Как описано в статье [советы и рекомендации по использованию строк](~/docs/standard/base-types/best-practices-strings.md), рекомендуется избегать вызова методов регистра знаков и регистр строки, которые заменяют значения по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="02b23-1092">As explained in [Best Practices for Using Strings](~/docs/standard/base-types/best-practices-strings.md), we recommend that you avoid calling character-casing and string-casing methods that substitute default values.</span></span> <span data-ttu-id="02b23-1093">Вместо этого следует вызывать методы, которые требуют явного указания параметров.</span><span class="sxs-lookup"><span data-stu-id="02b23-1093">Instead, you should call methods that require parameters to be explicitly specified.</span></span> <span data-ttu-id="02b23-1094">Чтобы преобразовать символ в нижний регистр, используя правила учета регистра текущего языка и региональных параметров, вызовите <see cref="M:System.Char.ToLower(System.Char,System.Globalization.CultureInfo)" /> перегрузка метода со значением <see cref="P:System.Globalization.CultureInfo.CurrentCulture" /> для его <paramref name="culture" /> параметра.</span><span class="sxs-lookup"><span data-stu-id="02b23-1094">To convert a character to lowercase by using the casing conventions of the current culture, call the <see cref="M:System.Char.ToLower(System.Char,System.Globalization.CultureInfo)" /> method overload with a value of <see cref="P:System.Globalization.CultureInfo.CurrentCulture" /> for its <paramref name="culture" /> parameter.</span></span></para>
        </block>
        <altmember cref="M:System.String.ToLower" />
        <altmember cref="M:System.Char.ToUpper(System.Char,System.Globalization.CultureInfo)" />
      </Docs>
    </Member>
    <Member MemberName="ToLower">
      <MemberSignature Language="C#" Value="public static char ToLower (char c, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char ToLower(char c, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.ToLower(System.Char,System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToLower (c As Char, culture As CultureInfo) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char ToLower(char c, System::Globalization::CultureInfo ^ culture);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="c"><span data-ttu-id="02b23-1095">Знак Юникода, который необходимо преобразовать.</span><span class="sxs-lookup"><span data-stu-id="02b23-1095">The Unicode character to convert.</span></span></param>
        <param name="culture"><span data-ttu-id="02b23-1096">Объект, задающий правила определения регистра для языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="02b23-1096">An object that supplies culture-specific casing rules.</span></span></param>
        <summary><span data-ttu-id="02b23-1097">Преобразует значение указанного символа Юникода в его эквивалент в нижнем регистре, используя указанные сведения о форматировании, связанные с языком и региональными параметрами.</span><span class="sxs-lookup"><span data-stu-id="02b23-1097">Converts the value of a specified Unicode character to its lowercase equivalent using specified culture-specific formatting information.</span></span></summary>
        <returns><span data-ttu-id="02b23-1098">Эквивалент <paramref name="c" /> в нижнем регистре, измененный согласно <paramref name="culture" />, или значение <paramref name="c" /> без изменений, если <paramref name="c" /> уже является буквой нижнего регистра или не является буквой алфавита.</span><span class="sxs-lookup"><span data-stu-id="02b23-1098">The lowercase equivalent of <paramref name="c" />, modified according to <paramref name="culture" />, or the unchanged value of <paramref name="c" />, if <paramref name="c" /> is already lowercase or not alphabetic.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02b23-1099">Используйте <xref:System.String.ToLower%2A?displayProperty=nameWithType> для преобразования строки в нижний регистр.</span><span class="sxs-lookup"><span data-stu-id="02b23-1099">Use <xref:System.String.ToLower%2A?displayProperty=nameWithType> to convert a string to lowercase.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="02b23-1100">В следующем примере кода показано <xref:System.Char.ToLower%2A>.</span><span class="sxs-lookup"><span data-stu-id="02b23-1100">The following code example demonstrates <xref:System.Char.ToLower%2A>.</span></span>  
  
 [!code-cpp[System.Char.ToLower#16](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.ToLower/CPP/tolower.cpp#16)]
 [!code-csharp[System.Char.ToLower#16](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.ToLower/CS/tolower.cs#16)]
 [!code-vb[System.Char.ToLower#16](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.ToLower/VB/tolower.vb#16)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="02b23-1101">Свойство <paramref name="culture" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="02b23-1101"><paramref name="culture" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="P:System.Globalization.CultureInfo.CurrentCulture" />
        <altmember cref="M:System.String.ToLower" />
        <altmember cref="M:System.Char.ToUpper(System.Char,System.Globalization.CultureInfo)" />
      </Docs>
    </Member>
    <Member MemberName="ToLowerInvariant">
      <MemberSignature Language="C#" Value="public static char ToLowerInvariant (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char ToLowerInvariant(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.ToLowerInvariant(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToLowerInvariant (c As Char) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char ToLowerInvariant(char c);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c"><span data-ttu-id="02b23-1102">Знак Юникода, который необходимо преобразовать.</span><span class="sxs-lookup"><span data-stu-id="02b23-1102">The Unicode character to convert.</span></span></param>
        <summary><span data-ttu-id="02b23-1103">Преобразует значение символа Юникода в его эквивалент в нижнем регистре, используя правила изменения регистра, связанные с инвариантным языком и региональными параметрами.</span><span class="sxs-lookup"><span data-stu-id="02b23-1103">Converts the value of a Unicode character to its lowercase equivalent using the casing rules of the invariant culture.</span></span></summary>
        <returns><span data-ttu-id="02b23-1104">Эквивалент параметра <paramref name="c" /> в нижнем регистре или значение <paramref name="c" /> без изменений, если <paramref name="c" /> уже является буквой нижнего регистра или не является буквой алфавита.</span><span class="sxs-lookup"><span data-stu-id="02b23-1104">The lowercase equivalent of the <paramref name="c" /> parameter, or the unchanged value of <paramref name="c" />, if <paramref name="c" /> is already lowercase or not alphabetic.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02b23-1105">Если приложение не зависит от текущего языка и региональных параметров и зависит от регистра символа, изменяемого предсказуемым способом, используйте <xref:System.Char.ToLowerInvariant%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="02b23-1105">If your application is unaffected by the current culture and depends on the case of a character changing in a predictable way, then use the <xref:System.Char.ToLowerInvariant%2A> method.</span></span> <span data-ttu-id="02b23-1106"><xref:System.Char.ToLowerInvariant%2A> Метод эквивалентен методу `ToLower(Char, CultureInfo.InvariantCulture)`.</span><span class="sxs-lookup"><span data-stu-id="02b23-1106">The <xref:System.Char.ToLowerInvariant%2A> method is equivalent to `ToLower(Char, CultureInfo.InvariantCulture)`.</span></span>  
  
 <span data-ttu-id="02b23-1107">Используйте <xref:System.String.ToLowerInvariant%2A?displayProperty=nameWithType> для преобразования строки в нижний регистр.</span><span class="sxs-lookup"><span data-stu-id="02b23-1107">Use <xref:System.String.ToLowerInvariant%2A?displayProperty=nameWithType> to convert a string to lowercase.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.String.ToLower" />
        <altmember cref="M:System.Char.ToUpper(System.Char,System.Globalization.CultureInfo)" />
        <altmember cref="P:System.Globalization.CultureInfo.InvariantCulture" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ToString">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="02b23-1108">Преобразует значение этого экземпляра в эквивалентное ему строковое представление.</span><span class="sxs-lookup"><span data-stu-id="02b23-1108">Converts the value of this instance to its equivalent string representation.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="02b23-1109">Преобразует значение этого экземпляра в эквивалентное ему строковое представление.</span><span class="sxs-lookup"><span data-stu-id="02b23-1109">Converts the value of this instance to its equivalent string representation.</span></span></summary>
        <returns><span data-ttu-id="02b23-1110">Строковое представление значения этого экземпляра.</span><span class="sxs-lookup"><span data-stu-id="02b23-1110">The string representation of the value of this instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="02b23-1111">В следующем примере кода показано <xref:System.Char.ToString%2A>.</span><span class="sxs-lookup"><span data-stu-id="02b23-1111">The following code example demonstrates <xref:System.Char.ToString%2A>.</span></span>  
  
 [!code-cpp[System.Char.ToString#17](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.ToString/CPP/tostring.cpp#17)]
 [!code-csharp[System.Char.ToString#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.ToString/CS/tostring.cs#17)]
 [!code-vb[System.Char.ToString#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.ToString/VB/tostring.vb#17)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Char.Parse(System.String)" />
        <altmember cref="T:System.String" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.ToString(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (c As Char) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(char c);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c"><span data-ttu-id="02b23-1112">Знак Юникода, который необходимо преобразовать.</span><span class="sxs-lookup"><span data-stu-id="02b23-1112">The Unicode character to convert.</span></span></param>
        <summary><span data-ttu-id="02b23-1113">Преобразует указанный символ Юникода в эквивалентное ему строковое представление.</span><span class="sxs-lookup"><span data-stu-id="02b23-1113">Converts the specified Unicode character to its equivalent string representation.</span></span></summary>
        <returns><span data-ttu-id="02b23-1114">Строковое представление значения <paramref name="c" />.</span><span class="sxs-lookup"><span data-stu-id="02b23-1114">The string representation of the value of <paramref name="c" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="02b23-1115">В следующем примере кода показано <xref:System.Char.ToString%2A>.</span><span class="sxs-lookup"><span data-stu-id="02b23-1115">The following code example demonstrates <xref:System.Char.ToString%2A>.</span></span>  
  
 [!code-cpp[System.Char.ToString#17](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.ToString/CPP/tostring.cpp#17)]
 [!code-csharp[System.Char.ToString#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.ToString/CS/tostring.cs#17)]
 [!code-vb[System.Char.ToString#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.ToString/VB/tostring.vb#17)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Char.Parse(System.String)" />
        <altmember cref="T:System.String" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToString(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.ToString(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ToString(IFormatProvider ^ provider);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToString(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="02b23-1116">(Зарезервирован.) Объект, предоставляющий сведения о форматировании, связанные с определенным языком и региональными параметрами.</span><span class="sxs-lookup"><span data-stu-id="02b23-1116">(Reserved) An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="02b23-1117">Преобразует значение этого экземпляра в эквивалентное ему строковое представление с использованием указанных сведений об особенностях форматирования, связанных с языком и региональными параметрами.</span><span class="sxs-lookup"><span data-stu-id="02b23-1117">Converts the value of this instance to its equivalent string representation using the specified culture-specific format information.</span></span></summary>
        <returns><span data-ttu-id="02b23-1118">Строковое представление значения данного экземпляра, определяемое параметром <paramref name="provider" />.</span><span class="sxs-lookup"><span data-stu-id="02b23-1118">The string representation of the value of this instance as specified by <paramref name="provider" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02b23-1119">`provider` Параметр учитывается; он не участвует в этой операции.</span><span class="sxs-lookup"><span data-stu-id="02b23-1119">The `provider` parameter is ignored; it does not participate in this operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="02b23-1120">В следующем примере кода демонстрируется перегрузка <xref:System.Char.ToString%2A>.</span><span class="sxs-lookup"><span data-stu-id="02b23-1120">The following code example demonstrates an overload of <xref:System.Char.ToString%2A>.</span></span>  
  
 [!code-cpp[System.Char.ToString#17](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.ToString/CPP/tostring.cpp#17)]
 [!code-csharp[System.Char.ToString#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.ToString/CS/tostring.cs#17)]
 [!code-vb[System.Char.ToString#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.ToString/VB/tostring.vb#17)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Char.Parse(System.String)" />
        <altmember cref="T:System.String" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ToUpper">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="02b23-1121">Преобразует значение символа Юникода в эквивалентный символ верхнего регистра.</span><span class="sxs-lookup"><span data-stu-id="02b23-1121">Converts the value of a Unicode character to its uppercase equivalent.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToUpper">
      <MemberSignature Language="C#" Value="public static char ToUpper (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char ToUpper(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.ToUpper(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUpper (c As Char) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char ToUpper(char c);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c"><span data-ttu-id="02b23-1122">Знак Юникода, который необходимо преобразовать.</span><span class="sxs-lookup"><span data-stu-id="02b23-1122">The Unicode character to convert.</span></span></param>
        <summary><span data-ttu-id="02b23-1123">Преобразует значение символа Юникода в эквивалентный символ верхнего регистра.</span><span class="sxs-lookup"><span data-stu-id="02b23-1123">Converts the value of a Unicode character to its uppercase equivalent.</span></span></summary>
        <returns><span data-ttu-id="02b23-1124">Эквивалент параметра <paramref name="c" /> в верхнем регистре или значение <paramref name="c" /> без изменений, если <paramref name="c" /> уже является буквой верхнего регистра, не имеет эквивалента в верхнем регистре или не является буквой алфавита.</span><span class="sxs-lookup"><span data-stu-id="02b23-1124">The uppercase equivalent of <paramref name="c" />, or the unchanged value of <paramref name="c" /> if <paramref name="c" /> is already uppercase, has no uppercase equivalent, or is not alphabetic.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02b23-1125">Правила использования регистров, поступают из текущего языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="02b23-1125">Casing rules are obtained from the current culture.</span></span>  
  
 <span data-ttu-id="02b23-1126">Используйте <xref:System.String.ToUpper%2A?displayProperty=nameWithType> для преобразования строки в верхний регистр.</span><span class="sxs-lookup"><span data-stu-id="02b23-1126">Use <xref:System.String.ToUpper%2A?displayProperty=nameWithType> to convert a string to uppercase.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="02b23-1127">Следующий пример преобразует каждый символ в виде массива в его эквивалент в верхнем регистре.</span><span class="sxs-lookup"><span data-stu-id="02b23-1127">The following example converts each character in an array to its uppercase equivalent.</span></span>  
  
 [!code-csharp[System.Char.ToUpper#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.char.toupper/cs/toupper1.cs#1)]
 [!code-vb[System.Char.ToUpper#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.char.toupper/vb/toupper1.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage">
          <para><span data-ttu-id="02b23-1128">Как описано в статье [советы и рекомендации по использованию строк](~/docs/standard/base-types/best-practices-strings.md), рекомендуется избегать вызова методов регистра знаков и регистр строки, которые заменяют значения по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="02b23-1128">As explained in [Best Practices for Using Strings](~/docs/standard/base-types/best-practices-strings.md), we recommend that you avoid calling character-casing and string-casing methods that substitute default values.</span></span> <span data-ttu-id="02b23-1129">Вместо этого следует вызывать методы, которые требуют явного указания параметров.</span><span class="sxs-lookup"><span data-stu-id="02b23-1129">Instead, you should call methods that require parameters to be explicitly specified.</span></span> <span data-ttu-id="02b23-1130">Чтобы преобразовать символ в верхний регистр, используя правила учета регистра текущего языка и региональных параметров, вызовите <see cref="M:System.Char.ToUpper(System.Char,System.Globalization.CultureInfo)" /> перегрузка метода со значением <see cref="P:System.Globalization.CultureInfo.CurrentCulture" /> для его <paramref name="culture" /> параметра.</span><span class="sxs-lookup"><span data-stu-id="02b23-1130">To convert a character to uppercase by using the casing conventions of the current culture, call the <see cref="M:System.Char.ToUpper(System.Char,System.Globalization.CultureInfo)" /> method overload with a value of <see cref="P:System.Globalization.CultureInfo.CurrentCulture" /> for its <paramref name="culture" /> parameter.</span></span></para>
        </block>
        <altmember cref="M:System.String.ToUpper" />
        <altmember cref="M:System.Char.ToLower(System.Char,System.Globalization.CultureInfo)" />
      </Docs>
    </Member>
    <Member MemberName="ToUpper">
      <MemberSignature Language="C#" Value="public static char ToUpper (char c, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char ToUpper(char c, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.ToUpper(System.Char,System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUpper (c As Char, culture As CultureInfo) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char ToUpper(char c, System::Globalization::CultureInfo ^ culture);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="c"><span data-ttu-id="02b23-1131">Знак Юникода, который необходимо преобразовать.</span><span class="sxs-lookup"><span data-stu-id="02b23-1131">The Unicode character to convert.</span></span></param>
        <param name="culture"><span data-ttu-id="02b23-1132">Объект, задающий правила определения регистра для языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="02b23-1132">An object that supplies culture-specific casing rules.</span></span></param>
        <summary><span data-ttu-id="02b23-1133">Преобразует значение указанного символа Юникода в его эквивалент в верхнем регистре, используя указанные сведения о форматировании, связанные с языком и региональными параметрами.</span><span class="sxs-lookup"><span data-stu-id="02b23-1133">Converts the value of a specified Unicode character to its uppercase equivalent using specified culture-specific formatting information.</span></span></summary>
        <returns><span data-ttu-id="02b23-1134">Эквивалент <paramref name="c" /> в верхнем регистре, измененный согласно <paramref name="culture" />, или значение <paramref name="c" /> без изменений, если <paramref name="c" /> уже является буквой верхнего регистра, не имеет эквивалента в верхнем регистре или не является буквой алфавита.</span><span class="sxs-lookup"><span data-stu-id="02b23-1134">The uppercase equivalent of <paramref name="c" />, modified according to <paramref name="culture" />, or the unchanged value of <paramref name="c" /> if <paramref name="c" /> is already uppercase, has no uppercase equivalent, or is not alphabetic.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02b23-1135">Используйте <xref:System.String.ToUpper%2A?displayProperty=nameWithType> для преобразования строки в верхний регистр.</span><span class="sxs-lookup"><span data-stu-id="02b23-1135">Use <xref:System.String.ToUpper%2A?displayProperty=nameWithType> to convert a string to uppercase.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="02b23-1136">Следующий пример преобразует каждый символ в виде массива в его эквивалент в верхнем регистре для региональных параметров en US, инвариантного языка и региональных параметров и языка и региональных параметров tr-TR.</span><span class="sxs-lookup"><span data-stu-id="02b23-1136">The following example converts each character in an array to its uppercase equivalent for the en-US culture, the invariant culture, and the tr-TR culture.</span></span> <span data-ttu-id="02b23-1137">В этом примере эквивалент каждой строчные буквы в верхнем регистре является одинаковым для всех языков, за исключением одного случая.</span><span class="sxs-lookup"><span data-stu-id="02b23-1137">In this example, the uppercase equivalent of each lowercase letter is identical for all cultures except for one case.</span></span> <span data-ttu-id="02b23-1138">Символ «i» нижнего регистра символов (U + 0069) преобразуется в «I» (U + 0049) в en US и инвариантные, но для «İ» (U + 0130) в культуре tr-TR.</span><span class="sxs-lookup"><span data-stu-id="02b23-1138">The lowercase "i" character (U+0069) converts to "I" (U+0049) in the en-US and invariant cultures, but to "İ" (U+0130) in the tr-TR culture.</span></span>  
  
 [!code-csharp[System.Char.ToUpper#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.char.toupper/cs/toupper5.cs#2)]
 [!code-vb[System.Char.ToUpper#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.char.toupper/vb/toupper5.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="02b23-1139">Свойство <paramref name="culture" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="02b23-1139"><paramref name="culture" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="P:System.Globalization.CultureInfo.CurrentCulture" />
        <altmember cref="M:System.String.ToUpper" />
        <altmember cref="M:System.Char.ToLower(System.Char,System.Globalization.CultureInfo)" />
      </Docs>
    </Member>
    <Member MemberName="ToUpperInvariant">
      <MemberSignature Language="C#" Value="public static char ToUpperInvariant (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char ToUpperInvariant(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.ToUpperInvariant(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUpperInvariant (c As Char) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char ToUpperInvariant(char c);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c"><span data-ttu-id="02b23-1140">Знак Юникода, который необходимо преобразовать.</span><span class="sxs-lookup"><span data-stu-id="02b23-1140">The Unicode character to convert.</span></span></param>
        <summary><span data-ttu-id="02b23-1141">Преобразует значение символа Юникода в его эквивалент в верхнем регистре, используя правила изменения регистра, связанные с инвариантным языком и региональными параметрами.</span><span class="sxs-lookup"><span data-stu-id="02b23-1141">Converts the value of a Unicode character to its uppercase equivalent using the casing rules of the invariant culture.</span></span></summary>
        <returns><span data-ttu-id="02b23-1142">Эквивалент параметра <paramref name="c" /> в верхнем регистре или значение <paramref name="c" /> без изменений, если <paramref name="c" /> уже является буквой верхнего регистра или не является буквой алфавита.</span><span class="sxs-lookup"><span data-stu-id="02b23-1142">The uppercase equivalent of the <paramref name="c" /> parameter, or the unchanged value of <paramref name="c" />, if <paramref name="c" /> is already uppercase or not alphabetic.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02b23-1143">Если приложение не зависит от текущего языка и региональных параметров и зависит от регистра символа, изменяемого предсказуемым способом, используйте <xref:System.Char.ToUpperInvariant%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="02b23-1143">If your application is unaffected by the current culture and depends on the case of a character changing in a predictable way, use the <xref:System.Char.ToUpperInvariant%2A> method.</span></span>  <span data-ttu-id="02b23-1144"><xref:System.Char.ToUpperInvariant%2A> Метод эквивалентен методу `ToUpper(Char, CultureInfo.InvariantCulture)`.</span><span class="sxs-lookup"><span data-stu-id="02b23-1144">The <xref:System.Char.ToUpperInvariant%2A> method is equivalent to `ToUpper(Char, CultureInfo.InvariantCulture)`.</span></span>  
  
 <span data-ttu-id="02b23-1145">Используйте <xref:System.String.ToUpperInvariant%2A?displayProperty=nameWithType> для преобразования строки в верхний регистр.</span><span class="sxs-lookup"><span data-stu-id="02b23-1145">Use <xref:System.String.ToUpperInvariant%2A?displayProperty=nameWithType> to convert a string to uppercase.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.String.ToUpper" />
        <altmember cref="M:System.Char.ToUpper(System.Char,System.Globalization.CultureInfo)" />
        <altmember cref="P:System.Globalization.CultureInfo.InvariantCulture" />
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (string s, out char result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(string s, [out] char&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.TryParse(System.String,System.Char@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As String, ByRef result As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(System::String ^ s, [Runtime::InteropServices::Out] char % result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="result" Type="System.Char&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="02b23-1146">Строка, содержащая один символ, или <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="02b23-1146">A string that contains a single character, or <see langword="null" />.</span></span></param>
        <param name="result"><span data-ttu-id="02b23-1147">По возвращении из этого метода содержит символ Юникода, эквивалентный единственному символу в <c>s</c>, если преобразование выполнено успешно, или значение без изменений, если преобразование выполнить не удалось.</span><span class="sxs-lookup"><span data-stu-id="02b23-1147">When this method returns, contains a Unicode character equivalent to the sole character in <c>s</c>, if the conversion succeeded, or an undefined value if the conversion failed.</span></span> <span data-ttu-id="02b23-1148">Преобразование не удается выполнить, если параметр <c>s</c> имеет значение <see langword="null" /> или длина параметра <c>s</c> не равна 1.</span><span class="sxs-lookup"><span data-stu-id="02b23-1148">The conversion fails if the <c>s</c> parameter is <see langword="null" /> or the length of <c>s</c> is not 1.</span></span> <span data-ttu-id="02b23-1149">Этот параметр передается неинициализированным.</span><span class="sxs-lookup"><span data-stu-id="02b23-1149">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="02b23-1150">Преобразует значение указанной строки в эквивалентный символ Юникода.</span><span class="sxs-lookup"><span data-stu-id="02b23-1150">Converts the value of the specified string to its equivalent Unicode character.</span></span> <span data-ttu-id="02b23-1151">Возвращает код, позволяющий определить, успешно ли выполнено преобразование.</span><span class="sxs-lookup"><span data-stu-id="02b23-1151">A return code indicates whether the conversion succeeded or failed.</span></span></summary>
        <returns>
          <span data-ttu-id="02b23-1152">Значение <see langword="true" />, если параметр <paramref name="s" /> успешно преобразован, в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="02b23-1152"><see langword="true" /> if the <paramref name="s" /> parameter was converted successfully; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02b23-1153"><xref:System.Char.TryParse%2A> Метод аналогичен <xref:System.Char.Parse%2A> метода, за исключением <xref:System.Char.TryParse%2A> метод не вызывает исключение при сбое преобразования.</span><span class="sxs-lookup"><span data-stu-id="02b23-1153">The <xref:System.Char.TryParse%2A> method is like the <xref:System.Char.Parse%2A> method, except the <xref:System.Char.TryParse%2A> method does not throw an exception if the conversion fails.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="02b23-1154">В следующем примере кода демонстрируются перегрузки <xref:System.Char.TryParse%2A> метод для базовых типов и <xref:System.DateTime.TryParseExact%2A> метод <xref:System.DateTime> базовый тип.</span><span class="sxs-lookup"><span data-stu-id="02b23-1154">The following code example demonstrates overloads of the <xref:System.Char.TryParse%2A> method for several base types, and the <xref:System.DateTime.TryParseExact%2A> method for the <xref:System.DateTime> base type.</span></span>  
  
 [!code-cpp[T.TryParse#1](~/samples/snippets/cpp/VS_Snippets_CLR/T.TryParse/CPP/tp.cpp#1)]
 [!code-csharp[T.TryParse#1](~/samples/snippets/csharp/VS_Snippets_CLR/T.TryParse/CS/tp.cs#1)]
 [!code-vb[T.TryParse#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/T.TryParse/VB/tp.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Char.Parse(System.String)" />
        <altmember cref="M:System.Char.ToString" />
      </Docs>
    </Member>
  </Members>
</Type>