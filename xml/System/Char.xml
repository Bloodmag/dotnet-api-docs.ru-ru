<Type Name="Char" FullName="System.Char">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="7df9951623e69508ef97ce060bbd734eb7c0d11c" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37481993" />
  </Metadata>
  <TypeSignature Language="C#" Value="public struct Char : IComparable, IComparable&lt;char&gt;, IConvertible, IEquatable&lt;char&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable sealed beforefieldinit char extends System.ValueType implements class System.IComparable, class System.IComparable`1&lt;char&gt;, class System.IConvertible, class System.IEquatable`1&lt;char&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Char" />
  <TypeSignature Language="VB.NET" Value="Public Structure Char&#xA;Implements IComparable, IComparable(Of Char), IConvertible, IEquatable(Of Char)" />
  <TypeSignature Language="C++ CLI" Value="public value class Char : IComparable, IComparable&lt;char&gt;, IConvertible, IEquatable&lt;char&gt;" />
  <TypeSignature Language="F#" Value="type char = struct&#xA;    interface IConvertible" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IComparable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IComparable&lt;System.Char&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IConvertible</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Char&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="bef81-101">Represents a character as a UTF-16 code unit.</span>
      <span class="sxs-lookup">
        <span data-stu-id="bef81-101">Represents a character as a UTF-16 code unit.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bef81-102">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] Использует <xref:System.Char> структуры для представления символа Юникода.</span><span class="sxs-lookup"><span data-stu-id="bef81-102">The [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] uses the <xref:System.Char> structure to represent a Unicode character.</span></span> <span data-ttu-id="bef81-103">Стандарт Юникод определяет каждый символ Юникода с уникальным 21-Битовая скалярным числом, называемым кодовую точку, а также определяет кодировки UTF-16, указывающее кодовую точку разных способах кодировки в последовательность одного или нескольких 16-разрядных значений.</span><span class="sxs-lookup"><span data-stu-id="bef81-103">The Unicode Standard identifies each Unicode character with a unique 21-bit scalar number called a code point, and defines the UTF-16 encoding form that specifies how a code point is encoded into a sequence of one or more 16-bit values.</span></span> <span data-ttu-id="bef81-104">Каждый 16-разрядное значение в диапазоне от шестнадцатеричных 0x0000 до 0xFFFF и хранится в <xref:System.Char> структуры.</span><span class="sxs-lookup"><span data-stu-id="bef81-104">Each 16-bit value ranges from hexadecimal 0x0000 through 0xFFFF and is stored in a <xref:System.Char> structure.</span></span>  <span data-ttu-id="bef81-105">Значение <xref:System.Char> объекта является его 16-разрядное числовое (порядковое) значение.</span><span class="sxs-lookup"><span data-stu-id="bef81-105">The value of a <xref:System.Char> object is its 16-bit numeric (ordinal) value.</span></span>  
  
 <span data-ttu-id="bef81-106">Следующие разделы установить зависимость между <xref:System.Char> объекта и символ и рассматриваются некоторые общие задачи, выполняемые с <xref:System.Char> экземпляров.</span><span class="sxs-lookup"><span data-stu-id="bef81-106">The following sections examine the relationship between a <xref:System.Char> object and a character and discuss some common tasks performed with <xref:System.Char> instances.</span></span>  
  
 <span data-ttu-id="bef81-107">[Объекты типа char, символов Юникода и строки](#Relationship) </span><span class="sxs-lookup"><span data-stu-id="bef81-107">[Char objects, Unicode characters, and strings](#Relationship) </span></span>  
 <span data-ttu-id="bef81-108">[Символы и категории символов](#Categories) </span><span class="sxs-lookup"><span data-stu-id="bef81-108">[Characters and character categories](#Categories) </span></span>  
 <span data-ttu-id="bef81-109">[Символы и текстовых элементов](#Elements) </span><span class="sxs-lookup"><span data-stu-id="bef81-109">[Characters and text elements](#Elements) </span></span>  
 <span data-ttu-id="bef81-110">[Стандартные операции](#Operations) </span><span class="sxs-lookup"><span data-stu-id="bef81-110">[Common operations](#Operations) </span></span>  
 [<span data-ttu-id="bef81-111">Значения Char и взаимодействия</span><span class="sxs-lookup"><span data-stu-id="bef81-111">Char values and interop</span></span>](#Interop)  
  
<a name="Relationship"></a>   
## <a name="char-objects-unicode-characters-and-strings"></a><span data-ttu-id="bef81-112">Объекты типа char, символов Юникода и строки</span><span class="sxs-lookup"><span data-stu-id="bef81-112">Char objects, Unicode characters, and strings</span></span>  
 <span data-ttu-id="bef81-113">Объект <xref:System.String> объект является упорядоченной коллекции <xref:System.Char> структур, представляющих строку текста.</span><span class="sxs-lookup"><span data-stu-id="bef81-113">A <xref:System.String> object is a sequential collection of <xref:System.Char> structures that represents a string of text.</span></span> <span data-ttu-id="bef81-114">Большинство символов Юникода могут быть представлены одним <xref:System.Char> объекта, но знак, который кодируется как базовые символы, суррогатной пары и/или объединения последовательность символов представляется с помощью нескольких <xref:System.Char> объектов.</span><span class="sxs-lookup"><span data-stu-id="bef81-114">Most Unicode characters can be represented by a single <xref:System.Char> object, but a character that is encoded as a base character, surrogate pair, and/or combining character sequence is represented by multiple <xref:System.Char> objects.</span></span> <span data-ttu-id="bef81-115">По этой причине <xref:System.Char> структуре <xref:System.String> объекта не обязательно эквивалентен одного символа Юникода.</span><span class="sxs-lookup"><span data-stu-id="bef81-115">For this reason, a <xref:System.Char> structure in a <xref:System.String> object is not necessarily equivalent to a single Unicode character.</span></span>  
  
 <span data-ttu-id="bef81-116">Несколько блоков 16-разрядного кода используются для представления одиночные символы Юникода в следующих случаях:</span><span class="sxs-lookup"><span data-stu-id="bef81-116">Multiple 16-bit code units are used to represent single Unicode characters in the following cases:</span></span>  
  
-   <span data-ttu-id="bef81-117">Глифы, которые может состоять из одного символа, или базового символа, за которыми следует один или несколько символов объединения.</span><span class="sxs-lookup"><span data-stu-id="bef81-117">Glyphs, which may consist of a single character or of a base character followed by one or more combining characters.</span></span> <span data-ttu-id="bef81-118">Например, символ д представлен объект <xref:System.Char> объекта, код которого единица измерения — U + 0061 следуют объект <xref:System.Char> объект которого единицы кода, U + 0308.</span><span class="sxs-lookup"><span data-stu-id="bef81-118">For example, the character ä is represented by a <xref:System.Char> object whose code unit is U+0061 followed by a <xref:System.Char> object whose code unit is U+0308.</span></span> <span data-ttu-id="bef81-119">(Знаку также определяются один объект <xref:System.Char> объект с единицы кода типа U + 00E4.) В следующем примере показано, что знаку состоит из двух <xref:System.Char> объектов.</span><span class="sxs-lookup"><span data-stu-id="bef81-119">(The character ä can also be defined by a single <xref:System.Char> object that has a code unit of U+00E4.) The following example illustrates that the character ä consists of two <xref:System.Char> objects.</span></span>  
  
     [!code-csharp[System.Char.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.char.class/cs/grapheme1.cs#1)]
     [!code-vb[System.Char.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.char.class/vb/grapheme1.vb#1)]  
  
-   <span data-ttu-id="bef81-120">Символы вне многоязыковую плоскость Юникода Basic (BMP).</span><span class="sxs-lookup"><span data-stu-id="bef81-120">Characters outside the Unicode Basic Multilingual Plane (BMP).</span></span> <span data-ttu-id="bef81-121">Юникод поддерживает шестнадцать плоскостей помимо BMP, который представляет плоскость 0.</span><span class="sxs-lookup"><span data-stu-id="bef81-121">Unicode supports sixteen planes in addition to the BMP, which represents plane 0.</span></span> <span data-ttu-id="bef81-122">Кодовую точку Юникода в UTF-32 представляется значением 21-Битовая, которое содержит плоскость.</span><span class="sxs-lookup"><span data-stu-id="bef81-122">A Unicode code point is represented in UTF-32 by a 21-bit value that includes the plane.</span></span> <span data-ttu-id="bef81-123">Например U + 1D160 представляет символ НОТЫ ВОСЬМОЙ символ.</span><span class="sxs-lookup"><span data-stu-id="bef81-123">For example, U+1D160 represents the MUSICAL SYMBOL EIGHTH NOTE character.</span></span> <span data-ttu-id="bef81-124">Поскольку кодировка UTF-16 имеет только 16 бит, символы за пределами BMP, представляются суррогатные пары в кодировке UTF-16.</span><span class="sxs-lookup"><span data-stu-id="bef81-124">Because UTF-16 encoding has only 16 bits, characters outside the BMP are represented by surrogate pairs in UTF-16.</span></span> <span data-ttu-id="bef81-125">В следующем примере показано, что U + D834 U + DD60 эквивалент U + 1D160, знак НОТЫ ВОСЬМОЙ символ UTF-32.</span><span class="sxs-lookup"><span data-stu-id="bef81-125">The following example illustrates that the UTF-32 equivalent of U+1D160, the MUSICAL SYMBOL EIGHTH NOTE character, is U+D834 U+DD60.</span></span> <span data-ttu-id="bef81-126">U + D834 является старшим символом-заместителем; высокий уровень суррогаты в диапазоне от U + D800 до U + DBFF.</span><span class="sxs-lookup"><span data-stu-id="bef81-126">U+D834 is the high surrogate; high surrogates range from U+D800 through U+DBFF.</span></span> <span data-ttu-id="bef81-127">U + DD60 является меньшим заменяющим значением; низкий суррогаты в диапазоне от U + DC00 до U + DFFF.</span><span class="sxs-lookup"><span data-stu-id="bef81-127">U+DD60 is the low surrogate; low surrogates range from U+DC00 through U+DFFF.</span></span>  
  
     [!code-csharp[System.Char.Class#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.char.class/cs/surrogate1.cs#2)]
     [!code-vb[System.Char.Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.char.class/vb/surrogate1.vb#2)]  
  
<a name="Categories"></a>   
## <a name="characters-and-character-categories"></a><span data-ttu-id="bef81-128">Символы и категории символов</span><span class="sxs-lookup"><span data-stu-id="bef81-128">Characters and character categories</span></span>  
 <span data-ttu-id="bef81-129">Каждый символ Юникода или допустимым суррогатная пара принадлежит к категории Юникода.</span><span class="sxs-lookup"><span data-stu-id="bef81-129">Each Unicode character or valid surrogate pair belongs to a Unicode category.</span></span> <span data-ttu-id="bef81-130">В .NET Framework, категории Юникода, представляются членами <xref:System.Globalization.UnicodeCategory> перечисления и содержат значения, такие как <xref:System.Globalization.UnicodeCategory.CurrencySymbol?displayProperty=nameWithType>, <xref:System.Globalization.UnicodeCategory.LowercaseLetter?displayProperty=nameWithType>, и <xref:System.Globalization.UnicodeCategory.SpaceSeparator?displayProperty=nameWithType>, например.</span><span class="sxs-lookup"><span data-stu-id="bef81-130">In the .NET Framework, Unicode categories are represented by members of the <xref:System.Globalization.UnicodeCategory> enumeration and include values such as <xref:System.Globalization.UnicodeCategory.CurrencySymbol?displayProperty=nameWithType>, <xref:System.Globalization.UnicodeCategory.LowercaseLetter?displayProperty=nameWithType>, and <xref:System.Globalization.UnicodeCategory.SpaceSeparator?displayProperty=nameWithType>, for example.</span></span>  
  
 <span data-ttu-id="bef81-131">Чтобы определить категорию Юникода для символа, следует вызвать <xref:System.Char.GetUnicodeCategory%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="bef81-131">To determine the Unicode category of a character, you call the <xref:System.Char.GetUnicodeCategory%2A> method.</span></span> <span data-ttu-id="bef81-132">Например, в следующем примере вызывается <xref:System.Char.GetUnicodeCategory%2A> для отображения категорию Юникода каждого символа в строке.</span><span class="sxs-lookup"><span data-stu-id="bef81-132">For example, the following example calls the <xref:System.Char.GetUnicodeCategory%2A> to display the Unicode category of each character in a string.</span></span>  
  
 [!code-csharp[System.Char.Class#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.char.class/cs/GetUnicodeCategory3.cs#6)]
 [!code-vb[System.Char.Class#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.char.class/vb/GetUnicodeCategory3.vb#6)]  
  
 <span data-ttu-id="bef81-133">На внутреннем уровне для символы вне диапазона ASCII (U + 0000 до U + 00FF) <xref:System.Char.GetUnicodeCategory%2A> метод зависит от категории Юникода, о которых сообщает <xref:System.Globalization.CharUnicodeInfo> класса.</span><span class="sxs-lookup"><span data-stu-id="bef81-133">Internally, for characters outside the ASCII range (U+0000 through U+00FF), the <xref:System.Char.GetUnicodeCategory%2A> method depends on Unicode categories reported by the <xref:System.Globalization.CharUnicodeInfo> class.</span></span> <span data-ttu-id="bef81-134">Начиная с [!INCLUDE[net_v462](~/includes/net-v462-md.md)], символы Юникода классифицируются на основе [The Unicode Standard, Version 8.0.0](https://www.unicode.org/versions/Unicode8.0.0/).</span><span class="sxs-lookup"><span data-stu-id="bef81-134">Starting with the [!INCLUDE[net_v462](~/includes/net-v462-md.md)], Unicode characters are classified based on [The Unicode Standard, Version 8.0.0](https://www.unicode.org/versions/Unicode8.0.0/).</span></span> <span data-ttu-id="bef81-135">В версиях .NET Framework с [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] для [!INCLUDE[net_v461](~/includes/net-v461-md.md)], они классифицируются на основе [стандарте Юникода, версия 6.3.0](https://www.unicode.org/versions/Unicode6.3.0/).</span><span class="sxs-lookup"><span data-stu-id="bef81-135">In versions of the .NET Framework from the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] to  the [!INCLUDE[net_v461](~/includes/net-v461-md.md)], they are classified based on [The Unicode Standard, Version 6.3.0](https://www.unicode.org/versions/Unicode6.3.0/).</span></span>  
  
<a name="Elements"></a>   
## <a name="characters-and-text-elements"></a><span data-ttu-id="bef81-136">Символы и текстовых элементов</span><span class="sxs-lookup"><span data-stu-id="bef81-136">Characters and text elements</span></span>  
 <span data-ttu-id="bef81-137">Так как один символ может быть представлена несколько <xref:System.Char> объекты, не всегда следует работать с отдельными <xref:System.Char> объектов.</span><span class="sxs-lookup"><span data-stu-id="bef81-137">Because a single character can be represented by multiple <xref:System.Char> objects, it is not always meaningful to work with individual <xref:System.Char> objects.</span></span> <span data-ttu-id="bef81-138">Например в следующем примере преобразуется кодовые позиции Юникода, представляющих Aegean цифры 0 – 9 для частей кода в кодировке UTF-16.</span><span class="sxs-lookup"><span data-stu-id="bef81-138">For instance, the following example converts the Unicode code points that represent the Aegean numbers zero through 9 to UTF-16 encoded code units.</span></span> <span data-ttu-id="bef81-139">Так как он ошибочно считается <xref:System.Char> объектов с символами, ошибочно сообщает, что результирующая строка содержит 20 символов.</span><span class="sxs-lookup"><span data-stu-id="bef81-139">Because it erroneously equates <xref:System.Char> objects with characters, it inaccurately reports that the resulting string has 20 characters.</span></span>  
  
 [!code-csharp[System.Char.Class#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.char.class/cs/textelements2.cs#3)]
 [!code-vb[System.Char.Class#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.char.class/vb/textelements2.vb#3)]  
  
 <span data-ttu-id="bef81-140">Можно сделать следующую команду, чтобы избежать предположение, <xref:System.Char> представляет один символ.</span><span class="sxs-lookup"><span data-stu-id="bef81-140">You can do the following to avoid the assumption that a <xref:System.Char> object represents a single character.</span></span>  
  
-   <span data-ttu-id="bef81-141">Вы можете работать с <xref:System.String> объект целиком, а не для работы с отдельным ее символам, чтобы представлять и анализировать лингвистического содержимого.</span><span class="sxs-lookup"><span data-stu-id="bef81-141">You can work with a <xref:System.String> object in its entirety instead of working with its individual characters to represent and analyze linguistic content.</span></span>  
  
-   <span data-ttu-id="bef81-142">Можно использовать <xref:System.Globalization.StringInfo> класс для работы с элементами текста вместо отдельных <xref:System.Char> объектов.</span><span class="sxs-lookup"><span data-stu-id="bef81-142">You can use the <xref:System.Globalization.StringInfo> class to work with text elements instead of individual <xref:System.Char> objects.</span></span> <span data-ttu-id="bef81-143">В следующем примере используется <xref:System.Globalization.StringInfo> объект для подсчета количества элементов текста в строку, состоящую эгейский номера от нуля до девяти.</span><span class="sxs-lookup"><span data-stu-id="bef81-143">The following example uses the <xref:System.Globalization.StringInfo> object to count the number of text elements in a string that consists of the Aegean numbers zero through nine.</span></span> <span data-ttu-id="bef81-144">Так как он считает, что суррогатную пару один символ, он правильно возвращает, что строка содержит десять символов.</span><span class="sxs-lookup"><span data-stu-id="bef81-144">Because it considers a surrogate pair a single character, it correctly reports that the string contains ten characters.</span></span>  
  
     [!code-csharp[System.Char.Class#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.char.class/cs/textelements2a.cs#4)]
     [!code-vb[System.Char.Class#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.char.class/vb/textelements2a.vb#4)]  
  
-   <span data-ttu-id="bef81-145">Если строка содержит базовый символ, который имеет один или несколько несамостоятельных символов, можно вызвать <xref:System.String.Normalize%2A?displayProperty=nameWithType> метод преобразования подстроки в единый блок кода в кодировке UTF-16.</span><span class="sxs-lookup"><span data-stu-id="bef81-145">If a string contains a base character that has one or more combining characters, you can call the <xref:System.String.Normalize%2A?displayProperty=nameWithType> method to convert the substring to a single UTF-16 encoded code unit.</span></span> <span data-ttu-id="bef81-146">В следующем примере вызывается <xref:System.String.Normalize%2A?displayProperty=nameWithType> метод для преобразования базового символа 0061 (латинскую букву A) и несамостоятельный знак U + 0308 (ОБЪЕДИНЕНИЕ DIAERESIS) U + 00E4 (LATIN НЕБОЛЬШОЙ буквы с DIAERESIS).</span><span class="sxs-lookup"><span data-stu-id="bef81-146">The following example calls the <xref:System.String.Normalize%2A?displayProperty=nameWithType> method to convert the base character U+0061 (LATIN SMALL LETTER A) and combining character U+0308 (COMBINING DIAERESIS) to U+00E4 (LATIN SMALL LETTER A WITH DIAERESIS).</span></span>  
  
     [!code-csharp[System.Char.Class#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.char.class/cs/normalized.cs#5)]
     [!code-vb[System.Char.Class#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.char.class/vb/normalized.vb#5)]  
  
<a name="Operations"></a>   
## <a name="common-operations"></a><span data-ttu-id="bef81-147">Стандартные операции</span><span class="sxs-lookup"><span data-stu-id="bef81-147">Common operations</span></span>  
 <span data-ttu-id="bef81-148"><xref:System.Char> Структура предоставляет методы для сравнения <xref:System.Char> объектов, преобразуйте значение параметра текущего <xref:System.Char> объект в объект другого типа и определить категорию Юникода для <xref:System.Char> объекта:</span><span class="sxs-lookup"><span data-stu-id="bef81-148">The <xref:System.Char> structure provides methods to compare <xref:System.Char> objects, convert the value of the current <xref:System.Char> object to an object of another type, and determine the Unicode category of a <xref:System.Char> object:</span></span>  
  
|<span data-ttu-id="bef81-149">Действие</span><span class="sxs-lookup"><span data-stu-id="bef81-149">To do this</span></span>|<span data-ttu-id="bef81-150">Используйте эти `System.Char` методы</span><span class="sxs-lookup"><span data-stu-id="bef81-150">Use these `System.Char` methods</span></span>|  
|----------------|-------------------------------------|  
|<span data-ttu-id="bef81-151">Сравнение <xref:System.Char> объектов</span><span class="sxs-lookup"><span data-stu-id="bef81-151">Compare <xref:System.Char> objects</span></span>|<span data-ttu-id="bef81-152"><xref:System.Char.CompareTo%2A> и <xref:System.Char.Equals%2A>.</span><span class="sxs-lookup"><span data-stu-id="bef81-152"><xref:System.Char.CompareTo%2A> and <xref:System.Char.Equals%2A></span></span>|  
|<span data-ttu-id="bef81-153">Преобразовать кодовую точку в строку</span><span class="sxs-lookup"><span data-stu-id="bef81-153">Convert a code point to a string</span></span>|<xref:System.Char.ConvertFromUtf32%2A>|  
|<span data-ttu-id="bef81-154">Преобразовать <xref:System.Char> объекта или суррогатной пары <xref:System.Char> объектов кодовую точку</span><span class="sxs-lookup"><span data-stu-id="bef81-154">Convert a <xref:System.Char> object or a surrogate pair of <xref:System.Char> objects to a code point</span></span>|<span data-ttu-id="bef81-155">Для одного символа: <xref:System.Convert.ToInt32%28System.Char%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="bef81-155">For a single character: <xref:System.Convert.ToInt32%28System.Char%29?displayProperty=nameWithType></span></span><br /><br /> <span data-ttu-id="bef81-156">Для пары символов-заместителей или символ в строке: <xref:System.Char.ConvertToUtf32%2A?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="bef81-156">For a surrogate pair or a character in a string: <xref:System.Char.ConvertToUtf32%2A?displayProperty=nameWithType></span></span>|  
|<span data-ttu-id="bef81-157">Получить категорию Юникода для символа</span><span class="sxs-lookup"><span data-stu-id="bef81-157">Get the Unicode category of a character</span></span>|<xref:System.Char.GetUnicodeCategory%2A>|  
|<span data-ttu-id="bef81-158">Определить, является ли символ в определенной категории Юникода, например цифры, буквы, знаки препинания, управляющий символ и т. д</span><span class="sxs-lookup"><span data-stu-id="bef81-158">Determine whether a character is in a particular Unicode category such as digit, letter, punctuation, control character, and so on</span></span>|<span data-ttu-id="bef81-159"><xref:System.Char.IsControl%2A>, <xref:System.Char.IsDigit%2A>, <xref:System.Char.IsHighSurrogate%2A>, <xref:System.Char.IsLetter%2A>, <xref:System.Char.IsLetterOrDigit%2A>, <xref:System.Char.IsLower%2A>, <xref:System.Char.IsLowSurrogate%2A>, <xref:System.Char.IsNumber%2A>, <xref:System.Char.IsPunctuation%2A>, <xref:System.Char.IsSeparator%2A>, <xref:System.Char.IsSurrogate%2A>, <xref:System.Char.IsSurrogatePair%2A>, <xref:System.Char.IsSymbol%2A>, <xref:System.Char.IsUpper%2A>, и <xref:System.Char.IsWhiteSpace%2A></span><span class="sxs-lookup"><span data-stu-id="bef81-159"><xref:System.Char.IsControl%2A>, <xref:System.Char.IsDigit%2A>, <xref:System.Char.IsHighSurrogate%2A>, <xref:System.Char.IsLetter%2A>, <xref:System.Char.IsLetterOrDigit%2A>, <xref:System.Char.IsLower%2A>, <xref:System.Char.IsLowSurrogate%2A>, <xref:System.Char.IsNumber%2A>, <xref:System.Char.IsPunctuation%2A>, <xref:System.Char.IsSeparator%2A>, <xref:System.Char.IsSurrogate%2A>, <xref:System.Char.IsSurrogatePair%2A>, <xref:System.Char.IsSymbol%2A>, <xref:System.Char.IsUpper%2A>, and <xref:System.Char.IsWhiteSpace%2A></span></span>|  
|<span data-ttu-id="bef81-160">Преобразовать <xref:System.Char> объект, который представляет число с типом числового значения</span><span class="sxs-lookup"><span data-stu-id="bef81-160">Convert a <xref:System.Char> object that represents a number to a numeric value type</span></span>|<xref:System.Char.GetNumericValue%2A>|  
|<span data-ttu-id="bef81-161">Преобразует символ в строке в <xref:System.Char> объекта</span><span class="sxs-lookup"><span data-stu-id="bef81-161">Convert a character in a string into a <xref:System.Char> object</span></span>|<span data-ttu-id="bef81-162"><xref:System.Char.Parse%2A> и <xref:System.Char.TryParse%2A>.</span><span class="sxs-lookup"><span data-stu-id="bef81-162"><xref:System.Char.Parse%2A> and <xref:System.Char.TryParse%2A></span></span>|  
|<span data-ttu-id="bef81-163">Преобразовать <xref:System.Char> объект <xref:System.String> объекта</span><span class="sxs-lookup"><span data-stu-id="bef81-163">Convert a <xref:System.Char> object to a <xref:System.String> object</span></span>|<xref:System.Char.ToString%2A>|  
|<span data-ttu-id="bef81-164">Изменение регистра <xref:System.Char> объекта</span><span class="sxs-lookup"><span data-stu-id="bef81-164">Change the case of a <xref:System.Char> object</span></span>|<span data-ttu-id="bef81-165"><xref:System.Char.ToLower%2A>, <xref:System.Char.ToLowerInvariant%2A>, <xref:System.Char.ToUpper%2A> и <xref:System.Char.ToUpperInvariant%2A></span><span class="sxs-lookup"><span data-stu-id="bef81-165"><xref:System.Char.ToLower%2A>, <xref:System.Char.ToLowerInvariant%2A>, <xref:System.Char.ToUpper%2A>, and <xref:System.Char.ToUpperInvariant%2A></span></span>|  
  
<a name="Interop"></a>   
## <a name="char-values-and-interop"></a><span data-ttu-id="bef81-166">Значения Char и взаимодействия</span><span class="sxs-lookup"><span data-stu-id="bef81-166">Char values and interop</span></span>  
<span data-ttu-id="bef81-167">Когда управляемый <xref:System.Char> тип, который представляется как единица кода в кодировке Юникода UTF-16, передается в неуправляемый код, упаковщик взаимодействия преобразует символ в кодировку ANSI по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="bef81-167">When a managed <xref:System.Char> type, which is represented as a Unicode UTF-16 encoded code unit, is passed to unmanaged code, the interop marshaler converts the character set to ANSI by default.</span></span> <span data-ttu-id="bef81-168">Можно применить <xref:System.Runtime.InteropServices.DllImportAttribute> атрибут платформу вызова неуправляемого кода и <xref:System.Runtime.InteropServices.StructLayoutAttribute> атрибут объявления COM-взаимодействия для элемента управления, какие кодировки маршалированного <xref:System.Char> типа.</span><span class="sxs-lookup"><span data-stu-id="bef81-168">You can apply the <xref:System.Runtime.InteropServices.DllImportAttribute> attribute to platform invoke declarations and the <xref:System.Runtime.InteropServices.StructLayoutAttribute> attribute to a COM interop declaration to control which character set a marshaled <xref:System.Char> type uses.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bef81-169">В следующем примере кода показаны некоторые из методов в <xref:System.Char>.</span><span class="sxs-lookup"><span data-stu-id="bef81-169">The following code example demonstrates some of the methods in <xref:System.Char>.</span></span>  
  
 [!code-cpp[System.Char &#91;Type Level&#93;#23](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char [Type Level]/CPP/charstructure.cpp#23)]
 [!code-csharp[System.Char &#91;Type Level&#93;#23](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char [Type Level]/CS/charstructure.cs#23)]
 [!code-vb[System.Char &#91;Type Level&#93;#23](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char [Type Level]/VB/charstructure.vb#23)]  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="bef81-170">Все члены этого типа являются потокобезопасными.</span>
      <span class="sxs-lookup">
        <span data-stu-id="bef81-170">All members of this type are thread safe.</span>
      </span>
      <span data-ttu-id="bef81-171">Члены, которые могут изменить состояние экземпляра, в действительности возвращают новый экземпляр инициализируется с новым значением.</span>
      <span class="sxs-lookup">
        <span data-stu-id="bef81-171">Members that appear to modify instance state actually return a new instance initialized with the new value.</span>
      </span>
      <span data-ttu-id="bef81-172">Как с любым другим типом, чтение и запись к общей переменной, которая содержит экземпляр этого типа должны быть защищены функцией блокировки для обеспечения потокобезопасности.</span>
      <span class="sxs-lookup">
        <span data-stu-id="bef81-172">As with any other type, reading and writing to a shared variable that contains an instance of this type must be protected by a lock to guarantee thread safety.</span>
      </span>
    </threadsafe>
    <altmember cref="T:System.IComparable" />
    <altmember cref="T:System.IConvertible" />
    <altmember cref="T:System.String" />
  </Docs>
  <Members>
    <MemberGroup MemberName="CompareTo">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="bef81-173">Compares this instance to a specified object or value type, and indicates whether this instance precedes, follows, or appears in the same position in the sort order as the specified object or value type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-173">Compares this instance to a specified object or value type, and indicates whether this instance precedes, follows, or appears in the same position in the sort order as the specified object or value type.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.CompareTo(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (value As Char) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(char value);" />
      <MemberSignature Language="F#" Value="abstract member CompareTo : char -&gt; int&#xA;override this.CompareTo : char -&gt; int" Usage="char.CompareTo value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable`1.CompareTo(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="bef81-174">A <see cref="T:System.Char" /> object to compare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-174">A <see cref="T:System.Char" /> object to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bef81-175">Compares this instance to a specified <see cref="T:System.Char" /> object and indicates whether this instance precedes, follows, or appears in the same position in the sort order as the specified <see cref="T:System.Char" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-175">Compares this instance to a specified <see cref="T:System.Char" /> object and indicates whether this instance precedes, follows, or appears in the same position in the sort order as the specified <see cref="T:System.Char" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bef81-176">A signed number indicating the position of this instance in the sort order in relation to the <paramref name="value" /> parameter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-176">A signed number indicating the position of this instance in the sort order in relation to the <paramref name="value" /> parameter.</span>
          </span>
          <span data-ttu-id="bef81-177">
            <list type="table">
              <listheader>
                <term> Return Value  </term>
                <description> Description  </description>
              </listheader>
              <item>
                <term> Less than zero  </term>
                <description> This instance precedes <paramref name="value" />.  </description>
              </item>
              <item>
                <term> Zero  </term>
                <description> This instance has the same position in the sort order as <paramref name="value" />.  </description>
              </item>
              <item>
                <term> Greater than zero  </term>
                <description> This instance follows <paramref name="value" />.  </description>
              </item>
            </list>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-177">
              <list type="table">
                <listheader>
                  <term> Return Value  </term>
                  <description> Description  </description>
                </listheader>
                <item>
                  <term> Less than zero  </term>
                  <description> This instance precedes <paramref name="value" />.  </description>
                </item>
                <item>
                  <term> Zero  </term>
                  <description> This instance has the same position in the sort order as <paramref name="value" />.  </description>
                </item>
                <item>
                  <term> Greater than zero  </term>
                  <description> This instance follows <paramref name="value" />.  </description>
                </item>
              </list>
            </span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bef81-178">Этот метод реализует <xref:System.IComparable%601?displayProperty=nameWithType> интерфейс, а также выполняет немного лучше, чем <xref:System.Char.CompareTo%2A?displayProperty=nameWithType> метод так, как его не нужно выполнять преобразование `value` параметр объекта.</span><span class="sxs-lookup"><span data-stu-id="bef81-178">This method implements the <xref:System.IComparable%601?displayProperty=nameWithType> interface and performs slightly better than the <xref:System.Char.CompareTo%2A?displayProperty=nameWithType> method because it does not have to convert the `value` parameter to an object.</span></span>  
  
 <span data-ttu-id="bef81-179">При сравнении этот метод основан на закодированные значения этого экземпляра и `value`, не лексикографических характеристиках.</span><span class="sxs-lookup"><span data-stu-id="bef81-179">The comparison performed by this method is based on the encoded values of this instance and `value`, not their lexicographical characteristics.</span></span>  
  
 <span data-ttu-id="bef81-180">Если <xref:System.Char.CompareTo%2A> тип параметра метода имеет меньшее число битов (является более коротким) чем тип экземпляра, некоторые языки программирования выполняют неявное расширяющее преобразование, которое преобразует значение параметра в значение с большим числом битов.</span><span class="sxs-lookup"><span data-stu-id="bef81-180">If the <xref:System.Char.CompareTo%2A> method parameter type has fewer bits (is narrower) than the instance type, some programming languages perform an implicit widening conversion that transforms the value of the parameter into a value with more bits.</span></span>  
  
 <span data-ttu-id="bef81-181">Предположим, например, тип экземпляра является <xref:System.Int32> и тип параметра является <xref:System.Byte>.</span><span class="sxs-lookup"><span data-stu-id="bef81-181">For example, suppose the instance type is <xref:System.Int32> and the parameter type is <xref:System.Byte>.</span></span> <span data-ttu-id="bef81-182">Компилятор Microsoft C# создает инструкции для представления значения параметра, как <xref:System.Int32> объекта, а затем создает <xref:System.Int32.CompareTo%2A?displayProperty=nameWithType> метод, который сравнивает значения <xref:System.Int32> экземпляра и <xref:System.Int32> параметр представление.</span><span class="sxs-lookup"><span data-stu-id="bef81-182">The Microsoft C# compiler generates instructions to represent the value of the parameter as an <xref:System.Int32> object, then generates a <xref:System.Int32.CompareTo%2A?displayProperty=nameWithType> method that compares the values of the <xref:System.Int32> instance and the <xref:System.Int32> parameter representation.</span></span>  
  
 <span data-ttu-id="bef81-183">Как правило неявные расширяющие преобразования, выполняются для числовых типов.</span><span class="sxs-lookup"><span data-stu-id="bef81-183">Typically, implicit widening conversions are performed on numeric types.</span></span> <span data-ttu-id="bef81-184">Обратитесь к документации язык программирования, чтобы определить, выполняет ли компилятор расширяющие преобразования.</span><span class="sxs-lookup"><span data-stu-id="bef81-184">Consult your programming language's documentation to determine if its compiler performs widening conversions.</span></span> <span data-ttu-id="bef81-185">Если экземпляр и параметр несоответствие типов и подходящего преобразования недоступен, компилятор создает инструкции поле параметра и вызывать <xref:System.Char.CompareTo%2A> перегрузку, принимающую <xref:System.Object> параметра.</span><span class="sxs-lookup"><span data-stu-id="bef81-185">If the instance and parameter types mismatch and a suitable conversion is not available, the compiler generates instructions to box the parameter and invoke the <xref:System.Char.CompareTo%2A> overload that takes an <xref:System.Object> parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bef81-186">В следующем примере кода демонстрируются универсальных и неуниверсальных версии `CompareTo` метод для нескольких типов значений и ссылочных типов.</span><span class="sxs-lookup"><span data-stu-id="bef81-186">The following code example demonstrates generic and non-generic versions of the `CompareTo` method for several value and reference types.</span></span>  
  
 [!code-cpp[T.CompareTo#1](~/samples/snippets/cpp/VS_Snippets_CLR/T.CompareTo/CPP/cat.cpp#1)]
 [!code-csharp[T.CompareTo#1](~/samples/snippets/csharp/VS_Snippets_CLR/T.CompareTo/CS/cat.cs#1)]
 [!code-vb[T.CompareTo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/T.CompareTo/VB/cat.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IComparable" />
        <altmember cref="M:System.Char.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (value As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member CompareTo : obj -&gt; int&#xA;override this.CompareTo : obj -&gt; int" Usage="char.CompareTo value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="bef81-187">An object to compare this instance to, or <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-187">An object to compare this instance to, or <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bef81-188">Compares this instance to a specified object and indicates whether this instance precedes, follows, or appears in the same position in the sort order as the specified <see cref="T:System.Object" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-188">Compares this instance to a specified object and indicates whether this instance precedes, follows, or appears in the same position in the sort order as the specified <see cref="T:System.Object" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bef81-189">A signed number indicating the position of this instance in the sort order in relation to the <paramref name="value" /> parameter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-189">A signed number indicating the position of this instance in the sort order in relation to the <paramref name="value" /> parameter.</span>
          </span>
          <span data-ttu-id="bef81-190">
            <list type="table">
              <listheader>
                <term> Return Value  </term>
                <description> Description  </description>
              </listheader>
              <item>
                <term> Less than zero  </term>
                <description> This instance precedes <paramref name="value" />.  </description>
              </item>
              <item>
                <term> Zero  </term>
                <description> This instance has the same position in the sort order as <paramref name="value" />.  </description>
              </item>
              <item>
                <term> Greater than zero  </term>
                <description> This instance follows <paramref name="value" />.  -or-  <paramref name="value" /> is <see langword="null" />.  </description>
              </item>
            </list>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-190">
              <list type="table">
                <listheader>
                  <term> Return Value  </term>
                  <description> Description  </description>
                </listheader>
                <item>
                  <term> Less than zero  </term>
                  <description> This instance precedes <paramref name="value" />.  </description>
                </item>
                <item>
                  <term> Zero  </term>
                  <description> This instance has the same position in the sort order as <paramref name="value" />.  </description>
                </item>
                <item>
                  <term> Greater than zero  </term>
                  <description> This instance follows <paramref name="value" />.  -or-  <paramref name="value" /> is <see langword="null" />.  </description>
                </item>
              </list>
            </span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bef81-191"><xref:System.Char.CompareTo%2A> Реализует метод <xref:System.IComparable> интерфейс.</span><span class="sxs-lookup"><span data-stu-id="bef81-191">The <xref:System.Char.CompareTo%2A> method implements the <xref:System.IComparable> interface.</span></span>  
  
 <span data-ttu-id="bef81-192">`value` Параметр должен быть `null` или экземпляр <xref:System.Char>; в противном случае создается исключение.</span><span class="sxs-lookup"><span data-stu-id="bef81-192">The `value` parameter must be `null` or an instance of <xref:System.Char>; otherwise, an exception is thrown.</span></span>  
  
 <span data-ttu-id="bef81-193">При сравнении этот метод основан на закодированные значения этого экземпляра и `value`, не обязательно лексикографических характеристиках.</span><span class="sxs-lookup"><span data-stu-id="bef81-193">The comparison performed by this method is based on the encoded values of this instance and `value`, not necessarily their lexicographical characteristics.</span></span> <span data-ttu-id="bef81-194">Любой экземпляр <xref:System.Char>, независимо от того, его значение считается больше, чем `null`.</span><span class="sxs-lookup"><span data-stu-id="bef81-194">Any instance of <xref:System.Char>, regardless of its value, is considered greater than `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bef81-195">В следующем примере кода показано <xref:System.Char.CompareTo%2A>.</span><span class="sxs-lookup"><span data-stu-id="bef81-195">The following code example demonstrates <xref:System.Char.CompareTo%2A>.</span></span>  
  
 [!code-cpp[System.Char.CompareTo#19](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.CompareTo/CPP/compareto.cpp#19)]
 [!code-csharp[System.Char.CompareTo#19](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.CompareTo/CS/compareto.cs#19)]
 [!code-vb[System.Char.CompareTo#19](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.CompareTo/VB/compareto.vb#19)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="bef81-196">
            <paramref name="value" /> is not a <see cref="T:System.Char" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-196">
              <paramref name="value" /> is not a <see cref="T:System.Char" /> object.</span>
          </span>
        </exception>
        <altmember cref="T:System.IComparable" />
        <altmember cref="M:System.Char.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="ConvertFromUtf32">
      <MemberSignature Language="C#" Value="public static string ConvertFromUtf32 (int utf32);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ConvertFromUtf32(int32 utf32) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.ConvertFromUtf32(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConvertFromUtf32 (utf32 As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ConvertFromUtf32(int utf32);" />
      <MemberSignature Language="F#" Value="static member ConvertFromUtf32 : int -&gt; string" Usage="System.char.ConvertFromUtf32 utf32" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="utf32" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="utf32">
          <span data-ttu-id="bef81-197">A 21-bit Unicode code point.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-197">A 21-bit Unicode code point.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bef81-198">Converts the specified Unicode code point into a UTF-16 encoded string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-198">Converts the specified Unicode code point into a UTF-16 encoded string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bef81-199">A string consisting of one <see cref="T:System.Char" /> object or a surrogate pair of <see cref="T:System.Char" /> objects equivalent to the code point specified by the <paramref name="utf32" /> parameter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-199">A string consisting of one <see cref="T:System.Char" /> object or a surrogate pair of <see cref="T:System.Char" /> objects equivalent to the code point specified by the <paramref name="utf32" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bef81-200">Этот метод позволяет преобразовать 21-Битовая кодовая точка Юникода в строку в кодировке UTF-16 перед тестированием строки с помощью методов, таких как <xref:System.Char.IsLowSurrogate%28System.Char%29> и <xref:System.Char.IsHighSurrogate%28System.Char%29>.</span><span class="sxs-lookup"><span data-stu-id="bef81-200">Use this method to convert a 21-bit Unicode code point to a UTF-16 encoded string before testing the string with methods such as <xref:System.Char.IsLowSurrogate%28System.Char%29> and <xref:System.Char.IsHighSurrogate%28System.Char%29>.</span></span>  
  
 <span data-ttu-id="bef81-201">Допустимую точку кода за пределами основных многоязычной плоскости (BMP) всегда является допустимым суррогатную пару.</span><span class="sxs-lookup"><span data-stu-id="bef81-201">A valid code point outside the Basic Multilingual Plane (BMP) always yields a valid surrogate pair.</span></span> <span data-ttu-id="bef81-202">Тем не менее допустимую точку кода в BMP может выдавать допустимого результата в соответствии со стандартом Юникода, так как не лингвистическая обработка используется в преобразовании.</span><span class="sxs-lookup"><span data-stu-id="bef81-202">However, a valid code point within the BMP might not yield a valid result according to the Unicode standard because no linguistic processing is used in the conversion.</span></span> <span data-ttu-id="bef81-203">По этой причине использование <xref:System.Text.UTF32Encoding?displayProperty=nameWithType> класс для преобразования массовой данных UTF-32 в массового данные UTF-16.</span><span class="sxs-lookup"><span data-stu-id="bef81-203">For that reason, use the <xref:System.Text.UTF32Encoding?displayProperty=nameWithType> class to convert bulk UTF-32 data into bulk UTF-16 data.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bef81-204">В следующем примере кода показано <xref:System.Char.ConvertToUtf32%2A> и <xref:System.Char.ConvertFromUtf32%2A> методы.</span><span class="sxs-lookup"><span data-stu-id="bef81-204">The following code example demonstrates the <xref:System.Char.ConvertToUtf32%2A> and <xref:System.Char.ConvertFromUtf32%2A> methods.</span></span>  
  
 [!code-cpp[char.cvtutf32#1](~/samples/snippets/cpp/VS_Snippets_CLR/char.cvtutf32/CPP/utf.cpp#1)]
 [!code-csharp[char.cvtutf32#1](~/samples/snippets/csharp/VS_Snippets_CLR/char.cvtutf32/CS/utf.cs#1)]
 [!code-vb[char.cvtutf32#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/char.cvtutf32/VB/utf.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="bef81-205">
            <paramref name="utf32" /> is not a valid 21-bit Unicode code point ranging from U+0 through U+10FFFF, excluding the surrogate pair range from U+D800 through U+DFFF.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-205">
              <paramref name="utf32" /> is not a valid 21-bit Unicode code point ranging from U+0 through U+10FFFF, excluding the surrogate pair range from U+D800 through U+DFFF.</span>
          </span>
        </exception>
        <altmember cref="M:System.Char.ConvertToUtf32(System.Char,System.Char)" />
        <altmember cref="T:System.Text.UTF32Encoding" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ConvertToUtf32">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="bef81-206">Converts the value of a UTF-16 encoded surrogate pair into a Unicode code point.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-206">Converts the value of a UTF-16 encoded surrogate pair into a Unicode code point.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ConvertToUtf32">
      <MemberSignature Language="C#" Value="public static int ConvertToUtf32 (char highSurrogate, char lowSurrogate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ConvertToUtf32(char highSurrogate, char lowSurrogate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.ConvertToUtf32(System.Char,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConvertToUtf32 (highSurrogate As Char, lowSurrogate As Char) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ConvertToUtf32(char highSurrogate, char lowSurrogate);" />
      <MemberSignature Language="F#" Value="static member ConvertToUtf32 : char * char -&gt; int" Usage="System.char.ConvertToUtf32 (highSurrogate, lowSurrogate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="highSurrogate" Type="System.Char" />
        <Parameter Name="lowSurrogate" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="highSurrogate">
          <span data-ttu-id="bef81-207">A high surrogate code unit (that is, a code unit ranging from U+D800 through U+DBFF).</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-207">A high surrogate code unit (that is, a code unit ranging from U+D800 through U+DBFF).</span>
          </span>
        </param>
        <param name="lowSurrogate">
          <span data-ttu-id="bef81-208">A low surrogate code unit (that is, a code unit ranging from U+DC00 through U+DFFF).</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-208">A low surrogate code unit (that is, a code unit ranging from U+DC00 through U+DFFF).</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bef81-209">Converts the value of a UTF-16 encoded surrogate pair into a Unicode code point.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-209">Converts the value of a UTF-16 encoded surrogate pair into a Unicode code point.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bef81-210">The 21-bit Unicode code point represented by the <paramref name="highSurrogate" /> and <paramref name="lowSurrogate" /> parameters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-210">The 21-bit Unicode code point represented by the <paramref name="highSurrogate" /> and <paramref name="lowSurrogate" /> parameters.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bef81-211">Используйте этот метод для преобразования суррогатной пары в 21-Битовая кодовая точка Юникода.</span><span class="sxs-lookup"><span data-stu-id="bef81-211">Use this method to convert a surrogate pair into a 21-bit Unicode code point.</span></span> <span data-ttu-id="bef81-212">Чтобы преобразовать данные UTF-16 в данные UTF-32, используйте <xref:System.Text.UTF32Encoding?displayProperty=nameWithType> класса.</span><span class="sxs-lookup"><span data-stu-id="bef81-212">To convert UTF-16 data into UTF-32 data, use the <xref:System.Text.UTF32Encoding?displayProperty=nameWithType> class.</span></span>  
  
 <span data-ttu-id="bef81-213">Как правило кодировку UTF-16 представляет один символ Юникода как единое 16-разрядного кода.</span><span class="sxs-lookup"><span data-stu-id="bef81-213">Ordinarily, UTF-16 encoding represents a single Unicode character as a 16-bit code unit.</span></span> <span data-ttu-id="bef81-214">Тем не менее он также поддерживает суррогатных пар: они позволяют один абстрактный символ в виде двух 16-разрядного кода единиц.</span><span class="sxs-lookup"><span data-stu-id="bef81-214">However, it also supports surrogate pairs, which allow a single abstract character to be represented as two 16-bit code units.</span></span> <span data-ttu-id="bef81-215">Эти два <xref:System.Char> объекты должны иметь единицы кода этого диапазона от U + D800 до U + DBFF для первого суррогат (самый высокий) и от U + DC00 до U + DFFF, для второго суррогат (низкий).</span><span class="sxs-lookup"><span data-stu-id="bef81-215">These two <xref:System.Char> objects must have code units that range from U+D800 to U+DBFF for the first (high) surrogate and from U+DC00 to U+DFFF for the second (low) surrogate.</span></span> <span data-ttu-id="bef81-216">Суррогатные пары поддерживаются только UTF-16 кодирования.</span><span class="sxs-lookup"><span data-stu-id="bef81-216">Surrogate pairs are supported only by UTF-16 encoding.</span></span> <span data-ttu-id="bef81-217">Этот метод позволяет символ, представленный суррогатную пару UTF-16, преобразуемое в символ, с использованием кодировки UTF-32.</span><span class="sxs-lookup"><span data-stu-id="bef81-217">This method allows a character represented by a UTF-16 surrogate pair to be converted to a character using UTF-32 encoding.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bef81-218">В следующем примере кода показано <xref:System.Char.ConvertToUtf32%2A> и <xref:System.Char.ConvertFromUtf32%2A> методы.</span><span class="sxs-lookup"><span data-stu-id="bef81-218">The following code example demonstrates the <xref:System.Char.ConvertToUtf32%2A> and <xref:System.Char.ConvertFromUtf32%2A> methods.</span></span>  
  
 [!code-cpp[char.cvtutf32#1](~/samples/snippets/cpp/VS_Snippets_CLR/char.cvtutf32/CPP/utf.cpp#1)]
 [!code-csharp[char.cvtutf32#1](~/samples/snippets/csharp/VS_Snippets_CLR/char.cvtutf32/CS/utf.cs#1)]
 [!code-vb[char.cvtutf32#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/char.cvtutf32/VB/utf.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="bef81-219">
            <paramref name="highSurrogate" /> is not in the range U+D800 through U+DBFF, or <paramref name="lowSurrogate" /> is not in the range U+DC00 through U+DFFF.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-219">
              <paramref name="highSurrogate" /> is not in the range U+D800 through U+DBFF, or <paramref name="lowSurrogate" /> is not in the range U+DC00 through U+DFFF.</span>
          </span>
        </exception>
        <altmember cref="M:System.Char.ConvertFromUtf32(System.Int32)" />
        <altmember cref="T:System.Text.UTF32Encoding" />
      </Docs>
    </Member>
    <Member MemberName="ConvertToUtf32">
      <MemberSignature Language="C#" Value="public static int ConvertToUtf32 (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ConvertToUtf32(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.ConvertToUtf32(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConvertToUtf32 (s As String, index As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ConvertToUtf32(System::String ^ s, int index);" />
      <MemberSignature Language="F#" Value="static member ConvertToUtf32 : string * int -&gt; int" Usage="System.char.ConvertToUtf32 (s, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="bef81-220">A string that contains a character or surrogate pair.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-220">A string that contains a character or surrogate pair.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="bef81-221">The index position of the character or surrogate pair in <c>s</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-221">The index position of the character or surrogate pair in <c>s</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bef81-222">Converts the value of a UTF-16 encoded character or surrogate pair at a specified position in a string into a Unicode code point.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-222">Converts the value of a UTF-16 encoded character or surrogate pair at a specified position in a string into a Unicode code point.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bef81-223">The 21-bit Unicode code point represented by the character or surrogate pair at the position in the <paramref name="s" /> parameter specified by the <paramref name="index" /> parameter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-223">The 21-bit Unicode code point represented by the character or surrogate pair at the position in the <paramref name="s" /> parameter specified by the <paramref name="index" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bef81-224">Используйте этот метод для преобразования символа или суррогатной пары в 21-Битовая кодовая точка Юникода.</span><span class="sxs-lookup"><span data-stu-id="bef81-224">Use this method to convert a character or surrogate pair into a 21-bit Unicode code point.</span></span> <span data-ttu-id="bef81-225">Чтобы преобразовать данные UTF-16 в данные UTF-32, используйте <xref:System.Text.UTF32Encoding?displayProperty=nameWithType> класса.</span><span class="sxs-lookup"><span data-stu-id="bef81-225">To convert UTF-16 data into UTF-32 data, use the <xref:System.Text.UTF32Encoding?displayProperty=nameWithType> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bef81-226">В следующем примере кода показано <xref:System.Char.ConvertToUtf32%2A> и <xref:System.Char.ConvertFromUtf32%2A> методы.</span><span class="sxs-lookup"><span data-stu-id="bef81-226">The following code example demonstrates the <xref:System.Char.ConvertToUtf32%2A> and <xref:System.Char.ConvertFromUtf32%2A> methods.</span></span>  
  
 [!code-cpp[char.cvtutf32#1](~/samples/snippets/cpp/VS_Snippets_CLR/char.cvtutf32/CPP/utf.cpp#1)]
 [!code-csharp[char.cvtutf32#1](~/samples/snippets/csharp/VS_Snippets_CLR/char.cvtutf32/CS/utf.cs#1)]
 [!code-vb[char.cvtutf32#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/char.cvtutf32/VB/utf.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="bef81-227">
            <paramref name="s" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-227">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="bef81-228">
            <paramref name="index" /> is not a position within <paramref name="s" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-228">
              <paramref name="index" /> is not a position within <paramref name="s" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="bef81-229">The specified index position contains a surrogate pair, and either the first character in the pair is not a valid high surrogate or the second character in the pair is not a valid low surrogate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-229">The specified index position contains a surrogate pair, and either the first character in the pair is not a valid high surrogate or the second character in the pair is not a valid low surrogate.</span>
          </span>
        </exception>
        <altmember cref="M:System.Char.ConvertFromUtf32(System.Int32)" />
        <altmember cref="T:System.Text.UTF32Encoding" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="bef81-230">Returns a value that indicates whether this instance is equal to a specified object or <see cref="T:System.Char" /> value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-230">Returns a value that indicates whether this instance is equal to a specified object or <see cref="T:System.Char" /> value.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (char obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(char obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.Equals(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (obj As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(char obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : char -&gt; bool" Usage="char.Equals obj" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="bef81-231">An object to compare to this instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-231">An object to compare to this instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bef81-232">Returns a value that indicates whether this instance is equal to the specified <see cref="T:System.Char" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-232">Returns a value that indicates whether this instance is equal to the specified <see cref="T:System.Char" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bef81-233">
            <see langword="true" /> if the <paramref name="obj" /> parameter equals the value of this instance; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-233">
              <see langword="true" /> if the <paramref name="obj" /> parameter equals the value of this instance; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bef81-234">Этот метод реализует <xref:System.IEquatable%601?displayProperty=nameWithType> интерфейс и выполняет немного лучше, чем <xref:System.Char.Equals%28System.Object%29?displayProperty=nameWithType> , так как не нужно распаковывать `obj` параметра.</span><span class="sxs-lookup"><span data-stu-id="bef81-234">This method implements the <xref:System.IEquatable%601?displayProperty=nameWithType> interface, and performs slightly better than <xref:System.Char.Equals%28System.Object%29?displayProperty=nameWithType> because it does not need to unbox the `obj` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Char.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="char.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="bef81-235">An object to compare with this instance or <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-235">An object to compare with this instance or <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bef81-236">Returns a value that indicates whether this instance is equal to a specified object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-236">Returns a value that indicates whether this instance is equal to a specified object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bef81-237">
            <see langword="true" /> if <paramref name="obj" /> is an instance of <see cref="T:System.Char" /> and equals the value of this instance; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-237">
              <see langword="true" /> if <paramref name="obj" /> is an instance of <see cref="T:System.Char" /> and equals the value of this instance; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bef81-238">При сравнении этот метод основан на закодированные значения этого экземпляра и `obj`, не обязательно лексикографических характеристиках.</span><span class="sxs-lookup"><span data-stu-id="bef81-238">The comparison performed by this method is based on the encoded values of this instance and `obj`, not necessarily their lexicographical characteristics.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bef81-239">В следующем примере кода показано <xref:System.Char.Equals%2A>.</span><span class="sxs-lookup"><span data-stu-id="bef81-239">The following code example demonstrates <xref:System.Char.Equals%2A>.</span></span>  
  
 [!code-cpp[System.Char.Equals#20](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.Equals/CPP/equals.cpp#20)]
 [!code-csharp[System.Char.Equals#20](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.Equals/CS/equals.cs#20)]
 [!code-vb[System.Char.Equals#20](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.Equals/VB/equals.vb#20)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Char.CompareTo(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="char.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="bef81-240">Returns the hash code for this instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-240">Returns the hash code for this instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bef81-241">A 32-bit signed integer hash code.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-241">A 32-bit signed integer hash code.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetNumericValue">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="bef81-242">Converts a specified numeric Unicode character to a double-precision floating-point number.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-242">Converts a specified numeric Unicode character to a double-precision floating-point number.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetNumericValue">
      <MemberSignature Language="C#" Value="public static double GetNumericValue (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 GetNumericValue(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.GetNumericValue(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetNumericValue (c As Char) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double GetNumericValue(char c);" />
      <MemberSignature Language="F#" Value="static member GetNumericValue : char -&gt; double" Usage="System.char.GetNumericValue c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="bef81-243">The Unicode character to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-243">The Unicode character to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bef81-244">Converts the specified numeric Unicode character to a double-precision floating point number.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-244">Converts the specified numeric Unicode character to a double-precision floating point number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bef81-245">The numeric value of <paramref name="c" /> if that character represents a number; otherwise, -1.0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-245">The numeric value of <paramref name="c" /> if that character represents a number; otherwise, -1.0.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bef81-246">`c` Параметр должен быть <xref:System.Char> представление числового значения.</span><span class="sxs-lookup"><span data-stu-id="bef81-246">The `c` parameter must be the <xref:System.Char> representation of a numeric value.</span></span> <span data-ttu-id="bef81-247">Например если `c` «5», возвращаемое значение равно 5.</span><span class="sxs-lookup"><span data-stu-id="bef81-247">For example, if `c` is "5", the return value is 5.</span></span> <span data-ttu-id="bef81-248">Тем не менее если `c` является «z», возвращает значение -1,0.</span><span class="sxs-lookup"><span data-stu-id="bef81-248">However, if `c` is "z", the return value is -1.0.</span></span>  
  
 <span data-ttu-id="bef81-249">Символ имеет связанное числовое значение только в том случае, если он является членом одной из следующих <xref:System.Globalization.UnicodeCategory> категории: `DecimalDigitNumber`, `LetterNumber`, или `OtherNumber`.</span><span class="sxs-lookup"><span data-stu-id="bef81-249">A character has an associated numeric value if and only if it is a member of one of the following <xref:System.Globalization.UnicodeCategory> categories: `DecimalDigitNumber`, `LetterNumber`, or `OtherNumber`.</span></span>  
  
 <span data-ttu-id="bef81-250"><xref:System.Char.GetNumericValue%2A> Метод предполагает, что `c` соответствует один символ лингвистические и проверяет, можно ли преобразовать этот символ для десятичной цифрой.</span><span class="sxs-lookup"><span data-stu-id="bef81-250">The <xref:System.Char.GetNumericValue%2A> method assumes that `c` corresponds to a single linguistic character and checks whether that character can be converted to a decimal digit.</span></span> <span data-ttu-id="bef81-251">Тем не менее, некоторые числа в стандарте Юникода представлены двумя <xref:System.Char> объекты, образующие суррогатную пару.</span><span class="sxs-lookup"><span data-stu-id="bef81-251">However, some numbers in the Unicode standard are represented by two <xref:System.Char> objects that form a surrogate pair.</span></span> <span data-ttu-id="bef81-252">Например Aegean системы нумерации состоит кодовых позиций U + 10107 до U + 10133.</span><span class="sxs-lookup"><span data-stu-id="bef81-252">For example, the Aegean numbering system consists of code points U+10107 through U+10133.</span></span> <span data-ttu-id="bef81-253">В следующем примере используется <xref:System.Char.ConvertFromUtf32%2A> метод для создания экземпляра строка, представляющая AEGEAN номер один.</span><span class="sxs-lookup"><span data-stu-id="bef81-253">The following example uses the <xref:System.Char.ConvertFromUtf32%2A> method to instantiate a string that represents AEGEAN NUMBER ONE.</span></span> <span data-ttu-id="bef81-254">Как видно в результатах показано в примере <xref:System.Char.GetNumericValue%28System.Char%29> метод возвращает -1, если он передается старшим или младшим символом-заместителем для кодировки этого символа.</span><span class="sxs-lookup"><span data-stu-id="bef81-254">As the output from the example shows, the <xref:System.Char.GetNumericValue%28System.Char%29> method returns -1 if it is passed either a high surrogate or a low surrogate of this character.</span></span>  
  
 [!code-csharp[System.Char.GetNumericValue#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.GetNumericValue/CS/getnumericvalue1.cs#2)]
 [!code-vb[System.Char.GetNumericValue#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.GetNumericValue/VB/getnumericvalue1.vb#2)]  
  
   
  
## Examples  
 <span data-ttu-id="bef81-255">В следующем примере демонстрируется <xref:System.Char.GetNumericValue%2A>.</span><span class="sxs-lookup"><span data-stu-id="bef81-255">The following example demonstrates <xref:System.Char.GetNumericValue%2A>.</span></span>  
  
 [!code-cpp[System.Char.GetNumericValue#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.GetNumericValue/CPP/getnumericvalue.cpp#1)]
 [!code-csharp[System.Char.GetNumericValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.GetNumericValue/CS/getnumericvalue.cs#1)]
 [!code-vb[System.Char.GetNumericValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.GetNumericValue/VB/getnumericvalue.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNumericValue">
      <MemberSignature Language="C#" Value="public static double GetNumericValue (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 GetNumericValue(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.GetNumericValue(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetNumericValue (s As String, index As Integer) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double GetNumericValue(System::String ^ s, int index);" />
      <MemberSignature Language="F#" Value="static member GetNumericValue : string * int -&gt; double" Usage="System.char.GetNumericValue (s, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="bef81-256">A <see cref="T:System.String" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-256">A <see cref="T:System.String" />.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="bef81-257">The character position in <c>s</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-257">The character position in <c>s</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bef81-258">Converts the numeric Unicode character at the specified position in a specified string to a double-precision floating point number.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-258">Converts the numeric Unicode character at the specified position in a specified string to a double-precision floating point number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bef81-259">The numeric value of the character at position <paramref name="index" /> in <paramref name="s" /> if that character represents a number; otherwise, -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-259">The numeric value of the character at position <paramref name="index" /> in <paramref name="s" /> if that character represents a number; otherwise, -1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bef81-260">`s` Параметр должен быть строковым представлением числовое значение.</span><span class="sxs-lookup"><span data-stu-id="bef81-260">The `s` parameter must be the string representation of a numeric value.</span></span> <span data-ttu-id="bef81-261">Например если символ в позиции `index` в `s` «5», возвращаемое значение равно 5.</span><span class="sxs-lookup"><span data-stu-id="bef81-261">For example, if the character at position `index` in `s` is "5", the return value is 5.</span></span> <span data-ttu-id="bef81-262">Тем не менее если символ в позиции `index` в `s` — «z», возвращается значение-1.</span><span class="sxs-lookup"><span data-stu-id="bef81-262">However, if the character at position `index` in `s` is "z", the return value is -1.</span></span>  
  
 <span data-ttu-id="bef81-263">Позиций знаков в строке, индексируются, начиная с нуля.</span><span class="sxs-lookup"><span data-stu-id="bef81-263">Character positions in a string are indexed starting from zero.</span></span>  
  
 <span data-ttu-id="bef81-264">Символ имеет связанное числовое значение только в том случае, если он является членом одной из следующих <xref:System.Globalization.UnicodeCategory> категории: `DecimalDigitNumber`, `LetterNumber`, или `OtherNumber`.</span><span class="sxs-lookup"><span data-stu-id="bef81-264">A character has an associated numeric value if and only if it is a member of one of the following <xref:System.Globalization.UnicodeCategory> categories: `DecimalDigitNumber`, `LetterNumber`, or `OtherNumber`.</span></span>  
  
 <span data-ttu-id="bef81-265">Если <xref:System.Char> объект в позиции `index` является первым символом допустимым суррогатной пары, <xref:System.Char.GetNumericValue%28System.String%2CSystem.Int32%29> метод определяет, образует ли суррогатной пары цифры.</span><span class="sxs-lookup"><span data-stu-id="bef81-265">If the <xref:System.Char> object at position `index` is the first character of a valid surrogate pair, the <xref:System.Char.GetNumericValue%28System.String%2CSystem.Int32%29> method determines whether the surrogate pair forms a numeric digit.</span></span> <span data-ttu-id="bef81-266">Например Aegean системы нумерации состоит кодовых позиций U + 10107 до U + 10133.</span><span class="sxs-lookup"><span data-stu-id="bef81-266">For example, the Aegean numbering system consists of code points U+10107 through U+10133.</span></span> <span data-ttu-id="bef81-267">В следующем примере используется <xref:System.Char.ConvertFromUtf32%2A> метод для создания экземпляра строка, представляющая каждого Aegean числа.</span><span class="sxs-lookup"><span data-stu-id="bef81-267">The following example uses the <xref:System.Char.ConvertFromUtf32%2A> method to instantiate a string that represents each Aegean number.</span></span> <span data-ttu-id="bef81-268">Как видно в результатах показано в примере <xref:System.Char.GetNumericValue%28System.String%2CSystem.Int32%29> метод возвращает правильный числовое значение, если он передается старшим символом-заместителем Aegean номера.</span><span class="sxs-lookup"><span data-stu-id="bef81-268">As the output from the example shows, the <xref:System.Char.GetNumericValue%28System.String%2CSystem.Int32%29> method returns the correct numeric value if it is passed the high surrogate of an Aegean number.</span></span> <span data-ttu-id="bef81-269">Тем не менее если он передается младший символ-заместитель, считает, что только младшего в изоляции и возвращает – 1.</span><span class="sxs-lookup"><span data-stu-id="bef81-269">However, if it is passed the low surrogate, it considers only the low surrogate in isolation and returns -1.</span></span>  
  
 [!code-csharp[System.Char.GetNumericValue#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.GetNumericValue/CS/getnumericvalue1.cs#3)]
 [!code-vb[System.Char.GetNumericValue#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.GetNumericValue/VB/getnumericvalue1.vb#3)]  
  
   
  
## Examples  
 <span data-ttu-id="bef81-270">В следующем примере кода показано <xref:System.Char.GetNumericValue%2A>.</span><span class="sxs-lookup"><span data-stu-id="bef81-270">The following code example demonstrates <xref:System.Char.GetNumericValue%2A>.</span></span>  
  
 [!code-cpp[System.Char.GetNumericValue#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.GetNumericValue/CPP/getnumericvalue.cpp#1)]
 [!code-csharp[System.Char.GetNumericValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.GetNumericValue/CS/getnumericvalue.cs#1)]
 [!code-vb[System.Char.GetNumericValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.GetNumericValue/VB/getnumericvalue.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="bef81-271">
            <paramref name="s" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-271">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="bef81-272">
            <paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-272">
              <paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetTypeCode">
      <MemberSignature Language="C#" Value="public TypeCode GetTypeCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.TypeCode GetTypeCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.GetTypeCode" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTypeCode () As TypeCode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual TypeCode GetTypeCode();" />
      <MemberSignature Language="F#" Value="abstract member GetTypeCode : unit -&gt; TypeCode&#xA;override this.GetTypeCode : unit -&gt; TypeCode" Usage="char.GetTypeCode " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.GetTypeCode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TypeCode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="bef81-273">Returns the <see cref="T:System.TypeCode" /> for value type <see cref="T:System.Char" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-273">Returns the <see cref="T:System.TypeCode" /> for value type <see cref="T:System.Char" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bef81-274">The enumerated constant, <see cref="F:System.TypeCode.Char" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-274">The enumerated constant, <see cref="F:System.TypeCode.Char" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetUnicodeCategory">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="bef81-275">Categorizes a Unicode character into a group identified by one of the <see cref="T:System.Globalization.UnicodeCategory" /> values.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-275">Categorizes a Unicode character into a group identified by one of the <see cref="T:System.Globalization.UnicodeCategory" /> values.</span>
          </span>
        </summary>
        <altmember cref="M:System.Globalization.CharUnicodeInfo.GetUnicodeCategory(System.Char)" />
      </Docs>
    </MemberGroup>
    <Member MemberName="GetUnicodeCategory">
      <MemberSignature Language="C#" Value="public static System.Globalization.UnicodeCategory GetUnicodeCategory (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Globalization.UnicodeCategory GetUnicodeCategory(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.GetUnicodeCategory(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetUnicodeCategory (c As Char) As UnicodeCategory" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Globalization::UnicodeCategory GetUnicodeCategory(char c);" />
      <MemberSignature Language="F#" Value="static member GetUnicodeCategory : char -&gt; System.Globalization.UnicodeCategory" Usage="System.char.GetUnicodeCategory c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.UnicodeCategory</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="bef81-276">The Unicode character to categorize.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-276">The Unicode character to categorize.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bef81-277">Categorizes a specified Unicode character into a group identified by one of the <see cref="T:System.Globalization.UnicodeCategory" /> values.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-277">Categorizes a specified Unicode character into a group identified by one of the <see cref="T:System.Globalization.UnicodeCategory" /> values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bef81-278">A <see cref="T:System.Globalization.UnicodeCategory" /> value that identifies the group that contains <paramref name="c" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-278">A <see cref="T:System.Globalization.UnicodeCategory" /> value that identifies the group that contains <paramref name="c" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bef81-279"><xref:System.Char.GetUnicodeCategory%2A?displayProperty=nameWithType> Метод всегда возвращает же <xref:System.Globalization.UnicodeCategory> значение как <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.Char%29?displayProperty=nameWithType> метод передаваемый конкретного символа в качестве параметра.</span><span class="sxs-lookup"><span data-stu-id="bef81-279">The <xref:System.Char.GetUnicodeCategory%2A?displayProperty=nameWithType> method does not always return the same <xref:System.Globalization.UnicodeCategory> value as the <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.Char%29?displayProperty=nameWithType> method when it is passed a particular character as a parameter.</span></span> <span data-ttu-id="bef81-280"><xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.Char%29?displayProperty=nameWithType> Метод создан в соответствии с текущей версией стандарта Юникода.</span><span class="sxs-lookup"><span data-stu-id="bef81-280">The <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.Char%29?displayProperty=nameWithType> method is designed to reflect the current version of the Unicode standard.</span></span> <span data-ttu-id="bef81-281">В противоположность этому несмотря на то что <xref:System.Char.GetUnicodeCategory%2A?displayProperty=nameWithType> метод обычно отражает текущую версию стандарта Юникод, он может возвращать категорию символа, основываясь на предыдущей версии стандарта или он может возвращать категорию, которая отличается от текущего стандарта в порядке для сохранения обратной совместимости.</span><span class="sxs-lookup"><span data-stu-id="bef81-281">In contrast, although the <xref:System.Char.GetUnicodeCategory%2A?displayProperty=nameWithType> method usually reflects the current version of the Unicode standard, it may return a character's category based on a previous version of the standard or it may return a category that differs from the current standard in order to preserve backward compatibility.</span></span> <span data-ttu-id="bef81-282">Таким образом, мы рекомендуем использовать <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.Char%29?displayProperty=nameWithType> вместо метода <xref:System.Char.GetUnicodeCategory%28System.Char%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="bef81-282">As a result, we recommend that you use the <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.Char%29?displayProperty=nameWithType> method instead of <xref:System.Char.GetUnicodeCategory%28System.Char%29?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="bef81-283">Начиная с [!INCLUDE[net_v462](~/includes/net-v462-md.md)], символы Юникода классифицируются на основе [The Unix Standard, Version 8.0.0](https://www.unicode.org/versions/Unicode8.0.0/).</span><span class="sxs-lookup"><span data-stu-id="bef81-283">Starting with the [!INCLUDE[net_v462](~/includes/net-v462-md.md)], Unicode characters are classified based on [The Unix Standard, Version 8.0.0](https://www.unicode.org/versions/Unicode8.0.0/).</span></span> <span data-ttu-id="bef81-284">В версиях .NET Framework с [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] для [!INCLUDE[net_v461](~/includes/net-v461-md.md)], они классифицируются на основе [стандарт Unix, версия 6.3.0](https://www.unicode.org/versions/Unicode6.3.0/).</span><span class="sxs-lookup"><span data-stu-id="bef81-284">In versions of the .NET Framework from the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] to  the [!INCLUDE[net_v461](~/includes/net-v461-md.md)], they are classified based on [The Unix Standard, Version 6.3.0](https://www.unicode.org/versions/Unicode6.3.0/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bef81-285">В следующем примере кода показано <xref:System.Char.GetUnicodeCategory%2A>.</span><span class="sxs-lookup"><span data-stu-id="bef81-285">The following code example demonstrates <xref:System.Char.GetUnicodeCategory%2A>.</span></span>  
  
 [!code-cpp[System.Char.GetUnicodeCategory#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.GetUnicodeCategory/CPP/getunicodecategory.cpp#1)]
 [!code-csharp[System.Char.GetUnicodeCategory#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.GetUnicodeCategory/CS/getunicodecategory.cs#1)]
 [!code-vb[System.Char.GetUnicodeCategory#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.GetUnicodeCategory/VB/getunicodecategory.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Globalization.CharUnicodeInfo.GetUnicodeCategory(System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="GetUnicodeCategory">
      <MemberSignature Language="C#" Value="public static System.Globalization.UnicodeCategory GetUnicodeCategory (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Globalization.UnicodeCategory GetUnicodeCategory(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.GetUnicodeCategory(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetUnicodeCategory (s As String, index As Integer) As UnicodeCategory" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Globalization::UnicodeCategory GetUnicodeCategory(System::String ^ s, int index);" />
      <MemberSignature Language="F#" Value="static member GetUnicodeCategory : string * int -&gt; System.Globalization.UnicodeCategory" Usage="System.char.GetUnicodeCategory (s, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.UnicodeCategory</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="bef81-286">A <see cref="T:System.String" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-286">A <see cref="T:System.String" />.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="bef81-287">The character position in <c>s</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-287">The character position in <c>s</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bef81-288">Categorizes the character at the specified position in a specified string into a group identified by one of the <see cref="T:System.Globalization.UnicodeCategory" /> values.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-288">Categorizes the character at the specified position in a specified string into a group identified by one of the <see cref="T:System.Globalization.UnicodeCategory" /> values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bef81-289">A <see cref="T:System.Globalization.UnicodeCategory" /> enumerated constant that identifies the group that contains the character at position <paramref name="index" /> in <paramref name="s" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-289">A <see cref="T:System.Globalization.UnicodeCategory" /> enumerated constant that identifies the group that contains the character at position <paramref name="index" /> in <paramref name="s" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bef81-290">Позиций знаков в строке, индексируются, начиная с нуля.</span><span class="sxs-lookup"><span data-stu-id="bef81-290">Character positions in a string are indexed starting from zero.</span></span>  
  
 <span data-ttu-id="bef81-291"><xref:System.Char.GetUnicodeCategory%2A?displayProperty=nameWithType> Метод всегда возвращает же <xref:System.Globalization.UnicodeCategory> значение как <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.String%2CSystem.Int32%29?displayProperty=nameWithType> метод передаваемый конкретного символа в качестве параметра.</span><span class="sxs-lookup"><span data-stu-id="bef81-291">The <xref:System.Char.GetUnicodeCategory%2A?displayProperty=nameWithType> method does not always return the same <xref:System.Globalization.UnicodeCategory> value as the <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.String%2CSystem.Int32%29?displayProperty=nameWithType> method when it is passed a particular character as a parameter.</span></span> <span data-ttu-id="bef81-292"><xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.String%2CSystem.Int32%29?displayProperty=nameWithType> Метод создан в соответствии с текущей версией стандарта Юникода.</span><span class="sxs-lookup"><span data-stu-id="bef81-292">The <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.String%2CSystem.Int32%29?displayProperty=nameWithType> method is designed to reflect the current version of the Unicode standard.</span></span> <span data-ttu-id="bef81-293">В противоположность этому несмотря на то что <xref:System.Char.GetUnicodeCategory%2A?displayProperty=nameWithType> метод обычно отражает текущую версию стандарта Юникод, он может возвращать категорию символа, основываясь на предыдущей версии стандарта или он может возвращать категорию, которая отличается от текущего стандарта в порядке для сохранения обратной совместимости.</span><span class="sxs-lookup"><span data-stu-id="bef81-293">In contrast, although the <xref:System.Char.GetUnicodeCategory%2A?displayProperty=nameWithType> method usually reflects the current version of the Unicode standard, it may return a character's category based on a previous version of the standard or it may return a category that differs from the current standard in order to preserve backward compatibility.</span></span> <span data-ttu-id="bef81-294">Таким образом, мы рекомендуем использовать <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.Char%29?displayProperty=nameWithType> вместо метода <xref:System.Char.GetUnicodeCategory%28System.String%2CSystem.Int32%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="bef81-294">As a result, we recommend that you use the <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.Char%29?displayProperty=nameWithType> method instead of <xref:System.Char.GetUnicodeCategory%28System.String%2CSystem.Int32%29?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="bef81-295">Начиная с [!INCLUDE[net_v462](~/includes/net-v462-md.md)], символы Юникода классифицируются на основе [The Unix Standard, Version 8.0.0](https://www.unicode.org/versions/Unicode8.0.0/).</span><span class="sxs-lookup"><span data-stu-id="bef81-295">Starting with the [!INCLUDE[net_v462](~/includes/net-v462-md.md)], Unicode characters are classified based on [The Unix Standard, Version 8.0.0](https://www.unicode.org/versions/Unicode8.0.0/).</span></span> <span data-ttu-id="bef81-296">В версиях .NET Framework с [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] для [!INCLUDE[net_v461](~/includes/net-v461-md.md)], они классифицируются на основе [стандарт Unix, версия 6.3.0](https://www.unicode.org/versions/Unicode6.3.0/).</span><span class="sxs-lookup"><span data-stu-id="bef81-296">In versions of the .NET Framework from the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] to  the [!INCLUDE[net_v461](~/includes/net-v461-md.md)], they are classified based on [The Unix Standard, Version 6.3.0](https://www.unicode.org/versions/Unicode6.3.0/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bef81-297">В следующем примере демонстрируется <xref:System.Char.GetUnicodeCategory%2A>.</span><span class="sxs-lookup"><span data-stu-id="bef81-297">The following example demonstrates <xref:System.Char.GetUnicodeCategory%2A>.</span></span>  
  
 [!code-cpp[System.Char.GetUnicodeCategory#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.GetUnicodeCategory/CPP/getunicodecategory.cpp#1)]
 [!code-csharp[System.Char.GetUnicodeCategory#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.GetUnicodeCategory/CS/getunicodecategory.cs#1)]
 [!code-vb[System.Char.GetUnicodeCategory#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.GetUnicodeCategory/VB/getunicodecategory.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="bef81-298">
            <paramref name="s" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-298">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="bef81-299">
            <paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-299">
              <paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Globalization.CharUnicodeInfo.GetUnicodeCategory(System.Char)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsControl">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="bef81-300">Indicates whether a specified Unicode character is categorized as a control character.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-300">Indicates whether a specified Unicode character is categorized as a control character.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bef81-301">Управляющие символы форматирование и другие непечатаемые символы, такие как ACK, МЕТКА, CR, LF, FF и VT.</span><span class="sxs-lookup"><span data-stu-id="bef81-301">Control characters are formatting and other non-printing characters, such as ACK, BEL, CR, FF, LF, and VT.</span></span> <span data-ttu-id="bef81-302">В стандарте Юникода назначает кодовые точки от \U0000 до \U001F, \U007F и от \U0080 до \U009F для управляющие символы.</span><span class="sxs-lookup"><span data-stu-id="bef81-302">The Unicode standard assigns code points from \U0000 to \U001F, \U007F, and from \U0080 to \U009F to control characters.</span></span> <span data-ttu-id="bef81-303">В соответствии со стандартом Юникода должны интерпретироваться как управляющие символы, если их использование определено в приложении эти значения.</span><span class="sxs-lookup"><span data-stu-id="bef81-303">According to the Unicode standard, these values are to be interpreted as control characters unless their use is otherwise defined by an application.</span></span> <span data-ttu-id="bef81-304">Допустимые управляющие символы являются членами <xref:System.Globalization.UnicodeCategory.Control?displayProperty=nameWithType> категории.</span><span class="sxs-lookup"><span data-stu-id="bef81-304">Valid control characters are members of the <xref:System.Globalization.UnicodeCategory.Control?displayProperty=nameWithType> category.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsControl">
      <MemberSignature Language="C#" Value="public static bool IsControl (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsControl(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsControl(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsControl (c As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsControl(char c);" />
      <MemberSignature Language="F#" Value="static member IsControl : char -&gt; bool" Usage="System.char.IsControl c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="bef81-305">The Unicode character to evaluate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-305">The Unicode character to evaluate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bef81-306">Indicates whether the specified Unicode character is categorized as a control character.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-306">Indicates whether the specified Unicode character is categorized as a control character.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bef81-307">
            <see langword="true" /> if <paramref name="c" /> is a control character; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-307">
              <see langword="true" /> if <paramref name="c" /> is a control character; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bef81-308">Управляющие символы форматирование и другие непечатаемые символы, такие как ACK, МЕТКА, CR, LF, FF и VT.</span><span class="sxs-lookup"><span data-stu-id="bef81-308">Control characters are formatting and other non-printing characters, such as ACK, BEL, CR, FF, LF, and VT.</span></span> <span data-ttu-id="bef81-309">T стандарта Юникод назначает кодовые точки от \U0000 до \U001F, \U007F и от \U0080 до \U009F для управляющие символы.</span><span class="sxs-lookup"><span data-stu-id="bef81-309">T The Unicode standard assigns code points from \U0000 to \U001F, \U007F, and from \U0080 to \U009F to control characters.</span></span> <span data-ttu-id="bef81-310">В соответствии со стандартом Юникода должны интерпретироваться как управляющие символы, если их использование определено в приложении эти значения.</span><span class="sxs-lookup"><span data-stu-id="bef81-310">According to the Unicode standard, these values are to be interpreted as control characters unless their use is otherwise defined by an application.</span></span> <span data-ttu-id="bef81-311">Допустимые управляющие символы являются членами <xref:System.Globalization.UnicodeCategory.Control?displayProperty=nameWithType> категории.</span><span class="sxs-lookup"><span data-stu-id="bef81-311">Valid control characters are members of the <xref:System.Globalization.UnicodeCategory.Control?displayProperty=nameWithType> category.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bef81-312">В следующем примере перечисляются кодовая точка Юникода каждого управляющих символов.</span><span class="sxs-lookup"><span data-stu-id="bef81-312">The following example lists the Unicode code point of each of the control characters.</span></span>  
  
 [!code-cpp[System.Char.IsControl#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsControl/CPP/iscontrol1.cpp#1)]
 [!code-csharp[System.Char.IsControl#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsControl/CS/IsControl1.cs#1)]
 [!code-vb[System.Char.IsControl#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsControl/VB/IsControl1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsControl">
      <MemberSignature Language="C#" Value="public static bool IsControl (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsControl(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsControl(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsControl (s As String, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsControl(System::String ^ s, int index);" />
      <MemberSignature Language="F#" Value="static member IsControl : string * int -&gt; bool" Usage="System.char.IsControl (s, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="bef81-313">A string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-313">A string.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="bef81-314">The position of the character to evaluate in <c>s</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-314">The position of the character to evaluate in <c>s</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bef81-315">Indicates whether the character at the specified position in a specified string is categorized as a control character.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-315">Indicates whether the character at the specified position in a specified string is categorized as a control character.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bef81-316">
            <see langword="true" /> if the character at position <paramref name="index" /> in <paramref name="s" /> is a control character; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-316">
              <see langword="true" /> if the character at position <paramref name="index" /> in <paramref name="s" /> is a control character; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bef81-317">Позиций знаков в строке, индексируются, начиная с нуля.</span><span class="sxs-lookup"><span data-stu-id="bef81-317">Character positions in a string are indexed starting from zero.</span></span>  
  
 <span data-ttu-id="bef81-318">Управляющие символы форматирование и другие непечатаемые символы, такие как ACK, МЕТКА, CR, LF, FF и VT.</span><span class="sxs-lookup"><span data-stu-id="bef81-318">Control characters are formatting and other non-printing characters, such as ACK, BEL, CR, FF, LF, and VT.</span></span> <span data-ttu-id="bef81-319">В стандарте Юникода назначает кодовые точки от \U0000 до \U001F, \U007F и от \U0080 до \U009F для управляющие символы.</span><span class="sxs-lookup"><span data-stu-id="bef81-319">The Unicode standard assigns code points from \U0000 to \U001F, \U007F, and from \U0080 to \U009F to control characters.</span></span> <span data-ttu-id="bef81-320">В соответствии со стандартом Юникода должны интерпретироваться как управляющие символы, если их использование определено в приложении эти значения.</span><span class="sxs-lookup"><span data-stu-id="bef81-320">According to the Unicode standard, these values are to be interpreted as control characters unless their use is otherwise defined by an application.</span></span> <span data-ttu-id="bef81-321">Допустимые управляющие символы являются членами <xref:System.Globalization.UnicodeCategory.Control?displayProperty=nameWithType> категории.</span><span class="sxs-lookup"><span data-stu-id="bef81-321">Valid control characters are members of the <xref:System.Globalization.UnicodeCategory.Control?displayProperty=nameWithType> category.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bef81-322">Следующий пример выполняет перечисление символы в строке и определяет, являются ли они управляющие символы.</span><span class="sxs-lookup"><span data-stu-id="bef81-322">The following example enumerates the characters in a string and determines whether any are control characters.</span></span>  
  
 [!code-cpp[System.Char.IsControl#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsControl/CPP/iscontrol2.cpp#2)]
 [!code-csharp[System.Char.IsControl#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsControl/CS/IsControl2.cs#2)]
 [!code-vb[System.Char.IsControl#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsControl/VB/IsControl2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="bef81-323">
            <paramref name="s" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-323">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="bef81-324">
            <paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-324">
              <paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="IsDigit">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="bef81-325">Indicates whether a Unicode character is categorized as a decimal digit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-325">Indicates whether a Unicode character is categorized as a decimal digit.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bef81-326">Допустимые цифры являются членами <xref:System.Globalization.UnicodeCategory.DecimalDigitNumber?displayProperty=nameWithType> категории.</span><span class="sxs-lookup"><span data-stu-id="bef81-326">Valid digits are members of the <xref:System.Globalization.UnicodeCategory.DecimalDigitNumber?displayProperty=nameWithType> category.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsDigit">
      <MemberSignature Language="C#" Value="public static bool IsDigit (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsDigit(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsDigit(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsDigit (c As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsDigit(char c);" />
      <MemberSignature Language="F#" Value="static member IsDigit : char -&gt; bool" Usage="System.char.IsDigit c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="bef81-327">The Unicode character to evaluate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-327">The Unicode character to evaluate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bef81-328">Indicates whether the specified Unicode character is categorized as a decimal digit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-328">Indicates whether the specified Unicode character is categorized as a decimal digit.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bef81-329">
            <see langword="true" /> if <paramref name="c" /> is a decimal digit; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-329">
              <see langword="true" /> if <paramref name="c" /> is a decimal digit; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bef81-330">Этот метод определяет, является ли <xref:System.Char> является цифрой основание системы счисления-10.</span><span class="sxs-lookup"><span data-stu-id="bef81-330">This method determines whether a <xref:System.Char> is a radix-10 digit.</span></span> <span data-ttu-id="bef81-331">Эта ситуация отличается от <xref:System.Char.IsNumber%2A>, который определяет ли `Char` является любой числовой категории Юникода.</span><span class="sxs-lookup"><span data-stu-id="bef81-331">This contrasts with <xref:System.Char.IsNumber%2A>, which determines whether a `Char` is of any numeric Unicode category.</span></span> <span data-ttu-id="bef81-332">Номер включать символы, например дроби, подстрочные знаки, надстрочные знаки, римские цифры, числители валюты, обведенные числа и цифры конкретного скрипта.</span><span class="sxs-lookup"><span data-stu-id="bef81-332">Numbers include characters such as fractions, subscripts, superscripts, Roman numerals, currency numerators, encircled numbers, and script-specific digits.</span></span>  
  
 <span data-ttu-id="bef81-333">Допустимые цифры являются членами <xref:System.Globalization.UnicodeCategory.DecimalDigitNumber?displayProperty=nameWithType> категории.</span><span class="sxs-lookup"><span data-stu-id="bef81-333">Valid digits are members of the <xref:System.Globalization.UnicodeCategory.DecimalDigitNumber?displayProperty=nameWithType> category.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bef81-334">В следующем примере кода показано <xref:System.Char.IsDigit%2A>.</span><span class="sxs-lookup"><span data-stu-id="bef81-334">The following code example demonstrates <xref:System.Char.IsDigit%2A>.</span></span>  
  
 [!code-cpp[System.Char.IsDigit#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsDigit/CPP/isdigit.cpp#4)]
 [!code-csharp[System.Char.IsDigit#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsDigit/CS/isdigit.cs#4)]
 [!code-vb[System.Char.IsDigit#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsDigit/VB/isdigit.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Boolean" />
        <altmember cref="M:System.Char.IsNumber(System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="IsDigit">
      <MemberSignature Language="C#" Value="public static bool IsDigit (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsDigit(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsDigit(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsDigit (s As String, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsDigit(System::String ^ s, int index);" />
      <MemberSignature Language="F#" Value="static member IsDigit : string * int -&gt; bool" Usage="System.char.IsDigit (s, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="bef81-335">A string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-335">A string.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="bef81-336">The position of the character to evaluate in <c>s</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-336">The position of the character to evaluate in <c>s</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bef81-337">Indicates whether the character at the specified position in a specified string is categorized as a decimal digit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-337">Indicates whether the character at the specified position in a specified string is categorized as a decimal digit.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bef81-338">
            <see langword="true" /> if the character at position <paramref name="index" /> in <paramref name="s" /> is a decimal digit; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-338">
              <see langword="true" /> if the character at position <paramref name="index" /> in <paramref name="s" /> is a decimal digit; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bef81-339">Этот метод определяет, является ли <xref:System.Char> является цифрой основание системы счисления-10.</span><span class="sxs-lookup"><span data-stu-id="bef81-339">This method determines whether a <xref:System.Char> is a radix-10 digit.</span></span> <span data-ttu-id="bef81-340">Эта ситуация отличается от <xref:System.Char.IsNumber%2A>, который определяет ли <xref:System.Char> является любой числовой категории Юникода.</span><span class="sxs-lookup"><span data-stu-id="bef81-340">This contrasts with <xref:System.Char.IsNumber%2A>, which determines whether a <xref:System.Char> is of any numeric Unicode category.</span></span> <span data-ttu-id="bef81-341">Номер включать символы, например дроби, подстрочные знаки, надстрочные знаки, римские цифры, числители валюты, обведенные числа и цифры конкретного скрипта.</span><span class="sxs-lookup"><span data-stu-id="bef81-341">Numbers include characters such as fractions, subscripts, superscripts, Roman numerals, currency numerators, encircled numbers, and script-specific digits.</span></span>  
  
 <span data-ttu-id="bef81-342">Позиций знаков в строке, индексируются, начиная с нуля.</span><span class="sxs-lookup"><span data-stu-id="bef81-342">Character positions in a string are indexed starting from zero.</span></span>  
  
 <span data-ttu-id="bef81-343">Допустимые цифры являются членами <xref:System.Globalization.UnicodeCategory.DecimalDigitNumber?displayProperty=nameWithType> категории.</span><span class="sxs-lookup"><span data-stu-id="bef81-343">Valid digits are members of the <xref:System.Globalization.UnicodeCategory.DecimalDigitNumber?displayProperty=nameWithType> category.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bef81-344">В следующем примере кода показано <xref:System.Char.IsDigit%2A>.</span><span class="sxs-lookup"><span data-stu-id="bef81-344">The following code example demonstrates <xref:System.Char.IsDigit%2A>.</span></span>  
  
 [!code-cpp[System.Char.IsDigit#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsDigit/CPP/isdigit.cpp#4)]
 [!code-csharp[System.Char.IsDigit#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsDigit/CS/isdigit.cs#4)]
 [!code-vb[System.Char.IsDigit#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsDigit/VB/isdigit.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="bef81-345">
            <paramref name="s" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-345">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="bef81-346">
            <paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-346">
              <paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Boolean" />
        <altmember cref="M:System.Char.IsNumber(System.Char)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsHighSurrogate">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="bef81-347">Indicates whether the specified <see cref="T:System.Char" /> object is a high surrogate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-347">Indicates whether the specified <see cref="T:System.Char" /> object is a high surrogate.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsHighSurrogate">
      <MemberSignature Language="C#" Value="public static bool IsHighSurrogate (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsHighSurrogate(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsHighSurrogate(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsHighSurrogate (c As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsHighSurrogate(char c);" />
      <MemberSignature Language="F#" Value="static member IsHighSurrogate : char -&gt; bool" Usage="System.char.IsHighSurrogate c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="bef81-348">The Unicode character to evaluate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-348">The Unicode character to evaluate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bef81-349">Indicates whether the specified <see cref="T:System.Char" /> object is a high surrogate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-349">Indicates whether the specified <see cref="T:System.Char" /> object is a high surrogate.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bef81-350">
            <see langword="true" /> if the numeric value of the <paramref name="c" /> parameter ranges from U+D800 through U+DBFF; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-350">
              <see langword="true" /> if the numeric value of the <paramref name="c" /> parameter ranges from U+D800 through U+DBFF; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bef81-351">Помимо представления отдельных символов, с помощью 16-разрядные кодовые точки, кодировка UTF-16 позволяет представлять абстрактные символы с помощью двух 16-разрядных кодовых точек, которые называются суррогатную пару.</span><span class="sxs-lookup"><span data-stu-id="bef81-351">In addition to representing single characters using a 16-bit code point, UTF-16 encoding allows abstract characters to be represented using two 16-bit code points, which is known as a surrogate pair.</span></span> <span data-ttu-id="bef81-352">Первый элемент в этой паре, является старшим символом-заместителем.</span><span class="sxs-lookup"><span data-stu-id="bef81-352">The first element in this pair is the high surrogate.</span></span> <span data-ttu-id="bef81-353">Его кодовая точка находится в диапазоне от U + D800 до U + DBFF.</span><span class="sxs-lookup"><span data-stu-id="bef81-353">Its code point can range from U+D800 to U+DBFF.</span></span> <span data-ttu-id="bef81-354">Отдельный заменяющий не имеет интерпретации свое собственное. он имеет значение только в том случае, если используется как часть суррогатную пару.</span><span class="sxs-lookup"><span data-stu-id="bef81-354">An individual surrogate has no interpretation of its own; it is meaningful only when used as part of a surrogate pair.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bef81-355">В следующем примере кода показано <xref:System.Char.IsHighSurrogate%2A>, <xref:System.Char.IsLowSurrogate%2A>, и <xref:System.Char.IsSurrogatePair%2A> методы.</span><span class="sxs-lookup"><span data-stu-id="bef81-355">The following code example demonstrates the <xref:System.Char.IsHighSurrogate%2A>, <xref:System.Char.IsLowSurrogate%2A>, and <xref:System.Char.IsSurrogatePair%2A> methods.</span></span>  
  
 [!code-cpp[char.surrogate#1](~/samples/snippets/cpp/VS_Snippets_CLR/char.surrogate/CPP/sur.cpp#1)]
 [!code-csharp[char.surrogate#1](~/samples/snippets/csharp/VS_Snippets_CLR/char.surrogate/CS/sur.cs#1)]
 [!code-vb[char.surrogate#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/char.surrogate/VB/sur.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsHighSurrogate">
      <MemberSignature Language="C#" Value="public static bool IsHighSurrogate (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsHighSurrogate(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsHighSurrogate(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsHighSurrogate (s As String, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsHighSurrogate(System::String ^ s, int index);" />
      <MemberSignature Language="F#" Value="static member IsHighSurrogate : string * int -&gt; bool" Usage="System.char.IsHighSurrogate (s, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="bef81-356">A string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-356">A string.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="bef81-357">The position of the character to evaluate in <c>s</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-357">The position of the character to evaluate in <c>s</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bef81-358">Indicates whether the <see cref="T:System.Char" /> object at the specified position in a string is a high surrogate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-358">Indicates whether the <see cref="T:System.Char" /> object at the specified position in a string is a high surrogate.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bef81-359">
            <see langword="true" /> if the numeric value of the specified character in the <paramref name="s" /> parameter ranges from U+D800 through U+DBFF; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-359">
              <see langword="true" /> if the numeric value of the specified character in the <paramref name="s" /> parameter ranges from U+D800 through U+DBFF; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bef81-360">`index` Параметр отсчитывается от нуля.</span><span class="sxs-lookup"><span data-stu-id="bef81-360">The `index` parameter is zero-based.</span></span>  
  
 <span data-ttu-id="bef81-361">Помимо представления отдельных символов, с помощью 16-разрядные кодовые точки, кодировка UTF-16 позволяет представлять абстрактные символы с помощью двух 16-разрядных кодовых точек, которые называются суррогатную пару.</span><span class="sxs-lookup"><span data-stu-id="bef81-361">In addition to representing single characters using a 16-bit code point, UTF-16 encoding allows abstract characters to be represented using two 16-bit code points, which is known as a surrogate pair.</span></span> <span data-ttu-id="bef81-362">Первый элемент в этой паре, является старшим символом-заместителем.</span><span class="sxs-lookup"><span data-stu-id="bef81-362">The first element in this pair is the high surrogate.</span></span> <span data-ttu-id="bef81-363">Его кодовая точка находится в диапазоне от U + D800 до U + DBFF.</span><span class="sxs-lookup"><span data-stu-id="bef81-363">Its code point can range from U+D800 to U+DBFF.</span></span> <span data-ttu-id="bef81-364">Отдельный заменяющий не имеет интерпретации свое собственное. он имеет значение только в том случае, если используется как часть суррогатную пару.</span><span class="sxs-lookup"><span data-stu-id="bef81-364">An individual surrogate has no interpretation of its own; it is meaningful only when used as part of a surrogate pair.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bef81-365">В следующем примере кода показано <xref:System.Char.IsHighSurrogate%2A>, <xref:System.Char.IsLowSurrogate%2A>, и <xref:System.Char.IsSurrogatePair%2A> методы.</span><span class="sxs-lookup"><span data-stu-id="bef81-365">The following code example demonstrates the <xref:System.Char.IsHighSurrogate%2A>, <xref:System.Char.IsLowSurrogate%2A>, and <xref:System.Char.IsSurrogatePair%2A> methods.</span></span>  
  
 [!code-cpp[char.surrogate#1](~/samples/snippets/cpp/VS_Snippets_CLR/char.surrogate/CPP/sur.cpp#1)]
 [!code-csharp[char.surrogate#1](~/samples/snippets/csharp/VS_Snippets_CLR/char.surrogate/CS/sur.cs#1)]
 [!code-vb[char.surrogate#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/char.surrogate/VB/sur.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="bef81-366">
            <paramref name="s" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-366">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="bef81-367">
            <paramref name="index" /> is not a position within <paramref name="s" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-367">
              <paramref name="index" /> is not a position within <paramref name="s" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="IsLetter">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="bef81-368">Indicates whether a Unicode character is categorized as a Unicode letter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-368">Indicates whether a Unicode character is categorized as a Unicode letter.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bef81-369">Этот метод определяет, является ли <xref:System.Char> является членом любой категории букв Юникода.</span><span class="sxs-lookup"><span data-stu-id="bef81-369">This method determines whether a <xref:System.Char> is a member of any category of Unicode letter.</span></span> <span data-ttu-id="bef81-370">Ниже приведены букв Юникода:</span><span class="sxs-lookup"><span data-stu-id="bef81-370">Unicode letters include the following:</span></span>  
  
-   <span data-ttu-id="bef81-371">Прописные буквы, такие как U + 0041 (прописная латинская буква A) до U + 005A (LATIN ЗАГЛАВНАЯ буква Z), или U + 0400 (КИРИЛЛИЦЫ буквы IE WITH GRAVE) до U + 042F (КИРИЛЛИЦА CAPITAL LETTER ИНТЕРЕСНЫМИ).</span><span class="sxs-lookup"><span data-stu-id="bef81-371">Uppercase letters, such as U+0041 (LATIN CAPITAL LETTER A) through U+005A (LATIN CAPITAL LETTER Z), or U+0400 (CYRILLIC CAPITAL LETTER IE WITH GRAVE) through U+042F (CYRILLIC CAPITAL LETTER YA).</span></span> <span data-ttu-id="bef81-372">Эти символы являются членами <xref:System.Globalization.UnicodeCategory.UppercaseLetter?displayProperty=nameWithType> категории.</span><span class="sxs-lookup"><span data-stu-id="bef81-372">These characters are members of the <xref:System.Globalization.UnicodeCategory.UppercaseLetter?displayProperty=nameWithType> category.</span></span>  
  
-   <span data-ttu-id="bef81-373">Строчные буквы, например, U + 0061 (латинскую букву A) до U + 007A (LATIN НЕБОЛЬШОЙ буква Z), или U + 03AC (GREEK НЕБОЛЬШОЙ буква альфа-канал с ТОНОСОМ) до U + 03CE (GREEK НЕБОЛЬШОЙ буква ОМЕГА с ТОНОСОМ).</span><span class="sxs-lookup"><span data-stu-id="bef81-373">Lowercase letters, such as U+0061 (LATIN SMALL LETTER A) through U+007A (LATIN SMALL LETTER Z), or U+03AC (GREEK SMALL LETTER ALPHA WITH TONOS) through U+03CE (GREEK SMALL LETTER OMEGA WITH TONOS).</span></span> <span data-ttu-id="bef81-374">Эти символы являются членами <xref:System.Globalization.UnicodeCategory.LowercaseLetter?displayProperty=nameWithType> категории.</span><span class="sxs-lookup"><span data-stu-id="bef81-374">These characters are members of the <xref:System.Globalization.UnicodeCategory.LowercaseLetter?displayProperty=nameWithType> category.</span></span>  
  
-   <span data-ttu-id="bef81-375">Заголовок регистр буквы, такие как U + 01 C 5 (LATIN ЗАГЛАВНУЮ букву D с НЕБОЛЬШОЙ буква Z с ГАЛОЧКОЙ) или U + 1FFC (GREEK ЗАГЛАВНАЯ буква ОМЕГА с PROSGEGRAMMENI).</span><span class="sxs-lookup"><span data-stu-id="bef81-375">Title case letters, such as U+01C5 (LATIN CAPITAL LETTER D WITH SMALL LETTER Z WITH CARON) or U+1FFC (GREEK CAPITAL LETTER OMEGA WITH PROSGEGRAMMENI).</span></span> <span data-ttu-id="bef81-376">Эти символы являются членами <xref:System.Globalization.UnicodeCategory.TitlecaseLetter?displayProperty=nameWithType> категории.</span><span class="sxs-lookup"><span data-stu-id="bef81-376">These characters are members of the <xref:System.Globalization.UnicodeCategory.TitlecaseLetter?displayProperty=nameWithType> category.</span></span>  
  
-   <span data-ttu-id="bef81-377">Модификаторы, такие как U + 02B0 (МОДИФИКАТОР буквы НЕБОЛЬШОЙ H) до U + 02C 1 (МОДИФИКАТОР буквы ПЕРЕВЕРНУТ GLOTTAL STOP), или U + 1D2C (объект прописная буква МОДИФИКАТОР) до U + 1 d 61 (МОДИФИКАТОР буквы НЕБОЛЬШОЙ ХИ).</span><span class="sxs-lookup"><span data-stu-id="bef81-377">Modifiers, such as U+02B0 (MODIFIER LETTER SMALL H) through U+02C1 (MODIFIER LETTER REVERSED GLOTTAL STOP), or U+1D2C (MODIFIER LETTER CAPITAL A) through U+1D61 (MODIFIER LETTER SMALL CHI).</span></span> <span data-ttu-id="bef81-378">Эти символы являются членами <xref:System.Globalization.UnicodeCategory.ModifierLetter?displayProperty=nameWithType> категории.</span><span class="sxs-lookup"><span data-stu-id="bef81-378">These characters are members of the <xref:System.Globalization.UnicodeCategory.ModifierLetter?displayProperty=nameWithType> category.</span></span>  
  
-   <span data-ttu-id="bef81-379">Другие буквы, например, U + 05 D 0 (АЛИФ буквы ИВРИТ) до U + 05EA (TAV буквы ИВРИТ), U + 0621 (АРАБСКИЕ буквы ГАМЗА) до U + 063A (АРАБСКИЕ буквы GHAIN) или U + 4e00 до (\<идеографических ККЯ, первый >) до U + 9 FC 3 (\<идеографических ККЯ, Дата последнего >).</span><span class="sxs-lookup"><span data-stu-id="bef81-379">Other letters, such as U+05D0 (HEBREW LETTER ALEF) through U+05EA (HEBREW LETTER TAV), U+0621 (ARABIC LETTER HAMZA) through U+063A (ARABIC LETTER GHAIN), or U+4E00 (\<CJK Ideograph, First>) through U+9FC3 (\<CJK Ideograph, Last>).</span></span> <span data-ttu-id="bef81-380">Эти символы являются членами <xref:System.Globalization.UnicodeCategory.OtherLetter?displayProperty=nameWithType> категории.</span><span class="sxs-lookup"><span data-stu-id="bef81-380">These characters are members of the <xref:System.Globalization.UnicodeCategory.OtherLetter?displayProperty=nameWithType> category.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsLetter">
      <MemberSignature Language="C#" Value="public static bool IsLetter (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsLetter(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsLetter(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsLetter (c As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsLetter(char c);" />
      <MemberSignature Language="F#" Value="static member IsLetter : char -&gt; bool" Usage="System.char.IsLetter c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="bef81-381">The Unicode character to evaluate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-381">The Unicode character to evaluate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bef81-382">Indicates whether the specified Unicode character is categorized as a Unicode letter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-382">Indicates whether the specified Unicode character is categorized as a Unicode letter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bef81-383">
            <see langword="true" /> if <paramref name="c" /> is a letter; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-383">
              <see langword="true" /> if <paramref name="c" /> is a letter; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bef81-384">Этот метод определяет, является ли <xref:System.Char> является членом любой категории букв Юникода.</span><span class="sxs-lookup"><span data-stu-id="bef81-384">This method determines whether a <xref:System.Char> is a member of any category of Unicode letter.</span></span> <span data-ttu-id="bef81-385">Ниже приведены букв Юникода:</span><span class="sxs-lookup"><span data-stu-id="bef81-385">Unicode letters include the following:</span></span>  
  
-   <span data-ttu-id="bef81-386">Прописные буквы, такие как U + 0041 (прописная латинская буква A) до U + 005A (LATIN ЗАГЛАВНАЯ буква Z), или U + 0400 (КИРИЛЛИЦЫ буквы IE WITH GRAVE) до U + 042F (КИРИЛЛИЦА CAPITAL LETTER ИНТЕРЕСНЫМИ).</span><span class="sxs-lookup"><span data-stu-id="bef81-386">Uppercase letters, such as U+0041 (LATIN CAPITAL LETTER A) through U+005A (LATIN CAPITAL LETTER Z), or U+0400 (CYRILLIC CAPITAL LETTER IE WITH GRAVE) through U+042F (CYRILLIC CAPITAL LETTER YA).</span></span> <span data-ttu-id="bef81-387">Эти символы являются членами <xref:System.Globalization.UnicodeCategory.UppercaseLetter?displayProperty=nameWithType> категории.</span><span class="sxs-lookup"><span data-stu-id="bef81-387">These characters are members of the <xref:System.Globalization.UnicodeCategory.UppercaseLetter?displayProperty=nameWithType> category.</span></span>  
  
-   <span data-ttu-id="bef81-388">Строчные буквы, например, U + 0061 (латинскую букву A) до U + 007A (LATIN НЕБОЛЬШОЙ буква Z), или U + 03AC (GREEK НЕБОЛЬШОЙ буква альфа-канал с ТОНОСОМ) до U + 03CE (GREEK НЕБОЛЬШОЙ буква ОМЕГА с ТОНОСОМ).</span><span class="sxs-lookup"><span data-stu-id="bef81-388">Lowercase letters, such as U+0061 (LATIN SMALL LETTER A) through U+007A (LATIN SMALL LETTER Z), or U+03AC (GREEK SMALL LETTER ALPHA WITH TONOS) through U+03CE (GREEK SMALL LETTER OMEGA WITH TONOS).</span></span> <span data-ttu-id="bef81-389">Эти символы являются членами <xref:System.Globalization.UnicodeCategory.LowercaseLetter?displayProperty=nameWithType> категории.</span><span class="sxs-lookup"><span data-stu-id="bef81-389">These characters are members of the <xref:System.Globalization.UnicodeCategory.LowercaseLetter?displayProperty=nameWithType> category.</span></span>  
  
-   <span data-ttu-id="bef81-390">Заголовок регистр буквы, такие как U + 01 C 5 (LATIN ЗАГЛАВНУЮ букву D с НЕБОЛЬШОЙ буква Z с ГАЛОЧКОЙ) или U + 1FFC (GREEK ЗАГЛАВНАЯ буква ОМЕГА с PROSGEGRAMMENI).</span><span class="sxs-lookup"><span data-stu-id="bef81-390">Title case letters, such as U+01C5 (LATIN CAPITAL LETTER D WITH SMALL LETTER Z WITH CARON) or U+1FFC (GREEK CAPITAL LETTER OMEGA WITH PROSGEGRAMMENI).</span></span> <span data-ttu-id="bef81-391">Эти символы являются членами <xref:System.Globalization.UnicodeCategory.TitlecaseLetter?displayProperty=nameWithType> категории.</span><span class="sxs-lookup"><span data-stu-id="bef81-391">These characters are members of the <xref:System.Globalization.UnicodeCategory.TitlecaseLetter?displayProperty=nameWithType> category.</span></span>  
  
-   <span data-ttu-id="bef81-392">Модификаторы, такие как U + 02B0 (МОДИФИКАТОР буквы НЕБОЛЬШОЙ H) до U + 02C 1 (МОДИФИКАТОР буквы ПЕРЕВЕРНУТ GLOTTAL STOP), или U + 1D2C (объект прописная буква МОДИФИКАТОР) до U + 1 d 61 (МОДИФИКАТОР буквы НЕБОЛЬШОЙ ХИ).</span><span class="sxs-lookup"><span data-stu-id="bef81-392">Modifiers, such as U+02B0 (MODIFIER LETTER SMALL H) through U+02C1 (MODIFIER LETTER REVERSED GLOTTAL STOP), or U+1D2C (MODIFIER LETTER CAPITAL A) through U+1D61 (MODIFIER LETTER SMALL CHI).</span></span> <span data-ttu-id="bef81-393">Эти символы являются членами <xref:System.Globalization.UnicodeCategory.ModifierLetter?displayProperty=nameWithType> категории.</span><span class="sxs-lookup"><span data-stu-id="bef81-393">These characters are members of the <xref:System.Globalization.UnicodeCategory.ModifierLetter?displayProperty=nameWithType> category.</span></span>  
  
-   <span data-ttu-id="bef81-394">Другие буквы, например, U + 05 D 0 (АЛИФ буквы ИВРИТ) до U + 05EA (TAV буквы ИВРИТ), U + 0621 (АРАБСКИЕ буквы ГАМЗА) до U + 063A (АРАБСКИЕ буквы GHAIN) или U + 4e00 до (\<идеографических ККЯ, первый >) до U + 9 FC 3 (\<идеографических ККЯ, Дата последнего >).</span><span class="sxs-lookup"><span data-stu-id="bef81-394">Other letters, such as U+05D0 (HEBREW LETTER ALEF) through U+05EA (HEBREW LETTER TAV), U+0621 (ARABIC LETTER HAMZA) through U+063A (ARABIC LETTER GHAIN), or U+4E00 (\<CJK Ideograph, First>) through U+9FC3 (\<CJK Ideograph, Last>).</span></span> <span data-ttu-id="bef81-395">Эти символы являются членами <xref:System.Globalization.UnicodeCategory.OtherLetter?displayProperty=nameWithType> категории.</span><span class="sxs-lookup"><span data-stu-id="bef81-395">These characters are members of the <xref:System.Globalization.UnicodeCategory.OtherLetter?displayProperty=nameWithType> category.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bef81-396">В следующем примере кода показано <xref:System.Char.IsLetter%2A>.</span><span class="sxs-lookup"><span data-stu-id="bef81-396">The following code example demonstrates <xref:System.Char.IsLetter%2A>.</span></span>  
  
 [!code-cpp[System.Char.IsLetter#5](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsLetter/CPP/isletter.cpp#5)]
 [!code-csharp[System.Char.IsLetter#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsLetter/CS/isletter.cs#5)]
 [!code-vb[System.Char.IsLetter#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsLetter/VB/isletter.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Boolean" />
      </Docs>
    </Member>
    <Member MemberName="IsLetter">
      <MemberSignature Language="C#" Value="public static bool IsLetter (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsLetter(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsLetter(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsLetter (s As String, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsLetter(System::String ^ s, int index);" />
      <MemberSignature Language="F#" Value="static member IsLetter : string * int -&gt; bool" Usage="System.char.IsLetter (s, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="bef81-397">A string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-397">A string.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="bef81-398">The position of the character to evaluate in <c>s</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-398">The position of the character to evaluate in <c>s</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bef81-399">Indicates whether the character at the specified position in a specified string is categorized as a Unicode letter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-399">Indicates whether the character at the specified position in a specified string is categorized as a Unicode letter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bef81-400">
            <see langword="true" /> if the character at position <paramref name="index" /> in <paramref name="s" /> is a letter; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-400">
              <see langword="true" /> if the character at position <paramref name="index" /> in <paramref name="s" /> is a letter; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bef81-401">Позиций знаков в строке, индексируются, начиная с нуля.</span><span class="sxs-lookup"><span data-stu-id="bef81-401">Character positions in a string are indexed starting from zero.</span></span>  
  
 <span data-ttu-id="bef81-402">Этот метод определяет, является ли символ в указанной позиции индекса в строке является членом любой категории букв Юникода.</span><span class="sxs-lookup"><span data-stu-id="bef81-402">This method determines whether the character at a specified index position in a string is a member of any category of Unicode letter.</span></span> <span data-ttu-id="bef81-403">Ниже приведены букв Юникода:</span><span class="sxs-lookup"><span data-stu-id="bef81-403">Unicode letters include the following:</span></span>  
  
-   <span data-ttu-id="bef81-404">Прописные буквы, такие как U + 0041 (прописная латинская буква A) до U + 005A (LATIN ЗАГЛАВНАЯ буква Z), или U + 0400 (КИРИЛЛИЦЫ буквы IE WITH GRAVE) до U + 042F (КИРИЛЛИЦА CAPITAL LETTER ИНТЕРЕСНЫМИ).</span><span class="sxs-lookup"><span data-stu-id="bef81-404">Uppercase letters, such as U+0041 (LATIN CAPITAL LETTER A) through U+005A (LATIN CAPITAL LETTER Z), or U+0400 (CYRILLIC CAPITAL LETTER IE WITH GRAVE) through U+042F (CYRILLIC CAPITAL LETTER YA).</span></span> <span data-ttu-id="bef81-405">Эти символы являются членами <xref:System.Globalization.UnicodeCategory.UppercaseLetter?displayProperty=nameWithType> категории.</span><span class="sxs-lookup"><span data-stu-id="bef81-405">These characters are members of the <xref:System.Globalization.UnicodeCategory.UppercaseLetter?displayProperty=nameWithType> category.</span></span>  
  
-   <span data-ttu-id="bef81-406">Строчные буквы, например, U + 0061 (латинскую букву A) до U + 007A (LATIN НЕБОЛЬШОЙ буква Z), или U + 03AC (GREEK НЕБОЛЬШОЙ буква альфа-канал с ТОНОСОМ) до U + 03CE (GREEK НЕБОЛЬШОЙ буква ОМЕГА с ТОНОСОМ).</span><span class="sxs-lookup"><span data-stu-id="bef81-406">Lowercase letters, such as U+0061 (LATIN SMALL LETTER A) through U+007A (LATIN SMALL LETTER Z), or U+03AC (GREEK SMALL LETTER ALPHA WITH TONOS) through U+03CE (GREEK SMALL LETTER OMEGA WITH TONOS).</span></span> <span data-ttu-id="bef81-407">Эти символы являются членами <xref:System.Globalization.UnicodeCategory.LowercaseLetter?displayProperty=nameWithType> категории.</span><span class="sxs-lookup"><span data-stu-id="bef81-407">These characters are members of the <xref:System.Globalization.UnicodeCategory.LowercaseLetter?displayProperty=nameWithType> category.</span></span>  
  
-   <span data-ttu-id="bef81-408">Заголовок регистр буквы, такие как U + 01 C 5 (LATIN ЗАГЛАВНУЮ букву D с НЕБОЛЬШОЙ буква Z с ГАЛОЧКОЙ) или U + 1FFC (GREEK ЗАГЛАВНАЯ буква ОМЕГА с PROSGEGRAMMENI).</span><span class="sxs-lookup"><span data-stu-id="bef81-408">Title case letters, such as U+01C5 (LATIN CAPITAL LETTER D WITH SMALL LETTER Z WITH CARON) or U+1FFC (GREEK CAPITAL LETTER OMEGA WITH PROSGEGRAMMENI).</span></span> <span data-ttu-id="bef81-409">Эти символы являются членами <xref:System.Globalization.UnicodeCategory.TitlecaseLetter?displayProperty=nameWithType> категории.</span><span class="sxs-lookup"><span data-stu-id="bef81-409">These characters are members of the <xref:System.Globalization.UnicodeCategory.TitlecaseLetter?displayProperty=nameWithType> category.</span></span>  
  
-   <span data-ttu-id="bef81-410">Модификаторы, такие как U + 02B0 (МОДИФИКАТОР буквы НЕБОЛЬШОЙ H) до U + 02C 1 (МОДИФИКАТОР буквы ПЕРЕВЕРНУТ GLOTTAL STOP), или U + 1D2C (объект прописная буква МОДИФИКАТОР) до U + 1 d 61 (МОДИФИКАТОР буквы НЕБОЛЬШОЙ ХИ).</span><span class="sxs-lookup"><span data-stu-id="bef81-410">Modifiers, such as U+02B0 (MODIFIER LETTER SMALL H) through U+02C1 (MODIFIER LETTER REVERSED GLOTTAL STOP), or U+1D2C (MODIFIER LETTER CAPITAL A) through U+1D61 (MODIFIER LETTER SMALL CHI).</span></span> <span data-ttu-id="bef81-411">Эти символы являются членами <xref:System.Globalization.UnicodeCategory.ModifierLetter?displayProperty=nameWithType> категории.</span><span class="sxs-lookup"><span data-stu-id="bef81-411">These characters are members of the <xref:System.Globalization.UnicodeCategory.ModifierLetter?displayProperty=nameWithType> category.</span></span>  
  
-   <span data-ttu-id="bef81-412">Другие буквы, например, U + 05 D 0 (АЛИФ буквы ИВРИТ) до U + 05EA (TAV буквы ИВРИТ), U + 0621 (АРАБСКИЕ буквы ГАМЗА) до U + 063A (АРАБСКИЕ буквы GHAIN) или U + 4e00 до (\<идеографических ККЯ, первый >) до U + 9 FC 3 (\<идеографических ККЯ, Дата последнего >).</span><span class="sxs-lookup"><span data-stu-id="bef81-412">Other letters, such as U+05D0 (HEBREW LETTER ALEF) through U+05EA (HEBREW LETTER TAV), U+0621 (ARABIC LETTER HAMZA) through U+063A (ARABIC LETTER GHAIN), or U+4E00 (\<CJK Ideograph, First>) through U+9FC3 (\<CJK Ideograph, Last>).</span></span> <span data-ttu-id="bef81-413">Эти символы являются членами <xref:System.Globalization.UnicodeCategory.OtherLetter?displayProperty=nameWithType> категории.</span><span class="sxs-lookup"><span data-stu-id="bef81-413">These characters are members of the <xref:System.Globalization.UnicodeCategory.OtherLetter?displayProperty=nameWithType> category.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bef81-414">В следующем примере кода показано <xref:System.Char.IsLetter%2A>.</span><span class="sxs-lookup"><span data-stu-id="bef81-414">The following code example demonstrates <xref:System.Char.IsLetter%2A>.</span></span>  
  
 [!code-cpp[System.Char.IsLetter#5](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsLetter/CPP/isletter.cpp#5)]
 [!code-csharp[System.Char.IsLetter#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsLetter/CS/isletter.cs#5)]
 [!code-vb[System.Char.IsLetter#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsLetter/VB/isletter.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="bef81-415">
            <paramref name="s" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-415">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="bef81-416">
            <paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-416">
              <paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Boolean" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsLetterOrDigit">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="bef81-417">Indicates whether a Unicode character is categorized as a letter or a decimal digit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-417">Indicates whether a Unicode character is categorized as a letter or a decimal digit.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bef81-418">Допустимые буквы и десятичные цифры являются членами следующих категорий в <xref:System.Globalization.UnicodeCategory>: `UppercaseLetter`, `LowercaseLetter`, `TitlecaseLetter`, `ModifierLetter`, `OtherLetter`, или `DecimalDigitNumber`.</span><span class="sxs-lookup"><span data-stu-id="bef81-418">Valid letters and decimal digits are members of the following categories in <xref:System.Globalization.UnicodeCategory>: `UppercaseLetter`, `LowercaseLetter`, `TitlecaseLetter`, `ModifierLetter`, `OtherLetter`, or `DecimalDigitNumber`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsLetterOrDigit">
      <MemberSignature Language="C#" Value="public static bool IsLetterOrDigit (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsLetterOrDigit(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsLetterOrDigit(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsLetterOrDigit (c As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsLetterOrDigit(char c);" />
      <MemberSignature Language="F#" Value="static member IsLetterOrDigit : char -&gt; bool" Usage="System.char.IsLetterOrDigit c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="bef81-419">The Unicode character to evaluate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-419">The Unicode character to evaluate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bef81-420">Indicates whether the specified Unicode character is categorized as a letter or a decimal digit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-420">Indicates whether the specified Unicode character is categorized as a letter or a decimal digit.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bef81-421">
            <see langword="true" /> if <paramref name="c" /> is a letter or a decimal digit; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-421">
              <see langword="true" /> if <paramref name="c" /> is a letter or a decimal digit; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bef81-422">Допустимые буквы и десятичные цифры являются членами следующих категорий в <xref:System.Globalization.UnicodeCategory>: `UppercaseLetter`, `LowercaseLetter`, `TitlecaseLetter`, `ModifierLetter`, `OtherLetter`, или `DecimalDigitNumber`.</span><span class="sxs-lookup"><span data-stu-id="bef81-422">Valid letters and decimal digits are members of the following categories in <xref:System.Globalization.UnicodeCategory>: `UppercaseLetter`, `LowercaseLetter`, `TitlecaseLetter`, `ModifierLetter`, `OtherLetter`, or `DecimalDigitNumber`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bef81-423">В следующем примере кода показано <xref:System.Char.IsLetterOrDigit%2A>.</span><span class="sxs-lookup"><span data-stu-id="bef81-423">The following code example demonstrates <xref:System.Char.IsLetterOrDigit%2A>.</span></span>  
  
 [!code-cpp[System.Char.IsLetterOrDigit#6](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsLetterOrDigit/CPP/isletterordigit.cpp#6)]
 [!code-csharp[System.Char.IsLetterOrDigit#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsLetterOrDigit/CS/isletterordigit.cs#6)]
 [!code-vb[System.Char.IsLetterOrDigit#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsLetterOrDigit/VB/isletterordigit.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Boolean" />
      </Docs>
    </Member>
    <Member MemberName="IsLetterOrDigit">
      <MemberSignature Language="C#" Value="public static bool IsLetterOrDigit (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsLetterOrDigit(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsLetterOrDigit(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsLetterOrDigit (s As String, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsLetterOrDigit(System::String ^ s, int index);" />
      <MemberSignature Language="F#" Value="static member IsLetterOrDigit : string * int -&gt; bool" Usage="System.char.IsLetterOrDigit (s, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="bef81-424">A string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-424">A string.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="bef81-425">The position of the character to evaluate in <c>s</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-425">The position of the character to evaluate in <c>s</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bef81-426">Indicates whether the character at the specified position in a specified string is categorized as a letter or a decimal digit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-426">Indicates whether the character at the specified position in a specified string is categorized as a letter or a decimal digit.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bef81-427">
            <see langword="true" /> if the character at position <paramref name="index" /> in <paramref name="s" /> is a letter or a decimal digit; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-427">
              <see langword="true" /> if the character at position <paramref name="index" /> in <paramref name="s" /> is a letter or a decimal digit; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bef81-428">Позиций знаков в строке, индексируются, начиная с нуля.</span><span class="sxs-lookup"><span data-stu-id="bef81-428">Character positions in a string are indexed starting from zero.</span></span>  
  
 <span data-ttu-id="bef81-429">Допустимые буквы и десятичные цифры являются членами следующих категорий в <xref:System.Globalization.UnicodeCategory>: `UppercaseLetter`, `LowercaseLetter`, `TitlecaseLetter`, `ModifierLetter`, `OtherLetter`, или `DecimalDigitNumber`.</span><span class="sxs-lookup"><span data-stu-id="bef81-429">Valid letters and decimal digits are members of the following categories in <xref:System.Globalization.UnicodeCategory>: `UppercaseLetter`, `LowercaseLetter`, `TitlecaseLetter`, `ModifierLetter`, `OtherLetter`, or `DecimalDigitNumber`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bef81-430">В следующем примере кода показано <xref:System.Char.IsLetterOrDigit%2A>.</span><span class="sxs-lookup"><span data-stu-id="bef81-430">The following code example demonstrates <xref:System.Char.IsLetterOrDigit%2A>.</span></span>  
  
 [!code-cpp[System.Char.IsLetterOrDigit#6](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsLetterOrDigit/CPP/isletterordigit.cpp#6)]
 [!code-csharp[System.Char.IsLetterOrDigit#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsLetterOrDigit/CS/isletterordigit.cs#6)]
 [!code-vb[System.Char.IsLetterOrDigit#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsLetterOrDigit/VB/isletterordigit.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="bef81-431">
            <paramref name="s" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-431">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="bef81-432">
            <paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-432">
              <paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Boolean" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsLower">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="bef81-433">Indicates whether a Unicode character is categorized as a lowercase letter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-433">Indicates whether a Unicode character is categorized as a lowercase letter.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsLower">
      <MemberSignature Language="C#" Value="public static bool IsLower (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsLower(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsLower(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsLower (c As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsLower(char c);" />
      <MemberSignature Language="F#" Value="static member IsLower : char -&gt; bool" Usage="System.char.IsLower c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="bef81-434">The Unicode character to evaluate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-434">The Unicode character to evaluate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bef81-435">Indicates whether the specified Unicode character is categorized as a lowercase letter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-435">Indicates whether the specified Unicode character is categorized as a lowercase letter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bef81-436">
            <see langword="true" /> if <paramref name="c" /> is a lowercase letter; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-436">
              <see langword="true" /> if <paramref name="c" /> is a lowercase letter; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bef81-437">Допустимые буквы нижнего регистра являются членами следующей категории в <xref:System.Globalization.UnicodeCategory>: `LowercaseLetter`.</span><span class="sxs-lookup"><span data-stu-id="bef81-437">Valid lowercase letters are members of the following category in <xref:System.Globalization.UnicodeCategory>: `LowercaseLetter`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bef81-438">В следующем примере кода показано <xref:System.Char.IsLower%2A>.</span><span class="sxs-lookup"><span data-stu-id="bef81-438">The following code example demonstrates <xref:System.Char.IsLower%2A>.</span></span>  
  
 [!code-cpp[System.Char.IsLower#7](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsLower/CPP/islower.cpp#7)]
 [!code-csharp[System.Char.IsLower#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsLower/CS/islower.cs#7)]
 [!code-vb[System.Char.IsLower#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsLower/VB/islower.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Boolean" />
        <altmember cref="M:System.Char.IsUpper(System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="IsLower">
      <MemberSignature Language="C#" Value="public static bool IsLower (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsLower(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsLower(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsLower (s As String, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsLower(System::String ^ s, int index);" />
      <MemberSignature Language="F#" Value="static member IsLower : string * int -&gt; bool" Usage="System.char.IsLower (s, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="bef81-439">A string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-439">A string.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="bef81-440">The position of the character to evaluate in <c>s</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-440">The position of the character to evaluate in <c>s</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bef81-441">Indicates whether the character at the specified position in a specified string is categorized as a lowercase letter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-441">Indicates whether the character at the specified position in a specified string is categorized as a lowercase letter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bef81-442">
            <see langword="true" /> if the character at position <paramref name="index" /> in <paramref name="s" /> is a lowercase letter; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-442">
              <see langword="true" /> if the character at position <paramref name="index" /> in <paramref name="s" /> is a lowercase letter; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bef81-443">Позиций знаков в строке, индексируются, начиная с нуля.</span><span class="sxs-lookup"><span data-stu-id="bef81-443">Character positions in a string are indexed starting from zero.</span></span>  
  
 <span data-ttu-id="bef81-444">Допустимые буквы нижнего регистра являются членами следующей категории в <xref:System.Globalization.UnicodeCategory>: `LowercaseLetter`.</span><span class="sxs-lookup"><span data-stu-id="bef81-444">Valid lowercase letters are members of the following category in <xref:System.Globalization.UnicodeCategory>: `LowercaseLetter`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bef81-445">В следующем примере кода показано <xref:System.Char.IsLower%2A>.</span><span class="sxs-lookup"><span data-stu-id="bef81-445">The following code example demonstrates <xref:System.Char.IsLower%2A>.</span></span>  
  
 [!code-cpp[System.Char.IsLower#7](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsLower/CPP/islower.cpp#7)]
 [!code-csharp[System.Char.IsLower#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsLower/CS/islower.cs#7)]
 [!code-vb[System.Char.IsLower#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsLower/VB/islower.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="bef81-446">
            <paramref name="s" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-446">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="bef81-447">
            <paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-447">
              <paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Boolean" />
        <altmember cref="T:System.String" />
        <altmember cref="M:System.Char.IsUpper(System.Char)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsLowSurrogate">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="bef81-448">Indicates whether the specified <see cref="T:System.Char" /> object is a low surrogate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-448">Indicates whether the specified <see cref="T:System.Char" /> object is a low surrogate.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsLowSurrogate">
      <MemberSignature Language="C#" Value="public static bool IsLowSurrogate (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsLowSurrogate(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsLowSurrogate(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsLowSurrogate (c As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsLowSurrogate(char c);" />
      <MemberSignature Language="F#" Value="static member IsLowSurrogate : char -&gt; bool" Usage="System.char.IsLowSurrogate c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="bef81-449">The character to evaluate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-449">The character to evaluate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bef81-450">Indicates whether the specified <see cref="T:System.Char" /> object is a low surrogate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-450">Indicates whether the specified <see cref="T:System.Char" /> object is a low surrogate.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bef81-451">
            <see langword="true" /> if the numeric value of the <paramref name="c" /> parameter ranges from U+DC00 through U+DFFF; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-451">
              <see langword="true" /> if the numeric value of the <paramref name="c" /> parameter ranges from U+DC00 through U+DFFF; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bef81-452">Помимо представления отдельных символов, с помощью 16-разрядные кодовые точки, кодировка UTF-16 позволяет представлять абстрактные символы с помощью двух 16-разрядных кодовых точек, которые называются суррогатную пару.</span><span class="sxs-lookup"><span data-stu-id="bef81-452">In addition to representing single characters using a 16-bit code point, UTF-16 encoding allows abstract characters to be represented using two 16-bit code points, which is known as a surrogate pair.</span></span> <span data-ttu-id="bef81-453">Второй элемент в этой паре является младшим символом-заместителем.</span><span class="sxs-lookup"><span data-stu-id="bef81-453">The second element in this pair is the low surrogate.</span></span> <span data-ttu-id="bef81-454">Его кодовая точка находится в диапазоне от U + DC00 до U + DFFF.</span><span class="sxs-lookup"><span data-stu-id="bef81-454">Its code point can range from U+DC00 to U+DFFF.</span></span> <span data-ttu-id="bef81-455">Отдельный заменяющий не имеет интерпретации свое собственное. он имеет значение только в том случае, если используется как часть суррогатную пару.</span><span class="sxs-lookup"><span data-stu-id="bef81-455">An individual surrogate has no interpretation of its own; it is meaningful only when used as part of a surrogate pair.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bef81-456">В следующем примере кода показано <xref:System.Char.IsHighSurrogate%2A>, <xref:System.Char.IsLowSurrogate%2A>, и <xref:System.Char.IsSurrogatePair%2A> методы.</span><span class="sxs-lookup"><span data-stu-id="bef81-456">The following code example demonstrates the <xref:System.Char.IsHighSurrogate%2A>, <xref:System.Char.IsLowSurrogate%2A>, and <xref:System.Char.IsSurrogatePair%2A> methods.</span></span>  
  
 [!code-cpp[char.surrogate#1](~/samples/snippets/cpp/VS_Snippets_CLR/char.surrogate/CPP/sur.cpp#1)]
 [!code-csharp[char.surrogate#1](~/samples/snippets/csharp/VS_Snippets_CLR/char.surrogate/CS/sur.cs#1)]
 [!code-vb[char.surrogate#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/char.surrogate/VB/sur.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsLowSurrogate">
      <MemberSignature Language="C#" Value="public static bool IsLowSurrogate (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsLowSurrogate(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsLowSurrogate(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsLowSurrogate (s As String, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsLowSurrogate(System::String ^ s, int index);" />
      <MemberSignature Language="F#" Value="static member IsLowSurrogate : string * int -&gt; bool" Usage="System.char.IsLowSurrogate (s, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="bef81-457">A string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-457">A string.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="bef81-458">The position of the character to evaluate in <c>s</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-458">The position of the character to evaluate in <c>s</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bef81-459">Indicates whether the <see cref="T:System.Char" /> object at the specified position in a string is a low surrogate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-459">Indicates whether the <see cref="T:System.Char" /> object at the specified position in a string is a low surrogate.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bef81-460">
            <see langword="true" /> if the numeric value of the specified character in the <paramref name="s" /> parameter ranges from U+DC00 through U+DFFF; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-460">
              <see langword="true" /> if the numeric value of the specified character in the <paramref name="s" /> parameter ranges from U+DC00 through U+DFFF; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bef81-461">`index` Параметр отсчитывается от нуля.</span><span class="sxs-lookup"><span data-stu-id="bef81-461">The `index` parameter is zero-based.</span></span>  
  
 <span data-ttu-id="bef81-462">Помимо представления отдельных символов, с помощью 16-разрядные кодовые точки, кодировка UTF-16 позволяет представлять абстрактные символы с помощью двух 16-разрядных кодовых точек, которые называются суррогатную пару.</span><span class="sxs-lookup"><span data-stu-id="bef81-462">In addition to representing single characters using a 16-bit code point, UTF-16 encoding allows abstract characters to be represented using two 16-bit code points, which is known as a surrogate pair.</span></span> <span data-ttu-id="bef81-463">Второй элемент в этой паре является младшим символом-заместителем.</span><span class="sxs-lookup"><span data-stu-id="bef81-463">The second element in this pair is the low surrogate.</span></span> <span data-ttu-id="bef81-464">Его кодовая точка находится в диапазоне от U + DC00 до U + DFFF.</span><span class="sxs-lookup"><span data-stu-id="bef81-464">Its code point can range from U+DC00 to U+DFFF.</span></span> <span data-ttu-id="bef81-465">Отдельный заменяющий не имеет интерпретации свое собственное. он имеет значение только в том случае, если используется как часть суррогатную пару.</span><span class="sxs-lookup"><span data-stu-id="bef81-465">An individual surrogate has no interpretation of its own; it is meaningful only when used as part of a surrogate pair.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bef81-466">В следующем примере кода показано <xref:System.Char.IsHighSurrogate%2A>, <xref:System.Char.IsLowSurrogate%2A>, и <xref:System.Char.IsSurrogatePair%2A> методы.</span><span class="sxs-lookup"><span data-stu-id="bef81-466">The following code example demonstrates the <xref:System.Char.IsHighSurrogate%2A>, <xref:System.Char.IsLowSurrogate%2A>, and <xref:System.Char.IsSurrogatePair%2A> methods.</span></span>  
  
 [!code-cpp[char.surrogate#1](~/samples/snippets/cpp/VS_Snippets_CLR/char.surrogate/CPP/sur.cpp#1)]
 [!code-csharp[char.surrogate#1](~/samples/snippets/csharp/VS_Snippets_CLR/char.surrogate/CS/sur.cs#1)]
 [!code-vb[char.surrogate#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/char.surrogate/VB/sur.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="bef81-467">
            <paramref name="s" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-467">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="bef81-468">
            <paramref name="index" /> is not a position within <paramref name="s" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-468">
              <paramref name="index" /> is not a position within <paramref name="s" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="IsNumber">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="bef81-469">Indicates whether a Unicode character is categorized as a number.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-469">Indicates whether a Unicode character is categorized as a number.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsNumber">
      <MemberSignature Language="C#" Value="public static bool IsNumber (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsNumber(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsNumber(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsNumber (c As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsNumber(char c);" />
      <MemberSignature Language="F#" Value="static member IsNumber : char -&gt; bool" Usage="System.char.IsNumber c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="bef81-470">The Unicode character to evaluate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-470">The Unicode character to evaluate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bef81-471">Indicates whether the specified Unicode character is categorized as a number.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-471">Indicates whether the specified Unicode character is categorized as a number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bef81-472">
            <see langword="true" /> if <paramref name="c" /> is a number; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-472">
              <see langword="true" /> if <paramref name="c" /> is a number; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bef81-473">Этот метод определяет, является ли <xref:System.Char> является любой числовой категории Юникода.</span><span class="sxs-lookup"><span data-stu-id="bef81-473">This method determines whether a <xref:System.Char> is of any numeric Unicode category.</span></span> <span data-ttu-id="bef81-474">Помимо цифр, номера включают символы, дроби, подстрочные знаки, надстрочные знаки, римские цифры, числители валюты и обведенные числа.</span><span class="sxs-lookup"><span data-stu-id="bef81-474">In addition to including digits, numbers include characters, fractions, subscripts, superscripts, Roman numerals, currency numerators, and encircled numbers.</span></span> <span data-ttu-id="bef81-475">Этот метод отличается от <xref:System.Char.IsDigit%2A> метод, который определяет, является ли <xref:System.Char> является цифрой основание системы счисления-10.</span><span class="sxs-lookup"><span data-stu-id="bef81-475">This method contrasts with the <xref:System.Char.IsDigit%2A> method, which determines whether a <xref:System.Char> is a radix-10 digit.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="bef81-476"><xref:System.Char.IsNumber%28System.Char%29> Метод не предназначен для определения, содержит ли строка из цифр (например, путем вызова метода для каждого символа в строке).</span><span class="sxs-lookup"><span data-stu-id="bef81-476">The <xref:System.Char.IsNumber%28System.Char%29> method is not intended to determine whether a string consists of numeric characters (for example, by calling the method for each character in a string).</span></span> <span data-ttu-id="bef81-477">Чтобы определить, содержит ли строка из цифр, вызовите одну из перегрузок `TryParse` метод (например <xref:System.Int32.TryParse%2A?displayProperty=nameWithType> или <xref:System.Double.TryParse%2A?displayProperty=nameWithType> типа целыми числами или с плавающей запятой.</span><span class="sxs-lookup"><span data-stu-id="bef81-477">To determine whether a string consists of numeric characters, call one of the overloads of the `TryParse` method (such as <xref:System.Int32.TryParse%2A?displayProperty=nameWithType> or <xref:System.Double.TryParse%2A?displayProperty=nameWithType> of an integral or floating point type.</span></span>  
  
 <span data-ttu-id="bef81-478">Допустимые номера являются членами <xref:System.Globalization.UnicodeCategory.DecimalDigitNumber?displayProperty=nameWithType>, <xref:System.Globalization.UnicodeCategory.LetterNumber?displayProperty=nameWithType>, или <xref:System.Globalization.UnicodeCategory.OtherNumber?displayProperty=nameWithType> категории.</span><span class="sxs-lookup"><span data-stu-id="bef81-478">Valid numbers are members of the <xref:System.Globalization.UnicodeCategory.DecimalDigitNumber?displayProperty=nameWithType>, <xref:System.Globalization.UnicodeCategory.LetterNumber?displayProperty=nameWithType>, or <xref:System.Globalization.UnicodeCategory.OtherNumber?displayProperty=nameWithType> category.</span></span>  
  
 <span data-ttu-id="bef81-479"><xref:System.Char.IsNumber%28System.Char%29> Метод предполагает, что `c` соответствует один символ лингвистические и проверяет, является ли данный символ представляет число.</span><span class="sxs-lookup"><span data-stu-id="bef81-479">The <xref:System.Char.IsNumber%28System.Char%29> method assumes that `c` corresponds to a single linguistic character and checks whether that character represents a number.</span></span> <span data-ttu-id="bef81-480">Тем не менее, некоторые числа в стандарте Юникода представлены двумя <xref:System.Char> объекты, образующие суррогатную пару.</span><span class="sxs-lookup"><span data-stu-id="bef81-480">However, some numbers in the Unicode standard are represented by two <xref:System.Char> objects that form a surrogate pair.</span></span> <span data-ttu-id="bef81-481">Например Aegean системы нумерации состоит кодовых позиций U + 10107 до U + 10133.</span><span class="sxs-lookup"><span data-stu-id="bef81-481">For example, the Aegean numbering system consists of code points U+10107 through U+10133.</span></span> <span data-ttu-id="bef81-482">В следующем примере используется <xref:System.Char.ConvertFromUtf32%2A> метод для создания экземпляра строка, представляющая AEGEAN номер один.</span><span class="sxs-lookup"><span data-stu-id="bef81-482">The following example uses the <xref:System.Char.ConvertFromUtf32%2A> method to instantiate a string that represents AEGEAN NUMBER ONE.</span></span> <span data-ttu-id="bef81-483">Как видно в результатах показано в примере <xref:System.Char.IsNumber%28System.Char%29> возвращает метод `false` если он передается старшим или младшим символом-заместителем для кодировки этого символа.</span><span class="sxs-lookup"><span data-stu-id="bef81-483">As the output from the example shows, the <xref:System.Char.IsNumber%28System.Char%29> method returns `false` if it is passed either a high surrogate or a low surrogate of this character.</span></span>  
  
 [!code-csharp[System.Char.IsNumber#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsNumber/CS/isnumber1.cs#1)]
 [!code-vb[System.Char.IsNumber#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsNumber/VB/isnumber1.vb#1)]  
  
   
  
## Examples  
 <span data-ttu-id="bef81-484">В следующем примере демонстрируется <xref:System.Char.IsNumber%2A>.</span><span class="sxs-lookup"><span data-stu-id="bef81-484">The following example demonstrates <xref:System.Char.IsNumber%2A>.</span></span>  
  
 [!code-cpp[System.Char.IsNumber#8](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsNumber/CPP/isnumber.cpp#8)]
 [!code-csharp[System.Char.IsNumber#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsNumber/CS/isnumber.cs#8)]
 [!code-vb[System.Char.IsNumber#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsNumber/VB/isnumber.vb#8)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Boolean" />
        <altmember cref="M:System.Char.IsDigit(System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="IsNumber">
      <MemberSignature Language="C#" Value="public static bool IsNumber (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsNumber(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsNumber(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsNumber (s As String, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsNumber(System::String ^ s, int index);" />
      <MemberSignature Language="F#" Value="static member IsNumber : string * int -&gt; bool" Usage="System.char.IsNumber (s, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="bef81-485">A string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-485">A string.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="bef81-486">The position of the character to evaluate in <c>s</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-486">The position of the character to evaluate in <c>s</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bef81-487">Indicates whether the character at the specified position in a specified string is categorized as a number.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-487">Indicates whether the character at the specified position in a specified string is categorized as a number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bef81-488">
            <see langword="true" /> if the character at position <paramref name="index" /> in <paramref name="s" /> is a number; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-488">
              <see langword="true" /> if the character at position <paramref name="index" /> in <paramref name="s" /> is a number; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bef81-489">Этот метод определяет, является ли <xref:System.Char> является любой числовой категории Юникода.</span><span class="sxs-lookup"><span data-stu-id="bef81-489">This method determines whether a <xref:System.Char> is of any numeric Unicode category.</span></span> <span data-ttu-id="bef81-490">Помимо цифр, номера включают символы, дроби, подстрочные знаки, надстрочные знаки, римские цифры, числители валюты и обведенные числа.</span><span class="sxs-lookup"><span data-stu-id="bef81-490">In addition to including digits, numbers include characters, fractions, subscripts, superscripts, Roman numerals, currency numerators, and encircled numbers.</span></span> <span data-ttu-id="bef81-491">Этот метод отличается от <xref:System.Char.IsDigit%2A> метод, который определяет, является ли <xref:System.Char> является цифрой основание системы счисления-10.</span><span class="sxs-lookup"><span data-stu-id="bef81-491">This method contrasts with the <xref:System.Char.IsDigit%2A> method, which determines whether a <xref:System.Char> is a radix-10 digit.</span></span>  
  
 <span data-ttu-id="bef81-492">Позиций знаков в строке, индексируются, начиная с нуля.</span><span class="sxs-lookup"><span data-stu-id="bef81-492">Character positions in a string are indexed starting from zero.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="bef81-493"><xref:System.Char.IsNumber%28System.String%2CSystem.Int32%29> Метод не предназначен для определения, содержит ли строка из цифр (например, путем вызова метода для каждого символа в строке).</span><span class="sxs-lookup"><span data-stu-id="bef81-493">The <xref:System.Char.IsNumber%28System.String%2CSystem.Int32%29> method is not intended to determine whether a string consists of numeric characters (for example, by calling the method for each character in a string).</span></span> <span data-ttu-id="bef81-494">Чтобы определить, содержит ли строка из цифр, вызовите одну из перегрузок `TryParse` метод (например <xref:System.Int32.TryParse%2A?displayProperty=nameWithType> или <xref:System.Double.TryParse%2A?displayProperty=nameWithType> типа целыми числами или с плавающей запятой.</span><span class="sxs-lookup"><span data-stu-id="bef81-494">To determine whether a string consists of numeric characters, call one of the overloads of the `TryParse` method (such as <xref:System.Int32.TryParse%2A?displayProperty=nameWithType> or <xref:System.Double.TryParse%2A?displayProperty=nameWithType> of an integral or floating point type.</span></span>  
  
 <span data-ttu-id="bef81-495">Допустимые номера являются членами <xref:System.Globalization.UnicodeCategory.DecimalDigitNumber?displayProperty=nameWithType>, <xref:System.Globalization.UnicodeCategory.LetterNumber?displayProperty=nameWithType>, или <xref:System.Globalization.UnicodeCategory.OtherNumber?displayProperty=nameWithType> категории.</span><span class="sxs-lookup"><span data-stu-id="bef81-495">Valid numbers are members of the <xref:System.Globalization.UnicodeCategory.DecimalDigitNumber?displayProperty=nameWithType>, <xref:System.Globalization.UnicodeCategory.LetterNumber?displayProperty=nameWithType>, or <xref:System.Globalization.UnicodeCategory.OtherNumber?displayProperty=nameWithType> category.</span></span>  
  
 <span data-ttu-id="bef81-496">Если <xref:System.Char> объект в позиции `index` является первым символом допустимым суррогатной пары, <xref:System.Char.IsNumber%28System.String%2CSystem.Int32%29> метод определяет, образует ли суррогатной пары цифры.</span><span class="sxs-lookup"><span data-stu-id="bef81-496">If the <xref:System.Char> object at position `index` is the first character of a valid surrogate pair, the <xref:System.Char.IsNumber%28System.String%2CSystem.Int32%29> method determines whether the surrogate pair forms a numeric digit.</span></span> <span data-ttu-id="bef81-497">Например Aegean системы нумерации состоит кодовых позиций U + 10107 до U + 10133.</span><span class="sxs-lookup"><span data-stu-id="bef81-497">For example, the Aegean numbering system consists of code points U+10107 through U+10133.</span></span> <span data-ttu-id="bef81-498">В следующем примере используется <xref:System.Char.ConvertFromUtf32%2A> метод для создания экземпляра строка, представляющая AEGEAN номер один.</span><span class="sxs-lookup"><span data-stu-id="bef81-498">The following example uses the <xref:System.Char.ConvertFromUtf32%2A> method to instantiate a string that represents AEGEAN NUMBER ONE.</span></span> <span data-ttu-id="bef81-499">Как видно в результатах показано в примере <xref:System.Char.IsNumber%28System.String%2CSystem.Int32%29> возвращает метод `true` при передаче старшим символом-заместителем из AEGEAN номер один.</span><span class="sxs-lookup"><span data-stu-id="bef81-499">As the output from the example shows, the <xref:System.Char.IsNumber%28System.String%2CSystem.Int32%29> method returns `true` if it is passed the high surrogate of AEGEAN NUMBER ONE.</span></span> <span data-ttu-id="bef81-500">Тем не менее, если он передается младший символ-заместитель, он учитывается только категория меньшим заменяющим значением и возвращает `false`.</span><span class="sxs-lookup"><span data-stu-id="bef81-500">However, if it is passed the low surrogate, it considers only the category of the low surrogate and returns `false`.</span></span>  
  
 [!code-csharp[System.Char.IsNumber#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsNumber/CS/isnumber1.cs#2)]
 [!code-vb[System.Char.IsNumber#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsNumber/VB/isnumber1.vb#2)]  
  
   
  
## Examples  
 <span data-ttu-id="bef81-501">В следующем примере демонстрируется <xref:System.Char.IsNumber%2A>.</span><span class="sxs-lookup"><span data-stu-id="bef81-501">The following example demonstrates <xref:System.Char.IsNumber%2A>.</span></span>  
  
 [!code-cpp[System.Char.IsNumber#8](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsNumber/CPP/isnumber.cpp#8)]
 [!code-csharp[System.Char.IsNumber#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsNumber/CS/isnumber.cs#8)]
 [!code-vb[System.Char.IsNumber#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsNumber/VB/isnumber.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="bef81-502">
            <paramref name="s" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-502">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="bef81-503">
            <paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-503">
              <paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Boolean" />
        <altmember cref="T:System.String" />
        <altmember cref="M:System.Char.IsDigit(System.Char)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsPunctuation">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="bef81-504">Indicates whether a Unicode character is categorized as a punctuation mark.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-504">Indicates whether a Unicode character is categorized as a punctuation mark.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bef81-505">Допустимые знаки препинания являются членами следующих категорий в <xref:System.Globalization.UnicodeCategory>: `ConnectorPunctuation`, `DashPunctuation`, `OpenPunctuation`, `ClosePunctuation`, `InititalQuotePunctuation`, `FinalQuotePunctuation`, или `OtherPunctuation`.</span><span class="sxs-lookup"><span data-stu-id="bef81-505">Valid punctuation marks are members of the following categories in <xref:System.Globalization.UnicodeCategory>: `ConnectorPunctuation`, `DashPunctuation`, `OpenPunctuation`, `ClosePunctuation`, `InititalQuotePunctuation`, `FinalQuotePunctuation`, or `OtherPunctuation`.</span></span> <span data-ttu-id="bef81-506">Они включают символы с помощью кодовых позиций Юникода, перечисленных в следующей таблице.</span><span class="sxs-lookup"><span data-stu-id="bef81-506">They include characters with the Unicode code points listed in the following table.</span></span>  
  
|||||  
|-|-|-|-|  
|<span data-ttu-id="bef81-507">U + 0021 U + 0023</span><span class="sxs-lookup"><span data-stu-id="bef81-507">U+0021 to U+0023</span></span>|<span data-ttu-id="bef81-508">U + 060C и D 060 U +</span><span class="sxs-lookup"><span data-stu-id="bef81-508">U+060C and U+060D</span></span>|<span data-ttu-id="bef81-509">U + 1800 U + 180A</span><span class="sxs-lookup"><span data-stu-id="bef81-509">U+1800 to U+180A</span></span>|<span data-ttu-id="bef81-510">U + 3014 для 301F U +</span><span class="sxs-lookup"><span data-stu-id="bef81-510">U+3014 to U+301F</span></span>|  
|<span data-ttu-id="bef81-511">U + 0025 для 002A U +</span><span class="sxs-lookup"><span data-stu-id="bef81-511">U+0025 to U+002A</span></span>|<span data-ttu-id="bef81-512">U+061B</span><span class="sxs-lookup"><span data-stu-id="bef81-512">U+061B</span></span>|<span data-ttu-id="bef81-513">U + 1944 и U + 1945</span><span class="sxs-lookup"><span data-stu-id="bef81-513">U+1944 and U+1945</span></span>|<span data-ttu-id="bef81-514">U+3030</span><span class="sxs-lookup"><span data-stu-id="bef81-514">U+3030</span></span>|  
|<span data-ttu-id="bef81-515">U + 002C до U + 002F</span><span class="sxs-lookup"><span data-stu-id="bef81-515">U+002C to U+002F</span></span>|<span data-ttu-id="bef81-516">U + 061E и U + 061F</span><span class="sxs-lookup"><span data-stu-id="bef81-516">U+061E and U+061F</span></span>|<span data-ttu-id="bef81-517">U + 19DE и U + 19DF</span><span class="sxs-lookup"><span data-stu-id="bef81-517">U+19DE and U+19DF</span></span>|<span data-ttu-id="bef81-518">U + 303D</span><span class="sxs-lookup"><span data-stu-id="bef81-518">U+303D</span></span>|  
|<span data-ttu-id="bef81-519">U + 003A и U + 003B</span><span class="sxs-lookup"><span data-stu-id="bef81-519">U+003A and U+003B</span></span>|<span data-ttu-id="bef81-520">U + 066A до U + 066D</span><span class="sxs-lookup"><span data-stu-id="bef81-520">U+066A to U+066D</span></span>|<span data-ttu-id="bef81-521">U + 1A1E и U + 1A1F</span><span class="sxs-lookup"><span data-stu-id="bef81-521">U+1A1E and U+1A1F</span></span>|<span data-ttu-id="bef81-522">U + 30A0</span><span class="sxs-lookup"><span data-stu-id="bef81-522">U+30A0</span></span>|  
|<span data-ttu-id="bef81-523">U + 003F и U + 0040</span><span class="sxs-lookup"><span data-stu-id="bef81-523">U+003F and U+0040</span></span>|<span data-ttu-id="bef81-524">U+06D4</span><span class="sxs-lookup"><span data-stu-id="bef81-524">U+06D4</span></span>|<span data-ttu-id="bef81-525">U + 1B5A для 1B60 U +</span><span class="sxs-lookup"><span data-stu-id="bef81-525">U+1B5A to U+1B60</span></span>|<span data-ttu-id="bef81-526">U+30FB</span><span class="sxs-lookup"><span data-stu-id="bef81-526">U+30FB</span></span>|  
|<span data-ttu-id="bef81-527">U + 005B до U + 005D</span><span class="sxs-lookup"><span data-stu-id="bef81-527">U+005B to U+005D</span></span>|<span data-ttu-id="bef81-528">U + 0700 до U + 070D</span><span class="sxs-lookup"><span data-stu-id="bef81-528">U+0700 to U+070D</span></span>|<span data-ttu-id="bef81-529">U + 2010 до U + 2027</span><span class="sxs-lookup"><span data-stu-id="bef81-529">U+2010 to U+2027</span></span>|<span data-ttu-id="bef81-530">U + A874 для U + A877</span><span class="sxs-lookup"><span data-stu-id="bef81-530">U+A874 to U+A877</span></span>|  
|<span data-ttu-id="bef81-531">U+005F</span><span class="sxs-lookup"><span data-stu-id="bef81-531">U+005F</span></span>|<span data-ttu-id="bef81-532">U + 07F7 для 07F9 U +</span><span class="sxs-lookup"><span data-stu-id="bef81-532">U+07F7 to U+07F9</span></span>|<span data-ttu-id="bef81-533">U + 2030 U + 2043</span><span class="sxs-lookup"><span data-stu-id="bef81-533">U+2030 to U+2043</span></span>|<span data-ttu-id="bef81-534">U + FD3E и U + FD3F</span><span class="sxs-lookup"><span data-stu-id="bef81-534">U+FD3E and U+FD3F</span></span>|  
|<span data-ttu-id="bef81-535">U+007B</span><span class="sxs-lookup"><span data-stu-id="bef81-535">U+007B</span></span>|<span data-ttu-id="bef81-536">U + 0964 и U + 0965</span><span class="sxs-lookup"><span data-stu-id="bef81-536">U+0964 and U+0965</span></span>|<span data-ttu-id="bef81-537">U + 2045 для 2051 U +</span><span class="sxs-lookup"><span data-stu-id="bef81-537">U+2045 to U+2051</span></span>|<span data-ttu-id="bef81-538">U + FE10 для U + FE19</span><span class="sxs-lookup"><span data-stu-id="bef81-538">U+FE10 to U+FE19</span></span>|  
|<span data-ttu-id="bef81-539">U + 007D</span><span class="sxs-lookup"><span data-stu-id="bef81-539">U+007D</span></span>|<span data-ttu-id="bef81-540">U + 0970</span><span class="sxs-lookup"><span data-stu-id="bef81-540">U+0970</span></span>|<span data-ttu-id="bef81-541">2053 U + для 205E U +</span><span class="sxs-lookup"><span data-stu-id="bef81-541">U+2053 to U+205E</span></span>|<span data-ttu-id="bef81-542">U + fe30 до к U + FE52</span><span class="sxs-lookup"><span data-stu-id="bef81-542">U+FE30 to U+FE52</span></span>|  
|<span data-ttu-id="bef81-543">U+00A1</span><span class="sxs-lookup"><span data-stu-id="bef81-543">U+00A1</span></span>|<span data-ttu-id="bef81-544">U + 0DF4</span><span class="sxs-lookup"><span data-stu-id="bef81-544">U+0DF4</span></span>|<span data-ttu-id="bef81-545">U + 207D и U + 207E</span><span class="sxs-lookup"><span data-stu-id="bef81-545">U+207D and  U+207E</span></span>|<span data-ttu-id="bef81-546">U + FE54 для U + FE61</span><span class="sxs-lookup"><span data-stu-id="bef81-546">U+FE54 to U+FE61</span></span>|  
|<span data-ttu-id="bef81-547">U + 00AB</span><span class="sxs-lookup"><span data-stu-id="bef81-547">U+00AB</span></span>|<span data-ttu-id="bef81-548">U + 0E4F для 0E5B U +</span><span class="sxs-lookup"><span data-stu-id="bef81-548">U+0E4F to U+0E5B</span></span>|<span data-ttu-id="bef81-549">U + 208D и U + 208E</span><span class="sxs-lookup"><span data-stu-id="bef81-549">U+208D and U+208E</span></span>|<span data-ttu-id="bef81-550">U + FE63</span><span class="sxs-lookup"><span data-stu-id="bef81-550">U+FE63</span></span>|  
|<span data-ttu-id="bef81-551">U + 00AD</span><span class="sxs-lookup"><span data-stu-id="bef81-551">U+00AD</span></span>|<span data-ttu-id="bef81-552">U + 0F04 для 0F12 U +</span><span class="sxs-lookup"><span data-stu-id="bef81-552">U+0F04 to U+0F12</span></span>|<span data-ttu-id="bef81-553">U + 2329 до U + 232A</span><span class="sxs-lookup"><span data-stu-id="bef81-553">U+2329 and U+232A</span></span>|<span data-ttu-id="bef81-554">U + FE68</span><span class="sxs-lookup"><span data-stu-id="bef81-554">U+FE68</span></span>|  
|<span data-ttu-id="bef81-555">U+00B7</span><span class="sxs-lookup"><span data-stu-id="bef81-555">U+00B7</span></span>|<span data-ttu-id="bef81-556">U + 0F3A для 0F3D U +</span><span class="sxs-lookup"><span data-stu-id="bef81-556">U+0F3A to U+0F3D</span></span>|<span data-ttu-id="bef81-557">U + 2768 для 2775 U +</span><span class="sxs-lookup"><span data-stu-id="bef81-557">U+2768 to U+2775</span></span>|<span data-ttu-id="bef81-558">U + FE6A и U + FE6B</span><span class="sxs-lookup"><span data-stu-id="bef81-558">U+FE6A and U+FE6B</span></span>|  
|<span data-ttu-id="bef81-559">U + 00BB</span><span class="sxs-lookup"><span data-stu-id="bef81-559">U+00BB</span></span>|<span data-ttu-id="bef81-560">U + 0F85</span><span class="sxs-lookup"><span data-stu-id="bef81-560">U+0F85</span></span>|<span data-ttu-id="bef81-561">5 27C U + U + 27C 6</span><span class="sxs-lookup"><span data-stu-id="bef81-561">U+27C5 to U+27C6</span></span>|<span data-ttu-id="bef81-562">U + FF01 для U + FF03</span><span class="sxs-lookup"><span data-stu-id="bef81-562">U+FF01 to U+FF03</span></span>|  
|<span data-ttu-id="bef81-563">U + 00BF</span><span class="sxs-lookup"><span data-stu-id="bef81-563">U+00BF</span></span>|<span data-ttu-id="bef81-564">U + 0FD0 и U + 0FD1</span><span class="sxs-lookup"><span data-stu-id="bef81-564">U+0FD0 and U+0FD1</span></span>|<span data-ttu-id="bef81-565">U + 27E6 для 27EB U +</span><span class="sxs-lookup"><span data-stu-id="bef81-565">U+27E6 to U+27EB</span></span>|<span data-ttu-id="bef81-566">U + FF05 для U + FF0A</span><span class="sxs-lookup"><span data-stu-id="bef81-566">U+FF05 to U+FF0A</span></span>|  
|<span data-ttu-id="bef81-567">U + 037E</span><span class="sxs-lookup"><span data-stu-id="bef81-567">U+037E</span></span>|<span data-ttu-id="bef81-568">U + 104A для 104F U +</span><span class="sxs-lookup"><span data-stu-id="bef81-568">U+104A to U+104F</span></span>|<span data-ttu-id="bef81-569">U + 2983 для 2998 U +</span><span class="sxs-lookup"><span data-stu-id="bef81-569">U+2983 to U+2998</span></span>|<span data-ttu-id="bef81-570">U + FF0C для U + FF0F</span><span class="sxs-lookup"><span data-stu-id="bef81-570">U+FF0C to U+FF0F</span></span>|  
|<span data-ttu-id="bef81-571">U+0387</span><span class="sxs-lookup"><span data-stu-id="bef81-571">U+0387</span></span>|<span data-ttu-id="bef81-572">U + 10FB</span><span class="sxs-lookup"><span data-stu-id="bef81-572">U+10FB</span></span>|<span data-ttu-id="bef81-573">U + 29D 8 U + 29DB</span><span class="sxs-lookup"><span data-stu-id="bef81-573">U+29D8 to U+29DB</span></span>|<span data-ttu-id="bef81-574">U + FF1A и U + FF1B</span><span class="sxs-lookup"><span data-stu-id="bef81-574">U+FF1A and U+FF1B</span></span>|  
|<span data-ttu-id="bef81-575">U + 055A для 055F U +</span><span class="sxs-lookup"><span data-stu-id="bef81-575">U+055A to U+055F</span></span>|<span data-ttu-id="bef81-576">U + 1361 для 1368 U +</span><span class="sxs-lookup"><span data-stu-id="bef81-576">U+1361 to U+1368</span></span>|<span data-ttu-id="bef81-577">U + 29FC и U + 29FD</span><span class="sxs-lookup"><span data-stu-id="bef81-577">U+29FC and U+29FD</span></span>|<span data-ttu-id="bef81-578">U + FF1F и U + FF20</span><span class="sxs-lookup"><span data-stu-id="bef81-578">U+FF1F and U+FF20</span></span>|  
|<span data-ttu-id="bef81-579">U + 0589 до U + 058A</span><span class="sxs-lookup"><span data-stu-id="bef81-579">U+0589 and U+058A</span></span>|<span data-ttu-id="bef81-580">U + 166D и U + 166E</span><span class="sxs-lookup"><span data-stu-id="bef81-580">U+166D and U+166E</span></span>|<span data-ttu-id="bef81-581">U + 2CF9 для 2CFC U +</span><span class="sxs-lookup"><span data-stu-id="bef81-581">U+2CF9 to U+2CFC</span></span>|<span data-ttu-id="bef81-582">U + FF3B для U + FF3D</span><span class="sxs-lookup"><span data-stu-id="bef81-582">U+FF3B to U+FF3D</span></span>|  
|<span data-ttu-id="bef81-583">U+05BE</span><span class="sxs-lookup"><span data-stu-id="bef81-583">U+05BE</span></span>|<span data-ttu-id="bef81-584">U + 169B и U + 169C</span><span class="sxs-lookup"><span data-stu-id="bef81-584">U+169B and U+169C</span></span>|<span data-ttu-id="bef81-585">U + 2CFE и U + 2CFF</span><span class="sxs-lookup"><span data-stu-id="bef81-585">U+2CFE and U+2CFF</span></span>|<span data-ttu-id="bef81-586">U + FF3F</span><span class="sxs-lookup"><span data-stu-id="bef81-586">U+FF3F</span></span>|  
|<span data-ttu-id="bef81-587">U+05C0</span><span class="sxs-lookup"><span data-stu-id="bef81-587">U+05C0</span></span>|<span data-ttu-id="bef81-588">U + 16EB для 16ED U +</span><span class="sxs-lookup"><span data-stu-id="bef81-588">U+16EB to U+16ED</span></span>|<span data-ttu-id="bef81-589">U + 2E00 U + 2E17</span><span class="sxs-lookup"><span data-stu-id="bef81-589">U+2E00 to U+2E17</span></span>|<span data-ttu-id="bef81-590">U+FF5B</span><span class="sxs-lookup"><span data-stu-id="bef81-590">U+FF5B</span></span>|  
|<span data-ttu-id="bef81-591">U+05C3</span><span class="sxs-lookup"><span data-stu-id="bef81-591">U+05C3</span></span>|<span data-ttu-id="bef81-592">U + 1735 и U + 1736</span><span class="sxs-lookup"><span data-stu-id="bef81-592">U+1735 and U+1736</span></span>|<span data-ttu-id="bef81-593">U + 2E1C и U + 2E1D</span><span class="sxs-lookup"><span data-stu-id="bef81-593">U+2E1C and U+2E1D</span></span>|<span data-ttu-id="bef81-594">U + FF5D</span><span class="sxs-lookup"><span data-stu-id="bef81-594">U+FF5D</span></span>|  
|<span data-ttu-id="bef81-595">U+05C6</span><span class="sxs-lookup"><span data-stu-id="bef81-595">U+05C6</span></span>|<span data-ttu-id="bef81-596">4 17D U + U + 17D 6</span><span class="sxs-lookup"><span data-stu-id="bef81-596">U+17D4 to U+17D6</span></span>|<span data-ttu-id="bef81-597">U + 3001 для 3003 U +</span><span class="sxs-lookup"><span data-stu-id="bef81-597">U+3001 to U+3003</span></span>|<span data-ttu-id="bef81-598">U + FF5F для U + FF65</span><span class="sxs-lookup"><span data-stu-id="bef81-598">U+FF5F to U+FF65</span></span>|  
|<span data-ttu-id="bef81-599">U + 05F3 и U + 05F4</span><span class="sxs-lookup"><span data-stu-id="bef81-599">U+05F3 and U+05F4</span></span>|<span data-ttu-id="bef81-600">U + 17D 8 U + 17DA</span><span class="sxs-lookup"><span data-stu-id="bef81-600">U+17D8 to U+17DA</span></span>|<span data-ttu-id="bef81-601">3008 U + для U + 3011</span><span class="sxs-lookup"><span data-stu-id="bef81-601">U+3008 to U+3011</span></span>||  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsPunctuation">
      <MemberSignature Language="C#" Value="public static bool IsPunctuation (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsPunctuation(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsPunctuation(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsPunctuation (c As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsPunctuation(char c);" />
      <MemberSignature Language="F#" Value="static member IsPunctuation : char -&gt; bool" Usage="System.char.IsPunctuation c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="bef81-602">The Unicode character to evaluate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-602">The Unicode character to evaluate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bef81-603">Indicates whether the specified Unicode character is categorized as a punctuation mark.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-603">Indicates whether the specified Unicode character is categorized as a punctuation mark.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bef81-604">
            <see langword="true" /> if <paramref name="c" /> is a punctuation mark; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-604">
              <see langword="true" /> if <paramref name="c" /> is a punctuation mark; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bef81-605">Допустимые знаки препинания являются членами следующих категорий в <xref:System.Globalization.UnicodeCategory>: `ConnectorPunctuation`, `DashPunctuation`, `OpenPunctuation`, `ClosePunctuation`, `InititalQuotePunctuation`, `FinalQuotePunctuation`, или `OtherPunctuation`.</span><span class="sxs-lookup"><span data-stu-id="bef81-605">Valid punctuation marks are members of the following categories in <xref:System.Globalization.UnicodeCategory>: `ConnectorPunctuation`, `DashPunctuation`, `OpenPunctuation`, `ClosePunctuation`, `InititalQuotePunctuation`, `FinalQuotePunctuation`, or `OtherPunctuation`.</span></span> <span data-ttu-id="bef81-606">Они включают символы с помощью кодовых позиций Юникода, перечисленных в следующей таблице.</span><span class="sxs-lookup"><span data-stu-id="bef81-606">They include characters with the Unicode code points listed in the following table.</span></span>  
  
|||||  
|-|-|-|-|  
|<span data-ttu-id="bef81-607">U + 0021 U + 0023</span><span class="sxs-lookup"><span data-stu-id="bef81-607">U+0021 to U+0023</span></span>|<span data-ttu-id="bef81-608">U + 060C и D 060 U +</span><span class="sxs-lookup"><span data-stu-id="bef81-608">U+060C and U+060D</span></span>|<span data-ttu-id="bef81-609">U + 1800 U + 180A</span><span class="sxs-lookup"><span data-stu-id="bef81-609">U+1800 to U+180A</span></span>|<span data-ttu-id="bef81-610">U + 3014 для 301F U +</span><span class="sxs-lookup"><span data-stu-id="bef81-610">U+3014 to U+301F</span></span>|  
|<span data-ttu-id="bef81-611">U + 0025 для 002A U +</span><span class="sxs-lookup"><span data-stu-id="bef81-611">U+0025 to U+002A</span></span>|<span data-ttu-id="bef81-612">U+061B</span><span class="sxs-lookup"><span data-stu-id="bef81-612">U+061B</span></span>|<span data-ttu-id="bef81-613">U + 1944 и U + 1945</span><span class="sxs-lookup"><span data-stu-id="bef81-613">U+1944 and U+1945</span></span>|<span data-ttu-id="bef81-614">U+3030</span><span class="sxs-lookup"><span data-stu-id="bef81-614">U+3030</span></span>|  
|<span data-ttu-id="bef81-615">U + 002C до U + 002F</span><span class="sxs-lookup"><span data-stu-id="bef81-615">U+002C to U+002F</span></span>|<span data-ttu-id="bef81-616">U + 061E и U + 061F</span><span class="sxs-lookup"><span data-stu-id="bef81-616">U+061E and U+061F</span></span>|<span data-ttu-id="bef81-617">U + 19DE и U + 19DF</span><span class="sxs-lookup"><span data-stu-id="bef81-617">U+19DE and U+19DF</span></span>|<span data-ttu-id="bef81-618">U + 303D</span><span class="sxs-lookup"><span data-stu-id="bef81-618">U+303D</span></span>|  
|<span data-ttu-id="bef81-619">U + 003A и U + 003B</span><span class="sxs-lookup"><span data-stu-id="bef81-619">U+003A and U+003B</span></span>|<span data-ttu-id="bef81-620">U + 066A до U + 066D</span><span class="sxs-lookup"><span data-stu-id="bef81-620">U+066A to U+066D</span></span>|<span data-ttu-id="bef81-621">U + 1A1E и U + 1A1F</span><span class="sxs-lookup"><span data-stu-id="bef81-621">U+1A1E and U+1A1F</span></span>|<span data-ttu-id="bef81-622">U + 30A0</span><span class="sxs-lookup"><span data-stu-id="bef81-622">U+30A0</span></span>|  
|<span data-ttu-id="bef81-623">U + 003F и U + 0040</span><span class="sxs-lookup"><span data-stu-id="bef81-623">U+003F and U+0040</span></span>|<span data-ttu-id="bef81-624">U+06D4</span><span class="sxs-lookup"><span data-stu-id="bef81-624">U+06D4</span></span>|<span data-ttu-id="bef81-625">U + 1B5A для 1B60 U +</span><span class="sxs-lookup"><span data-stu-id="bef81-625">U+1B5A to U+1B60</span></span>|<span data-ttu-id="bef81-626">U+30FB</span><span class="sxs-lookup"><span data-stu-id="bef81-626">U+30FB</span></span>|  
|<span data-ttu-id="bef81-627">U + 005B до U + 005D</span><span class="sxs-lookup"><span data-stu-id="bef81-627">U+005B to U+005D</span></span>|<span data-ttu-id="bef81-628">U + 0700 до U + 070D</span><span class="sxs-lookup"><span data-stu-id="bef81-628">U+0700 to U+070D</span></span>|<span data-ttu-id="bef81-629">U + 2010 до U + 2027</span><span class="sxs-lookup"><span data-stu-id="bef81-629">U+2010 to U+2027</span></span>|<span data-ttu-id="bef81-630">U + A874 для U + A877</span><span class="sxs-lookup"><span data-stu-id="bef81-630">U+A874 to U+A877</span></span>|  
|<span data-ttu-id="bef81-631">U+005F</span><span class="sxs-lookup"><span data-stu-id="bef81-631">U+005F</span></span>|<span data-ttu-id="bef81-632">U + 07F7 для 07F9 U +</span><span class="sxs-lookup"><span data-stu-id="bef81-632">U+07F7 to U+07F9</span></span>|<span data-ttu-id="bef81-633">U + 2030 U + 2043</span><span class="sxs-lookup"><span data-stu-id="bef81-633">U+2030 to U+2043</span></span>|<span data-ttu-id="bef81-634">U + FD3E и U + FD3F</span><span class="sxs-lookup"><span data-stu-id="bef81-634">U+FD3E and U+FD3F</span></span>|  
|<span data-ttu-id="bef81-635">U+007B</span><span class="sxs-lookup"><span data-stu-id="bef81-635">U+007B</span></span>|<span data-ttu-id="bef81-636">U + 0964 и U + 0965</span><span class="sxs-lookup"><span data-stu-id="bef81-636">U+0964 and U+0965</span></span>|<span data-ttu-id="bef81-637">U + 2045 для 2051 U +</span><span class="sxs-lookup"><span data-stu-id="bef81-637">U+2045 to U+2051</span></span>|<span data-ttu-id="bef81-638">U + FE10 для U + FE19</span><span class="sxs-lookup"><span data-stu-id="bef81-638">U+FE10 to U+FE19</span></span>|  
|<span data-ttu-id="bef81-639">U + 007D</span><span class="sxs-lookup"><span data-stu-id="bef81-639">U+007D</span></span>|<span data-ttu-id="bef81-640">U + 0970</span><span class="sxs-lookup"><span data-stu-id="bef81-640">U+0970</span></span>|<span data-ttu-id="bef81-641">2053 U + для 205E U +</span><span class="sxs-lookup"><span data-stu-id="bef81-641">U+2053 to U+205E</span></span>|<span data-ttu-id="bef81-642">U + fe30 до к U + FE52</span><span class="sxs-lookup"><span data-stu-id="bef81-642">U+FE30 to U+FE52</span></span>|  
|<span data-ttu-id="bef81-643">U+00A1</span><span class="sxs-lookup"><span data-stu-id="bef81-643">U+00A1</span></span>|<span data-ttu-id="bef81-644">U + 0DF4</span><span class="sxs-lookup"><span data-stu-id="bef81-644">U+0DF4</span></span>|<span data-ttu-id="bef81-645">U + 207D и U + 207E</span><span class="sxs-lookup"><span data-stu-id="bef81-645">U+207D and  U+207E</span></span>|<span data-ttu-id="bef81-646">U + FE54 для U + FE61</span><span class="sxs-lookup"><span data-stu-id="bef81-646">U+FE54 to U+FE61</span></span>|  
|<span data-ttu-id="bef81-647">U + 00AB</span><span class="sxs-lookup"><span data-stu-id="bef81-647">U+00AB</span></span>|<span data-ttu-id="bef81-648">U + 0E4F для 0E5B U +</span><span class="sxs-lookup"><span data-stu-id="bef81-648">U+0E4F to U+0E5B</span></span>|<span data-ttu-id="bef81-649">U + 208D и U + 208E</span><span class="sxs-lookup"><span data-stu-id="bef81-649">U+208D and U+208E</span></span>|<span data-ttu-id="bef81-650">U + FE63</span><span class="sxs-lookup"><span data-stu-id="bef81-650">U+FE63</span></span>|  
|<span data-ttu-id="bef81-651">U + 00AD</span><span class="sxs-lookup"><span data-stu-id="bef81-651">U+00AD</span></span>|<span data-ttu-id="bef81-652">U + 0F04 для 0F12 U +</span><span class="sxs-lookup"><span data-stu-id="bef81-652">U+0F04 to U+0F12</span></span>|<span data-ttu-id="bef81-653">U + 2329 до U + 232A</span><span class="sxs-lookup"><span data-stu-id="bef81-653">U+2329 and U+232A</span></span>|<span data-ttu-id="bef81-654">U + FE68</span><span class="sxs-lookup"><span data-stu-id="bef81-654">U+FE68</span></span>|  
|<span data-ttu-id="bef81-655">U+00B7</span><span class="sxs-lookup"><span data-stu-id="bef81-655">U+00B7</span></span>|<span data-ttu-id="bef81-656">U + 0F3A для 0F3D U +</span><span class="sxs-lookup"><span data-stu-id="bef81-656">U+0F3A to U+0F3D</span></span>|<span data-ttu-id="bef81-657">U + 2768 для 2775 U +</span><span class="sxs-lookup"><span data-stu-id="bef81-657">U+2768 to U+2775</span></span>|<span data-ttu-id="bef81-658">U + FE6A и U + FE6B</span><span class="sxs-lookup"><span data-stu-id="bef81-658">U+FE6A and U+FE6B</span></span>|  
|<span data-ttu-id="bef81-659">U + 00BB</span><span class="sxs-lookup"><span data-stu-id="bef81-659">U+00BB</span></span>|<span data-ttu-id="bef81-660">U + 0F85</span><span class="sxs-lookup"><span data-stu-id="bef81-660">U+0F85</span></span>|<span data-ttu-id="bef81-661">5 27C U + U + 27C 6</span><span class="sxs-lookup"><span data-stu-id="bef81-661">U+27C5 to U+27C6</span></span>|<span data-ttu-id="bef81-662">U + FF01 для U + FF03</span><span class="sxs-lookup"><span data-stu-id="bef81-662">U+FF01 to U+FF03</span></span>|  
|<span data-ttu-id="bef81-663">U + 00BF</span><span class="sxs-lookup"><span data-stu-id="bef81-663">U+00BF</span></span>|<span data-ttu-id="bef81-664">U + 0FD0 и U + 0FD1</span><span class="sxs-lookup"><span data-stu-id="bef81-664">U+0FD0 and U+0FD1</span></span>|<span data-ttu-id="bef81-665">U + 27E6 для 27EB U +</span><span class="sxs-lookup"><span data-stu-id="bef81-665">U+27E6 to U+27EB</span></span>|<span data-ttu-id="bef81-666">U + FF05 для U + FF0A</span><span class="sxs-lookup"><span data-stu-id="bef81-666">U+FF05 to U+FF0A</span></span>|  
|<span data-ttu-id="bef81-667">U + 037E</span><span class="sxs-lookup"><span data-stu-id="bef81-667">U+037E</span></span>|<span data-ttu-id="bef81-668">U + 104A для 104F U +</span><span class="sxs-lookup"><span data-stu-id="bef81-668">U+104A to U+104F</span></span>|<span data-ttu-id="bef81-669">U + 2983 для 2998 U +</span><span class="sxs-lookup"><span data-stu-id="bef81-669">U+2983 to U+2998</span></span>|<span data-ttu-id="bef81-670">U + FF0C для U + FF0F</span><span class="sxs-lookup"><span data-stu-id="bef81-670">U+FF0C to U+FF0F</span></span>|  
|<span data-ttu-id="bef81-671">U+0387</span><span class="sxs-lookup"><span data-stu-id="bef81-671">U+0387</span></span>|<span data-ttu-id="bef81-672">U + 10FB</span><span class="sxs-lookup"><span data-stu-id="bef81-672">U+10FB</span></span>|<span data-ttu-id="bef81-673">U + 29D 8 U + 29DB</span><span class="sxs-lookup"><span data-stu-id="bef81-673">U+29D8 to U+29DB</span></span>|<span data-ttu-id="bef81-674">U + FF1A и U + FF1B</span><span class="sxs-lookup"><span data-stu-id="bef81-674">U+FF1A and U+FF1B</span></span>|  
|<span data-ttu-id="bef81-675">U + 055A для 055F U +</span><span class="sxs-lookup"><span data-stu-id="bef81-675">U+055A to U+055F</span></span>|<span data-ttu-id="bef81-676">U + 1361 для 1368 U +</span><span class="sxs-lookup"><span data-stu-id="bef81-676">U+1361 to U+1368</span></span>|<span data-ttu-id="bef81-677">U + 29FC и U + 29FD</span><span class="sxs-lookup"><span data-stu-id="bef81-677">U+29FC and U+29FD</span></span>|<span data-ttu-id="bef81-678">U + FF1F и U + FF20</span><span class="sxs-lookup"><span data-stu-id="bef81-678">U+FF1F and U+FF20</span></span>|  
|<span data-ttu-id="bef81-679">U + 0589 до U + 058A</span><span class="sxs-lookup"><span data-stu-id="bef81-679">U+0589 and U+058A</span></span>|<span data-ttu-id="bef81-680">U + 166D и U + 166E</span><span class="sxs-lookup"><span data-stu-id="bef81-680">U+166D and U+166E</span></span>|<span data-ttu-id="bef81-681">U + 2CF9 для 2CFC U +</span><span class="sxs-lookup"><span data-stu-id="bef81-681">U+2CF9 to U+2CFC</span></span>|<span data-ttu-id="bef81-682">U + FF3B для U + FF3D</span><span class="sxs-lookup"><span data-stu-id="bef81-682">U+FF3B to U+FF3D</span></span>|  
|<span data-ttu-id="bef81-683">U+05BE</span><span class="sxs-lookup"><span data-stu-id="bef81-683">U+05BE</span></span>|<span data-ttu-id="bef81-684">U + 169B и U + 169C</span><span class="sxs-lookup"><span data-stu-id="bef81-684">U+169B and U+169C</span></span>|<span data-ttu-id="bef81-685">U + 2CFE и U + 2CFF</span><span class="sxs-lookup"><span data-stu-id="bef81-685">U+2CFE and U+2CFF</span></span>|<span data-ttu-id="bef81-686">U + FF3F</span><span class="sxs-lookup"><span data-stu-id="bef81-686">U+FF3F</span></span>|  
|<span data-ttu-id="bef81-687">U+05C0</span><span class="sxs-lookup"><span data-stu-id="bef81-687">U+05C0</span></span>|<span data-ttu-id="bef81-688">U + 16EB для 16ED U +</span><span class="sxs-lookup"><span data-stu-id="bef81-688">U+16EB to U+16ED</span></span>|<span data-ttu-id="bef81-689">U + 2E00 U + 2E17</span><span class="sxs-lookup"><span data-stu-id="bef81-689">U+2E00 to U+2E17</span></span>|<span data-ttu-id="bef81-690">U+FF5B</span><span class="sxs-lookup"><span data-stu-id="bef81-690">U+FF5B</span></span>|  
|<span data-ttu-id="bef81-691">U+05C3</span><span class="sxs-lookup"><span data-stu-id="bef81-691">U+05C3</span></span>|<span data-ttu-id="bef81-692">U + 1735 и U + 1736</span><span class="sxs-lookup"><span data-stu-id="bef81-692">U+1735 and U+1736</span></span>|<span data-ttu-id="bef81-693">U + 2E1C и U + 2E1D</span><span class="sxs-lookup"><span data-stu-id="bef81-693">U+2E1C and U+2E1D</span></span>|<span data-ttu-id="bef81-694">U + FF5D</span><span class="sxs-lookup"><span data-stu-id="bef81-694">U+FF5D</span></span>|  
|<span data-ttu-id="bef81-695">U+05C6</span><span class="sxs-lookup"><span data-stu-id="bef81-695">U+05C6</span></span>|<span data-ttu-id="bef81-696">4 17D U + U + 17D 6</span><span class="sxs-lookup"><span data-stu-id="bef81-696">U+17D4 to U+17D6</span></span>|<span data-ttu-id="bef81-697">U + 3001 для 3003 U +</span><span class="sxs-lookup"><span data-stu-id="bef81-697">U+3001 to U+3003</span></span>|<span data-ttu-id="bef81-698">U + FF5F для U + FF65</span><span class="sxs-lookup"><span data-stu-id="bef81-698">U+FF5F to U+FF65</span></span>|  
|<span data-ttu-id="bef81-699">U + 05F3 и U + 05F4</span><span class="sxs-lookup"><span data-stu-id="bef81-699">U+05F3 and U+05F4</span></span>|<span data-ttu-id="bef81-700">U + 17D 8 U + 17DA</span><span class="sxs-lookup"><span data-stu-id="bef81-700">U+17D8 to U+17DA</span></span>|<span data-ttu-id="bef81-701">3008 U + для U + 3011</span><span class="sxs-lookup"><span data-stu-id="bef81-701">U+3008 to U+3011</span></span>||  
  
   
  
## Examples  
 <span data-ttu-id="bef81-702">В следующем примере кода показано <xref:System.Char.IsPunctuation%2A>.</span><span class="sxs-lookup"><span data-stu-id="bef81-702">The following code example demonstrates <xref:System.Char.IsPunctuation%2A>.</span></span>  
  
 [!code-cpp[System.Char.IsPunctuation#9](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsPunctuation/CPP/ispunctuation.cpp#9)]
 [!code-csharp[System.Char.IsPunctuation#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsPunctuation/CS/ispunctuation.cs#9)]
 [!code-vb[System.Char.IsPunctuation#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsPunctuation/VB/ispunctuation.vb#9)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Boolean" />
      </Docs>
    </Member>
    <Member MemberName="IsPunctuation">
      <MemberSignature Language="C#" Value="public static bool IsPunctuation (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsPunctuation(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsPunctuation(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsPunctuation (s As String, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsPunctuation(System::String ^ s, int index);" />
      <MemberSignature Language="F#" Value="static member IsPunctuation : string * int -&gt; bool" Usage="System.char.IsPunctuation (s, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="bef81-703">A string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-703">A string.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="bef81-704">The position of the character to evaluate in <c>s</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-704">The position of the character to evaluate in <c>s</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bef81-705">Indicates whether the character at the specified position in a specified string is categorized as a punctuation mark.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-705">Indicates whether the character at the specified position in a specified string is categorized as a punctuation mark.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bef81-706">
            <see langword="true" /> if the character at position <paramref name="index" /> in <paramref name="s" /> is a punctuation mark; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-706">
              <see langword="true" /> if the character at position <paramref name="index" /> in <paramref name="s" /> is a punctuation mark; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bef81-707">Позиций знаков в строке, индексируются, начиная с нуля.</span><span class="sxs-lookup"><span data-stu-id="bef81-707">Character positions in a string are indexed starting from zero.</span></span>  
  
 <span data-ttu-id="bef81-708">Допустимые знаки препинания являются членами следующих категорий в <xref:System.Globalization.UnicodeCategory>: `ConnectorPunctuation`, `DashPunctuation`, `OpenPunctuation`, `ClosePunctuation`, `InititalQuotePunctuation`, `FinalQuotePunctuation`, или `OtherPunctuation`.</span><span class="sxs-lookup"><span data-stu-id="bef81-708">Valid punctuation marks are members of the following categories in <xref:System.Globalization.UnicodeCategory>: `ConnectorPunctuation`, `DashPunctuation`, `OpenPunctuation`, `ClosePunctuation`, `InititalQuotePunctuation`, `FinalQuotePunctuation`, or `OtherPunctuation`.</span></span> <span data-ttu-id="bef81-709">Они включают символы с помощью кодовых позиций Юникода, перечисленных в следующей таблице.</span><span class="sxs-lookup"><span data-stu-id="bef81-709">They include characters with the Unicode code points listed in the following table.</span></span>  
  
|||||  
|-|-|-|-|  
|<span data-ttu-id="bef81-710">U + 0021 U + 0023</span><span class="sxs-lookup"><span data-stu-id="bef81-710">U+0021 to U+0023</span></span>|<span data-ttu-id="bef81-711">U + 060C и D 060 U +</span><span class="sxs-lookup"><span data-stu-id="bef81-711">U+060C and U+060D</span></span>|<span data-ttu-id="bef81-712">U + 1800 U + 180A</span><span class="sxs-lookup"><span data-stu-id="bef81-712">U+1800 to U+180A</span></span>|<span data-ttu-id="bef81-713">U + 3014 для 301F U +</span><span class="sxs-lookup"><span data-stu-id="bef81-713">U+3014 to U+301F</span></span>|  
|<span data-ttu-id="bef81-714">U + 0025 для 002A U +</span><span class="sxs-lookup"><span data-stu-id="bef81-714">U+0025 to U+002A</span></span>|<span data-ttu-id="bef81-715">U+061B</span><span class="sxs-lookup"><span data-stu-id="bef81-715">U+061B</span></span>|<span data-ttu-id="bef81-716">U + 1944 и U + 1945</span><span class="sxs-lookup"><span data-stu-id="bef81-716">U+1944 and U+1945</span></span>|<span data-ttu-id="bef81-717">U+3030</span><span class="sxs-lookup"><span data-stu-id="bef81-717">U+3030</span></span>|  
|<span data-ttu-id="bef81-718">U + 002C до U + 002F</span><span class="sxs-lookup"><span data-stu-id="bef81-718">U+002C to U+002F</span></span>|<span data-ttu-id="bef81-719">U + 061E и U + 061F</span><span class="sxs-lookup"><span data-stu-id="bef81-719">U+061E and U+061F</span></span>|<span data-ttu-id="bef81-720">U + 19DE и U + 19DF</span><span class="sxs-lookup"><span data-stu-id="bef81-720">U+19DE and U+19DF</span></span>|<span data-ttu-id="bef81-721">U + 303D</span><span class="sxs-lookup"><span data-stu-id="bef81-721">U+303D</span></span>|  
|<span data-ttu-id="bef81-722">U + 003A и U + 003B</span><span class="sxs-lookup"><span data-stu-id="bef81-722">U+003A and U+003B</span></span>|<span data-ttu-id="bef81-723">U + 066A до U + 066D</span><span class="sxs-lookup"><span data-stu-id="bef81-723">U+066A to U+066D</span></span>|<span data-ttu-id="bef81-724">U + 1A1E и U + 1A1F</span><span class="sxs-lookup"><span data-stu-id="bef81-724">U+1A1E and U+1A1F</span></span>|<span data-ttu-id="bef81-725">U + 30A0</span><span class="sxs-lookup"><span data-stu-id="bef81-725">U+30A0</span></span>|  
|<span data-ttu-id="bef81-726">U + 003F и U + 0040</span><span class="sxs-lookup"><span data-stu-id="bef81-726">U+003F and U+0040</span></span>|<span data-ttu-id="bef81-727">U+06D4</span><span class="sxs-lookup"><span data-stu-id="bef81-727">U+06D4</span></span>|<span data-ttu-id="bef81-728">U + 1B5A для 1B60 U +</span><span class="sxs-lookup"><span data-stu-id="bef81-728">U+1B5A to U+1B60</span></span>|<span data-ttu-id="bef81-729">U+30FB</span><span class="sxs-lookup"><span data-stu-id="bef81-729">U+30FB</span></span>|  
|<span data-ttu-id="bef81-730">U + 005B до U + 005D</span><span class="sxs-lookup"><span data-stu-id="bef81-730">U+005B to U+005D</span></span>|<span data-ttu-id="bef81-731">U + 0700 до U + 070D</span><span class="sxs-lookup"><span data-stu-id="bef81-731">U+0700 to U+070D</span></span>|<span data-ttu-id="bef81-732">U + 2010 до U + 2027</span><span class="sxs-lookup"><span data-stu-id="bef81-732">U+2010 to U+2027</span></span>|<span data-ttu-id="bef81-733">U + A874 для U + A877</span><span class="sxs-lookup"><span data-stu-id="bef81-733">U+A874 to U+A877</span></span>|  
|<span data-ttu-id="bef81-734">U+005F</span><span class="sxs-lookup"><span data-stu-id="bef81-734">U+005F</span></span>|<span data-ttu-id="bef81-735">U + 07F7 для 07F9 U +</span><span class="sxs-lookup"><span data-stu-id="bef81-735">U+07F7 to U+07F9</span></span>|<span data-ttu-id="bef81-736">U + 2030 U + 2043</span><span class="sxs-lookup"><span data-stu-id="bef81-736">U+2030 to U+2043</span></span>|<span data-ttu-id="bef81-737">U + FD3E и U + FD3F</span><span class="sxs-lookup"><span data-stu-id="bef81-737">U+FD3E and U+FD3F</span></span>|  
|<span data-ttu-id="bef81-738">U+007B</span><span class="sxs-lookup"><span data-stu-id="bef81-738">U+007B</span></span>|<span data-ttu-id="bef81-739">U + 0964 и U + 0965</span><span class="sxs-lookup"><span data-stu-id="bef81-739">U+0964 and U+0965</span></span>|<span data-ttu-id="bef81-740">U + 2045 для 2051 U +</span><span class="sxs-lookup"><span data-stu-id="bef81-740">U+2045 to U+2051</span></span>|<span data-ttu-id="bef81-741">U + FE10 для U + FE19</span><span class="sxs-lookup"><span data-stu-id="bef81-741">U+FE10 to U+FE19</span></span>|  
|<span data-ttu-id="bef81-742">U + 007D</span><span class="sxs-lookup"><span data-stu-id="bef81-742">U+007D</span></span>|<span data-ttu-id="bef81-743">U + 0970</span><span class="sxs-lookup"><span data-stu-id="bef81-743">U+0970</span></span>|<span data-ttu-id="bef81-744">2053 U + для 205E U +</span><span class="sxs-lookup"><span data-stu-id="bef81-744">U+2053 to U+205E</span></span>|<span data-ttu-id="bef81-745">U + fe30 до к U + FE52</span><span class="sxs-lookup"><span data-stu-id="bef81-745">U+FE30 to U+FE52</span></span>|  
|<span data-ttu-id="bef81-746">U+00A1</span><span class="sxs-lookup"><span data-stu-id="bef81-746">U+00A1</span></span>|<span data-ttu-id="bef81-747">U + 0DF4</span><span class="sxs-lookup"><span data-stu-id="bef81-747">U+0DF4</span></span>|<span data-ttu-id="bef81-748">U + 207D и U + 207E</span><span class="sxs-lookup"><span data-stu-id="bef81-748">U+207D and  U+207E</span></span>|<span data-ttu-id="bef81-749">U + FE54 для U + FE61</span><span class="sxs-lookup"><span data-stu-id="bef81-749">U+FE54 to U+FE61</span></span>|  
|<span data-ttu-id="bef81-750">U + 00AB</span><span class="sxs-lookup"><span data-stu-id="bef81-750">U+00AB</span></span>|<span data-ttu-id="bef81-751">U + 0E4F для 0E5B U +</span><span class="sxs-lookup"><span data-stu-id="bef81-751">U+0E4F to U+0E5B</span></span>|<span data-ttu-id="bef81-752">U + 208D и U + 208E</span><span class="sxs-lookup"><span data-stu-id="bef81-752">U+208D and U+208E</span></span>|<span data-ttu-id="bef81-753">U + FE63</span><span class="sxs-lookup"><span data-stu-id="bef81-753">U+FE63</span></span>|  
|<span data-ttu-id="bef81-754">U + 00AD</span><span class="sxs-lookup"><span data-stu-id="bef81-754">U+00AD</span></span>|<span data-ttu-id="bef81-755">U + 0F04 для 0F12 U +</span><span class="sxs-lookup"><span data-stu-id="bef81-755">U+0F04 to U+0F12</span></span>|<span data-ttu-id="bef81-756">U + 2329 до U + 232A</span><span class="sxs-lookup"><span data-stu-id="bef81-756">U+2329 and U+232A</span></span>|<span data-ttu-id="bef81-757">U + FE68</span><span class="sxs-lookup"><span data-stu-id="bef81-757">U+FE68</span></span>|  
|<span data-ttu-id="bef81-758">U+00B7</span><span class="sxs-lookup"><span data-stu-id="bef81-758">U+00B7</span></span>|<span data-ttu-id="bef81-759">U + 0F3A для 0F3D U +</span><span class="sxs-lookup"><span data-stu-id="bef81-759">U+0F3A to U+0F3D</span></span>|<span data-ttu-id="bef81-760">U + 2768 для 2775 U +</span><span class="sxs-lookup"><span data-stu-id="bef81-760">U+2768 to U+2775</span></span>|<span data-ttu-id="bef81-761">U + FE6A и U + FE6B</span><span class="sxs-lookup"><span data-stu-id="bef81-761">U+FE6A and U+FE6B</span></span>|  
|<span data-ttu-id="bef81-762">U + 00BB</span><span class="sxs-lookup"><span data-stu-id="bef81-762">U+00BB</span></span>|<span data-ttu-id="bef81-763">U + 0F85</span><span class="sxs-lookup"><span data-stu-id="bef81-763">U+0F85</span></span>|<span data-ttu-id="bef81-764">5 27C U + U + 27C 6</span><span class="sxs-lookup"><span data-stu-id="bef81-764">U+27C5 to U+27C6</span></span>|<span data-ttu-id="bef81-765">U + FF01 для U + FF03</span><span class="sxs-lookup"><span data-stu-id="bef81-765">U+FF01 to U+FF03</span></span>|  
|<span data-ttu-id="bef81-766">U + 00BF</span><span class="sxs-lookup"><span data-stu-id="bef81-766">U+00BF</span></span>|<span data-ttu-id="bef81-767">U + 0FD0 и U + 0FD1</span><span class="sxs-lookup"><span data-stu-id="bef81-767">U+0FD0 and U+0FD1</span></span>|<span data-ttu-id="bef81-768">U + 27E6 для 27EB U +</span><span class="sxs-lookup"><span data-stu-id="bef81-768">U+27E6 to U+27EB</span></span>|<span data-ttu-id="bef81-769">U + FF05 для U + FF0A</span><span class="sxs-lookup"><span data-stu-id="bef81-769">U+FF05 to U+FF0A</span></span>|  
|<span data-ttu-id="bef81-770">U + 037E</span><span class="sxs-lookup"><span data-stu-id="bef81-770">U+037E</span></span>|<span data-ttu-id="bef81-771">U + 104A для 104F U +</span><span class="sxs-lookup"><span data-stu-id="bef81-771">U+104A to U+104F</span></span>|<span data-ttu-id="bef81-772">U + 2983 для 2998 U +</span><span class="sxs-lookup"><span data-stu-id="bef81-772">U+2983 to U+2998</span></span>|<span data-ttu-id="bef81-773">U + FF0C для U + FF0F</span><span class="sxs-lookup"><span data-stu-id="bef81-773">U+FF0C to U+FF0F</span></span>|  
|<span data-ttu-id="bef81-774">U+0387</span><span class="sxs-lookup"><span data-stu-id="bef81-774">U+0387</span></span>|<span data-ttu-id="bef81-775">U + 10FB</span><span class="sxs-lookup"><span data-stu-id="bef81-775">U+10FB</span></span>|<span data-ttu-id="bef81-776">U + 29D 8 U + 29DB</span><span class="sxs-lookup"><span data-stu-id="bef81-776">U+29D8 to U+29DB</span></span>|<span data-ttu-id="bef81-777">U + FF1A и U + FF1B</span><span class="sxs-lookup"><span data-stu-id="bef81-777">U+FF1A and U+FF1B</span></span>|  
|<span data-ttu-id="bef81-778">U + 055A для 055F U +</span><span class="sxs-lookup"><span data-stu-id="bef81-778">U+055A to U+055F</span></span>|<span data-ttu-id="bef81-779">U + 1361 для 1368 U +</span><span class="sxs-lookup"><span data-stu-id="bef81-779">U+1361 to U+1368</span></span>|<span data-ttu-id="bef81-780">U + 29FC и U + 29FD</span><span class="sxs-lookup"><span data-stu-id="bef81-780">U+29FC and U+29FD</span></span>|<span data-ttu-id="bef81-781">U + FF1F и U + FF20</span><span class="sxs-lookup"><span data-stu-id="bef81-781">U+FF1F and U+FF20</span></span>|  
|<span data-ttu-id="bef81-782">U + 0589 до U + 058A</span><span class="sxs-lookup"><span data-stu-id="bef81-782">U+0589 and U+058A</span></span>|<span data-ttu-id="bef81-783">U + 166D и U + 166E</span><span class="sxs-lookup"><span data-stu-id="bef81-783">U+166D and U+166E</span></span>|<span data-ttu-id="bef81-784">U + 2CF9 для 2CFC U +</span><span class="sxs-lookup"><span data-stu-id="bef81-784">U+2CF9 to U+2CFC</span></span>|<span data-ttu-id="bef81-785">U + FF3B для U + FF3D</span><span class="sxs-lookup"><span data-stu-id="bef81-785">U+FF3B to U+FF3D</span></span>|  
|<span data-ttu-id="bef81-786">U+05BE</span><span class="sxs-lookup"><span data-stu-id="bef81-786">U+05BE</span></span>|<span data-ttu-id="bef81-787">U + 169B и U + 169C</span><span class="sxs-lookup"><span data-stu-id="bef81-787">U+169B and U+169C</span></span>|<span data-ttu-id="bef81-788">U + 2CFE и U + 2CFF</span><span class="sxs-lookup"><span data-stu-id="bef81-788">U+2CFE and U+2CFF</span></span>|<span data-ttu-id="bef81-789">U + FF3F</span><span class="sxs-lookup"><span data-stu-id="bef81-789">U+FF3F</span></span>|  
|<span data-ttu-id="bef81-790">U+05C0</span><span class="sxs-lookup"><span data-stu-id="bef81-790">U+05C0</span></span>|<span data-ttu-id="bef81-791">U + 16EB для 16ED U +</span><span class="sxs-lookup"><span data-stu-id="bef81-791">U+16EB to U+16ED</span></span>|<span data-ttu-id="bef81-792">U + 2E00 U + 2E17</span><span class="sxs-lookup"><span data-stu-id="bef81-792">U+2E00 to U+2E17</span></span>|<span data-ttu-id="bef81-793">U+FF5B</span><span class="sxs-lookup"><span data-stu-id="bef81-793">U+FF5B</span></span>|  
|<span data-ttu-id="bef81-794">U+05C3</span><span class="sxs-lookup"><span data-stu-id="bef81-794">U+05C3</span></span>|<span data-ttu-id="bef81-795">U + 1735 и U + 1736</span><span class="sxs-lookup"><span data-stu-id="bef81-795">U+1735 and U+1736</span></span>|<span data-ttu-id="bef81-796">U + 2E1C и U + 2E1D</span><span class="sxs-lookup"><span data-stu-id="bef81-796">U+2E1C and U+2E1D</span></span>|<span data-ttu-id="bef81-797">U + FF5D</span><span class="sxs-lookup"><span data-stu-id="bef81-797">U+FF5D</span></span>|  
|<span data-ttu-id="bef81-798">U+05C6</span><span class="sxs-lookup"><span data-stu-id="bef81-798">U+05C6</span></span>|<span data-ttu-id="bef81-799">4 17D U + U + 17D 6</span><span class="sxs-lookup"><span data-stu-id="bef81-799">U+17D4 to U+17D6</span></span>|<span data-ttu-id="bef81-800">U + 3001 для 3003 U +</span><span class="sxs-lookup"><span data-stu-id="bef81-800">U+3001 to U+3003</span></span>|<span data-ttu-id="bef81-801">U + FF5F для U + FF65</span><span class="sxs-lookup"><span data-stu-id="bef81-801">U+FF5F to U+FF65</span></span>|  
|<span data-ttu-id="bef81-802">U + 05F3 и U + 05F4</span><span class="sxs-lookup"><span data-stu-id="bef81-802">U+05F3 and U+05F4</span></span>|<span data-ttu-id="bef81-803">U + 17D 8 U + 17DA</span><span class="sxs-lookup"><span data-stu-id="bef81-803">U+17D8 to U+17DA</span></span>|<span data-ttu-id="bef81-804">3008 U + для U + 3011</span><span class="sxs-lookup"><span data-stu-id="bef81-804">U+3008 to U+3011</span></span>||  
  
   
  
## Examples  
 <span data-ttu-id="bef81-805">В следующем примере кода показано <xref:System.Char.IsPunctuation%2A>.</span><span class="sxs-lookup"><span data-stu-id="bef81-805">The following code example demonstrates <xref:System.Char.IsPunctuation%2A>.</span></span>  
  
 [!code-cpp[System.Char.IsPunctuation#9](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsPunctuation/CPP/ispunctuation.cpp#9)]
 [!code-csharp[System.Char.IsPunctuation#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsPunctuation/CS/ispunctuation.cs#9)]
 [!code-vb[System.Char.IsPunctuation#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsPunctuation/VB/ispunctuation.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="bef81-806">
            <paramref name="s" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-806">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="bef81-807">
            <paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-807">
              <paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Boolean" />
        <altmember cref="T:System.String" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsSeparator">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="bef81-808">Indicates whether a Unicode character is categorized as a separator character.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-808">Indicates whether a Unicode character is categorized as a separator character.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bef81-809">В стандарте Юникод распознает три подкатегории разделителей:</span><span class="sxs-lookup"><span data-stu-id="bef81-809">The Unicode standard recognizes three subcategories of separators:</span></span>  
  
-   <span data-ttu-id="bef81-810">Пространство разделители ( <xref:System.Globalization.UnicodeCategory.SpaceSeparator?displayProperty=nameWithType> категории), который включает символы, например \u0020.</span><span class="sxs-lookup"><span data-stu-id="bef81-810">Space separators (the <xref:System.Globalization.UnicodeCategory.SpaceSeparator?displayProperty=nameWithType> category), which includes characters such as \u0020.</span></span>  
  
-   <span data-ttu-id="bef81-811">Строка разделителя ( <xref:System.Globalization.UnicodeCategory.LineSeparator?displayProperty=nameWithType> категории), который включает \u2028.</span><span class="sxs-lookup"><span data-stu-id="bef81-811">Line separators (the <xref:System.Globalization.UnicodeCategory.LineSeparator?displayProperty=nameWithType> category), which includes \u2028.</span></span>  
  
-   <span data-ttu-id="bef81-812">Абзаца разделители ( <xref:System.Globalization.UnicodeCategory.ParagraphSeparator?displayProperty=nameWithType> категории), который включает \u2029.</span><span class="sxs-lookup"><span data-stu-id="bef81-812">Paragraph separators (the <xref:System.Globalization.UnicodeCategory.ParagraphSeparator?displayProperty=nameWithType> category), which includes \u2029.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="bef81-813">Стандарт Юникод классифицирует \u000A символов (LF), \u000C (ОО) и \u000D (CR), как управляющие символы (членами <xref:System.Globalization.UnicodeCategory.Control?displayProperty=nameWithType> категории), а не как разделители.</span><span class="sxs-lookup"><span data-stu-id="bef81-813">The Unicode standard classifies the characters \u000A (LF), \u000C (FF), and \u000D (CR) as control characters (members of the <xref:System.Globalization.UnicodeCategory.Control?displayProperty=nameWithType> category), not as separator characters.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsSeparator">
      <MemberSignature Language="C#" Value="public static bool IsSeparator (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsSeparator(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsSeparator(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsSeparator (c As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsSeparator(char c);" />
      <MemberSignature Language="F#" Value="static member IsSeparator : char -&gt; bool" Usage="System.char.IsSeparator c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="bef81-814">The Unicode character to evaluate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-814">The Unicode character to evaluate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bef81-815">Indicates whether the specified Unicode character is categorized as a separator character.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-815">Indicates whether the specified Unicode character is categorized as a separator character.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bef81-816">
            <see langword="true" /> if <paramref name="c" /> is a separator character; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-816">
              <see langword="true" /> if <paramref name="c" /> is a separator character; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bef81-817">В стандарте Юникод распознает три подкатегории разделителей:</span><span class="sxs-lookup"><span data-stu-id="bef81-817">The Unicode standard recognizes three subcategories of separators:</span></span>  
  
-   <span data-ttu-id="bef81-818">Пространство разделители ( <xref:System.Globalization.UnicodeCategory.SpaceSeparator?displayProperty=nameWithType> категории), который включает символы, например \u0020.</span><span class="sxs-lookup"><span data-stu-id="bef81-818">Space separators (the <xref:System.Globalization.UnicodeCategory.SpaceSeparator?displayProperty=nameWithType> category), which includes characters such as \u0020.</span></span>  
  
-   <span data-ttu-id="bef81-819">Строка разделителя ( <xref:System.Globalization.UnicodeCategory.LineSeparator?displayProperty=nameWithType> категории), который включает \u2028.</span><span class="sxs-lookup"><span data-stu-id="bef81-819">Line separators (the <xref:System.Globalization.UnicodeCategory.LineSeparator?displayProperty=nameWithType> category), which includes \u2028.</span></span>  
  
-   <span data-ttu-id="bef81-820">Абзаца разделители ( <xref:System.Globalization.UnicodeCategory.ParagraphSeparator?displayProperty=nameWithType> категории), который включает \u2029.</span><span class="sxs-lookup"><span data-stu-id="bef81-820">Paragraph separators (the <xref:System.Globalization.UnicodeCategory.ParagraphSeparator?displayProperty=nameWithType> category), which includes \u2029.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="bef81-821">Стандарт Юникод классифицирует \u000A символов (LF), \u000C (ОО) и \u000D (CR), как управляющие символы (членами <xref:System.Globalization.UnicodeCategory.Control?displayProperty=nameWithType> категории), а не как разделители.</span><span class="sxs-lookup"><span data-stu-id="bef81-821">The Unicode standard classifies the characters \u000A (LF), \u000C (FF), and \u000D (CR) as control characters (members of the <xref:System.Globalization.UnicodeCategory.Control?displayProperty=nameWithType> category), not as separator characters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bef81-822">В следующем примере приводится <xref:System.Char> объекты, которые классифицируются как разделители.</span><span class="sxs-lookup"><span data-stu-id="bef81-822">The following example lists the <xref:System.Char> objects that are classified as separator characters.</span></span>  
  
 [!code-cpp[System.Char.IsSeparator#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsSeparator/CPP/isseparator1.cpp#1)]
 [!code-csharp[System.Char.IsSeparator#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsSeparator/CS/isseparator1.cs#1)]
 [!code-vb[System.Char.IsSeparator#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsSeparator/VB/isseparator1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Globalization.UnicodeCategory" />
      </Docs>
    </Member>
    <Member MemberName="IsSeparator">
      <MemberSignature Language="C#" Value="public static bool IsSeparator (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsSeparator(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsSeparator(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsSeparator (s As String, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsSeparator(System::String ^ s, int index);" />
      <MemberSignature Language="F#" Value="static member IsSeparator : string * int -&gt; bool" Usage="System.char.IsSeparator (s, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="bef81-823">A string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-823">A string.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="bef81-824">The position of the character to evaluate in <c>s</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-824">The position of the character to evaluate in <c>s</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bef81-825">Indicates whether the character at the specified position in a specified string is categorized as a separator character.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-825">Indicates whether the character at the specified position in a specified string is categorized as a separator character.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bef81-826">
            <see langword="true" /> if the character at position <paramref name="index" /> in <paramref name="s" /> is a separator character; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-826">
              <see langword="true" /> if the character at position <paramref name="index" /> in <paramref name="s" /> is a separator character; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bef81-827">Позиций знаков в строке, индексируются, начиная с нуля.</span><span class="sxs-lookup"><span data-stu-id="bef81-827">Character positions in a string are indexed starting from zero.</span></span>  
  
 <span data-ttu-id="bef81-828">В стандарте Юникод распознает три подкатегории разделителей:</span><span class="sxs-lookup"><span data-stu-id="bef81-828">The Unicode standard recognizes three subcategories of separators:</span></span>  
  
-   <span data-ttu-id="bef81-829">Пространство разделители ( <xref:System.Globalization.UnicodeCategory.SpaceSeparator?displayProperty=nameWithType> категории), который включает символы, например \u0020.</span><span class="sxs-lookup"><span data-stu-id="bef81-829">Space separators (the <xref:System.Globalization.UnicodeCategory.SpaceSeparator?displayProperty=nameWithType> category), which includes characters such as \u0020.</span></span>  
  
-   <span data-ttu-id="bef81-830">Строка разделителя ( <xref:System.Globalization.UnicodeCategory.LineSeparator?displayProperty=nameWithType> категории), который включает \u2028.</span><span class="sxs-lookup"><span data-stu-id="bef81-830">Line separators (the <xref:System.Globalization.UnicodeCategory.LineSeparator?displayProperty=nameWithType> category), which includes \u2028.</span></span>  
  
-   <span data-ttu-id="bef81-831">Абзаца разделители ( <xref:System.Globalization.UnicodeCategory.ParagraphSeparator?displayProperty=nameWithType> категории), который включает \u2029.</span><span class="sxs-lookup"><span data-stu-id="bef81-831">Paragraph separators (the <xref:System.Globalization.UnicodeCategory.ParagraphSeparator?displayProperty=nameWithType> category), which includes \u2029.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="bef81-832">Стандарт Юникод классифицирует \u000A символов (LF), \u000C (ОО) и \u000D (CR), как управляющие символы (членами <xref:System.Globalization.UnicodeCategory.Control?displayProperty=nameWithType> категории), а не как разделители.</span><span class="sxs-lookup"><span data-stu-id="bef81-832">The Unicode standard classifies the characters \u000A (LF), \u000C (FF), and \u000D (CR) as control characters (members of the <xref:System.Globalization.UnicodeCategory.Control?displayProperty=nameWithType> category), not as separator characters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bef81-833">В следующем примере демонстрируется <xref:System.Char.IsSeparator%2A>.</span><span class="sxs-lookup"><span data-stu-id="bef81-833">The following example demonstrates <xref:System.Char.IsSeparator%2A>.</span></span>  
  
 [!code-cpp[System.Char.IsSeparator#10](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsSeparator/CPP/isseparator.cpp#10)]
 [!code-csharp[System.Char.IsSeparator#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsSeparator/CS/isseparator.cs#10)]
 [!code-vb[System.Char.IsSeparator#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsSeparator/VB/isseparator.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="bef81-834">
            <paramref name="s" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-834">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="bef81-835">
            <paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-835">
              <paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Boolean" />
        <altmember cref="T:System.String" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsSurrogate">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="bef81-836">Indicates whether a character has a surrogate code unit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-836">Indicates whether a character has a surrogate code unit.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsSurrogate">
      <MemberSignature Language="C#" Value="public static bool IsSurrogate (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsSurrogate(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsSurrogate(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsSurrogate (c As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsSurrogate(char c);" />
      <MemberSignature Language="F#" Value="static member IsSurrogate : char -&gt; bool" Usage="System.char.IsSurrogate c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="bef81-837">The Unicode character to evaluate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-837">The Unicode character to evaluate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bef81-838">Indicates whether the specified character has a surrogate code unit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-838">Indicates whether the specified character has a surrogate code unit.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bef81-839">
            <see langword="true" /> if <paramref name="c" /> is either a high surrogate or a low surrogate; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-839">
              <see langword="true" /> if <paramref name="c" /> is either a high surrogate or a low surrogate; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bef81-840">Суррогат представляет <xref:System.Char> объекта с единицы кода UTF-16 в диапазоне от U + D800 до U + DFFF.</span><span class="sxs-lookup"><span data-stu-id="bef81-840">A surrogate is a <xref:System.Char> object with a UTF-16 code unit in the range from U+D800 to U+DFFF.</span></span> <span data-ttu-id="bef81-841">Каждый символ с единицы кода в этом диапазоне принадлежит <xref:System.Globalization.UnicodeCategory.Surrogate?displayProperty=nameWithType> категории.</span><span class="sxs-lookup"><span data-stu-id="bef81-841">Each character with a code unit in this range belongs to the <xref:System.Globalization.UnicodeCategory.Surrogate?displayProperty=nameWithType> category.</span></span> <span data-ttu-id="bef81-842">Отдельные замещающая Единица кода имеет без интерпретации, но имеет смысл только в том случае, если используется как часть суррогатную пару.</span><span class="sxs-lookup"><span data-stu-id="bef81-842">The individual surrogate code unit has no interpretation of its own, but has meaning only when used as part of a surrogate pair.</span></span> <span data-ttu-id="bef81-843">Дополнительные сведения о суррогатных парах см. в разделе стандарта Юникод по адресу [домашней странице Юникода](http://go.microsoft.com/fwlink/?linkid=37123).</span><span class="sxs-lookup"><span data-stu-id="bef81-843">For more information about surrogate pairs, see the Unicode Standard at the [Unicode home page](http://go.microsoft.com/fwlink/?linkid=37123).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bef81-844">В следующем примере демонстрируется <xref:System.Char.IsSurrogate%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="bef81-844">The following example demonstrates the <xref:System.Char.IsSurrogate%2A> method.</span></span>  
  
 [!code-cpp[System.Char.IsSurrogate#11](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsSurrogate/CPP/issurrogate.cpp#11)]
 [!code-csharp[System.Char.IsSurrogate#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsSurrogate/CS/issurrogate.cs#11)]
 [!code-vb[System.Char.IsSurrogate#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsSurrogate/VB/issurrogate.vb#11)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Char.IsHighSurrogate" />
        <altmember cref="Overload:System.Char.IsLowSurrogate" />
        <altmember cref="Overload:System.Char.IsSurrogatePair" />
      </Docs>
    </Member>
    <Member MemberName="IsSurrogate">
      <MemberSignature Language="C#" Value="public static bool IsSurrogate (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsSurrogate(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsSurrogate(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsSurrogate (s As String, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsSurrogate(System::String ^ s, int index);" />
      <MemberSignature Language="F#" Value="static member IsSurrogate : string * int -&gt; bool" Usage="System.char.IsSurrogate (s, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="bef81-845">A string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-845">A string.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="bef81-846">The position of the character to evaluate in <c>s</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-846">The position of the character to evaluate in <c>s</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bef81-847">Indicates whether the character at the specified position in a specified string has a surrogate code unit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-847">Indicates whether the character at the specified position in a specified string has a surrogate code unit.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bef81-848">
            <see langword="true" /> if the character at position <paramref name="index" /> in <paramref name="s" /> is a either a high surrogate or a low surrogate; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-848">
              <see langword="true" /> if the character at position <paramref name="index" /> in <paramref name="s" /> is a either a high surrogate or a low surrogate; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bef81-849">Позиций знаков в строке, индексируются, начиная с нуля.</span><span class="sxs-lookup"><span data-stu-id="bef81-849">Character positions in a string are indexed starting from zero.</span></span>  
  
 <span data-ttu-id="bef81-850">Суррогат представляет <xref:System.Char> объекта с единицы кода UTF-16 в диапазоне от U + D800 до U + DFFF.</span><span class="sxs-lookup"><span data-stu-id="bef81-850">A surrogate is a <xref:System.Char> object with a UTF-16 code unit in the range from U+D800 to U+DFFF.</span></span> <span data-ttu-id="bef81-851">Каждый символ с единицы кода в этом диапазоне принадлежит <xref:System.Globalization.UnicodeCategory.Surrogate?displayProperty=nameWithType> категории.</span><span class="sxs-lookup"><span data-stu-id="bef81-851">Each character with a code unit in this range belongs to the <xref:System.Globalization.UnicodeCategory.Surrogate?displayProperty=nameWithType> category.</span></span> <span data-ttu-id="bef81-852">Отдельные замещающая Единица кода имеет без интерпретации, но имеет смысл только в том случае, если используется как часть суррогатную пару.</span><span class="sxs-lookup"><span data-stu-id="bef81-852">The individual surrogate code unit has no interpretation of its own, but has meaning only when used as part of a surrogate pair.</span></span> <span data-ttu-id="bef81-853">Дополнительные сведения о суррогатных парах см. в разделе стандарта Юникод по адресу [домашней странице Юникода](http://go.microsoft.com/fwlink/?linkid=37123).</span><span class="sxs-lookup"><span data-stu-id="bef81-853">For more information about surrogate pairs, see the Unicode Standard at the [Unicode home page](http://go.microsoft.com/fwlink/?linkid=37123).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bef81-854">В следующем примере кода показано <xref:System.Char.IsSurrogate%2A>.</span><span class="sxs-lookup"><span data-stu-id="bef81-854">The following code example demonstrates <xref:System.Char.IsSurrogate%2A>.</span></span>  
  
 [!code-cpp[System.Char.IsSurrogate#11](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsSurrogate/CPP/issurrogate.cpp#11)]
 [!code-csharp[System.Char.IsSurrogate#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsSurrogate/CS/issurrogate.cs#11)]
 [!code-vb[System.Char.IsSurrogate#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsSurrogate/VB/issurrogate.vb#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="bef81-855">
            <paramref name="s" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-855">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="bef81-856">
            <paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-856">
              <paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.Char.IsHighSurrogate" />
        <altmember cref="Overload:System.Char.IsLowSurrogate" />
        <altmember cref="Overload:System.Char.IsSurrogatePair" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsSurrogatePair">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="bef81-857">Indicates whether two specified <see cref="T:System.Char" /> objects form a surrogate pair.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-857">Indicates whether two specified <see cref="T:System.Char" /> objects form a surrogate pair.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsSurrogatePair">
      <MemberSignature Language="C#" Value="public static bool IsSurrogatePair (char highSurrogate, char lowSurrogate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsSurrogatePair(char highSurrogate, char lowSurrogate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsSurrogatePair(System.Char,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsSurrogatePair (highSurrogate As Char, lowSurrogate As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsSurrogatePair(char highSurrogate, char lowSurrogate);" />
      <MemberSignature Language="F#" Value="static member IsSurrogatePair : char * char -&gt; bool" Usage="System.char.IsSurrogatePair (highSurrogate, lowSurrogate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="highSurrogate" Type="System.Char" />
        <Parameter Name="lowSurrogate" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="highSurrogate">
          <span data-ttu-id="bef81-858">The character to evaluate as the high surrogate of a surrogate pair.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-858">The character to evaluate as the high surrogate of a surrogate pair.</span>
          </span>
        </param>
        <param name="lowSurrogate">
          <span data-ttu-id="bef81-859">The character to evaluate as the low surrogate of a surrogate pair.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-859">The character to evaluate as the low surrogate of a surrogate pair.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bef81-860">Indicates whether the two specified <see cref="T:System.Char" /> objects form a surrogate pair.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-860">Indicates whether the two specified <see cref="T:System.Char" /> objects form a surrogate pair.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bef81-861">
            <see langword="true" /> if the numeric value of the <paramref name="highSurrogate" /> parameter ranges from U+D800 through U+DBFF, and the numeric value of the <paramref name="lowSurrogate" /> parameter ranges from U+DC00 through U+DFFF; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-861">
              <see langword="true" /> if the numeric value of the <paramref name="highSurrogate" /> parameter ranges from U+D800 through U+DBFF, and the numeric value of the <paramref name="lowSurrogate" /> parameter ranges from U+DC00 through U+DFFF; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bef81-862">Как правило один символ представлен единый блок кода Юникод 16-разрядное.</span><span class="sxs-lookup"><span data-stu-id="bef81-862">Ordinarily, a single character is represented by a single 16-bit Unicode code unit.</span></span> <span data-ttu-id="bef81-863">Кодировка UTF-16 также поддерживает суррогатных пар: они позволяют один абстрактный символ должны быть представлены с двух единиц 16-разрядного кода.</span><span class="sxs-lookup"><span data-stu-id="bef81-863">UTF-16 encoding also supports surrogate pairs, which allow a single abstract character to be represented by two 16-bit code units.</span></span> <span data-ttu-id="bef81-864">Первый модуль кода, значение которого находится в диапазоне от U + D800 до U + DBFF, является старшим символом-заместителем.</span><span class="sxs-lookup"><span data-stu-id="bef81-864">The first code unit, whose value can range from U+D800 to U+DBFF, is the high surrogate.</span></span> <span data-ttu-id="bef81-865">Второй модуль кода, значение которого находится в диапазоне от U + DC00 до U + DFFF, является младшим символом-заместителем.</span><span class="sxs-lookup"><span data-stu-id="bef81-865">The second code unit, whose value can range from U+DC00 to U+DFFF, is the low surrogate.</span></span> <span data-ttu-id="bef81-866">Отдельные суррогатные кодовые точки у без интерпретации свои собственные.</span><span class="sxs-lookup"><span data-stu-id="bef81-866">Individual surrogate code points have no interpretation of their own.</span></span> <span data-ttu-id="bef81-867">Дополнительные сведения о суррогаты и стандарт Юникода, см. в разделе [домашней странице Юникода](http://go.microsoft.com/fwlink/?LinkId=37123).</span><span class="sxs-lookup"><span data-stu-id="bef81-867">For more information about surrogates and the Unicode Standard, see the [Unicode home page](http://go.microsoft.com/fwlink/?LinkId=37123).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bef81-868">В следующем примере кода показано <xref:System.Char.IsHighSurrogate%2A>, <xref:System.Char.IsLowSurrogate%2A>, и <xref:System.Char.IsSurrogatePair%2A> методы.</span><span class="sxs-lookup"><span data-stu-id="bef81-868">The following code example demonstrates the <xref:System.Char.IsHighSurrogate%2A>, <xref:System.Char.IsLowSurrogate%2A>, and <xref:System.Char.IsSurrogatePair%2A> methods.</span></span>  
  
 [!code-cpp[char.surrogate#1](~/samples/snippets/cpp/VS_Snippets_CLR/char.surrogate/CPP/sur.cpp#1)]
 [!code-csharp[char.surrogate#1](~/samples/snippets/csharp/VS_Snippets_CLR/char.surrogate/CS/sur.cs#1)]
 [!code-vb[char.surrogate#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/char.surrogate/VB/sur.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Char.IsHighSurrogate(System.Char)" />
        <altmember cref="M:System.Char.IsLowSurrogate(System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="IsSurrogatePair">
      <MemberSignature Language="C#" Value="public static bool IsSurrogatePair (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsSurrogatePair(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsSurrogatePair(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsSurrogatePair (s As String, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsSurrogatePair(System::String ^ s, int index);" />
      <MemberSignature Language="F#" Value="static member IsSurrogatePair : string * int -&gt; bool" Usage="System.char.IsSurrogatePair (s, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="bef81-869">A string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-869">A string.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="bef81-870">The starting position of the pair of characters to evaluate within <c>s</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-870">The starting position of the pair of characters to evaluate within <c>s</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bef81-871">Indicates whether two adjacent <see cref="T:System.Char" /> objects at a specified position in a string form a surrogate pair.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-871">Indicates whether two adjacent <see cref="T:System.Char" /> objects at a specified position in a string form a surrogate pair.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bef81-872">
            <see langword="true" /> if the <paramref name="s" /> parameter includes adjacent characters at positions <paramref name="index" /> and <paramref name="index" /> + 1, and the numeric value of the character at position <paramref name="index" /> ranges from U+D800 through U+DBFF, and the numeric value of the character at position <paramref name="index" />+1 ranges from U+DC00 through U+DFFF; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-872">
              <see langword="true" /> if the <paramref name="s" /> parameter includes adjacent characters at positions <paramref name="index" /> and <paramref name="index" /> + 1, and the numeric value of the character at position <paramref name="index" /> ranges from U+D800 through U+DBFF, and the numeric value of the character at position <paramref name="index" />+1 ranges from U+DC00 through U+DFFF; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bef81-873">Как правило один символ представлен единый блок кода Юникод 16-разрядное.</span><span class="sxs-lookup"><span data-stu-id="bef81-873">Ordinarily, a single character is represented by a single 16-bit Unicode code unit.</span></span> <span data-ttu-id="bef81-874">Кодировка UTF-16 также поддерживает суррогатных пар: они позволяют один абстрактный символ должны быть представлены с двух единиц 16-разрядного кода.</span><span class="sxs-lookup"><span data-stu-id="bef81-874">UTF-16 encoding also supports surrogate pairs, which allow a single abstract character to be represented by two 16-bit code units.</span></span> <span data-ttu-id="bef81-875">Первый модуль кода, значение которого находится в диапазоне от U + D800 до U + DBFF, является старшим символом-заместителем.</span><span class="sxs-lookup"><span data-stu-id="bef81-875">The first code unit, whose value can range from U+D800 to U+DBFF, is the high surrogate.</span></span> <span data-ttu-id="bef81-876">Второй модуль кода, значение которого находится в диапазоне от U + DC00 до U + DFFF, является младшим символом-заместителем.</span><span class="sxs-lookup"><span data-stu-id="bef81-876">The second code unit, whose value can range from U+DC00 to U+DFFF, is the low surrogate.</span></span> <span data-ttu-id="bef81-877">Отдельные суррогатные кодовые точки у без интерпретации свои собственные.</span><span class="sxs-lookup"><span data-stu-id="bef81-877">Individual surrogate code points have no interpretation of their own.</span></span> <span data-ttu-id="bef81-878">Дополнительные сведения о суррогаты и стандарт Юникода, см. в разделе [домашней странице Юникода](http://go.microsoft.com/fwlink/?LinkId=37123).</span><span class="sxs-lookup"><span data-stu-id="bef81-878">For more information about surrogates and the Unicode Standard, see the [Unicode home page](http://go.microsoft.com/fwlink/?LinkId=37123).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bef81-879">В следующем примере кода показано <xref:System.Char.IsHighSurrogate%2A>, <xref:System.Char.IsLowSurrogate%2A>, и <xref:System.Char.IsSurrogatePair%2A> методы.</span><span class="sxs-lookup"><span data-stu-id="bef81-879">The following code example demonstrates the <xref:System.Char.IsHighSurrogate%2A>, <xref:System.Char.IsLowSurrogate%2A>, and <xref:System.Char.IsSurrogatePair%2A> methods.</span></span>  
  
 [!code-cpp[char.surrogate#1](~/samples/snippets/cpp/VS_Snippets_CLR/char.surrogate/CPP/sur.cpp#1)]
 [!code-csharp[char.surrogate#1](~/samples/snippets/csharp/VS_Snippets_CLR/char.surrogate/CS/sur.cs#1)]
 [!code-vb[char.surrogate#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/char.surrogate/VB/sur.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="bef81-880">
            <paramref name="s" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-880">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="bef81-881">
            <paramref name="index" /> is not a position within <paramref name="s" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-881">
              <paramref name="index" /> is not a position within <paramref name="s" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Char.IsHighSurrogate(System.Char)" />
        <altmember cref="M:System.Char.IsLowSurrogate(System.Char)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsSymbol">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="bef81-882">Indicates whether a Unicode character is categorized as a symbol character.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-882">Indicates whether a Unicode character is categorized as a symbol character.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bef81-883">Допустимые символы являются членами следующих категорий в <xref:System.Globalization.UnicodeCategory>: `MathSymbol`, `CurrencySymbol`, `ModifierSymbol`, и `OtherSymbol`.</span><span class="sxs-lookup"><span data-stu-id="bef81-883">Valid symbols are members of the following categories in <xref:System.Globalization.UnicodeCategory>: `MathSymbol`, `CurrencySymbol`, `ModifierSymbol`, and `OtherSymbol`.</span></span>  
  
 <span data-ttu-id="bef81-884">Символы в стандарте Юникода являются слабо определенным набором символов, включая следующие:</span><span class="sxs-lookup"><span data-stu-id="bef81-884">Symbols in the Unicode standard are a loosely defined set of characters that include the following:</span></span>  
  
-   <span data-ttu-id="bef81-885">Символы валют.</span><span class="sxs-lookup"><span data-stu-id="bef81-885">Currency symbols.</span></span>  
  
-   <span data-ttu-id="bef81-886">Буквенные символы, которые включают набор математические алфавитно-цифровые символы, а также символы, такие как похожие, № и™.</span><span class="sxs-lookup"><span data-stu-id="bef81-886">Letterlike symbols, which include a set of mathematical alphanumeric symbols as well as symbols such as ℅, №, and ™.</span></span>  
  
-   <span data-ttu-id="bef81-887">Номер форм, таких как верхние и нижние индексы.</span><span class="sxs-lookup"><span data-stu-id="bef81-887">Number forms, such as subscripts and superscripts.</span></span>  
  
-   <span data-ttu-id="bef81-888">Математические операторы и стрелки.</span><span class="sxs-lookup"><span data-stu-id="bef81-888">Mathematical operators and arrows.</span></span>  
  
-   <span data-ttu-id="bef81-889">Геометрические символы.</span><span class="sxs-lookup"><span data-stu-id="bef81-889">Geometric symbols.</span></span>  
  
-   <span data-ttu-id="bef81-890">Технические символы.</span><span class="sxs-lookup"><span data-stu-id="bef81-890">Technical symbols.</span></span>  
  
-   <span data-ttu-id="bef81-891">Шаблоны шрифта Брайля.</span><span class="sxs-lookup"><span data-stu-id="bef81-891">Braille patterns.</span></span>  
  
-   <span data-ttu-id="bef81-892">Значков Dingbats.</span><span class="sxs-lookup"><span data-stu-id="bef81-892">Dingbats.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsSymbol">
      <MemberSignature Language="C#" Value="public static bool IsSymbol (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsSymbol(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsSymbol(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsSymbol (c As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsSymbol(char c);" />
      <MemberSignature Language="F#" Value="static member IsSymbol : char -&gt; bool" Usage="System.char.IsSymbol c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="bef81-893">The Unicode character to evaluate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-893">The Unicode character to evaluate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bef81-894">Indicates whether the specified Unicode character is categorized as a symbol character.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-894">Indicates whether the specified Unicode character is categorized as a symbol character.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bef81-895">
            <see langword="true" /> if <paramref name="c" /> is a symbol character; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-895">
              <see langword="true" /> if <paramref name="c" /> is a symbol character; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bef81-896">Допустимые символы являются членами следующих категорий в <xref:System.Globalization.UnicodeCategory>: `MathSymbol`, `CurrencySymbol`, `ModifierSymbol`, и `OtherSymbol`.</span><span class="sxs-lookup"><span data-stu-id="bef81-896">Valid symbols are members of the following categories in <xref:System.Globalization.UnicodeCategory>: `MathSymbol`, `CurrencySymbol`, `ModifierSymbol`, and `OtherSymbol`.</span></span>  
  
 <span data-ttu-id="bef81-897">Символы в стандарте Юникода являются слабо определенным набором символов, включая следующие:</span><span class="sxs-lookup"><span data-stu-id="bef81-897">Symbols in the Unicode standard are a loosely defined set of characters that include the following:</span></span>  
  
-   <span data-ttu-id="bef81-898">Символы валют.</span><span class="sxs-lookup"><span data-stu-id="bef81-898">Currency symbols.</span></span>  
  
-   <span data-ttu-id="bef81-899">Буквенные символы, которые включают набор математические алфавитно-цифровые символы, а также символы, такие как похожие, № и™.</span><span class="sxs-lookup"><span data-stu-id="bef81-899">Letterlike symbols, which include a set of mathematical alphanumeric symbols as well as symbols such as ℅, №, and ™.</span></span>  
  
-   <span data-ttu-id="bef81-900">Номер форм, таких как верхние и нижние индексы.</span><span class="sxs-lookup"><span data-stu-id="bef81-900">Number forms, such as subscripts and superscripts.</span></span>  
  
-   <span data-ttu-id="bef81-901">Математические операторы и стрелки.</span><span class="sxs-lookup"><span data-stu-id="bef81-901">Mathematical operators and arrows.</span></span>  
  
-   <span data-ttu-id="bef81-902">Геометрические символы.</span><span class="sxs-lookup"><span data-stu-id="bef81-902">Geometric symbols.</span></span>  
  
-   <span data-ttu-id="bef81-903">Технические символы.</span><span class="sxs-lookup"><span data-stu-id="bef81-903">Technical symbols.</span></span>  
  
-   <span data-ttu-id="bef81-904">Шаблоны шрифта Брайля.</span><span class="sxs-lookup"><span data-stu-id="bef81-904">Braille patterns.</span></span>  
  
-   <span data-ttu-id="bef81-905">Значков Dingbats.</span><span class="sxs-lookup"><span data-stu-id="bef81-905">Dingbats.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bef81-906">В следующем примере кода показано <xref:System.Char.IsSymbol%2A>.</span><span class="sxs-lookup"><span data-stu-id="bef81-906">The following code example demonstrates <xref:System.Char.IsSymbol%2A>.</span></span>  
  
 [!code-cpp[System.Char.IsSymbol#12](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsSymbol/CPP/issymbol.cpp#12)]
 [!code-csharp[System.Char.IsSymbol#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsSymbol/CS/issymbol.cs#12)]
 [!code-vb[System.Char.IsSymbol#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsSymbol/VB/issymbol.vb#12)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Boolean" />
      </Docs>
    </Member>
    <Member MemberName="IsSymbol">
      <MemberSignature Language="C#" Value="public static bool IsSymbol (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsSymbol(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsSymbol(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsSymbol (s As String, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsSymbol(System::String ^ s, int index);" />
      <MemberSignature Language="F#" Value="static member IsSymbol : string * int -&gt; bool" Usage="System.char.IsSymbol (s, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="bef81-907">A string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-907">A string.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="bef81-908">The position of the character to evaluate in <c>s</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-908">The position of the character to evaluate in <c>s</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bef81-909">Indicates whether the character at the specified position in a specified string is categorized as a symbol character.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-909">Indicates whether the character at the specified position in a specified string is categorized as a symbol character.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bef81-910">
            <see langword="true" /> if the character at position <paramref name="index" /> in <paramref name="s" /> is a symbol character; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-910">
              <see langword="true" /> if the character at position <paramref name="index" /> in <paramref name="s" /> is a symbol character; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bef81-911">Позиций знаков в строке, индексируются, начиная с нуля.</span><span class="sxs-lookup"><span data-stu-id="bef81-911">Character positions in a string are indexed starting from zero.</span></span>  
  
 <span data-ttu-id="bef81-912">Допустимые символы являются членами следующих категорий в <xref:System.Globalization.UnicodeCategory?displayProperty=nameWithType>: `MathSymbol`, `CurrencySymbol`, `ModifierSymbol`, и `OtherSymbol`.</span><span class="sxs-lookup"><span data-stu-id="bef81-912">Valid symbols are members of the following categories in <xref:System.Globalization.UnicodeCategory?displayProperty=nameWithType>: `MathSymbol`, `CurrencySymbol`, `ModifierSymbol`, and `OtherSymbol`.</span></span>  
  
 <span data-ttu-id="bef81-913">Символы в стандарте Юникода являются слабо определенным набором символов, включая следующие:</span><span class="sxs-lookup"><span data-stu-id="bef81-913">Symbols in the Unicode standard are a loosely defined set of characters that include the following:</span></span>  
  
-   <span data-ttu-id="bef81-914">Символы валют.</span><span class="sxs-lookup"><span data-stu-id="bef81-914">Currency symbols.</span></span>  
  
-   <span data-ttu-id="bef81-915">Буквенные символы, которые включают набор математические алфавитно-цифровые символы, а также символы, такие как похожие, № и™.</span><span class="sxs-lookup"><span data-stu-id="bef81-915">Letterlike symbols, which include a set of mathematical alphanumeric symbols as well as symbols such as ℅, №, and ™.</span></span>  
  
-   <span data-ttu-id="bef81-916">Номер форм, таких как верхние и нижние индексы.</span><span class="sxs-lookup"><span data-stu-id="bef81-916">Number forms, such as subscripts and superscripts.</span></span>  
  
-   <span data-ttu-id="bef81-917">Математические операторы и стрелки.</span><span class="sxs-lookup"><span data-stu-id="bef81-917">Mathematical operators and arrows.</span></span>  
  
-   <span data-ttu-id="bef81-918">Геометрические символы.</span><span class="sxs-lookup"><span data-stu-id="bef81-918">Geometric symbols.</span></span>  
  
-   <span data-ttu-id="bef81-919">Технические символы.</span><span class="sxs-lookup"><span data-stu-id="bef81-919">Technical symbols.</span></span>  
  
-   <span data-ttu-id="bef81-920">Шаблоны шрифта Брайля.</span><span class="sxs-lookup"><span data-stu-id="bef81-920">Braille patterns.</span></span>  
  
-   <span data-ttu-id="bef81-921">Значков Dingbats.</span><span class="sxs-lookup"><span data-stu-id="bef81-921">Dingbats.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bef81-922">В следующем примере кода показано <xref:System.Char.IsSymbol%2A>.</span><span class="sxs-lookup"><span data-stu-id="bef81-922">The following code example demonstrates <xref:System.Char.IsSymbol%2A>.</span></span>  
  
 [!code-cpp[System.Char.IsSymbol#12](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsSymbol/CPP/issymbol.cpp#12)]
 [!code-csharp[System.Char.IsSymbol#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsSymbol/CS/issymbol.cs#12)]
 [!code-vb[System.Char.IsSymbol#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsSymbol/VB/issymbol.vb#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="bef81-923">
            <paramref name="s" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-923">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="bef81-924">
            <paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-924">
              <paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Boolean" />
        <altmember cref="T:System.String" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsUpper">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="bef81-925">Indicates whether a Unicode character is categorized as an uppercase letter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-925">Indicates whether a Unicode character is categorized as an uppercase letter.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsUpper">
      <MemberSignature Language="C#" Value="public static bool IsUpper (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsUpper(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsUpper(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsUpper (c As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsUpper(char c);" />
      <MemberSignature Language="F#" Value="static member IsUpper : char -&gt; bool" Usage="System.char.IsUpper c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="bef81-926">The Unicode character to evaluate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-926">The Unicode character to evaluate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bef81-927">Indicates whether the specified Unicode character is categorized as an uppercase letter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-927">Indicates whether the specified Unicode character is categorized as an uppercase letter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bef81-928">
            <see langword="true" /> if <paramref name="c" /> is an uppercase letter; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-928">
              <see langword="true" /> if <paramref name="c" /> is an uppercase letter; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bef81-929">Допустимые буквы верхнего регистра являются членами следующей категории в <xref:System.Globalization.UnicodeCategory>: `UppercaseLetter`.</span><span class="sxs-lookup"><span data-stu-id="bef81-929">Valid uppercase letters are members of the following category in <xref:System.Globalization.UnicodeCategory>: `UppercaseLetter`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Boolean" />
        <altmember cref="M:System.Char.IsLower(System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="IsUpper">
      <MemberSignature Language="C#" Value="public static bool IsUpper (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsUpper(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsUpper(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsUpper (s As String, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsUpper(System::String ^ s, int index);" />
      <MemberSignature Language="F#" Value="static member IsUpper : string * int -&gt; bool" Usage="System.char.IsUpper (s, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="bef81-930">A string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-930">A string.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="bef81-931">The position of the character to evaluate in <c>s</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-931">The position of the character to evaluate in <c>s</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bef81-932">Indicates whether the character at the specified position in a specified string is categorized as an uppercase letter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-932">Indicates whether the character at the specified position in a specified string is categorized as an uppercase letter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bef81-933">
            <see langword="true" /> if the character at position <paramref name="index" /> in <paramref name="s" /> is an uppercase letter; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-933">
              <see langword="true" /> if the character at position <paramref name="index" /> in <paramref name="s" /> is an uppercase letter; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bef81-934">Позиций знаков в строке, индексируются, начиная с нуля.</span><span class="sxs-lookup"><span data-stu-id="bef81-934">Character positions in a string are indexed starting from zero.</span></span>  
  
 <span data-ttu-id="bef81-935">Допустимые буквы верхнего регистра являются членами следующей категории в <xref:System.Globalization.UnicodeCategory>: `UppercaseLetter`.</span><span class="sxs-lookup"><span data-stu-id="bef81-935">Valid uppercase letters are members of the following category in <xref:System.Globalization.UnicodeCategory>: `UppercaseLetter`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="bef81-936">
            <paramref name="s" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-936">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="bef81-937">
            <paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-937">
              <paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Boolean" />
        <altmember cref="T:System.String" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsWhiteSpace">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="bef81-938">Indicates whether a Unicode character is categorized as white space.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-938">Indicates whether a Unicode character is categorized as white space.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bef81-939">Символы пробелов — следующие символы Юникода:</span><span class="sxs-lookup"><span data-stu-id="bef81-939">White space characters are the following Unicode characters:</span></span>  
  
-   <span data-ttu-id="bef81-940">Членами <xref:System.Globalization.UnicodeCategory.SpaceSeparator> категории, которая содержит символы ПРОБЕЛА (U + 0020), МЕСТА огамического ПИСЬМА ПОМЕТИТЬ (U + 1680), EN QUAD (U + 2000), EM QUAD (U + 2001 г.), EN пробел (U + 2002), EM ПРОСТРАНСТВА (U + 2003 г.), ТРЕХ на ШПАЦИИ (U + 2004 г.), ЧЕТЫРЕ на ШПАЦИИ (U + 2005), ШЕСТИ на EM ПРОБЕЛ (U + 2006 г.), РИСУНОК ПРОСТРАНСТВА (U + 2007), знаки ПРЕПИНАНИЯ ТОНКАЯ пробел (U + 2008), пробел (U + 2009 г.), ВОЛОСЫ пробел (U + 200A), УЗКИЙ неразрывный пробел (U + 202F), MEDIUM МАТЕМАТИЧЕСКИЕ ПРОСТРАНСТВА (U + 205F) и ИДЕОГРАФИЧЕСКИЙ пробел (U + 3000).</span><span class="sxs-lookup"><span data-stu-id="bef81-940">Members of the <xref:System.Globalization.UnicodeCategory.SpaceSeparator> category, which includes the characters SPACE (U+0020), OGHAM SPACE MARK (U+1680), EN QUAD (U+2000), EM QUAD (U+2001), EN SPACE (U+2002), EM SPACE (U+2003), THREE-PER-EM SPACE (U+2004), FOUR-PER-EM SPACE (U+2005), SIX-PER-EM SPACE (U+2006), FIGURE SPACE (U+2007), PUNCTUATION SPACE (U+2008), THIN SPACE (U+2009), HAIR SPACE (U+200A), NARROW NO-BREAK SPACE (U+202F), MEDIUM MATHEMATICAL SPACE (U+205F), and IDEOGRAPHIC SPACE (U+3000).</span></span>  
  
-   <span data-ttu-id="bef81-941">Членами <xref:System.Globalization.UnicodeCategory.LineSeparator> категорию, которая состоит только из символ РАЗДЕЛИТЕЛЯ СТРОК (U + 2028).</span><span class="sxs-lookup"><span data-stu-id="bef81-941">Members of the <xref:System.Globalization.UnicodeCategory.LineSeparator> category, which consists solely of the LINE SEPARATOR character (U+2028).</span></span>  
  
-   <span data-ttu-id="bef81-942">Членами <xref:System.Globalization.UnicodeCategory.ParagraphSeparator> категорию, которая состоит только из символ-РАЗДЕЛИТЕЛЬ АБЗАЦЕВ (U + 2029).</span><span class="sxs-lookup"><span data-stu-id="bef81-942">Members of the <xref:System.Globalization.UnicodeCategory.ParagraphSeparator> category, which consists solely of the PARAGRAPH SEPARATOR character (U+2029).</span></span>  
  
-   <span data-ttu-id="bef81-943">Символы горизонтальная табуляция (U + 0009), ПЕРЕВОДА строки (U + 000A), вертикальная табуляция (U + 000B), перевод страницы (U + 000C), возврат каретки (U + 000D), следующая строка (U + 0085) и неразрывный пробел (U + 00A0).</span><span class="sxs-lookup"><span data-stu-id="bef81-943">The characters CHARACTER TABULATION (U+0009), LINE FEED (U+000A), LINE TABULATION (U+000B), FORM FEED (U+000C), CARRIAGE RETURN (U+000D), NEXT LINE (U+0085), and NO-BREAK SPACE (U+00A0).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsWhiteSpace">
      <MemberSignature Language="C#" Value="public static bool IsWhiteSpace (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsWhiteSpace(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsWhiteSpace(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsWhiteSpace (c As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsWhiteSpace(char c);" />
      <MemberSignature Language="F#" Value="static member IsWhiteSpace : char -&gt; bool" Usage="System.char.IsWhiteSpace c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="bef81-944">The Unicode character to evaluate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-944">The Unicode character to evaluate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bef81-945">Indicates whether the specified Unicode character is categorized as white space.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-945">Indicates whether the specified Unicode character is categorized as white space.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bef81-946">
            <see langword="true" /> if <paramref name="c" /> is white space; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-946">
              <see langword="true" /> if <paramref name="c" /> is white space; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bef81-947">Символы пробелов — следующие символы Юникода:</span><span class="sxs-lookup"><span data-stu-id="bef81-947">White space characters are the following Unicode characters:</span></span>  
  
-   <span data-ttu-id="bef81-948">Членами <xref:System.Globalization.UnicodeCategory.SpaceSeparator> категории, которая содержит символы ПРОСТРАНСТВА (U + 0020), неразрывный пробел (U + 00A0), ПОМЕТЬТЕ ПРОСТРАНСТВА огамического ПИСЬМА (U + 1680), EN QUAD (U + 2000), EM QUAD (U + 2001 г.), EN пробел (U + 2002), EM ПРОСТРАНСТВА (U + 2003 г.), ТРЕХ на ШПАЦИИ (U + 2004 г.), (ЧЕТЫРЕ на ШПАЦИИ U+ 2005), ШЕСТИ на ШПАЦИИ (U + 2006 г.), РИСУНОК ПРОСТРАНСТВА (U + 2007), знаки ПРЕПИНАНИЯ ТОНКАЯ пробел (U + 2008), пробел (U + 2009 г.), ВОЛОСЫ пробел (U + 200A), УЗКИЙ неразрывный пробел (U + 202F), MEDIUM МАТЕМАТИЧЕСКИЕ ПРОСТРАНСТВА (U + 205F) и ИДЕОГРАФИЧЕСКИЙ пробел (U + 3000).</span><span class="sxs-lookup"><span data-stu-id="bef81-948">Members of the <xref:System.Globalization.UnicodeCategory.SpaceSeparator> category, which includes the characters SPACE (U+0020), NO-BREAK SPACE (U+00A0), OGHAM SPACE MARK (U+1680), EN QUAD (U+2000), EM QUAD (U+2001), EN SPACE (U+2002), EM SPACE (U+2003), THREE-PER-EM SPACE (U+2004), FOUR-PER-EM SPACE (U+2005), SIX-PER-EM SPACE (U+2006), FIGURE SPACE (U+2007), PUNCTUATION SPACE (U+2008), THIN SPACE (U+2009), HAIR SPACE (U+200A), NARROW NO-BREAK SPACE (U+202F), MEDIUM MATHEMATICAL SPACE (U+205F), and IDEOGRAPHIC SPACE (U+3000).</span></span>  
  
-   <span data-ttu-id="bef81-949">Членами <xref:System.Globalization.UnicodeCategory.LineSeparator> категорию, которая состоит только из символ РАЗДЕЛИТЕЛЯ СТРОК (U + 2028).</span><span class="sxs-lookup"><span data-stu-id="bef81-949">Members of the <xref:System.Globalization.UnicodeCategory.LineSeparator> category, which consists solely of the LINE SEPARATOR character (U+2028).</span></span>  
  
-   <span data-ttu-id="bef81-950">Членами <xref:System.Globalization.UnicodeCategory.ParagraphSeparator> категорию, которая состоит только из символ-РАЗДЕЛИТЕЛЬ АБЗАЦЕВ (U + 2029).</span><span class="sxs-lookup"><span data-stu-id="bef81-950">Members of the <xref:System.Globalization.UnicodeCategory.ParagraphSeparator> category, which consists solely of the PARAGRAPH SEPARATOR character (U+2029).</span></span>  
  
-   <span data-ttu-id="bef81-951">Символы горизонтальная табуляция (U + 0009), строка веб-канал (U + 000A), вертикальная табуляция (U + 000B), перевод страницы (U + 000C), возврата каретки (U + 000D) и следующая строка (U + 0085).</span><span class="sxs-lookup"><span data-stu-id="bef81-951">The characters CHARACTER TABULATION (U+0009), LINE FEED (U+000A), LINE TABULATION (U+000B), FORM FEED (U+000C), CARRIAGE RETURN (U+000D), and NEXT LINE (U+0085).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bef81-952">В следующем примере демонстрируется <xref:System.Char.IsWhiteSpace%28System.Char%29> метод.</span><span class="sxs-lookup"><span data-stu-id="bef81-952">The following example demonstrates the <xref:System.Char.IsWhiteSpace%28System.Char%29> method.</span></span>  
  
 [!code-cpp[System.Char.IsWhiteSpace#14](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsWhiteSpace/CPP/iswhitespace.cpp#14)]
 [!code-csharp[System.Char.IsWhiteSpace#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsWhiteSpace/CS/iswhitespace.cs#14)]
 [!code-vb[System.Char.IsWhiteSpace#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsWhiteSpace/VB/iswhitespace.vb#14)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Boolean" />
        <altmember cref="T:System.Globalization.UnicodeCategory" />
      </Docs>
    </Member>
    <Member MemberName="IsWhiteSpace">
      <MemberSignature Language="C#" Value="public static bool IsWhiteSpace (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsWhiteSpace(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsWhiteSpace(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsWhiteSpace (s As String, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsWhiteSpace(System::String ^ s, int index);" />
      <MemberSignature Language="F#" Value="static member IsWhiteSpace : string * int -&gt; bool" Usage="System.char.IsWhiteSpace (s, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="bef81-953">A string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-953">A string.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="bef81-954">The position of the character to evaluate in <c>s</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-954">The position of the character to evaluate in <c>s</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bef81-955">Indicates whether the character at the specified position in a specified string is categorized as white space.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-955">Indicates whether the character at the specified position in a specified string is categorized as white space.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bef81-956">
            <see langword="true" /> if the character at position <paramref name="index" /> in <paramref name="s" /> is white space; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-956">
              <see langword="true" /> if the character at position <paramref name="index" /> in <paramref name="s" /> is white space; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bef81-957">Позиций знаков в строке, индексируются, начиная с нуля.</span><span class="sxs-lookup"><span data-stu-id="bef81-957">Character positions in a string are indexed starting from zero.</span></span>  
  
 <span data-ttu-id="bef81-958">Символы пробелов — следующие символы Юникода:</span><span class="sxs-lookup"><span data-stu-id="bef81-958">White space characters are the following Unicode characters:</span></span>  
  
-   <span data-ttu-id="bef81-959">Членами <xref:System.Globalization.UnicodeCategory.SpaceSeparator> категории, которая содержит символы ПРОСТРАНСТВА (U + 0020), неразрывный пробел (U + 00A0), ПОМЕТЬТЕ ПРОСТРАНСТВА огамического ПИСЬМА (U + 1680), EN QUAD (U + 2000), EM QUAD (U + 2001 г.), EN пробел (U + 2002), EM ПРОСТРАНСТВА (U + 2003 г.), ТРЕХ на ШПАЦИИ (U + 2004 г.), (ЧЕТЫРЕ на ШПАЦИИ U+ 2005), ШЕСТИ на ШПАЦИИ (U + 2006 г.), РИСУНОК ПРОСТРАНСТВА (U + 2007), знаки ПРЕПИНАНИЯ ТОНКАЯ пробел (U + 2008), пробел (U + 2009 г.), ВОЛОСЫ пробел (U + 200A), УЗКИЙ неразрывный пробел (U + 202F), MEDIUM МАТЕМАТИЧЕСКИЕ ПРОСТРАНСТВА (U + 205F) и ИДЕОГРАФИЧЕСКИЙ пробел (U + 3000).</span><span class="sxs-lookup"><span data-stu-id="bef81-959">Members of the <xref:System.Globalization.UnicodeCategory.SpaceSeparator> category, which includes the characters SPACE (U+0020), NO-BREAK SPACE (U+00A0), OGHAM SPACE MARK (U+1680), EN QUAD (U+2000), EM QUAD (U+2001), EN SPACE (U+2002), EM SPACE (U+2003), THREE-PER-EM SPACE (U+2004), FOUR-PER-EM SPACE (U+2005), SIX-PER-EM SPACE (U+2006), FIGURE SPACE (U+2007), PUNCTUATION SPACE (U+2008), THIN SPACE (U+2009), HAIR SPACE (U+200A), NARROW NO-BREAK SPACE (U+202F), MEDIUM MATHEMATICAL SPACE (U+205F), and IDEOGRAPHIC SPACE (U+3000).</span></span>  
  
-   <span data-ttu-id="bef81-960">Членами <xref:System.Globalization.UnicodeCategory.LineSeparator> категорию, которая состоит только из символ РАЗДЕЛИТЕЛЯ СТРОК (U + 2028).</span><span class="sxs-lookup"><span data-stu-id="bef81-960">Members of the <xref:System.Globalization.UnicodeCategory.LineSeparator> category, which consists solely of the LINE SEPARATOR character (U+2028).</span></span>  
  
-   <span data-ttu-id="bef81-961">Членами <xref:System.Globalization.UnicodeCategory.ParagraphSeparator> категорию, которая состоит только из символ-РАЗДЕЛИТЕЛЬ АБЗАЦЕВ (U + 2029).</span><span class="sxs-lookup"><span data-stu-id="bef81-961">Members of the <xref:System.Globalization.UnicodeCategory.ParagraphSeparator> category, which consists solely of the PARAGRAPH SEPARATOR character (U+2029).</span></span>  
  
-   <span data-ttu-id="bef81-962">Символы горизонтальная табуляция (U + 0009), строка веб-канал (U + 000A), вертикальная табуляция (U + 000B), перевод страницы (U + 000C), возврата каретки (U + 000D) и следующая строка (U + 0085).</span><span class="sxs-lookup"><span data-stu-id="bef81-962">The characters CHARACTER TABULATION (U+0009), LINE FEED (U+000A), LINE TABULATION (U+000B), FORM FEED (U+000C), CARRIAGE RETURN (U+000D), and NEXT LINE (U+0085).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bef81-963">В следующем примере кода показано <xref:System.Char.IsWhiteSpace%2A>.</span><span class="sxs-lookup"><span data-stu-id="bef81-963">The following code example demonstrates <xref:System.Char.IsWhiteSpace%2A>.</span></span>  
  
 [!code-cpp[System.Char.IsWhiteSpace#14](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsWhiteSpace/CPP/iswhitespace.cpp#14)]
 [!code-csharp[System.Char.IsWhiteSpace#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsWhiteSpace/CS/iswhitespace.cs#14)]
 [!code-vb[System.Char.IsWhiteSpace#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsWhiteSpace/VB/iswhitespace.vb#14)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="bef81-964">
            <paramref name="s" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-964">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="bef81-965">
            <paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-965">
              <paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Boolean" />
        <altmember cref="T:System.String" />
        <altmember cref="T:System.Globalization.UnicodeCategory" />
      </Docs>
    </Member>
    <Member MemberName="MaxValue">
      <MemberSignature Language="C#" Value="public const char MaxValue;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal char MaxValue" />
      <MemberSignature Language="DocId" Value="F:System.Char.MaxValue" />
      <MemberSignature Language="VB.NET" Value="Public Const MaxValue As Char " />
      <MemberSignature Language="C++ CLI" Value="public: char MaxValue;" />
      <MemberSignature Language="F#" Value="val mutable MaxValue : char" Usage="System.char.MaxValue" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bef81-966">Represents the largest possible value of a <see cref="T:System.Char" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-966">Represents the largest possible value of a <see cref="T:System.Char" />.</span>
          </span>
          <span data-ttu-id="bef81-967">This field is constant.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-967">This field is constant.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bef81-968">Значение этой константы является шестнадцатеричным 0xFF.</span><span class="sxs-lookup"><span data-stu-id="bef81-968">The value of this constant is hexadecimal 0xFFFF.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Char.MinValue" />
      </Docs>
    </Member>
    <Member MemberName="MinValue">
      <MemberSignature Language="C#" Value="public const char MinValue;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal char MinValue" />
      <MemberSignature Language="DocId" Value="F:System.Char.MinValue" />
      <MemberSignature Language="VB.NET" Value="Public Const MinValue As Char " />
      <MemberSignature Language="C++ CLI" Value="public: char MinValue;" />
      <MemberSignature Language="F#" Value="val mutable MinValue : char" Usage="System.char.MinValue" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bef81-969">Represents the smallest possible value of a <see cref="T:System.Char" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-969">Represents the smallest possible value of a <see cref="T:System.Char" />.</span>
          </span>
          <span data-ttu-id="bef81-970">This field is constant.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-970">This field is constant.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bef81-971">Значение этой константы является шестнадцатеричным 0x00.</span><span class="sxs-lookup"><span data-stu-id="bef81-971">The value of this constant is hexadecimal 0x00.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Char.MaxValue" />
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static char Parse (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char Parse(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.Parse(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char Parse(System::String ^ s);" />
      <MemberSignature Language="F#" Value="static member Parse : string -&gt; char" Usage="System.char.Parse s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="bef81-972">A string that contains a single character, or <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-972">A string that contains a single character, or <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bef81-973">Converts the value of the specified string to its equivalent Unicode character.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-973">Converts the value of the specified string to its equivalent Unicode character.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bef81-974">A Unicode character equivalent to the sole character in <paramref name="s" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-974">A Unicode character equivalent to the sole character in <paramref name="s" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="bef81-975">В следующем примере кода показано <xref:System.Char.Parse%2A>.</span><span class="sxs-lookup"><span data-stu-id="bef81-975">The following code example demonstrates <xref:System.Char.Parse%2A>.</span></span>  
  
 [!code-cpp[System.Char.Parse#15](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.Parse/CPP/parse.cpp#15)]
 [!code-csharp[System.Char.Parse#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.Parse/CS/parse.cs#15)]
 [!code-vb[System.Char.Parse#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.Parse/VB/parse.vb#15)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="bef81-976">
            <paramref name="s" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-976">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="bef81-977">The length of <paramref name="s" /> is not 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-977">The length of <paramref name="s" /> is not 1.</span>
          </span>
        </exception>
        <altmember cref="M:System.Char.ToString" />
      </Docs>
    </Member>
    <Member MemberName="System.IComparable.CompareTo">
      <MemberSignature Language="C#" Value="int IComparable.CompareTo (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.IComparable.CompareTo(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.System#IComparable#CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function CompareTo (value As Object) As Integer Implements IComparable.CompareTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.IComparable.CompareTo(System::Object ^ value) = IComparable::CompareTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.GetTypeCode">
      <MemberSignature Language="C#" Value="TypeCode IConvertible.GetTypeCode ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.TypeCode System.IConvertible.GetTypeCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.System#IConvertible#GetTypeCode" />
      <MemberSignature Language="VB.NET" Value="Function GetTypeCode () As TypeCode Implements IConvertible.GetTypeCode" />
      <MemberSignature Language="C++ CLI" Value=" virtual TypeCode System.IConvertible.GetTypeCode() = IConvertible::GetTypeCode;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.GetTypeCode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TypeCode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToBoolean">
      <MemberSignature Language="C#" Value="bool IConvertible.ToBoolean (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.IConvertible.ToBoolean(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.System#IConvertible#ToBoolean(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToBoolean (provider As IFormatProvider) As Boolean Implements IConvertible.ToBoolean" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.IConvertible.ToBoolean(IFormatProvider ^ provider) = IConvertible::ToBoolean;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToBoolean(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="bef81-978">This parameter is ignored.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-978">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bef81-979">**Note** This conversion is not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-979">**Note** This conversion is not supported.</span>
          </span>
          <span data-ttu-id="bef81-980">Attempting to do so throws an <see cref="T:System.InvalidCastException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-980">Attempting to do so throws an <see cref="T:System.InvalidCastException" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bef81-981">This conversion is not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-981">This conversion is not supported.</span>
          </span>
          <span data-ttu-id="bef81-982">No value is returned.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-982">No value is returned.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="bef81-983">This conversion is not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-983">This conversion is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToByte">
      <MemberSignature Language="C#" Value="byte IConvertible.ToByte (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int8 System.IConvertible.ToByte(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.System#IConvertible#ToByte(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToByte (provider As IFormatProvider) As Byte Implements IConvertible.ToByte" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Byte System.IConvertible.ToByte(IFormatProvider ^ provider) = IConvertible::ToByte;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToByte(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="bef81-984">This parameter is ignored.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-984">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bef81-985">For a description of this member, see <see cref="M:System.IConvertible.ToByte(System.IFormatProvider)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-985">For a description of this member, see <see cref="M:System.IConvertible.ToByte(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bef81-986">The converted value of the current <see cref="T:System.Char" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-986">The converted value of the current <see cref="T:System.Char" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bef81-987">Этот член представляет собой явную реализацию члена интерфейса.</span><span class="sxs-lookup"><span data-stu-id="bef81-987">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="bef81-988">Он может использоваться, только если экземпляр <xref:System.Char> приведен к типу интерфейса <xref:System.IConvertible>.</span><span class="sxs-lookup"><span data-stu-id="bef81-988">It can be used only when the <xref:System.Char> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="bef81-989">Рекомендуемой альтернативой является вызов <xref:System.Convert.ToByte%28System.Char%29?displayProperty=nameWithType> метод вместо этого.</span><span class="sxs-lookup"><span data-stu-id="bef81-989">The recommended alternative is to call the <xref:System.Convert.ToByte%28System.Char%29?displayProperty=nameWithType> method instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToChar">
      <MemberSignature Language="C#" Value="char IConvertible.ToChar (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance char System.IConvertible.ToChar(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.System#IConvertible#ToChar(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToChar (provider As IFormatProvider) As Char Implements IConvertible.ToChar" />
      <MemberSignature Language="C++ CLI" Value=" virtual char System.IConvertible.ToChar(IFormatProvider ^ provider) = IConvertible::ToChar;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToChar(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="bef81-990">This parameter is ignored.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-990">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bef81-991">For a description of this member, see <see cref="M:System.IConvertible.ToChar(System.IFormatProvider)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-991">For a description of this member, see <see cref="M:System.IConvertible.ToChar(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bef81-992">The value of the current <see cref="T:System.Char" /> object unchanged.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-992">The value of the current <see cref="T:System.Char" /> object unchanged.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bef81-993">Этот член представляет собой явную реализацию члена интерфейса.</span><span class="sxs-lookup"><span data-stu-id="bef81-993">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="bef81-994">Он может использоваться, только если экземпляр <xref:System.Char> приведен к типу интерфейса <xref:System.IConvertible>.</span><span class="sxs-lookup"><span data-stu-id="bef81-994">It can be used only when the <xref:System.Char> instance is cast to an <xref:System.IConvertible> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDateTime">
      <MemberSignature Language="C#" Value="DateTime IConvertible.ToDateTime (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.DateTime System.IConvertible.ToDateTime(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.System#IConvertible#ToDateTime(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDateTime (provider As IFormatProvider) As DateTime Implements IConvertible.ToDateTime" />
      <MemberSignature Language="C++ CLI" Value=" virtual DateTime System.IConvertible.ToDateTime(IFormatProvider ^ provider) = IConvertible::ToDateTime;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDateTime(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="bef81-995">This parameter is ignored.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-995">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bef81-996">**Note** This conversion is not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-996">**Note** This conversion is not supported.</span>
          </span>
          <span data-ttu-id="bef81-997">Attempting to do so throws an <see cref="T:System.InvalidCastException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-997">Attempting to do so throws an <see cref="T:System.InvalidCastException" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bef81-998">No value is returned.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-998">No value is returned.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="bef81-999">This conversion is not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-999">This conversion is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDecimal">
      <MemberSignature Language="C#" Value="decimal IConvertible.ToDecimal (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.Decimal System.IConvertible.ToDecimal(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.System#IConvertible#ToDecimal(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDecimal (provider As IFormatProvider) As Decimal Implements IConvertible.ToDecimal" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Decimal System.IConvertible.ToDecimal(IFormatProvider ^ provider) = IConvertible::ToDecimal;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDecimal(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="bef81-1000">This parameter is ignored.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-1000">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bef81-1001">**Note** This conversion is not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-1001">**Note** This conversion is not supported.</span>
          </span>
          <span data-ttu-id="bef81-1002">Attempting to do so throws an <see cref="T:System.InvalidCastException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-1002">Attempting to do so throws an <see cref="T:System.InvalidCastException" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bef81-1003">No value is returned.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-1003">No value is returned.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="bef81-1004">This conversion is not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-1004">This conversion is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDouble">
      <MemberSignature Language="C#" Value="double IConvertible.ToDouble (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance float64 System.IConvertible.ToDouble(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.System#IConvertible#ToDouble(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDouble (provider As IFormatProvider) As Double Implements IConvertible.ToDouble" />
      <MemberSignature Language="C++ CLI" Value=" virtual double System.IConvertible.ToDouble(IFormatProvider ^ provider) = IConvertible::ToDouble;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDouble(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="bef81-1005">This parameter is ignored.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-1005">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bef81-1006">**Note** This conversion is not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-1006">**Note** This conversion is not supported.</span>
          </span>
          <span data-ttu-id="bef81-1007">Attempting to do so throws an <see cref="T:System.InvalidCastException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-1007">Attempting to do so throws an <see cref="T:System.InvalidCastException" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bef81-1008">No value is returned.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-1008">No value is returned.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="bef81-1009">This conversion is not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-1009">This conversion is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt16">
      <MemberSignature Language="C#" Value="short IConvertible.ToInt16 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int16 System.IConvertible.ToInt16(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.System#IConvertible#ToInt16(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt16 (provider As IFormatProvider) As Short Implements IConvertible.ToInt16" />
      <MemberSignature Language="C++ CLI" Value=" virtual short System.IConvertible.ToInt16(IFormatProvider ^ provider) = IConvertible::ToInt16;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt16(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="bef81-1010">This parameter is ignored.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-1010">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bef81-1011">For a description of this member, see <see cref="M:System.IConvertible.ToInt16(System.IFormatProvider)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-1011">For a description of this member, see <see cref="M:System.IConvertible.ToInt16(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bef81-1012">The converted value of the current <see cref="T:System.Char" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-1012">The converted value of the current <see cref="T:System.Char" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bef81-1013">Этот член представляет собой явную реализацию члена интерфейса.</span><span class="sxs-lookup"><span data-stu-id="bef81-1013">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="bef81-1014">Он может использоваться, только если экземпляр <xref:System.Char> приведен к типу интерфейса <xref:System.IConvertible>.</span><span class="sxs-lookup"><span data-stu-id="bef81-1014">It can be used only when the <xref:System.Char> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="bef81-1015">Рекомендуемой альтернативой является вызов <xref:System.Convert.ToInt16%28System.Char%29?displayProperty=nameWithType> метод вместо этого.</span><span class="sxs-lookup"><span data-stu-id="bef81-1015">The recommended alternative is to call the <xref:System.Convert.ToInt16%28System.Char%29?displayProperty=nameWithType> method instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt32">
      <MemberSignature Language="C#" Value="int IConvertible.ToInt32 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.IConvertible.ToInt32(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.System#IConvertible#ToInt32(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt32 (provider As IFormatProvider) As Integer Implements IConvertible.ToInt32" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.IConvertible.ToInt32(IFormatProvider ^ provider) = IConvertible::ToInt32;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt32(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="bef81-1016">This parameter is ignored.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-1016">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bef81-1017">For a description of this member, see <see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-1017">For a description of this member, see <see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bef81-1018">The converted value of the current <see cref="T:System.Char" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-1018">The converted value of the current <see cref="T:System.Char" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bef81-1019">Этот член представляет собой явную реализацию члена интерфейса.</span><span class="sxs-lookup"><span data-stu-id="bef81-1019">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="bef81-1020">Он может использоваться, только если экземпляр <xref:System.Char> приведен к типу интерфейса <xref:System.IConvertible>.</span><span class="sxs-lookup"><span data-stu-id="bef81-1020">It can be used only when the <xref:System.Char> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="bef81-1021">Рекомендуемой альтернативой является вызов <xref:System.Convert.ToInt32%28System.Char%29?displayProperty=nameWithType> метод вместо этого.</span><span class="sxs-lookup"><span data-stu-id="bef81-1021">The recommended alternative is to call the <xref:System.Convert.ToInt32%28System.Char%29?displayProperty=nameWithType> method instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt64">
      <MemberSignature Language="C#" Value="long IConvertible.ToInt64 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int64 System.IConvertible.ToInt64(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.System#IConvertible#ToInt64(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt64 (provider As IFormatProvider) As Long Implements IConvertible.ToInt64" />
      <MemberSignature Language="C++ CLI" Value=" virtual long System.IConvertible.ToInt64(IFormatProvider ^ provider) = IConvertible::ToInt64;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt64(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="bef81-1022">This parameter is ignored.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-1022">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bef81-1023">For a description of this member, see <see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-1023">For a description of this member, see <see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bef81-1024">The converted value of the current <see cref="T:System.Char" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-1024">The converted value of the current <see cref="T:System.Char" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bef81-1025">Этот член представляет собой явную реализацию члена интерфейса.</span><span class="sxs-lookup"><span data-stu-id="bef81-1025">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="bef81-1026">Он может использоваться, только если экземпляр <xref:System.Char> приведен к типу интерфейса <xref:System.IConvertible>.</span><span class="sxs-lookup"><span data-stu-id="bef81-1026">It can be used only when the <xref:System.Char> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="bef81-1027">Рекомендуемой альтернативой является вызов <xref:System.Convert.ToInt64%28System.Char%29?displayProperty=nameWithType> метод вместо этого.</span><span class="sxs-lookup"><span data-stu-id="bef81-1027">The recommended alternative is to call the <xref:System.Convert.ToInt64%28System.Char%29?displayProperty=nameWithType> method instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToSByte">
      <MemberSignature Language="C#" Value="sbyte IConvertible.ToSByte (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int8 System.IConvertible.ToSByte(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.System#IConvertible#ToSByte(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToSByte (provider As IFormatProvider) As SByte Implements IConvertible.ToSByte" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::SByte System.IConvertible.ToSByte(IFormatProvider ^ provider) = IConvertible::ToSByte;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToSByte(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="bef81-1028">This parameter is ignored.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-1028">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bef81-1029">For a description of this member, see <see cref="M:System.IConvertible.ToSByte(System.IFormatProvider)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-1029">For a description of this member, see <see cref="M:System.IConvertible.ToSByte(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bef81-1030">The converted value of the current <see cref="T:System.Char" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-1030">The converted value of the current <see cref="T:System.Char" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bef81-1031">Этот член представляет собой явную реализацию члена интерфейса.</span><span class="sxs-lookup"><span data-stu-id="bef81-1031">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="bef81-1032">Он может использоваться, только если экземпляр <xref:System.Char> приведен к типу интерфейса <xref:System.IConvertible>.</span><span class="sxs-lookup"><span data-stu-id="bef81-1032">It can be used only when the <xref:System.Char> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="bef81-1033">Рекомендуемой альтернативой является вызов <xref:System.Convert.ToSByte%28System.Char%29?displayProperty=nameWithType> метод вместо этого.</span><span class="sxs-lookup"><span data-stu-id="bef81-1033">The recommended alternative is to call the <xref:System.Convert.ToSByte%28System.Char%29?displayProperty=nameWithType> method instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToSingle">
      <MemberSignature Language="C#" Value="float IConvertible.ToSingle (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance float32 System.IConvertible.ToSingle(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.System#IConvertible#ToSingle(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToSingle (provider As IFormatProvider) As Single Implements IConvertible.ToSingle" />
      <MemberSignature Language="C++ CLI" Value=" virtual float System.IConvertible.ToSingle(IFormatProvider ^ provider) = IConvertible::ToSingle;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToSingle(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="bef81-1034">This parameter is ignored.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-1034">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bef81-1035">**Note** This conversion is not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-1035">**Note** This conversion is not supported.</span>
          </span>
          <span data-ttu-id="bef81-1036">Attempting to do so throws an <see cref="T:System.InvalidCastException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-1036">Attempting to do so throws an <see cref="T:System.InvalidCastException" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bef81-1037">No value is returned.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-1037">No value is returned.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="bef81-1038">This conversion is not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-1038">This conversion is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToString">
      <MemberSignature Language="C#" Value="string IConvertible.ToString (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.IConvertible.ToString(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.System#IConvertible#ToString(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToString (provider As IFormatProvider) As String Implements IConvertible.ToString" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ System.IConvertible.ToString(IFormatProvider ^ provider) = IConvertible::ToString;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToString(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToType">
      <MemberSignature Language="C#" Value="object IConvertible.ToType (Type type, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.IConvertible.ToType(class System.Type type, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.System#IConvertible#ToType(System.Type,System.IFormatProvider)" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.IConvertible.ToType(Type ^ type, IFormatProvider ^ provider) = IConvertible::ToType;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToType(System.Type,System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="bef81-1039">A <see cref="T:System.Type" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-1039">A <see cref="T:System.Type" /> object.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="bef81-1040">An <see cref="T:System.IFormatProvider" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-1040">An <see cref="T:System.IFormatProvider" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bef81-1041">For a description of this member, see <see cref="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-1041">For a description of this member, see <see cref="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bef81-1042">An object of the specified type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-1042">An object of the specified type.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bef81-1043">Этот член представляет собой явную реализацию члена интерфейса.</span><span class="sxs-lookup"><span data-stu-id="bef81-1043">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="bef81-1044">Он может использоваться, только если экземпляр <xref:System.Char> приведен к типу интерфейса <xref:System.IConvertible>.</span><span class="sxs-lookup"><span data-stu-id="bef81-1044">It can be used only when the <xref:System.Char> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="bef81-1045">Рекомендуемой альтернативой является вызов <xref:System.Convert.ChangeType%28System.Object%2CSystem.Type%2CSystem.IFormatProvider%29> метод вместо этого.</span><span class="sxs-lookup"><span data-stu-id="bef81-1045">The recommended alternative is to call the <xref:System.Convert.ChangeType%28System.Object%2CSystem.Type%2CSystem.IFormatProvider%29> method instead.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="bef81-1046">
            <paramref name="type" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-1046">
              <paramref name="type" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="bef81-1047">The value of the current <see cref="T:System.Char" /> object cannot be converted to the type specified by the <paramref name="type" /> parameter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-1047">The value of the current <see cref="T:System.Char" /> object cannot be converted to the type specified by the <paramref name="type" /> parameter.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt16">
      <MemberSignature Language="C#" Value="ushort IConvertible.ToUInt16 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int16 System.IConvertible.ToUInt16(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.System#IConvertible#ToUInt16(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt16 (provider As IFormatProvider) As UShort Implements IConvertible.ToUInt16" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt16 System.IConvertible.ToUInt16(IFormatProvider ^ provider) = IConvertible::ToUInt16;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt16(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="bef81-1048">An <see cref="T:System.IFormatProvider" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-1048">An <see cref="T:System.IFormatProvider" /> object.</span>
          </span>
          <span data-ttu-id="bef81-1049">(Specify <see langword="null" /> because the <c>provider</c> parameter is ignored.)</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-1049">(Specify <see langword="null" /> because the <c>provider</c> parameter is ignored.)</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bef81-1050">For a description of this member, see <see cref="M:System.IConvertible.ToUInt16(System.IFormatProvider)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-1050">For a description of this member, see <see cref="M:System.IConvertible.ToUInt16(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bef81-1051">The converted value of the current <see cref="T:System.Char" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-1051">The converted value of the current <see cref="T:System.Char" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bef81-1052">Этот член представляет собой явную реализацию члена интерфейса.</span><span class="sxs-lookup"><span data-stu-id="bef81-1052">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="bef81-1053">Он может использоваться, только если экземпляр <xref:System.Char> приведен к типу интерфейса <xref:System.IConvertible>.</span><span class="sxs-lookup"><span data-stu-id="bef81-1053">It can be used only when the <xref:System.Char> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="bef81-1054">Рекомендуемой альтернативой является вызов <xref:System.Convert.ToUInt16%28System.Char%29?displayProperty=nameWithType> метод вместо этого.</span><span class="sxs-lookup"><span data-stu-id="bef81-1054">The recommended alternative is to call the <xref:System.Convert.ToUInt16%28System.Char%29?displayProperty=nameWithType> method instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt32">
      <MemberSignature Language="C#" Value="uint IConvertible.ToUInt32 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int32 System.IConvertible.ToUInt32(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.System#IConvertible#ToUInt32(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt32 (provider As IFormatProvider) As UInteger Implements IConvertible.ToUInt32" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt32 System.IConvertible.ToUInt32(IFormatProvider ^ provider) = IConvertible::ToUInt32;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt32(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="bef81-1055">An <see cref="T:System.IFormatProvider" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-1055">An <see cref="T:System.IFormatProvider" /> object.</span>
          </span>
          <span data-ttu-id="bef81-1056">(Specify <see langword="null" /> because the <c>provider</c> parameter is ignored.)</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-1056">(Specify <see langword="null" /> because the <c>provider</c> parameter is ignored.)</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bef81-1057">For a description of this member, see <see cref="M:System.IConvertible.ToUInt32(System.IFormatProvider)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-1057">For a description of this member, see <see cref="M:System.IConvertible.ToUInt32(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bef81-1058">The converted value of the current <see cref="T:System.Char" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-1058">The converted value of the current <see cref="T:System.Char" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bef81-1059">Этот член представляет собой явную реализацию члена интерфейса.</span><span class="sxs-lookup"><span data-stu-id="bef81-1059">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="bef81-1060">Он может использоваться, только если экземпляр <xref:System.Char> приведен к типу интерфейса <xref:System.IConvertible>.</span><span class="sxs-lookup"><span data-stu-id="bef81-1060">It can be used only when the <xref:System.Char> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="bef81-1061">Рекомендуемой альтернативой является вызов <xref:System.Convert.ToUInt32%28System.Char%29?displayProperty=nameWithType> метод вместо этого.</span><span class="sxs-lookup"><span data-stu-id="bef81-1061">The recommended alternative is to call the <xref:System.Convert.ToUInt32%28System.Char%29?displayProperty=nameWithType> method instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt64">
      <MemberSignature Language="C#" Value="ulong IConvertible.ToUInt64 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int64 System.IConvertible.ToUInt64(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.System#IConvertible#ToUInt64(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt64 (provider As IFormatProvider) As ULong Implements IConvertible.ToUInt64" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt64 System.IConvertible.ToUInt64(IFormatProvider ^ provider) = IConvertible::ToUInt64;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt64(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="bef81-1062">An <see cref="T:System.IFormatProvider" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-1062">An <see cref="T:System.IFormatProvider" /> object.</span>
          </span>
          <span data-ttu-id="bef81-1063">(Specify <see langword="null" /> because the <c>provider</c> parameter is ignored.)</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-1063">(Specify <see langword="null" /> because the <c>provider</c> parameter is ignored.)</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bef81-1064">For a description of this member, see <see cref="M:System.IConvertible.ToUInt64(System.IFormatProvider)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-1064">For a description of this member, see <see cref="M:System.IConvertible.ToUInt64(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bef81-1065">The converted value of the current <see cref="T:System.Char" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-1065">The converted value of the current <see cref="T:System.Char" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bef81-1066">Этот член представляет собой явную реализацию члена интерфейса.</span><span class="sxs-lookup"><span data-stu-id="bef81-1066">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="bef81-1067">Он может использоваться, только если экземпляр <xref:System.Char> приведен к типу интерфейса <xref:System.IConvertible>.</span><span class="sxs-lookup"><span data-stu-id="bef81-1067">It can be used only when the <xref:System.Char> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="bef81-1068">Рекомендуемой альтернативой является вызов <xref:System.Convert.ToUInt64%28System.Char%29?displayProperty=nameWithType> метод вместо этого.</span><span class="sxs-lookup"><span data-stu-id="bef81-1068">The recommended alternative is to call the <xref:System.Convert.ToUInt64%28System.Char%29?displayProperty=nameWithType> method instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToLower">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="bef81-1069">Converts the value of a Unicode character to its lowercase equivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-1069">Converts the value of a Unicode character to its lowercase equivalent.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToLower">
      <MemberSignature Language="C#" Value="public static char ToLower (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char ToLower(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.ToLower(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToLower (c As Char) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char ToLower(char c);" />
      <MemberSignature Language="F#" Value="static member ToLower : char -&gt; char" Usage="System.char.ToLower c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="bef81-1070">The Unicode character to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-1070">The Unicode character to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bef81-1071">Converts the value of a Unicode character to its lowercase equivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-1071">Converts the value of a Unicode character to its lowercase equivalent.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bef81-1072">The lowercase equivalent of <paramref name="c" />, or the unchanged value of <paramref name="c" />, if <paramref name="c" /> is already lowercase or not alphabetic.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-1072">The lowercase equivalent of <paramref name="c" />, or the unchanged value of <paramref name="c" />, if <paramref name="c" /> is already lowercase or not alphabetic.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bef81-1073">Правила учета регистра, поступают из текущего языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="bef81-1073">Casing rules are obtained from the current culture.</span></span>  
  
 <span data-ttu-id="bef81-1074">Используйте <xref:System.String.ToLower%2A?displayProperty=nameWithType> для преобразования строки в нижний регистр.</span><span class="sxs-lookup"><span data-stu-id="bef81-1074">Use <xref:System.String.ToLower%2A?displayProperty=nameWithType> to convert a string to lowercase.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bef81-1075">В следующем примере демонстрируется <xref:System.Char.ToLower%2A>.</span><span class="sxs-lookup"><span data-stu-id="bef81-1075">The following example demonstrates <xref:System.Char.ToLower%2A>.</span></span>  
  
 [!code-cpp[System.Char.ToLower#16](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.ToLower/CPP/tolower.cpp#16)]
 [!code-csharp[System.Char.ToLower#16](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.ToLower/CS/tolower.cs#16)]
 [!code-vb[System.Char.ToLower#16](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.ToLower/VB/tolower.vb#16)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage">
          <span data-ttu-id="bef81-1076">
            <para>Как описано в [рекомендации по с помощью Strings](~/docs/standard/base-types/best-practices-strings.md), рекомендуется избегать вызова методов регистра знаков и регистр строки, которые заменяют значения по умолчанию. Вместо этого следует вызывать методы, которые нужны параметры, чтобы указать явно. Чтобы преобразовать символ в нижний регистр, используя соглашения о регистре текущих региональных параметров, вызовите <see cref="M:System.Char.ToLower(System.Char,System.Globalization.CultureInfo)" /> перегрузку метода со значением <see cref="P:System.Globalization.CultureInfo.CurrentCulture" /> для его <paramref name="culture" /> параметра.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-1076">
              <para>As explained in [Best Practices for Using Strings](~/docs/standard/base-types/best-practices-strings.md), we recommend that you avoid calling character-casing and string-casing methods that substitute default values. Instead, you should call methods that require parameters to be explicitly specified. To convert a character to lowercase by using the casing conventions of the current culture, call the <see cref="M:System.Char.ToLower(System.Char,System.Globalization.CultureInfo)" /> method overload with a value of <see cref="P:System.Globalization.CultureInfo.CurrentCulture" /> for its <paramref name="culture" /> parameter.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.String.ToLower" />
        <altmember cref="M:System.Char.ToUpper(System.Char,System.Globalization.CultureInfo)" />
      </Docs>
    </Member>
    <Member MemberName="ToLower">
      <MemberSignature Language="C#" Value="public static char ToLower (char c, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char ToLower(char c, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.ToLower(System.Char,System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToLower (c As Char, culture As CultureInfo) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char ToLower(char c, System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="static member ToLower : char * System.Globalization.CultureInfo -&gt; char" Usage="System.char.ToLower (c, culture)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="bef81-1077">The Unicode character to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-1077">The Unicode character to convert.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="bef81-1078">An object that supplies culture-specific casing rules.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-1078">An object that supplies culture-specific casing rules.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bef81-1079">Converts the value of a specified Unicode character to its lowercase equivalent using specified culture-specific formatting information.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-1079">Converts the value of a specified Unicode character to its lowercase equivalent using specified culture-specific formatting information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bef81-1080">The lowercase equivalent of <paramref name="c" />, modified according to <paramref name="culture" />, or the unchanged value of <paramref name="c" />, if <paramref name="c" /> is already lowercase or not alphabetic.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-1080">The lowercase equivalent of <paramref name="c" />, modified according to <paramref name="culture" />, or the unchanged value of <paramref name="c" />, if <paramref name="c" /> is already lowercase or not alphabetic.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bef81-1081">Используйте <xref:System.String.ToLower%2A?displayProperty=nameWithType> для преобразования строки в нижний регистр.</span><span class="sxs-lookup"><span data-stu-id="bef81-1081">Use <xref:System.String.ToLower%2A?displayProperty=nameWithType> to convert a string to lowercase.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bef81-1082">В следующем примере кода показано <xref:System.Char.ToLower%2A>.</span><span class="sxs-lookup"><span data-stu-id="bef81-1082">The following code example demonstrates <xref:System.Char.ToLower%2A>.</span></span>  
  
 [!code-cpp[System.Char.ToLower#16](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.ToLower/CPP/tolower.cpp#16)]
 [!code-csharp[System.Char.ToLower#16](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.ToLower/CS/tolower.cs#16)]
 [!code-vb[System.Char.ToLower#16](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.ToLower/VB/tolower.vb#16)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="bef81-1083">
            <paramref name="culture" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-1083">
              <paramref name="culture" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="P:System.Globalization.CultureInfo.CurrentCulture" />
        <altmember cref="M:System.String.ToLower" />
        <altmember cref="M:System.Char.ToUpper(System.Char,System.Globalization.CultureInfo)" />
      </Docs>
    </Member>
    <Member MemberName="ToLowerInvariant">
      <MemberSignature Language="C#" Value="public static char ToLowerInvariant (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char ToLowerInvariant(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.ToLowerInvariant(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToLowerInvariant (c As Char) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char ToLowerInvariant(char c);" />
      <MemberSignature Language="F#" Value="static member ToLowerInvariant : char -&gt; char" Usage="System.char.ToLowerInvariant c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="bef81-1084">The Unicode character to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-1084">The Unicode character to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bef81-1085">Converts the value of a Unicode character to its lowercase equivalent using the casing rules of the invariant culture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-1085">Converts the value of a Unicode character to its lowercase equivalent using the casing rules of the invariant culture.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bef81-1086">The lowercase equivalent of the <paramref name="c" /> parameter, or the unchanged value of <paramref name="c" />, if <paramref name="c" /> is already lowercase or not alphabetic.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-1086">The lowercase equivalent of the <paramref name="c" /> parameter, or the unchanged value of <paramref name="c" />, if <paramref name="c" /> is already lowercase or not alphabetic.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bef81-1087">Если приложение не зависит от текущего языка и региональных параметров и зависит от регистра символа, изменяемого предсказуемым способом, используйте <xref:System.Char.ToLowerInvariant%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="bef81-1087">If your application is unaffected by the current culture and depends on the case of a character changing in a predictable way, then use the <xref:System.Char.ToLowerInvariant%2A> method.</span></span> <span data-ttu-id="bef81-1088"><xref:System.Char.ToLowerInvariant%2A> Метод эквивалентен `ToLower(Char, CultureInfo.InvariantCulture)`.</span><span class="sxs-lookup"><span data-stu-id="bef81-1088">The <xref:System.Char.ToLowerInvariant%2A> method is equivalent to `ToLower(Char, CultureInfo.InvariantCulture)`.</span></span>  
  
 <span data-ttu-id="bef81-1089">Используйте <xref:System.String.ToLowerInvariant%2A?displayProperty=nameWithType> для преобразования строки в нижний регистр.</span><span class="sxs-lookup"><span data-stu-id="bef81-1089">Use <xref:System.String.ToLowerInvariant%2A?displayProperty=nameWithType> to convert a string to lowercase.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.String.ToLower" />
        <altmember cref="M:System.Char.ToUpper(System.Char,System.Globalization.CultureInfo)" />
        <altmember cref="P:System.Globalization.CultureInfo.InvariantCulture" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ToString">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="bef81-1090">Converts the value of this instance to its equivalent string representation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-1090">Converts the value of this instance to its equivalent string representation.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="char.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="bef81-1091">Converts the value of this instance to its equivalent string representation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-1091">Converts the value of this instance to its equivalent string representation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bef81-1092">The string representation of the value of this instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-1092">The string representation of the value of this instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="bef81-1093">В следующем примере кода показано <xref:System.Char.ToString%2A>.</span><span class="sxs-lookup"><span data-stu-id="bef81-1093">The following code example demonstrates <xref:System.Char.ToString%2A>.</span></span>  
  
 [!code-cpp[System.Char.ToString#17](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.ToString/CPP/tostring.cpp#17)]
 [!code-csharp[System.Char.ToString#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.ToString/CS/tostring.cs#17)]
 [!code-vb[System.Char.ToString#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.ToString/VB/tostring.vb#17)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Char.Parse(System.String)" />
        <altmember cref="T:System.String" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.ToString(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (c As Char) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(char c);" />
      <MemberSignature Language="F#" Value="static member ToString : char -&gt; string" Usage="System.char.ToString c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="bef81-1094">The Unicode character to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-1094">The Unicode character to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bef81-1095">Converts the specified Unicode character to its equivalent string representation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-1095">Converts the specified Unicode character to its equivalent string representation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bef81-1096">The string representation of the value of <paramref name="c" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-1096">The string representation of the value of <paramref name="c" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="bef81-1097">В следующем примере кода показано <xref:System.Char.ToString%2A>.</span><span class="sxs-lookup"><span data-stu-id="bef81-1097">The following code example demonstrates <xref:System.Char.ToString%2A>.</span></span>  
  
 [!code-cpp[System.Char.ToString#17](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.ToString/CPP/tostring.cpp#17)]
 [!code-csharp[System.Char.ToString#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.ToString/CS/tostring.cs#17)]
 [!code-vb[System.Char.ToString#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.ToString/VB/tostring.vb#17)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Char.Parse(System.String)" />
        <altmember cref="T:System.String" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToString(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.ToString(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ToString(IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="override this.ToString : IFormatProvider -&gt; string" Usage="char.ToString provider" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToString(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="bef81-1098">(Reserved) An object that supplies culture-specific formatting information.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-1098">(Reserved) An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bef81-1099">Converts the value of this instance to its equivalent string representation using the specified culture-specific format information.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-1099">Converts the value of this instance to its equivalent string representation using the specified culture-specific format information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bef81-1100">The string representation of the value of this instance as specified by <paramref name="provider" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-1100">The string representation of the value of this instance as specified by <paramref name="provider" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bef81-1101">`provider` Параметр учитывается; он не участвует в этой операции.</span><span class="sxs-lookup"><span data-stu-id="bef81-1101">The `provider` parameter is ignored; it does not participate in this operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bef81-1102">В следующем примере кода демонстрируется перегрузка <xref:System.Char.ToString%2A>.</span><span class="sxs-lookup"><span data-stu-id="bef81-1102">The following code example demonstrates an overload of <xref:System.Char.ToString%2A>.</span></span>  
  
 [!code-cpp[System.Char.ToString#17](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.ToString/CPP/tostring.cpp#17)]
 [!code-csharp[System.Char.ToString#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.ToString/CS/tostring.cs#17)]
 [!code-vb[System.Char.ToString#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.ToString/VB/tostring.vb#17)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Char.Parse(System.String)" />
        <altmember cref="T:System.String" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ToUpper">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="bef81-1103">Converts the value of a Unicode character to its uppercase equivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-1103">Converts the value of a Unicode character to its uppercase equivalent.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToUpper">
      <MemberSignature Language="C#" Value="public static char ToUpper (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char ToUpper(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.ToUpper(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUpper (c As Char) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char ToUpper(char c);" />
      <MemberSignature Language="F#" Value="static member ToUpper : char -&gt; char" Usage="System.char.ToUpper c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="bef81-1104">The Unicode character to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-1104">The Unicode character to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bef81-1105">Converts the value of a Unicode character to its uppercase equivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-1105">Converts the value of a Unicode character to its uppercase equivalent.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bef81-1106">The uppercase equivalent of <paramref name="c" />, or the unchanged value of <paramref name="c" /> if <paramref name="c" /> is already uppercase, has no uppercase equivalent, or is not alphabetic.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-1106">The uppercase equivalent of <paramref name="c" />, or the unchanged value of <paramref name="c" /> if <paramref name="c" /> is already uppercase, has no uppercase equivalent, or is not alphabetic.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bef81-1107">Правила учета регистра, поступают из текущего языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="bef81-1107">Casing rules are obtained from the current culture.</span></span>  
  
 <span data-ttu-id="bef81-1108">Используйте <xref:System.String.ToUpper%2A?displayProperty=nameWithType> для преобразования строки в верхний регистр.</span><span class="sxs-lookup"><span data-stu-id="bef81-1108">Use <xref:System.String.ToUpper%2A?displayProperty=nameWithType> to convert a string to uppercase.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bef81-1109">Следующий пример преобразует каждый символ в виде массива в его эквивалент в верхнем регистре.</span><span class="sxs-lookup"><span data-stu-id="bef81-1109">The following example converts each character in an array to its uppercase equivalent.</span></span>  
  
 [!code-csharp[System.Char.ToUpper#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.char.toupper/cs/toupper1.cs#1)]
 [!code-vb[System.Char.ToUpper#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.char.toupper/vb/toupper1.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage">
          <span data-ttu-id="bef81-1110">
            <para>Как описано в [рекомендации по с помощью Strings](~/docs/standard/base-types/best-practices-strings.md), рекомендуется избегать вызова методов регистра знаков и регистр строки, которые заменяют значения по умолчанию. Вместо этого следует вызывать методы, которые нужны параметры, чтобы указать явно. Чтобы преобразовать символ в верхний регистр с помощью соглашения о регистре текущих региональных параметров, вызовите <see cref="M:System.Char.ToUpper(System.Char,System.Globalization.CultureInfo)" /> перегрузку метода со значением <see cref="P:System.Globalization.CultureInfo.CurrentCulture" /> для его <paramref name="culture" /> параметра.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-1110">
              <para>As explained in [Best Practices for Using Strings](~/docs/standard/base-types/best-practices-strings.md), we recommend that you avoid calling character-casing and string-casing methods that substitute default values. Instead, you should call methods that require parameters to be explicitly specified. To convert a character to uppercase by using the casing conventions of the current culture, call the <see cref="M:System.Char.ToUpper(System.Char,System.Globalization.CultureInfo)" /> method overload with a value of <see cref="P:System.Globalization.CultureInfo.CurrentCulture" /> for its <paramref name="culture" /> parameter.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.String.ToUpper" />
        <altmember cref="M:System.Char.ToLower(System.Char,System.Globalization.CultureInfo)" />
      </Docs>
    </Member>
    <Member MemberName="ToUpper">
      <MemberSignature Language="C#" Value="public static char ToUpper (char c, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char ToUpper(char c, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.ToUpper(System.Char,System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUpper (c As Char, culture As CultureInfo) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char ToUpper(char c, System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="static member ToUpper : char * System.Globalization.CultureInfo -&gt; char" Usage="System.char.ToUpper (c, culture)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="bef81-1111">The Unicode character to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-1111">The Unicode character to convert.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="bef81-1112">An object that supplies culture-specific casing rules.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-1112">An object that supplies culture-specific casing rules.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bef81-1113">Converts the value of a specified Unicode character to its uppercase equivalent using specified culture-specific formatting information.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-1113">Converts the value of a specified Unicode character to its uppercase equivalent using specified culture-specific formatting information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bef81-1114">The uppercase equivalent of <paramref name="c" />, modified according to <paramref name="culture" />, or the unchanged value of <paramref name="c" /> if <paramref name="c" /> is already uppercase, has no uppercase equivalent, or is not alphabetic.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-1114">The uppercase equivalent of <paramref name="c" />, modified according to <paramref name="culture" />, or the unchanged value of <paramref name="c" /> if <paramref name="c" /> is already uppercase, has no uppercase equivalent, or is not alphabetic.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bef81-1115">Используйте <xref:System.String.ToUpper%2A?displayProperty=nameWithType> для преобразования строки в верхний регистр.</span><span class="sxs-lookup"><span data-stu-id="bef81-1115">Use <xref:System.String.ToUpper%2A?displayProperty=nameWithType> to convert a string to uppercase.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bef81-1116">Следующий пример преобразует каждый символ в виде массива в эквивалентный символ верхнего регистра для языка и региональных параметров en US инвариантный язык и региональные параметры и культуре tr-TR.</span><span class="sxs-lookup"><span data-stu-id="bef81-1116">The following example converts each character in an array to its uppercase equivalent for the en-US culture, the invariant culture, and the tr-TR culture.</span></span> <span data-ttu-id="bef81-1117">В этом примере эквивалент каждую строчную букву в верхнем регистре идентичен для всех языков, за исключением одного случая.</span><span class="sxs-lookup"><span data-stu-id="bef81-1117">In this example, the uppercase equivalent of each lowercase letter is identical for all cultures except for one case.</span></span> <span data-ttu-id="bef81-1118">Символ «i» нижнего регистра символов (U + 0069) преобразуется в «I» (U + 0049) в en US и инвариантные, но для «İ» (U + 0130) в культуре tr-TR.</span><span class="sxs-lookup"><span data-stu-id="bef81-1118">The lowercase "i" character (U+0069) converts to "I" (U+0049) in the en-US and invariant cultures, but to "İ" (U+0130) in the tr-TR culture.</span></span>  
  
 [!code-csharp[System.Char.ToUpper#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.char.toupper/cs/toupper5.cs#2)]
 [!code-vb[System.Char.ToUpper#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.char.toupper/vb/toupper5.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="bef81-1119">
            <paramref name="culture" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-1119">
              <paramref name="culture" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="P:System.Globalization.CultureInfo.CurrentCulture" />
        <altmember cref="M:System.String.ToUpper" />
        <altmember cref="M:System.Char.ToLower(System.Char,System.Globalization.CultureInfo)" />
      </Docs>
    </Member>
    <Member MemberName="ToUpperInvariant">
      <MemberSignature Language="C#" Value="public static char ToUpperInvariant (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char ToUpperInvariant(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.ToUpperInvariant(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUpperInvariant (c As Char) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char ToUpperInvariant(char c);" />
      <MemberSignature Language="F#" Value="static member ToUpperInvariant : char -&gt; char" Usage="System.char.ToUpperInvariant c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="bef81-1120">The Unicode character to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-1120">The Unicode character to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bef81-1121">Converts the value of a Unicode character to its uppercase equivalent using the casing rules of the invariant culture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-1121">Converts the value of a Unicode character to its uppercase equivalent using the casing rules of the invariant culture.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bef81-1122">The uppercase equivalent of the <paramref name="c" /> parameter, or the unchanged value of <paramref name="c" />, if <paramref name="c" /> is already uppercase or not alphabetic.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-1122">The uppercase equivalent of the <paramref name="c" /> parameter, or the unchanged value of <paramref name="c" />, if <paramref name="c" /> is already uppercase or not alphabetic.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bef81-1123">Если приложение не зависит от текущего языка и региональных параметров и зависит от регистра символа, изменяемого предсказуемым способом, используйте <xref:System.Char.ToUpperInvariant%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="bef81-1123">If your application is unaffected by the current culture and depends on the case of a character changing in a predictable way, use the <xref:System.Char.ToUpperInvariant%2A> method.</span></span>  <span data-ttu-id="bef81-1124"><xref:System.Char.ToUpperInvariant%2A> Метод эквивалентен `ToUpper(Char, CultureInfo.InvariantCulture)`.</span><span class="sxs-lookup"><span data-stu-id="bef81-1124">The <xref:System.Char.ToUpperInvariant%2A> method is equivalent to `ToUpper(Char, CultureInfo.InvariantCulture)`.</span></span>  
  
 <span data-ttu-id="bef81-1125">Используйте <xref:System.String.ToUpperInvariant%2A?displayProperty=nameWithType> для преобразования строки в верхний регистр.</span><span class="sxs-lookup"><span data-stu-id="bef81-1125">Use <xref:System.String.ToUpperInvariant%2A?displayProperty=nameWithType> to convert a string to uppercase.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.String.ToUpper" />
        <altmember cref="M:System.Char.ToUpper(System.Char,System.Globalization.CultureInfo)" />
        <altmember cref="P:System.Globalization.CultureInfo.InvariantCulture" />
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (string s, out char result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(string s, [out] char&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.TryParse(System.String,System.Char@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As String, ByRef result As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(System::String ^ s, [Runtime::InteropServices::Out] char % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : string *  -&gt; bool" Usage="System.char.TryParse (s, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="result" Type="System.Char&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="bef81-1126">A string that contains a single character, or <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-1126">A string that contains a single character, or <see langword="null" />.</span>
          </span>
        </param>
        <param name="result">
          <span data-ttu-id="bef81-1127">When this method returns, contains a Unicode character equivalent to the sole character in <c>s</c>, if the conversion succeeded, or an undefined value if the conversion failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-1127">When this method returns, contains a Unicode character equivalent to the sole character in <c>s</c>, if the conversion succeeded, or an undefined value if the conversion failed.</span>
          </span>
          <span data-ttu-id="bef81-1128">The conversion fails if the <c>s</c> parameter is <see langword="null" /> or the length of <c>s</c> is not 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-1128">The conversion fails if the <c>s</c> parameter is <see langword="null" /> or the length of <c>s</c> is not 1.</span>
          </span>
          <span data-ttu-id="bef81-1129">This parameter is passed uninitialized.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-1129">This parameter is passed uninitialized.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bef81-1130">Converts the value of the specified string to its equivalent Unicode character.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-1130">Converts the value of the specified string to its equivalent Unicode character.</span>
          </span>
          <span data-ttu-id="bef81-1131">A return code indicates whether the conversion succeeded or failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-1131">A return code indicates whether the conversion succeeded or failed.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bef81-1132">
            <see langword="true" /> if the <paramref name="s" /> parameter was converted successfully; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bef81-1132">
              <see langword="true" /> if the <paramref name="s" /> parameter was converted successfully; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bef81-1133"><xref:System.Char.TryParse%2A> Метод аналогичен <xref:System.Char.Parse%2A> метода, за исключением <xref:System.Char.TryParse%2A> метод не выдает исключение, если преобразование завершается неудачей.</span><span class="sxs-lookup"><span data-stu-id="bef81-1133">The <xref:System.Char.TryParse%2A> method is like the <xref:System.Char.Parse%2A> method, except the <xref:System.Char.TryParse%2A> method does not throw an exception if the conversion fails.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bef81-1134">В следующем примере кода демонстрируются перегрузки <xref:System.Char.TryParse%2A> метод для базовых типов и <xref:System.DateTime.TryParseExact%2A> метод <xref:System.DateTime> базовый тип.</span><span class="sxs-lookup"><span data-stu-id="bef81-1134">The following code example demonstrates overloads of the <xref:System.Char.TryParse%2A> method for several base types, and the <xref:System.DateTime.TryParseExact%2A> method for the <xref:System.DateTime> base type.</span></span>  
  
 [!code-cpp[T.TryParse#1](~/samples/snippets/cpp/VS_Snippets_CLR/T.TryParse/CPP/tp.cpp#1)]
 [!code-csharp[T.TryParse#1](~/samples/snippets/csharp/VS_Snippets_CLR/T.TryParse/CS/tp.cs#1)]
 [!code-vb[T.TryParse#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/T.TryParse/VB/tp.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Char.Parse(System.String)" />
        <altmember cref="M:System.Char.ToString" />
      </Docs>
    </Member>
  </Members>
</Type>