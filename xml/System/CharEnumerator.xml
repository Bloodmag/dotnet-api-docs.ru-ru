<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="CharEnumerator.xml" source-language="en-US" target-language="ru-RU">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac50570f4e2dd53178598e0e6fbf7b325d2cd252378.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0570f4e2dd53178598e0e6fbf7b325d2cd252378</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.CharEnumerator">
          <source>Supports iterating over a <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> object and reading its individual characters.</source>
          <target state="translated">Поддерживает итерацию по объекту <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> и чтение отдельных его символов.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.CharEnumerator">
          <source>This class cannot be inherited.</source>
          <target state="translated">Этот класс не наследуется.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CharEnumerator">
          <source>A <ph id="ph1">&lt;xref:System.CharEnumerator&gt;</ph> provides read-only access to the characters in a referenced <ph id="ph2">&lt;xref:System.String&gt;</ph> object.</source>
          <target state="translated">Объект <ph id="ph1">&lt;xref:System.CharEnumerator&gt;</ph> предоставляет доступ только для чтения к символов в указанный <ph id="ph2">&lt;xref:System.String&gt;</ph> объекта.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CharEnumerator">
          <source>For example, the <ph id="ph1">`foreach`</ph> statement of the Microsoft Visual Basic and C# programming languages, which iterates through the elements of a collection, retrieves a <ph id="ph2">&lt;xref:System.CharEnumerator&gt;</ph> from a <ph id="ph3">&lt;xref:System.String&gt;</ph> object in order to iterate through the characters in that object.</source>
          <target state="translated">Например <ph id="ph1">`foreach`</ph> оператор из языков программирования Microsoft Visual Basic и C#, который выполняется перебор элементов коллекции, извлекает <ph id="ph2">&lt;xref:System.CharEnumerator&gt;</ph> из <ph id="ph3">&lt;xref:System.String&gt;</ph> объект для просмотра всех знаков в том, что объект.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CharEnumerator">
          <source>There is no public constructor for <ph id="ph1">&lt;xref:System.CharEnumerator&gt;</ph>.</source>
          <target state="translated">Нет открытого конструктора для <ph id="ph1">&lt;xref:System.CharEnumerator&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CharEnumerator">
          <source>Instead, call a <ph id="ph1">&lt;xref:System.String&gt;</ph> object's <ph id="ph2">&lt;xref:System.String.GetEnumerator%2A&gt;</ph> method to obtain a <ph id="ph3">&lt;xref:System.CharEnumerator&gt;</ph> that is initialized to reference the string.</source>
          <target state="translated">Вместо этого необходимо вызвать <ph id="ph1">&lt;xref:System.String&gt;</ph> объекта <ph id="ph2">&lt;xref:System.String.GetEnumerator%2A&gt;</ph> метод, чтобы получить <ph id="ph3">&lt;xref:System.CharEnumerator&gt;</ph> , инициализируется для ссылки на строку.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CharEnumerator">
          <source>A <ph id="ph1">&lt;xref:System.CharEnumerator&gt;</ph> maintains an internal index to the characters in the string the <ph id="ph2">&lt;xref:System.CharEnumerator&gt;</ph> references.</source>
          <target state="translated">Объект <ph id="ph1">&lt;xref:System.CharEnumerator&gt;</ph> обслуживает внутренний индекс для символов в строке <ph id="ph2">&lt;xref:System.CharEnumerator&gt;</ph> ссылки.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CharEnumerator">
          <source>The state of the index is invalid when it references a character position logically before the first character or after the last character in the string, and valid when it references a character within the string.</source>
          <target state="translated">Состояние индекса будет недопустимым, если оно ссылается на позицию знака логически перед первым символом или после последнего символа в строке и допустимым, если символ в строке.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CharEnumerator">
          <source>The index is initialized to a position logically before the first character, and is set to a position after the last character when the iteration is complete.</source>
          <target state="translated">Индекс инициализируется на позицию логически перед первым символом и устанавливается на позицию после последнего символа после завершения итерации.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CharEnumerator">
          <source>An exception is thrown if you attempt to access a character while the index is invalid.</source>
          <target state="translated">Исключение при попытке доступа к символу, пока используется недопустимый индекс.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CharEnumerator">
          <source>The <ph id="ph1">&lt;xref:System.CharEnumerator.MoveNext%2A&gt;</ph> method increments the index by one, so the first and subsequent characters are accessed in turn.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.CharEnumerator.MoveNext%2A&gt;</ph> Метод индекс увеличивает на единицу, поэтому первый и последующие символы осуществляется в свою очередь.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CharEnumerator">
          <source>The <ph id="ph1">&lt;xref:System.CharEnumerator.Reset%2A&gt;</ph> method sets the index to a position logically before the first character.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.CharEnumerator.Reset%2A&gt;</ph> Метод задает индекс на позицию логически перед первым знаком.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CharEnumerator">
          <source>The <ph id="ph1">&lt;xref:System.CharEnumerator.Current%2A&gt;</ph> property retrieves the character currently referenced by index.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.CharEnumerator.Current%2A&gt;</ph> Свойство возвращает символ, в настоящее время обращается по индексу.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CharEnumerator">
          <source>The <ph id="ph1">&lt;xref:System.CharEnumerator.Clone%2A&gt;</ph> method creates a copy of the <ph id="ph2">&lt;xref:System.CharEnumerator&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.CharEnumerator.Clone%2A&gt;</ph> Метод создает копию объекта <ph id="ph2">&lt;xref:System.CharEnumerator&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CharEnumerator">
          <source>Several independent instances of <ph id="ph1">&lt;xref:System.CharEnumerator&gt;</ph> across one or more threads can have access to a single instance of <ph id="ph2">&lt;xref:System.String&gt;</ph>.</source>
          <target state="translated">Несколько независимых экземпляров <ph id="ph1">&lt;xref:System.CharEnumerator&gt;</ph> через один или несколько потоков могут получать доступ к одному экземпляру из <ph id="ph2">&lt;xref:System.String&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CharEnumerator">
          <source>This class is implemented to support the <ph id="ph1">&lt;xref:System.Collections.IEnumerator&gt;</ph> interface.</source>
          <target state="translated">Этот класс применяется для поддержки <ph id="ph1">&lt;xref:System.Collections.IEnumerator&gt;</ph> интерфейса.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CharEnumerator">
          <source>For more information regarding the use of an enumerator, see the <ph id="ph1">&lt;xref:System.Collections.IEnumerator&gt;</ph> topic.</source>
          <target state="translated">Дополнительные сведения об использовании перечислителя см. в разделе <ph id="ph1">&lt;xref:System.Collections.IEnumerator&gt;</ph> раздела.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CharEnumerator">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.CharEnumerator&gt;</ph> class to enumerate the individual characters in a string.</source>
          <target state="translated">В следующем примере используется <ph id="ph1">&lt;xref:System.CharEnumerator&gt;</ph> класса для перечисления отдельных символов в строке.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CharEnumerator">
          <source>It instantiates a <ph id="ph1">&lt;xref:System.CharEnumerator&gt;</ph> object by calling the <ph id="ph2">&lt;xref:System.String.GetEnumerator%2A?displayProperty=nameWithType&gt;</ph> method, moves from one character to the next by calling the <ph id="ph3">&lt;xref:System.CharEnumerator.MoveNext%2A&gt;</ph> method, and displays the current character by retrieving the value of the <ph id="ph4">&lt;xref:System.CharEnumerator.Current%2A&gt;</ph> property.</source>
          <target state="translated">Он создает <ph id="ph1">&lt;xref:System.CharEnumerator&gt;</ph> путем вызова метода <ph id="ph2">&lt;xref:System.String.GetEnumerator%2A?displayProperty=nameWithType&gt;</ph> метода переходит от одного символа к следующему путем вызова <ph id="ph3">&lt;xref:System.CharEnumerator.MoveNext%2A&gt;</ph> метода и отображает текущий символ, получая значение <ph id="ph4">&lt;xref:System.CharEnumerator.Current%2A&gt;</ph> свойства.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CharEnumerator">
          <source>Note, however, that the same operation can be performed somewhat more intuitively by using <ph id="ph1">`foreach`</ph> (in C#) or <ph id="ph2">`For Each`</ph> (in Visual Basic), as the following example shows.</source>
          <target state="translated">Обратите внимание, что та же операция может быть более интуитивно выполнена с помощью <ph id="ph1">`foreach`</ph> (в C#) или <ph id="ph2">`For Each`</ph> (в Visual Basic), как приведенный ниже пример показывает.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.CharEnumerator.Clone">
          <source>Creates a copy of the current <ph id="ph1">&lt;see cref="T:System.CharEnumerator" /&gt;</ph> object.</source>
          <target state="translated">Создает копию текущего объекта <ph id="ph1">&lt;see cref="T:System.CharEnumerator" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.CharEnumerator.Clone">
          <source>An <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> that is a copy of the current <ph id="ph2">&lt;see cref="T:System.CharEnumerator" /&gt;</ph> object.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>, являющийся копией текущего объекта <ph id="ph2">&lt;see cref="T:System.CharEnumerator" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CharEnumerator.Clone">
          <source>The return value is a copy of this instance of <ph id="ph1">&lt;xref:System.CharEnumerator&gt;</ph> and its current state.</source>
          <target state="translated">Возвращаемое значение является копией данного экземпляра <ph id="ph1">&lt;xref:System.CharEnumerator&gt;</ph> и его текущего состояния.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CharEnumerator.Clone">
          <source>This is useful for saving your state while iterating through a <ph id="ph1">&lt;xref:System.String&gt;</ph> object.</source>
          <target state="translated">Это полезно для сохранения состояния во время итерации по <ph id="ph1">&lt;xref:System.String&gt;</ph> объекта.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CharEnumerator.Clone">
          <source>For example, suppose your application uses an original instance of <ph id="ph1">&lt;xref:System.CharEnumerator&gt;</ph> to iterate through each character in a <ph id="ph2">&lt;xref:System.String&gt;</ph>.</source>
          <target state="translated">Например, предположим, что приложение использует исходный экземпляр <ph id="ph1">&lt;xref:System.CharEnumerator&gt;</ph> для итерации по каждому символу в <ph id="ph2">&lt;xref:System.String&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CharEnumerator.Clone">
          <source>When some unique character is encountered, your application pauses processing and invokes the <ph id="ph1">&lt;xref:System.CharEnumerator.Clone%2A&gt;</ph> method.</source>
          <target state="translated">При обнаружении уникального знака, приложение приостанавливает обработку и вызывает <ph id="ph1">&lt;xref:System.CharEnumerator.Clone%2A&gt;</ph> метод.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CharEnumerator.Clone">
          <source>In effect, this saves the <ph id="ph1">&lt;xref:System.CharEnumerator&gt;</ph> object's index in the <ph id="ph2">&lt;xref:System.String&gt;</ph>.</source>
          <target state="translated">По сути, это экономит <ph id="ph1">&lt;xref:System.CharEnumerator&gt;</ph> индекс объекта в <ph id="ph2">&lt;xref:System.String&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CharEnumerator.Clone">
          <source>Your application uses the clone to navigate to another part of the <ph id="ph1">`String`</ph> to perform some auxiliary processing.</source>
          <target state="translated">Приложение использует копию, чтобы перейти к другой части <ph id="ph1">`String`</ph> для выполнения вспомогательной обработки.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CharEnumerator.Clone">
          <source>The side-effect of this navigation is the clone loses track of the position where processing stopped.</source>
          <target state="translated">Копия теряет позицию, где остановилась обработка является побочным эффектом данного перемещения.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CharEnumerator.Clone">
          <source>However, when the auxiliary processing is complete, your application discards the clone and uses the original <ph id="ph1">&lt;xref:System.CharEnumerator&gt;</ph> instance to resume working on the <ph id="ph2">&lt;xref:System.String&gt;</ph> where the original processing stopped.</source>
          <target state="translated">Однако после завершения вспомогательной обработки приложение удаляет копию и использует исходный <ph id="ph1">&lt;xref:System.CharEnumerator&gt;</ph> экземпляра для продолжения работы с <ph id="ph2">&lt;xref:System.String&gt;</ph> где остановилась исходная обработка.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CharEnumerator.Clone">
          <source>This method is implemented to support the <ph id="ph1">&lt;xref:System.ICloneable&gt;</ph> interface.</source>
          <target state="translated">Этот метод реализуется для поддержки <ph id="ph1">&lt;xref:System.ICloneable&gt;</ph> интерфейса.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="P:System.CharEnumerator.Current">
          <source>Gets the currently referenced character in the string enumerated by this <ph id="ph1">&lt;see cref="T:System.CharEnumerator" /&gt;</ph> object.</source>
          <target state="translated">Возвращает текущий символ в строке, обходимой данным объектом <ph id="ph1">&lt;see cref="T:System.CharEnumerator" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CharEnumerator.Current">
          <source>The Unicode character currently referenced by this <ph id="ph1">&lt;see cref="T:System.CharEnumerator" /&gt;</ph> object.</source>
          <target state="translated">Возвращает символ Юникод, на которой указывает данный объект <ph id="ph1">&lt;see cref="T:System.CharEnumerator" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CharEnumerator.Current">
          <source>The <ph id="ph1">&lt;xref:System.CharEnumerator&gt;</ph> class maintains an internal index to the enumerated string, and the <ph id="ph2">&lt;xref:System.CharEnumerator.Current%2A&gt;</ph> property returns the character that is currently referenced by the index.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.CharEnumerator&gt;</ph> Класс обслуживает внутренний индекс перечисленной строки и <ph id="ph2">&lt;xref:System.CharEnumerator.Current%2A&gt;</ph> свойство возвращает символ, который в данный момент ссылается индекс.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CharEnumerator.Current">
          <source>This property should be invoked only when the index is valid; otherwise, an exception is thrown.</source>
          <target state="translated">Данное свойство должно вызывается только в том случае, если индекс является допустимым; в противном случае создается исключение.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CharEnumerator.Current">
          <source>The index is always invalid for an empty string ("").</source>
          <target state="translated">Индекс всегда является недопустимым для пустой строки (»»).</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CharEnumerator.Current">
          <source>The index is also invalid after the <ph id="ph1">&lt;xref:System.String.GetEnumerator%2A?displayProperty=nameWithType&gt;</ph> or <ph id="ph2">&lt;xref:System.CharEnumerator.Reset%2A&gt;</ph> method is called.</source>
          <target state="translated">Индекс также является недопустимым после <ph id="ph1">&lt;xref:System.String.GetEnumerator%2A?displayProperty=nameWithType&gt;</ph> или <ph id="ph2">&lt;xref:System.CharEnumerator.Reset%2A&gt;</ph> вызывается метод.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CharEnumerator.Current">
          <source>After either of these methods is called, invoke the <ph id="ph1">&lt;xref:System.CharEnumerator.MoveNext%2A&gt;</ph> method to adjust the index to the first character in the enumerated string.</source>
          <target state="translated">После вызова одного из этих методов вызова неуправляемого кода <ph id="ph1">&lt;xref:System.CharEnumerator.MoveNext%2A&gt;</ph> метод, чтобы настроить индекс первого символа в перечисленной строки.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CharEnumerator.Current">
          <source>The index is valid whenever the <ph id="ph1">&lt;xref:System.CharEnumerator.MoveNext%2A&gt;</ph> method returns <ph id="ph2">`true`</ph>.</source>
          <target state="translated">Индекс является допустимым всякий раз, когда <ph id="ph1">&lt;xref:System.CharEnumerator.MoveNext%2A&gt;</ph> возвращает <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CharEnumerator.Current">
          <source><ph id="ph1">&lt;xref:System.CharEnumerator.Current%2A&gt;</ph> does not move the index, and consecutive calls to <ph id="ph2">&lt;xref:System.CharEnumerator.Current%2A&gt;</ph> return the same character until <ph id="ph3">&lt;xref:System.CharEnumerator.MoveNext%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.CharEnumerator.Reset%2A&gt;</ph>, or <ph id="ph5">&lt;xref:System.String.GetEnumerator%2A?displayProperty=nameWithType&gt;</ph> is called.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.CharEnumerator.Current%2A&gt;</ph> Перемещение индекса и последовательных вызовов не <ph id="ph2">&lt;xref:System.CharEnumerator.Current%2A&gt;</ph> возвращают один и тот же знак до <ph id="ph3">&lt;xref:System.CharEnumerator.MoveNext%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.CharEnumerator.Reset%2A&gt;</ph>, или <ph id="ph5">&lt;xref:System.String.GetEnumerator%2A?displayProperty=nameWithType&gt;</ph> вызывается.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CharEnumerator.Current">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.CharEnumerator&gt;</ph> class to enumerate the individual characters in a string.</source>
          <target state="translated">В следующем примере используется <ph id="ph1">&lt;xref:System.CharEnumerator&gt;</ph> класса для перечисления отдельных символов в строке.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CharEnumerator.Current">
          <source>It instantiates a <ph id="ph1">&lt;xref:System.CharEnumerator&gt;</ph> object by calling the <ph id="ph2">&lt;xref:System.String.GetEnumerator%2A?displayProperty=nameWithType&gt;</ph> method, moves from one character to the next by calling the <ph id="ph3">&lt;xref:System.CharEnumerator.MoveNext%2A&gt;</ph> method, and displays the current character by retrieving the value of the <ph id="ph4">&lt;xref:System.CharEnumerator.Current%2A&gt;</ph> property.</source>
          <target state="translated">Он создает <ph id="ph1">&lt;xref:System.CharEnumerator&gt;</ph> путем вызова метода <ph id="ph2">&lt;xref:System.String.GetEnumerator%2A?displayProperty=nameWithType&gt;</ph> метода переходит от одного символа к следующему путем вызова <ph id="ph3">&lt;xref:System.CharEnumerator.MoveNext%2A&gt;</ph> метода и отображает текущий символ, получая значение <ph id="ph4">&lt;xref:System.CharEnumerator.Current%2A&gt;</ph> свойства.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CharEnumerator.Current">
          <source>Note, however, that the same operation can be performed somewhat more intuitively by using <ph id="ph1">`foreach`</ph> (in C#) or <ph id="ph2">`For Each`</ph> (in Visual Basic), as the following example shows.</source>
          <target state="translated">Обратите внимание, что та же операция может быть более интуитивно выполнена с помощью <ph id="ph1">`foreach`</ph> (в C#) или <ph id="ph2">`For Each`</ph> (в Visual Basic), как приведенный ниже пример показывает.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="P:System.CharEnumerator.Current">
          <source>The index is invalid; that is, it is before the first or after the last character of the enumerated string.</source>
          <target state="translated">Индекс является недопустимым; это означает, что он находится перед первым или после последнего символа обходимой строки.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.CharEnumerator.Dispose">
          <source>Releases all resources used by the current instance of the <ph id="ph1">&lt;see cref="T:System.CharEnumerator" /&gt;</ph> class.</source>
          <target state="translated">Освобождает все ресурсы, используемые текущим экземпляром класса <ph id="ph1">&lt;see cref="T:System.CharEnumerator" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CharEnumerator.Dispose">
          <source>Call <ph id="ph1">&lt;xref:System.CharEnumerator.Dispose%2A&gt;</ph> when you are finished using the <ph id="ph2">&lt;xref:System.CharEnumerator&gt;</ph>.</source>
          <target state="translated">Вызовите метод <ph id="ph1">&lt;xref:System.CharEnumerator.Dispose%2A&gt;</ph> по окончании использования класса <ph id="ph2">&lt;xref:System.CharEnumerator&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CharEnumerator.Dispose">
          <source>The <ph id="ph1">&lt;xref:System.CharEnumerator.Dispose%2A&gt;</ph> method leaves the <ph id="ph2">&lt;xref:System.CharEnumerator&gt;</ph> in an unusable state.</source>
          <target state="translated">Метод <ph id="ph1">&lt;xref:System.CharEnumerator.Dispose%2A&gt;</ph> оставляет класс <ph id="ph2">&lt;xref:System.CharEnumerator&gt;</ph> в непригодном для использования состоянии.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CharEnumerator.Dispose">
          <source>After calling <ph id="ph1">&lt;xref:System.CharEnumerator.Dispose%2A&gt;</ph>, you must release all references to the <ph id="ph2">&lt;xref:System.CharEnumerator&gt;</ph> so the garbage collector can reclaim the memory that the <ph id="ph3">&lt;xref:System.CharEnumerator&gt;</ph> was occupying.</source>
          <target state="translated">После вызова метода <ph id="ph1">&lt;xref:System.CharEnumerator.Dispose%2A&gt;</ph>, необходимо освободить все ссылки на <ph id="ph2">&lt;xref:System.CharEnumerator&gt;</ph> , сборщик мусора мог освободить память, <ph id="ph3">&lt;xref:System.CharEnumerator&gt;</ph> занимаемую.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CharEnumerator.Dispose">
          <source>For more information, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> and <bpt id="p2">[</bpt>Implementing a Dispose Method<ept id="p2">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</source>
          <target state="translated">Дополнительные сведения см. в разделе <bpt id="p1">[</bpt>очистки неуправляемых ресурсов<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> и <bpt id="p2">[</bpt>метода<ept id="p2">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CharEnumerator.Dispose">
          <source>Always call <ph id="ph1">&lt;xref:System.CharEnumerator.Dispose%2A&gt;</ph> before you release your last reference to the <ph id="ph2">&lt;xref:System.CharEnumerator&gt;</ph>.</source>
          <target state="translated">Всегда вызывайте метод <ph id="ph1">&lt;xref:System.CharEnumerator.Dispose%2A&gt;</ph> перед освобождением последней ссылки на класс <ph id="ph2">&lt;xref:System.CharEnumerator&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CharEnumerator.Dispose">
          <source>Otherwise, the resources it is using will not be freed until the garbage collector calls the <ph id="ph1">&lt;xref:System.CharEnumerator&gt;</ph> object's <ph id="ph2">`Finalize`</ph> method.</source>
          <target state="translated">В противном случае используемые им ресурсы не будут освобождены до тех пор, пока сборщик мусора не вызовет для объекта <ph id="ph1">&lt;xref:System.CharEnumerator&gt;</ph> метод <ph id="ph2">`Finalize`</ph>.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.CharEnumerator.MoveNext">
          <source>Increments the internal index of the current <ph id="ph1">&lt;see cref="T:System.CharEnumerator" /&gt;</ph> object to the next character of the enumerated string.</source>
          <target state="translated">Увеличивает внутренний индекс текущего объекта <ph id="ph1">&lt;see cref="T:System.CharEnumerator" /&gt;</ph>, чтобы он указывал на следующий символ перечисляемой строки.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.CharEnumerator.MoveNext">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the index is successfully incremented and within the enumerated string; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Значение <ph id="ph1">&lt;see langword="true" /&gt;</ph> если индекс успешно увеличен и находится в пределах перечисляемой строки; в противном случае — значение <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CharEnumerator.MoveNext">
          <source>The <ph id="ph1">&lt;xref:System.CharEnumerator&gt;</ph> class maintains an internal index to the enumerated string, and the <ph id="ph2">&lt;xref:System.CharEnumerator.MoveNext%2A&gt;</ph> method increments the index by one.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.CharEnumerator&gt;</ph> Класс обслуживает внутренний индекс перечисленной строки и <ph id="ph2">&lt;xref:System.CharEnumerator.MoveNext%2A&gt;</ph> метод индекс увеличивает на единицу.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CharEnumerator.MoveNext">
          <source>Call <ph id="ph1">&lt;xref:System.CharEnumerator.MoveNext%2A&gt;</ph> after calling <ph id="ph2">&lt;xref:System.String.GetEnumerator%2A&gt;</ph> or <ph id="ph3">&lt;xref:System.CharEnumerator.Reset%2A&gt;</ph> to increment the current character position to the first character in the enumerated string.</source>
          <target state="translated">Вызовите <ph id="ph1">&lt;xref:System.CharEnumerator.MoveNext%2A&gt;</ph> после вызова <ph id="ph2">&lt;xref:System.String.GetEnumerator%2A&gt;</ph> или <ph id="ph3">&lt;xref:System.CharEnumerator.Reset%2A&gt;</ph> увеличивается текущее положение символа на первый символ в перечисленной строки.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CharEnumerator.MoveNext">
          <source>Check that the return value is <ph id="ph1">`true`</ph> to determine that the current character position is valid.</source>
          <target state="translated">Убедитесь, что возвращается значение <ph id="ph1">`true`</ph> определить допустимость текущая позиция символа.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CharEnumerator.MoveNext">
          <source>If the index is already beyond the last character of the enumerated string, the index is not changed and <ph id="ph1">`false`</ph> is returned.</source>
          <target state="translated">Если индекс уже после последнего символа обходимой строки, он не изменяется и <ph id="ph1">`false`</ph> возвращается.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CharEnumerator.MoveNext">
          <source>Notice that if the enumerated string is empty (""), the state of the <ph id="ph1">&lt;xref:System.CharEnumerator&gt;</ph> is always invalid.</source>
          <target state="translated">Обратите внимание, что, если перечисленная строка пуста ("»), состояние <ph id="ph1">&lt;xref:System.CharEnumerator&gt;</ph> всегда является недопустимым.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CharEnumerator.MoveNext">
          <source>This is because the internal index for the <ph id="ph1">&lt;xref:System.CharEnumerator&gt;</ph> is initially before the first character of the enumerated string and is therefore invalid.</source>
          <target state="translated">Это обусловлено внутренний индекс <ph id="ph1">&lt;xref:System.CharEnumerator&gt;</ph> изначально находится перед первым символом обходимой строки и поэтому является недопустимым.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CharEnumerator.MoveNext">
          <source><ph id="ph1">&lt;xref:System.CharEnumerator.MoveNext%2A&gt;</ph> logically sets the index after the last (nonexistent) character of the enumerated string which is also invalid.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.CharEnumerator.MoveNext%2A&gt;</ph> логически устанавливает индекс после последнего (несуществующего) знака перечисленной строки, который также является недопустимым.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CharEnumerator.MoveNext">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.CharEnumerator&gt;</ph> class to enumerate the individual characters in a string.</source>
          <target state="translated">В следующем примере используется <ph id="ph1">&lt;xref:System.CharEnumerator&gt;</ph> класса для перечисления отдельных символов в строке.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CharEnumerator.MoveNext">
          <source>It instantiates a <ph id="ph1">&lt;xref:System.CharEnumerator&gt;</ph> object by calling the <ph id="ph2">&lt;xref:System.String.GetEnumerator%2A?displayProperty=nameWithType&gt;</ph> method, moves from one character to the next by calling the <ph id="ph3">&lt;xref:System.CharEnumerator.MoveNext%2A&gt;</ph> method, and displays the current character by retrieving the value of the <ph id="ph4">&lt;xref:System.CharEnumerator.Current%2A&gt;</ph> property.</source>
          <target state="translated">Он создает <ph id="ph1">&lt;xref:System.CharEnumerator&gt;</ph> путем вызова метода <ph id="ph2">&lt;xref:System.String.GetEnumerator%2A?displayProperty=nameWithType&gt;</ph> метода переходит от одного символа к следующему путем вызова <ph id="ph3">&lt;xref:System.CharEnumerator.MoveNext%2A&gt;</ph> метода и отображает текущий символ, получая значение <ph id="ph4">&lt;xref:System.CharEnumerator.Current%2A&gt;</ph> свойства.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CharEnumerator.MoveNext">
          <source>Note, however, that the same operation can be performed somewhat more intuitively by using <ph id="ph1">`foreach`</ph> (in C#) or <ph id="ph2">`For Each`</ph> (in Visual Basic), as the following example shows.</source>
          <target state="translated">Обратите внимание, что та же операция может быть более интуитивно выполнена с помощью <ph id="ph1">`foreach`</ph> (в C#) или <ph id="ph2">`For Each`</ph> (в Visual Basic), как приведенный ниже пример показывает.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.CharEnumerator.Reset">
          <source>Initializes the index to a position logically before the first character of the enumerated string.</source>
          <target state="translated">Инициализирует индекс позицией, логически расположенной перед первым символом обходимой строки.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CharEnumerator.Reset">
          <source>The <ph id="ph1">&lt;xref:System.CharEnumerator&gt;</ph> class maintains an internal index to the enumerated string, and the <ph id="ph2">&lt;xref:System.CharEnumerator.Reset%2A&gt;</ph> method sets the index to the invalid state.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.CharEnumerator&gt;</ph> Класс обслуживает внутренний индекс перечисленной строки и <ph id="ph2">&lt;xref:System.CharEnumerator.Reset%2A&gt;</ph> метод задает индекс в недопустимом состоянии.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="P:System.CharEnumerator.System#Collections#IEnumerator#Current">
          <source>Gets the currently referenced character in the string enumerated by this <ph id="ph1">&lt;see cref="T:System.CharEnumerator" /&gt;</ph> object.</source>
          <target state="translated">Возвращает текущий символ в строке, обходимой данным объектом <ph id="ph1">&lt;see cref="T:System.CharEnumerator" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="P:System.CharEnumerator.System#Collections#IEnumerator#Current">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="P:System.Collections.IEnumerator.Current" /&gt;</ph>.</source>
          <target state="translated">Описание этого члена см. в разделе <ph id="ph1">&lt;see cref="P:System.Collections.IEnumerator.Current" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CharEnumerator.System#Collections#IEnumerator#Current">
          <source>The boxed Unicode character currently referenced by this <ph id="ph1">&lt;see cref="T:System.CharEnumerator" /&gt;</ph> object.</source>
          <target state="translated">Упакованный символ Юникод, на которой указывает данный объект <ph id="ph1">&lt;see cref="T:System.CharEnumerator" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CharEnumerator.System#Collections#IEnumerator#Current">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Этот член представляет собой явную реализацию члена интерфейса.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CharEnumerator.System#Collections#IEnumerator#Current">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.CharEnumerator&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Collections.IEnumerator&gt;</ph> interface.</source>
          <target state="translated">Он может использоваться, только если экземпляр <ph id="ph1">&lt;xref:System.CharEnumerator&gt;</ph> приведен к типу интерфейса <ph id="ph2">&lt;xref:System.Collections.IEnumerator&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="P:System.CharEnumerator.System#Collections#IEnumerator#Current">
          <source>Enumeration has not started.</source>
          <target state="translated">Перечисление не начиналось.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="P:System.CharEnumerator.System#Collections#IEnumerator#Current">
          <source>-or-</source>
          <target state="translated">- или -</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="P:System.CharEnumerator.System#Collections#IEnumerator#Current">
          <source>Enumeration has ended.</source>
          <target state="translated">Обход завершен.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>