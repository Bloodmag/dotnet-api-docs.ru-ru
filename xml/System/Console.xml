<Type Name="Console" FullName="System.Console">
  <TypeSignature Language="C#" Value="public static class Console" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed Console extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Console" />
  <TypeSignature Language="VB.NET" Value="Public Class Console" />
  <TypeSignature Language="C++ CLI" Value="public ref class Console abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Console</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="1900a-101">Предоставляет стандартные потоки для консольных приложений: входной, выходной и поток сообщений об ошибках.</span><span class="sxs-lookup"><span data-stu-id="1900a-101">Represents the standard input, output, and error streams for console applications.</span></span> <span data-ttu-id="1900a-102">Этот класс не наследуется.</span><span class="sxs-lookup"><span data-stu-id="1900a-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1900a-103">Консоль является окном операционной системы, в котором пользователи взаимодействуют с операционной системой или с помощью текстовых консольного приложения путем набора текстового ввода с клавиатуры и чтения текстового вывода с экрана компьютера.</span><span class="sxs-lookup"><span data-stu-id="1900a-103">The console is an operating system window where users interact with the operating system or with a text-based console application by entering text input through the computer keyboard, and by reading text output from the computer terminal.</span></span> <span data-ttu-id="1900a-104">Например в операционной системе Windows консоль называется окно командной строки и принимает команды MS-DOS.</span><span class="sxs-lookup"><span data-stu-id="1900a-104">For example, in the Windows operating system, the console is called the Command Prompt window and accepts MS-DOS commands.</span></span> <span data-ttu-id="1900a-105"><xref:System.Console> Класс обеспечивает базовую поддержку для приложений, чтение знаков из и записи их на консоль.</span><span class="sxs-lookup"><span data-stu-id="1900a-105">The <xref:System.Console> class provides basic support for applications that read characters from, and write characters to, the console.</span></span>  
  
 <span data-ttu-id="1900a-106">Дополнительные сведения о разработке с помощью <xref:System.Console> класса, в следующих разделах:</span><span class="sxs-lookup"><span data-stu-id="1900a-106">For information about developing with the <xref:System.Console> class, see the following sections:</span></span>  
  
-   [<span data-ttu-id="1900a-107">Потоки ввода-вывода консоли</span><span class="sxs-lookup"><span data-stu-id="1900a-107">Console I/O Streams</span></span>](#Streams)  
  
-   [<span data-ttu-id="1900a-108">Буфер экрана и окно консоли</span><span class="sxs-lookup"><span data-stu-id="1900a-108">Screen Buffer and Console Window</span></span>](#Buffer)  
  
-   [<span data-ttu-id="1900a-109">Поддержка Юникода для консоли</span><span class="sxs-lookup"><span data-stu-id="1900a-109">Unicode Support for the Console</span></span>](#Unicode)  
  
-   [<span data-ttu-id="1900a-110">Стандартные операции</span><span class="sxs-lookup"><span data-stu-id="1900a-110">Common Operations</span></span>](#Operations)  
  
-   [<span data-ttu-id="1900a-111">Заметки о .NET core</span><span class="sxs-lookup"><span data-stu-id="1900a-111">.NET Core Notes</span></span>](#Core)  
  
<a name="Streams"></a>   
## <a name="console-io-streams"></a><span data-ttu-id="1900a-112">Потоки ввода-вывода консоли</span><span class="sxs-lookup"><span data-stu-id="1900a-112">Console I/O Streams</span></span>  
 <span data-ttu-id="1900a-113">При запуске консольного приложения, операционная система автоматически связывает три потока ввода-вывода с помощью консоли: стандартный входной поток, в стандартный выходной поток и в стандартный поток вывода ошибок.</span><span class="sxs-lookup"><span data-stu-id="1900a-113">When a console application starts, the operating system automatically associates three I/O streams with the console: standard input stream, standard output stream, and standard error output stream.</span></span> <span data-ttu-id="1900a-114">Приложение может считывать пользовательский ввод из стандартного входного потока; Запишите данные в стандартный выходной поток; и запись данных об ошибках в стандартный поток вывода ошибок.</span><span class="sxs-lookup"><span data-stu-id="1900a-114">Your application can read user input from the standard input stream; write normal data to the standard output stream; and write error data to the standard error output stream.</span></span> <span data-ttu-id="1900a-115">Эти потоки представлены в приложении в качестве значения <xref:System.Console.In%2A?displayProperty=nameWithType>, <xref:System.Console.Out%2A?displayProperty=nameWithType>, и <xref:System.Console.Error%2A?displayProperty=nameWithType> свойства.</span><span class="sxs-lookup"><span data-stu-id="1900a-115">These streams are presented to your application as the values of the <xref:System.Console.In%2A?displayProperty=nameWithType>, <xref:System.Console.Out%2A?displayProperty=nameWithType>, and <xref:System.Console.Error%2A?displayProperty=nameWithType> properties.</span></span>  
  
 <span data-ttu-id="1900a-116">По умолчанию значение <xref:System.Console.In%2A> свойство <xref:System.IO.TextReader?displayProperty=nameWithType> , представляющий клавиатуры и значения <xref:System.Console.Out%2A> и <xref:System.Console.Error%2A> свойства <xref:System.IO.TextWriter?displayProperty=nameWithType> объекты, представляющие окна консоли.</span><span class="sxs-lookup"><span data-stu-id="1900a-116">By default, the value of the <xref:System.Console.In%2A> property is a <xref:System.IO.TextReader?displayProperty=nameWithType> object that represents the keyboard, and the values of the <xref:System.Console.Out%2A> and <xref:System.Console.Error%2A> properties are <xref:System.IO.TextWriter?displayProperty=nameWithType> objects that represent a console window.</span></span> <span data-ttu-id="1900a-117">Тем не менее эти свойства можно задать в потоки, которые не представляют окна консоли или клавиатуры; Например эти свойства можно задать в потоки, которые представляют файлы.</span><span class="sxs-lookup"><span data-stu-id="1900a-117">However, you can set these properties to streams that do not represent the console window or keyboard; for example, you can set these properties to streams that represent files.</span></span> <span data-ttu-id="1900a-118">Чтобы перенаправить стандартный ввод, стандартный вывод или стандартный поток ошибок, вызовите <xref:System.Console.SetIn%2A?displayProperty=nameWithType>, <xref:System.Console.SetOut%2A?displayProperty=nameWithType>, или <xref:System.Console.SetError%2A?displayProperty=nameWithType> метода, соответственно.</span><span class="sxs-lookup"><span data-stu-id="1900a-118">To redirect the standard input, standard output, or standard error stream, call the <xref:System.Console.SetIn%2A?displayProperty=nameWithType>, <xref:System.Console.SetOut%2A?displayProperty=nameWithType>, or <xref:System.Console.SetError%2A?displayProperty=nameWithType> method, respectively.</span></span> <span data-ttu-id="1900a-119">Операции ввода-вывода, которые используют эти потоки синхронизируются, что означает, что несколько потоков чтения или записи данных в потоки.</span><span class="sxs-lookup"><span data-stu-id="1900a-119">I/O operations that use these streams are synchronized, which means that multiple threads can read from, or write to, the streams.</span></span> <span data-ttu-id="1900a-120">Это означает, что методы, которые обычно асинхронно, такие как <xref:System.IO.TextReader.ReadLineAsync%2A?displayProperty=nameWithType>, выполняются синхронно, если объект представляет поток консоли.</span><span class="sxs-lookup"><span data-stu-id="1900a-120">This means that methods that are ordinarily asynchronous, such as <xref:System.IO.TextReader.ReadLineAsync%2A?displayProperty=nameWithType>, execute synchronously if the object represents a console stream.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1900a-121">Не используйте <xref:System.Console> класса для отображения вывода в автоматической установки приложений, таких как сервер приложений.</span><span class="sxs-lookup"><span data-stu-id="1900a-121">Do not use the <xref:System.Console> class to display output in unattended applications, such as server applications.</span></span> <span data-ttu-id="1900a-122">Вызовы методов, например <xref:System.Console.Write%2A?displayProperty=nameWithType> и <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> не оказывают влияния в приложений графического пользовательского интерфейса.</span><span class="sxs-lookup"><span data-stu-id="1900a-122">Calls to methods such as <xref:System.Console.Write%2A?displayProperty=nameWithType> and <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> have no effect in GUI applications.</span></span>  
  
 <span data-ttu-id="1900a-123"><xref:System.Console> члены класса, которые нормально работать при основной поток направляется на консоль может создания исключения, если поток перенаправлен, например, в файл.</span><span class="sxs-lookup"><span data-stu-id="1900a-123"><xref:System.Console> class members that work normally when the underlying stream is directed to a console might throw an exception if the stream is redirected, for example, to a file.</span></span> <span data-ttu-id="1900a-124">В приложениях для перехвата <xref:System.IO.IOException?displayProperty=nameWithType> исключения, если можно перенаправлять стандартный поток.</span><span class="sxs-lookup"><span data-stu-id="1900a-124">Program your application to catch <xref:System.IO.IOException?displayProperty=nameWithType> exceptions if you redirect a standard stream.</span></span> <span data-ttu-id="1900a-125">Можно также использовать <xref:System.Console.IsOutputRedirected%2A>, <xref:System.Console.IsInputRedirected%2A>, и <xref:System.Console.IsErrorRedirected%2A> свойства, чтобы определить, перенаправляется ли перед выполнением операции, которая создает стандартный поток <xref:System.IO.IOException?displayProperty=nameWithType> исключение.</span><span class="sxs-lookup"><span data-stu-id="1900a-125">You can also use the <xref:System.Console.IsOutputRedirected%2A>, <xref:System.Console.IsInputRedirected%2A>, and <xref:System.Console.IsErrorRedirected%2A> properties to determine whether a standard stream is redirected before performing an operation that throws an <xref:System.IO.IOException?displayProperty=nameWithType> exception.</span></span>  
  
 <span data-ttu-id="1900a-126">Иногда бывает удобно для явного вызова членов объектов потока, представленный <xref:System.Console.In%2A>, <xref:System.Console.Out%2A>, и <xref:System.Console.Error%2A> свойства.</span><span class="sxs-lookup"><span data-stu-id="1900a-126">It is sometimes useful to explicitly call the members of the stream objects represented by the <xref:System.Console.In%2A>, <xref:System.Console.Out%2A>, and <xref:System.Console.Error%2A> properties.</span></span> <span data-ttu-id="1900a-127">Например, по умолчанию <xref:System.Console.ReadLine%2A?displayProperty=nameWithType> метод считывает входные данные из стандартного входного потока.</span><span class="sxs-lookup"><span data-stu-id="1900a-127">For example, by default, the <xref:System.Console.ReadLine%2A?displayProperty=nameWithType> method reads input from the standard input stream.</span></span> <span data-ttu-id="1900a-128">Аналогичным образом <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> метод записывает данные в стандартный выходной поток данных следуют строки по умолчанию завершения, который является символом возврата каретки и перевода строки («\r\n»).</span><span class="sxs-lookup"><span data-stu-id="1900a-128">Similarly, the <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> method writes data to the standard output stream, and the data is followed by the default line termination string, which is  a carriage return and line feed ("\r\n").</span></span> <span data-ttu-id="1900a-129">Тем не менее <xref:System.Console> класс не предоставляет соответствующего метода для записи данных в стандартный выходной поток ошибок или свойства для изменения признака конца строки для данных, записанных в поток.</span><span class="sxs-lookup"><span data-stu-id="1900a-129">However, the <xref:System.Console> class does not provide a corresponding method to write data to the standard error output stream, or a property to change the line termination string for data written to that stream.</span></span>  
  
 <span data-ttu-id="1900a-130">Эти проблемы можно устранить, установив <xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType> свойство <xref:System.Console.Out%2A> или <xref:System.Console.Error%2A> свойства другого признака конца строки.</span><span class="sxs-lookup"><span data-stu-id="1900a-130">You can solve this problem by setting the <xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType> property of the <xref:System.Console.Out%2A> or <xref:System.Console.Error%2A> property to another line termination string.</span></span> <span data-ttu-id="1900a-131">Например следующая инструкция C# устанавливает завершения строки, в стандартный выходной поток ошибок для двух символы возврата каретки и перевода последовательности строки:</span><span class="sxs-lookup"><span data-stu-id="1900a-131">For example, the following C# statement sets the line termination string for the standard error output stream to two carriage return and line feed sequences:</span></span>  
  
 `Console.Error.NewLine = "\r\n\r\n";`  
  
 <span data-ttu-id="1900a-132">Затем можно явным образом вызвать <xref:System.IO.TextWriter.WriteLine%2A> метод объекта error выходной поток, как в следующей инструкции C#:</span><span class="sxs-lookup"><span data-stu-id="1900a-132">You can then explicitly call the <xref:System.IO.TextWriter.WriteLine%2A> method of the error output stream object, as in the following C# statement:</span></span>  
  
 `Console.Error.WriteLine();`  
  
<a name="Buffer"></a>   
## <a name="screen-buffer-and-console-window"></a><span data-ttu-id="1900a-133">Буфер экрана и окно консоли</span><span class="sxs-lookup"><span data-stu-id="1900a-133">Screen Buffer and Console Window</span></span>  
 <span data-ttu-id="1900a-134">Два тесно связанных функций консоли являются буфер экрана и окно консоли.</span><span class="sxs-lookup"><span data-stu-id="1900a-134">Two closely related features of the console are the screen buffer and the console window.</span></span> <span data-ttu-id="1900a-135">Текст фактически считывается или записывается в потоки, принадлежащие консоли, но могут быть чтение и запись данных в область, принадлежащие консоли, называемой буфера экрана.</span><span class="sxs-lookup"><span data-stu-id="1900a-135">Text is actually read from or written to streams owned by the console, but appear to be read from or written to an area owned by the console called the screen buffer.</span></span> <span data-ttu-id="1900a-136">Буфер экрана является атрибутом консоли и организованы в виде прямоугольной сетки строк и столбцов, где каждый пересечения сетки или символьной ячейке содержит один символ.</span><span class="sxs-lookup"><span data-stu-id="1900a-136">The screen buffer is an attribute of the console, and is organized as a rectangular grid of rows and columns where each grid intersection, or character cell, can contain a character.</span></span> <span data-ttu-id="1900a-137">Каждый символ имеет собственный цвет, а каждая ячейка символ имеет собственный цвет фона.</span><span class="sxs-lookup"><span data-stu-id="1900a-137">Each character has its own foreground color, and each character cell has its own background color.</span></span>  
  
 <span data-ttu-id="1900a-138">Буфера экрана просматривается через прямоугольную область, называемую в окне консоли.</span><span class="sxs-lookup"><span data-stu-id="1900a-138">The screen buffer is viewed through a rectangular region called the console window.</span></span> <span data-ttu-id="1900a-139">В окне консоли является еще одним атрибутом консоли; Это не сама консоль, которая является окном операционной системы.</span><span class="sxs-lookup"><span data-stu-id="1900a-139">The console window is another attribute of the console; it is not the console itself, which is an operating system window.</span></span> <span data-ttu-id="1900a-140">В окне консоли организованы в строки и столбцы, меньше или равен размеру буфера экрана и могут выполняться в виде буфера экрана.</span><span class="sxs-lookup"><span data-stu-id="1900a-140">The console window is arranged in rows and columns, is less than or equal to the size of the screen buffer, and can be moved to view different areas of the underlying screen buffer.</span></span> <span data-ttu-id="1900a-141">Если буфер экрана больше, чем в окне консоли, автоматически отображаются полосы прокрутки, в окне консоли может быть перемещен за буферной области экрана.</span><span class="sxs-lookup"><span data-stu-id="1900a-141">If the screen buffer is larger than the console window, the console automatically displays scroll bars so the console window can be repositioned over the screen buffer area.</span></span>  
  
 <span data-ttu-id="1900a-142">Курсор указывает позицию буфера экрана, где в настоящее время чтения или записи текста.</span><span class="sxs-lookup"><span data-stu-id="1900a-142">A cursor indicates the screen buffer position where text is currently read or written.</span></span> <span data-ttu-id="1900a-143">Курсор можно скрывать или делать видимыми, а его высота можно изменить.</span><span class="sxs-lookup"><span data-stu-id="1900a-143">The cursor can be hidden or made visible, and its height can be changed.</span></span> <span data-ttu-id="1900a-144">Если курсор видим, положение окна консоли перемещается автоматически, чтобы он всегда в представлении.</span><span class="sxs-lookup"><span data-stu-id="1900a-144">If the cursor is visible, the console window position is moved automatically so the cursor is always in view.</span></span>  
  
 <span data-ttu-id="1900a-145">Точку отсчета для координаты ячейки символов в буфере экрана является верхний левый угол и положение курсора и окна консоли измеряется относительно этого начала координат.</span><span class="sxs-lookup"><span data-stu-id="1900a-145">The origin for character cell coordinates in the screen buffer is the upper left corner, and the positions of the cursor and the console window are measured relative to that origin.</span></span> <span data-ttu-id="1900a-146">Отсчитываемый от нуля индексов используйте для указания позиции; Таким образом можно определить самая верхняя строка как строки и крайний слева столбец как столбец 0.</span><span class="sxs-lookup"><span data-stu-id="1900a-146">Use zero-based indexes to specify positions; that is, specify the topmost row as row 0, and the leftmost column as column 0.</span></span> <span data-ttu-id="1900a-147">Максимальное значение для индексы строки и столбца — <xref:System.Int16.MaxValue?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="1900a-147">The maximum value for the row and column indexes is <xref:System.Int16.MaxValue?displayProperty=nameWithType>.</span></span>  
  
<a name="Unicode"></a>   
## <a name="unicode-support-for-the-console"></a><span data-ttu-id="1900a-148">Поддержка Юникода для консоли</span><span class="sxs-lookup"><span data-stu-id="1900a-148">Unicode Support for the Console</span></span>  
 <span data-ttu-id="1900a-149">В общем случае консоль считывает входные данные и записывает выходные данные с помощью текущей кодовой странице консоли, который определяет язык системы по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="1900a-149">In general, the console reads input and writes output by using the current console code page, which the system locale defines by default.</span></span> <span data-ttu-id="1900a-150">Кодовая страница может обрабатывать только подмножество доступных символов Юникода, поэтому при попытке отображения символов, которые не сопоставлены с конкретной кодовой страницы, консоль не будет возможность отобразить все символы или неточно представлять.</span><span class="sxs-lookup"><span data-stu-id="1900a-150">A code page can handle only a subset of available Unicode characters, so if you try to display characters that are not mapped by a particular code page, the console won't be able to display all characters or represent them accurately.</span></span> <span data-ttu-id="1900a-151">Приведенный ниже пример иллюстрирует данную проблему.</span><span class="sxs-lookup"><span data-stu-id="1900a-151">The following example illustrates this problem.</span></span> <span data-ttu-id="1900a-152">Он пытается отображать символы кириллицы алфавита от U + 0410 U + 044F на консоль.</span><span class="sxs-lookup"><span data-stu-id="1900a-152">It tries to display the characters of the Cyrillic alphabet from U+0410 to U+044F to the console.</span></span> <span data-ttu-id="1900a-153">При запуске примера в системе, которая использует консоль кодовую страницу 437 каждый символ заменяется знак вопроса (?), так как символы в кодовой странице 437 не сопоставляются символы кириллицы.</span><span class="sxs-lookup"><span data-stu-id="1900a-153">If you run the example on a system that uses console code page 437, each character is replaced by a question mark (?), because Cyrillic characters do not map to the characters in code page 437.</span></span>  
  
 [!code-csharp[System.Console.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.console.class/cs/unicode1.cs#1)]
 [!code-vb[System.Console.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.console.class/vb/unicode1.vb#1)]  
  
 <span data-ttu-id="1900a-154">Помимо поддержки кодовых страниц, <xref:System.Console> с кодировкой UTF-8 поддерживает класс <xref:System.Text.UTF8Encoding> класса.</span><span class="sxs-lookup"><span data-stu-id="1900a-154">In addition to supporting code pages, the <xref:System.Console> class supports UTF-8 encoding with the <xref:System.Text.UTF8Encoding> class.</span></span> <span data-ttu-id="1900a-155">Начиная с .NET Framework 4.5 <xref:System.Console> класс также поддерживает с кодировкой UTF-16 <xref:System.Text.UnicodeEncoding> класса.</span><span class="sxs-lookup"><span data-stu-id="1900a-155">Beginning with the .NET Framework 4.5, the <xref:System.Console> class also supports UTF-16 encoding with the <xref:System.Text.UnicodeEncoding> class.</span></span> <span data-ttu-id="1900a-156">Для отображения символов Юникода в консоль.</span><span class="sxs-lookup"><span data-stu-id="1900a-156">To display Unicode characters to the console.</span></span> <span data-ttu-id="1900a-157">задать <xref:System.Console.OutputEncoding%2A> значение <xref:System.Text.UTF8Encoding> или <xref:System.Text.UnicodeEncoding>.</span><span class="sxs-lookup"><span data-stu-id="1900a-157">you set the <xref:System.Console.OutputEncoding%2A> property to either <xref:System.Text.UTF8Encoding> or  <xref:System.Text.UnicodeEncoding>.</span></span>  
  
 <span data-ttu-id="1900a-158">Поддержка символов Юникода требует кодировщик распознавать определенный символ Юникода, а также требует шрифта с глифы, необходимые для подготовки к просмотру этим символом.</span><span class="sxs-lookup"><span data-stu-id="1900a-158">Support for Unicode characters requires the encoder to recognize a particular Unicode character, and also requires a font that has the glyphs needed to render that character.</span></span> <span data-ttu-id="1900a-159">Чтобы успешно отобразить символов Юникода в консоль, шрифта консоли должно быть присвоено не растровых или как Consolas в качестве используемого или Lucida Console шрифтом TrueType.</span><span class="sxs-lookup"><span data-stu-id="1900a-159">To successfully display Unicode characters to the console, the console font must be set to a non-raster or TrueType font such as Consolas or Lucida Console.</span></span> <span data-ttu-id="1900a-160">В следующем примере показано, как можно программно изменить шрифт из растровый шрифт для Lucida Console.</span><span class="sxs-lookup"><span data-stu-id="1900a-160">The following example shows how you can programmatically change the font from a raster font to Lucida Console.</span></span>  
  
 [!code-csharp[System.Console.Class.Unsafe#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.console.class.unsafe/cs/setfont1.cs#3)]
 [!code-vb[System.Console.Class.Unsafe#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.console.class.unsafe/vb/setfont1.vb#3)]  
  
 <span data-ttu-id="1900a-161">Тем не менее шрифты TrueType можно отобразить только подмножество глифов.</span><span class="sxs-lookup"><span data-stu-id="1900a-161">However, TrueType fonts can display only a subset of glyphs.</span></span> <span data-ttu-id="1900a-162">Например шрифт Lucida Console отображает только 643 из примерно 64 000 доступны символы от U + 0021 до U + FB02.</span><span class="sxs-lookup"><span data-stu-id="1900a-162">For example, the Lucida Console font displays only 643 of the approximately 64,000 available characters from U+0021 to U+FB02.</span></span> <span data-ttu-id="1900a-163">Чтобы увидеть, что символы определенного шрифта поддерживает, откройте **шрифты** панели управления выберите **поиска символа** и выберите шрифт, чьи кодировки, вы хотите подробно ** Шрифт** список **символов** окна.</span><span class="sxs-lookup"><span data-stu-id="1900a-163">To see which characters a particular font supports, open the **Fonts** applet in Control Panel, choose the **Find a character** option, and choose the font whose character set you'd like to examine in the **Font** list of the **Character Map** window.</span></span>  
  
 <span data-ttu-id="1900a-164">Windows использует связь шрифтов для отображения глифов, которые недоступны в определенном шрифте.</span><span class="sxs-lookup"><span data-stu-id="1900a-164">Windows uses font linking to display glyphs that are not available in a particular font.</span></span> <span data-ttu-id="1900a-165">Сведения о связь, чтобы отобразить дополнительные наборы знаков шрифтов, в разделе [Глобализация шаг за шагом: шрифты](http://go.microsoft.com/fwlink/?LinkId=229111).</span><span class="sxs-lookup"><span data-stu-id="1900a-165">For information about font linking to display additional character sets, see [Globalization Step-by-Step: Fonts](http://go.microsoft.com/fwlink/?LinkId=229111).</span></span> <span data-ttu-id="1900a-166">В подразделе реестра HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows NT\CurrentVersion\FontLink\SystemLink определяются связанных шрифтов.</span><span class="sxs-lookup"><span data-stu-id="1900a-166">Linked fonts are defined in the HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows NT\CurrentVersion\FontLink\SystemLink subkey of the registry.</span></span> <span data-ttu-id="1900a-167">Каждый элемент, связанный с этого подраздела соответствует имени базового шрифта и его значение — массив строк, определяющий файлы шрифтов и шрифты, которые связаны с базового шрифта.</span><span class="sxs-lookup"><span data-stu-id="1900a-167">Each entry associated with this subkey corresponds to the name of a base font, and its value is a string array that defines the font files and the fonts that are linked to the base font.</span></span> <span data-ttu-id="1900a-168">Каждый элемент массива определяет связанный шрифта и принимает форму *файл шрифт*,*имя шрифта*.</span><span class="sxs-lookup"><span data-stu-id="1900a-168">Each member of the array defines a linked font and takes the form *font-file-name*,*font-name*.</span></span> <span data-ttu-id="1900a-169">В следующем примере показано, как программным образом можно определить связанный шрифта SimSun найден в файле шрифта simsun.ttc, отображающий упрощенный Хан символов с именем.</span><span class="sxs-lookup"><span data-stu-id="1900a-169">The following example illustrates how you can programmatically define a linked font named SimSun found in a font file named simsun.ttc that displays Simplified Han characters.</span></span>  
  
 [!code-csharp[System.Console.Class#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.console.class/cs/fontlink1.cs#2)]
 [!code-vb[System.Console.Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.console.class/vb/fontlink1.vb#2)]  
  
 <span data-ttu-id="1900a-170">Поддержка Юникода для консоли имеет следующие ограничения:</span><span class="sxs-lookup"><span data-stu-id="1900a-170">Unicode support for the console has the following limitations:</span></span>  
  
-   <span data-ttu-id="1900a-171">Кодировка UTF-32, не поддерживается.</span><span class="sxs-lookup"><span data-stu-id="1900a-171">UTF-32 encoding is not supported.</span></span> <span data-ttu-id="1900a-172">Поддерживаются только Юникод, кодировки UTF-8 и UTF-16, представляются <xref:System.Text.UTF8Encoding> и <xref:System.Text.UnicodeEncoding> классов, соответственно.</span><span class="sxs-lookup"><span data-stu-id="1900a-172">The only supported Unicode encodings are UTF-8 and UTF-16, which are represented by the <xref:System.Text.UTF8Encoding> and <xref:System.Text.UnicodeEncoding> classes, respectively.</span></span>  
  
-   <span data-ttu-id="1900a-173">Двунаправленный вывода не поддерживается.</span><span class="sxs-lookup"><span data-stu-id="1900a-173">Bidirectional output is not supported.</span></span>  
  
-   <span data-ttu-id="1900a-174">Отображение символов вне основное многоязычное поле (т. е суррогатных пар) не поддерживается, даже если они определены в файле связанных шрифтов.</span><span class="sxs-lookup"><span data-stu-id="1900a-174">Display of characters outside the Basic Multilingual Plane (that is, of surrogate pairs) is not supported, even if they are defined in a linked font file.</span></span>  
  
-   <span data-ttu-id="1900a-175">Отображение символов в сложных сценариях не поддерживается.</span><span class="sxs-lookup"><span data-stu-id="1900a-175">Display of characters in complex scripts is not supported.</span></span>  
  
-   <span data-ttu-id="1900a-176">Объединение последовательностей символов (то есть символы, состоящие из базового символа и одного или более несамостоятельных знаков) отображаются в виде отдельных символов.</span><span class="sxs-lookup"><span data-stu-id="1900a-176">Combining character sequences (that is, characters that consist of a base character and one or more combining characters) are displayed as separate characters.</span></span> <span data-ttu-id="1900a-177">Чтобы обойти это ограничение, вы можете нормализовать строка, отображаемая, вызвав <xref:System.String.Normalize%2A?displayProperty=nameWithType> метод перед отправкой вывод на консоль.</span><span class="sxs-lookup"><span data-stu-id="1900a-177">To work around this limitation, you can normalize the string to be displayed by calling the <xref:System.String.Normalize%2A?displayProperty=nameWithType> method before sending output to the console.</span></span> <span data-ttu-id="1900a-178">В следующем примере строка, содержащая символ объединения последовательности 0061 U + U + 0308 выводится на консоль, как два символа, прежде чем выходную строку нормализован и как один символ после <xref:System.String.Normalize%2A?displayProperty=nameWithType> вызывается метод.</span><span class="sxs-lookup"><span data-stu-id="1900a-178">In the following example, a string that contains the combining character sequence U+0061 U+0308 is displayed to the console as two characters before the output string is normalized, and as a single character after the <xref:System.String.Normalize%2A?displayProperty=nameWithType> method is called.</span></span>  
  
     [!code-csharp[System.Console.Class#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.console.class/cs/normalize1.cs#5)]
     [!code-vb[System.Console.Class#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.console.class/vb/normalize1.vb#5)]  
  
     <span data-ttu-id="1900a-179">Обратите внимание, что нормализации хорошим решением только в том случае, если последовательность символов в стандарте для составными форму, которая соответствует конкретным combining содержит символ Юникода.</span><span class="sxs-lookup"><span data-stu-id="1900a-179">Note that normalization is a viable solution only if the Unicode standard for the character includes a pre-composed form that corresponds to a particular combining character sequence.</span></span>  
  
-   <span data-ttu-id="1900a-180">Если шрифт предоставляет глиф кодовой точки в частной области, будет отображаться Этот глиф.</span><span class="sxs-lookup"><span data-stu-id="1900a-180">If a font provides a glyph for a code point in the private use area, that glyph will be displayed.</span></span> <span data-ttu-id="1900a-181">Тем не менее поскольку символы в поле частным зависят от приложения, это может оказаться ожидаемый глифа.</span><span class="sxs-lookup"><span data-stu-id="1900a-181">However, because characters in the private use area are application-specific, this may not be the expected glyph.</span></span>  
  
 <span data-ttu-id="1900a-182">Следующий пример отображает диапазон знаков Юникода, в консоли.</span><span class="sxs-lookup"><span data-stu-id="1900a-182">The following example displays a range of Unicode characters to the console.</span></span> <span data-ttu-id="1900a-183">Пример принимает три параметра командной строки: начало диапазона для отображения конца диапазона для отображения и следует ли применять кодирование текущей консоли (`false`) или кодировку UTF-16 (`true`).</span><span class="sxs-lookup"><span data-stu-id="1900a-183">The example accepts three command-line parameters: the start of the range to display, the end of the range to display, and whether to use the current console encoding (`false`) or UTF-16 encoding (`true`).</span></span> <span data-ttu-id="1900a-184">Предполагается, что консоль использует является шрифтом TrueType.</span><span class="sxs-lookup"><span data-stu-id="1900a-184">It assumes that the console is using a TrueType font.</span></span>  
  
 [!code-csharp[System.Console.Class#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.console.class/cs/example3.cs#4)]
 [!code-vb[System.Console.Class#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.console.class/vb/example3.vb#4)]  
  
<a name="Operations"></a>   
## <a name="common-operations"></a><span data-ttu-id="1900a-185">Стандартные операции</span><span class="sxs-lookup"><span data-stu-id="1900a-185">Common Operations</span></span>  
 <span data-ttu-id="1900a-186"><xref:System.Console> Класс содержит следующие методы для записи выходных данных консоли и чтения ввод данных на консоли:</span><span class="sxs-lookup"><span data-stu-id="1900a-186">The <xref:System.Console> class contains the following methods for reading console input and writing console output:</span></span>  
  
-   <span data-ttu-id="1900a-187">Перегруженные версии <xref:System.Console.ReadKey%2A> метод считывать отдельному символу.</span><span class="sxs-lookup"><span data-stu-id="1900a-187">The overloads of the <xref:System.Console.ReadKey%2A> method read an individual character.</span></span>  
  
-   <span data-ttu-id="1900a-188"><xref:System.Console.ReadLine%2A> Метод считывает строку входных данных.</span><span class="sxs-lookup"><span data-stu-id="1900a-188">The <xref:System.Console.ReadLine%2A> method reads an entire line of input.</span></span>  
  
-   <span data-ttu-id="1900a-189"><xref:System.Console.Write%2A> Перегрузки метода преобразования экземпляра типа значения, массив символов или набор объектов в форматированном или неформатированном виде строку и затем написать эту строку на консоль.</span><span class="sxs-lookup"><span data-stu-id="1900a-189">The <xref:System.Console.Write%2A> method overloads convert an instance of a value type, an array of characters, or a set of objects to a formatted or unformatted string, and then write that string to the console.</span></span>  
  
-   <span data-ttu-id="1900a-190">Набор параллельного <xref:System.Console.WriteLine%2A> выходные данные, то строка как перегрузки метода <xref:System.Console.Write%2A> перегрузки метода, но также добавить признака конца строки.</span><span class="sxs-lookup"><span data-stu-id="1900a-190">A parallel set of <xref:System.Console.WriteLine%2A> method overloads output the same string as the <xref:System.Console.Write%2A> overloads but also add a line termination string.</span></span>  
  
 <span data-ttu-id="1900a-191"><xref:System.Console> Класс также содержит методы и свойства для выполнения следующих операций:</span><span class="sxs-lookup"><span data-stu-id="1900a-191">The <xref:System.Console> class also contains methods and properties to perform the following operations:</span></span>  
  
-   <span data-ttu-id="1900a-192">Возвращает или задает размер буфера экрана.</span><span class="sxs-lookup"><span data-stu-id="1900a-192">Get or set the size of the screen buffer.</span></span> <span data-ttu-id="1900a-193"><xref:System.Console.BufferHeight%2A> И <xref:System.Console.BufferWidth%2A> свойства позволяют получить или задать буфера высоты и ширины, соответственно и <xref:System.Console.SetBufferSize%2A> позволяет задать размер буфера в одном вызове метода.</span><span class="sxs-lookup"><span data-stu-id="1900a-193">The <xref:System.Console.BufferHeight%2A> and <xref:System.Console.BufferWidth%2A> properties let you get or set the buffer height and width, respectively, and the <xref:System.Console.SetBufferSize%2A> method lets you set the buffer size in a single method call.</span></span>  
  
-   <span data-ttu-id="1900a-194">Возвращает или задает размер окна консоли.</span><span class="sxs-lookup"><span data-stu-id="1900a-194">Get or set the size of the console window.</span></span> <span data-ttu-id="1900a-195"><xref:System.Console.WindowHeight%2A> И <xref:System.Console.WindowWidth%2A> свойства позволяют получить или задать ширину и высоту окна соответственно и <xref:System.Console.SetWindowSize%2A> метод позволяет задать минимальный размер окна в одном вызове метода.</span><span class="sxs-lookup"><span data-stu-id="1900a-195">The <xref:System.Console.WindowHeight%2A> and <xref:System.Console.WindowWidth%2A> properties let you get or set the window height and width, respectively, and the <xref:System.Console.SetWindowSize%2A> method lets you set the window size in a single method call.</span></span>  
  
-   <span data-ttu-id="1900a-196">Возвращает или задает размер курсора.</span><span class="sxs-lookup"><span data-stu-id="1900a-196">Get or set the size of the cursor.</span></span> <span data-ttu-id="1900a-197"><xref:System.Console.CursorSize%2A> Указывает высоту курсора в символьной ячейке.</span><span class="sxs-lookup"><span data-stu-id="1900a-197">The <xref:System.Console.CursorSize%2A> property specifies the height of the cursor in a character cell.</span></span>  
  
-   <span data-ttu-id="1900a-198">Возвращает или задает позицию окна консоли относительно буфера экрана.</span><span class="sxs-lookup"><span data-stu-id="1900a-198">Get or set the position of the console window relative to the screen buffer.</span></span> <span data-ttu-id="1900a-199"><xref:System.Console.WindowTop%2A> И <xref:System.Console.WindowLeft%2A> свойства позволяют получить или задать верхняя строка и крайний слева столбец буфера экрана, который отображается в окне консоли, и <xref:System.Console.SetWindowPosition%2A> метод позволяет задавать эти значения в одном вызове метода.</span><span class="sxs-lookup"><span data-stu-id="1900a-199">The <xref:System.Console.WindowTop%2A> and <xref:System.Console.WindowLeft%2A> properties let you get or set the top row and leftmost column of the screen buffer that appears in the console window, and the <xref:System.Console.SetWindowPosition%2A> method lets you set these values in a single method call.</span></span>  
  
-   <span data-ttu-id="1900a-200">Возвращает или задает положение курсора путем получения или установки <xref:System.Console.CursorTop%2A> и <xref:System.Console.CursorLeft%2A> свойства или набора позицию курсора путем вызова <xref:System.Console.SetCursorPosition%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="1900a-200">Get or set the position of the cursor by getting or setting the <xref:System.Console.CursorTop%2A> and <xref:System.Console.CursorLeft%2A> properties, or set the position of the cursor by calling the <xref:System.Console.SetCursorPosition%2A> method.</span></span>  
  
-   <span data-ttu-id="1900a-201">Переместить или удалить данные в буфере экрана путем вызова <xref:System.Console.MoveBufferArea%2A> или <xref:System.Console.Clear%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="1900a-201">Move or clear data in the screen buffer by calling the <xref:System.Console.MoveBufferArea%2A> or <xref:System.Console.Clear%2A> method.</span></span>  
  
-   <span data-ttu-id="1900a-202">Получить или задать цвета фона и текста с помощью <xref:System.Console.ForegroundColor%2A> и <xref:System.Console.BackgroundColor%2A> свойства, или восстановить их по умолчанию цвета фона и переднего плана путем вызова <xref:System.Console.ResetColor%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="1900a-202">Get or set the foreground and background colors by using the <xref:System.Console.ForegroundColor%2A> and <xref:System.Console.BackgroundColor%2A> properties, or reset the background and foreground to their default colors by calling the <xref:System.Console.ResetColor%2A> method.</span></span>  
  
-   <span data-ttu-id="1900a-203">Воспроизвести звуковой сигнал через динамик консоли вызывая <xref:System.Console.Beep%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="1900a-203">Play the sound of a beep through the console speaker by calling the <xref:System.Console.Beep%2A> method.</span></span>  
  
<a name="Core"></a>   
## <a name="includenetcoreincludesnet-core-mdmd-notes"></a>[!INCLUDE[net_core](~/includes/net-core-md.md)]<span data-ttu-id="1900a-204"> Примечания</span><span class="sxs-lookup"><span data-stu-id="1900a-204"> Notes</span></span>  
 <span data-ttu-id="1900a-205">В платформе .NET Framework, на рабочем столе <xref:System.Console> класс использует кодировку, возвращенных `GetConsoleCP` и `GetConsoleOutputCP`, который обычно является кодовой страницы кодировки.</span><span class="sxs-lookup"><span data-stu-id="1900a-205">In the .NET Framework on the desktop, the <xref:System.Console> class uses the encoding returned by `GetConsoleCP` and `GetConsoleOutputCP`, which typically is a code page encoding.</span></span> <span data-ttu-id="1900a-206">Например, в системах с языком и региональными параметрами является английский (США), кодовую страницу 437 приведен кодировку, используемую по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="1900a-206">For example code, on systems whose culture is English (United States), code page 437 is the encoding that is used by default.</span></span> <span data-ttu-id="1900a-207">Тем не менее [!INCLUDE[net_core](~/includes/net-core-md.md)] может сделать доступными только ограниченный набор кодировок.</span><span class="sxs-lookup"><span data-stu-id="1900a-207">However, [!INCLUDE[net_core](~/includes/net-core-md.md)] may make only a limited subset of these encodings available.</span></span> <span data-ttu-id="1900a-208">Если это так, <xref:System.Text.Encoding.UTF8%2A?displayProperty=nameWithType> используется в качестве кодировки по умолчанию для консоли.</span><span class="sxs-lookup"><span data-stu-id="1900a-208">Where this is the case, <xref:System.Text.Encoding.UTF8%2A?displayProperty=nameWithType> is used as the default encoding for the console.</span></span>  
  
 <span data-ttu-id="1900a-209">Если приложение зависит от конкретного кода кодировок страниц, вы по-прежнему их можно сделать доступными, выполнив указанные ниже *перед* вызова любых <xref:System.Console> методов:</span><span class="sxs-lookup"><span data-stu-id="1900a-209">If your app depends on specific code page encodings, you can still make them available by doing the following *before* you call any <xref:System.Console> methods:</span></span>  
  
1.  <span data-ttu-id="1900a-210">Добавьте ссылку на сборку System.Text.Encoding.CodePages.dll в проект.</span><span class="sxs-lookup"><span data-stu-id="1900a-210">Add a reference to the System.Text.Encoding.CodePages.dll assembly to your project.</span></span>  
  
2.  <span data-ttu-id="1900a-211">Получить <xref:System.Text.EncodingProvider> объекта из <xref:System.Text.CodePagesEncodingProvider.Instance%2A?displayProperty=nameWithType> свойство.</span><span class="sxs-lookup"><span data-stu-id="1900a-211">Retrieve the <xref:System.Text.EncodingProvider> object from the <xref:System.Text.CodePagesEncodingProvider.Instance%2A?displayProperty=nameWithType> property.</span></span>  
  
3.  <span data-ttu-id="1900a-212">Передайте <xref:System.Text.EncodingProvider> объект <xref:System.Text.Encoding.RegisterProvider%2A?displayProperty=nameWithType> метод для установки дополнительных кодировок, поддерживаемых поставщиком кодировки доступен.</span><span class="sxs-lookup"><span data-stu-id="1900a-212">Pass the <xref:System.Text.EncodingProvider> object to the <xref:System.Text.Encoding.RegisterProvider%2A?displayProperty=nameWithType> method to make the additional encodings supported by the encoding provider available.</span></span>  
  
 <span data-ttu-id="1900a-213"><xref:System.Console> Класса будет автоматически использовать кодировку системы по умолчанию вместо UTF-8, при условии, что вы зарегистрировали кодировки поставщика перед вызовом любого <xref:System.Console> методов вывода.</span><span class="sxs-lookup"><span data-stu-id="1900a-213">The <xref:System.Console> class will then automatically use the default system encoding rather than UTF8, provided that you have registered the encoding provider before calling any <xref:System.Console> output methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1900a-214">Следующий пример демонстрирует считывания данных и записи данных в стандартных входных и выходных потоков.</span><span class="sxs-lookup"><span data-stu-id="1900a-214">The following example demonstrates how to read data from, and write data to, the standard input and output streams.</span></span> <span data-ttu-id="1900a-215">Обратите внимание, что эти потоки можно перенаправить с помощью <xref:System.Console.SetIn%2A> и <xref:System.Console.SetOut%2A> методы.</span><span class="sxs-lookup"><span data-stu-id="1900a-215">Note that these streams can be redirected by using the <xref:System.Console.SetIn%2A> and <xref:System.Console.SetOut%2A> methods.</span></span>  
  
 [!code-cpp[Classic Console Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Console Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Console Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Console Example/CS/source.cs#1)]
 [!code-vb[Classic Console Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Console Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="1900a-216">Данный тип потокобезопасен.</span><span class="sxs-lookup"><span data-stu-id="1900a-216">This type is thread safe.</span></span></threadsafe>
  </Docs>
  <Members>
    <Member MemberName="BackgroundColor">
      <MemberSignature Language="C#" Value="public static ConsoleColor BackgroundColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.ConsoleColor BackgroundColor" />
      <MemberSignature Language="DocId" Value="P:System.Console.BackgroundColor" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property BackgroundColor As ConsoleColor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property ConsoleColor BackgroundColor { ConsoleColor get(); void set(ConsoleColor value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ConsoleColor</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1900a-217">Возвращает или задает цвет фона консоли.</span><span class="sxs-lookup"><span data-stu-id="1900a-217">Gets or sets the background color of the console.</span></span></summary>
        <value><span data-ttu-id="1900a-218">Значение из перечисления , задающее фоновый цвет консоли, то есть цвет, на фоне которого выводятся символы.</span><span class="sxs-lookup"><span data-stu-id="1900a-218">A value that specifies the background color of the console; that is, the color that appears behind each character.</span></span> <span data-ttu-id="1900a-219">Значением по умолчанию является Black.</span><span class="sxs-lookup"><span data-stu-id="1900a-219">The default is black.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1900a-220">Изменение <xref:System.Console.BackgroundColor%2A> свойство затрагивает только выходные данные, записывается на отдельный символ ячейки после изменения цвета фона.</span><span class="sxs-lookup"><span data-stu-id="1900a-220">A change to the <xref:System.Console.BackgroundColor%2A> property affects only output that is written to individual character cells after the background color is changed.</span></span> <span data-ttu-id="1900a-221">Чтобы изменить цвет фона в окне консоли в целом, установите <xref:System.Console.BackgroundColor%2A> свойство и вызвать <xref:System.Console.Clear%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="1900a-221">To change the background color of the console window as a whole, set the <xref:System.Console.BackgroundColor%2A> property and call the <xref:System.Console.Clear%2A> method.</span></span> <span data-ttu-id="1900a-222">Ниже приведен пример.</span><span class="sxs-lookup"><span data-stu-id="1900a-222">The following example provides an illustration.</span></span>  
  
 [!code-csharp[System.Console.BackgroundColor#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.console.backgroundcolor/cs/backgroundcolor1.cs#1)]
 [!code-vb[System.Console.BackgroundColor#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.console.backgroundcolor/vb/backgroundcolor1.vb#1)]  
  
 <span data-ttu-id="1900a-223">Операция получения для приложения Windows, в котором консоли не существует, возвращает <xref:System.ConsoleColor.Black?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="1900a-223">A get operation for a Windows-based application, in which a console does not exist, returns <xref:System.ConsoleColor.Black?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1900a-224">Следующий пример сохраняет значения <xref:System.ConsoleColor> перечисления в массив и сохраняет текущие значения <xref:System.Console.BackgroundColor%2A> и <xref:System.Console.ForegroundColor%2A> свойства к переменным.</span><span class="sxs-lookup"><span data-stu-id="1900a-224">The following example saves the values of the <xref:System.ConsoleColor> enumeration to an array and stores the current values of the <xref:System.Console.BackgroundColor%2A> and <xref:System.Console.ForegroundColor%2A> properties to variables.</span></span> <span data-ttu-id="1900a-225">Затем изменяет цвет переднего плана для каждого цвета в <xref:System.ConsoleColor> перечисление, за исключением того, как цвет, соответствующий текущий фоновый рисунок и он изменяет цвет фона для каждого цвета в <xref:System.ConsoleColor> перечисление, за исключением того, цвет, который соответствует текущий переднего плана.</span><span class="sxs-lookup"><span data-stu-id="1900a-225">It then changes the foreground color to each color in the <xref:System.ConsoleColor> enumeration except to the color that matches the current background, and it changes the background color to each color in the <xref:System.ConsoleColor> enumeration except to the color that matches the current foreground.</span></span> <span data-ttu-id="1900a-226">(Если цвет совпадает с цветом фона, текст не отображается.) Наконец, он вызывает <xref:System.Console.ResetColor%2A> метод восстановления исходного цвета консоли.</span><span class="sxs-lookup"><span data-stu-id="1900a-226">(If the foreground color is the same as the background color, the text isn't visible.) Finally, it calls the <xref:System.Console.ResetColor%2A> method to restore the original console colors.</span></span>  
  
 [!code-csharp[System.ConsoleColor#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.consolecolor/cs/foregroundcolor3.cs#1)]
 [!code-vb[System.ConsoleColor#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.consolecolor/vb/foregroundcolor3.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1900a-227">Цвет, указанный в операции SET, не является допустимым членом <see cref="T:System.ConsoleColor" />.</span><span class="sxs-lookup"><span data-stu-id="1900a-227">The color specified in a set operation is not a valid member of <see cref="T:System.ConsoleColor" />.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="1900a-228">Пользователь не имеет разрешений на выполнение этого действия.</span><span class="sxs-lookup"><span data-stu-id="1900a-228">The user does not have permission to perform this action.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1900a-229">Ошибка ввода/вывода.</span><span class="sxs-lookup"><span data-stu-id="1900a-229">An I/O error occurred.</span></span></exception>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="1900a-230">для изменения безопасных окон верхнего уровня и дочерние окна.</span><span class="sxs-lookup"><span data-stu-id="1900a-230">for modifying safe top-level windows and subwindows.</span></span> <span data-ttu-id="1900a-231">Связанное перечисление: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span><span class="sxs-lookup"><span data-stu-id="1900a-231">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span></span></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="Beep">
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="1900a-232">Воспроизводит звуковой сигнал через динамик консоли.</span><span class="sxs-lookup"><span data-stu-id="1900a-232">Plays the sound of a beep through the console speaker.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Beep">
      <MemberSignature Language="C#" Value="public static void Beep ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Beep() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.Beep" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Beep ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Beep();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1900a-233">Воспроизводит звуковой сигнал через динамик консоли.</span><span class="sxs-lookup"><span data-stu-id="1900a-233">Plays the sound of a beep through the console speaker.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1900a-234">По умолчанию воспроизводит звуковой сигнал с частотой 800 Гц и длительностью 200 миллисекунд.</span><span class="sxs-lookup"><span data-stu-id="1900a-234">By default, the beep plays at a frequency of 800 hertz for a duration of 200 milliseconds.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1900a-235"><xref:System.Console.Beep%2A> Метод не поддерживается на 64-разрядные выпуски Windows Vista и Windows XP.</span><span class="sxs-lookup"><span data-stu-id="1900a-235">The <xref:System.Console.Beep%2A> method is not supported on the 64-bit editions of Windows Vista and Windows XP.</span></span>  
  
 <span data-ttu-id="1900a-236"><xref:System.Console.Beep%2A> Создает оболочку для вызова функции Windows [сигнал функция](https://msdn.microsoft.com/library/windows/desktop/ms679277.aspx).</span><span class="sxs-lookup"><span data-stu-id="1900a-236"><xref:System.Console.Beep%2A> wraps a call to the Windows [Beep function](https://msdn.microsoft.com/library/windows/desktop/ms679277.aspx).</span></span> <span data-ttu-id="1900a-237">Ли <xref:System.Console.Beep%2A> выводятся звука в версиях Windows до Windows 7, зависит от наличия микросхемой 8254 программируемый интервальный таймер.</span><span class="sxs-lookup"><span data-stu-id="1900a-237">Whether <xref:System.Console.Beep%2A> produces a sound on versions of Windows before Windows 7 depends on the presence of a 8254 programmable interval timer chip.</span></span> <span data-ttu-id="1900a-238">Начиная с Windows 7, зависят от звуковое устройство по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="1900a-238">Starting with Windows 7, it depends on the default sound device.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1900a-239">В следующем примере демонстрируется <xref:System.Console.Beep%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="1900a-239">The following example demonstrates the <xref:System.Console.Beep%2A> method.</span></span> <span data-ttu-id="1900a-240">В примере, принимает число от 1 до 9 в качестве аргумента командной строки и воспроизводит звуковой сигнал соответствующее количество раз.</span><span class="sxs-lookup"><span data-stu-id="1900a-240">The example accepts a number from 1 through 9 as a command line argument, and plays the beep that number of times.</span></span>  
  
 [!code-cpp[console.beep#1](~/samples/snippets/cpp/VS_Snippets_CLR/console.beep/CPP/beep.cpp#1)]
 [!code-csharp[console.beep#1](~/samples/snippets/csharp/VS_Snippets_CLR/console.beep/CS/beep.cs#1)]
 [!code-vb[console.beep#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/console.beep/VB/beep.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.HostProtectionException"><span data-ttu-id="1900a-241">Этот метод выполнен на сервере, например SQL Server, который не разрешает доступ к интерфейсу пользователя.</span><span class="sxs-lookup"><span data-stu-id="1900a-241">This method was executed on a server, such as SQL Server, that does not permit access to a user interface.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Beep">
      <MemberSignature Language="C#" Value="public static void Beep (int frequency, int duration);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Beep(int32 frequency, int32 duration) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.Beep(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Beep (frequency As Integer, duration As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Beep(int frequency, int duration);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="frequency" Type="System.Int32" />
        <Parameter Name="duration" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="frequency"><span data-ttu-id="1900a-242">Частота сигнала в диапазоне от 37 до 32767 Гц.</span><span class="sxs-lookup"><span data-stu-id="1900a-242">The frequency of the beep, ranging from 37 to 32767 hertz.</span></span></param>
        <param name="duration"><span data-ttu-id="1900a-243">Длительность сигнала в миллисекундах.</span><span class="sxs-lookup"><span data-stu-id="1900a-243">The duration of the beep measured in milliseconds.</span></span></param>
        <summary><span data-ttu-id="1900a-244">Воспроизводит звуковой сигнал заданной частоты и длительности через динамик консоли.</span><span class="sxs-lookup"><span data-stu-id="1900a-244">Plays the sound of a beep of a specified frequency and duration through the console speaker.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1900a-245"><xref:System.Console.Beep%2A> Создает оболочку для вызова функции Windows [сигнал функция](https://msdn.microsoft.com/library/windows/desktop/ms679277.aspx).</span><span class="sxs-lookup"><span data-stu-id="1900a-245"><xref:System.Console.Beep%2A> wraps a call to the Windows [Beep function](https://msdn.microsoft.com/library/windows/desktop/ms679277.aspx).</span></span> <span data-ttu-id="1900a-246">Ли <xref:System.Console.Beep%2A> выводятся звука в версиях Windows до Windows 7, зависит от наличия микросхемой 8254 программируемый интервальный таймер.</span><span class="sxs-lookup"><span data-stu-id="1900a-246">Whether <xref:System.Console.Beep%2A> produces a sound on versions of Windows before Windows 7 depends on the presence of a 8254 programmable interval timer chip.</span></span> <span data-ttu-id="1900a-247">Начиная с Windows 7, зависят от звуковое устройство по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="1900a-247">Starting with Windows 7, it depends on the default sound device.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1900a-248"><xref:System.Console.Beep%2A> Метод не поддерживается на 64-разрядные выпуски Windows Vista и Windows XP.</span><span class="sxs-lookup"><span data-stu-id="1900a-248">The <xref:System.Console.Beep%2A> method is not supported on the 64-bit editions of Windows Vista and Windows XP.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1900a-249">В этом примере демонстрируется <xref:System.Console.Beep%2A> метод с помощью воспроизведения первого сказать песню через динамик консоли.</span><span class="sxs-lookup"><span data-stu-id="1900a-249">This example demonstrates the <xref:System.Console.Beep%2A> method by playing the first few notes of a song through the console speaker.</span></span>  
  
 [!code-cpp[console.beep2#1](~/samples/snippets/cpp/VS_Snippets_CLR/console.beep2/CPP/b2.cpp#1)]
 [!code-csharp[console.beep2#1](~/samples/snippets/csharp/VS_Snippets_CLR/console.beep2/CS/b2.cs#1)]
 [!code-vb[console.beep2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/console.beep2/VB/b2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="1900a-250"><paramref name="frequency" /> меньше 37 или больше 32767 Гц.</span><span class="sxs-lookup"><span data-stu-id="1900a-250"><paramref name="frequency" /> is less than 37 or more than 32767 hertz.</span></span>  
  
 <span data-ttu-id="1900a-251">- или -</span><span class="sxs-lookup"><span data-stu-id="1900a-251">-or-</span></span>  
  
 <span data-ttu-id="1900a-252"><paramref name="duration" /> меньше или равно нулю.</span><span class="sxs-lookup"><span data-stu-id="1900a-252"><paramref name="duration" /> is less than or equal to zero.</span></span></exception>
        <exception cref="T:System.Security.HostProtectionException"><span data-ttu-id="1900a-253">Этот метод выполнен на сервере, например SQL Server, который не разрешает доступ к консоли.</span><span class="sxs-lookup"><span data-stu-id="1900a-253">This method was executed on a server, such as SQL Server, that does not permit access to the console.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BufferHeight">
      <MemberSignature Language="C#" Value="public static int BufferHeight { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 BufferHeight" />
      <MemberSignature Language="DocId" Value="P:System.Console.BufferHeight" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property BufferHeight As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int BufferHeight { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1900a-254">Возвращает или задает высоту буферной области.</span><span class="sxs-lookup"><span data-stu-id="1900a-254">Gets or sets the height of the buffer area.</span></span></summary>
        <value><span data-ttu-id="1900a-255">Текущая высота буферной области в строках.</span><span class="sxs-lookup"><span data-stu-id="1900a-255">The current height, in rows, of the buffer area.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1900a-256">Это свойство определяет количество строк (или строки), сохраненного в буфере, доступ к которому режим окна консоли.</span><span class="sxs-lookup"><span data-stu-id="1900a-256">This property defines the number of rows (or lines) stored in the buffer that is accessed by a console mode window.</span></span> <span data-ttu-id="1900a-257">Напротив <xref:System.Console.WindowHeight%2A> свойство определяет количество строк, отображаемых в окне консоли в определенный момент времени.</span><span class="sxs-lookup"><span data-stu-id="1900a-257">In contrast, the <xref:System.Console.WindowHeight%2A> property defines the number of rows that are actually displayed in the console window at any particular time.</span></span> <span data-ttu-id="1900a-258">Если число фактически записанных в буфер строк превышает количество строк, определенного параметром <xref:System.Console.WindowHeight%2A> свойства, окно может прокручиваться по вертикали, чтобы он отображал непрерывного количества строк, которые равны <xref:System.Console.WindowHeight%2A> свойство и они расположены в любом месте в буфере.</span><span class="sxs-lookup"><span data-stu-id="1900a-258">If the number of rows actually written to the buffer exceeds the number of rows defined by the <xref:System.Console.WindowHeight%2A> property, the window can be scrolled vertically so that it displays a contiguous number of rows that are equal to the <xref:System.Console.WindowHeight%2A> property and are located anywhere in the buffer.</span></span>  
  
 <span data-ttu-id="1900a-259">Если в операции задания уменьшает значение <xref:System.Console.BufferHeight%2A> свойства верхней строки удаляются.</span><span class="sxs-lookup"><span data-stu-id="1900a-259">If a set operation decreases the value of the <xref:System.Console.BufferHeight%2A> property, the uppermost lines are removed.</span></span> <span data-ttu-id="1900a-260">Например если от 300 до 250 уменьшается количество строк, от 0 до 49 строки удаляются, а также для существующих строк 50 до 299 становятся линий 0 до 249.</span><span class="sxs-lookup"><span data-stu-id="1900a-260">For example, if the number of lines is reduced from 300 to 250, lines 0 through 49 are removed, and the existing lines 50 through 299 become lines 0 through 249.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1900a-261">В этом примере демонстрируется <xref:System.Console.BufferHeight%2A> и <xref:System.Console.BufferWidth%2A> свойства.</span><span class="sxs-lookup"><span data-stu-id="1900a-261">This example demonstrates the <xref:System.Console.BufferHeight%2A> and <xref:System.Console.BufferWidth%2A> properties.</span></span> <span data-ttu-id="1900a-262">Пример сообщает размеры окна операционной системы, задать размер буфера 300 строк и 85 столбцов.</span><span class="sxs-lookup"><span data-stu-id="1900a-262">The example reports the dimensions of an operating system window set to a buffer size of 300 rows and 85 columns.</span></span>  
  
 [!code-cpp[console.bufferHW#1](~/samples/snippets/cpp/VS_Snippets_CLR/console.bufferHW/CPP/hw.cpp#1)]
 [!code-csharp[console.bufferHW#1](~/samples/snippets/csharp/VS_Snippets_CLR/console.bufferHW/CS/hw.cs#1)]
 [!code-vb[console.bufferHW#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/console.bufferHW/VB/hw.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="1900a-263">Значение в операции задания меньше или равно нулю.</span><span class="sxs-lookup"><span data-stu-id="1900a-263">The value in a set operation is less than or equal to zero.</span></span>  
  
 <span data-ttu-id="1900a-264">- или -</span><span class="sxs-lookup"><span data-stu-id="1900a-264">-or-</span></span>  
  
 <span data-ttu-id="1900a-265">Значение в операции задания больше или равно <see cref="F:System.Int16.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="1900a-265">The value in a set operation is greater than or equal to <see cref="F:System.Int16.MaxValue" />.</span></span>  
  
 <span data-ttu-id="1900a-266">- или -</span><span class="sxs-lookup"><span data-stu-id="1900a-266">-or-</span></span>  
  
 <span data-ttu-id="1900a-267">Значение в операции задания меньше суммы <see cref="P:System.Console.WindowTop" /> + <see cref="P:System.Console.WindowHeight" />.</span><span class="sxs-lookup"><span data-stu-id="1900a-267">The value in a set operation is less than <see cref="P:System.Console.WindowTop" /> + <see cref="P:System.Console.WindowHeight" />.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="1900a-268">Пользователь не имеет разрешений на выполнение этого действия.</span><span class="sxs-lookup"><span data-stu-id="1900a-268">The user does not have permission to perform this action.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1900a-269">Ошибка ввода/вывода.</span><span class="sxs-lookup"><span data-stu-id="1900a-269">An I/O error occurred.</span></span></exception>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="1900a-270">для изменения безопасных окон верхнего уровня и дочерние окна.</span><span class="sxs-lookup"><span data-stu-id="1900a-270">for modifying safe top-level windows and subwindows.</span></span> <span data-ttu-id="1900a-271">Связанное перечисление: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span><span class="sxs-lookup"><span data-stu-id="1900a-271">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="BufferWidth">
      <MemberSignature Language="C#" Value="public static int BufferWidth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 BufferWidth" />
      <MemberSignature Language="DocId" Value="P:System.Console.BufferWidth" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property BufferWidth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int BufferWidth { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1900a-272">Возвращает или задает ширину буферной области.</span><span class="sxs-lookup"><span data-stu-id="1900a-272">Gets or sets the width of the buffer area.</span></span></summary>
        <value><span data-ttu-id="1900a-273">Текущая ширина буферной области в столбцах.</span><span class="sxs-lookup"><span data-stu-id="1900a-273">The current width, in columns, of the buffer area.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1900a-274">Если в операции задания уменьшает значение <xref:System.Console.BufferWidth%2A> свойства правые столбцы будут удалены.</span><span class="sxs-lookup"><span data-stu-id="1900a-274">If a set operation decreases the value of the <xref:System.Console.BufferWidth%2A> property, the rightmost columns are removed.</span></span> <span data-ttu-id="1900a-275">Например если от 80 до 60 уменьшается количество столбцов, столбцы 60 до 79 каждой строки будут удалены.</span><span class="sxs-lookup"><span data-stu-id="1900a-275">For example, if the number of columns is reduced from 80 to 60, columns 60 through 79 of each row are removed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1900a-276">В этом примере демонстрируется <xref:System.Console.BufferHeight%2A> и <xref:System.Console.BufferWidth%2A> свойства.</span><span class="sxs-lookup"><span data-stu-id="1900a-276">This example demonstrates the <xref:System.Console.BufferHeight%2A> and <xref:System.Console.BufferWidth%2A> properties.</span></span> <span data-ttu-id="1900a-277">Пример сообщает размеры окна операционной системы, задать размер буфера 300 строк и 85 столбцов.</span><span class="sxs-lookup"><span data-stu-id="1900a-277">The example reports the dimensions of an operating system window set to a buffer size of 300 rows and 85 columns.</span></span>  
  
 [!code-cpp[console.bufferHW#1](~/samples/snippets/cpp/VS_Snippets_CLR/console.bufferHW/CPP/hw.cpp#1)]
 [!code-csharp[console.bufferHW#1](~/samples/snippets/csharp/VS_Snippets_CLR/console.bufferHW/CS/hw.cs#1)]
 [!code-vb[console.bufferHW#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/console.bufferHW/VB/hw.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="1900a-278">Значение в операции задания меньше или равно нулю.</span><span class="sxs-lookup"><span data-stu-id="1900a-278">The value in a set operation is less than or equal to zero.</span></span>  
  
 <span data-ttu-id="1900a-279">- или -</span><span class="sxs-lookup"><span data-stu-id="1900a-279">-or-</span></span>  
  
 <span data-ttu-id="1900a-280">Значение в операции задания больше или равно <see cref="F:System.Int16.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="1900a-280">The value in a set operation is greater than or equal to <see cref="F:System.Int16.MaxValue" />.</span></span>  
  
 <span data-ttu-id="1900a-281">- или -</span><span class="sxs-lookup"><span data-stu-id="1900a-281">-or-</span></span>  
  
 <span data-ttu-id="1900a-282">Значение в операции задания меньше суммы <see cref="P:System.Console.WindowLeft" /> + <see cref="P:System.Console.WindowWidth" />.</span><span class="sxs-lookup"><span data-stu-id="1900a-282">The value in a set operation is less than <see cref="P:System.Console.WindowLeft" /> + <see cref="P:System.Console.WindowWidth" />.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="1900a-283">Пользователь не имеет разрешений на выполнение этого действия.</span><span class="sxs-lookup"><span data-stu-id="1900a-283">The user does not have permission to perform this action.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1900a-284">Ошибка ввода/вывода.</span><span class="sxs-lookup"><span data-stu-id="1900a-284">An I/O error occurred.</span></span></exception>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="1900a-285">для изменения безопасных окон верхнего уровня и дочерние окна.</span><span class="sxs-lookup"><span data-stu-id="1900a-285">for modifying safe top-level windows and subwindows.</span></span> <span data-ttu-id="1900a-286">Связанное перечисление: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span><span class="sxs-lookup"><span data-stu-id="1900a-286">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="CancelKeyPress">
      <MemberSignature Language="C#" Value="public static event ConsoleCancelEventHandler CancelKeyPress;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ConsoleCancelEventHandler CancelKeyPress" />
      <MemberSignature Language="DocId" Value="E:System.Console.CancelKeyPress" />
      <MemberSignature Language="VB.NET" Value="Public Shared Custom Event CancelKeyPress As ConsoleCancelEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static event ConsoleCancelEventHandler ^ CancelKeyPress;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ConsoleCancelEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1900a-287">Возникает при одновременном нажатии клавиши-модификатора <see cref="F:System.ConsoleModifiers.Control" /> (Ctrl) и либо клавиши консоли <see cref="F:System.ConsoleKey.C" /> (C), либо клавиши Break (Ctrl+C или Ctrl+Break).</span><span class="sxs-lookup"><span data-stu-id="1900a-287">Occurs when the <see cref="F:System.ConsoleModifiers.Control" /> modifier key (Ctrl) and either the <see cref="F:System.ConsoleKey.C" /> console key (C) or the Break key are pressed simultaneously (Ctrl+C or Ctrl+Break).</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1900a-288">Это событие используется в сочетании с <xref:System.ConsoleCancelEventHandler?displayProperty=nameWithType> и <xref:System.ConsoleCancelEventArgs?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="1900a-288">This event is used in conjunction with <xref:System.ConsoleCancelEventHandler?displayProperty=nameWithType> and <xref:System.ConsoleCancelEventArgs?displayProperty=nameWithType>.</span></span> <span data-ttu-id="1900a-289"><xref:System.Console.CancelKeyPress> Событий позволяет консольное приложение для перехвата сигнал Ctrl + C, чтобы обработчик событий мог решать, следует ли продолжать выполнение, или завершать работу.</span><span class="sxs-lookup"><span data-stu-id="1900a-289">The <xref:System.Console.CancelKeyPress> event enables a console application to intercept the Ctrl+C signal so the event handler can decide whether to continue executing or terminate.</span></span> <span data-ttu-id="1900a-290">Дополнительные сведения об обработке событий см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="1900a-290">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="1900a-291">Когда пользователь нажимает сочетание клавиш Ctrl + C или Ctrl + Break <xref:System.Console.CancelKeyPress> событие и приложения <xref:System.ConsoleCancelEventHandler> выполняется обработчик событий.</span><span class="sxs-lookup"><span data-stu-id="1900a-291">When the user presses either Ctrl+C or Ctrl+Break, the <xref:System.Console.CancelKeyPress> event is fired and the application's <xref:System.ConsoleCancelEventHandler> event handler is executed.</span></span> <span data-ttu-id="1900a-292">Обработчик событий передается <xref:System.ConsoleCancelEventArgs> объекта, имеющего два полезных свойств:</span><span class="sxs-lookup"><span data-stu-id="1900a-292">The event handler is passed a <xref:System.ConsoleCancelEventArgs> object that has two useful properties:</span></span>  
  
-   <span data-ttu-id="1900a-293"><xref:System.ConsoleCancelEventArgs.SpecialKey%2A>, который позволяет определить, был ли вызван обработчик, в результате пользователь, нажав Ctrl + C (значение свойства <xref:System.ConsoleSpecialKey.ControlC?displayProperty=nameWithType>) или Ctrl + Break (значение свойства <xref:System.ConsoleSpecialKey.ControlBreak?displayProperty=nameWithType>).</span><span class="sxs-lookup"><span data-stu-id="1900a-293"><xref:System.ConsoleCancelEventArgs.SpecialKey%2A>, which allows you to determine whether the handler was invoked as a result of the user pressing Ctrl+C (the property value is <xref:System.ConsoleSpecialKey.ControlC?displayProperty=nameWithType>) or Ctrl+Break (the property value is <xref:System.ConsoleSpecialKey.ControlBreak?displayProperty=nameWithType>).</span></span>  
  
-   <span data-ttu-id="1900a-294"><xref:System.ConsoleCancelEventArgs.Cancel%2A>, который позволяет определить, как в приложение следует ответить пользователю нажав клавиши Ctrl + C или Ctrl + Break.</span><span class="sxs-lookup"><span data-stu-id="1900a-294"><xref:System.ConsoleCancelEventArgs.Cancel%2A>, which allows you to determine how to your application should respond to the user pressing Ctrl+C or Ctrl+Break.</span></span> <span data-ttu-id="1900a-295">По умолчанию <xref:System.ConsoleCancelEventArgs.Cancel%2A> свойство `false`, какая причины программа выполнения завершение при выходе из обработчика событий.</span><span class="sxs-lookup"><span data-stu-id="1900a-295">By default, the <xref:System.ConsoleCancelEventArgs.Cancel%2A> property is `false`, which causes program execution to terminate when the event handler exits.</span></span> <span data-ttu-id="1900a-296">Изменение свойства на `true` указывает, что приложение следует продолжить выполнение.</span><span class="sxs-lookup"><span data-stu-id="1900a-296">Changing its property to `true` specifies that the application should continue to execute.</span></span>  
  
> [!TIP]
>  <span data-ttu-id="1900a-297">Если приложение имеет простой требования, можно использовать <xref:System.Console.TreatControlCAsInput%2A> свойство вместо этого события.</span><span class="sxs-lookup"><span data-stu-id="1900a-297">If your application has simple requirements, you can use the <xref:System.Console.TreatControlCAsInput%2A> property instead of this event.</span></span> <span data-ttu-id="1900a-298">Настраивая это свойство `false`, убедитесь, что приложение всегда завершает работу при нажатии клавиш Ctrl + C.</span><span class="sxs-lookup"><span data-stu-id="1900a-298">By setting this property to `false`, you can ensure that your application always exits if the user presses Ctrl+C.</span></span> <span data-ttu-id="1900a-299">Присвойте ему значение `true`, вы можете обеспечить, нажав Ctrl + C не будет прерван приложения.</span><span class="sxs-lookup"><span data-stu-id="1900a-299">By setting it to `true`, you can ensure that pressing Ctrl+C will not terminate the application.</span></span>  
  
 <span data-ttu-id="1900a-300">Обработчик событий для этого события выполняется в потоке пула потоков.</span><span class="sxs-lookup"><span data-stu-id="1900a-300">The event handler for this event is executed on a thread pool thread.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1900a-301">В следующем примере показано, как <xref:System.Console.CancelKeyPress> использовать событие.</span><span class="sxs-lookup"><span data-stu-id="1900a-301">The following example demonstrates how the <xref:System.Console.CancelKeyPress> event is used.</span></span> <span data-ttu-id="1900a-302">При нажатии клавиши Ctrl + C, операции чтения прерывается и `myHandler` вызывается обработчик события.</span><span class="sxs-lookup"><span data-stu-id="1900a-302">When you press Ctrl+C, the read operation is interrupted and the `myHandler` event handler is invoked.</span></span> <span data-ttu-id="1900a-303">После входа в обработчик событий <xref:System.ConsoleCancelEventArgs.Cancel%2A?displayProperty=nameWithType> свойство `false`, что означает, что текущий процесс будет прерван при завершает обработчик события.</span><span class="sxs-lookup"><span data-stu-id="1900a-303">Upon entry to the event handler, the <xref:System.ConsoleCancelEventArgs.Cancel%2A?displayProperty=nameWithType> property is `false`, which means that the current process will terminate when the event handler terminates.</span></span> <span data-ttu-id="1900a-304">Тем не менее, задает обработчик событий <xref:System.ConsoleCancelEventArgs.Cancel%2A?displayProperty=nameWithType> свойства `true`, что означает, что процесс не будет прерван и продолжит операцию чтения.</span><span class="sxs-lookup"><span data-stu-id="1900a-304">However, the event handler sets the <xref:System.ConsoleCancelEventArgs.Cancel%2A?displayProperty=nameWithType> property to `true`, which means that the process will not terminate and the read operation will resume.</span></span>  
  
 [!code-cpp[console.cancelkeypress#1](~/samples/snippets/cpp/VS_Snippets_CLR/console.cancelkeypress/cpp/ckp.cpp#1)]
 [!code-csharp[console.cancelkeypress#1](~/samples/snippets/csharp/VS_Snippets_CLR/console.cancelkeypress/cs/ckp.cs#1)]
 [!code-vb[console.cancelkeypress#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/console.cancelkeypress/vb/ckp.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="1900a-305">для изменения безопасных окон верхнего уровня и дочерние окна.</span><span class="sxs-lookup"><span data-stu-id="1900a-305">for modifying safe top-level windows and subwindows.</span></span> <span data-ttu-id="1900a-306">Связанное перечисление: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span><span class="sxs-lookup"><span data-stu-id="1900a-306">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span></span></permission>
        <altmember cref="T:System.ConsoleCancelEventArgs" />
        <altmember cref="T:System.ConsoleCancelEventHandler" />
        <altmember cref="P:System.Console.TreatControlCAsInput" />
      </Docs>
    </Member>
    <Member MemberName="CapsLock">
      <MemberSignature Language="C#" Value="public static bool CapsLock { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool CapsLock" />
      <MemberSignature Language="DocId" Value="P:System.Console.CapsLock" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property CapsLock As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool CapsLock { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1900a-307">Возвращает значение, указывающее, включен или отключен режим CAPS LOCK клавиатуры.</span><span class="sxs-lookup"><span data-stu-id="1900a-307">Gets a value indicating whether the CAPS LOCK keyboard toggle is turned on or turned off.</span></span></summary>
        <value>
          <span data-ttu-id="1900a-308">Значение <see langword="true" />, если режим CAPS LOCK включен; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="1900a-308"><see langword="true" /> if CAPS LOCK is turned on; <see langword="false" /> if CAPS LOCK is turned off.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public static void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Clear();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1900a-309">Удаляет из буфера консоли и ее окна отображаемую информацию.</span><span class="sxs-lookup"><span data-stu-id="1900a-309">Clears the console buffer and corresponding console window of display information.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1900a-310">С помощью <xref:System.Console.Clear%2A> метод эквивалентен вызов MS-DOS `cls` команду в окне командной строки.</span><span class="sxs-lookup"><span data-stu-id="1900a-310">Using the <xref:System.Console.Clear%2A> method is equivalent invoking the MS-DOS `cls` command in the command prompt window.</span></span> <span data-ttu-id="1900a-311">При <xref:System.Console.Clear%2A> вызове метода, курсор автоматически перемещается в левом верхнем углу окна и содержимое буфера экрана задаются в пустые значения, с помощью текущего цветов текста и фона.</span><span class="sxs-lookup"><span data-stu-id="1900a-311">When the <xref:System.Console.Clear%2A> method is called, the cursor automatically scrolls to the top-left corner of the window and the contents of the screen buffer are set to blanks using the current foreground background colors.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1900a-312">Попытка вызова <xref:System.Console.Clear%2A> вызывает метод, если консольное приложение Вывод перенаправляется в файл <xref:System.IO.IOException>.</span><span class="sxs-lookup"><span data-stu-id="1900a-312">Attempting to call the <xref:System.Console.Clear%2A> method when a console application's output is redirected to a file throws a <xref:System.IO.IOException>.</span></span> <span data-ttu-id="1900a-313">Чтобы избежать этого, всегда заключайте вызов <xref:System.Console.Clear%2A> метод в `try`...`catch`</span><span class="sxs-lookup"><span data-stu-id="1900a-313">To prevent this, always wrap a call to the <xref:System.Console.Clear%2A> method in a `try`…`catch`</span></span> <span data-ttu-id="1900a-314">блок.</span><span class="sxs-lookup"><span data-stu-id="1900a-314">block.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1900a-315">В следующем примере используется <xref:System.Console.Clear%2A> метод, чтобы удалить консоль перед выполнением цикла, предлагает пользователю выбрать цвет переднего плана и фона и введите строку для отображения.</span><span class="sxs-lookup"><span data-stu-id="1900a-315">The following example uses the <xref:System.Console.Clear%2A> method to clear the console before it executes a loop, prompts the user to select a foreground and background color and to enter a string to display.</span></span> <span data-ttu-id="1900a-316">Если пользователь не выйти из программы, восстанавливаются исходные фона и цвета консоли и <xref:System.Console.Clear%2A> метод вызывается повторно до повторного выполнения цикла.</span><span class="sxs-lookup"><span data-stu-id="1900a-316">If the user chooses not to exit the program, the console's original foreground and background colors are restored and the <xref:System.Console.Clear%2A> method is called again before re-executing the loop.</span></span>  
  
 [!code-csharp[System.Console.Clear#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.console.clear/cs/clear1.cs#1)]
 [!code-vb[System.Console.Clear#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.console.clear/vb/clear1.vb#1)]  
  
 <span data-ttu-id="1900a-317">Пример использует `GetKeyPress` метод, чтобы проверить сделанного пользователем выбора цвета переднего плана и фона.</span><span class="sxs-lookup"><span data-stu-id="1900a-317">The example relies on a `GetKeyPress` method to validate the user's selection of a foreground and background color.</span></span>  
  
 <span data-ttu-id="1900a-318">В этом примере демонстрируется <xref:System.Console.CursorLeft%2A> и <xref:System.Console.CursorTop%2A> свойства и <xref:System.Console.SetCursorPosition%2A> и <xref:System.Console.Clear%2A> методы.</span><span class="sxs-lookup"><span data-stu-id="1900a-318">This example demonstrates the <xref:System.Console.CursorLeft%2A> and <xref:System.Console.CursorTop%2A> properties, and the <xref:System.Console.SetCursorPosition%2A> and <xref:System.Console.Clear%2A> methods.</span></span> <span data-ttu-id="1900a-319">Примере курсор, который определяет, где произойдет следующая запись, для рисования 5 символов прямоугольником, 5 символов с помощью сочетания «+», «&#124;», и «-» строки.</span><span class="sxs-lookup"><span data-stu-id="1900a-319">The example positions the cursor, which determines where the next write will occur, to draw a 5 character by 5 character rectangle using a combination of "+", "&#124;", and "-" strings.</span></span> <span data-ttu-id="1900a-320">Обратите внимание, что прямоугольник можно нарисовать за меньшее число шагов, используя сочетание других строк.</span><span class="sxs-lookup"><span data-stu-id="1900a-320">Note that the rectangle could be drawn with fewer steps using a combination of other strings.</span></span>  
  
 [!code-cpp[console.cursorLTS#1](~/samples/snippets/cpp/VS_Snippets_CLR/console.cursorLTS/CPP/lts.cpp#1)]
 [!code-csharp[console.cursorLTS#1](~/samples/snippets/csharp/VS_Snippets_CLR/console.cursorLTS/CS/lts.cs#1)]
 [!code-vb[console.cursorLTS#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/console.cursorLTS/VB/lts.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1900a-321">Ошибка ввода/вывода.</span><span class="sxs-lookup"><span data-stu-id="1900a-321">An I/O error occurred.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CursorLeft">
      <MemberSignature Language="C#" Value="public static int CursorLeft { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 CursorLeft" />
      <MemberSignature Language="DocId" Value="P:System.Console.CursorLeft" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property CursorLeft As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int CursorLeft { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1900a-322">Возвращает или задает позицию столбца курсора в буферной области.</span><span class="sxs-lookup"><span data-stu-id="1900a-322">Gets or sets the column position of the cursor within the buffer area.</span></span></summary>
        <value><span data-ttu-id="1900a-323">Текущая позиция курсора в столбцах.</span><span class="sxs-lookup"><span data-stu-id="1900a-323">The current position, in columns, of the cursor.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="1900a-324">В этом примере демонстрируется <xref:System.Console.CursorLeft%2A> и <xref:System.Console.CursorTop%2A> свойства и <xref:System.Console.SetCursorPosition%2A> и <xref:System.Console.Clear%2A> методы.</span><span class="sxs-lookup"><span data-stu-id="1900a-324">This example demonstrates the <xref:System.Console.CursorLeft%2A> and <xref:System.Console.CursorTop%2A> properties, and the <xref:System.Console.SetCursorPosition%2A> and <xref:System.Console.Clear%2A> methods.</span></span> <span data-ttu-id="1900a-325">Примере курсор, который определяет, где произойдет следующая запись, для рисования 5 символов прямоугольником, 5 символов с помощью сочетания «+», «&#124;», и «-» строки.</span><span class="sxs-lookup"><span data-stu-id="1900a-325">The example positions the cursor, which determines where the next write will occur, to draw a 5 character by 5 character rectangle using a combination of "+", "&#124;", and "-" strings.</span></span> <span data-ttu-id="1900a-326">Обратите внимание, что прямоугольник можно нарисовать за меньшее число шагов, используя сочетание других строк.</span><span class="sxs-lookup"><span data-stu-id="1900a-326">Note that the rectangle could be drawn with fewer steps using a combination of other strings.</span></span>  
  
 [!code-cpp[console.cursorLTS#1](~/samples/snippets/cpp/VS_Snippets_CLR/console.cursorLTS/CPP/lts.cpp#1)]
 [!code-csharp[console.cursorLTS#1](~/samples/snippets/csharp/VS_Snippets_CLR/console.cursorLTS/CS/lts.cs#1)]
 [!code-vb[console.cursorLTS#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/console.cursorLTS/VB/lts.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="1900a-327">Значение в операции задания меньше нуля.</span><span class="sxs-lookup"><span data-stu-id="1900a-327">The value in a set operation is less than zero.</span></span>  
  
 <span data-ttu-id="1900a-328">- или -</span><span class="sxs-lookup"><span data-stu-id="1900a-328">-or-</span></span>  
  
 <span data-ttu-id="1900a-329">Значение в операции задания больше или равно <see cref="P:System.Console.BufferWidth" />.</span><span class="sxs-lookup"><span data-stu-id="1900a-329">The value in a set operation is greater than or equal to <see cref="P:System.Console.BufferWidth" />.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="1900a-330">Пользователь не имеет разрешений на выполнение этого действия.</span><span class="sxs-lookup"><span data-stu-id="1900a-330">The user does not have permission to perform this action.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1900a-331">Ошибка ввода/вывода.</span><span class="sxs-lookup"><span data-stu-id="1900a-331">An I/O error occurred.</span></span></exception>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="1900a-332">для изменения безопасных окон верхнего уровня и дочерние окна.</span><span class="sxs-lookup"><span data-stu-id="1900a-332">for modifying safe top-level windows and subwindows.</span></span> <span data-ttu-id="1900a-333">Связанное перечисление: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span><span class="sxs-lookup"><span data-stu-id="1900a-333">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="CursorSize">
      <MemberSignature Language="C#" Value="public static int CursorSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 CursorSize" />
      <MemberSignature Language="DocId" Value="P:System.Console.CursorSize" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property CursorSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int CursorSize { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1900a-334">Возвращает или задает высоту курсора в символьной ячейке.</span><span class="sxs-lookup"><span data-stu-id="1900a-334">Gets or sets the height of the cursor within a character cell.</span></span></summary>
        <value><span data-ttu-id="1900a-335">Размер курсора, выраженный как процент от высоты символьной ячейки.</span><span class="sxs-lookup"><span data-stu-id="1900a-335">The size of the cursor expressed as a percentage of the height of a character cell.</span></span> <span data-ttu-id="1900a-336">Данное свойство принимает значения в диапазоне от 1 до 100.</span><span class="sxs-lookup"><span data-stu-id="1900a-336">The property value ranges from 1 to 100.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1900a-337">Внешний вид курсора может меняться от горизонтальную линию снизу ячейки, если значение свойства равно 1, для полного заполнения ячейки, когда значение свойства равно 100.</span><span class="sxs-lookup"><span data-stu-id="1900a-337">The cursor appearance varies, ranging from a horizontal line at the bottom of the cell when the property value is 1, to completely filling the cell when the property value is 100.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1900a-338">В этом примере демонстрируется <xref:System.Console.CursorSize%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="1900a-338">This example demonstrates the <xref:System.Console.CursorSize%2A> property.</span></span> <span data-ttu-id="1900a-339">В примере увеличивается размер курсора при каждом клавиши консоли нажата, а затем восстанавливает его исходный размер курсор перед завершением работы.</span><span class="sxs-lookup"><span data-stu-id="1900a-339">The example increases the size of the cursor each time any console key is pressed, then restores the cursor to its original size before terminating.</span></span>  
  
 [!code-cpp[console.cursorsize#1](~/samples/snippets/cpp/VS_Snippets_CLR/console.cursorsize/CPP/csize.cpp#1)]
 [!code-csharp[console.cursorsize#1](~/samples/snippets/csharp/VS_Snippets_CLR/console.cursorsize/CS/csize.cs#1)]
 [!code-vb[console.cursorsize#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/console.cursorsize/VB/csize.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="1900a-340">Значение, указанное в операции задания, меньше 1 или больше 100.</span><span class="sxs-lookup"><span data-stu-id="1900a-340">The value specified in a set operation is less than 1 or greater than 100.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="1900a-341">Пользователь не имеет разрешений на выполнение этого действия.</span><span class="sxs-lookup"><span data-stu-id="1900a-341">The user does not have permission to perform this action.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1900a-342">Ошибка ввода/вывода.</span><span class="sxs-lookup"><span data-stu-id="1900a-342">An I/O error occurred.</span></span></exception>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="1900a-343">для изменения безопасных окон верхнего уровня и дочерние окна.</span><span class="sxs-lookup"><span data-stu-id="1900a-343">for modifying safe top-level windows and subwindows.</span></span> <span data-ttu-id="1900a-344">Связанное перечисление: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span><span class="sxs-lookup"><span data-stu-id="1900a-344">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="CursorTop">
      <MemberSignature Language="C#" Value="public static int CursorTop { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 CursorTop" />
      <MemberSignature Language="DocId" Value="P:System.Console.CursorTop" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property CursorTop As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int CursorTop { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1900a-345">Возвращает или задает позицию строки курсора в буферной области.</span><span class="sxs-lookup"><span data-stu-id="1900a-345">Gets or sets the row position of the cursor within the buffer area.</span></span></summary>
        <value><span data-ttu-id="1900a-346">Текущая позиция курсора в строках.</span><span class="sxs-lookup"><span data-stu-id="1900a-346">The current position, in rows, of the cursor.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="1900a-347">В этом примере демонстрируется <xref:System.Console.CursorLeft%2A> и <xref:System.Console.CursorTop%2A> свойства и <xref:System.Console.SetCursorPosition%2A> и <xref:System.Console.Clear%2A> методы.</span><span class="sxs-lookup"><span data-stu-id="1900a-347">This example demonstrates the <xref:System.Console.CursorLeft%2A> and <xref:System.Console.CursorTop%2A> properties, and the <xref:System.Console.SetCursorPosition%2A> and <xref:System.Console.Clear%2A> methods.</span></span> <span data-ttu-id="1900a-348">Примере курсор, который определяет, где произойдет следующая запись, для рисования 5 символов прямоугольником, 5 символов с помощью сочетания «+», «&#124;», и «-» строки.</span><span class="sxs-lookup"><span data-stu-id="1900a-348">The example positions the cursor, which determines where the next write will occur, to draw a 5 character by 5 character rectangle using a combination of "+", "&#124;", and "-" strings.</span></span> <span data-ttu-id="1900a-349">Обратите внимание, что прямоугольник можно нарисовать за меньшее число шагов, используя сочетание других строк.</span><span class="sxs-lookup"><span data-stu-id="1900a-349">Note that the rectangle could be drawn with fewer steps using a combination of other strings.</span></span>  
  
 [!code-cpp[console.cursorLTS#1](~/samples/snippets/cpp/VS_Snippets_CLR/console.cursorLTS/CPP/lts.cpp#1)]
 [!code-csharp[console.cursorLTS#1](~/samples/snippets/csharp/VS_Snippets_CLR/console.cursorLTS/CS/lts.cs#1)]
 [!code-vb[console.cursorLTS#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/console.cursorLTS/VB/lts.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="1900a-350">Значение в операции задания меньше нуля.</span><span class="sxs-lookup"><span data-stu-id="1900a-350">The value in a set operation is less than zero.</span></span>  
  
 <span data-ttu-id="1900a-351">- или -</span><span class="sxs-lookup"><span data-stu-id="1900a-351">-or-</span></span>  
  
 <span data-ttu-id="1900a-352">Значение в операции задания больше или равно <see cref="P:System.Console.BufferHeight" />.</span><span class="sxs-lookup"><span data-stu-id="1900a-352">The value in a set operation is greater than or equal to <see cref="P:System.Console.BufferHeight" />.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="1900a-353">Пользователь не имеет разрешений на выполнение этого действия.</span><span class="sxs-lookup"><span data-stu-id="1900a-353">The user does not have permission to perform this action.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1900a-354">Ошибка ввода/вывода.</span><span class="sxs-lookup"><span data-stu-id="1900a-354">An I/O error occurred.</span></span></exception>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="1900a-355">для изменения безопасных окон верхнего уровня и дочерние окна.</span><span class="sxs-lookup"><span data-stu-id="1900a-355">for modifying safe top-level windows and subwindows.</span></span> <span data-ttu-id="1900a-356">Связанное перечисление: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span><span class="sxs-lookup"><span data-stu-id="1900a-356">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="CursorVisible">
      <MemberSignature Language="C#" Value="public static bool CursorVisible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property bool CursorVisible" />
      <MemberSignature Language="DocId" Value="P:System.Console.CursorVisible" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property CursorVisible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool CursorVisible { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1900a-357">Возвращает или задает значение, указывающее, видим ли курсор.</span><span class="sxs-lookup"><span data-stu-id="1900a-357">Gets or sets a value indicating whether the cursor is visible.</span></span></summary>
        <value>
          <span data-ttu-id="1900a-358">Значение <see langword="true" />, если курсор видим; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="1900a-358"><see langword="true" /> if the cursor is visible; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="1900a-359">В этом примере демонстрируется <xref:System.Console.CursorVisible%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="1900a-359">This example demonstrates the <xref:System.Console.CursorVisible%2A> property.</span></span> <span data-ttu-id="1900a-360">В примере создается курсор видимым, если первый столбец входных данных является знаком «+» или невидимым, если входное значение "-" символов.</span><span class="sxs-lookup"><span data-stu-id="1900a-360">The example makes the cursor visible if the first column of input is a '+' character or invisible if the input is a '-' character.</span></span>  
  
 [!code-cpp[console.cursorvis#1](~/samples/snippets/cpp/VS_Snippets_CLR/console.cursorvis/CPP/vis.cpp#1)]
 [!code-csharp[console.cursorvis#1](~/samples/snippets/csharp/VS_Snippets_CLR/console.cursorvis/CS/vis.cs#1)]
 [!code-vb[console.cursorvis#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/console.cursorvis/VB/vis.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="1900a-361">Пользователь не имеет разрешений на выполнение этого действия.</span><span class="sxs-lookup"><span data-stu-id="1900a-361">The user does not have permission to perform this action.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1900a-362">Ошибка ввода/вывода.</span><span class="sxs-lookup"><span data-stu-id="1900a-362">An I/O error occurred.</span></span></exception>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="1900a-363">для изменения безопасных окон верхнего уровня и дочерние окна.</span><span class="sxs-lookup"><span data-stu-id="1900a-363">for modifying safe top-level windows and subwindows.</span></span> <span data-ttu-id="1900a-364">Связанное перечисление: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span><span class="sxs-lookup"><span data-stu-id="1900a-364">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Error">
      <MemberSignature Language="C#" Value="public static System.IO.TextWriter Error { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.IO.TextWriter Error" />
      <MemberSignature Language="DocId" Value="P:System.Console.Error" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Error As TextWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::IO::TextWriter ^ Error { System::IO::TextWriter ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.TextWriter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1900a-365">Возвращает стандартный выходной поток сообщений об ошибках.</span><span class="sxs-lookup"><span data-stu-id="1900a-365">Gets the standard error output stream.</span></span></summary>
        <value><span data-ttu-id="1900a-366">Объект <see cref="T:System.IO.TextWriter" />, предоставляющий стандартный поток вывода ошибок.</span><span class="sxs-lookup"><span data-stu-id="1900a-366">A <see cref="T:System.IO.TextWriter" /> that represents the standard error output stream.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1900a-367">Это стандартный поток ошибок по умолчанию имеет значение на консоль.</span><span class="sxs-lookup"><span data-stu-id="1900a-367">This standard error stream is set to the console by default.</span></span> <span data-ttu-id="1900a-368">Это можно сделать в другой поток с <xref:System.Console.SetError%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="1900a-368">It can be set to another stream with the <xref:System.Console.SetError%2A> method.</span></span> <span data-ttu-id="1900a-369">После перенаправления в стандартный поток ошибок может быть получена путем вызова <xref:System.Console.OpenStandardError%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="1900a-369">After the standard error stream is redirected, it can be reacquired by calling the <xref:System.Console.OpenStandardError%2A> method.</span></span>  
  
 <span data-ttu-id="1900a-370">В консольных приложениях, выходные данные которого информационное часто перенаправляется в файл, поток через стандартную ошибку <xref:System.Console.Error%2A> свойство может использоваться для отображения сведений на консоль, даже если перенаправлены выходные данные.</span><span class="sxs-lookup"><span data-stu-id="1900a-370">In console applications whose informational output is often redirected to a file, the standard error stream available through the <xref:System.Console.Error%2A> property can be used to display information to the console even if output is redirected.</span></span> <span data-ttu-id="1900a-371">В следующем примере отображаются таблицы продуктов для 10 номеров по одному, начиная с 1.</span><span class="sxs-lookup"><span data-stu-id="1900a-371">The following example displays product tables for 10 numbers at a time starting with 1.</span></span> <span data-ttu-id="1900a-372">После каждого набора 10 номеров <xref:System.Console.Error%2A> свойство позволяет запрашивать у пользователя, следует ли отображать следующего набора.</span><span class="sxs-lookup"><span data-stu-id="1900a-372">After every set of 10 numbers, the <xref:System.Console.Error%2A> property is used to ask the user whether to display the next set.</span></span> <span data-ttu-id="1900a-373">Если стандартный вывод перенаправляется в файл, у пользователя запрашивается по-прежнему ли процедура должна создать следующий набор продуктов.</span><span class="sxs-lookup"><span data-stu-id="1900a-373">If the standard output is redirected to a file, the user is still asked whether the routine should generate the next set of products.</span></span>  
  
 [!code-csharp[System.Console.Error#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.console.error/cs/error1.cs#1)]
 [!code-vb[System.Console.Error#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.console.error/vb/error1.vb#1)]  
  
   
  
## Examples  
 <span data-ttu-id="1900a-374">Следующий пример — это программа командной строки с именем ExpandTabs, который заменяет символы табуляции в текстовом файле четыре пробела, значения, определяемого `tabSize` переменной.</span><span class="sxs-lookup"><span data-stu-id="1900a-374">The following example is a command line utility named ExpandTabs that replaces tab characters in a text file with four spaces, the value defined by the `tabSize` variable.</span></span> <span data-ttu-id="1900a-375">Он перенаправляет стандартный ввод и вывод потоки в файлы, но использует <xref:System.Console.Error%2A> свойство для записи в стандартный поток ошибок на консоль.</span><span class="sxs-lookup"><span data-stu-id="1900a-375">It redirects the standard input and output streams to files, but uses the <xref:System.Console.Error%2A> property to write the standard error stream to the console.</span></span> <span data-ttu-id="1900a-376">Его можно запустить из командной строки, указав имя файла, содержащего символы табуляции и имя выходного файла.</span><span class="sxs-lookup"><span data-stu-id="1900a-376">It can be launched from the command line by supplying the name of the file that contains tab characters and the name of the output file.</span></span>  
  
 [!code-cpp[Console-EXPANDTABSEX#1](~/samples/snippets/cpp/VS_Snippets_CLR/Console-EXPANDTABSEX/CPP/expandtabsex.cpp#1)]
 [!code-csharp[Console-EXPANDTABSEX#1](~/samples/snippets/csharp/VS_Snippets_CLR/Console-EXPANDTABSEX/CS/expandtabsex.cs#1)]
 [!code-vb[Console-EXPANDTABSEX#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Console-EXPANDTABSEX/VB/expandtabsex.vb#1)]  
  
 <span data-ttu-id="1900a-377">Следующий пример является простым текстовым средство просмотра файлов, отображающее содержимое одного или нескольких текстовых файлов на консоль.</span><span class="sxs-lookup"><span data-stu-id="1900a-377">The following example is a simple text file viewer that displays the contents of one or more text files to the console.</span></span> <span data-ttu-id="1900a-378">Если аргументы командной строки, или если все файлы, передаваемые в качестве аргументов командной строки не существуют, в примере вызывается <xref:System.Console.SetError%2A> вызывает метод, чтобы перенаправить сведения об ошибке в файле <xref:System.Console.OpenStandardError%2A> метод в процессе повторного запроса в стандартную ошибку Указывает, что сведения об ошибке была записана в файл и потока.</span><span class="sxs-lookup"><span data-stu-id="1900a-378">If there are no command line arguments, or if any files passed as command line arguments do not exist, the example calls the <xref:System.Console.SetError%2A> method to redirect error information to a file, calls the <xref:System.Console.OpenStandardError%2A> method in the process of reacquiring the standard error stream, and indicates that error information was written to a file.</span></span>  
  
 [!code-csharp[System.Console.OpenStandardError#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.console.openstandarderror/cs/viewtextfile.cs#1)]
 [!code-vb[System.Console.OpenStandardError#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.console.openstandarderror/vb/viewtextfile.vb#1)]  
  
 <span data-ttu-id="1900a-379">Обратите внимание, что <xref:System.IO.StreamWriter.AutoFlush%2A?displayProperty=nameWithType> свойству `true` до повторного запроса в поток ошибок.</span><span class="sxs-lookup"><span data-stu-id="1900a-379">Note that the <xref:System.IO.StreamWriter.AutoFlush%2A?displayProperty=nameWithType> property is set to `true` before reacquiring the error stream.</span></span> <span data-ttu-id="1900a-380">Это гарантирует, что выходные данные будут быть немедленно выводятся на консоль, а не в буфер.</span><span class="sxs-lookup"><span data-stu-id="1900a-380">This ensures that output will be sent to the console immediately rather than buffered.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Console.In" />
        <altmember cref="P:System.Console.Out" />
        <altmember cref="P:System.Console.IsErrorRedirected" />
        <altmember cref="M:System.Console.SetError(System.IO.TextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="ForegroundColor">
      <MemberSignature Language="C#" Value="public static ConsoleColor ForegroundColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.ConsoleColor ForegroundColor" />
      <MemberSignature Language="DocId" Value="P:System.Console.ForegroundColor" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property ForegroundColor As ConsoleColor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property ConsoleColor ForegroundColor { ConsoleColor get(); void set(ConsoleColor value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ConsoleColor</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1900a-381">Возвращает или задает цвет фона консоли.</span><span class="sxs-lookup"><span data-stu-id="1900a-381">Gets or sets the foreground color of the console.</span></span></summary>
        <value><span data-ttu-id="1900a-382">Значение из перечисления <see cref="T:System.ConsoleColor" />, задающее цвет переднего плана консоли, то есть цвет, которым выводятся символы.</span><span class="sxs-lookup"><span data-stu-id="1900a-382">A <see cref="T:System.ConsoleColor" /> that specifies the foreground color of the console; that is, the color of each character that is displayed.</span></span> <span data-ttu-id="1900a-383">По умолчанию задано значение Gray.</span><span class="sxs-lookup"><span data-stu-id="1900a-383">The default is gray.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1900a-384">Операция получения для приложения Windows, в котором консоли не существует, возвращает <xref:System.ConsoleColor.Gray>.</span><span class="sxs-lookup"><span data-stu-id="1900a-384">A get operation for a Windows-based application, in which a console does not exist, returns <xref:System.ConsoleColor.Gray>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1900a-385">В следующем примере проверяется, является ли цвет фона консоли черный, и если это так, он изменяет цвет фона на красный и черный цвет переднего плана.</span><span class="sxs-lookup"><span data-stu-id="1900a-385">The following example checks whether the console's background color is black and, if it is, it changes the background color to red and the foreground color to black.</span></span>  
  
 [!code-csharp[System.ConsoleColor#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.consolecolor/cs/Example2.cs#2)] 
 [!code-vb[System.ConsoleColor#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.consolecolor/vb/Example2.vb#2)]  
  
 <span data-ttu-id="1900a-386">Следующий пример сохраняет значения <xref:System.ConsoleColor> перечисления в массив и сохраняет текущие значения <xref:System.Console.BackgroundColor%2A> и <xref:System.Console.ForegroundColor%2A> свойства к переменным.</span><span class="sxs-lookup"><span data-stu-id="1900a-386">The following example saves the values of the <xref:System.ConsoleColor> enumeration to an array and stores the current values of the <xref:System.Console.BackgroundColor%2A> and <xref:System.Console.ForegroundColor%2A> properties to variables.</span></span> <span data-ttu-id="1900a-387">Затем изменяет цвет переднего плана для каждого цвета в <xref:System.ConsoleColor> перечисление, за исключением того, как цвет, соответствующий текущий фоновый рисунок и он изменяет цвет фона для каждого цвета в <xref:System.ConsoleColor> перечисление, за исключением того, цвет, который соответствует текущий переднего плана.</span><span class="sxs-lookup"><span data-stu-id="1900a-387">It then changes the foreground color to each color in the <xref:System.ConsoleColor> enumeration except to the color that matches the current background, and it changes the background color to each color in the <xref:System.ConsoleColor> enumeration except to the color that matches the current foreground.</span></span> <span data-ttu-id="1900a-388">(Если цвет совпадает с цветом фона, текст не отображается.) Наконец, он вызывает <xref:System.Console.ResetColor%2A> метод восстановления исходного цвета консоли.</span><span class="sxs-lookup"><span data-stu-id="1900a-388">(If the foreground color is the same as the background color, the text isn't visible.) Finally, it calls the <xref:System.Console.ResetColor%2A> method to restore the original console colors.</span></span>  
  
 [!code-csharp[System.ConsoleColor#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.consolecolor/cs/foregroundcolor3.cs#1)]
 [!code-vb[System.ConsoleColor#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.consolecolor/vb/foregroundcolor3.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1900a-389">Цвет, указанный в операции SET, не является допустимым членом <see cref="T:System.ConsoleColor" />.</span><span class="sxs-lookup"><span data-stu-id="1900a-389">The color specified in a set operation is not a valid member of <see cref="T:System.ConsoleColor" />.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="1900a-390">Пользователь не имеет разрешений на выполнение этого действия.</span><span class="sxs-lookup"><span data-stu-id="1900a-390">The user does not have permission to perform this action.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1900a-391">Ошибка ввода/вывода.</span><span class="sxs-lookup"><span data-stu-id="1900a-391">An I/O error occurred.</span></span></exception>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="1900a-392">для изменения безопасных окон верхнего уровня и дочерние окна.</span><span class="sxs-lookup"><span data-stu-id="1900a-392">for modifying safe top-level windows and subwindows.</span></span> <span data-ttu-id="1900a-393">Связанное перечисление: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span><span class="sxs-lookup"><span data-stu-id="1900a-393">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="In">
      <MemberSignature Language="C#" Value="public static System.IO.TextReader In { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.IO.TextReader In" />
      <MemberSignature Language="DocId" Value="P:System.Console.In" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property In As TextReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::IO::TextReader ^ In { System::IO::TextReader ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.TextReader</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1900a-394">Возвращает стандартный входной поток.</span><span class="sxs-lookup"><span data-stu-id="1900a-394">Gets the standard input stream.</span></span></summary>
        <value><span data-ttu-id="1900a-395">Объект <see cref="T:System.IO.TextReader" />, представляющий стандартный входной поток.</span><span class="sxs-lookup"><span data-stu-id="1900a-395">A <see cref="T:System.IO.TextReader" /> that represents the standard input stream.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1900a-396">Этому свойству присвоено стандартный входной поток по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="1900a-396">This property is set to the standard input stream by default.</span></span> <span data-ttu-id="1900a-397">Это свойство можно задать другой поток при помощи <xref:System.Console.SetIn%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="1900a-397">This property can be set to another stream with the <xref:System.Console.SetIn%2A> method.</span></span>  
  
 <span data-ttu-id="1900a-398">Операции чтения на стандартный входной поток выполняются синхронно.</span><span class="sxs-lookup"><span data-stu-id="1900a-398">Read operations on the standard input stream execute synchronously.</span></span> <span data-ttu-id="1900a-399">То есть они заблокирован до завершения указанной операции чтения.</span><span class="sxs-lookup"><span data-stu-id="1900a-399">That is, they block until the specified read operation has completed.</span></span> <span data-ttu-id="1900a-400">Это верно даже если асинхронный метод, такой как <xref:System.IO.TextReader.ReadLineAsync%2A>, будет вызван на <xref:System.IO.TextReader> объект, возвращаемый <xref:System.Console.In%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="1900a-400">This is true even if an asynchronous method, such as <xref:System.IO.TextReader.ReadLineAsync%2A>, is called on the <xref:System.IO.TextReader> object returned by the <xref:System.Console.In%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1900a-401">Следующий пример иллюстрирует использование `In` свойство.</span><span class="sxs-lookup"><span data-stu-id="1900a-401">The following sample illustrates the use of the `In` property.</span></span>  
  
 [!code-cpp[consolein#1](~/samples/snippets/cpp/VS_Snippets_CLR/consolein/CPP/consolein.cpp#1)]
 [!code-csharp[consolein#1](~/samples/snippets/csharp/VS_Snippets_CLR/consolein/CS/consolein.cs#1)]
 [!code-vb[consolein#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/consolein/VB/consolein.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Console.OpenStandardInput" />
        <altmember cref="P:System.Console.IsInputRedirected" />
        <altmember cref="P:System.Console.Error" />
        <altmember cref="P:System.Console.Out" />
        <altmember cref="M:System.Console.SetIn(System.IO.TextReader)" />
      </Docs>
    </Member>
    <Member MemberName="InputEncoding">
      <MemberSignature Language="C#" Value="public static System.Text.Encoding InputEncoding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Text.Encoding InputEncoding" />
      <MemberSignature Language="DocId" Value="P:System.Console.InputEncoding" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property InputEncoding As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Text::Encoding ^ InputEncoding { System::Text::Encoding ^ get(); void set(System::Text::Encoding ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1900a-402">Возвращает или задает кодировку консоли, используемую при чтении входных данных.</span><span class="sxs-lookup"><span data-stu-id="1900a-402">Gets or sets the encoding the console uses to read input.</span></span></summary>
        <value><span data-ttu-id="1900a-403">Кодировка консоли, используемая при чтении ввода.</span><span class="sxs-lookup"><span data-stu-id="1900a-403">The encoding used to read console input.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1900a-404">Консоль использует кодировку ввода для преобразования ввода с клавиатуры в соответствующий символ.</span><span class="sxs-lookup"><span data-stu-id="1900a-404">The console uses the input encoding to translate keyboard input into a corresponding character.</span></span> <span data-ttu-id="1900a-405">Кодировка ввода включает кодовую страницу, которая сопоставляет 256 кодов клавиш к отдельным символам.</span><span class="sxs-lookup"><span data-stu-id="1900a-405">The input encoding incorporates a code page that maps 256 keyboard character codes to individual characters.</span></span> <span data-ttu-id="1900a-406">Разные кодовые страницы включают разные специальные символы, как правило, настроенные для языка или группы языков.</span><span class="sxs-lookup"><span data-stu-id="1900a-406">Different code pages include different special characters, typically customized for a language or a group of languages.</span></span>  
  
 <span data-ttu-id="1900a-407">Начиная с [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], операция получения свойства могут возвращать кэшированное значение, а не на консоль текущей кодировки входных данных.</span><span class="sxs-lookup"><span data-stu-id="1900a-407">Starting with the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], a property get operation may return a cached value instead of the console's current input encoding.</span></span> <span data-ttu-id="1900a-408">Это может произойти, если значение <xref:System.Console.InputEncoding%2A> свойство изменяется каким-либо образом, отличные от присвоения <xref:System.Console.InputEncoding%2A> свойства, например вызов Windows `SetConsoleCP` или с помощью `chcp` из сценария PowerShell.</span><span class="sxs-lookup"><span data-stu-id="1900a-408">This can occur if the value of the <xref:System.Console.InputEncoding%2A> property is modified by some means other than an assignment to the <xref:System.Console.InputEncoding%2A> property, such as calling the Windows `SetConsoleCP` function or using the `chcp` command from a PowerShell script.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1900a-409">Значение свойства в операции задания — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="1900a-409">The property value in a set operation is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1900a-410">Во время выполнения этой операции произошла ошибка.</span><span class="sxs-lookup"><span data-stu-id="1900a-410">An error occurred during the execution of this operation.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="1900a-411">У приложения нет разрешения на выполнение этой операции.</span><span class="sxs-lookup"><span data-stu-id="1900a-411">Your application does not have permission to perform this operation.</span></span></exception>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="1900a-412">для чтения и записи окон верхнего уровня и дочерние окна.</span><span class="sxs-lookup"><span data-stu-id="1900a-412">for reading and writing to top-level windows and subwindows.</span></span> <span data-ttu-id="1900a-413">Связанное перечисление: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span><span class="sxs-lookup"><span data-stu-id="1900a-413">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span></span></permission>
        <altmember cref="T:System.Text.Encoding" />
      </Docs>
    </Member>
    <Member MemberName="IsErrorRedirected">
      <MemberSignature Language="C#" Value="public static bool IsErrorRedirected { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool IsErrorRedirected" />
      <MemberSignature Language="DocId" Value="P:System.Console.IsErrorRedirected" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property IsErrorRedirected As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool IsErrorRedirected { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1900a-414">Получает значение, показывающее, был ли перенаправлен выходной поток ошибок от стандартного потока ошибок.</span><span class="sxs-lookup"><span data-stu-id="1900a-414">Gets a value that indicates whether the error output stream has been redirected from the standard error stream.</span></span></summary>
        <value>
          <span data-ttu-id="1900a-415">Значение <see langword="true" />, если выходные сообщения об ошибках перенаправляются; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="1900a-415"><see langword="true" /> if error output is redirected; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Console.Error" />
        <altmember cref="M:System.Console.SetError(System.IO.TextWriter)" />
        <altmember cref="M:System.Console.OpenStandardError" />
      </Docs>
    </Member>
    <Member MemberName="IsInputRedirected">
      <MemberSignature Language="C#" Value="public static bool IsInputRedirected { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool IsInputRedirected" />
      <MemberSignature Language="DocId" Value="P:System.Console.IsInputRedirected" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property IsInputRedirected As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool IsInputRedirected { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1900a-416">Получает значение, показывающее, был ли перенаправлены ли входные данные от стандартного входного потока.</span><span class="sxs-lookup"><span data-stu-id="1900a-416">Gets a value that indicates whether input has been redirected from the standard input stream.</span></span></summary>
        <value>
          <span data-ttu-id="1900a-417">Значение <see langword="true" />, если входные данные перенаправляются; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="1900a-417"><see langword="true" /> if input is redirected; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Console.In" />
        <altmember cref="M:System.Console.SetIn(System.IO.TextReader)" />
        <altmember cref="M:System.Console.OpenStandardInput" />
      </Docs>
    </Member>
    <Member MemberName="IsOutputRedirected">
      <MemberSignature Language="C#" Value="public static bool IsOutputRedirected { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool IsOutputRedirected" />
      <MemberSignature Language="DocId" Value="P:System.Console.IsOutputRedirected" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property IsOutputRedirected As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool IsOutputRedirected { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1900a-418">Получает значение, показывающее, был ли перенаправлены выходные данные от стандартного выходного потока.</span><span class="sxs-lookup"><span data-stu-id="1900a-418">Gets a value that indicates whether output has been redirected from the standard output stream.</span></span></summary>
        <value>
          <span data-ttu-id="1900a-419">Значение <see langword="true" />, если выходные данные перенаправляются; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="1900a-419"><see langword="true" /> if output is redirected; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Console.Out" />
        <altmember cref="M:System.Console.SetOut(System.IO.TextWriter)" />
        <altmember cref="M:System.Console.OpenStandardError" />
      </Docs>
    </Member>
    <Member MemberName="KeyAvailable">
      <MemberSignature Language="C#" Value="public static bool KeyAvailable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool KeyAvailable" />
      <MemberSignature Language="DocId" Value="P:System.Console.KeyAvailable" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property KeyAvailable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool KeyAvailable { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1900a-420">Возвращает или задает значение, указывающее, доступно ли нажатие клавиши во входном потоке.</span><span class="sxs-lookup"><span data-stu-id="1900a-420">Gets a value indicating whether a key press is available in the input stream.</span></span></summary>
        <value>
          <span data-ttu-id="1900a-421">Значение <see langword="true" />, если нажатие клавиши доступно; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="1900a-421"><see langword="true" /> if a key press is available; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1900a-422">Значение свойства возвращается немедленно; то есть <xref:System.Console.KeyAvailable%2A> свойства не блокируется входных данных до нажатие клавиши доступно.</span><span class="sxs-lookup"><span data-stu-id="1900a-422">The property value is returned immediately; that is, the <xref:System.Console.KeyAvailable%2A> property does not block input until a key press is available.</span></span>  
  
 <span data-ttu-id="1900a-423">Используйте <xref:System.Console.KeyAvailable%2A> свойства в сочетании с единственным <xref:System.Console.ReadKey%2A> метода, не <xref:System.Console.Read%2A> или <xref:System.Console.ReadLine%2A> методы.</span><span class="sxs-lookup"><span data-stu-id="1900a-423">Use the <xref:System.Console.KeyAvailable%2A> property in conjunction with only the <xref:System.Console.ReadKey%2A> method, not the <xref:System.Console.Read%2A> or <xref:System.Console.ReadLine%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1900a-424">В следующем примере демонстрируется использование <xref:System.Console.KeyAvailable%2A> свойством, чтобы создать цикл, который выполняется, пока не нажата клавиша.</span><span class="sxs-lookup"><span data-stu-id="1900a-424">The following example demonstrates how to use the <xref:System.Console.KeyAvailable%2A> property to create a loop that runs until a key is pressed.</span></span>  
  
 [!code-cpp[console.keyavailable#1](~/samples/snippets/cpp/VS_Snippets_CLR/console.keyavailable/CPP/ka.cpp#1)]
 [!code-csharp[console.keyavailable#1](~/samples/snippets/csharp/VS_Snippets_CLR/console.keyavailable/CS/ka.cs#1)]
 [!code-vb[console.keyavailable#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/console.keyavailable/VB/ka.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1900a-425">Ошибка ввода/вывода.</span><span class="sxs-lookup"><span data-stu-id="1900a-425">An I/O error occurred.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="1900a-426">Стандартный ввод перенаправляется в файл вместо клавиатуры.</span><span class="sxs-lookup"><span data-stu-id="1900a-426">Standard input is redirected to a file instead of the keyboard.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="LargestWindowHeight">
      <MemberSignature Language="C#" Value="public static int LargestWindowHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 LargestWindowHeight" />
      <MemberSignature Language="DocId" Value="P:System.Console.LargestWindowHeight" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property LargestWindowHeight As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int LargestWindowHeight { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1900a-427">Возвращает максимальное число строк окна консоли с учетом текущего шрифта и разрешения экрана.</span><span class="sxs-lookup"><span data-stu-id="1900a-427">Gets the largest possible number of console window rows, based on the current font and screen resolution.</span></span></summary>
        <value><span data-ttu-id="1900a-428">Максимально возможная высота окна консоли измеряется в строках.</span><span class="sxs-lookup"><span data-stu-id="1900a-428">The height of the largest possible console window measured in rows.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LargestWindowWidth">
      <MemberSignature Language="C#" Value="public static int LargestWindowWidth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 LargestWindowWidth" />
      <MemberSignature Language="DocId" Value="P:System.Console.LargestWindowWidth" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property LargestWindowWidth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int LargestWindowWidth { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1900a-429">Возвращает максимальное число столбцов окна консоли с учетом текущего шрифта и разрешения экрана.</span><span class="sxs-lookup"><span data-stu-id="1900a-429">Gets the largest possible number of console window columns, based on the current font and screen resolution.</span></span></summary>
        <value><span data-ttu-id="1900a-430">Максимально возможная ширина окна консоли измеряется в столбцах.</span><span class="sxs-lookup"><span data-stu-id="1900a-430">The width of the largest possible console window measured in columns.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="MoveBufferArea">
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="1900a-431">Копирует заданную исходную область буфера экрана в заданную область назначения.</span><span class="sxs-lookup"><span data-stu-id="1900a-431">Copies a specified source area of the screen buffer to a specified destination area.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="MoveBufferArea">
      <MemberSignature Language="C#" Value="public static void MoveBufferArea (int sourceLeft, int sourceTop, int sourceWidth, int sourceHeight, int targetLeft, int targetTop);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MoveBufferArea(int32 sourceLeft, int32 sourceTop, int32 sourceWidth, int32 sourceHeight, int32 targetLeft, int32 targetTop) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub MoveBufferArea (sourceLeft As Integer, sourceTop As Integer, sourceWidth As Integer, sourceHeight As Integer, targetLeft As Integer, targetTop As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void MoveBufferArea(int sourceLeft, int sourceTop, int sourceWidth, int sourceHeight, int targetLeft, int targetTop);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceLeft" Type="System.Int32" />
        <Parameter Name="sourceTop" Type="System.Int32" />
        <Parameter Name="sourceWidth" Type="System.Int32" />
        <Parameter Name="sourceHeight" Type="System.Int32" />
        <Parameter Name="targetLeft" Type="System.Int32" />
        <Parameter Name="targetTop" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="sourceLeft"><span data-ttu-id="1900a-432">Крайний слева столбец исходной области.</span><span class="sxs-lookup"><span data-stu-id="1900a-432">The leftmost column of the source area.</span></span></param>
        <param name="sourceTop"><span data-ttu-id="1900a-433">Самая верхняя строка исходной области.</span><span class="sxs-lookup"><span data-stu-id="1900a-433">The topmost row of the source area.</span></span></param>
        <param name="sourceWidth"><span data-ttu-id="1900a-434">Общее число столбцов в исходной области.</span><span class="sxs-lookup"><span data-stu-id="1900a-434">The number of columns in the source area.</span></span></param>
        <param name="sourceHeight"><span data-ttu-id="1900a-435">Общее число строк в исходной области.</span><span class="sxs-lookup"><span data-stu-id="1900a-435">The number of rows in the source area.</span></span></param>
        <param name="targetLeft"><span data-ttu-id="1900a-436">Крайний слева столбец области назначения.</span><span class="sxs-lookup"><span data-stu-id="1900a-436">The leftmost column of the destination area.</span></span></param>
        <param name="targetTop"><span data-ttu-id="1900a-437">Самая верхняя строка области назначения.</span><span class="sxs-lookup"><span data-stu-id="1900a-437">The topmost row of the destination area.</span></span></param>
        <summary><span data-ttu-id="1900a-438">Копирует заданную исходную область буфера экрана в заданную область назначения.</span><span class="sxs-lookup"><span data-stu-id="1900a-438">Copies a specified source area of the screen buffer to a specified destination area.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1900a-439">Если параметры источника и назначения задают позицию за границами текущего буфера экрана, копируется только часть исходной области, которая помещается в область назначения.</span><span class="sxs-lookup"><span data-stu-id="1900a-439">If the destination and source parameters specify a position located outside the boundaries of the current screen buffer, only the portion of the source area that fits within the destination area is copied.</span></span> <span data-ttu-id="1900a-440">То есть исходная область обрезается по размеру текущего буфера экрана.</span><span class="sxs-lookup"><span data-stu-id="1900a-440">That is, the source area is clipped to fit the current screen buffer.</span></span>  
  
 <span data-ttu-id="1900a-441"><xref:System.Console.MoveBufferArea%2A> Копирует исходной области в области назначения.</span><span class="sxs-lookup"><span data-stu-id="1900a-441">The <xref:System.Console.MoveBufferArea%2A> method copies the source area to the destination area.</span></span> <span data-ttu-id="1900a-442">Область назначения не пересекается с исходной областью, исходная область заполняется пробелами с использованием текущих цветов переднего плана и фона.</span><span class="sxs-lookup"><span data-stu-id="1900a-442">If the destination area does not intersect the source area, the source area is filled with blanks using the current foreground and background colors.</span></span> <span data-ttu-id="1900a-443">В противном случае пересекаемых часть исходной области не заполняется.</span><span class="sxs-lookup"><span data-stu-id="1900a-443">Otherwise, the intersected portion of the source area is not filled.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="1900a-444">Один или несколько параметров имеют значение меньше нуля.</span><span class="sxs-lookup"><span data-stu-id="1900a-444">One or more of the parameters is less than zero.</span></span>  
  
 <span data-ttu-id="1900a-445">- или -</span><span class="sxs-lookup"><span data-stu-id="1900a-445">-or-</span></span>  
  
 <span data-ttu-id="1900a-446">Параметр <paramref name="sourceLeft" /> или <paramref name="targetLeft" /> больше или равен <see cref="P:System.Console.BufferWidth" />.</span><span class="sxs-lookup"><span data-stu-id="1900a-446"><paramref name="sourceLeft" /> or <paramref name="targetLeft" /> is greater than or equal to <see cref="P:System.Console.BufferWidth" />.</span></span>  
  
 <span data-ttu-id="1900a-447">- или -</span><span class="sxs-lookup"><span data-stu-id="1900a-447">-or-</span></span>  
  
 <span data-ttu-id="1900a-448">Параметр <paramref name="sourceTop" /> или <paramref name="targetTop" /> больше или равен <see cref="P:System.Console.BufferHeight" />.</span><span class="sxs-lookup"><span data-stu-id="1900a-448"><paramref name="sourceTop" /> or <paramref name="targetTop" /> is greater than or equal to <see cref="P:System.Console.BufferHeight" />.</span></span>  
  
 <span data-ttu-id="1900a-449">- или -</span><span class="sxs-lookup"><span data-stu-id="1900a-449">-or-</span></span>  
  
 <span data-ttu-id="1900a-450"><paramref name="sourceTop" /> + <paramref name="sourceHeight" /> больше или равно <see cref="P:System.Console.BufferHeight" />.</span><span class="sxs-lookup"><span data-stu-id="1900a-450"><paramref name="sourceTop" /> + <paramref name="sourceHeight" /> is greater than or equal to <see cref="P:System.Console.BufferHeight" />.</span></span>  
  
 <span data-ttu-id="1900a-451">- или -</span><span class="sxs-lookup"><span data-stu-id="1900a-451">-or-</span></span>  
  
 <span data-ttu-id="1900a-452"><paramref name="sourceLeft" /> + <paramref name="sourceWidth" /> больше или равно <see cref="P:System.Console.BufferWidth" />.</span><span class="sxs-lookup"><span data-stu-id="1900a-452"><paramref name="sourceLeft" /> + <paramref name="sourceWidth" /> is greater than or equal to <see cref="P:System.Console.BufferWidth" />.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="1900a-453">Пользователь не имеет разрешений на выполнение этого действия.</span><span class="sxs-lookup"><span data-stu-id="1900a-453">The user does not have permission to perform this action.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1900a-454">Ошибка ввода/вывода.</span><span class="sxs-lookup"><span data-stu-id="1900a-454">An I/O error occurred.</span></span></exception>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="1900a-455">для изменения безопасных окон верхнего уровня и дочерние окна.</span><span class="sxs-lookup"><span data-stu-id="1900a-455">for modifying safe top-level windows and subwindows.</span></span> <span data-ttu-id="1900a-456">Связанное перечисление: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span><span class="sxs-lookup"><span data-stu-id="1900a-456">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="MoveBufferArea">
      <MemberSignature Language="C#" Value="public static void MoveBufferArea (int sourceLeft, int sourceTop, int sourceWidth, int sourceHeight, int targetLeft, int targetTop, char sourceChar, ConsoleColor sourceForeColor, ConsoleColor sourceBackColor);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MoveBufferArea(int32 sourceLeft, int32 sourceTop, int32 sourceWidth, int32 sourceHeight, int32 targetLeft, int32 targetTop, char sourceChar, valuetype System.ConsoleColor sourceForeColor, valuetype System.ConsoleColor sourceBackColor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Char,System.ConsoleColor,System.ConsoleColor)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub MoveBufferArea (sourceLeft As Integer, sourceTop As Integer, sourceWidth As Integer, sourceHeight As Integer, targetLeft As Integer, targetTop As Integer, sourceChar As Char, sourceForeColor As ConsoleColor, sourceBackColor As ConsoleColor)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void MoveBufferArea(int sourceLeft, int sourceTop, int sourceWidth, int sourceHeight, int targetLeft, int targetTop, char sourceChar, ConsoleColor sourceForeColor, ConsoleColor sourceBackColor);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceLeft" Type="System.Int32" />
        <Parameter Name="sourceTop" Type="System.Int32" />
        <Parameter Name="sourceWidth" Type="System.Int32" />
        <Parameter Name="sourceHeight" Type="System.Int32" />
        <Parameter Name="targetLeft" Type="System.Int32" />
        <Parameter Name="targetTop" Type="System.Int32" />
        <Parameter Name="sourceChar" Type="System.Char" />
        <Parameter Name="sourceForeColor" Type="System.ConsoleColor" />
        <Parameter Name="sourceBackColor" Type="System.ConsoleColor" />
      </Parameters>
      <Docs>
        <param name="sourceLeft"><span data-ttu-id="1900a-457">Крайний слева столбец исходной области.</span><span class="sxs-lookup"><span data-stu-id="1900a-457">The leftmost column of the source area.</span></span></param>
        <param name="sourceTop"><span data-ttu-id="1900a-458">Самая верхняя строка исходной области.</span><span class="sxs-lookup"><span data-stu-id="1900a-458">The topmost row of the source area.</span></span></param>
        <param name="sourceWidth"><span data-ttu-id="1900a-459">Общее число столбцов в исходной области.</span><span class="sxs-lookup"><span data-stu-id="1900a-459">The number of columns in the source area.</span></span></param>
        <param name="sourceHeight"><span data-ttu-id="1900a-460">Общее число строк в исходной области.</span><span class="sxs-lookup"><span data-stu-id="1900a-460">The number of rows in the source area.</span></span></param>
        <param name="targetLeft"><span data-ttu-id="1900a-461">Крайний слева столбец области назначения.</span><span class="sxs-lookup"><span data-stu-id="1900a-461">The leftmost column of the destination area.</span></span></param>
        <param name="targetTop"><span data-ttu-id="1900a-462">Самая верхняя строка области назначения.</span><span class="sxs-lookup"><span data-stu-id="1900a-462">The topmost row of the destination area.</span></span></param>
        <param name="sourceChar"><span data-ttu-id="1900a-463">Символ, используемый для заполнения исходной области.</span><span class="sxs-lookup"><span data-stu-id="1900a-463">The character used to fill the source area.</span></span></param>
        <param name="sourceForeColor"><span data-ttu-id="1900a-464">Цвет переднего плана, используемый для заполнения исходной области.</span><span class="sxs-lookup"><span data-stu-id="1900a-464">The foreground color used to fill the source area.</span></span></param>
        <param name="sourceBackColor"><span data-ttu-id="1900a-465">Цвет фона, используемый для заполнения исходной области.</span><span class="sxs-lookup"><span data-stu-id="1900a-465">The background color used to fill the source area.</span></span></param>
        <summary><span data-ttu-id="1900a-466">Копирует заданную исходную область буфера экрана в заданную область назначения.</span><span class="sxs-lookup"><span data-stu-id="1900a-466">Copies a specified source area of the screen buffer to a specified destination area.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1900a-467">Если параметры источника и назначения задают позицию за границами текущего буфера экрана, копируется только часть исходной области, которая помещается в область назначения.</span><span class="sxs-lookup"><span data-stu-id="1900a-467">If the destination and source parameters specify a position located beyond the boundaries of the current screen buffer, only the portion of the source area that fits within the destination area is copied.</span></span> <span data-ttu-id="1900a-468">То есть исходная область обрезается по размеру текущего буфера экрана.</span><span class="sxs-lookup"><span data-stu-id="1900a-468">That is, the source area is clipped to fit the current screen buffer.</span></span>  
  
 <span data-ttu-id="1900a-469"><xref:System.Console.MoveBufferArea%2A> Копирует исходной области в области назначения.</span><span class="sxs-lookup"><span data-stu-id="1900a-469">The <xref:System.Console.MoveBufferArea%2A> method copies the source area to the destination area.</span></span> <span data-ttu-id="1900a-470">Если область назначения не пересекается с исходной областью, исходная область заполняется символ, указанный `sourceChar`, с помощью цвета, определяемые `sourceForeColor` и `sourceBackColor`.</span><span class="sxs-lookup"><span data-stu-id="1900a-470">If the destination area does not intersect the source area, the source area is filled with the character specified by `sourceChar`, using the colors specified by `sourceForeColor` and `sourceBackColor`.</span></span> <span data-ttu-id="1900a-471">В противном случае пересекаемых часть исходной области не заполняется.</span><span class="sxs-lookup"><span data-stu-id="1900a-471">Otherwise, the intersected portion of the source area is not filled.</span></span>  
  
 <span data-ttu-id="1900a-472"><xref:System.Console.MoveBufferArea%2A> Метод не выполняет никаких действий при `sourceWidth` или `sourceHeight` равно нулю.</span><span class="sxs-lookup"><span data-stu-id="1900a-472">The <xref:System.Console.MoveBufferArea%2A> method performs no operation if `sourceWidth` or `sourceHeight` is zero.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="1900a-473">Один или несколько параметров имеют значение меньше нуля.</span><span class="sxs-lookup"><span data-stu-id="1900a-473">One or more of the parameters is less than zero.</span></span>  
  
 <span data-ttu-id="1900a-474">- или -</span><span class="sxs-lookup"><span data-stu-id="1900a-474">-or-</span></span>  
  
 <span data-ttu-id="1900a-475">Параметр <paramref name="sourceLeft" /> или <paramref name="targetLeft" /> больше или равен <see cref="P:System.Console.BufferWidth" />.</span><span class="sxs-lookup"><span data-stu-id="1900a-475"><paramref name="sourceLeft" /> or <paramref name="targetLeft" /> is greater than or equal to <see cref="P:System.Console.BufferWidth" />.</span></span>  
  
 <span data-ttu-id="1900a-476">- или -</span><span class="sxs-lookup"><span data-stu-id="1900a-476">-or-</span></span>  
  
 <span data-ttu-id="1900a-477">Параметр <paramref name="sourceTop" /> или <paramref name="targetTop" /> больше или равен <see cref="P:System.Console.BufferHeight" />.</span><span class="sxs-lookup"><span data-stu-id="1900a-477"><paramref name="sourceTop" /> or <paramref name="targetTop" /> is greater than or equal to <see cref="P:System.Console.BufferHeight" />.</span></span>  
  
 <span data-ttu-id="1900a-478">- или -</span><span class="sxs-lookup"><span data-stu-id="1900a-478">-or-</span></span>  
  
 <span data-ttu-id="1900a-479"><paramref name="sourceTop" /> + <paramref name="sourceHeight" /> больше или равно <see cref="P:System.Console.BufferHeight" />.</span><span class="sxs-lookup"><span data-stu-id="1900a-479"><paramref name="sourceTop" /> + <paramref name="sourceHeight" /> is greater than or equal to <see cref="P:System.Console.BufferHeight" />.</span></span>  
  
 <span data-ttu-id="1900a-480">- или -</span><span class="sxs-lookup"><span data-stu-id="1900a-480">-or-</span></span>  
  
 <span data-ttu-id="1900a-481"><paramref name="sourceLeft" /> + <paramref name="sourceWidth" /> больше или равно <see cref="P:System.Console.BufferWidth" />.</span><span class="sxs-lookup"><span data-stu-id="1900a-481"><paramref name="sourceLeft" /> + <paramref name="sourceWidth" /> is greater than or equal to <see cref="P:System.Console.BufferWidth" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1900a-482">Один или более параметров цвета не являются членами перечисления <see cref="T:System.ConsoleColor" />.</span><span class="sxs-lookup"><span data-stu-id="1900a-482">One or both of the color parameters is not a member of the <see cref="T:System.ConsoleColor" /> enumeration.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="1900a-483">Пользователь не имеет разрешений на выполнение этого действия.</span><span class="sxs-lookup"><span data-stu-id="1900a-483">The user does not have permission to perform this action.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1900a-484">Ошибка ввода/вывода.</span><span class="sxs-lookup"><span data-stu-id="1900a-484">An I/O error occurred.</span></span></exception>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="1900a-485">для изменения безопасных окон верхнего уровня и дочерние окна.</span><span class="sxs-lookup"><span data-stu-id="1900a-485">for modifying safe top-level windows and subwindows.</span></span> <span data-ttu-id="1900a-486">Связанное перечисление: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span><span class="sxs-lookup"><span data-stu-id="1900a-486">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="NumberLock">
      <MemberSignature Language="C#" Value="public static bool NumberLock { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool NumberLock" />
      <MemberSignature Language="DocId" Value="P:System.Console.NumberLock" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property NumberLock As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool NumberLock { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1900a-487">Возвращает значение, указывающее, включен или отключен режим NUM LOCK клавиатуры.</span><span class="sxs-lookup"><span data-stu-id="1900a-487">Gets a value indicating whether the NUM LOCK keyboard toggle is turned on or turned off.</span></span></summary>
        <value>
          <span data-ttu-id="1900a-488">Значение <see langword="true" />, если клавиша NUM LOCK включена; значение <see langword="false" />, если клавиша NUM LOCK выключена.</span><span class="sxs-lookup"><span data-stu-id="1900a-488"><see langword="true" /> if NUM LOCK is turned on; <see langword="false" /> if NUM LOCK is turned off.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="OpenStandardError">
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="1900a-489">Получает стандартный поток сообщений об ошибках.</span><span class="sxs-lookup"><span data-stu-id="1900a-489">Acquires the standard error stream.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OpenStandardError">
      <MemberSignature Language="C#" Value="public static System.IO.Stream OpenStandardError ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Stream OpenStandardError() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.OpenStandardError" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenStandardError () As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Stream ^ OpenStandardError();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1900a-490">Получает стандартный поток сообщений об ошибках.</span><span class="sxs-lookup"><span data-stu-id="1900a-490">Acquires the standard error stream.</span></span></summary>
        <returns><span data-ttu-id="1900a-491">Стандартный поток сообщений об ошибках.</span><span class="sxs-lookup"><span data-stu-id="1900a-491">The standard error stream.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1900a-492">Этот метод может быть использован для повторного запроса стандартного потока ошибок после его изменения <xref:System.Console.SetError%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="1900a-492">This method can be used to reacquire the standard error stream after it has been changed by the <xref:System.Console.SetError%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1900a-493">Следующий пример является простым текстовым средство просмотра файлов, отображающее содержимое одного или нескольких текстовых файлов на консоль.</span><span class="sxs-lookup"><span data-stu-id="1900a-493">The following example is a simple text file viewer that displays the contents of one or more text files to the console.</span></span> <span data-ttu-id="1900a-494">Если аргументы командной строки, или если все файлы, передаваемые в качестве аргументов командной строки не существуют, в примере вызывается <xref:System.Console.SetError%2A> вызывает метод, чтобы перенаправить сведения об ошибке в файле <xref:System.Console.OpenStandardError%2A> метод в процессе повторного запроса в стандартную ошибку Указывает, что сведения об ошибке была записана в файл и потока.</span><span class="sxs-lookup"><span data-stu-id="1900a-494">If there are no command line arguments, or if any files passed as command line arguments do not exist, the example calls the <xref:System.Console.SetError%2A> method to redirect error information to a file, calls the <xref:System.Console.OpenStandardError%2A> method in the process of reacquiring the standard error stream, and indicates that error information was written to a file.</span></span>  
  
 [!code-csharp[System.Console.OpenStandardError#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.console.openstandarderror/cs/viewtextfile.cs#1)]
 [!code-vb[System.Console.OpenStandardError#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.console.openstandarderror/vb/viewtextfile.vb#1)]  
  
 <span data-ttu-id="1900a-495">Обратите внимание, что <xref:System.IO.StreamWriter.AutoFlush%2A?displayProperty=nameWithType> свойству `true` до повторного запроса в поток ошибок.</span><span class="sxs-lookup"><span data-stu-id="1900a-495">Note that the <xref:System.IO.StreamWriter.AutoFlush%2A?displayProperty=nameWithType> property is set to `true` before reacquiring the error stream.</span></span> <span data-ttu-id="1900a-496">Это гарантирует, что выходные данные будут быть немедленно выводятся на консоль, а не в буфер.</span><span class="sxs-lookup"><span data-stu-id="1900a-496">This ensures that output will be sent to the console immediately rather than buffered.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Console.Error" />
        <altmember cref="P:System.Console.IsErrorRedirected" />
        <altmember cref="M:System.Console.SetError(System.IO.TextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="OpenStandardError">
      <MemberSignature Language="C#" Value="public static System.IO.Stream OpenStandardError (int bufferSize);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Stream OpenStandardError(int32 bufferSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.OpenStandardError(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenStandardError (bufferSize As Integer) As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Stream ^ OpenStandardError(int bufferSize);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bufferSize" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bufferSize"><span data-ttu-id="1900a-497">Размер буфера внутреннего потока.</span><span class="sxs-lookup"><span data-stu-id="1900a-497">The internal stream buffer size.</span></span></param>
        <summary><span data-ttu-id="1900a-498">Получает стандартный поток сообщений об ошибках, для которого установлен заданный размер буфера.</span><span class="sxs-lookup"><span data-stu-id="1900a-498">Acquires the standard error stream, which is set to a specified buffer size.</span></span></summary>
        <returns><span data-ttu-id="1900a-499">Стандартный поток сообщений об ошибках.</span><span class="sxs-lookup"><span data-stu-id="1900a-499">The standard error stream.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1900a-500">Этот метод может быть использован для повторного запроса стандартного потока ошибок после его изменения <xref:System.Console.SetError%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="1900a-500">This method can be used to reacquire the standard error stream after it has been changed by the <xref:System.Console.SetError%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="1900a-501">Значение <paramref name="bufferSize" /> не больше нуля.</span><span class="sxs-lookup"><span data-stu-id="1900a-501"><paramref name="bufferSize" /> is less than or equal to zero.</span></span></exception>
        <altmember cref="P:System.Console.Error" />
        <altmember cref="P:System.Console.IsErrorRedirected" />
        <altmember cref="M:System.Console.SetError(System.IO.TextWriter)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="OpenStandardInput">
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="1900a-502">Получает стандартный входной поток.</span><span class="sxs-lookup"><span data-stu-id="1900a-502">Acquires the standard input stream.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OpenStandardInput">
      <MemberSignature Language="C#" Value="public static System.IO.Stream OpenStandardInput ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Stream OpenStandardInput() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.OpenStandardInput" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenStandardInput () As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Stream ^ OpenStandardInput();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1900a-503">Получает стандартный входной поток.</span><span class="sxs-lookup"><span data-stu-id="1900a-503">Acquires the standard input stream.</span></span></summary>
        <returns><span data-ttu-id="1900a-504">Стандартный входной поток.</span><span class="sxs-lookup"><span data-stu-id="1900a-504">The standard input stream.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1900a-505">Этот метод можно использовать для повторного запроса стандартного входного потока после его изменения <xref:System.Console.SetIn%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="1900a-505">This method can be used to reacquire the standard input stream after it has been changed by the <xref:System.Console.SetIn%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1900a-506">Следующий пример иллюстрирует использование `OpenStandardInput` свойство.</span><span class="sxs-lookup"><span data-stu-id="1900a-506">The following example illustrates the use of the `OpenStandardInput` property.</span></span>  
  
 [!code-cpp[System.Console.OpenStandartInput#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Console.OpenStandartInput/CPP/decode.cpp#1)]
 [!code-csharp[System.Console.OpenStandartInput#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console.OpenStandartInput/CS/decode.cs#1)]
 [!code-vb[System.Console.OpenStandartInput#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console.OpenStandartInput/VB/decode.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Console.In" />
        <altmember cref="P:System.Console.IsInputRedirected" />
        <altmember cref="M:System.Console.SetIn(System.IO.TextReader)" />
      </Docs>
    </Member>
    <Member MemberName="OpenStandardInput">
      <MemberSignature Language="C#" Value="public static System.IO.Stream OpenStandardInput (int bufferSize);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Stream OpenStandardInput(int32 bufferSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.OpenStandardInput(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenStandardInput (bufferSize As Integer) As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Stream ^ OpenStandardInput(int bufferSize);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bufferSize" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bufferSize"><span data-ttu-id="1900a-507">Размер буфера внутреннего потока.</span><span class="sxs-lookup"><span data-stu-id="1900a-507">The internal stream buffer size.</span></span></param>
        <summary><span data-ttu-id="1900a-508">Получает стандартный входной поток, для которого установлен заданный размер буфера.</span><span class="sxs-lookup"><span data-stu-id="1900a-508">Acquires the standard input stream, which is set to a specified buffer size.</span></span></summary>
        <returns><span data-ttu-id="1900a-509">Стандартный входной поток.</span><span class="sxs-lookup"><span data-stu-id="1900a-509">The standard input stream.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1900a-510">Этот метод может быть использован для повторного запроса в стандартный выходной поток после его изменения <xref:System.Console.SetIn%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="1900a-510">This method can be used to reacquire the standard output stream after it has been changed by the <xref:System.Console.SetIn%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1900a-511">Следующий пример иллюстрирует использование `OpenStandardInput` свойство.</span><span class="sxs-lookup"><span data-stu-id="1900a-511">The following example illustrates the use of the `OpenStandardInput` property.</span></span>  
  
 [!code-cpp[System.Console.OpenStandartInput#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Console.OpenStandartInput/CPP/decode.cpp#1)]
 [!code-csharp[System.Console.OpenStandartInput#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console.OpenStandartInput/CS/decode.cs#1)]
 [!code-vb[System.Console.OpenStandartInput#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console.OpenStandartInput/VB/decode.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="1900a-512">Значение <paramref name="bufferSize" /> не больше нуля.</span><span class="sxs-lookup"><span data-stu-id="1900a-512"><paramref name="bufferSize" /> is less than or equal to zero.</span></span></exception>
        <altmember cref="P:System.Console.In" />
        <altmember cref="P:System.Console.IsInputRedirected" />
        <altmember cref="M:System.Console.SetIn(System.IO.TextReader)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="OpenStandardOutput">
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="1900a-513">Получает стандартный выходной поток.</span><span class="sxs-lookup"><span data-stu-id="1900a-513">Acquires the standard output stream.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OpenStandardOutput">
      <MemberSignature Language="C#" Value="public static System.IO.Stream OpenStandardOutput ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Stream OpenStandardOutput() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.OpenStandardOutput" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenStandardOutput () As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Stream ^ OpenStandardOutput();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1900a-514">Получает стандартный выходной поток.</span><span class="sxs-lookup"><span data-stu-id="1900a-514">Acquires the standard output stream.</span></span></summary>
        <returns><span data-ttu-id="1900a-515">Стандартный выходной поток.</span><span class="sxs-lookup"><span data-stu-id="1900a-515">The standard output stream.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1900a-516">Этот метод может быть использован для повторного запроса в стандартный выходной поток после его изменения <xref:System.Console.SetOut%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="1900a-516">This method can be used to reacquire the standard output stream after it has been changed by the <xref:System.Console.SetOut%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1900a-517">В следующем примере показано использование метода <xref:System.Console.OpenStandardOutput%2A>.</span><span class="sxs-lookup"><span data-stu-id="1900a-517">The following example illustrates the use of the <xref:System.Console.OpenStandardOutput%2A> method.</span></span> <span data-ttu-id="1900a-518">Он заменяет 4 последовательных пробела в строке символом табуляции.</span><span class="sxs-lookup"><span data-stu-id="1900a-518">It replaces four consecutive space characters in a string with a tab character.</span></span> <span data-ttu-id="1900a-519">Чтобы запустить ее, необходимо указать два аргумента командной строки.</span><span class="sxs-lookup"><span data-stu-id="1900a-519">To run it, you must supply two command-line arguments.</span></span> <span data-ttu-id="1900a-520">Первый аргумент — это имя существующего текстового файла, в который требуется перенаправить стандартный входной поток.</span><span class="sxs-lookup"><span data-stu-id="1900a-520">The first is the name of an existing text file to redirect the standard input stream to.</span></span> <span data-ttu-id="1900a-521">Второй аргумент — это имя файла, в который требуется перенаправить стандартный выходной поток.</span><span class="sxs-lookup"><span data-stu-id="1900a-521">The second is the name of a file to redirect the standard output stream to.</span></span> <span data-ttu-id="1900a-522">Не требуется, чтобы этот файл существовал.</span><span class="sxs-lookup"><span data-stu-id="1900a-522">This file need not exist.</span></span> <span data-ttu-id="1900a-523">Если да, его содержимое будут перезаписано.</span><span class="sxs-lookup"><span data-stu-id="1900a-523">If it does, its contents will be overwritten.</span></span>  
  
 [!code-cpp[System.Console-INSERTTABS#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Console-INSERTTABS/CPP/inserttabs.cpp#1)]
 [!code-csharp[System.Console-INSERTTABS#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console-INSERTTABS/CS/inserttabs.cs#1)]
 [!code-vb[System.Console-INSERTTABS#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console-INSERTTABS/VB/inserttabs.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Console.Out" />
        <altmember cref="P:System.Console.IsOutputRedirected" />
        <altmember cref="M:System.Console.SetOut(System.IO.TextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="OpenStandardOutput">
      <MemberSignature Language="C#" Value="public static System.IO.Stream OpenStandardOutput (int bufferSize);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Stream OpenStandardOutput(int32 bufferSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.OpenStandardOutput(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenStandardOutput (bufferSize As Integer) As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Stream ^ OpenStandardOutput(int bufferSize);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bufferSize" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bufferSize"><span data-ttu-id="1900a-524">Размер буфера внутреннего потока.</span><span class="sxs-lookup"><span data-stu-id="1900a-524">The internal stream buffer size.</span></span></param>
        <summary><span data-ttu-id="1900a-525">Получает стандартный выходной поток, для которого установлен заданный размер буфера.</span><span class="sxs-lookup"><span data-stu-id="1900a-525">Acquires the standard output stream, which is set to a specified buffer size.</span></span></summary>
        <returns><span data-ttu-id="1900a-526">Стандартный выходной поток.</span><span class="sxs-lookup"><span data-stu-id="1900a-526">The standard output stream.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1900a-527">Этот метод может быть использован для повторного запроса в стандартный выходной поток после его изменения <xref:System.Console.SetOut%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="1900a-527">This method can be used to reacquire the standard output stream after it has been changed by the <xref:System.Console.SetOut%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1900a-528">В следующем примере показано использование метода <xref:System.Console.OpenStandardOutput%2A>.</span><span class="sxs-lookup"><span data-stu-id="1900a-528">The following example illustrates the use of the <xref:System.Console.OpenStandardOutput%2A> method.</span></span> <span data-ttu-id="1900a-529">Он заменяет 4 последовательных пробела в строке символом табуляции.</span><span class="sxs-lookup"><span data-stu-id="1900a-529">It replaces four consecutive space characters in a string with a tab character.</span></span> <span data-ttu-id="1900a-530">Чтобы запустить ее, необходимо указать два аргумента командной строки.</span><span class="sxs-lookup"><span data-stu-id="1900a-530">To run it, you must supply two command line arguments.</span></span> <span data-ttu-id="1900a-531">Первый аргумент — это имя существующего текстового файла, в который требуется перенаправить стандартный входной поток.</span><span class="sxs-lookup"><span data-stu-id="1900a-531">The first is the name of an existing text file to redirect the standard input stream to.</span></span> <span data-ttu-id="1900a-532">Второй аргумент — это имя файла, в который требуется перенаправить стандартный выходной поток.</span><span class="sxs-lookup"><span data-stu-id="1900a-532">The second is the name of a file to redirect the standard output stream to.</span></span> <span data-ttu-id="1900a-533">Не требуется, чтобы этот файл существовал.</span><span class="sxs-lookup"><span data-stu-id="1900a-533">This file need not exist.</span></span> <span data-ttu-id="1900a-534">Если да, его содержимое будут перезаписано.</span><span class="sxs-lookup"><span data-stu-id="1900a-534">If it does, its contents will be overwritten.</span></span>  
  
 [!code-cpp[System.Console-INSERTTABS#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Console-INSERTTABS/CPP/inserttabs.cpp#1)]
 [!code-csharp[System.Console-INSERTTABS#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console-INSERTTABS/CS/inserttabs.cs#1)]
 [!code-vb[System.Console-INSERTTABS#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console-INSERTTABS/VB/inserttabs.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="1900a-535">Значение <paramref name="bufferSize" /> не больше нуля.</span><span class="sxs-lookup"><span data-stu-id="1900a-535"><paramref name="bufferSize" /> is less than or equal to zero.</span></span></exception>
        <altmember cref="P:System.Console.Out" />
        <altmember cref="P:System.Console.IsOutputRedirected" />
        <altmember cref="M:System.Console.SetOut(System.IO.TextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="Out">
      <MemberSignature Language="C#" Value="public static System.IO.TextWriter Out { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.IO.TextWriter Out" />
      <MemberSignature Language="DocId" Value="P:System.Console.Out" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Out As TextWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::IO::TextWriter ^ Out { System::IO::TextWriter ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.TextWriter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1900a-536">Возвращает стандартный выходной поток.</span><span class="sxs-lookup"><span data-stu-id="1900a-536">Gets the standard output stream.</span></span></summary>
        <value><span data-ttu-id="1900a-537">Объект <see cref="T:System.IO.TextWriter" />, представляющий стандартный выходной поток.</span><span class="sxs-lookup"><span data-stu-id="1900a-537">A <see cref="T:System.IO.TextWriter" /> that represents the standard output stream.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1900a-538">Это свойство имеет значение в стандартный выходной поток по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="1900a-538">This property is set to the standard output stream by default.</span></span> <span data-ttu-id="1900a-539">Это свойство можно задать другой поток при помощи <xref:System.Console.SetOut%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="1900a-539">This property can be set to another stream with the <xref:System.Console.SetOut%2A> method.</span></span>  
  
 <span data-ttu-id="1900a-540">Обратите внимание, что вызовы `Console.Out.WriteLine` метода — вызовы в соответствующий <xref:System.Console.WriteLine%2A> методы.</span><span class="sxs-lookup"><span data-stu-id="1900a-540">Note that calls to `Console.Out.WriteLine` methods are equivalent to calls to the corresponding <xref:System.Console.WriteLine%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1900a-541">В следующем примере используется <xref:System.Console.Out%2A> свойство для отображения массив, содержащий имена файлов в текущем каталоге приложения, чтобы на стандартное устройство вывода.</span><span class="sxs-lookup"><span data-stu-id="1900a-541">The following example uses the <xref:System.Console.Out%2A> property to display an array containing the names of files in the application's current directory to the standard output device.</span></span> <span data-ttu-id="1900a-542">Затем задает стандартный вывод в файл с именем Files.txt и перечислены в файле элементы массива.</span><span class="sxs-lookup"><span data-stu-id="1900a-542">It then sets the standard output to a file named Files.txt and lists the array elements to the file.</span></span> <span data-ttu-id="1900a-543">Наконец он задает выходные данные в стандартный выходной поток и снова не отображает элементы массива на стандартное устройство вывода.</span><span class="sxs-lookup"><span data-stu-id="1900a-543">Finally, it sets the output to the standard output stream and again displays the array elements to the standard output device.</span></span>  
  
 [!code-csharp[System.Console.Out#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.console.out/cs/out1.cs#1)]
 [!code-vb[System.Console.Out#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.console.out/vb/out1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Console.Error" />
        <altmember cref="P:System.Console.In" />
        <altmember cref="M:System.Console.SetOut(System.IO.TextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="OutputEncoding">
      <MemberSignature Language="C#" Value="public static System.Text.Encoding OutputEncoding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Text.Encoding OutputEncoding" />
      <MemberSignature Language="DocId" Value="P:System.Console.OutputEncoding" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property OutputEncoding As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Text::Encoding ^ OutputEncoding { System::Text::Encoding ^ get(); void set(System::Text::Encoding ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1900a-544">Получает или задает кодировку консоли, используемую при записи выходных данных.</span><span class="sxs-lookup"><span data-stu-id="1900a-544">Gets or sets the encoding the console uses to write output.</span></span></summary>
        <value><span data-ttu-id="1900a-545">Кодировка консоли, используемая при записи вывода.</span><span class="sxs-lookup"><span data-stu-id="1900a-545">The encoding used to write console output.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1900a-546">Консоль использует кодировку вывода для преобразования символов, записываемых приложением, в соответствующие символы для отображения консоли.</span><span class="sxs-lookup"><span data-stu-id="1900a-546">The console uses the output encoding to translate characters written by an application into corresponding console display characters.</span></span> <span data-ttu-id="1900a-547">Кодовая страница по умолчанию, который использует консоль определяется языкового стандарта системы.</span><span class="sxs-lookup"><span data-stu-id="1900a-547">The default code page that the console uses is determined by the system locale.</span></span>  
  
 <span data-ttu-id="1900a-548">Начиная с [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], операция получения свойства могут возвращать кэшированное значение вместо текущего кодирования вывода на консоль.</span><span class="sxs-lookup"><span data-stu-id="1900a-548">Starting with the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], a property get operation may return a cached value instead of the console's current output encoding.</span></span> <span data-ttu-id="1900a-549">Это может произойти, если значение <xref:System.Console.OutputEncoding%2A> свойство изменяется каким-либо образом, отличные от присвоения <xref:System.Console.OutputEncoding%2A> свойства, например вызов Windows `SetConsoleOutputCP` функции.</span><span class="sxs-lookup"><span data-stu-id="1900a-549">This can occur if the value of the <xref:System.Console.OutputEncoding%2A> property is modified by some means other than an assignment to the <xref:System.Console.OutputEncoding%2A> property, such as calling the Windows `SetConsoleOutputCP` function.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1900a-550">Значение свойства в операции задания — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="1900a-550">The property value in a set operation is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1900a-551">Во время выполнения этой операции произошла ошибка.</span><span class="sxs-lookup"><span data-stu-id="1900a-551">An error occurred during the execution of this operation.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="1900a-552">У приложения нет разрешения на выполнение этой операции.</span><span class="sxs-lookup"><span data-stu-id="1900a-552">Your application does not have permission to perform this operation.</span></span></exception>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="1900a-553">для чтения и записи окон верхнего уровня и дочерние окна.</span><span class="sxs-lookup"><span data-stu-id="1900a-553">for reading and writing to top-level windows and subwindows.</span></span>  <span data-ttu-id="1900a-554">Связанное перечисление: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span><span class="sxs-lookup"><span data-stu-id="1900a-554">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span></span></permission>
        <block subset="none" type="usage">
          <para><span data-ttu-id="1900a-555">Кодировок Юникода <see cref="T:System.Console" /> с кодировкой UTF-8 поддерживает класс <see cref="T:System.Text.UTF8Encoding" /> класс и, начиная с [!INCLUDE[net_v45](~/includes/net-v45-md.md)], он поддерживает с кодировкой UTF-16 <see cref="T:System.Text.UnicodeEncoding" /> класса.</span><span class="sxs-lookup"><span data-stu-id="1900a-555">Of the Unicode encodings, the <see cref="T:System.Console" /> class supports UTF-8 encoding with the <see cref="T:System.Text.UTF8Encoding" /> class and, starting with the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], it supports UTF-16 encoding with the <see cref="T:System.Text.UnicodeEncoding" /> class.</span></span> <span data-ttu-id="1900a-556">Кодировка UTF-32 с <see cref="T:System.Text.UTF32Encoding" /> класс не поддерживается.</span><span class="sxs-lookup"><span data-stu-id="1900a-556">UTF-32 encoding with the <see cref="T:System.Text.UTF32Encoding" /> class is not supported.</span></span> <span data-ttu-id="1900a-557">Выполняется настройка выходных данных кодировку UTF-32 возникает исключение <see cref="T:System.IO.IOException" />.</span><span class="sxs-lookup"><span data-stu-id="1900a-557">Attempting to set the output encoding to UTF-32 throws an <see cref="T:System.IO.IOException" />.</span></span>  
  
 <span data-ttu-id="1900a-558">Обратите внимание, что успешно отображения символов Юникода в консоль требуется следующее:</span><span class="sxs-lookup"><span data-stu-id="1900a-558">Note that successfully displaying Unicode characters to the console requires the following:</span></span>  
  
-   <span data-ttu-id="1900a-559">Консоль необходимо использовать является шрифтом TrueType, например Lucida Console или Consolas, в качестве используемого для отображения символов.</span><span class="sxs-lookup"><span data-stu-id="1900a-559">The console must use a TrueType font, such as Lucida Console or Consolas, to display characters.</span></span>  
  
-   <span data-ttu-id="1900a-560">Шрифт, используемый консолью необходимо определить определенного глифов или глифов для отображения.</span><span class="sxs-lookup"><span data-stu-id="1900a-560">A font used by the console must define the particular glyph or glyphs to be displayed.</span></span> <span data-ttu-id="1900a-561">Консоль можно воспользоваться преимуществами связь для отображения глифов из связанных шрифтов, если базового шрифта не содержит определение для этого глифа шрифтов.</span><span class="sxs-lookup"><span data-stu-id="1900a-561">The console can take advantage of font linking to display glyphs from linked fonts if the base font does not contain a definition for that glyph.</span></span>  
  
 <span data-ttu-id="1900a-562">Дополнительные сведения о поддержке Юникода в кодировку консоли, см. в подразделе «Юникод поддерживает для консоль» <see cref="T:System.Console" /> класса.</span><span class="sxs-lookup"><span data-stu-id="1900a-562">For more information about support for Unicode encoding by the console, see the "Unicode Support for the Console" section in the <see cref="T:System.Console" /> class.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public static int Read ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Read() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.Read" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Read () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Read();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1900a-563">Читает следующий символ из стандартного входного потока.</span><span class="sxs-lookup"><span data-stu-id="1900a-563">Reads the next character from the standard input stream.</span></span></summary>
        <returns><span data-ttu-id="1900a-564">Следующий символ из входного потока или значение минус единица (-1), если доступных для чтения символов не осталось.</span><span class="sxs-lookup"><span data-stu-id="1900a-564">The next character from the input stream, or negative one (-1) if there are currently no more characters to be read.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1900a-565"><xref:System.Console.Read%2A> Метод блокируется до ввода входных символов; она завершается при нажатии клавиши <xref:System.ConsoleKey.Enter> ключа.</span><span class="sxs-lookup"><span data-stu-id="1900a-565">The <xref:System.Console.Read%2A> method blocks its return while you type input characters; it terminates when you press the <xref:System.ConsoleKey.Enter> key.</span></span> <span data-ttu-id="1900a-566">Нажатие клавиши Enter добавляет последовательность завершения строки, зависящей от платформы во входные данные (например, Windows добавляется последовательность перевода строки возврат каретки).</span><span class="sxs-lookup"><span data-stu-id="1900a-566">Pressing Enter appends a platform-dependent line termination sequence to your input (for example, Windows appends a carriage return-linefeed sequence).</span></span> <span data-ttu-id="1900a-567">Последующие вызовы <xref:System.Console.Read%2A> метод получения вашего ввод по одному символу за раз.</span><span class="sxs-lookup"><span data-stu-id="1900a-567">Subsequent calls to the <xref:System.Console.Read%2A> method retrieve your input one character at a time.</span></span> <span data-ttu-id="1900a-568">После получения последним символом <xref:System.Console.Read%2A> блокирует возврат еще раз и цикл повторяется.</span><span class="sxs-lookup"><span data-stu-id="1900a-568">After the final character is retrieved, <xref:System.Console.Read%2A> blocks its return again and the cycle repeats.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="1900a-569"><xref:System.Console.ReadLine%2A> Метод, или <xref:System.Console.KeyAvailable%2A> свойство и <xref:System.Console.ReadKey%2A> метод предпочтительнее <xref:System.Console.Read%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="1900a-569">The <xref:System.Console.ReadLine%2A> method, or the <xref:System.Console.KeyAvailable%2A> property and <xref:System.Console.ReadKey%2A> method are preferable to using the <xref:System.Console.Read%2A> method.</span></span>  
  
 <span data-ttu-id="1900a-570">Обратите внимание, что метод не возвращает значение -1, если не выполнить одно из следующих действий:</span><span class="sxs-lookup"><span data-stu-id="1900a-570">Note that the method does not return -1 unless you perform one of the following actions:</span></span>  
  
-   <span data-ttu-id="1900a-571">Одновременно нажмите клавиши <xref:System.ConsoleModifiers.Control> клавиши-модификатора и <xref:System.ConsoleKey.Z> клавиши консоли (Ctrl + Z), который сигнализирует условие конечного файла.</span><span class="sxs-lookup"><span data-stu-id="1900a-571">Simultaneously press the <xref:System.ConsoleModifiers.Control> modifier key and <xref:System.ConsoleKey.Z> console key (Ctrl+Z), which signals the end-of-file condition.</span></span>  
  
-   <span data-ttu-id="1900a-572">Нажмите клавишу эквивалентным ключом, который сигнализирует end of file условия, такого как функциональную клавишу F6 в Windows.</span><span class="sxs-lookup"><span data-stu-id="1900a-572">Press an equivalent key that signals the end-of-file condition, such as the F6 function key in Windows.</span></span>  
  
-   <span data-ttu-id="1900a-573">Перенаправление входного потока к источнику, такому как текстовый файл, которого содержится символ фактического конечного файла.</span><span class="sxs-lookup"><span data-stu-id="1900a-573">Redirect the input stream to a source, such as a text file, that has an actual end-of-file character.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1900a-574">В следующем примере демонстрируется <xref:System.Console.Read%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="1900a-574">The following example demonstrates the <xref:System.Console.Read%2A> method.</span></span>  
  
 [!code-cpp[console.read#1](~/samples/snippets/cpp/VS_Snippets_CLR/console.read/CPP/read.cpp#1)]
 [!code-csharp[console.read#1](~/samples/snippets/csharp/VS_Snippets_CLR/console.read/CS/read.cs#1)]
 [!code-vb[console.read#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/console.read/VB/read.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1900a-575">Ошибка ввода/вывода.</span><span class="sxs-lookup"><span data-stu-id="1900a-575">An I/O error occurred.</span></span></exception>
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.Write(System.String,System.Object)" />
        <altmember cref="M:System.Console.WriteLine" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ReadKey">
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="1900a-576">Получает следующий нажатый пользователем символ или функциональную клавишу.</span><span class="sxs-lookup"><span data-stu-id="1900a-576">Obtains the next character or function key pressed by the user.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ReadKey">
      <MemberSignature Language="C#" Value="public static ConsoleKeyInfo ReadKey ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.ConsoleKeyInfo ReadKey() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.ReadKey" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReadKey () As ConsoleKeyInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static ConsoleKeyInfo ReadKey();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ConsoleKeyInfo</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1900a-577">Получает следующий нажатый пользователем символ или функциональную клавишу.</span><span class="sxs-lookup"><span data-stu-id="1900a-577">Obtains the next character or function key pressed by the user.</span></span> <span data-ttu-id="1900a-578">Нажатая клавиша отображается в окне консоли.</span><span class="sxs-lookup"><span data-stu-id="1900a-578">The pressed key is displayed in the console window.</span></span></summary>
        <returns><span data-ttu-id="1900a-579">Объект, описывающий константу <see cref="T:System.ConsoleKey" /> и символ Юникода (при наличии), соответствующий нажатой клавише консоли.</span><span class="sxs-lookup"><span data-stu-id="1900a-579">An object that describes the <see cref="T:System.ConsoleKey" /> constant and Unicode character, if any, that correspond to the pressed console key.</span></span> <span data-ttu-id="1900a-580">Этот объект <see cref="T:System.ConsoleKeyInfo" /> также описывает в битовой комбинации значений <see cref="T:System.ConsoleModifiers" />, нажимались ли клавиши-модификаторы (одна или несколько) Shift, Alt или Ctrl одновременно с клавишей консоли.</span><span class="sxs-lookup"><span data-stu-id="1900a-580">The <see cref="T:System.ConsoleKeyInfo" /> object also describes, in a bitwise combination of <see cref="T:System.ConsoleModifiers" /> values, whether one or more Shift, Alt, or Ctrl modifier keys was pressed simultaneously with the console key.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1900a-581"><xref:System.Console.ReadKey%2A> Метод ожидает, то есть блоков выполнения потока <xref:System.Console.ReadKey%2A> метод, пока не нажата символ или функциональную клавишу.</span><span class="sxs-lookup"><span data-stu-id="1900a-581">The <xref:System.Console.ReadKey%2A> method waits, that is, blocks on the thread issuing the <xref:System.Console.ReadKey%2A> method, until a character or function key is pressed.</span></span> <span data-ttu-id="1900a-582">Символ или функциональную клавишу может быть нажата в сочетании с одного или нескольких Alt, Ctrl или Shift клавиши-модификаторы.</span><span class="sxs-lookup"><span data-stu-id="1900a-582">A character or function key can be pressed in combination with one or more Alt, Ctrl, or Shift modifier keys.</span></span> <span data-ttu-id="1900a-583">Тем не менее, нажав клавиши-модификатора сам по себе не приведет к <xref:System.Console.ReadKey%2A> метод для возврата.</span><span class="sxs-lookup"><span data-stu-id="1900a-583">However, pressing a modifier key by itself will not cause the <xref:System.Console.ReadKey%2A> method to return.</span></span>  
  
 <span data-ttu-id="1900a-584">В зависимости от приложения, может потребоваться использовать <xref:System.Console.ReadKey%2A> в сочетании с <xref:System.Console.KeyAvailable%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="1900a-584">Depending on your application, you might want to use the <xref:System.Console.ReadKey%2A> method in conjunction with the <xref:System.Console.KeyAvailable%2A> property.</span></span>  
  
 <span data-ttu-id="1900a-585"><xref:System.Console.ReadKey%2A> Метод выполняет чтение с клавиатуры, даже если стандартный ввод перенаправляется в файл с <xref:System.Console.SetIn%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="1900a-585">The <xref:System.Console.ReadKey%2A> method reads from the keyboard even if the standard input is redirected to a file with the <xref:System.Console.SetIn%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1900a-586">Одно из наиболее распространенные способы применения <xref:System.Console.ReadKey> имеет метод для остановки выполнения программы, пока пользователь нажимает клавишу и приложение завершает или отображает дополнительное окно сведений.</span><span class="sxs-lookup"><span data-stu-id="1900a-586">One of the most common uses of the <xref:System.Console.ReadKey> method is to halt program execution until the user presses a key and the app either terminates or displays an additional window of information.</span></span> <span data-ttu-id="1900a-587">В следующем примере используется <xref:System.Console.ReadKey> метод для ожидания пользователя нажатия клавиши ВВОД перед завершением работы приложения.</span><span class="sxs-lookup"><span data-stu-id="1900a-587">The following example uses the  <xref:System.Console.ReadKey> method to wait for the user to press the Enter key before terminating the app.</span></span>  
  
 [!code-csharp[System.Console.ReadKey#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Console.ReadKey/cs/ReadKey1.cs#1)]
 [!code-vb[System.Console.ReadKey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Console.ReadKey/vb/ReadKey1.vb#1)]  
  
 <span data-ttu-id="1900a-588">Обратите внимание, что этой перегрузке <xref:System.Console.ReadKey%2A> метод по умолчанию отображает все отображаемые ключи, пользователь нажимает на консоль.</span><span class="sxs-lookup"><span data-stu-id="1900a-588">Note that this overload of the <xref:System.Console.ReadKey%2A> method by default echoes any displayable keys that the user presses to the console.</span></span> <span data-ttu-id="1900a-589">Чтобы отключить их, вызовите <xref:System.Console.ReadKey%2A> метод с `intercept` аргумент `true`.</span><span class="sxs-lookup"><span data-stu-id="1900a-589">To suppress them, call the  <xref:System.Console.ReadKey%2A> method with an `intercept` argument of `true`.</span></span>  
  
 <span data-ttu-id="1900a-590">В следующем примере используется <xref:System.Console.ReadKey> метод для отображения сведений о ключе, какой пользователь нажал...</span><span class="sxs-lookup"><span data-stu-id="1900a-590">The following example uses the <xref:System.Console.ReadKey> method to display information about which key the user pressed..</span></span>  
  
 [!code-cpp[console.readkey1#1](~/samples/snippets/cpp/VS_Snippets_CLR/console.readkey1/CPP/rk.cpp#1)]
 [!code-csharp[console.readkey1#1](~/samples/snippets/csharp/VS_Snippets_CLR/console.readkey1/CS/rk.cs#1)]
 [!code-vb[console.readkey1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/console.readkey1/VB/rk.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="1900a-591">Свойство <see cref="P:System.Console.In" /> перенаправлено из потока, отличного от консоли.</span><span class="sxs-lookup"><span data-stu-id="1900a-591">The <see cref="P:System.Console.In" /> property is redirected from some stream other than the console.</span></span></exception>
        <altmember cref="T:System.ConsoleKey" />
        <altmember cref="P:System.Console.KeyAvailable" />
        <altmember cref="P:System.Console.TreatControlCAsInput" />
        <altmember cref="E:System.Console.CancelKeyPress" />
      </Docs>
    </Member>
    <Member MemberName="ReadKey">
      <MemberSignature Language="C#" Value="public static ConsoleKeyInfo ReadKey (bool intercept);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.ConsoleKeyInfo ReadKey(bool intercept) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.ReadKey(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReadKey (intercept As Boolean) As ConsoleKeyInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static ConsoleKeyInfo ReadKey(bool intercept);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ConsoleKeyInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="intercept" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="intercept"><span data-ttu-id="1900a-592">Определяет, следует ли отображать нажатую клавишу в окне консоли.</span><span class="sxs-lookup"><span data-stu-id="1900a-592">Determines whether to display the pressed key in the console window.</span></span> <span data-ttu-id="1900a-593">Значение <see langword="true" />, чтобы не отображать нажатую клавишу; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="1900a-593"><see langword="true" /> to not display the pressed key; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="1900a-594">Получает следующий нажатый пользователем символ или функциональную клавишу.</span><span class="sxs-lookup"><span data-stu-id="1900a-594">Obtains the next character or function key pressed by the user.</span></span> <span data-ttu-id="1900a-595">Нажатая клавиша может быть отображена в окне консоли.</span><span class="sxs-lookup"><span data-stu-id="1900a-595">The pressed key is optionally displayed in the console window.</span></span></summary>
        <returns><span data-ttu-id="1900a-596">Объект, описывающий константу <see cref="T:System.ConsoleKey" /> и символ Юникода (при наличии), соответствующий нажатой клавише консоли.</span><span class="sxs-lookup"><span data-stu-id="1900a-596">An object that describes the <see cref="T:System.ConsoleKey" /> constant and Unicode character, if any, that correspond to the pressed console key.</span></span> <span data-ttu-id="1900a-597">Этот объект <see cref="T:System.ConsoleKeyInfo" /> также описывает в битовой комбинации значений <see cref="T:System.ConsoleModifiers" />, нажимались ли клавиши-модификаторы (одна или несколько) Shift, Alt или Ctrl одновременно с клавишей консоли.</span><span class="sxs-lookup"><span data-stu-id="1900a-597">The <see cref="T:System.ConsoleKeyInfo" /> object also describes, in a bitwise combination of <see cref="T:System.ConsoleModifiers" /> values, whether one or more Shift, Alt, or Ctrl modifier keys was pressed simultaneously with the console key.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1900a-598"><xref:System.Console.ReadKey%2A> Метод ожидает, то есть блоков выполнения потока <xref:System.Console.ReadKey%2A> метод, пока не нажата символ или функциональную клавишу.</span><span class="sxs-lookup"><span data-stu-id="1900a-598">The <xref:System.Console.ReadKey%2A> method waits, that is, blocks on the thread issuing the <xref:System.Console.ReadKey%2A> method, until a character or function key is pressed.</span></span> <span data-ttu-id="1900a-599">Символ или функциональную клавишу может быть нажата в сочетании с одного или нескольких Alt, Ctrl или Shift клавиши-модификаторы.</span><span class="sxs-lookup"><span data-stu-id="1900a-599">A character or function key can be pressed in combination with one or more Alt, Ctrl, or Shift modifier keys.</span></span> <span data-ttu-id="1900a-600">Тем не менее, нажав клавиши-модификатора сам по себе не приведет к <xref:System.Console.ReadKey%2A> метод для возврата.</span><span class="sxs-lookup"><span data-stu-id="1900a-600">However, pressing a modifier key by itself will not cause the <xref:System.Console.ReadKey%2A> method to return.</span></span>  
  
 <span data-ttu-id="1900a-601">Если `intercept` параметр `true`, нажатая клавиша перехватывается и не отображается в окне консоли; в противном случае, нажатая клавиша отображается.</span><span class="sxs-lookup"><span data-stu-id="1900a-601">If the `intercept` parameter is `true`, the pressed key is intercepted and not displayed in the console window; otherwise, the pressed key is displayed.</span></span>  
  
 <span data-ttu-id="1900a-602">В зависимости от приложения, может потребоваться использовать <xref:System.Console.ReadKey%2A> в сочетании с <xref:System.Console.KeyAvailable%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="1900a-602">Depending on your application, you might want to use the <xref:System.Console.ReadKey%2A> method in conjunction with the <xref:System.Console.KeyAvailable%2A> property.</span></span>  
  
 <span data-ttu-id="1900a-603"><xref:System.Console.ReadKey%2A> Метод выполняет чтение с клавиатуры, даже если стандартный ввод перенаправляется в файл с <xref:System.Console.SetIn%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="1900a-603">The <xref:System.Console.ReadKey%2A> method reads from the keyboard even if the standard input is redirected to a file with the <xref:System.Console.SetIn%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1900a-604">Одно из наиболее распространенные способы применения <xref:System.Console.ReadKey%2A> имеет метод для остановки выполнения программы, пока пользователь нажимает клавишу и приложение завершает или отображает дополнительное окно сведений.</span><span class="sxs-lookup"><span data-stu-id="1900a-604">One of the most common uses of the <xref:System.Console.ReadKey%2A> method is to halt program execution until the user presses a key and the app either terminates or displays an additional window of information.</span></span> <span data-ttu-id="1900a-605">В следующем примере используется <xref:System.Console.ReadKey%28System.Boolean%29> метод для ожидания пользователя нажатия клавиши ВВОД перед завершением работы приложения.</span><span class="sxs-lookup"><span data-stu-id="1900a-605">The following example uses the  <xref:System.Console.ReadKey%28System.Boolean%29> method to wait for the user to press the Enter key before terminating the app.</span></span> <span data-ttu-id="1900a-606">Обратите внимание, что если пользователь нажимает любую другую клавишу, он не переносится на консоль.</span><span class="sxs-lookup"><span data-stu-id="1900a-606">Note that, if the user presses any other key, it is not echoed to the console.</span></span>  
  
 [!code-csharp[System.Console.ReadKey#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Console.ReadKey/cs/ReadKey2.cs#2)]
 [!code-vb[System.Console.ReadKey#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Console.ReadKey/vb/ReadKey2.vb#2)]  
  
 <span data-ttu-id="1900a-607">В следующем примере используется <xref:System.Console.ReadKey%28System.Boolean%29> метод для отображения сведений о ключе нажатия пользователем клавиши вывод на экран разделу на консоль.</span><span class="sxs-lookup"><span data-stu-id="1900a-607">The following example uses the <xref:System.Console.ReadKey%28System.Boolean%29> method to display information about the key pressed by a user without echoing that key to the console.</span></span>  
  
 [!code-cpp[console.readkey2#1](~/samples/snippets/cpp/VS_Snippets_CLR/console.readkey2/CPP/rkbool.cpp#1)]
 [!code-csharp[console.readkey2#1](~/samples/snippets/csharp/VS_Snippets_CLR/console.readkey2/CS/rkbool.cs#1)]
 [!code-vb[console.readkey2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/console.readkey2/VB/rkbool.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="1900a-608">Свойство <see cref="P:System.Console.In" /> перенаправлено из потока, отличного от консоли.</span><span class="sxs-lookup"><span data-stu-id="1900a-608">The <see cref="P:System.Console.In" /> property is redirected from some stream other than the console.</span></span></exception>
        <altmember cref="T:System.ConsoleKey" />
        <altmember cref="P:System.Console.KeyAvailable" />
        <altmember cref="P:System.Console.TreatControlCAsInput" />
        <altmember cref="E:System.Console.CancelKeyPress" />
      </Docs>
    </Member>
    <Member MemberName="ReadLine">
      <MemberSignature Language="C#" Value="public static string ReadLine ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ReadLine() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.ReadLine" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReadLine () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ReadLine();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1900a-609">Считывает следующую строку символов из стандартного входного потока.</span><span class="sxs-lookup"><span data-stu-id="1900a-609">Reads the next line of characters from the standard input stream.</span></span></summary>
        <returns><span data-ttu-id="1900a-610">Следующая строка символов из входного потока или значение <see langword="null" />, если больше нет доступных строк.</span><span class="sxs-lookup"><span data-stu-id="1900a-610">The next line of characters from the input stream, or <see langword="null" /> if no more lines are available.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1900a-611"><xref:System.Console.ReadLine%2A> Метод считывает строку из стандартного входного потока.</span><span class="sxs-lookup"><span data-stu-id="1900a-611">The <xref:System.Console.ReadLine%2A> method reads a line from the standard input stream.</span></span> <span data-ttu-id="1900a-612">(Для определения строки, см. в абзаце после перечисленные ниже.) Это означает следующее.</span><span class="sxs-lookup"><span data-stu-id="1900a-612">(For the definition of a line, see the paragraph after the following list.) This means that:</span></span>  
  
-   <span data-ttu-id="1900a-613">Если стандартное устройство ввода клавиатуры, <xref:System.Console.ReadLine%2A> метод блокируется до нажатия пользователем **ввод** ключа.</span><span class="sxs-lookup"><span data-stu-id="1900a-613">If the standard input device is the keyboard, the <xref:System.Console.ReadLine%2A> method blocks until the user presses the **Enter** key.</span></span>  
  
     <span data-ttu-id="1900a-614">Одно из наиболее распространенные способы применения <xref:System.Console.ReadLine%2A> метод: Чтобы приостановить выполнение программы до очистки консоль и отображения новых сведений для его или попросить пользователя нажатия клавиши ВВОД перед завершением работы приложения.</span><span class="sxs-lookup"><span data-stu-id="1900a-614">One of the most common uses of the <xref:System.Console.ReadLine%2A> method is to pause program execution before clearing the console and displaying new information to it, or to prompt the user to press the Enter key before terminating the application.</span></span> <span data-ttu-id="1900a-615">Это показано в следующем примере.</span><span class="sxs-lookup"><span data-stu-id="1900a-615">The following example illustrates this.</span></span>  
  
     [!code-cpp[System.Console.ReadLine#6](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Console.ReadLine/cpp/ReadLineSimple.cpp#6)]
     [!code-csharp[System.Console.ReadLine#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console.ReadLine/cs/ReadLineSimple.cs#6)]
     [!code-vb[System.Console.ReadLine#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console.ReadLine/vb/ReadLineSimple.vb#6)]  
  
-   <span data-ttu-id="1900a-616">Если стандартный ввод перенаправляется в файл <xref:System.Console.ReadLine%2A> метод считывает строку текста из файла.</span><span class="sxs-lookup"><span data-stu-id="1900a-616">If standard input is redirected to a file, the <xref:System.Console.ReadLine%2A> method reads a line of text from a file.</span></span> <span data-ttu-id="1900a-617">Например ниже приведен пример текстовый файл с именем ReadLine1.txt:</span><span class="sxs-lookup"><span data-stu-id="1900a-617">For example, the following is a text file named ReadLine1.txt:</span></span>  
  
    ```  
  
    This is the first line.  
    This is the second line.  
    This is the third line.  
    This is the fourth line.  
  
    ```  
  
     <span data-ttu-id="1900a-618">В следующем примере используется <xref:System.Console.ReadLine%2A> метод при чтении ввода, переадресован из файла.</span><span class="sxs-lookup"><span data-stu-id="1900a-618">The following example uses the <xref:System.Console.ReadLine%2A> method to read input that is redirected from a file.</span></span> <span data-ttu-id="1900a-619">Завершает операцию чтения, если метод возвращает `null`, указывающая, что строки не остаются для чтения.</span><span class="sxs-lookup"><span data-stu-id="1900a-619">The read operation terminates when the  method returns `null`, which indicates that no lines remain to be read.</span></span>  
  
     [!code-csharp[System.Console.ReadLine#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console.ReadLine/cs/ReadLine3.cs#3)]
     [!code-vb[System.Console.ReadLine#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console.ReadLine/vb/ReadLine3.vb#3)]  
  
     <span data-ttu-id="1900a-620">После компиляции примера для исполняемого именованный ReadLine1.exe, можно запустить ее из командной строки с помощью синтаксиса</span><span class="sxs-lookup"><span data-stu-id="1900a-620">After compiling the example to an executable named ReadLine1.exe, you can run it from the command line with the syntax</span></span>  
  
    ```  
    ReadLine1 < ReadLine1.txt  
    ```  
  
     <span data-ttu-id="1900a-621">Прочтите содержимое файла и отобразить их на консоль.</span><span class="sxs-lookup"><span data-stu-id="1900a-621">to read the contents of the file and display them to the console.</span></span>  
  
 <span data-ttu-id="1900a-622">Строка определяется как последовательность символов возврата каретки (шестнадцатеричный код 0x000d), перевод строки (шестнадцатеричное представление 0x000a) или значение <xref:System.Environment.NewLine%2A?displayProperty=nameWithType> свойства.</span><span class="sxs-lookup"><span data-stu-id="1900a-622">A line is defined as a sequence of characters followed by a carriage return (hexadecimal 0x000d), a line feed (hexadecimal 0x000a), or the value of the <xref:System.Environment.NewLine%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="1900a-623">Возвращаемая строка не содержит знаков конца строки.</span><span class="sxs-lookup"><span data-stu-id="1900a-623">The returned string does not contain the terminating character(s).</span></span> <span data-ttu-id="1900a-624">По умолчанию этот метод считывает входные данные из входного буфера до 256 символов.</span><span class="sxs-lookup"><span data-stu-id="1900a-624">By default, the method reads input from a 256-character input buffer.</span></span> <span data-ttu-id="1900a-625">Так как в нем <xref:System.Environment.NewLine%2A?displayProperty=nameWithType> символы, метод может считывать строки, содержащие до 254 символов.</span><span class="sxs-lookup"><span data-stu-id="1900a-625">Because this includes the <xref:System.Environment.NewLine%2A?displayProperty=nameWithType> character(s), the method can read lines that contain up to 254 characters.</span></span> <span data-ttu-id="1900a-626">Для считывания больше строк, вызвать <xref:System.Console.OpenStandardInput%28System.Int32%29> метод.</span><span class="sxs-lookup"><span data-stu-id="1900a-626">To read longer lines, call the <xref:System.Console.OpenStandardInput%28System.Int32%29> method.</span></span>  
  
 <span data-ttu-id="1900a-627"><xref:System.Console.ReadLine%2A> Метод выполняется синхронно.</span><span class="sxs-lookup"><span data-stu-id="1900a-627">The <xref:System.Console.ReadLine%2A> method executes synchronously.</span></span> <span data-ttu-id="1900a-628">То есть он будет заблокирован до чтения строки или нажатии сочетания клавиш Ctrl + Z.</span><span class="sxs-lookup"><span data-stu-id="1900a-628">That is, it blocks until a line is read or the Ctrl+Z keyboard combination is pressed.</span></span> <span data-ttu-id="1900a-629"><xref:System.Console.In%2A> Возвращает <xref:System.IO.TextReader> объект, представляющий стандартный входной поток и имеет оба синхронной <xref:System.IO.TextReader.ReadLine%2A?displayProperty=nameWithType> метод и асинхронную <xref:System.IO.TextReader.ReadLineAsync%2A?displayProperty=nameWithType> метод.</span><span class="sxs-lookup"><span data-stu-id="1900a-629">The <xref:System.Console.In%2A> property returns a <xref:System.IO.TextReader> object that represents the standard input stream and that has both a synchronous <xref:System.IO.TextReader.ReadLine%2A?displayProperty=nameWithType> method and an asynchronous <xref:System.IO.TextReader.ReadLineAsync%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="1900a-630">Тем не менее, при использовании в качестве консоли стандартный входной поток, <xref:System.IO.TextReader.ReadLineAsync%2A?displayProperty=nameWithType> выполняется синхронно, а не асинхронно и возвращает `Task<String>` только после завершения операции чтения.</span><span class="sxs-lookup"><span data-stu-id="1900a-630">However, when used as the console's standard input stream, the <xref:System.IO.TextReader.ReadLineAsync%2A?displayProperty=nameWithType> executes synchronously rather than asynchronously and returns a `Task<String>` only after the read operation has completed.</span></span>  
  
 <span data-ttu-id="1900a-631">Если этот метод создает исключение <xref:System.OutOfMemoryException> исключение, позиция средства чтения в основном потоке <xref:System.IO.Stream> объекта увеличивается число знаков, которое может считывать метод, но знаки, уже считанные во внутренний <xref:System.Console.ReadLine%2A> являются буфера удаляются.</span><span class="sxs-lookup"><span data-stu-id="1900a-631">If this method throws an <xref:System.OutOfMemoryException> exception, the reader's position in the underlying <xref:System.IO.Stream> object is advanced by the number of characters the method was able to read, but the characters already read into the internal <xref:System.Console.ReadLine%2A> buffer are discarded.</span></span> <span data-ttu-id="1900a-632">Так как позицию средства чтения в потоке нельзя изменить, уже считанные символы неустранимой и доступны только при повторной инициализации <xref:System.IO.TextReader>.</span><span class="sxs-lookup"><span data-stu-id="1900a-632">Since the position of the reader in the stream cannot be changed, the characters already read are unrecoverable, and can be accessed only by reinitializing the <xref:System.IO.TextReader>.</span></span> <span data-ttu-id="1900a-633">Если начальная позиция в потоке неизвестна или поток не поддерживает поиск, базовый <xref:System.IO.Stream> также необходимо инициализировать повторно.</span><span class="sxs-lookup"><span data-stu-id="1900a-633">If the initial position within the stream is unknown or the stream does not support seeking, the underlying <xref:System.IO.Stream> also needs to be reinitialized.</span></span> <span data-ttu-id="1900a-634">Чтобы избежать такой ситуации и создать надежный код, следует использовать <xref:System.Console.KeyAvailable%2A> свойство и <xref:System.Console.ReadKey%2A> метод и хранилище считанные знаки в предварительно выделенный буфер.</span><span class="sxs-lookup"><span data-stu-id="1900a-634">To avoid such a situation and to produce robust code, you should use the <xref:System.Console.KeyAvailable%2A> property and <xref:System.Console.ReadKey%2A> method and store the read characters in a pre-allocated buffer.</span></span>  
  
 <span data-ttu-id="1900a-635">Если символ Ctrl + Z нажата, когда метод является чтение входных данных с помощью консоли, метод возвращает `null`.</span><span class="sxs-lookup"><span data-stu-id="1900a-635">If the Ctrl+Z character is pressed when the method is reading input from the console, the method returns `null`.</span></span> <span data-ttu-id="1900a-636">Это позволяет параметр для предотвращения дальнейших клавиатуры ввода пользователем при <xref:System.Console.ReadLine%2A> метод вызывается в цикле.</span><span class="sxs-lookup"><span data-stu-id="1900a-636">This enables the user to prevent further keyboard input when the <xref:System.Console.ReadLine%2A> method is called in a loop.</span></span> <span data-ttu-id="1900a-637">В следующем примере показан этот сценарий.</span><span class="sxs-lookup"><span data-stu-id="1900a-637">The following example illustrates this scenario.</span></span>  
  
 [!code-cpp[System.Console.ReadLine#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Console.ReadLine/cpp/readline2.cpp#1)]
 [!code-csharp[System.Console.ReadLine#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console.ReadLine/cs/ReadLine2.cs#1)]
 [!code-vb[System.Console.ReadLine#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console.ReadLine/vb/ReadLine2.vb#1)]  
  
   
  
## Examples  
 <span data-ttu-id="1900a-638">В следующем примере требуется два аргумента командной строки: имя существующего текстового файла и имя файла для записи выходных данных.</span><span class="sxs-lookup"><span data-stu-id="1900a-638">The following example requires two command line arguments: the name of an existing text file, and the name of a file to write the output to.</span></span> <span data-ttu-id="1900a-639">Открывает существующий текстовый файл и перенаправляет стандартный ввод с клавиатуры в файл.</span><span class="sxs-lookup"><span data-stu-id="1900a-639">It opens the existing text file and redirects the standard input from the keyboard to that file.</span></span> <span data-ttu-id="1900a-640">Также перенаправляет стандартный вывод из консоли в выходной файл.</span><span class="sxs-lookup"><span data-stu-id="1900a-640">It also redirects the standard output from the console to the output file.</span></span> <span data-ttu-id="1900a-641">Затем он использует <xref:System.Console.ReadLine%2A?displayProperty=nameWithType> метод при чтении каждой строки в файле, заменяет последовательность каждые четыре пробела символом табуляции и использует <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> метод для записи результата в выходной файл.</span><span class="sxs-lookup"><span data-stu-id="1900a-641">It then uses the <xref:System.Console.ReadLine%2A?displayProperty=nameWithType> method to read each line in the file, replaces every sequence of four spaces with a tab character, and uses the <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> method to write the result to the output file.</span></span>  
  
 [!code-cpp[System.Console-INSERTTABS#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Console-INSERTTABS/CPP/inserttabs.cpp#1)]
 [!code-csharp[System.Console-INSERTTABS#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console-INSERTTABS/CS/inserttabs.cs#1)]
 [!code-vb[System.Console-INSERTTABS#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console-INSERTTABS/VB/inserttabs.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1900a-642">Ошибка ввода/вывода.</span><span class="sxs-lookup"><span data-stu-id="1900a-642">An I/O error occurred.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="1900a-643">Не хватает памяти для выделения буфера под возвращаемую строку.</span><span class="sxs-lookup"><span data-stu-id="1900a-643">There is insufficient memory to allocate a buffer for the returned string.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="1900a-644">Количество символов в следующей строке символов больше, чем <see cref="F:System.Int32.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="1900a-644">The number of characters in the next line of characters is greater than <see cref="F:System.Int32.MaxValue" />.</span></span></exception>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.Write(System.String,System.Object)" />
        <altmember cref="M:System.Console.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="ResetColor">
      <MemberSignature Language="C#" Value="public static void ResetColor ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ResetColor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.ResetColor" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ResetColor ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ResetColor();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1900a-645">Устанавливает для цветов фона и текста консоли их значения по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="1900a-645">Sets the foreground and background console colors to their defaults.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1900a-646">Цвета переднего плана и фона, восстанавливаются цвета, которые существовали во время начала текущего процесса.</span><span class="sxs-lookup"><span data-stu-id="1900a-646">The foreground and background colors are restored to the colors that existed when the current process began.</span></span> <span data-ttu-id="1900a-647">Дополнительные сведения см. в разделе <xref:System.Console.ForegroundColor%2A> и <xref:System.Console.BackgroundColor%2A> свойства.</span><span class="sxs-lookup"><span data-stu-id="1900a-647">For more information, see the <xref:System.Console.ForegroundColor%2A> and <xref:System.Console.BackgroundColor%2A> properties.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1900a-648">Следующий пример сохраняет значения <xref:System.ConsoleColor> перечисления в массив и сохраняет текущие значения <xref:System.Console.BackgroundColor%2A> и <xref:System.Console.ForegroundColor%2A> свойства к переменным.</span><span class="sxs-lookup"><span data-stu-id="1900a-648">The following example saves the values of the <xref:System.ConsoleColor> enumeration to an array and stores the current values of the <xref:System.Console.BackgroundColor%2A> and <xref:System.Console.ForegroundColor%2A> properties to variables.</span></span> <span data-ttu-id="1900a-649">Затем изменяет цвет переднего плана для каждого цвета в <xref:System.ConsoleColor> перечисление, за исключением того, как цвет, соответствующий текущий фоновый рисунок и он изменяет цвет фона для каждого цвета в <xref:System.ConsoleColor> перечисление, за исключением того, цвет, который соответствует текущий переднего плана.</span><span class="sxs-lookup"><span data-stu-id="1900a-649">It then changes the foreground color to each color in the <xref:System.ConsoleColor> enumeration except to the color that matches the current background, and it changes the background color to each color in the <xref:System.ConsoleColor> enumeration except to the color that matches the current foreground.</span></span> <span data-ttu-id="1900a-650">(Если цвет совпадает с цветом фона, текст не отображается.) Наконец, он вызывает <xref:System.Console.ResetColor%2A> метод восстановления исходного цвета консоли.</span><span class="sxs-lookup"><span data-stu-id="1900a-650">(If the foreground color is the same as the background color, the text isn't visible.) Finally, it calls the <xref:System.Console.ResetColor%2A> method to restore the original console colors.</span></span>  
  
 [!code-csharp[System.ConsoleColor#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.consolecolor/cs/foregroundcolor3.cs#1)]
 [!code-vb[System.ConsoleColor#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.consolecolor/vb/foregroundcolor3.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="1900a-651">Пользователь не имеет разрешений на выполнение этого действия.</span><span class="sxs-lookup"><span data-stu-id="1900a-651">The user does not have permission to perform this action.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1900a-652">Ошибка ввода/вывода.</span><span class="sxs-lookup"><span data-stu-id="1900a-652">An I/O error occurred.</span></span></exception>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="1900a-653">для изменения безопасных окон верхнего уровня и дочерние окна.</span><span class="sxs-lookup"><span data-stu-id="1900a-653">for modifying safe top-level windows and subwindows.</span></span> <span data-ttu-id="1900a-654">Связанное перечисление: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span><span class="sxs-lookup"><span data-stu-id="1900a-654">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="SetBufferSize">
      <MemberSignature Language="C#" Value="public static void SetBufferSize (int width, int height);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetBufferSize(int32 width, int32 height) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.SetBufferSize(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetBufferSize (width As Integer, height As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetBufferSize(int width, int height);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="width"><span data-ttu-id="1900a-655">Ширина области буфера в столбцах.</span><span class="sxs-lookup"><span data-stu-id="1900a-655">The width of the buffer area measured in columns.</span></span></param>
        <param name="height"><span data-ttu-id="1900a-656">Высота области буфера в строках.</span><span class="sxs-lookup"><span data-stu-id="1900a-656">The height of the buffer area measured in rows.</span></span></param>
        <summary><span data-ttu-id="1900a-657">Устанавливает заданные значения высоты и ширины буферной области экрана.</span><span class="sxs-lookup"><span data-stu-id="1900a-657">Sets the height and width of the screen buffer area to the specified values.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="1900a-658">В следующем примере демонстрируется <xref:System.Console.WindowLeft%2A>, <xref:System.Console.WindowTop%2A>, <xref:System.Console.WindowWidth%2A>, <xref:System.Console.WindowHeight%2A>, <xref:System.Console.BufferWidth%2A>, <xref:System.Console.BufferHeight%2A>, и <xref:System.Console.CursorVisible%2A> его свойства и <xref:System.Console.SetWindowPosition%2A>, <xref:System.Console.SetBufferSize%2A>, и <xref:System.Console.ReadKey%2A> методы.</span><span class="sxs-lookup"><span data-stu-id="1900a-658">The following example demonstrates the <xref:System.Console.WindowLeft%2A>, <xref:System.Console.WindowTop%2A>, <xref:System.Console.WindowWidth%2A>, <xref:System.Console.WindowHeight%2A>, <xref:System.Console.BufferWidth%2A>, <xref:System.Console.BufferHeight%2A>, and <xref:System.Console.CursorVisible%2A> properties; and the <xref:System.Console.SetWindowPosition%2A>, <xref:System.Console.SetBufferSize%2A>, and <xref:System.Console.ReadKey%2A> methods.</span></span> <span data-ttu-id="1900a-659">В примере рисуется сетка в буфере экрана, исходя из ширины буфера экрана.</span><span class="sxs-lookup"><span data-stu-id="1900a-659">The example draws a grid pattern in the screen buffer based on the screen buffer width.</span></span> <span data-ttu-id="1900a-660">Затем в примере показано перемещение окна консоли в ответ на который стрелка вверх, нажатия клавиш консоли Стрелка вправо, Стрелка влево или вправо.</span><span class="sxs-lookup"><span data-stu-id="1900a-660">Then the example moves the console window in response to which of the UP ARROW, DOWN ARROW, LEFT ARROW, or RIGHT ARROW console keys is pressed.</span></span> <span data-ttu-id="1900a-661">Сетка помогает видеть перемещение окна консоли относительно буфера экрана.</span><span class="sxs-lookup"><span data-stu-id="1900a-661">The grid pattern helps you see the movement of the console window relative to the screen buffer.</span></span>  
  
 [!code-cpp[console.windowLT#1](~/samples/snippets/cpp/VS_Snippets_CLR/console.windowLT/CPP/wlt.cpp#1)]
 [!code-csharp[console.windowLT#1](~/samples/snippets/csharp/VS_Snippets_CLR/console.windowLT/CS/wlt.cs#1)]
 [!code-vb[console.windowLT#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/console.windowLT/VB/wlt.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="1900a-662"><paramref name="height" /> или <paramref name="width" /> меньше или равно нулю.</span><span class="sxs-lookup"><span data-stu-id="1900a-662"><paramref name="height" /> or <paramref name="width" /> is less than or equal to zero.</span></span>  
  
 <span data-ttu-id="1900a-663">- или -</span><span class="sxs-lookup"><span data-stu-id="1900a-663">-or-</span></span>  
  
 <span data-ttu-id="1900a-664">Параметр <paramref name="height" /> или <paramref name="width" /> больше или равен <see cref="F:System.Int16.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="1900a-664"><paramref name="height" /> or <paramref name="width" /> is greater than or equal to <see cref="F:System.Int16.MaxValue" />.</span></span>  
  
 <span data-ttu-id="1900a-665">- или -</span><span class="sxs-lookup"><span data-stu-id="1900a-665">-or-</span></span>  
  
 <span data-ttu-id="1900a-666"><paramref name="width" /> меньше <see cref="P:System.Console.WindowLeft" /> + <see cref="P:System.Console.WindowWidth" />.</span><span class="sxs-lookup"><span data-stu-id="1900a-666"><paramref name="width" /> is less than <see cref="P:System.Console.WindowLeft" /> + <see cref="P:System.Console.WindowWidth" />.</span></span>  
  
 <span data-ttu-id="1900a-667">- или -</span><span class="sxs-lookup"><span data-stu-id="1900a-667">-or-</span></span>  
  
 <span data-ttu-id="1900a-668"><paramref name="height" /> меньше <see cref="P:System.Console.WindowTop" /> + <see cref="P:System.Console.WindowHeight" />.</span><span class="sxs-lookup"><span data-stu-id="1900a-668"><paramref name="height" /> is less than <see cref="P:System.Console.WindowTop" /> + <see cref="P:System.Console.WindowHeight" />.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="1900a-669">Пользователь не имеет разрешений на выполнение этого действия.</span><span class="sxs-lookup"><span data-stu-id="1900a-669">The user does not have permission to perform this action.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1900a-670">Ошибка ввода/вывода.</span><span class="sxs-lookup"><span data-stu-id="1900a-670">An I/O error occurred.</span></span></exception>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="1900a-671">для изменения безопасных окон верхнего уровня и дочерние окна.</span><span class="sxs-lookup"><span data-stu-id="1900a-671">for modifying safe top-level windows and subwindows.</span></span> <span data-ttu-id="1900a-672">Связанное перечисление: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span><span class="sxs-lookup"><span data-stu-id="1900a-672">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="SetCursorPosition">
      <MemberSignature Language="C#" Value="public static void SetCursorPosition (int left, int top);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetCursorPosition(int32 left, int32 top) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.SetCursorPosition(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetCursorPosition (left As Integer, top As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetCursorPosition(int left, int top);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Int32" />
        <Parameter Name="top" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="1900a-673">Позиция столбца курсора.</span><span class="sxs-lookup"><span data-stu-id="1900a-673">The column position of the cursor.</span></span> <span data-ttu-id="1900a-674">Столбцы нумеруются как слева направо, начинается с 0.</span><span class="sxs-lookup"><span data-stu-id="1900a-674">Columns are numbered from left to right starting at 0.</span></span></param>
        <param name="top"><span data-ttu-id="1900a-675">Позиция строки курсора.</span><span class="sxs-lookup"><span data-stu-id="1900a-675">The row position of the cursor.</span></span> <span data-ttu-id="1900a-676">Строки пронумерованы сверху вниз, начиная с 0.</span><span class="sxs-lookup"><span data-stu-id="1900a-676">Rows are numbered from top to bottom starting at 0.</span></span></param>
        <summary><span data-ttu-id="1900a-677">Устанавливает положение курсора.</span><span class="sxs-lookup"><span data-stu-id="1900a-677">Sets the position of the cursor.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1900a-678">Используйте <xref:System.Console.SetCursorPosition%2A> метод, чтобы указать, где начинается следующей операции записи в окне консоли.</span><span class="sxs-lookup"><span data-stu-id="1900a-678">Use the <xref:System.Console.SetCursorPosition%2A> method to specify where the next write operation in the console window is to begin.</span></span> <span data-ttu-id="1900a-679">Если заданная позиция курсора находится вне области, видимых в настоящее время в окне консоли, начало координат этого окна автоматически изменения, чтобы сделать видимым курсора.</span><span class="sxs-lookup"><span data-stu-id="1900a-679">If the specified cursor position is outside the area that is currently visible in the console window, the window origin changes automatically to make the cursor visible.</span></span>  
  
 <span data-ttu-id="1900a-680">Курсор автоматически перемещается в следующую позицию символа, каждый раз символ записывается в окно консоли.</span><span class="sxs-lookup"><span data-stu-id="1900a-680">The cursor automatically moves to the next character position each time a character is written to the console window.</span></span> <span data-ttu-id="1900a-681">Если курсор находится в правую нижнюю позицию окна консоли, следующая операция записи вызовет окно консоли для прокрутки, курсор остается видимым.</span><span class="sxs-lookup"><span data-stu-id="1900a-681">If the cursor is at the bottom right character position of the console window, the next write operation causes the console window to scroll so the cursor remains visible.</span></span> <span data-ttu-id="1900a-682">Если вы хотите записать символ в правую нижнюю позицию без прокрутки, используйте окно консоли <xref:System.Console.MoveBufferArea%2A> способ перемещения символа в эту позицию.</span><span class="sxs-lookup"><span data-stu-id="1900a-682">If you want to write a character to the bottom right character position without causing the console window to scroll, use the <xref:System.Console.MoveBufferArea%2A> method to move a character to that position.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1900a-683">В этом примере демонстрируется <xref:System.Console.CursorLeft%2A> и <xref:System.Console.CursorTop%2A> свойства и <xref:System.Console.SetCursorPosition%2A> и <xref:System.Console.Clear%2A> методы.</span><span class="sxs-lookup"><span data-stu-id="1900a-683">This example demonstrates the <xref:System.Console.CursorLeft%2A> and <xref:System.Console.CursorTop%2A> properties, and the <xref:System.Console.SetCursorPosition%2A> and <xref:System.Console.Clear%2A> methods.</span></span> <span data-ttu-id="1900a-684">Примере курсор, который определяет, где произойдет следующая запись, для рисования 5 символов прямоугольником, 5 символов с помощью сочетания «+», «&#124;», и «-» строки.</span><span class="sxs-lookup"><span data-stu-id="1900a-684">The example positions the cursor, which determines where the next write will occur, to draw a 5 character by 5 character rectangle using a combination of "+", "&#124;", and "-" strings.</span></span> <span data-ttu-id="1900a-685">Обратите внимание, что прямоугольник можно нарисовать за меньшее число шагов, используя сочетание других строк.</span><span class="sxs-lookup"><span data-stu-id="1900a-685">Note that the rectangle could be drawn with fewer steps using a combination of other strings.</span></span>  
  
 [!code-cpp[console.cursorLTS#1](~/samples/snippets/cpp/VS_Snippets_CLR/console.cursorLTS/CPP/lts.cpp#1)]
 [!code-csharp[console.cursorLTS#1](~/samples/snippets/csharp/VS_Snippets_CLR/console.cursorLTS/CS/lts.cs#1)]
 [!code-vb[console.cursorLTS#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/console.cursorLTS/VB/lts.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="1900a-686">Значение параметра <paramref name="left" /> или <paramref name="top" /> меньше нуля.</span><span class="sxs-lookup"><span data-stu-id="1900a-686"><paramref name="left" /> or <paramref name="top" /> is less than zero.</span></span>  
  
 <span data-ttu-id="1900a-687">- или -</span><span class="sxs-lookup"><span data-stu-id="1900a-687">-or-</span></span>  
  
 <span data-ttu-id="1900a-688">Значение <paramref name="left" /> больше или равно <see cref="P:System.Console.BufferWidth" />.</span><span class="sxs-lookup"><span data-stu-id="1900a-688"><paramref name="left" /> is greater than or equal to <see cref="P:System.Console.BufferWidth" />.</span></span>  
  
 <span data-ttu-id="1900a-689">- или -</span><span class="sxs-lookup"><span data-stu-id="1900a-689">-or-</span></span>  
  
 <span data-ttu-id="1900a-690">Значение <paramref name="top" /> больше или равно <see cref="P:System.Console.BufferHeight" />.</span><span class="sxs-lookup"><span data-stu-id="1900a-690"><paramref name="top" /> is greater than or equal to <see cref="P:System.Console.BufferHeight" />.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="1900a-691">Пользователь не имеет разрешений на выполнение этого действия.</span><span class="sxs-lookup"><span data-stu-id="1900a-691">The user does not have permission to perform this action.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1900a-692">Ошибка ввода/вывода.</span><span class="sxs-lookup"><span data-stu-id="1900a-692">An I/O error occurred.</span></span></exception>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="1900a-693">для изменения безопасных окон верхнего уровня и дочерние окна.</span><span class="sxs-lookup"><span data-stu-id="1900a-693">for modifying safe top-level windows and subwindows.</span></span> <span data-ttu-id="1900a-694">Связанное перечисление: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span><span class="sxs-lookup"><span data-stu-id="1900a-694">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="SetError">
      <MemberSignature Language="C#" Value="public static void SetError (System.IO.TextWriter newError);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetError(class System.IO.TextWriter newError) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.SetError(System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetError (newError As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetError(System::IO::TextWriter ^ newError);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newError" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="newError"><span data-ttu-id="1900a-695">Поток, являющийся новым стандартным потоком сообщений об ошибках.</span><span class="sxs-lookup"><span data-stu-id="1900a-695">A stream that is the new standard error output.</span></span></param>
        <summary><span data-ttu-id="1900a-696">Присваивает свойству <see cref="P:System.Console.Error" /> указанный объект <see cref="T:System.IO.TextWriter" />.</span><span class="sxs-lookup"><span data-stu-id="1900a-696">Sets the <see cref="P:System.Console.Error" /> property to the specified <see cref="T:System.IO.TextWriter" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1900a-697">По умолчанию <xref:System.Console.Error%2A> задано значение в стандартный выходной поток ошибок.</span><span class="sxs-lookup"><span data-stu-id="1900a-697">By default, the <xref:System.Console.Error%2A> property is set to the standard error output stream.</span></span>  
  
 <span data-ttu-id="1900a-698">Объект <xref:System.IO.StreamWriter> , инкапсулирующий <xref:System.IO.FileStream> может использоваться для отправки сообщений об ошибках в файл.</span><span class="sxs-lookup"><span data-stu-id="1900a-698">A <xref:System.IO.StreamWriter> that encapsulates a <xref:System.IO.FileStream> can be used to send error messages to a file.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1900a-699">Приведенный ниже показано, как перенаправлять стандартный поток ошибок в файл.</span><span class="sxs-lookup"><span data-stu-id="1900a-699">The following example shows how to redirect the standard error stream to a file.</span></span>  
  
 [!code-cpp[System.Console.SetError#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Console.SetError/cpp/seterror1.cpp#1)]
 [!code-csharp[System.Console.SetError#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console.SetError/cs/SetError1.cs#1)]
 [!code-vb[System.Console.SetError#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console.SetError/vb/SetError1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1900a-700">Свойство <paramref name="newError" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="1900a-700"><paramref name="newError" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="1900a-701">У вызывающего объекта отсутствует необходимое разрешение.</span><span class="sxs-lookup"><span data-stu-id="1900a-701">The caller does not have the required permission.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="1900a-702">для вызова неуправляемого кода.</span><span class="sxs-lookup"><span data-stu-id="1900a-702">for calling unmanaged code.</span></span> <span data-ttu-id="1900a-703">Связанное перечисление: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="1900a-703">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
        <altmember cref="P:System.Console.IsErrorRedirected" />
        <altmember cref="P:System.Console.Error" />
      </Docs>
    </Member>
    <Member MemberName="SetIn">
      <MemberSignature Language="C#" Value="public static void SetIn (System.IO.TextReader newIn);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetIn(class System.IO.TextReader newIn) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.SetIn(System.IO.TextReader)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetIn (newIn As TextReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetIn(System::IO::TextReader ^ newIn);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newIn" Type="System.IO.TextReader" />
      </Parameters>
      <Docs>
        <param name="newIn"><span data-ttu-id="1900a-704">Поток, являющийся новым стандартным входным потоком.</span><span class="sxs-lookup"><span data-stu-id="1900a-704">A stream that is the new standard input.</span></span></param>
        <summary><span data-ttu-id="1900a-705">Присваивает свойству <see cref="P:System.Console.In" /> указанный объект <see cref="T:System.IO.TextReader" />.</span><span class="sxs-lookup"><span data-stu-id="1900a-705">Sets the <see cref="P:System.Console.In" /> property to the specified <see cref="T:System.IO.TextReader" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1900a-706">По умолчанию <xref:System.Console.In%2A> задано значение стандартного входного потока.</span><span class="sxs-lookup"><span data-stu-id="1900a-706">By default, the <xref:System.Console.In%2A> property is set to the standard input stream.</span></span>  
  
 <span data-ttu-id="1900a-707">Объект <xref:System.IO.StreamReader> , инкапсулирующий <xref:System.IO.FileStream> может использоваться для получения входных данных из файла.</span><span class="sxs-lookup"><span data-stu-id="1900a-707">A <xref:System.IO.StreamReader> that encapsulates a <xref:System.IO.FileStream> can be used to receive input from a file.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1900a-708">В следующем примере показано использование метода <xref:System.Console.SetIn%2A>.</span><span class="sxs-lookup"><span data-stu-id="1900a-708">The following example illustrates the use of the <xref:System.Console.SetIn%2A> method.</span></span> <span data-ttu-id="1900a-709">Он заменяет 4 последовательных пробела в строке символом табуляции.</span><span class="sxs-lookup"><span data-stu-id="1900a-709">It replaces four consecutive space characters in a string with a tab character.</span></span> <span data-ttu-id="1900a-710">Чтобы запустить ее, необходимо указать два аргумента командной строки.</span><span class="sxs-lookup"><span data-stu-id="1900a-710">To run it, you must supply two command line arguments.</span></span> <span data-ttu-id="1900a-711">Первый аргумент — это имя существующего текстового файла, в который требуется перенаправить стандартный входной поток.</span><span class="sxs-lookup"><span data-stu-id="1900a-711">The first is the name of an existing text file to redirect the standard input stream to.</span></span> <span data-ttu-id="1900a-712">Второй аргумент — это имя файла, в который требуется перенаправить стандартный выходной поток.</span><span class="sxs-lookup"><span data-stu-id="1900a-712">The second is the name of a file to redirect the standard output stream to.</span></span> <span data-ttu-id="1900a-713">Не требуется, чтобы этот файл существовал.</span><span class="sxs-lookup"><span data-stu-id="1900a-713">This file need not exist.</span></span> <span data-ttu-id="1900a-714">Если да, его содержимое будут перезаписано.</span><span class="sxs-lookup"><span data-stu-id="1900a-714">If it does, its contents will be overwritten.</span></span>  
  
 [!code-cpp[System.Console-INSERTTABS#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Console-INSERTTABS/CPP/inserttabs.cpp#1)]
 [!code-csharp[System.Console-INSERTTABS#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console-INSERTTABS/CS/inserttabs.cs#1)]
 [!code-vb[System.Console-INSERTTABS#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console-INSERTTABS/VB/inserttabs.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1900a-715">Свойство <paramref name="newIn" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="1900a-715"><paramref name="newIn" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="1900a-716">У вызывающего объекта отсутствует необходимое разрешение.</span><span class="sxs-lookup"><span data-stu-id="1900a-716">The caller does not have the required permission.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="1900a-717">для вызова неуправляемого кода.</span><span class="sxs-lookup"><span data-stu-id="1900a-717">for calling unmanaged code.</span></span> <span data-ttu-id="1900a-718">Связанное перечисление: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="1900a-718">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
        <altmember cref="T:System.IO.TextReader" />
        <altmember cref="P:System.Console.In" />
      </Docs>
    </Member>
    <Member MemberName="SetOut">
      <MemberSignature Language="C#" Value="public static void SetOut (System.IO.TextWriter newOut);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetOut(class System.IO.TextWriter newOut) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.SetOut(System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetOut (newOut As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetOut(System::IO::TextWriter ^ newOut);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newOut" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="newOut"><span data-ttu-id="1900a-719">Поток, являющийся новым стандартным выходным потоком.</span><span class="sxs-lookup"><span data-stu-id="1900a-719">A stream that is the new standard output.</span></span></param>
        <summary><span data-ttu-id="1900a-720">Присваивает свойству <see cref="P:System.Console.Out" /> указанный объект <see cref="T:System.IO.TextWriter" />.</span><span class="sxs-lookup"><span data-stu-id="1900a-720">Sets the <see cref="P:System.Console.Out" /> property to the specified <see cref="T:System.IO.TextWriter" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1900a-721">По умолчанию <xref:System.Console.Out%2A> задано значение в стандартный выходной поток.</span><span class="sxs-lookup"><span data-stu-id="1900a-721">By default, the <xref:System.Console.Out%2A> property is set to the standard output stream.</span></span>  
  
 <span data-ttu-id="1900a-722">Объект <xref:System.IO.StreamWriter> , инкапсулирующий <xref:System.IO.FileStream> может использоваться для отправки выходных данных в файл.</span><span class="sxs-lookup"><span data-stu-id="1900a-722">A <xref:System.IO.StreamWriter> that encapsulates a <xref:System.IO.FileStream> can be used to send output to a file.</span></span> <span data-ttu-id="1900a-723">Пример:</span><span class="sxs-lookup"><span data-stu-id="1900a-723">For example:</span></span>  
  
 [!code-cpp[System.Console.SetOut#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.console.setout/cpp/source.cpp#1)]
 [!code-csharp[System.Console.SetOut#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.console.setout/cs/source.cs#1)]
 [!code-vb[System.Console.SetOut#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.console.setout/vb/source.vb#1)]  
  
   
  
## Examples  
 <span data-ttu-id="1900a-724">В следующем примере показано использование метода <xref:System.Console.SetOut%2A>.</span><span class="sxs-lookup"><span data-stu-id="1900a-724">The following example illustrates the use of the <xref:System.Console.SetOut%2A> method.</span></span> <span data-ttu-id="1900a-725">Он заменяет 4 последовательных пробела в строке символом табуляции.</span><span class="sxs-lookup"><span data-stu-id="1900a-725">It replaces four consecutive space characters in a string with a tab character.</span></span> <span data-ttu-id="1900a-726">Чтобы запустить ее, необходимо указать два аргумента командной строки.</span><span class="sxs-lookup"><span data-stu-id="1900a-726">To run it, you must supply two command line arguments.</span></span> <span data-ttu-id="1900a-727">Первый аргумент — это имя существующего текстового файла, в который требуется перенаправить стандартный входной поток.</span><span class="sxs-lookup"><span data-stu-id="1900a-727">The first is the name of an existing text file to redirect the standard input stream to.</span></span> <span data-ttu-id="1900a-728">Второй аргумент — это имя файла, в который требуется перенаправить стандартный выходной поток.</span><span class="sxs-lookup"><span data-stu-id="1900a-728">The second is the name of a file to redirect the standard output stream to.</span></span> <span data-ttu-id="1900a-729">Не требуется, чтобы этот файл существовал.</span><span class="sxs-lookup"><span data-stu-id="1900a-729">This file need not exist.</span></span> <span data-ttu-id="1900a-730">Если да, его содержимое будут перезаписано.</span><span class="sxs-lookup"><span data-stu-id="1900a-730">If it does, its contents will be overwritten.</span></span>  
  
 [!code-cpp[System.Console-INSERTTABS#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Console-INSERTTABS/CPP/inserttabs.cpp#1)]
 [!code-csharp[System.Console-INSERTTABS#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console-INSERTTABS/CS/inserttabs.cs#1)]
 [!code-vb[System.Console-INSERTTABS#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console-INSERTTABS/VB/inserttabs.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1900a-731">Свойство <paramref name="newOut" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="1900a-731"><paramref name="newOut" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="1900a-732">У вызывающего объекта отсутствует необходимое разрешение.</span><span class="sxs-lookup"><span data-stu-id="1900a-732">The caller does not have the required permission.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="1900a-733">для вызова неуправляемого кода.</span><span class="sxs-lookup"><span data-stu-id="1900a-733">for calling unmanaged code.</span></span> <span data-ttu-id="1900a-734">Связанное перечисление: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="1900a-734">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="P:System.Console.Out" />
      </Docs>
    </Member>
    <Member MemberName="SetWindowPosition">
      <MemberSignature Language="C#" Value="public static void SetWindowPosition (int left, int top);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetWindowPosition(int32 left, int32 top) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.SetWindowPosition(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetWindowPosition (left As Integer, top As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetWindowPosition(int left, int top);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Int32" />
        <Parameter Name="top" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="1900a-735">Позиция столбца верхнего левого угла окна консоли.</span><span class="sxs-lookup"><span data-stu-id="1900a-735">The column position of the upper left  corner of the console window.</span></span></param>
        <param name="top"><span data-ttu-id="1900a-736">Позиция строки верхнего левого угла окна консоли.</span><span class="sxs-lookup"><span data-stu-id="1900a-736">The row position of the upper left corner of the console window.</span></span></param>
        <summary><span data-ttu-id="1900a-737">Задает позицию окна консоли относительно буфера экрана.</span><span class="sxs-lookup"><span data-stu-id="1900a-737">Sets the position of the console window relative to the screen buffer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1900a-738">В окне операционной системы отображаются в окне консоли, а в окне консоли отображается часть буфера экрана.</span><span class="sxs-lookup"><span data-stu-id="1900a-738">The operating system window displays the console window, and the console window displays a portion of the screen buffer.</span></span> <span data-ttu-id="1900a-739"><xref:System.Console.SetWindowPosition%2A> Метод влияет на позицию окна консоли относительно буфера экрана, но не влияет на положение окна операционной системы относительно рабочего стола.</span><span class="sxs-lookup"><span data-stu-id="1900a-739">The <xref:System.Console.SetWindowPosition%2A> method affects the position of the console window relative to the screen buffer, but does not affect the position of the operating system window relative to the desktop.</span></span>  
  
 <span data-ttu-id="1900a-740">Консоль и операционной системы windows обычно не влияют друг с другом.</span><span class="sxs-lookup"><span data-stu-id="1900a-740">The console and operating system windows generally do not affect each other.</span></span> <span data-ttu-id="1900a-741">Однако буфера экрана не может быть отображен в текущих границах окна консоли, операционная система автоматически добавляет полосы прокрутки окна операционной системы.</span><span class="sxs-lookup"><span data-stu-id="1900a-741">However, if the screen buffer cannot be displayed in the current boundaries of the console window, the operating system automatically appends scroll bars to the operating system window.</span></span> <span data-ttu-id="1900a-742">В этом случае перемещение полос прокрутки окна операционной системы влияет на позицию окна консоли, и перемещение окна консоли с <xref:System.Console.SetWindowPosition%2A> метод влияет на положение полосы прокрутки окна операционной системы.</span><span class="sxs-lookup"><span data-stu-id="1900a-742">In that case, moving the operating system window scroll bars affects the position of the console window, and moving the console window with the <xref:System.Console.SetWindowPosition%2A> method affects the position of the operating system window scroll bars.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1900a-743">В следующем примере демонстрируется <xref:System.Console.WindowLeft%2A>, <xref:System.Console.WindowTop%2A>, <xref:System.Console.WindowWidth%2A>, <xref:System.Console.WindowHeight%2A>, <xref:System.Console.BufferWidth%2A>, <xref:System.Console.BufferHeight%2A>, и <xref:System.Console.CursorVisible%2A> его свойства и <xref:System.Console.SetWindowPosition%2A>, <xref:System.Console.SetBufferSize%2A>, и <xref:System.Console.ReadKey%2A> методы.</span><span class="sxs-lookup"><span data-stu-id="1900a-743">The following example demonstrates the <xref:System.Console.WindowLeft%2A>, <xref:System.Console.WindowTop%2A>, <xref:System.Console.WindowWidth%2A>, <xref:System.Console.WindowHeight%2A>, <xref:System.Console.BufferWidth%2A>, <xref:System.Console.BufferHeight%2A>, and <xref:System.Console.CursorVisible%2A> properties; and the <xref:System.Console.SetWindowPosition%2A>, <xref:System.Console.SetBufferSize%2A>, and <xref:System.Console.ReadKey%2A> methods.</span></span> <span data-ttu-id="1900a-744">В примере рисуется сетка в буфере экрана, исходя из ширины буфера экрана.</span><span class="sxs-lookup"><span data-stu-id="1900a-744">The example draws a grid pattern in the screen buffer based on the screen buffer width.</span></span> <span data-ttu-id="1900a-745">Затем в примере показано перемещение окна консоли в ответ на который стрелка вверх, нажатия клавиш консоли Стрелка вправо, Стрелка влево или вправо.</span><span class="sxs-lookup"><span data-stu-id="1900a-745">Then the example moves the console window in response to which of the UP ARROW, DOWN ARROW, LEFT ARROW, or RIGHT ARROW console keys is pressed.</span></span> <span data-ttu-id="1900a-746">Сетка помогает видеть перемещение окна консоли относительно буфера экрана.</span><span class="sxs-lookup"><span data-stu-id="1900a-746">The grid pattern helps you see the movement of the console window relative to the screen buffer.</span></span>  
  
 [!code-cpp[console.windowLT#1](~/samples/snippets/cpp/VS_Snippets_CLR/console.windowLT/CPP/wlt.cpp#1)]
 [!code-csharp[console.windowLT#1](~/samples/snippets/csharp/VS_Snippets_CLR/console.windowLT/CS/wlt.cs#1)]
 [!code-vb[console.windowLT#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/console.windowLT/VB/wlt.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="1900a-747">Значение параметра <paramref name="left" /> или <paramref name="top" /> меньше нуля.</span><span class="sxs-lookup"><span data-stu-id="1900a-747"><paramref name="left" /> or <paramref name="top" /> is less than zero.</span></span>  
  
 <span data-ttu-id="1900a-748">- или -</span><span class="sxs-lookup"><span data-stu-id="1900a-748">-or-</span></span>  
  
 <span data-ttu-id="1900a-749"><paramref name="left" /> + <see cref="P:System.Console.WindowWidth" /> больше <see cref="P:System.Console.BufferWidth" />.</span><span class="sxs-lookup"><span data-stu-id="1900a-749"><paramref name="left" /> + <see cref="P:System.Console.WindowWidth" /> is greater than <see cref="P:System.Console.BufferWidth" />.</span></span>  
  
 <span data-ttu-id="1900a-750">- или -</span><span class="sxs-lookup"><span data-stu-id="1900a-750">-or-</span></span>  
  
 <span data-ttu-id="1900a-751"><paramref name="top" /> + <see cref="P:System.Console.WindowHeight" /> больше <see cref="P:System.Console.BufferHeight" />.</span><span class="sxs-lookup"><span data-stu-id="1900a-751"><paramref name="top" /> + <see cref="P:System.Console.WindowHeight" /> is greater than <see cref="P:System.Console.BufferHeight" />.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="1900a-752">Пользователь не имеет разрешений на выполнение этого действия.</span><span class="sxs-lookup"><span data-stu-id="1900a-752">The user does not have permission to perform this action.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1900a-753">Ошибка ввода/вывода.</span><span class="sxs-lookup"><span data-stu-id="1900a-753">An I/O error occurred.</span></span></exception>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="1900a-754">для изменения безопасных окон верхнего уровня и дочерние окна.</span><span class="sxs-lookup"><span data-stu-id="1900a-754">for modifying safe top-level windows and subwindows.</span></span> <span data-ttu-id="1900a-755">Связанное перечисление: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span><span class="sxs-lookup"><span data-stu-id="1900a-755">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="SetWindowSize">
      <MemberSignature Language="C#" Value="public static void SetWindowSize (int width, int height);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetWindowSize(int32 width, int32 height) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.SetWindowSize(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetWindowSize (width As Integer, height As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetWindowSize(int width, int height);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="width"><span data-ttu-id="1900a-756">Ширина окна консоли измеряется столбцами.</span><span class="sxs-lookup"><span data-stu-id="1900a-756">The width of the console window measured in columns.</span></span></param>
        <param name="height"><span data-ttu-id="1900a-757">Высота окна консоли измеряется строками.</span><span class="sxs-lookup"><span data-stu-id="1900a-757">The height of the console window measured in rows.</span></span></param>
        <summary><span data-ttu-id="1900a-758">Устанавливает заданные значения высоты и ширины окна консоли.</span><span class="sxs-lookup"><span data-stu-id="1900a-758">Sets the height and width of the console window to the specified values.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="1900a-759">В этом примере демонстрируется <xref:System.Console.SetWindowSize%2A> метода и <xref:System.Console.WindowWidth%2A> и <xref:System.Console.WindowHeight%2A> свойства.</span><span class="sxs-lookup"><span data-stu-id="1900a-759">This example demonstrates the <xref:System.Console.SetWindowSize%2A> method, and the <xref:System.Console.WindowWidth%2A> and <xref:System.Console.WindowHeight%2A> properties.</span></span> <span data-ttu-id="1900a-760">Необходимо запустить пример, чтобы увидеть полный эффект от изменения размера окна консоли.</span><span class="sxs-lookup"><span data-stu-id="1900a-760">You must run the example to see the full effect of changing the console window size.</span></span>  
  
 <span data-ttu-id="1900a-761">В примере выводятся размеры окна консоли, установленные равными 85 столбцам и 43 строкам, а затем ожидает нажатия клавиши.</span><span class="sxs-lookup"><span data-stu-id="1900a-761">The example reports the dimensions of a console window set to 85 columns and 43 rows, then waits for a key to be pressed.</span></span> <span data-ttu-id="1900a-762">При любой клавиши размеры окна консоли уменьшаются вдвое, выводятся новые размеры и код ожидает другой клавиши.</span><span class="sxs-lookup"><span data-stu-id="1900a-762">When any key is pressed, the dimensions of the console window are halved, the new dimensions are reported, and the example waits for another key press.</span></span> <span data-ttu-id="1900a-763">Наконец когда клавиша нажата, восстанавливаются исходные размеры окна консоли и кода данного примера завершается.</span><span class="sxs-lookup"><span data-stu-id="1900a-763">Finally, when any key is pressed, the console window is restored to its original dimensions and the example terminates.</span></span>  
  
 [!code-cpp[console.setwindowsize#1](~/samples/snippets/cpp/VS_Snippets_CLR/console.setwindowsize/CPP/sws.cpp#1)]
 [!code-csharp[console.setwindowsize#1](~/samples/snippets/csharp/VS_Snippets_CLR/console.setwindowsize/CS/sws.cs#1)]
 [!code-vb[console.setwindowsize#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/console.setwindowsize/VB/sws.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="1900a-764"><paramref name="width" /> или <paramref name="height" /> меньше или равно нулю.</span><span class="sxs-lookup"><span data-stu-id="1900a-764"><paramref name="width" /> or <paramref name="height" /> is less than or equal to zero.</span></span>  
  
 <span data-ttu-id="1900a-765">- или -</span><span class="sxs-lookup"><span data-stu-id="1900a-765">-or-</span></span>  
  
 <span data-ttu-id="1900a-766"><paramref name="width" /> плюс <see cref="P:System.Console.WindowLeft" /> или <paramref name="height" /> плюс <see cref="P:System.Console.WindowTop" /> больше или равно <see cref="F:System.Int16.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="1900a-766"><paramref name="width" /> plus <see cref="P:System.Console.WindowLeft" /> or <paramref name="height" /> plus <see cref="P:System.Console.WindowTop" /> is greater than or equal to <see cref="F:System.Int16.MaxValue" />.</span></span>  
  
 <span data-ttu-id="1900a-767">- или -</span><span class="sxs-lookup"><span data-stu-id="1900a-767">-or-</span></span>  
  
 <span data-ttu-id="1900a-768">Значение <paramref name="width" /> или <paramref name="height" /> больше наибольшей возможной ширины или высоты окна для текущего разрешения экрана и шрифта консоли.</span><span class="sxs-lookup"><span data-stu-id="1900a-768"><paramref name="width" /> or <paramref name="height" /> is greater than the largest possible window width or height for the current screen resolution and console font.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="1900a-769">Пользователь не имеет разрешений на выполнение этого действия.</span><span class="sxs-lookup"><span data-stu-id="1900a-769">The user does not have permission to perform this action.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1900a-770">Ошибка ввода/вывода.</span><span class="sxs-lookup"><span data-stu-id="1900a-770">An I/O error occurred.</span></span></exception>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="1900a-771">для изменения безопасных окон верхнего уровня и дочерние окна.</span><span class="sxs-lookup"><span data-stu-id="1900a-771">for modifying safe top-level windows and subwindows.</span></span> <span data-ttu-id="1900a-772">Связанное перечисление: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span><span class="sxs-lookup"><span data-stu-id="1900a-772">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Title">
      <MemberSignature Language="C#" Value="public static string Title { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property string Title" />
      <MemberSignature Language="DocId" Value="P:System.Console.Title" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property Title As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ Title { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1900a-773">Возвращает или задает заголовок для отображения в строке заголовка консоли.</span><span class="sxs-lookup"><span data-stu-id="1900a-773">Gets or sets the title to display in the console title bar.</span></span></summary>
        <value><span data-ttu-id="1900a-774">Строка для отображения в строке заголовка консоли.</span><span class="sxs-lookup"><span data-stu-id="1900a-774">The string to be displayed in the title bar of the console.</span></span> <span data-ttu-id="1900a-775">Максимальная длина строки заголовка — 24500 символов.</span><span class="sxs-lookup"><span data-stu-id="1900a-775">The maximum length of the title string is 24500 characters.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="1900a-776">В этом примере демонстрируется <xref:System.Console.Title%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="1900a-776">This example demonstrates the <xref:System.Console.Title%2A> property.</span></span> <span data-ttu-id="1900a-777">В примере содержится заголовок текущей окна операционной системы, ожидает нажатие клавиши, а затем отображает новый заголовок.</span><span class="sxs-lookup"><span data-stu-id="1900a-777">The example displays the current title of the operating system window, waits for a key press, then displays a new title.</span></span>  
  
 [!code-cpp[console.title#1](~/samples/snippets/cpp/VS_Snippets_CLR/console.title/CPP/mytitle.cpp#1)]
 [!code-csharp[console.title#1](~/samples/snippets/csharp/VS_Snippets_CLR/console.title/CS/mytitle.cs#1)]
 [!code-vb[console.title#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/console.title/VB/mytitle.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="1900a-778">В операции get длина полученного заголовка превышает 24 500 символов.</span><span class="sxs-lookup"><span data-stu-id="1900a-778">In a get operation, the retrieved title is longer than 24500 characters.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="1900a-779">В операции set длина указанного заголовка превышает 24 500 символов.</span><span class="sxs-lookup"><span data-stu-id="1900a-779">In a set operation, the specified title is longer than 24500 characters.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1900a-780">В операции set указанный заголовок имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="1900a-780">In a set operation, the specified title is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1900a-781">Ошибка ввода/вывода.</span><span class="sxs-lookup"><span data-stu-id="1900a-781">An I/O error occurred.</span></span></exception>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="1900a-782">для изменения безопасных окон верхнего уровня и дочерние окна.</span><span class="sxs-lookup"><span data-stu-id="1900a-782">for modifying safe top-level windows and subwindows.</span></span> <span data-ttu-id="1900a-783">Связанное перечисление: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span><span class="sxs-lookup"><span data-stu-id="1900a-783">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="TreatControlCAsInput">
      <MemberSignature Language="C#" Value="public static bool TreatControlCAsInput { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property bool TreatControlCAsInput" />
      <MemberSignature Language="DocId" Value="P:System.Console.TreatControlCAsInput" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property TreatControlCAsInput As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool TreatControlCAsInput { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1900a-784">Получает или задает значение, указывающее, интерпретируется ли комбинация клавиши-модификатора <see cref="F:System.ConsoleModifiers.Control" /> и клавиши консоли <see cref="F:System.ConsoleKey.C" /> (Ctrl+C) как обычный ввод или как прерывание, которое обрабатывается операционной системой.</span><span class="sxs-lookup"><span data-stu-id="1900a-784">Gets or sets a value indicating whether the combination of the <see cref="F:System.ConsoleModifiers.Control" /> modifier key and <see cref="F:System.ConsoleKey.C" /> console key (Ctrl+C) is treated as ordinary input or as an interruption that is handled by the operating system.</span></span></summary>
        <value>
          <span data-ttu-id="1900a-785">Значение <see langword="true" />, если сочетание клавиш CTRL+C интерпретируется как обычный ввод; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="1900a-785"><see langword="true" /> if Ctrl+C is treated as ordinary input; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1900a-786">Если значение <xref:System.Console.TreatControlCAsInput%2A> свойство `false` и нажатии Ctrl + C, нажатых клавиш не хранятся в буфере ввода и операционная система прекращает выполнение текущего выполняемого процесса.</span><span class="sxs-lookup"><span data-stu-id="1900a-786">If the value of the <xref:System.Console.TreatControlCAsInput%2A> property is `false` and Ctrl+C is pressed, the pressed keys are not stored in the input buffer and the operating system terminates the currently executing process.</span></span> <span data-ttu-id="1900a-787">Это значение по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="1900a-787">This is the default value.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="1900a-788">Использовать это свойство осмотрительно, так как значения этого свойства `true` имеет существенное влияние.</span><span class="sxs-lookup"><span data-stu-id="1900a-788">Use this property judiciously because setting it to `true` has such a dramatic effect.</span></span> <span data-ttu-id="1900a-789">Большинство пользователи ожидают, что сочетание клавиш Ctrl + C, чтобы завершить консольное приложение.</span><span class="sxs-lookup"><span data-stu-id="1900a-789">Most users expect Ctrl+C to terminate a console application.</span></span> <span data-ttu-id="1900a-790">При отключении эффект Ctrl + C, пользователю придется использовать завершить работу приложения, который является менее известное сочетание клавиш Ctrl + Break.</span><span class="sxs-lookup"><span data-stu-id="1900a-790">If you disable the effect of Ctrl+C, the user must remember to use Ctrl+Break to terminate the application, which is a less familiar key combination.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1900a-791">В следующем примере демонстрируется <xref:System.Console.TreatControlCAsInput%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="1900a-791">The following example demonstrates the <xref:System.Console.TreatControlCAsInput%2A> property.</span></span>  
  
 [!code-cpp[console.readkey1#1](~/samples/snippets/cpp/VS_Snippets_CLR/console.readkey1/CPP/rk.cpp#1)]
 [!code-csharp[console.readkey1#1](~/samples/snippets/csharp/VS_Snippets_CLR/console.readkey1/CS/rk.cs#1)]
 [!code-vb[console.readkey1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/console.readkey1/VB/rk.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1900a-792">Не удалось получить или задать режим ввода входного буфера консоли.</span><span class="sxs-lookup"><span data-stu-id="1900a-792">Unable to get or set the input mode of the console input buffer.</span></span></exception>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="1900a-793">для изменения безопасных окон верхнего уровня и дочерние окна.</span><span class="sxs-lookup"><span data-stu-id="1900a-793">for modifying safe top-level windows and subwindows.</span></span> <span data-ttu-id="1900a-794">Связанное перечисление: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span><span class="sxs-lookup"><span data-stu-id="1900a-794">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span></span></permission>
        <altmember cref="F:System.ConsoleModifiers.Control" />
        <altmember cref="F:System.ConsoleKey.C" />
        <altmember cref="E:System.Console.CancelKeyPress" />
      </Docs>
    </Member>
    <Member MemberName="WindowHeight">
      <MemberSignature Language="C#" Value="public static int WindowHeight { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 WindowHeight" />
      <MemberSignature Language="DocId" Value="P:System.Console.WindowHeight" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property WindowHeight As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int WindowHeight { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1900a-795">Возвращает или задает высоту области окна консоли.</span><span class="sxs-lookup"><span data-stu-id="1900a-795">Gets or sets the height of the console window area.</span></span></summary>
        <value><span data-ttu-id="1900a-796">Высота окна консоли измеряется строками.</span><span class="sxs-lookup"><span data-stu-id="1900a-796">The height of the console window measured in rows.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1900a-797">Попытка задать значение <xref:System.Console.WindowHeight%2A> при перенаправлении вывода вызывает либо <xref:System.ArgumentOutOfRangeException> или <xref:System.IO.IOException> исключение.</span><span class="sxs-lookup"><span data-stu-id="1900a-797">Attempting to set the value of the <xref:System.Console.WindowHeight%2A> property when output is redirected throws either an <xref:System.ArgumentOutOfRangeException> or an <xref:System.IO.IOException> exception.</span></span> <span data-ttu-id="1900a-798">Чтобы предотвратить исключение, можно задать значение этого свойства только в том случае, если <xref:System.Console.IsOutputRedirected%2A> возвращает `false`.</span><span class="sxs-lookup"><span data-stu-id="1900a-798">To prevent an exception, you can set the value of this property only if the <xref:System.Console.IsOutputRedirected%2A> property returns `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1900a-799">В этом примере демонстрируется <xref:System.Console.SetWindowSize%2A> метода и <xref:System.Console.WindowWidth%2A> и <xref:System.Console.WindowHeight%2A> свойства.</span><span class="sxs-lookup"><span data-stu-id="1900a-799">This example demonstrates the <xref:System.Console.SetWindowSize%2A> method, and the <xref:System.Console.WindowWidth%2A> and <xref:System.Console.WindowHeight%2A> properties.</span></span> <span data-ttu-id="1900a-800">Необходимо запустить пример, чтобы увидеть полный эффект от изменения размера окна консоли.</span><span class="sxs-lookup"><span data-stu-id="1900a-800">You must run the example to see the full effect of changing the console window size.</span></span>  
  
 <span data-ttu-id="1900a-801">В примере выводятся размеры окна консоли, установленные равными 85 столбцам и 43 строкам, а затем ожидает нажатие клавиши.</span><span class="sxs-lookup"><span data-stu-id="1900a-801">The example reports the dimensions of a console window set to 85 columns and 43 rows, then waits for a key press.</span></span> <span data-ttu-id="1900a-802">При любой клавиши размеры окна консоли уменьшаются вдвое, выводятся новые размеры и код ожидает другой клавиши.</span><span class="sxs-lookup"><span data-stu-id="1900a-802">When any key is pressed, the dimensions of the console window are halved, the new dimensions are reported, and the example waits for another key press.</span></span> <span data-ttu-id="1900a-803">Наконец когда клавиша нажата восстанавливаются исходные размеры окна консоли и кода данного примера завершается.</span><span class="sxs-lookup"><span data-stu-id="1900a-803">Finally, when any key is pressed the console window is restored to its original dimensions and the example terminates.</span></span>  
  
 [!code-cpp[console.setwindowsize#1](~/samples/snippets/cpp/VS_Snippets_CLR/console.setwindowsize/CPP/sws.cpp#1)]
 [!code-csharp[console.setwindowsize#1](~/samples/snippets/csharp/VS_Snippets_CLR/console.setwindowsize/CS/sws.cs#1)]
 [!code-vb[console.setwindowsize#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/console.setwindowsize/VB/sws.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="1900a-804">Значение свойства <see cref="P:System.Console.WindowWidth" /> или <see cref="P:System.Console.WindowHeight" /> больше или равно 0.</span><span class="sxs-lookup"><span data-stu-id="1900a-804">The value of the <see cref="P:System.Console.WindowWidth" /> property or the value of the <see cref="P:System.Console.WindowHeight" /> property is less than or equal to 0.</span></span>  
  
 <span data-ttu-id="1900a-805">- или -</span><span class="sxs-lookup"><span data-stu-id="1900a-805">-or-</span></span>  
  
 <span data-ttu-id="1900a-806">Сумма значений свойств <see cref="P:System.Console.WindowHeight" /> и <see cref="P:System.Console.WindowTop" /> больше или равна <see cref="F:System.Int16.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="1900a-806">The value of the <see cref="P:System.Console.WindowHeight" /> property plus the value of the <see cref="P:System.Console.WindowTop" /> property is greater than or equal to <see cref="F:System.Int16.MaxValue" />.</span></span>  
  
 <span data-ttu-id="1900a-807">- или -</span><span class="sxs-lookup"><span data-stu-id="1900a-807">-or-</span></span>  
  
 <span data-ttu-id="1900a-808">Значение свойства <see cref="P:System.Console.WindowWidth" /> или <see cref="P:System.Console.WindowHeight" /> больше наибольшей возможной ширины или высоты окна для текущего шрифта консоли и разрешения экрана.</span><span class="sxs-lookup"><span data-stu-id="1900a-808">The value of the <see cref="P:System.Console.WindowWidth" /> property or the value of the <see cref="P:System.Console.WindowHeight" /> property is greater than the largest possible window width or height for the current screen resolution and console font.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1900a-809">Ошибка при чтении или записи данных.</span><span class="sxs-lookup"><span data-stu-id="1900a-809">Error reading or writing information.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WindowLeft">
      <MemberSignature Language="C#" Value="public static int WindowLeft { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 WindowLeft" />
      <MemberSignature Language="DocId" Value="P:System.Console.WindowLeft" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property WindowLeft As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int WindowLeft { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1900a-810">Возвращает или задает позицию левого края области окна консоли относительно буфера экрана.</span><span class="sxs-lookup"><span data-stu-id="1900a-810">Gets or sets the leftmost position of the console window area relative to the screen buffer.</span></span></summary>
        <value><span data-ttu-id="1900a-811">Позиция левого края области окна консоли измеряется столбцами.</span><span class="sxs-lookup"><span data-stu-id="1900a-811">The leftmost console window position measured in columns.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1900a-812">Консоль представляет прямоугольное окно в большей области буфера.</span><span class="sxs-lookup"><span data-stu-id="1900a-812">The console represents a rectangular window into a larger rectangular buffer area.</span></span> <span data-ttu-id="1900a-813">Окна и буфере измеряются вертикально по их количеству строк и горизонтально по их количеству столбцов.</span><span class="sxs-lookup"><span data-stu-id="1900a-813">Both the window and the buffer are measured vertically by their number of rows and horizontally by their number of columns.</span></span> <span data-ttu-id="1900a-814">Измерений буферной области определяются <xref:System.Console.BufferHeight%2A> и <xref:System.Console.BufferWidth%2A> свойства.</span><span class="sxs-lookup"><span data-stu-id="1900a-814">The dimensions of the buffer area are defined by the <xref:System.Console.BufferHeight%2A> and <xref:System.Console.BufferWidth%2A> properties.</span></span> <span data-ttu-id="1900a-815">Размеры области консоли, определяются <xref:System.Console.WindowHeight%2A> и <xref:System.Console.WindowWidth%2A> свойства.</span><span class="sxs-lookup"><span data-stu-id="1900a-815">The dimensions of the console area are defined by the <xref:System.Console.WindowHeight%2A> and <xref:System.Console.WindowWidth%2A> properties.</span></span> <span data-ttu-id="1900a-816"><xref:System.Console.WindowLeft%2A> Свойство определяет, какой столбец буферной области отображается в первом столбце окна консоли.</span><span class="sxs-lookup"><span data-stu-id="1900a-816">The <xref:System.Console.WindowLeft%2A> property determines which column of the buffer area is displayed in the first column of the console window.</span></span> <span data-ttu-id="1900a-817">Значение <xref:System.Console.WindowLeft%2A> свойства допустимы значения от 0 до <xref:System.Console.BufferWidth%2A>  -  <xref:System.Console.WindowWidth%2A>.</span><span class="sxs-lookup"><span data-stu-id="1900a-817">The value of the <xref:System.Console.WindowLeft%2A> property can range from 0 to <xref:System.Console.BufferWidth%2A> - <xref:System.Console.WindowWidth%2A>.</span></span> <span data-ttu-id="1900a-818">Попытка присвоить значение за пределами этого диапазона возникает исключение <xref:System.ArgumentOutOfRangeException>.</span><span class="sxs-lookup"><span data-stu-id="1900a-818">Attempting to set it to a value outside that range throws an <xref:System.ArgumentOutOfRangeException>.</span></span>  
  
 <span data-ttu-id="1900a-819">При первом открытии окна консоли, значение по умолчанию <xref:System.Console.WindowLeft%2A> свойство имеет значение 0, который указывает, что первый столбец, показанный в консоли соответствует первому столбцу (столбцу с нулевой позицией) в буферной области.</span><span class="sxs-lookup"><span data-stu-id="1900a-819">When a console window first opens, the default value of the <xref:System.Console.WindowLeft%2A> property is zero, which indicates that the first column shown by the console corresponds to the first column (the column at position zero) in the buffer area.</span></span> <span data-ttu-id="1900a-820">Ширину окна консоли и области буфера по умолчанию равно 80.</span><span class="sxs-lookup"><span data-stu-id="1900a-820">The default width of both the console window and the buffer area is 80 columns.</span></span> <span data-ttu-id="1900a-821">Это означает, что <xref:System.Console.WindowLeft%2A> свойство можно изменять только в том случае, если окно консоли станет уже или области буфера.</span><span class="sxs-lookup"><span data-stu-id="1900a-821">This means that the <xref:System.Console.WindowLeft%2A> property can be modified only if the console window is made narrower or the buffer area is made wider.</span></span>  
  
 <span data-ttu-id="1900a-822">Обратите внимание, что если ширина буферной области превышает ширину окна консоли значение <xref:System.Console.WindowLeft%2A> свойства автоматически корректируется при использовании пользователем горизонтальной полосы прокрутки для определения отношения в буферной области.</span><span class="sxs-lookup"><span data-stu-id="1900a-822">Note that if the width of the buffer area exceeds the width of the console window, the value of the <xref:System.Console.WindowLeft%2A> property is automatically adjusted when the user uses the horizontal scroll bar to define the window's relationship to the buffer area.</span></span>  
  
 <span data-ttu-id="1900a-823">Попытка задать значение <xref:System.Console.WindowLeft%2A> свойство при выводе результата не перенаправлен вызывает <xref:System.IO.IOException> исключение.</span><span class="sxs-lookup"><span data-stu-id="1900a-823">Attempting to set the value of the <xref:System.Console.WindowLeft%2A> property when output is redirected throws an <xref:System.IO.IOException> exception.</span></span> <span data-ttu-id="1900a-824">Чтобы избежать возникновения исключения, можно задать значение этого свойства только в том случае, если <xref:System.Console.IsOutputRedirected%2A> возвращает `false`.</span><span class="sxs-lookup"><span data-stu-id="1900a-824">To prevent the exception, you can set the value of this property only if the <xref:System.Console.IsOutputRedirected%2A> property returns `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1900a-825">В следующем примере открывается окно консоли столбца 80 и определяет область буфера шириной 120 столбцов.</span><span class="sxs-lookup"><span data-stu-id="1900a-825">The following example opens an 80-column console window and defines a buffer area that is 120 columns wide.</span></span> <span data-ttu-id="1900a-826">Отображает сведения об окне и размере буфера и ждет пользователю нажать клавишу со стрелкой влево или Стрелка вправо.</span><span class="sxs-lookup"><span data-stu-id="1900a-826">It displays information on window and buffer size, and then waits for the user to press either the LEFT ARROW key or the RIGHT ARROW key.</span></span> <span data-ttu-id="1900a-827">В первом случае он уменьшает значение <xref:System.Console.WindowLeft%2A> свойства на единицу, если результат является допустимым значением.</span><span class="sxs-lookup"><span data-stu-id="1900a-827">In the former case, it decrements the value of the <xref:System.Console.WindowLeft%2A> property by one if the result is a legal value.</span></span> <span data-ttu-id="1900a-828">В последнем случае оно увеличивается значение <xref:System.Console.WindowLeft%2A> свойства на единицу, если результат должен быть допустимым.</span><span class="sxs-lookup"><span data-stu-id="1900a-828">In the latter case, it increases the value of the <xref:System.Console.WindowLeft%2A> property by one if the result would be legal.</span></span> <span data-ttu-id="1900a-829">Обратите внимание, что пример не должен обрабатывать <xref:System.ArgumentOutOfRangeException>, так как он проверяет, что значение, присваиваемое <xref:System.Console.WindowLeft%2A> свойство не является отрицательным и не приводит к сумме <xref:System.Console.WindowLeft%2A> и <xref:System.Console.WindowWidth%2A> свойства к превышению <xref:System.Console.BufferWidth%2A> значение свойства.</span><span class="sxs-lookup"><span data-stu-id="1900a-829">Note that the example does not have to handle an <xref:System.ArgumentOutOfRangeException>, because it checks that the value to be assigned to the <xref:System.Console.WindowLeft%2A> property is not negative and does not cause the sum of the <xref:System.Console.WindowLeft%2A> and <xref:System.Console.WindowWidth%2A> properties to exceed the <xref:System.Console.BufferWidth%2A> property value.</span></span>  
  
 [!code-cpp[System.Console.WindowLeft#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.console.windowleft/cpp/windowleft1.cpp#1)]
 [!code-csharp[System.Console.WindowLeft#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.console.windowleft/cs/windowleft1.cs#1)]
 [!code-vb[System.Console.WindowLeft#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.console.windowleft/vb/windowleft1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="1900a-830">В операции задания назначаемое значение меньше нуля.</span><span class="sxs-lookup"><span data-stu-id="1900a-830">In a set operation, the value to be assigned is less than zero.</span></span>  
  
 <span data-ttu-id="1900a-831">- или -</span><span class="sxs-lookup"><span data-stu-id="1900a-831">-or-</span></span>  
  
 <span data-ttu-id="1900a-832">В результате назначения сумма <see cref="P:System.Console.WindowLeft" /> и <see cref="P:System.Console.WindowWidth" /> превысит <see cref="P:System.Console.BufferWidth" />.</span><span class="sxs-lookup"><span data-stu-id="1900a-832">As a result of the assignment, <see cref="P:System.Console.WindowLeft" /> plus <see cref="P:System.Console.WindowWidth" /> would exceed <see cref="P:System.Console.BufferWidth" />.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1900a-833">Ошибка при чтении или записи данных.</span><span class="sxs-lookup"><span data-stu-id="1900a-833">Error reading or writing information.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WindowTop">
      <MemberSignature Language="C#" Value="public static int WindowTop { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 WindowTop" />
      <MemberSignature Language="DocId" Value="P:System.Console.WindowTop" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property WindowTop As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int WindowTop { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1900a-834">Возвращает или задает позицию верхнего края области окна консоли относительно буфера экрана.</span><span class="sxs-lookup"><span data-stu-id="1900a-834">Gets or sets the top position of the console window area relative to the screen buffer.</span></span></summary>
        <value><span data-ttu-id="1900a-835">Позиция верхнего края области окна консоли измеряется строками.</span><span class="sxs-lookup"><span data-stu-id="1900a-835">The uppermost console window position measured in rows.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1900a-836">Консоль представляет прямоугольное окно в большей области буфера.</span><span class="sxs-lookup"><span data-stu-id="1900a-836">The console represents a rectangular window into a larger rectangular buffer area.</span></span> <span data-ttu-id="1900a-837">Окна и буфере измеряются вертикально по их количеству строк и горизонтально по их количеству столбцов.</span><span class="sxs-lookup"><span data-stu-id="1900a-837">Both the window and the buffer are measured vertically by their number of rows and horizontally by their number of columns.</span></span> <span data-ttu-id="1900a-838">Измерений буферной области определяются <xref:System.Console.BufferHeight%2A> и <xref:System.Console.BufferWidth%2A> свойства.</span><span class="sxs-lookup"><span data-stu-id="1900a-838">The dimensions of the buffer area are defined by the <xref:System.Console.BufferHeight%2A> and <xref:System.Console.BufferWidth%2A> properties.</span></span> <span data-ttu-id="1900a-839">Размеры области консоли, определяются <xref:System.Console.WindowHeight%2A> и <xref:System.Console.WindowWidth%2A> свойства.</span><span class="sxs-lookup"><span data-stu-id="1900a-839">The dimensions of the console area are defined by the <xref:System.Console.WindowHeight%2A> and <xref:System.Console.WindowWidth%2A> properties.</span></span> <span data-ttu-id="1900a-840"><xref:System.Console.WindowTop%2A> Свойство определяет, какая строка буферной области отображается в первом столбце окна консоли.</span><span class="sxs-lookup"><span data-stu-id="1900a-840">The <xref:System.Console.WindowTop%2A> property determines which row of the buffer area is displayed in the first column of the console window.</span></span> <span data-ttu-id="1900a-841">Значение <xref:System.Console.WindowTop%2A> свойства допустимы значения от 0 до <xref:System.Console.BufferHeight%2A>  -  <xref:System.Console.WindowHeight%2A>.</span><span class="sxs-lookup"><span data-stu-id="1900a-841">The value of the <xref:System.Console.WindowTop%2A> property can range from 0 to <xref:System.Console.BufferHeight%2A> - <xref:System.Console.WindowHeight%2A>.</span></span> <span data-ttu-id="1900a-842">Попытка присвоить значение за пределами этого диапазона возникает исключение <xref:System.ArgumentOutOfRangeException>.</span><span class="sxs-lookup"><span data-stu-id="1900a-842">Attempting to set it to a value outside that range throws an <xref:System.ArgumentOutOfRangeException>.</span></span>  
  
 <span data-ttu-id="1900a-843">Попытка задать значение <xref:System.Console.WindowTop%2A> свойство при выводе результата не перенаправлен вызывает <xref:System.IO.IOException> исключение.</span><span class="sxs-lookup"><span data-stu-id="1900a-843">Attempting to set the value of the <xref:System.Console.WindowTop%2A> property when output is redirected throws an <xref:System.IO.IOException> exception.</span></span> <span data-ttu-id="1900a-844">Чтобы избежать возникновения исключения, можно задать значение этого свойства только в том случае, если <xref:System.Console.IsOutputRedirected%2A> возвращает `false`.</span><span class="sxs-lookup"><span data-stu-id="1900a-844">To prevent the exception, you can set the value of this property only if the <xref:System.Console.IsOutputRedirected%2A> property returns `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1900a-845">В следующем примере демонстрируется <xref:System.Console.WindowLeft%2A>, <xref:System.Console.WindowTop%2A>, <xref:System.Console.WindowWidth%2A>, <xref:System.Console.WindowHeight%2A>, <xref:System.Console.BufferWidth%2A>, <xref:System.Console.BufferHeight%2A>, и <xref:System.Console.CursorVisible%2A> его свойства и <xref:System.Console.SetWindowPosition%2A>, <xref:System.Console.SetBufferSize%2A>, и <xref:System.Console.ReadKey%2A> методы.</span><span class="sxs-lookup"><span data-stu-id="1900a-845">The following example demonstrates the <xref:System.Console.WindowLeft%2A>, <xref:System.Console.WindowTop%2A>, <xref:System.Console.WindowWidth%2A>, <xref:System.Console.WindowHeight%2A>, <xref:System.Console.BufferWidth%2A>, <xref:System.Console.BufferHeight%2A>, and <xref:System.Console.CursorVisible%2A> properties; and the <xref:System.Console.SetWindowPosition%2A>, <xref:System.Console.SetBufferSize%2A>, and <xref:System.Console.ReadKey%2A> methods.</span></span> <span data-ttu-id="1900a-846">В примере рисуется сетка в буфере экрана, исходя из ширины буфера экрана.</span><span class="sxs-lookup"><span data-stu-id="1900a-846">The example draws a grid pattern in the screen buffer based on the screen buffer width.</span></span> <span data-ttu-id="1900a-847">Затем в примере показано перемещение окна консоли в ответ на который стрелка вверх, нажатия клавиш консоли Стрелка вправо, Стрелка влево или вправо.</span><span class="sxs-lookup"><span data-stu-id="1900a-847">Then the example moves the console window in response to which of the UP ARROW, DOWN ARROW, LEFT ARROW, or RIGHT ARROW console keys is pressed.</span></span> <span data-ttu-id="1900a-848">Сетка помогает видеть перемещение окна консоли относительно буфера экрана.</span><span class="sxs-lookup"><span data-stu-id="1900a-848">The grid pattern helps you see the movement of the console window relative to the screen buffer.</span></span>  
  
 [!code-cpp[console.windowLT#1](~/samples/snippets/cpp/VS_Snippets_CLR/console.windowLT/CPP/wlt.cpp#1)]
 [!code-csharp[console.windowLT#1](~/samples/snippets/csharp/VS_Snippets_CLR/console.windowLT/CS/wlt.cs#1)]
 [!code-vb[console.windowLT#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/console.windowLT/VB/wlt.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="1900a-849">В операции задания назначаемое значение меньше нуля.</span><span class="sxs-lookup"><span data-stu-id="1900a-849">In a set operation, the value to be assigned is less than zero.</span></span>  
  
 <span data-ttu-id="1900a-850">- или -</span><span class="sxs-lookup"><span data-stu-id="1900a-850">-or-</span></span>  
  
 <span data-ttu-id="1900a-851">В результате назначения сумма <see cref="P:System.Console.WindowTop" /> и <see cref="P:System.Console.WindowHeight" /> превысит <see cref="P:System.Console.BufferHeight" />.</span><span class="sxs-lookup"><span data-stu-id="1900a-851">As a result of the assignment, <see cref="P:System.Console.WindowTop" /> plus <see cref="P:System.Console.WindowHeight" /> would exceed <see cref="P:System.Console.BufferHeight" />.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1900a-852">Ошибка при чтении или записи данных.</span><span class="sxs-lookup"><span data-stu-id="1900a-852">Error reading or writing information.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WindowWidth">
      <MemberSignature Language="C#" Value="public static int WindowWidth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 WindowWidth" />
      <MemberSignature Language="DocId" Value="P:System.Console.WindowWidth" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property WindowWidth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int WindowWidth { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1900a-853">Возвращает или задает ширину окна консоли.</span><span class="sxs-lookup"><span data-stu-id="1900a-853">Gets or sets the width of the console window.</span></span></summary>
        <value><span data-ttu-id="1900a-854">Ширина окна консоли измеряется столбцами.</span><span class="sxs-lookup"><span data-stu-id="1900a-854">The width of the console window measured in columns.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1900a-855">Попытка задать значение <xref:System.Console.WindowWidth%2A> при перенаправлении вывода вызывает либо <xref:System.ArgumentOutOfRangeException> или <xref:System.IO.IOException> исключение.</span><span class="sxs-lookup"><span data-stu-id="1900a-855">Attempting to set the value of the <xref:System.Console.WindowWidth%2A> property when output is redirected throws either an <xref:System.ArgumentOutOfRangeException> or an <xref:System.IO.IOException> exception.</span></span> <span data-ttu-id="1900a-856">Чтобы предотвратить исключение, можно задать значение этого свойства только в том случае, если <xref:System.Console.IsOutputRedirected%2A> возвращает `false`.</span><span class="sxs-lookup"><span data-stu-id="1900a-856">To prevent an exception, you can set the value of this property only if the <xref:System.Console.IsOutputRedirected%2A> property returns `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1900a-857">В этом примере демонстрируется <xref:System.Console.SetWindowSize%2A> метода и <xref:System.Console.WindowWidth%2A> и <xref:System.Console.WindowHeight%2A> свойства.</span><span class="sxs-lookup"><span data-stu-id="1900a-857">This example demonstrates the <xref:System.Console.SetWindowSize%2A> method, and the <xref:System.Console.WindowWidth%2A> and <xref:System.Console.WindowHeight%2A> properties.</span></span> <span data-ttu-id="1900a-858">Необходимо запустить пример, чтобы увидеть полный эффект от изменения размера окна консоли.</span><span class="sxs-lookup"><span data-stu-id="1900a-858">You must run the example to see the full effect of changing the console window size.</span></span>  
  
 <span data-ttu-id="1900a-859">В примере выводятся размеры окна консоли, установленные равными 85 столбцам и 43 строкам, а затем ожидает нажатие клавиши.</span><span class="sxs-lookup"><span data-stu-id="1900a-859">The example reports the dimensions of a console window set to 85 columns and 43 rows, then waits for a key press.</span></span> <span data-ttu-id="1900a-860">При любой клавиши размеры окна консоли уменьшаются вдвое, выводятся новые размеры и код ожидает другой клавиши.</span><span class="sxs-lookup"><span data-stu-id="1900a-860">When any key is pressed, the dimensions of the console window are halved, the new dimensions are reported, and the example waits for another key press.</span></span> <span data-ttu-id="1900a-861">Наконец когда клавиша нажата восстанавливаются исходные размеры окна консоли и кода данного примера завершается.</span><span class="sxs-lookup"><span data-stu-id="1900a-861">Finally, when any key is pressed the console window is restored to its original dimensions and the example terminates.</span></span>  
  
 [!code-cpp[console.setwindowsize#1](~/samples/snippets/cpp/VS_Snippets_CLR/console.setwindowsize/CPP/sws.cpp#1)]
 [!code-csharp[console.setwindowsize#1](~/samples/snippets/csharp/VS_Snippets_CLR/console.setwindowsize/CS/sws.cs#1)]
 [!code-vb[console.setwindowsize#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/console.setwindowsize/VB/sws.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="1900a-862">Значение свойства <see cref="P:System.Console.WindowWidth" /> или <see cref="P:System.Console.WindowHeight" /> больше или равно 0.</span><span class="sxs-lookup"><span data-stu-id="1900a-862">The value of the <see cref="P:System.Console.WindowWidth" /> property or the value of the <see cref="P:System.Console.WindowHeight" /> property is less than or equal to 0.</span></span>  
  
 <span data-ttu-id="1900a-863">- или -</span><span class="sxs-lookup"><span data-stu-id="1900a-863">-or-</span></span>  
  
 <span data-ttu-id="1900a-864">Сумма значений свойств <see cref="P:System.Console.WindowHeight" /> и <see cref="P:System.Console.WindowTop" /> больше или равна <see cref="F:System.Int16.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="1900a-864">The value of the <see cref="P:System.Console.WindowHeight" /> property plus the value of the <see cref="P:System.Console.WindowTop" /> property is greater than or equal to <see cref="F:System.Int16.MaxValue" />.</span></span>  
  
 <span data-ttu-id="1900a-865">- или -</span><span class="sxs-lookup"><span data-stu-id="1900a-865">-or-</span></span>  
  
 <span data-ttu-id="1900a-866">Значение свойства <see cref="P:System.Console.WindowWidth" /> или <see cref="P:System.Console.WindowHeight" /> больше наибольшей возможной ширины или высоты окна для текущего шрифта консоли и разрешения экрана.</span><span class="sxs-lookup"><span data-stu-id="1900a-866">The value of the <see cref="P:System.Console.WindowWidth" /> property or the value of the <see cref="P:System.Console.WindowHeight" /> property is greater than the largest possible window width or height for the current screen resolution and console font.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1900a-867">Ошибка при чтении или записи данных.</span><span class="sxs-lookup"><span data-stu-id="1900a-867">Error reading or writing information.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Write">
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="1900a-868">Записывает текстовое представление заданного значения или значений в стандартный выходной поток.</span><span class="sxs-lookup"><span data-stu-id="1900a-868">Writes the text representation of the specified value or values to the standard output stream.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.Write(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (value As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(bool value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="1900a-869">Значение для записи.</span><span class="sxs-lookup"><span data-stu-id="1900a-869">The value to write.</span></span></param>
        <summary><span data-ttu-id="1900a-870">Записывает текстовое представление заданного логического значения в стандартный выходной поток.</span><span class="sxs-lookup"><span data-stu-id="1900a-870">Writes the text representation of the specified Boolean value to the standard output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1900a-871">Текстовое представление `value` получается при вызове метода <xref:System.Boolean.ToString%2A?displayProperty=nameWithType>, возвращающего значение <xref:System.Boolean.TrueString?displayProperty=nameWithType> или <xref:System.Boolean.FalseString?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="1900a-871">The text representation of `value` is produced by calling <xref:System.Boolean.ToString%2A?displayProperty=nameWithType>, which outputs either <xref:System.Boolean.TrueString?displayProperty=nameWithType> or <xref:System.Boolean.FalseString?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1900a-872">В следующем примере показано использование метода `Write`.</span><span class="sxs-lookup"><span data-stu-id="1900a-872">The following example illustrates the use of the `Write` method.</span></span>  
  
 [!code-cpp[System.Console-REFORMAT#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Console-REFORMAT/CPP/reformat.cpp#1)]
 [!code-csharp[System.Console-REFORMAT#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console-REFORMAT/CS/reformat.cs#1)]
 [!code-vb[System.Console-REFORMAT#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console-REFORMAT/VB/reformat.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1900a-873">Ошибка ввода/вывода.</span><span class="sxs-lookup"><span data-stu-id="1900a-873">An I/O error occurred.</span></span></exception>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="1900a-874">для изменения безопасных окон верхнего уровня и дочерние окна.</span><span class="sxs-lookup"><span data-stu-id="1900a-874">for modifying safe top-level windows and subwindows.</span></span> <span data-ttu-id="1900a-875">Связанное перечисление: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span><span class="sxs-lookup"><span data-stu-id="1900a-875">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span></span></permission>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.Write(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (value As Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(char value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="1900a-876">Значение для записи.</span><span class="sxs-lookup"><span data-stu-id="1900a-876">The value to write.</span></span></param>
        <summary><span data-ttu-id="1900a-877">Записывает значение заданного знака Юникода в стандартный выходной поток.</span><span class="sxs-lookup"><span data-stu-id="1900a-877">Writes the specified Unicode character value to the standard output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="1900a-878">В следующем примере показано использование метода `Write`.</span><span class="sxs-lookup"><span data-stu-id="1900a-878">The following example illustrates the use of the `Write` method.</span></span>  
  
 [!code-cpp[System.Console-REFORMAT#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Console-REFORMAT/CPP/reformat.cpp#1)]
 [!code-csharp[System.Console-REFORMAT#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console-REFORMAT/CS/reformat.cs#1)]
 [!code-vb[System.Console-REFORMAT#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console-REFORMAT/VB/reformat.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1900a-879">Ошибка ввода/вывода.</span><span class="sxs-lookup"><span data-stu-id="1900a-879">An I/O error occurred.</span></span></exception>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="1900a-880">для изменения безопасных окон верхнего уровня и дочерние окна.</span><span class="sxs-lookup"><span data-stu-id="1900a-880">for modifying safe top-level windows and subwindows.</span></span> <span data-ttu-id="1900a-881">Связанное перечисление: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span><span class="sxs-lookup"><span data-stu-id="1900a-881">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span></span></permission>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (char[] buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(char[] buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.Write(System.Char[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (buffer As Char())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(cli::array &lt;char&gt; ^ buffer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="1900a-882">Массив знаков Юникода.</span><span class="sxs-lookup"><span data-stu-id="1900a-882">A Unicode character array.</span></span></param>
        <summary><span data-ttu-id="1900a-883">Записывает заданный массив знаков Юникода в стандартный выходной поток.</span><span class="sxs-lookup"><span data-stu-id="1900a-883">Writes the specified array of Unicode characters to the standard output stream.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1900a-884">Ошибка ввода/вывода.</span><span class="sxs-lookup"><span data-stu-id="1900a-884">An I/O error occurred.</span></span></exception>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="1900a-885">для изменения безопасных окон верхнего уровня и дочерние окна.</span><span class="sxs-lookup"><span data-stu-id="1900a-885">for modifying safe top-level windows and subwindows.</span></span> <span data-ttu-id="1900a-886">Связанное перечисление: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span><span class="sxs-lookup"><span data-stu-id="1900a-886">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span></span></permission>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.Write(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (value As Decimal)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(System::Decimal value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="1900a-887">Значение для записи.</span><span class="sxs-lookup"><span data-stu-id="1900a-887">The value to write.</span></span></param>
        <summary><span data-ttu-id="1900a-888">Записывает текстовое представление заданного значения <see cref="T:System.Decimal" /> в стандартный выходной поток.</span><span class="sxs-lookup"><span data-stu-id="1900a-888">Writes the text representation of the specified <see cref="T:System.Decimal" /> value to the standard output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1900a-889">Текстовое представление `value` получается при вызове метода <xref:System.Decimal.ToString%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="1900a-889">The text representation of `value` is produced by calling <xref:System.Decimal.ToString%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1900a-890">В следующем примере показано использование метода `Write`.</span><span class="sxs-lookup"><span data-stu-id="1900a-890">The following example illustrates the use of the `Write` method.</span></span>  
  
 [!code-cpp[System.Console-REFORMAT#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Console-REFORMAT/CPP/reformat.cpp#1)]
 [!code-csharp[System.Console-REFORMAT#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console-REFORMAT/CS/reformat.cs#1)]
 [!code-vb[System.Console-REFORMAT#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console-REFORMAT/VB/reformat.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1900a-891">Ошибка ввода/вывода.</span><span class="sxs-lookup"><span data-stu-id="1900a-891">An I/O error occurred.</span></span></exception>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="1900a-892">для изменения безопасных окон верхнего уровня и дочерние окна.</span><span class="sxs-lookup"><span data-stu-id="1900a-892">for modifying safe top-level windows and subwindows.</span></span> <span data-ttu-id="1900a-893">Связанное перечисление: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span><span class="sxs-lookup"><span data-stu-id="1900a-893">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span></span></permission>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.Write(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (value As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(double value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="1900a-894">Значение для записи.</span><span class="sxs-lookup"><span data-stu-id="1900a-894">The value to write.</span></span></param>
        <summary><span data-ttu-id="1900a-895">Записывает текстовое представление заданного значения двойной точности с плавающей запятой в стандартный выходной поток.</span><span class="sxs-lookup"><span data-stu-id="1900a-895">Writes the text representation of the specified double-precision floating-point value to the standard output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1900a-896">Текстовое представление `value` получается при вызове метода <xref:System.Double.ToString%2A?displayProperty=nameWithType> метод.</span><span class="sxs-lookup"><span data-stu-id="1900a-896">The text representation of `value` is produced by calling the <xref:System.Double.ToString%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1900a-897">В следующем примере показано использование метода `Write`.</span><span class="sxs-lookup"><span data-stu-id="1900a-897">The following example illustrates the use of the `Write` method.</span></span>  
  
 [!code-cpp[System.Console-REFORMAT#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Console-REFORMAT/CPP/reformat.cpp#1)]
 [!code-csharp[System.Console-REFORMAT#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console-REFORMAT/CS/reformat.cs#1)]
 [!code-vb[System.Console-REFORMAT#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console-REFORMAT/VB/reformat.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1900a-898">Ошибка ввода/вывода.</span><span class="sxs-lookup"><span data-stu-id="1900a-898">An I/O error occurred.</span></span></exception>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="1900a-899">для изменения безопасных окон верхнего уровня и дочерние окна.</span><span class="sxs-lookup"><span data-stu-id="1900a-899">for modifying safe top-level windows and subwindows.</span></span> <span data-ttu-id="1900a-900">Связанное перечисление: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span><span class="sxs-lookup"><span data-stu-id="1900a-900">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span></span></permission>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.Write(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (value As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(int value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="1900a-901">Значение для записи.</span><span class="sxs-lookup"><span data-stu-id="1900a-901">The value to write.</span></span></param>
        <summary><span data-ttu-id="1900a-902">Записывает текстовое представление заданного 32-битового целого числа со знаком в стандартный поток вывода.</span><span class="sxs-lookup"><span data-stu-id="1900a-902">Writes the text representation of the specified 32-bit signed integer value to the standard output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1900a-903">Текстовое представление `value` получается при вызове метода <xref:System.Int32.ToString%2A?displayProperty=nameWithType> метод.</span><span class="sxs-lookup"><span data-stu-id="1900a-903">The text representation of `value` is produced by calling the <xref:System.Int32.ToString%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1900a-904">В следующем примере показано использование метода `Write`.</span><span class="sxs-lookup"><span data-stu-id="1900a-904">The following example illustrates the use of the `Write` method.</span></span>  
  
 [!code-cpp[System.Console-REFORMAT#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Console-REFORMAT/CPP/reformat.cpp#1)]
 [!code-csharp[System.Console-REFORMAT#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console-REFORMAT/CS/reformat.cs#1)]
 [!code-vb[System.Console-REFORMAT#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console-REFORMAT/VB/reformat.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1900a-905">Ошибка ввода/вывода.</span><span class="sxs-lookup"><span data-stu-id="1900a-905">An I/O error occurred.</span></span></exception>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="1900a-906">для изменения безопасных окон верхнего уровня и дочерние окна.</span><span class="sxs-lookup"><span data-stu-id="1900a-906">for modifying safe top-level windows and subwindows.</span></span> <span data-ttu-id="1900a-907">Связанное перечисление: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span><span class="sxs-lookup"><span data-stu-id="1900a-907">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span></span></permission>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.Write(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (value As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(long value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="1900a-908">Значение для записи.</span><span class="sxs-lookup"><span data-stu-id="1900a-908">The value to write.</span></span></param>
        <summary><span data-ttu-id="1900a-909">Записывает текстовое представление заданного 64-битового целого числа со знаком в стандартный поток вывода.</span><span class="sxs-lookup"><span data-stu-id="1900a-909">Writes the text representation of the specified 64-bit signed integer value to the standard output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1900a-910">Текстовое представление `value` получается при вызове метода <xref:System.Int64.ToString%2A?displayProperty=nameWithType> метод.</span><span class="sxs-lookup"><span data-stu-id="1900a-910">The text representation of `value` is produced by calling the <xref:System.Int64.ToString%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1900a-911">В следующем примере показано использование метода `Write`.</span><span class="sxs-lookup"><span data-stu-id="1900a-911">The following example illustrates the use of the `Write` method.</span></span>  
  
 [!code-cpp[System.Console-REFORMAT#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Console-REFORMAT/CPP/reformat.cpp#1)]
 [!code-csharp[System.Console-REFORMAT#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console-REFORMAT/CS/reformat.cs#1)]
 [!code-vb[System.Console-REFORMAT#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console-REFORMAT/VB/reformat.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1900a-912">Ошибка ввода/вывода.</span><span class="sxs-lookup"><span data-stu-id="1900a-912">An I/O error occurred.</span></span></exception>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="1900a-913">для изменения безопасных окон верхнего уровня и дочерние окна.</span><span class="sxs-lookup"><span data-stu-id="1900a-913">for modifying safe top-level windows and subwindows.</span></span> <span data-ttu-id="1900a-914">Связанное перечисление: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span><span class="sxs-lookup"><span data-stu-id="1900a-914">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span></span></permission>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.Write(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="1900a-915">Записываемое значение или <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="1900a-915">The value to write, or <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="1900a-916">Записывает текстовое представление заданного объекта в стандартный выходной поток.</span><span class="sxs-lookup"><span data-stu-id="1900a-916">Writes the text representation of the specified object to the standard output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1900a-917">Если `value` — `null`, ничего не записывается, и исключение не возникает.</span><span class="sxs-lookup"><span data-stu-id="1900a-917">If `value` is `null`, nothing is written and no exception is thrown.</span></span> <span data-ttu-id="1900a-918">В противном случае `ToString` метод `value` вызывается для получения строкового представления, а результирующая строка записывается в стандартный выходной поток.</span><span class="sxs-lookup"><span data-stu-id="1900a-918">Otherwise, the `ToString` method of `value` is called to produce its string representation, and the resulting string is written to the standard output stream.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1900a-919">В следующем примере показано использование метода `Write`.</span><span class="sxs-lookup"><span data-stu-id="1900a-919">The following example illustrates the use of the `Write` method.</span></span>  
  
 [!code-cpp[System.Console-REFORMAT#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Console-REFORMAT/CPP/reformat.cpp#1)]
 [!code-csharp[System.Console-REFORMAT#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console-REFORMAT/CS/reformat.cs#1)]
 [!code-vb[System.Console-REFORMAT#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console-REFORMAT/VB/reformat.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1900a-920">Ошибка ввода/вывода.</span><span class="sxs-lookup"><span data-stu-id="1900a-920">An I/O error occurred.</span></span></exception>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="1900a-921">для изменения безопасных окон верхнего уровня и дочерние окна.</span><span class="sxs-lookup"><span data-stu-id="1900a-921">for modifying safe top-level windows and subwindows.</span></span> <span data-ttu-id="1900a-922">Связанное перечисление: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span><span class="sxs-lookup"><span data-stu-id="1900a-922">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span></span></permission>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.Write(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (value As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(float value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="1900a-923">Значение для записи.</span><span class="sxs-lookup"><span data-stu-id="1900a-923">The value to write.</span></span></param>
        <summary><span data-ttu-id="1900a-924">Записывает текстовое представление заданного значения одинарной точности с плавающей запятой в стандартный выходной поток.</span><span class="sxs-lookup"><span data-stu-id="1900a-924">Writes the text representation of the specified single-precision floating-point value to the standard output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1900a-925">Текстовое представление `value` получается при вызове метода <xref:System.Single.ToString%2A?displayProperty=nameWithType> метод.</span><span class="sxs-lookup"><span data-stu-id="1900a-925">The text representation of `value` is produced by calling the <xref:System.Single.ToString%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1900a-926">В следующем примере показано использование метода `Write`.</span><span class="sxs-lookup"><span data-stu-id="1900a-926">The following example illustrates the use of the `Write` method.</span></span>  
  
 [!code-cpp[System.Console-REFORMAT#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Console-REFORMAT/CPP/reformat.cpp#1)]
 [!code-csharp[System.Console-REFORMAT#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console-REFORMAT/CS/reformat.cs#1)]
 [!code-vb[System.Console-REFORMAT#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console-REFORMAT/VB/reformat.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1900a-927">Ошибка ввода/вывода.</span><span class="sxs-lookup"><span data-stu-id="1900a-927">An I/O error occurred.</span></span></exception>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="1900a-928">для изменения безопасных окон верхнего уровня и дочерние окна.</span><span class="sxs-lookup"><span data-stu-id="1900a-928">for modifying safe top-level windows and subwindows.</span></span> <span data-ttu-id="1900a-929">Связанное перечисление: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span><span class="sxs-lookup"><span data-stu-id="1900a-929">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span></span></permission>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.Write(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(System::String ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="1900a-930">Значение для записи.</span><span class="sxs-lookup"><span data-stu-id="1900a-930">The value to write.</span></span></param>
        <summary><span data-ttu-id="1900a-931">Записывает заданное строковое значение в стандартный выходной поток.</span><span class="sxs-lookup"><span data-stu-id="1900a-931">Writes the specified string value to the standard output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1900a-932">Если значение равно `null`, ничего не записывается в стандартный выходной поток.</span><span class="sxs-lookup"><span data-stu-id="1900a-932">If value is `null`, nothing is written to the standard output stream.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1900a-933">В следующем примере показано использование метода `Write`.</span><span class="sxs-lookup"><span data-stu-id="1900a-933">The following example illustrates the use of the `Write` method.</span></span>  
  
 [!code-cpp[System.Console-REFORMAT#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Console-REFORMAT/CPP/reformat.cpp#1)]
 [!code-csharp[System.Console-REFORMAT#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console-REFORMAT/CS/reformat.cs#1)]
 [!code-vb[System.Console-REFORMAT#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console-REFORMAT/VB/reformat.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1900a-934">Ошибка ввода/вывода.</span><span class="sxs-lookup"><span data-stu-id="1900a-934">An I/O error occurred.</span></span></exception>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="1900a-935">для изменения безопасных окон верхнего уровня и дочерние окна.</span><span class="sxs-lookup"><span data-stu-id="1900a-935">for modifying safe top-level windows and subwindows.</span></span> <span data-ttu-id="1900a-936">Связанное перечисление: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span><span class="sxs-lookup"><span data-stu-id="1900a-936">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span></span></permission>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.Write(System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (value As UInteger)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(System::UInt32 value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="1900a-937">Значение для записи.</span><span class="sxs-lookup"><span data-stu-id="1900a-937">The value to write.</span></span></param>
        <summary><span data-ttu-id="1900a-938">Записывает текстовое представление заданного 32-битового целого числа без знака в стандартный выходной поток.</span><span class="sxs-lookup"><span data-stu-id="1900a-938">Writes the text representation of the specified 32-bit unsigned integer value to the standard output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1900a-939">Текстовое представление `value` получается при вызове метода <xref:System.UInt32.ToString%2A?displayProperty=nameWithType> метод.</span><span class="sxs-lookup"><span data-stu-id="1900a-939">The text representation of `value` is produced by calling the <xref:System.UInt32.ToString%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1900a-940">В следующем примере показано использование метода `Write`.</span><span class="sxs-lookup"><span data-stu-id="1900a-940">The following example illustrates the use of the `Write` method.</span></span>  
  
 [!code-cpp[System.Console-REFORMAT#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Console-REFORMAT/CPP/reformat.cpp#1)]
 [!code-csharp[System.Console-REFORMAT#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console-REFORMAT/CS/reformat.cs#1)]
 [!code-vb[System.Console-REFORMAT#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console-REFORMAT/VB/reformat.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1900a-941">Ошибка ввода/вывода.</span><span class="sxs-lookup"><span data-stu-id="1900a-941">An I/O error occurred.</span></span></exception>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="1900a-942">для изменения безопасных окон верхнего уровня и дочерние окна.</span><span class="sxs-lookup"><span data-stu-id="1900a-942">for modifying safe top-level windows and subwindows.</span></span> <span data-ttu-id="1900a-943">Связанное перечисление: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span><span class="sxs-lookup"><span data-stu-id="1900a-943">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span></span></permission>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (ulong value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(unsigned int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.Write(System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (value As ULong)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(System::UInt64 value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="1900a-944">Значение для записи.</span><span class="sxs-lookup"><span data-stu-id="1900a-944">The value to write.</span></span></param>
        <summary><span data-ttu-id="1900a-945">Записывает текстовое представление заданного 64-битового целого числа без знака в стандартный выходной поток.</span><span class="sxs-lookup"><span data-stu-id="1900a-945">Writes the text representation of the specified 64-bit unsigned integer value to the standard output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1900a-946">Текстовое представление `value` получается при вызове метода <xref:System.UInt64.ToString%2A?displayProperty=nameWithType> метод.</span><span class="sxs-lookup"><span data-stu-id="1900a-946">The text representation of `value` is produced by calling the <xref:System.UInt64.ToString%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1900a-947">В следующем примере показано использование метода `Write`.</span><span class="sxs-lookup"><span data-stu-id="1900a-947">The following example illustrates the use of the `Write` method.</span></span>  
  
 [!code-cpp[System.Console-REFORMAT#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Console-REFORMAT/CPP/reformat.cpp#1)]
 [!code-csharp[System.Console-REFORMAT#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console-REFORMAT/CS/reformat.cs#1)]
 [!code-vb[System.Console-REFORMAT#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console-REFORMAT/VB/reformat.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1900a-948">Ошибка ввода/вывода.</span><span class="sxs-lookup"><span data-stu-id="1900a-948">An I/O error occurred.</span></span></exception>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="1900a-949">для изменения безопасных окон верхнего уровня и дочерние окна.</span><span class="sxs-lookup"><span data-stu-id="1900a-949">for modifying safe top-level windows and subwindows.</span></span> <span data-ttu-id="1900a-950">Связанное перечисление: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span><span class="sxs-lookup"><span data-stu-id="1900a-950">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span></span></permission>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (string format, object arg0);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(string format, object arg0) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.Write(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (format As String, arg0 As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(System::String ^ format, System::Object ^ arg0);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="arg0" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="1900a-951">Строка составного формата.</span><span class="sxs-lookup"><span data-stu-id="1900a-951">A composite format string.</span></span></param>
        <param name="arg0"><span data-ttu-id="1900a-952">Объект для записи с использованием <c>format</c>.</span><span class="sxs-lookup"><span data-stu-id="1900a-952">An object to write using <c>format</c>.</span></span></param>
        <summary><span data-ttu-id="1900a-953">Записывает текстовое представление заданного объекта в стандартный выходной поток, используя заданные сведения о форматировании.</span><span class="sxs-lookup"><span data-stu-id="1900a-953">Writes the text representation of the specified object to the standard output stream using the specified format information.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1900a-954">Этот метод использует [составное форматирование](~/docs/standard/base-types/composite-formatting.md) платформы .NET Framework, чтобы преобразовать значение объекта в его текстовое представление и встроить это представление в строку.</span><span class="sxs-lookup"><span data-stu-id="1900a-954">This method uses the [composite formatting feature](~/docs/standard/base-types/composite-formatting.md) of the .NET Framework to convert the value of an object to its text representation and embed that representation in a string.</span></span> <span data-ttu-id="1900a-955">Результирующая строка записывается в поток вывода.</span><span class="sxs-lookup"><span data-stu-id="1900a-955">The resulting string is written to the output stream.</span></span>  
  
 <span data-ttu-id="1900a-956">`format` Параметр состоит из нуля или больше текста, перемежаемых ноль или более индексированные местозаполнители, называются элементами форматирования, которые соответствуют объекту в списке параметров данного метода.</span><span class="sxs-lookup"><span data-stu-id="1900a-956">The `format` parameter consists of zero or more runs of text intermixed with zero or more indexed placeholders, called format items, that correspond to an object in the parameter list of this method.</span></span> <span data-ttu-id="1900a-957">В процессе форматирования каждый элемент формата заменяется текстовое представление значения соответствующего объекта.</span><span class="sxs-lookup"><span data-stu-id="1900a-957">The formatting process replaces each format item with the text representation of the value of the corresponding object.</span></span>  
  
 <span data-ttu-id="1900a-958">Синтаксис элементов форматирования `{` *индекс*[`,`*выравнивание*] [`:`*formatString*]`}`, который указывает Обязательный индекса, необязательно длину и выравнивание форматированного текста и необязательная строка символов описателя формата, определяющих способ форматирования значения соответствующего объекта.</span><span class="sxs-lookup"><span data-stu-id="1900a-958">The syntax of a format item is `{`*index*[`,`*alignment*][`:`*formatString*]`}`, which specifies a mandatory index, the optional length and alignment of the formatted text, and an optional string of format specifier characters that govern how the value of the corresponding object is formatted.</span></span>  
  
 <span data-ttu-id="1900a-959">Платформа .NET Framework предоставляет широкую поддержку форматирования, который описан более подробно в следующих разделах о форматировании.</span><span class="sxs-lookup"><span data-stu-id="1900a-959">The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics.</span></span>  
  
-   <span data-ttu-id="1900a-960">Дополнительные сведения о составного форматирования, поддерживаемые методами, такими как <xref:System.String.Format%2A>, <xref:System.Text.StringBuilder.AppendFormat%2A>и некоторые перегрузки <xref:System.Console.WriteLine%2A>, в разделе [составное форматирование](~/docs/standard/base-types/composite-formatting.md).</span><span class="sxs-lookup"><span data-stu-id="1900a-960">For more information about the composite formatting feature supported by methods such as <xref:System.String.Format%2A>, <xref:System.Text.StringBuilder.AppendFormat%2A>, and some overloads of <xref:System.Console.WriteLine%2A>, see [Composite Formatting](~/docs/standard/base-types/composite-formatting.md).</span></span>  
  
-   <span data-ttu-id="1900a-961">Дополнительные сведения об описателях числового формата см. в разделе [строки стандартного числового формата](~/docs/standard/base-types/standard-numeric-format-strings.md) и [строки настраиваемых числовых форматов](~/docs/standard/base-types/custom-numeric-format-strings.md).</span><span class="sxs-lookup"><span data-stu-id="1900a-961">For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
-   <span data-ttu-id="1900a-962">Дополнительные сведения о дате и времени описатели формата см. в разделе [стандартной строки даты и времени формат](~/docs/standard/base-types/standard-date-and-time-format-strings.md) и [пользовательских строк даты и времени формат](~/docs/standard/base-types/custom-date-and-time-format-strings.md).</span><span class="sxs-lookup"><span data-stu-id="1900a-962">For more information about date and time format specifiers, see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) and [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md).</span></span>  
  
-   <span data-ttu-id="1900a-963">Дополнительные сведения об описателях форматов перечисления см. в разделе [строки форматов перечисления](~/docs/standard/base-types/enumeration-format-strings.md).</span><span class="sxs-lookup"><span data-stu-id="1900a-963">For more information about enumeration format specifiers, see [Enumeration Format Strings](~/docs/standard/base-types/enumeration-format-strings.md).</span></span>  
  
-   <span data-ttu-id="1900a-964">Дополнительные сведения о форматировании см. в разделе [типы форматирования](~/docs/standard/base-types/formatting-types.md).</span><span class="sxs-lookup"><span data-stu-id="1900a-964">For more information about formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1900a-965">В следующем примере с помощью метода `WriteLine` демонстрируются стандартные описатели форматирования чисел, дат и значений перечислимых типов.</span><span class="sxs-lookup"><span data-stu-id="1900a-965">The following example uses the `WriteLine` method to demonstrate the standard formatting specifiers for numbers, dates, and enumerations.</span></span>  
  
 [!code-cpp[console.writelineFmt1#1](~/samples/snippets/cpp/VS_Snippets_CLR/console.writelineFmt1/cpp/wl.cpp#1)] 
 [!code-csharp[console.writelineFmt1#1](~/samples/snippets/csharp/VS_Snippets_CLR/console.writelineFmt1/cs/wl.cs#1)] 
 [!code-vb[console.writelineFmt1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/console.writelineFmt1/vb/wl.vb#1)]  
  
 <span data-ttu-id="1900a-966">В следующем примере показано использование метода <xref:System.Console.Write%2A>.</span><span class="sxs-lookup"><span data-stu-id="1900a-966">The following example illustrates the use of the <xref:System.Console.Write%2A> method.</span></span>  
  
 [!code-cpp[System.Console-REFORMAT#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Console-REFORMAT/CPP/reformat.cpp#1)]
 [!code-csharp[System.Console-REFORMAT#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console-REFORMAT/CS/reformat.cs#1)]
 [!code-vb[System.Console-REFORMAT#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console-REFORMAT/VB/reformat.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1900a-967">Ошибка ввода/вывода.</span><span class="sxs-lookup"><span data-stu-id="1900a-967">An I/O error occurred.</span></span></exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1900a-968">Свойство <paramref name="format" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="1900a-968"><paramref name="format" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="1900a-969">Недопустимая спецификация формата в <paramref name="format" />.</span><span class="sxs-lookup"><span data-stu-id="1900a-969">The format specification in <paramref name="format" /> is invalid.</span></span></exception>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="1900a-970">для изменения безопасных окон верхнего уровня и дочерние окна.</span><span class="sxs-lookup"><span data-stu-id="1900a-970">for modifying safe top-level windows and subwindows.</span></span> <span data-ttu-id="1900a-971">Связанное перечисление: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span><span class="sxs-lookup"><span data-stu-id="1900a-971">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span></span></permission>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (string format, params object[] arg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(string format, object[] arg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.Write(System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (format As String, ParamArray arg As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(System::String ^ format, ... cli::array &lt;System::Object ^&gt; ^ arg);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="arg" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="1900a-972">Строка составного формата.</span><span class="sxs-lookup"><span data-stu-id="1900a-972">A composite format string.</span></span></param>
        <param name="arg"><span data-ttu-id="1900a-973">Массив объектов для записи с использованием <c>format</c>.</span><span class="sxs-lookup"><span data-stu-id="1900a-973">An array of objects to write using <c>format</c>.</span></span></param>
        <summary><span data-ttu-id="1900a-974">Записывает текстовое представление заданного массива объектов в стандартный выходной поток, используя заданные сведения о форматировании.</span><span class="sxs-lookup"><span data-stu-id="1900a-974">Writes the text representation of the specified array of objects to the standard output stream using the specified format information.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1900a-975">Этот метод использует [составное форматирование](~/docs/standard/base-types/composite-formatting.md) платформы .NET Framework, чтобы преобразовать значение объекта в его текстовое представление и встроить это представление в строку.</span><span class="sxs-lookup"><span data-stu-id="1900a-975">This method uses the  [composite formatting feature](~/docs/standard/base-types/composite-formatting.md) of the .NET Framework to convert the value of an object to its text representation and embed that representation in a string.</span></span> <span data-ttu-id="1900a-976">Результирующая строка записывается в поток вывода.</span><span class="sxs-lookup"><span data-stu-id="1900a-976">The resulting string is written to the output stream.</span></span>  
  
 <span data-ttu-id="1900a-977">`format` Параметр состоит из нуля или больше текста, перемежаемых ноль или более индексированные местозаполнители, называются элементами форматирования, которые соответствуют объекту в списке параметров данного метода.</span><span class="sxs-lookup"><span data-stu-id="1900a-977">The `format` parameter consists of zero or more runs of text intermixed with zero or more indexed placeholders, called format items, that correspond to an object in the parameter list of this method.</span></span> <span data-ttu-id="1900a-978">В процессе форматирования каждый элемент формата заменяется текстовое представление значения соответствующего объекта.</span><span class="sxs-lookup"><span data-stu-id="1900a-978">The formatting process replaces each format item with the text representation of the value of the corresponding object.</span></span>  
  
 <span data-ttu-id="1900a-979">Синтаксис элементов форматирования `{` *индекс*[`,`*выравнивание*] [`:`*formatString*]`}`, который указывает Обязательный индекса, необязательно длину и выравнивание форматированного текста и необязательная строка символов описателя формата, определяющих способ форматирования значения соответствующего объекта.</span><span class="sxs-lookup"><span data-stu-id="1900a-979">The syntax of a format item is `{`*index*[`,`*alignment*][`:`*formatString*]`}`, which specifies a mandatory index, the optional length and alignment of the formatted text, and an optional string of format specifier characters that govern how the value of the corresponding object is formatted.</span></span>  
  
 <span data-ttu-id="1900a-980">Платформа .NET Framework предоставляет широкую поддержку форматирования, который описан более подробно в следующих разделах о форматировании.</span><span class="sxs-lookup"><span data-stu-id="1900a-980">The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics.</span></span>  
  
-   <span data-ttu-id="1900a-981">Дополнительные сведения о составного форматирования, поддерживаемые методами, такими как <xref:System.String.Format%2A>, <xref:System.Text.StringBuilder.AppendFormat%2A>и некоторые перегрузки <xref:System.Console.WriteLine%2A>, в разделе [составное форматирование](~/docs/standard/base-types/composite-formatting.md).</span><span class="sxs-lookup"><span data-stu-id="1900a-981">For more information about the composite formatting feature supported by methods such as <xref:System.String.Format%2A>, <xref:System.Text.StringBuilder.AppendFormat%2A>, and some overloads of <xref:System.Console.WriteLine%2A>, see [Composite Formatting](~/docs/standard/base-types/composite-formatting.md).</span></span>  
  
-   <span data-ttu-id="1900a-982">Дополнительные сведения об описателях числового формата см. в разделе [строки стандартного числового формата](~/docs/standard/base-types/standard-numeric-format-strings.md) и [строки настраиваемых числовых форматов](~/docs/standard/base-types/custom-numeric-format-strings.md).</span><span class="sxs-lookup"><span data-stu-id="1900a-982">For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
-   <span data-ttu-id="1900a-983">Дополнительные сведения о дате и времени описатели формата см. в разделе [стандартной строки даты и времени формат](~/docs/standard/base-types/standard-date-and-time-format-strings.md) и [пользовательских строк даты и времени формат](~/docs/standard/base-types/custom-date-and-time-format-strings.md).</span><span class="sxs-lookup"><span data-stu-id="1900a-983">For more information about date and time format specifiers, see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) and [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md).</span></span>  
  
-   <span data-ttu-id="1900a-984">Дополнительные сведения об описателях форматов перечисления см. в разделе [строки форматов перечисления](~/docs/standard/base-types/enumeration-format-strings.md).</span><span class="sxs-lookup"><span data-stu-id="1900a-984">For more information about enumeration format specifiers, see [Enumeration Format Strings](~/docs/standard/base-types/enumeration-format-strings.md).</span></span>  
  
-   <span data-ttu-id="1900a-985">Дополнительные сведения о форматировании см. в разделе [типы форматирования](~/docs/standard/base-types/formatting-types.md).</span><span class="sxs-lookup"><span data-stu-id="1900a-985">For more information about formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
 <span data-ttu-id="1900a-986">`arg` Параметр является массивом параметров.</span><span class="sxs-lookup"><span data-stu-id="1900a-986">The `arg` parameter is a parameter array.</span></span> <span data-ttu-id="1900a-987">Аргументы могут быть переданы в метод, как массив или как список из пяти или более элементов.</span><span class="sxs-lookup"><span data-stu-id="1900a-987">Arguments  can be passed to the method either as an array or as list of five or more items.</span></span> <span data-ttu-id="1900a-988">В примерах показаны обе формы вызова метода.</span><span class="sxs-lookup"><span data-stu-id="1900a-988">The examples illustrate both forms of method call.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1900a-989">В следующем примере определяется `Person` класс ряд свойств, предоставляющих сведения о пользователе.</span><span class="sxs-lookup"><span data-stu-id="1900a-989">The following example defines a `Person` class with a number of properties that provide information about a person.</span></span> <span data-ttu-id="1900a-990">Его `GetDescription` метод возвращает массив, содержащий все значения свойств, кроме одного.</span><span class="sxs-lookup"><span data-stu-id="1900a-990">Its `GetDescription` method returns an array that contains all of the property values except one.</span></span> <span data-ttu-id="1900a-991">Затем в примере используется массив, возвращаемый методом `GetDescription` метод для отображения значений объекта пользователя.</span><span class="sxs-lookup"><span data-stu-id="1900a-991">The example then uses the array returned by the  `GetDescription` method  to display the values of the Person object.</span></span>  
  
 [!code-csharp[System.Console.Write#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.console.write/cs/WriteParams1.cs#1)]
 [!code-vb[System.Console.Write#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.console.write/vb/WriteParams1.vb#1)]  
  
 <span data-ttu-id="1900a-992">Обратите внимание, что в примере вызывается <xref:System.Console.Write%28System.String%2CSystem.Object%5B%5D%29> метод вместо <xref:System.Console.WriteLine%28System.String%2CSystem.Object%5B%5D%29> метода, так как он пытается отобразить значение `Person.Remarks` свойства в той же строке.</span><span class="sxs-lookup"><span data-stu-id="1900a-992">Note that the example calls the <xref:System.Console.Write%28System.String%2CSystem.Object%5B%5D%29> method rather than the <xref:System.Console.WriteLine%28System.String%2CSystem.Object%5B%5D%29> method because it attempts to display the value of the `Person.Remarks` property on the same line.</span></span> <span data-ttu-id="1900a-993">Чтобы сделать это, он проверяет значение <xref:System.Console.CursorLeft%2A> и <xref:System.Console.WindowWidth%2A> свойства, чтобы определить, является ли достаточно места для замечания по размеру.</span><span class="sxs-lookup"><span data-stu-id="1900a-993">To do this, it examines the value of the <xref:System.Console.CursorLeft%2A> and <xref:System.Console.WindowWidth%2A> properties to determine whether there is enough space for the remark to fit.</span></span>  <span data-ttu-id="1900a-994">Если нет, она отображает строку.</span><span class="sxs-lookup"><span data-stu-id="1900a-994">If there is, it displays the line.</span></span> <span data-ttu-id="1900a-995">В противном случае он записывает строку, отступы три пробела и отображает замечания.</span><span class="sxs-lookup"><span data-stu-id="1900a-995">If not, it writes a line, indents three spaces, and displays the remark.</span></span>  
  
 <span data-ttu-id="1900a-996">Следующий пример идентичен первому, за исключением того, что он передает список пяти элементов в качестве `arg` аргумент вместо массива параметров.</span><span class="sxs-lookup"><span data-stu-id="1900a-996">The following example is identical to the first, except that it supplies a five-item list as the `arg` argument instead of a parameter array.</span></span>  
  
 [!code-csharp[System.Console.Write#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.console.write/cs/WriteParams2.cs#2)]
 [!code-vb[System.Console.Write#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.console.write/vb/WriteParams2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1900a-997">Ошибка ввода/вывода.</span><span class="sxs-lookup"><span data-stu-id="1900a-997">An I/O error occurred.</span></span></exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1900a-998">Параметр <paramref name="format" /> или <paramref name="arg" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="1900a-998"><paramref name="format" /> or <paramref name="arg" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="1900a-999">Недопустимая спецификация формата в <paramref name="format" />.</span><span class="sxs-lookup"><span data-stu-id="1900a-999">The format specification in <paramref name="format" /> is invalid.</span></span></exception>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="1900a-1000">для изменения безопасных окон верхнего уровня и дочерние окна.</span><span class="sxs-lookup"><span data-stu-id="1900a-1000">for modifying safe top-level windows and subwindows.</span></span> <span data-ttu-id="1900a-1001">Связанное перечисление: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span><span class="sxs-lookup"><span data-stu-id="1900a-1001">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span></span></permission>
        <block subset="none" type="usage">
          <para><span data-ttu-id="1900a-1002">Этот метод не вызывается кодом C++.</span><span class="sxs-lookup"><span data-stu-id="1900a-1002">This method is not called by C++ code.</span></span> <span data-ttu-id="1900a-1003">Компилятор C++ разрешает вызовы к [System.Console.Write](xref:System.Console.Write*) включать строки и список четырьмя или более параметров объекта как вызов <see cref="M:System.Console.Write(System.String,System.Object,System.Object,System.Object,System.Object)" />.</span><span class="sxs-lookup"><span data-stu-id="1900a-1003">The C++ compiler resolves calls to [System.Console.Write](xref:System.Console.Write*) that include a string and a list of four or more object parameters as a call to <see cref="M:System.Console.Write(System.String,System.Object,System.Object,System.Object,System.Object)" />.</span></span> <span data-ttu-id="1900a-1004">Он разрешает вызовы к [System.Console.Write](xref:System.Console.Write*) строки и массив объектов, содержащих как вызов <see cref="M:System.Console.Write(System.String,System.Object)" />.</span><span class="sxs-lookup"><span data-stu-id="1900a-1004">It resolves calls to [System.Console.Write](xref:System.Console.Write*) that include a string and an object array as a call to <see cref="M:System.Console.Write(System.String,System.Object)" />.</span></span></para>
        </block>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.Write(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (buffer As Char(), index As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="1900a-1005">Массив знаков Юникода.</span><span class="sxs-lookup"><span data-stu-id="1900a-1005">An array of Unicode characters.</span></span></param>
        <param name="index"><span data-ttu-id="1900a-1006">Начальная позиция в массиве <c>buffer</c>.</span><span class="sxs-lookup"><span data-stu-id="1900a-1006">The starting position in <c>buffer</c>.</span></span></param>
        <param name="count"><span data-ttu-id="1900a-1007">Количество символов для записи.</span><span class="sxs-lookup"><span data-stu-id="1900a-1007">The number of characters to write.</span></span></param>
        <summary><span data-ttu-id="1900a-1008">Записывает заданный дочерний массив знаков Юникода в стандартный выходной поток.</span><span class="sxs-lookup"><span data-stu-id="1900a-1008">Writes the specified subarray of Unicode characters to the standard output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1900a-1009">Этот метод записывает `count` символов, начиная с позиции `index` из `buffer` в стандартный выходной поток.</span><span class="sxs-lookup"><span data-stu-id="1900a-1009">This method writes `count` characters starting at position `index` of `buffer` to the standard output stream.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1900a-1010">Свойство <paramref name="buffer" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="1900a-1010"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="1900a-1011">Значение параметра <paramref name="index" /> или <paramref name="count" /> меньше нуля.</span><span class="sxs-lookup"><span data-stu-id="1900a-1011"><paramref name="index" /> or <paramref name="count" /> is less than zero.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1900a-1012">Сумма <paramref name="index" /> и <paramref name="count" /> указывает позицию, которая не находится в <paramref name="buffer" />.</span><span class="sxs-lookup"><span data-stu-id="1900a-1012"><paramref name="index" /> plus <paramref name="count" /> specify a position that is not within <paramref name="buffer" />.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1900a-1013">Ошибка ввода/вывода.</span><span class="sxs-lookup"><span data-stu-id="1900a-1013">An I/O error occurred.</span></span></exception>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="1900a-1014">для изменения безопасных окон верхнего уровня и дочерние окна.</span><span class="sxs-lookup"><span data-stu-id="1900a-1014">for modifying safe top-level windows and subwindows.</span></span> <span data-ttu-id="1900a-1015">Связанное перечисление: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span><span class="sxs-lookup"><span data-stu-id="1900a-1015">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span></span></permission>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (string format, object arg0, object arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(string format, object arg0, object arg1) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.Write(System.String,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (format As String, arg0 As Object, arg1 As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(System::String ^ format, System::Object ^ arg0, System::Object ^ arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="arg0" Type="System.Object" />
        <Parameter Name="arg1" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="1900a-1016">Строка составного формата.</span><span class="sxs-lookup"><span data-stu-id="1900a-1016">A composite format string.</span></span></param>
        <param name="arg0"><span data-ttu-id="1900a-1017">Первый объект для записи с использованием <c>format</c>.</span><span class="sxs-lookup"><span data-stu-id="1900a-1017">The first object to write using <c>format</c>.</span></span></param>
        <param name="arg1"><span data-ttu-id="1900a-1018">Второй объект для записи с использованием <c>format</c>.</span><span class="sxs-lookup"><span data-stu-id="1900a-1018">The second object to write using <c>format</c>.</span></span></param>
        <summary><span data-ttu-id="1900a-1019">Записывает текстовые представления заданных объектов в стандартный выходной поток, используя заданные сведения о форматировании.</span><span class="sxs-lookup"><span data-stu-id="1900a-1019">Writes the text representation of the specified objects to the standard output stream using the specified format information.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1900a-1020">Этот метод использует [составное форматирование](~/docs/standard/base-types/composite-formatting.md) платформы .NET Framework, чтобы преобразовать значение объекта в его текстовое представление и встроить это представление в строку.</span><span class="sxs-lookup"><span data-stu-id="1900a-1020">This method uses the [composite formatting feature](~/docs/standard/base-types/composite-formatting.md) of the .NET Framework to convert the value of an object to its text representation and embed that representation in a string.</span></span> <span data-ttu-id="1900a-1021">Результирующая строка записывается в поток вывода.</span><span class="sxs-lookup"><span data-stu-id="1900a-1021">The resulting string is written to the output stream.</span></span>  
  
 <span data-ttu-id="1900a-1022">`format` Параметр состоит из нуля или больше текста, перемежаемых ноль или более индексированные местозаполнители, называются элементами форматирования, которые соответствуют объекту в списке параметров данного метода.</span><span class="sxs-lookup"><span data-stu-id="1900a-1022">The `format` parameter consists of zero or more runs of text intermixed with zero or more indexed placeholders, called format items, that correspond to an object in the parameter list of this method.</span></span> <span data-ttu-id="1900a-1023">В процессе форматирования каждый элемент формата заменяется текстовое представление значения соответствующего объекта.</span><span class="sxs-lookup"><span data-stu-id="1900a-1023">The formatting process replaces each format item with the text representation of the value of the corresponding object.</span></span>  
  
 <span data-ttu-id="1900a-1024">Синтаксис элементов форматирования `{` *индекс*[`,`*выравнивание*] [`:`*formatString*]`}`, который указывает Обязательный индекса, необязательно длину и выравнивание форматированного текста и необязательная строка символов описателя формата, определяющих способ форматирования значения соответствующего объекта.</span><span class="sxs-lookup"><span data-stu-id="1900a-1024">The syntax of a format item is `{`*index*[`,`*alignment*][`:`*formatString*]`}`, which specifies a mandatory index, the optional length and alignment of the formatted text, and an optional string of format specifier characters that govern how the value of the corresponding object is formatted.</span></span>  
  
 <span data-ttu-id="1900a-1025">Платформа .NET Framework предоставляет широкую поддержку форматирования, который описан более подробно в следующих разделах о форматировании.</span><span class="sxs-lookup"><span data-stu-id="1900a-1025">The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics.</span></span>  
  
-   <span data-ttu-id="1900a-1026">Дополнительные сведения о составного форматирования, поддерживаемые методами, такими как <xref:System.String.Format%2A>, <xref:System.Text.StringBuilder.AppendFormat%2A>и некоторые перегрузки <xref:System.Console.WriteLine%2A>, в разделе [составное форматирование](~/docs/standard/base-types/composite-formatting.md).</span><span class="sxs-lookup"><span data-stu-id="1900a-1026">For more information about the composite formatting feature supported by methods such as <xref:System.String.Format%2A>, <xref:System.Text.StringBuilder.AppendFormat%2A>, and some overloads of <xref:System.Console.WriteLine%2A>, see [Composite Formatting](~/docs/standard/base-types/composite-formatting.md).</span></span>  
  
-   <span data-ttu-id="1900a-1027">Дополнительные сведения об описателях числового формата см. в разделе [строки стандартного числового формата](~/docs/standard/base-types/standard-numeric-format-strings.md) и [строки настраиваемых числовых форматов](~/docs/standard/base-types/custom-numeric-format-strings.md).</span><span class="sxs-lookup"><span data-stu-id="1900a-1027">For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
-   <span data-ttu-id="1900a-1028">Дополнительные сведения о дате и времени описатели формата см. в разделе [стандартной строки даты и времени формат](~/docs/standard/base-types/standard-date-and-time-format-strings.md) и [пользовательских строк даты и времени формат](~/docs/standard/base-types/custom-date-and-time-format-strings.md).</span><span class="sxs-lookup"><span data-stu-id="1900a-1028">For more information about date and time format specifiers, see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) and [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md).</span></span>  
  
-   <span data-ttu-id="1900a-1029">Дополнительные сведения об описателях форматов перечисления см. в разделе [строки форматов перечисления](~/docs/standard/base-types/enumeration-format-strings.md).</span><span class="sxs-lookup"><span data-stu-id="1900a-1029">For more information about enumeration format specifiers, see [Enumeration Format Strings](~/docs/standard/base-types/enumeration-format-strings.md).</span></span>  
  
-   <span data-ttu-id="1900a-1030">Дополнительные сведения о форматировании см. в разделе [типы форматирования](~/docs/standard/base-types/formatting-types.md).</span><span class="sxs-lookup"><span data-stu-id="1900a-1030">For more information about formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1900a-1031">В следующем примере с помощью метода `WriteLine` демонстрируются стандартные описатели форматирования чисел, дат и значений перечислимых типов.</span><span class="sxs-lookup"><span data-stu-id="1900a-1031">The following example uses the `WriteLine` method to demonstrate the standard formatting specifiers for numbers, dates, and enumerations.</span></span>  
  
 [!code-cpp[console.writelineFmt1#1](~/samples/snippets/cpp/VS_Snippets_CLR/console.writelineFmt1/cpp/wl.cpp#1)] 
 [!code-csharp[console.writelineFmt1#1](~/samples/snippets/csharp/VS_Snippets_CLR/console.writelineFmt1/cs/wl.cs#1)]
 [!code-vb[console.writelineFmt1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/console.writelineFmt1/vb/wl.vb#1)]  
  
 <span data-ttu-id="1900a-1032">В следующем примере показано использование метода `Write`.</span><span class="sxs-lookup"><span data-stu-id="1900a-1032">The following example illustrates the use of the `Write` method.</span></span>  
  
 [!code-cpp[System.Console-REFORMAT#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Console-REFORMAT/CPP/reformat.cpp#1)]
 [!code-csharp[System.Console-REFORMAT#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console-REFORMAT/CS/reformat.cs#1)]
 [!code-vb[System.Console-REFORMAT#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console-REFORMAT/VB/reformat.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1900a-1033">Ошибка ввода/вывода.</span><span class="sxs-lookup"><span data-stu-id="1900a-1033">An I/O error occurred.</span></span></exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1900a-1034">Свойство <paramref name="format" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="1900a-1034"><paramref name="format" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="1900a-1035">Недопустимая спецификация формата в <paramref name="format" />.</span><span class="sxs-lookup"><span data-stu-id="1900a-1035">The format specification in <paramref name="format" /> is invalid.</span></span></exception>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="1900a-1036">для изменения безопасных окон верхнего уровня и дочерние окна.</span><span class="sxs-lookup"><span data-stu-id="1900a-1036">for modifying safe top-level windows and subwindows.</span></span> <span data-ttu-id="1900a-1037">Связанное перечисление: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span><span class="sxs-lookup"><span data-stu-id="1900a-1037">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span></span></permission>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (string format, object arg0, object arg1, object arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(string format, object arg0, object arg1, object arg2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.Write(System.String,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (format As String, arg0 As Object, arg1 As Object, arg2 As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(System::String ^ format, System::Object ^ arg0, System::Object ^ arg1, System::Object ^ arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="arg0" Type="System.Object" />
        <Parameter Name="arg1" Type="System.Object" />
        <Parameter Name="arg2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="1900a-1038">Строка составного формата.</span><span class="sxs-lookup"><span data-stu-id="1900a-1038">A composite format string.</span></span></param>
        <param name="arg0"><span data-ttu-id="1900a-1039">Первый объект для записи с использованием <c>format</c>.</span><span class="sxs-lookup"><span data-stu-id="1900a-1039">The first object to write using <c>format</c>.</span></span></param>
        <param name="arg1"><span data-ttu-id="1900a-1040">Второй объект для записи с использованием <c>format</c>.</span><span class="sxs-lookup"><span data-stu-id="1900a-1040">The second object to write using <c>format</c>.</span></span></param>
        <param name="arg2"><span data-ttu-id="1900a-1041">Третий объект для записи с использованием <c>format</c>.</span><span class="sxs-lookup"><span data-stu-id="1900a-1041">The third object to write using <c>format</c>.</span></span></param>
        <summary><span data-ttu-id="1900a-1042">Записывает текстовые представления заданных объектов в стандартный выходной поток, используя заданные сведения о форматировании.</span><span class="sxs-lookup"><span data-stu-id="1900a-1042">Writes the text representation of the specified objects to the standard output stream using the specified format information.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1900a-1043">Этот метод использует [составное форматирование](~/docs/standard/base-types/composite-formatting.md) платформы .NET Framework, чтобы преобразовать значение объекта в его текстовое представление и встроить это представление в строку.</span><span class="sxs-lookup"><span data-stu-id="1900a-1043">This method uses the [composite formatting feature](~/docs/standard/base-types/composite-formatting.md) of the .NET Framework to convert the value of an object to its text representation and embed that representation in a string.</span></span> <span data-ttu-id="1900a-1044">Результирующая строка записывается в поток вывода.</span><span class="sxs-lookup"><span data-stu-id="1900a-1044">The resulting string is written to the output stream.</span></span>  
  
 <span data-ttu-id="1900a-1045">`format` Параметр состоит из нуля или больше текста, перемежаемых ноль или более индексированные местозаполнители, называются элементами форматирования, которые соответствуют объекту в списке параметров данного метода.</span><span class="sxs-lookup"><span data-stu-id="1900a-1045">The `format` parameter consists of zero or more runs of text intermixed with zero or more indexed placeholders, called format items, that correspond to an object in the parameter list of this method.</span></span> <span data-ttu-id="1900a-1046">В процессе форматирования каждый элемент формата заменяется текстовое представление значения соответствующего объекта.</span><span class="sxs-lookup"><span data-stu-id="1900a-1046">The formatting process replaces each format item with the text representation of the value of the corresponding object.</span></span>  
  
 <span data-ttu-id="1900a-1047">Синтаксис элементов форматирования `{` *индекс*[`,`*выравнивание*] [`:`*formatString*]`}`, который указывает Обязательный индекса, необязательно длину и выравнивание форматированного текста и необязательная строка символов описателя формата, определяющих способ форматирования значения соответствующего объекта.</span><span class="sxs-lookup"><span data-stu-id="1900a-1047">The syntax of a format item is `{`*index*[`,`*alignment*][`:`*formatString*]`}`, which specifies a mandatory index, the optional length and alignment of the formatted text, and an optional string of format specifier characters that govern how the value of the corresponding object is formatted.</span></span>  
  
 <span data-ttu-id="1900a-1048">Платформа .NET Framework предоставляет широкую поддержку форматирования, который описан более подробно в следующих разделах о форматировании.</span><span class="sxs-lookup"><span data-stu-id="1900a-1048">The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics.</span></span>  
  
-   <span data-ttu-id="1900a-1049">Дополнительные сведения о составного форматирования, поддерживаемые методами, такими как <xref:System.String.Format%2A>, <xref:System.Text.StringBuilder.AppendFormat%2A>и некоторые перегрузки <xref:System.Console.WriteLine%2A>, в разделе [составное форматирование](~/docs/standard/base-types/composite-formatting.md).</span><span class="sxs-lookup"><span data-stu-id="1900a-1049">For more information about the composite formatting feature supported by methods such as <xref:System.String.Format%2A>, <xref:System.Text.StringBuilder.AppendFormat%2A>, and some overloads of <xref:System.Console.WriteLine%2A>, see [Composite Formatting](~/docs/standard/base-types/composite-formatting.md).</span></span>  
  
-   <span data-ttu-id="1900a-1050">Дополнительные сведения об описателях числового формата см. в разделе [строки стандартного числового формата](~/docs/standard/base-types/standard-numeric-format-strings.md) и [строки настраиваемых числовых форматов](~/docs/standard/base-types/custom-numeric-format-strings.md).</span><span class="sxs-lookup"><span data-stu-id="1900a-1050">For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
-   <span data-ttu-id="1900a-1051">Дополнительные сведения о дате и времени описатели формата см. в разделе [стандартной строки даты и времени формат](~/docs/standard/base-types/standard-date-and-time-format-strings.md) и [пользовательских строк даты и времени формат](~/docs/standard/base-types/custom-date-and-time-format-strings.md).</span><span class="sxs-lookup"><span data-stu-id="1900a-1051">For more information about date and time format specifiers, see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) and [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md).</span></span>  
  
-   <span data-ttu-id="1900a-1052">Дополнительные сведения об описателях форматов перечисления см. в разделе [строки форматов перечисления](~/docs/standard/base-types/enumeration-format-strings.md).</span><span class="sxs-lookup"><span data-stu-id="1900a-1052">For more information about enumeration format specifiers, see [Enumeration Format Strings](~/docs/standard/base-types/enumeration-format-strings.md).</span></span>  
  
-   <span data-ttu-id="1900a-1053">Дополнительные сведения о форматировании см. в разделе [типы форматирования](~/docs/standard/base-types/formatting-types.md).</span><span class="sxs-lookup"><span data-stu-id="1900a-1053">For more information about formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1900a-1054">В следующем примере с помощью метода `WriteLine` демонстрируются стандартные описатели форматирования чисел, дат и значений перечислимых типов.</span><span class="sxs-lookup"><span data-stu-id="1900a-1054">The following example uses the `WriteLine` method to demonstrate the standard formatting specifiers for numbers, dates, and enumerations.</span></span>  
  
 [!code-cpp[console.writelineFmt1#1](~/samples/snippets/cpp/VS_Snippets_CLR/console.writelineFmt1/cpp/wl.cpp#1)] 
 [!code-csharp[console.writelineFmt1#1](~/samples/snippets/csharp/VS_Snippets_CLR/console.writelineFmt1/cs/wl.cs#1)]
 [!code-vb[console.writelineFmt1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/console.writelineFmt1/vb/wl.vb#1)]  
  
 <span data-ttu-id="1900a-1055">В следующем примере показано использование метода `Write`.</span><span class="sxs-lookup"><span data-stu-id="1900a-1055">The following example illustrates the use of the `Write` method.</span></span>  
  
 [!code-cpp[System.Console-REFORMAT#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Console-REFORMAT/CPP/reformat.cpp#1)]
 [!code-csharp[System.Console-REFORMAT#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console-REFORMAT/CS/reformat.cs#1)]
 [!code-vb[System.Console-REFORMAT#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console-REFORMAT/VB/reformat.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1900a-1056">Ошибка ввода/вывода.</span><span class="sxs-lookup"><span data-stu-id="1900a-1056">An I/O error occurred.</span></span></exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1900a-1057">Свойство <paramref name="format" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="1900a-1057"><paramref name="format" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="1900a-1058">Недопустимая спецификация формата в <paramref name="format" />.</span><span class="sxs-lookup"><span data-stu-id="1900a-1058">The format specification in <paramref name="format" /> is invalid.</span></span></exception>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="1900a-1059">для изменения безопасных окон верхнего уровня и дочерние окна.</span><span class="sxs-lookup"><span data-stu-id="1900a-1059">for modifying safe top-level windows and subwindows.</span></span> <span data-ttu-id="1900a-1060">Связанное перечисление: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span><span class="sxs-lookup"><span data-stu-id="1900a-1060">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span></span></permission>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (string format, object arg0, object arg1, object arg2, object arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(string format, object arg0, object arg1, object arg2, object arg3) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.Write(System.String,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (format As String, arg0 As Object, arg1 As Object, arg2 As Object, arg3 As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(System::String ^ format, System::Object ^ arg0, System::Object ^ arg1, System::Object ^ arg2, System::Object ^ arg3);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="arg0" Type="System.Object" />
        <Parameter Name="arg1" Type="System.Object" />
        <Parameter Name="arg2" Type="System.Object" />
        <Parameter Name="arg3" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="1900a-1061">Строка составного формата.</span><span class="sxs-lookup"><span data-stu-id="1900a-1061">A composite format string.</span></span></param>
        <param name="arg0"><span data-ttu-id="1900a-1062">Первый объект для записи с использованием <c>format</c>.</span><span class="sxs-lookup"><span data-stu-id="1900a-1062">The first object to write using <c>format</c>.</span></span></param>
        <param name="arg1"><span data-ttu-id="1900a-1063">Второй объект для записи с использованием <c>format</c>.</span><span class="sxs-lookup"><span data-stu-id="1900a-1063">The second object to write using <c>format</c>.</span></span></param>
        <param name="arg2"><span data-ttu-id="1900a-1064">Третий объект для записи с использованием <c>format</c>.</span><span class="sxs-lookup"><span data-stu-id="1900a-1064">The third object to write using <c>format</c>.</span></span></param>
        <param name="arg3"><span data-ttu-id="1900a-1065">Четвертый объект для записи с использованием <c>format</c>.</span><span class="sxs-lookup"><span data-stu-id="1900a-1065">The fourth object to write using <c>format</c>.</span></span></param>
        <summary><span data-ttu-id="1900a-1066">Записывает текстовое представление заданных объектов и список параметров переменной длины в стандартный выходной поток, используя заданные сведения о форматировании.</span><span class="sxs-lookup"><span data-stu-id="1900a-1066">Writes the text representation of the specified objects and variable-length parameter list to the standard output stream using the specified format information.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="1900a-1067">Этот интерфейс API CLS-несовместим.</span><span class="sxs-lookup"><span data-stu-id="1900a-1067">This API is not CLS-compliant.</span></span> <span data-ttu-id="1900a-1068">CLS-совместимая альтернатива — <xref:System.Console.Write%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="1900a-1068">The CLS-compliant alternative is <xref:System.Console.Write%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType>.</span></span> <span data-ttu-id="1900a-1069">Компиляторы C# и Visual Basic автоматически разрешить вызов этого метода, как вызов <xref:System.Console.Write%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="1900a-1069">The C# and Visual Basic compilers automatically resolve a call to this method as a call to <xref:System.Console.Write%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="1900a-1070">Этот метод использует [составное форматирование](~/docs/standard/base-types/composite-formatting.md) платформы .NET Framework, чтобы преобразовать значение объекта в его текстовое представление и встроить это представление в строку.</span><span class="sxs-lookup"><span data-stu-id="1900a-1070">This method uses the [composite formatting feature](~/docs/standard/base-types/composite-formatting.md) of the .NET Framework to convert the value of an object to its text representation and embed that representation in a string.</span></span> <span data-ttu-id="1900a-1071">Результирующая строка записывается в поток вывода.</span><span class="sxs-lookup"><span data-stu-id="1900a-1071">The resulting string is written to the output stream.</span></span>  
  
 <span data-ttu-id="1900a-1072">`format` Параметр состоит из нуля или больше текста, перемежаемых ноль или более индексированные местозаполнители, называются элементами форматирования, которые соответствуют объекту в списке параметров данного метода.</span><span class="sxs-lookup"><span data-stu-id="1900a-1072">The `format` parameter consists of zero or more runs of text intermixed with zero or more indexed placeholders, called format items, that correspond to an object in the parameter list of this method.</span></span> <span data-ttu-id="1900a-1073">В процессе форматирования каждый элемент формата заменяется текстовое представление значения соответствующего объекта.</span><span class="sxs-lookup"><span data-stu-id="1900a-1073">The formatting process replaces each format item with the text representation of the value of the corresponding object.</span></span>  
  
 <span data-ttu-id="1900a-1074">Синтаксис элементов форматирования `{` *индекс*[`,`*выравнивание*] [`:`*formatString*]`}`, который указывает Обязательный индекса, необязательно длину и выравнивание форматированного текста и необязательная строка символов описателя формата, определяющих способ форматирования значения соответствующего объекта.</span><span class="sxs-lookup"><span data-stu-id="1900a-1074">The syntax of a format item is `{`*index*[`,`*alignment*][`:`*formatString*]`}`, which specifies a mandatory index, the optional length and alignment of the formatted text, and an optional string of format specifier characters that govern how the value of the corresponding object is formatted.</span></span>  
  
 <span data-ttu-id="1900a-1075">Платформа .NET Framework предоставляет широкую поддержку форматирования, который описан более подробно в следующих разделах о форматировании.</span><span class="sxs-lookup"><span data-stu-id="1900a-1075">The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics.</span></span>  
  
-   <span data-ttu-id="1900a-1076">Дополнительные сведения о составного форматирования, поддерживаемые методами, такими как <xref:System.String.Format%2A>, <xref:System.Text.StringBuilder.AppendFormat%2A>и некоторые перегрузки <xref:System.Console.WriteLine%2A>, в разделе [составное форматирование](~/docs/standard/base-types/composite-formatting.md).</span><span class="sxs-lookup"><span data-stu-id="1900a-1076">For more information about the composite formatting feature supported by methods such as <xref:System.String.Format%2A>, <xref:System.Text.StringBuilder.AppendFormat%2A>, and some overloads of <xref:System.Console.WriteLine%2A>, see [Composite Formatting](~/docs/standard/base-types/composite-formatting.md).</span></span>  
  
-   <span data-ttu-id="1900a-1077">Дополнительные сведения об описателях числового формата см. в разделе [строки стандартного числового формата](~/docs/standard/base-types/standard-numeric-format-strings.md) и [строки настраиваемых числовых форматов](~/docs/standard/base-types/custom-numeric-format-strings.md).</span><span class="sxs-lookup"><span data-stu-id="1900a-1077">For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
-   <span data-ttu-id="1900a-1078">Дополнительные сведения о дате и времени описатели формата см. в разделе [стандартной строки даты и времени формат](~/docs/standard/base-types/standard-date-and-time-format-strings.md) и [пользовательских строк даты и времени формат](~/docs/standard/base-types/custom-date-and-time-format-strings.md).</span><span class="sxs-lookup"><span data-stu-id="1900a-1078">For more information about date and time format specifiers, see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) and [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md).</span></span>  
  
-   <span data-ttu-id="1900a-1079">Дополнительные сведения об описателях форматов перечисления см. в разделе [строки форматов перечисления](~/docs/standard/base-types/enumeration-format-strings.md).</span><span class="sxs-lookup"><span data-stu-id="1900a-1079">For more information about enumeration format specifiers, see [Enumeration Format Strings](~/docs/standard/base-types/enumeration-format-strings.md).</span></span>  
  
-   <span data-ttu-id="1900a-1080">Дополнительные сведения о форматировании см. в разделе [типы форматирования](~/docs/standard/base-types/formatting-types.md).</span><span class="sxs-lookup"><span data-stu-id="1900a-1080">For more information about formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1900a-1081">В следующем примере показано использование переменной параметров с <xref:System.Console.Write%28System.String%2CSystem.Object%2CSystem.Object%2CSystem.Object%2CSystem.Object%29> метод.</span><span class="sxs-lookup"><span data-stu-id="1900a-1081">The following example illustrates the use of variable parameters with the <xref:System.Console.Write%28System.String%2CSystem.Object%2CSystem.Object%2CSystem.Object%2CSystem.Object%29> method.</span></span> <span data-ttu-id="1900a-1082">Метод вызывается с Строка составного формата и пятью элементами формата.</span><span class="sxs-lookup"><span data-stu-id="1900a-1082">The method is called with a composite format string and five format items.</span></span>  
  
 [!code-cpp[System.Console.Write#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.console.write/cpp/con_write.cpp#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1900a-1083">Ошибка ввода/вывода.</span><span class="sxs-lookup"><span data-stu-id="1900a-1083">An I/O error occurred.</span></span></exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1900a-1084">Свойство <paramref name="format" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="1900a-1084"><paramref name="format" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="1900a-1085">Недопустимая спецификация формата в <paramref name="format" />.</span><span class="sxs-lookup"><span data-stu-id="1900a-1085">The format specification in <paramref name="format" /> is invalid.</span></span></exception>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="1900a-1086">для изменения безопасных окон верхнего уровня и дочерние окна.</span><span class="sxs-lookup"><span data-stu-id="1900a-1086">for modifying safe top-level windows and subwindows.</span></span> <span data-ttu-id="1900a-1087">Связанное перечисление: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span><span class="sxs-lookup"><span data-stu-id="1900a-1087">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span></span></permission>
        <block subset="none" type="usage">
          <para><span data-ttu-id="1900a-1088">Этот метод помечен атрибутом <see langword="vararg" /> ключевое слово, которое означает, что он поддерживает переменное число параметров.</span><span class="sxs-lookup"><span data-stu-id="1900a-1088">This method is marked with the <see langword="vararg" /> keyword, which means that it supports a variable number of parameters.</span></span> <span data-ttu-id="1900a-1089">Метод может вызываться из Visual C++, но не может вызываться из кода C# или Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="1900a-1089">The method can be called from Visual C++, but it cannot be called from C# or Visual Basic code.</span></span> <span data-ttu-id="1900a-1090">Компиляторы C# и Visual Basic разрешить вызовы <see cref="M:System.Console.Write(System.String,System.Object,System.Object,System.Object,System.Object)" /> как вызов <see cref="M:System.Console.Write(System.String,System.Object[])" />.</span><span class="sxs-lookup"><span data-stu-id="1900a-1090">The C# and Visual Basic compilers resolve calls to <see cref="M:System.Console.Write(System.String,System.Object,System.Object,System.Object,System.Object)" /> as calls to <see cref="M:System.Console.Write(System.String,System.Object[])" />.</span></span></para>
        </block>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.WriteLine" />
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteLine">
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="1900a-1091">Записывает указанные данные с текущим признаком конца строки в стандартный выходной поток.</span><span class="sxs-lookup"><span data-stu-id="1900a-1091">Writes the specified data, followed by the current line terminator, to the standard output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1900a-1092">По умолчанию признаком конца строки является строкой, значение которого является возврат каретки, перевода строки («\r\n» в C# или `vbCrLf` в Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="1900a-1092">The default line terminator is a string whose value is a carriage return followed by a line feed ("\r\n" in C#, or `vbCrLf` in Visual Basic).</span></span> <span data-ttu-id="1900a-1093">Признак конца строки можно изменить, задав <xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType> свойство <xref:System.Console.Out%2A> свойство в другую строку.</span><span class="sxs-lookup"><span data-stu-id="1900a-1093">You can change the line terminator by setting the <xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType> property of the <xref:System.Console.Out%2A> property to another string.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.WriteLine" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLine ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1900a-1094">Записывает текущий признак конца строки в стандартный выходной поток.</span><span class="sxs-lookup"><span data-stu-id="1900a-1094">Writes the current line terminator to the standard output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1900a-1095">По умолчанию признаком конца строки является строкой, значение которого является возврат каретки, перевода строки («\r\n» в C# или `vbCrLf` в Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="1900a-1095">The default line terminator is a string whose value is a carriage return followed by a line feed ("\r\n" in C#, or `vbCrLf` in Visual Basic).</span></span> <span data-ttu-id="1900a-1096">Признак конца строки можно изменить, задав <xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType> свойство <xref:System.Console.Out%2A> свойство в другую строку.</span><span class="sxs-lookup"><span data-stu-id="1900a-1096">You can change the line terminator by setting the <xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType> property of the <xref:System.Console.Out%2A> property to another string.</span></span> <span data-ttu-id="1900a-1097">Иллюстрация приведена в примере.</span><span class="sxs-lookup"><span data-stu-id="1900a-1097">The example provides an illustration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1900a-1098">В примере изменяется признак конца строки со значением по умолчанию «\r\n» или `vbCrLf` для «\r\n\r\n» или `vbCrLf`  +  `vbCrLf`.</span><span class="sxs-lookup"><span data-stu-id="1900a-1098">The example changes the line terminator from its default value of "\r\n" or `vbCrLf` to "\r\n\r\n" or `vbCrLf` + `vbCrLf`.</span></span> <span data-ttu-id="1900a-1099">Затем он вызывает <xref:System.Console.WriteLine> и <xref:System.Console.WriteLine%28System.String%29> методов для отображения вывода на консоль.</span><span class="sxs-lookup"><span data-stu-id="1900a-1099">It then calls the <xref:System.Console.WriteLine> and <xref:System.Console.WriteLine%28System.String%29> methods to display output to the console.</span></span>  
  
 [!code-cpp[System.Console.WriteLine#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Console.WriteLine/CPP/newline1.cpp#2)]
 [!code-csharp[System.Console.WriteLine#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console.WriteLine/CS/newline1.cs#2)]
 [!code-vb[System.Console.WriteLine#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console.WriteLine/VB/newline1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1900a-1100">Ошибка ввода/вывода.</span><span class="sxs-lookup"><span data-stu-id="1900a-1100">An I/O error occurred.</span></span></exception>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="1900a-1101">для изменения безопасных окон верхнего уровня и дочерние окна.</span><span class="sxs-lookup"><span data-stu-id="1900a-1101">for modifying safe top-level windows and subwindows.</span></span> <span data-ttu-id="1900a-1102">Связанное перечисление: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span><span class="sxs-lookup"><span data-stu-id="1900a-1102">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span></span></permission>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.Write(System.String,System.Object)" />
        <altmember cref="P:System.IO.TextWriter.NewLine" />
        <altmember cref="P:System.Console.Out" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.WriteLine(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLine (value As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine(bool value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="1900a-1103">Значение для записи.</span><span class="sxs-lookup"><span data-stu-id="1900a-1103">The value to write.</span></span></param>
        <summary><span data-ttu-id="1900a-1104">Записывает текстовое представление заданного логического значения с текущим признаком конца строки в стандартный выходной поток.</span><span class="sxs-lookup"><span data-stu-id="1900a-1104">Writes the text representation of the specified Boolean value, followed by the current line terminator, to the standard output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1900a-1105">Текстовое представление `value` получается при вызове метода <xref:System.Boolean.ToString%2A?displayProperty=nameWithType> метод.</span><span class="sxs-lookup"><span data-stu-id="1900a-1105">The text representation of `value` is produced by calling the <xref:System.Boolean.ToString%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="1900a-1106">Дополнительные сведения о признак конца строки, в разделе «Примечания» <xref:System.Console.WriteLine%2A> метод, который не принимает никаких параметров.</span><span class="sxs-lookup"><span data-stu-id="1900a-1106">For more information about the line terminator, see the Remarks section of the <xref:System.Console.WriteLine%2A> method that takes no parameters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1900a-1107">Следующий пример приводит к возникновению ошибки десять случайных целых чисел и использует <xref:System.Console.WriteLine%28System.Boolean%29?displayProperty=nameWithType> метод для указания того, являются ли они даже.</span><span class="sxs-lookup"><span data-stu-id="1900a-1107">The following example generates ten random integers and uses the <xref:System.Console.WriteLine%28System.Boolean%29?displayProperty=nameWithType> method to indicate whether they are even.</span></span>  
  
 [!code-cpp[System.Console.WriteLine#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Console.WriteLine/CPP/writeline_boolean1.cpp#4)]
 [!code-csharp[System.Console.WriteLine#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console.WriteLine/CS/writeline_boolean1.cs#4)]
 [!code-vb[System.Console.WriteLine#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console.WriteLine/VB/writeline_boolean1.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1900a-1108">Ошибка ввода/вывода.</span><span class="sxs-lookup"><span data-stu-id="1900a-1108">An I/O error occurred.</span></span></exception>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="1900a-1109">для изменения безопасных окон верхнего уровня и дочерние окна.</span><span class="sxs-lookup"><span data-stu-id="1900a-1109">for modifying safe top-level windows and subwindows.</span></span> <span data-ttu-id="1900a-1110">Связанное перечисление: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span><span class="sxs-lookup"><span data-stu-id="1900a-1110">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span></span></permission>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.Write(System.String,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.WriteLine(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLine (value As Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine(char value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="1900a-1111">Значение для записи.</span><span class="sxs-lookup"><span data-stu-id="1900a-1111">The value to write.</span></span></param>
        <summary><span data-ttu-id="1900a-1112">Записывает заданный знак Юникода, за которым следует текущий признак конца строки, в стандартный выходной поток.</span><span class="sxs-lookup"><span data-stu-id="1900a-1112">Writes the specified Unicode character, followed by the current line terminator, value to the standard output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1900a-1113">Дополнительные сведения о признак конца строки, в разделе «Примечания» <xref:System.Console.WriteLine%2A> метод, который не принимает никаких параметров.</span><span class="sxs-lookup"><span data-stu-id="1900a-1113">For more information about the line terminator, see the Remarks section of the <xref:System.Console.WriteLine%2A> method that takes no parameters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1900a-1114">В следующем примере представлен калькулятора совет, вычисляет совет 18% и использует <xref:System.Console.WriteLine%2A> метод для отображения сумму издержек, исходный объем совет и общую сумму.</span><span class="sxs-lookup"><span data-stu-id="1900a-1114">The following example is a tip calculator that calculates an 18% tip and uses the <xref:System.Console.WriteLine%2A> method to display the amount of the original charge, the amount of the tip, and the total amount.</span></span> <span data-ttu-id="1900a-1115">Пример является консольным приложением, которое пользователь должен ввести сумму исходной стоимости как параметр командной строки.</span><span class="sxs-lookup"><span data-stu-id="1900a-1115">The example is a console application that requires the user to supply the amount of the original charge as a command-line parameter.</span></span>  
  
 [!code-csharp[System.Console.WriteLine#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console.WriteLine/CS/tipcalc.cs#1)]
 [!code-vb[System.Console.WriteLine#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console.WriteLine/VB/tipcalc.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1900a-1116">Ошибка ввода/вывода.</span><span class="sxs-lookup"><span data-stu-id="1900a-1116">An I/O error occurred.</span></span></exception>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="1900a-1117">для изменения безопасных окон верхнего уровня и дочерние окна.</span><span class="sxs-lookup"><span data-stu-id="1900a-1117">for modifying safe top-level windows and subwindows.</span></span> <span data-ttu-id="1900a-1118">Связанное перечисление: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span><span class="sxs-lookup"><span data-stu-id="1900a-1118">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span></span></permission>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.Write(System.String,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine (char[] buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(char[] buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.WriteLine(System.Char[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLine (buffer As Char())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine(cli::array &lt;char&gt; ^ buffer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="1900a-1119">Массив знаков Юникода.</span><span class="sxs-lookup"><span data-stu-id="1900a-1119">A Unicode character array.</span></span></param>
        <summary><span data-ttu-id="1900a-1120">Записывает заданный массив знаков Юникода, за которым следует текущий признак конца строки, в стандартный выходной поток.</span><span class="sxs-lookup"><span data-stu-id="1900a-1120">Writes the specified array of Unicode characters, followed by the current line terminator, to the standard output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1900a-1121">Дополнительные сведения о признак конца строки, в разделе «Примечания» <xref:System.Console.WriteLine%2A> метод, который не принимает никаких параметров.</span><span class="sxs-lookup"><span data-stu-id="1900a-1121">For more information about the line terminator, see the Remarks section of the <xref:System.Console.WriteLine%2A> method that takes no parameters.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1900a-1122">Ошибка ввода/вывода.</span><span class="sxs-lookup"><span data-stu-id="1900a-1122">An I/O error occurred.</span></span></exception>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="1900a-1123">для изменения безопасных окон верхнего уровня и дочерние окна.</span><span class="sxs-lookup"><span data-stu-id="1900a-1123">for modifying safe top-level windows and subwindows.</span></span> <span data-ttu-id="1900a-1124">Связанное перечисление: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span><span class="sxs-lookup"><span data-stu-id="1900a-1124">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span></span></permission>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.Write(System.String,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.WriteLine(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLine (value As Decimal)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine(System::Decimal value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="1900a-1125">Значение для записи.</span><span class="sxs-lookup"><span data-stu-id="1900a-1125">The value to write.</span></span></param>
        <summary><span data-ttu-id="1900a-1126">Записывает текстовое представление указанного значения <see cref="T:System.Decimal" />, за которым следует текущий знак завершения строки, в стандартный выходной поток.</span><span class="sxs-lookup"><span data-stu-id="1900a-1126">Writes the text representation of the specified <see cref="T:System.Decimal" /> value, followed by the current line terminator, to the standard output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1900a-1127">Текстовое представление `value` получается при вызове метода <xref:System.Decimal.ToString%2A?displayProperty=nameWithType> метод.</span><span class="sxs-lookup"><span data-stu-id="1900a-1127">The text representation of `value` is produced by calling the <xref:System.Decimal.ToString%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="1900a-1128">Дополнительные сведения о признак конца строки, в разделе «Примечания» <xref:System.Console.WriteLine%2A> метод, который не принимает никаких параметров.</span><span class="sxs-lookup"><span data-stu-id="1900a-1128">For more information about the line terminator, see the Remarks section of the <xref:System.Console.WriteLine%2A> method that takes no parameters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1900a-1129">В следующем примере представлен калькулятора совет, вычисляет совет 18% и использует <xref:System.Console.WriteLine%2A> метод для отображения сумму издержек, исходный объем совет и общую сумму.</span><span class="sxs-lookup"><span data-stu-id="1900a-1129">The following example is a tip calculator that calculates an 18% tip and uses the <xref:System.Console.WriteLine%2A> method to display the amount of the original charge, the amount of the tip, and the total amount.</span></span> <span data-ttu-id="1900a-1130">Пример является консольным приложением, которое пользователь должен ввести сумму исходной стоимости как параметр командной строки.</span><span class="sxs-lookup"><span data-stu-id="1900a-1130">The example is a console application that requires the user to supply the amount of the original charge as a command-line parameter.</span></span>  
  
 [!code-csharp[System.Console.WriteLine#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console.WriteLine/CS/tipcalc.cs#1)]
 [!code-vb[System.Console.WriteLine#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console.WriteLine/VB/tipcalc.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1900a-1131">Ошибка ввода/вывода.</span><span class="sxs-lookup"><span data-stu-id="1900a-1131">An I/O error occurred.</span></span></exception>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="1900a-1132">для изменения безопасных окон верхнего уровня и дочерние окна.</span><span class="sxs-lookup"><span data-stu-id="1900a-1132">for modifying safe top-level windows and subwindows.</span></span> <span data-ttu-id="1900a-1133">Связанное перечисление: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span><span class="sxs-lookup"><span data-stu-id="1900a-1133">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span></span></permission>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.Write(System.String,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.WriteLine(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLine (value As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine(double value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="1900a-1134">Значение для записи.</span><span class="sxs-lookup"><span data-stu-id="1900a-1134">The value to write.</span></span></param>
        <summary><span data-ttu-id="1900a-1135">Записывает текстовое представление заданного значения двойной точности с плавающей запятой, за которым следует признак конца строки, в стандартный выходной поток.</span><span class="sxs-lookup"><span data-stu-id="1900a-1135">Writes the text representation of the specified double-precision floating-point value, followed by the current line terminator, to the standard output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1900a-1136">Текстовое представление `value` получается при вызове метода <xref:System.Double.ToString%2A?displayProperty=nameWithType> метод.</span><span class="sxs-lookup"><span data-stu-id="1900a-1136">The text representation of `value` is produced by calling the <xref:System.Double.ToString%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="1900a-1137">Дополнительные сведения о признак конца строки, в разделе «Примечания» <xref:System.Console.WriteLine%2A> метод, который не принимает никаких параметров.</span><span class="sxs-lookup"><span data-stu-id="1900a-1137">For more information about the line terminator, see the Remarks section of the <xref:System.Console.WriteLine%2A> method that takes no parameters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1900a-1138">В следующем примере представлен калькулятора совет, вычисляет совет 18% и использует <xref:System.Console.WriteLine%2A> метод для отображения сумму издержек, исходный объем совет и общую сумму.</span><span class="sxs-lookup"><span data-stu-id="1900a-1138">The following example is a tip calculator that calculates an 18% tip and uses the <xref:System.Console.WriteLine%2A> method to display the amount of the original charge, the amount of the tip, and the total amount.</span></span> <span data-ttu-id="1900a-1139">Пример является консольным приложением, которое пользователь должен ввести сумму исходной стоимости как параметр командной строки.</span><span class="sxs-lookup"><span data-stu-id="1900a-1139">The example is a console application that requires the user to supply the amount of the original charge as a command-line parameter.</span></span>  
  
 [!code-csharp[System.Console.WriteLine#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console.WriteLine/CS/tipcalc.cs#1)]
 [!code-vb[System.Console.WriteLine#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console.WriteLine/VB/tipcalc.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1900a-1140">Ошибка ввода/вывода.</span><span class="sxs-lookup"><span data-stu-id="1900a-1140">An I/O error occurred.</span></span></exception>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="1900a-1141">для изменения безопасных окон верхнего уровня и дочерние окна.</span><span class="sxs-lookup"><span data-stu-id="1900a-1141">for modifying safe top-level windows and subwindows.</span></span> <span data-ttu-id="1900a-1142">Связанное перечисление: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span><span class="sxs-lookup"><span data-stu-id="1900a-1142">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span></span></permission>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.Write(System.String,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.WriteLine(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLine (value As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine(int value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="1900a-1143">Значение для записи.</span><span class="sxs-lookup"><span data-stu-id="1900a-1143">The value to write.</span></span></param>
        <summary><span data-ttu-id="1900a-1144">Записывает текстовое представление заданного 32-битового целого числа со знаком, за которым следует текущий знак завершения строки, в стандартный поток вывода.</span><span class="sxs-lookup"><span data-stu-id="1900a-1144">Writes the text representation of the specified 32-bit signed integer value, followed by the current line terminator, to the standard output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1900a-1145">Текстовое представление `value` получается при вызове метода <xref:System.Int32.ToString%2A?displayProperty=nameWithType> метод.</span><span class="sxs-lookup"><span data-stu-id="1900a-1145">The text representation of `value` is produced by calling the <xref:System.Int32.ToString%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="1900a-1146">Дополнительные сведения о признак конца строки, в разделе «Примечания» <xref:System.Console.WriteLine%2A> метод, который не принимает никаких параметров.</span><span class="sxs-lookup"><span data-stu-id="1900a-1146">For more information about the line terminator, see the Remarks section of the <xref:System.Console.WriteLine%2A> method that takes no parameters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1900a-1147">В следующем примере представлен калькулятора совет, вычисляет совет 18% и использует <xref:System.Console.WriteLine%2A> метод для отображения сумму издержек, исходный объем совет и общую сумму.</span><span class="sxs-lookup"><span data-stu-id="1900a-1147">The following example is a tip calculator that calculates an 18% tip and uses the <xref:System.Console.WriteLine%2A> method to display the amount of the original charge, the amount of the tip, and the total amount.</span></span> <span data-ttu-id="1900a-1148">Пример является консольным приложением, которое пользователь должен ввести сумму исходной стоимости как параметр командной строки.</span><span class="sxs-lookup"><span data-stu-id="1900a-1148">The example is a console application that requires the user to supply the amount of the original charge as a command-line parameter.</span></span>  
  
 [!code-csharp[System.Console.WriteLine#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console.WriteLine/CS/tipcalc.cs#1)]
 [!code-vb[System.Console.WriteLine#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console.WriteLine/VB/tipcalc.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1900a-1149">Ошибка ввода/вывода.</span><span class="sxs-lookup"><span data-stu-id="1900a-1149">An I/O error occurred.</span></span></exception>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="1900a-1150">для изменения безопасных окон верхнего уровня и дочерние окна.</span><span class="sxs-lookup"><span data-stu-id="1900a-1150">for modifying safe top-level windows and subwindows.</span></span> <span data-ttu-id="1900a-1151">Связанное перечисление: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span><span class="sxs-lookup"><span data-stu-id="1900a-1151">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span></span></permission>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.Write(System.String,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.WriteLine(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLine (value As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine(long value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="1900a-1152">Значение для записи.</span><span class="sxs-lookup"><span data-stu-id="1900a-1152">The value to write.</span></span></param>
        <summary><span data-ttu-id="1900a-1153">Записывает текстовое представление заданного 64-битового целого числа со знаком, за которым следует текущий знак завершения строки, в стандартный поток вывода.</span><span class="sxs-lookup"><span data-stu-id="1900a-1153">Writes the text representation of the specified 64-bit signed integer value, followed by the current line terminator, to the standard output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1900a-1154">Текстовое представление `value` получается при вызове метода <xref:System.Int64.ToString%2A?displayProperty=nameWithType> метод.</span><span class="sxs-lookup"><span data-stu-id="1900a-1154">The text representation of `value` is produced by calling the <xref:System.Int64.ToString%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="1900a-1155">Дополнительные сведения о признак конца строки, в разделе «Примечания» <xref:System.Console.WriteLine%2A> метод, который не принимает никаких параметров.</span><span class="sxs-lookup"><span data-stu-id="1900a-1155">For more information about the line terminator, see the Remarks section of the <xref:System.Console.WriteLine%2A> method that takes no parameters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1900a-1156">В следующем примере представлен калькулятора совет, вычисляет совет 18% и использует <xref:System.Console.WriteLine%2A> метод для отображения сумму издержек, исходный объем совет и общую сумму.</span><span class="sxs-lookup"><span data-stu-id="1900a-1156">The following example is a tip calculator that calculates an 18% tip and uses the <xref:System.Console.WriteLine%2A> method to display the amount of the original charge, the amount of the tip, and the total amount.</span></span> <span data-ttu-id="1900a-1157">Пример является консольным приложением, которое пользователь должен ввести сумму исходной стоимости как параметр командной строки.</span><span class="sxs-lookup"><span data-stu-id="1900a-1157">The example is a console application that requires the user to supply the amount of the original charge as a command-line parameter.</span></span>  
  
 [!code-csharp[System.Console.WriteLine#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console.WriteLine/CS/tipcalc.cs#1)]
 [!code-vb[System.Console.WriteLine#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console.WriteLine/VB/tipcalc.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1900a-1158">Ошибка ввода/вывода.</span><span class="sxs-lookup"><span data-stu-id="1900a-1158">An I/O error occurred.</span></span></exception>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="1900a-1159">для изменения безопасных окон верхнего уровня и дочерние окна.</span><span class="sxs-lookup"><span data-stu-id="1900a-1159">for modifying safe top-level windows and subwindows.</span></span> <span data-ttu-id="1900a-1160">Связанное перечисление: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span><span class="sxs-lookup"><span data-stu-id="1900a-1160">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span></span></permission>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.Write(System.String,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.WriteLine(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLine (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="1900a-1161">Значение для записи.</span><span class="sxs-lookup"><span data-stu-id="1900a-1161">The value to write.</span></span></param>
        <summary><span data-ttu-id="1900a-1162">Записывает текстовое представление заданного объекта, за которым следует текущий признак конца строки, в стандартный выходной поток.</span><span class="sxs-lookup"><span data-stu-id="1900a-1162">Writes the text representation of the specified object, followed by the current line terminator, to the standard output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1900a-1163">Если `value` имеет значение `null`, записывается только признак конца строки.</span><span class="sxs-lookup"><span data-stu-id="1900a-1163">If `value` is `null`, only the line terminator is written.</span></span> <span data-ttu-id="1900a-1164">В противном случае `ToString` метод `value` вызывается для получения строкового представления, а результирующая строка записывается в стандартный выходной поток.</span><span class="sxs-lookup"><span data-stu-id="1900a-1164">Otherwise, the `ToString` method of `value` is called to produce its string representation, and the resulting string is written to the standard output stream.</span></span>  
  
 <span data-ttu-id="1900a-1165">Дополнительные сведения о признак конца строки, в разделе «Примечания» <xref:System.Console.WriteLine%2A> метод, который не принимает никаких параметров.</span><span class="sxs-lookup"><span data-stu-id="1900a-1165">For more information about the line terminator, see the Remarks section of the <xref:System.Console.WriteLine%2A> method that takes no parameters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1900a-1166">В следующем примере используется <xref:System.Console.WriteLine%28System.Object%29> метод для отображения каждого значения в массиве объектов на консоль.</span><span class="sxs-lookup"><span data-stu-id="1900a-1166">The following example uses the <xref:System.Console.WriteLine%28System.Object%29> method to display each value in an object array to the console.</span></span>  
  
 [!code-cpp[System.Console.WriteLine#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Console.WriteLine/CPP/writeline_obj1.cpp#3)]
 [!code-csharp[System.Console.WriteLine#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console.WriteLine/CS/writeline_obj1.cs#3)]
 [!code-vb[System.Console.WriteLine#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console.WriteLine/VB/writeline_obj1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1900a-1167">Ошибка ввода/вывода.</span><span class="sxs-lookup"><span data-stu-id="1900a-1167">An I/O error occurred.</span></span></exception>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="1900a-1168">для изменения безопасных окон верхнего уровня и дочерние окна.</span><span class="sxs-lookup"><span data-stu-id="1900a-1168">for modifying safe top-level windows and subwindows.</span></span> <span data-ttu-id="1900a-1169">Связанное перечисление: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span><span class="sxs-lookup"><span data-stu-id="1900a-1169">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span></span></permission>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.Write(System.String,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.WriteLine(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLine (value As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine(float value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="1900a-1170">Значение для записи.</span><span class="sxs-lookup"><span data-stu-id="1900a-1170">The value to write.</span></span></param>
        <summary><span data-ttu-id="1900a-1171">Записывает текстовое представление заданного значения одинарной точности с плавающей запятой, за которым следует признак конца строки, в стандартный выходной поток.</span><span class="sxs-lookup"><span data-stu-id="1900a-1171">Writes the text representation of the specified single-precision floating-point value, followed by the current line terminator, to the standard output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1900a-1172">Текстовое представление `value` получается при вызове метода <xref:System.Single.ToString%2A?displayProperty=nameWithType> метод.</span><span class="sxs-lookup"><span data-stu-id="1900a-1172">The text representation of `value` is produced by calling the <xref:System.Single.ToString%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="1900a-1173">Дополнительные сведения о признак конца строки, в разделе «Примечания» <xref:System.Console.WriteLine%2A> метод, который не принимает никаких параметров.</span><span class="sxs-lookup"><span data-stu-id="1900a-1173">For more information about the line terminator, see the Remarks section of the <xref:System.Console.WriteLine%2A> method that takes no parameters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1900a-1174">В следующем примере представлен калькулятора совет, вычисляет совет 18% и использует <xref:System.Console.WriteLine%2A> метод для отображения сумму издержек, исходный объем совет и общую сумму.</span><span class="sxs-lookup"><span data-stu-id="1900a-1174">The following example is a tip calculator that calculates an 18% tip and uses the <xref:System.Console.WriteLine%2A> method to display the amount of the original charge, the amount of the tip, and the total amount.</span></span> <span data-ttu-id="1900a-1175">Пример является консольным приложением, которое пользователь должен ввести сумму исходной стоимости как параметр командной строки.</span><span class="sxs-lookup"><span data-stu-id="1900a-1175">The example is a console application that requires the user to supply the amount of the original charge as a command-line parameter.</span></span>  
  
 [!code-csharp[System.Console.WriteLine#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console.WriteLine/CS/tipcalc.cs#1)]
 [!code-vb[System.Console.WriteLine#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console.WriteLine/VB/tipcalc.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1900a-1176">Ошибка ввода/вывода.</span><span class="sxs-lookup"><span data-stu-id="1900a-1176">An I/O error occurred.</span></span></exception>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="1900a-1177">для изменения безопасных окон верхнего уровня и дочерние окна.</span><span class="sxs-lookup"><span data-stu-id="1900a-1177">for modifying safe top-level windows and subwindows.</span></span> <span data-ttu-id="1900a-1178">Связанное перечисление: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span><span class="sxs-lookup"><span data-stu-id="1900a-1178">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span></span></permission>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.Write(System.String,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.WriteLine(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLine (value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine(System::String ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="1900a-1179">Значение для записи.</span><span class="sxs-lookup"><span data-stu-id="1900a-1179">The value to write.</span></span></param>
        <summary><span data-ttu-id="1900a-1180">Записывает заданное строковое значение, за которым следует текущий признак конца строки, в стандартный выходной поток.</span><span class="sxs-lookup"><span data-stu-id="1900a-1180">Writes the specified string value, followed by the current line terminator, to the standard output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1900a-1181">Если значение равно `null`, записывается только признак конца строки, в стандартный выходной поток.</span><span class="sxs-lookup"><span data-stu-id="1900a-1181">If value is `null`, only the line terminator is written to the standard output stream.</span></span>  
  
 <span data-ttu-id="1900a-1182">Дополнительные сведения о признак конца строки, в разделе «Примечания» <xref:System.Console.WriteLine> метод.</span><span class="sxs-lookup"><span data-stu-id="1900a-1182">For more information about the line terminator, see the Remarks section of the <xref:System.Console.WriteLine> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1900a-1183">В примере изменяется признак конца строки со значением по умолчанию «\r\n» или `vbCrLf` для «\r\n\r\n» или `vbCrLf`  +  `vbCrLf`.</span><span class="sxs-lookup"><span data-stu-id="1900a-1183">The example changes the line terminator from its default value of "\r\n" or `vbCrLf` to "\r\n\r\n" or `vbCrLf` + `vbCrLf`.</span></span> <span data-ttu-id="1900a-1184">Затем он вызывает <xref:System.Console.WriteLine> и <xref:System.Console.WriteLine%28System.String%29> методов для отображения вывода на консоль.</span><span class="sxs-lookup"><span data-stu-id="1900a-1184">It then calls the <xref:System.Console.WriteLine> and <xref:System.Console.WriteLine%28System.String%29> methods to display output to the console.</span></span>  
  
 [!code-cpp[System.Console.WriteLine#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Console.WriteLine/CPP/newline1.cpp#2)]
 [!code-csharp[System.Console.WriteLine#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console.WriteLine/CS/newline1.cs#2)]
 [!code-vb[System.Console.WriteLine#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console.WriteLine/VB/newline1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1900a-1185">Ошибка ввода/вывода.</span><span class="sxs-lookup"><span data-stu-id="1900a-1185">An I/O error occurred.</span></span></exception>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="1900a-1186">для изменения безопасных окон верхнего уровня и дочерние окна.</span><span class="sxs-lookup"><span data-stu-id="1900a-1186">for modifying safe top-level windows and subwindows.</span></span> <span data-ttu-id="1900a-1187">Связанное перечисление: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span><span class="sxs-lookup"><span data-stu-id="1900a-1187">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span></span></permission>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.Write(System.String,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine (uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.WriteLine(System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLine (value As UInteger)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine(System::UInt32 value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="1900a-1188">Значение для записи.</span><span class="sxs-lookup"><span data-stu-id="1900a-1188">The value to write.</span></span></param>
        <summary><span data-ttu-id="1900a-1189">Записывает текстовое представление заданного 32-битового целого числа без знака, за которым следует текущий признак конца строки, в стандартный выходной поток.</span><span class="sxs-lookup"><span data-stu-id="1900a-1189">Writes the text representation of the specified 32-bit unsigned integer value, followed by the current line terminator, to the standard output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1900a-1190">Текстовое представление `value` получается при вызове метода <xref:System.UInt32.ToString%2A?displayProperty=nameWithType> метод.</span><span class="sxs-lookup"><span data-stu-id="1900a-1190">The text representation of `value` is produced by calling the <xref:System.UInt32.ToString%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="1900a-1191">Дополнительные сведения о признак конца строки, в разделе «Примечания» <xref:System.Console.WriteLine%2A> метод, который не принимает никаких параметров.</span><span class="sxs-lookup"><span data-stu-id="1900a-1191">For more information about the line terminator, see the Remarks section of the <xref:System.Console.WriteLine%2A> method that takes no parameters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1900a-1192">В следующем примере представлен калькулятора совет, вычисляет совет 18% и использует <xref:System.Console.WriteLine%2A> метод для отображения сумму издержек, исходный объем совет и общую сумму.</span><span class="sxs-lookup"><span data-stu-id="1900a-1192">The following example is a tip calculator that calculates an 18% tip and uses the <xref:System.Console.WriteLine%2A> method to display the amount of the original charge, the amount of the tip, and the total amount.</span></span> <span data-ttu-id="1900a-1193">Пример является консольным приложением, которое пользователь должен ввести сумму исходной стоимости как параметр командной строки.</span><span class="sxs-lookup"><span data-stu-id="1900a-1193">The example is a console application that requires the user to supply the amount of the original charge as a command-line parameter.</span></span>  
  
 [!code-csharp[System.Console.WriteLine#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console.WriteLine/CS/tipcalc.cs#1)]
 [!code-vb[System.Console.WriteLine#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console.WriteLine/VB/tipcalc.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1900a-1194">Ошибка ввода/вывода.</span><span class="sxs-lookup"><span data-stu-id="1900a-1194">An I/O error occurred.</span></span></exception>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="1900a-1195">для изменения безопасных окон верхнего уровня и дочерние окна.</span><span class="sxs-lookup"><span data-stu-id="1900a-1195">for modifying safe top-level windows and subwindows.</span></span> <span data-ttu-id="1900a-1196">Связанное перечисление: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span><span class="sxs-lookup"><span data-stu-id="1900a-1196">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span></span></permission>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.Write(System.String,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine (ulong value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(unsigned int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.WriteLine(System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLine (value As ULong)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine(System::UInt64 value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="1900a-1197">Значение для записи.</span><span class="sxs-lookup"><span data-stu-id="1900a-1197">The value to write.</span></span></param>
        <summary><span data-ttu-id="1900a-1198">Записывает текстовое представление заданного 64-битового целого числа без знака, за которым следует текущий признак конца строки, в стандартный выходной поток.</span><span class="sxs-lookup"><span data-stu-id="1900a-1198">Writes the text representation of the specified 64-bit unsigned integer value, followed by the current line terminator, to the standard output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1900a-1199">Текстовое представление `value` получается при вызове метода <xref:System.UInt64.ToString%2A?displayProperty=nameWithType> метод.</span><span class="sxs-lookup"><span data-stu-id="1900a-1199">The text representation of `value` is produced by calling the <xref:System.UInt64.ToString%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="1900a-1200">Дополнительные сведения о признак конца строки, в разделе «Примечания» <xref:System.Console.WriteLine%2A> метод, который не принимает никаких параметров.</span><span class="sxs-lookup"><span data-stu-id="1900a-1200">For more information about the line terminator, see the Remarks section of the <xref:System.Console.WriteLine%2A> method that takes no parameters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1900a-1201">В следующем примере представлен калькулятора совет, вычисляет совет 18% и использует <xref:System.Console.WriteLine%2A> метод для отображения сумму издержек, исходный объем совет и общую сумму.</span><span class="sxs-lookup"><span data-stu-id="1900a-1201">The following example is a tip calculator that calculates an 18% tip and uses the <xref:System.Console.WriteLine%2A> method to display the amount of the original charge, the amount of the tip, and the total amount.</span></span> <span data-ttu-id="1900a-1202">Пример является консольным приложением, которое пользователь должен ввести сумму исходной стоимости как параметр командной строки.</span><span class="sxs-lookup"><span data-stu-id="1900a-1202">The example is a console application that requires the user to supply the amount of the original charge as a command-line parameter.</span></span>  
  
 [!code-csharp[System.Console.WriteLine#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console.WriteLine/CS/tipcalc.cs#1)]
 [!code-vb[System.Console.WriteLine#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console.WriteLine/VB/tipcalc.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1900a-1203">Ошибка ввода/вывода.</span><span class="sxs-lookup"><span data-stu-id="1900a-1203">An I/O error occurred.</span></span></exception>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="1900a-1204">для изменения безопасных окон верхнего уровня и дочерние окна.</span><span class="sxs-lookup"><span data-stu-id="1900a-1204">for modifying safe top-level windows and subwindows.</span></span> <span data-ttu-id="1900a-1205">Связанное перечисление: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span><span class="sxs-lookup"><span data-stu-id="1900a-1205">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span></span></permission>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.Write(System.String,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine (string format, object arg0);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(string format, object arg0) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.WriteLine(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLine (format As String, arg0 As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine(System::String ^ format, System::Object ^ arg0);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="arg0" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="1900a-1206">Строка составного формата.</span><span class="sxs-lookup"><span data-stu-id="1900a-1206">A composite format string.</span></span></param>
        <param name="arg0"><span data-ttu-id="1900a-1207">Объект для записи с использованием <c>format</c>.</span><span class="sxs-lookup"><span data-stu-id="1900a-1207">An object to write using <c>format</c>.</span></span></param>
        <summary><span data-ttu-id="1900a-1208">Записывает текстовое представление заданного объекта, за которым следует текущий признак конца строки, в стандартный выходной поток с использованием заданных сведений о форматировании.</span><span class="sxs-lookup"><span data-stu-id="1900a-1208">Writes the text representation of the specified object, followed by the current line terminator, to the standard output stream using the specified format information.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1900a-1209">Этот метод использует [составное форматирование](~/docs/standard/base-types/composite-formatting.md) платформы .NET Framework, чтобы преобразовать значение объекта в его текстовое представление и встроить это представление в строку.</span><span class="sxs-lookup"><span data-stu-id="1900a-1209">This method uses the [composite formatting feature](~/docs/standard/base-types/composite-formatting.md) of the .NET Framework to convert the value of an object to its text representation and embed that representation in a string.</span></span> <span data-ttu-id="1900a-1210">Результирующая строка записывается в поток вывода.</span><span class="sxs-lookup"><span data-stu-id="1900a-1210">The resulting string is written to the output stream.</span></span>  
  
 <span data-ttu-id="1900a-1211">`format` Параметр состоит из нуля или больше текста, перемежаемых ноль или более индексированные местозаполнители, называются элементами форматирования, которые соответствуют объекту в списке параметров данного метода.</span><span class="sxs-lookup"><span data-stu-id="1900a-1211">The `format` parameter consists of zero or more runs of text intermixed with zero or more indexed placeholders, called format items, that correspond to an object in the parameter list of this method.</span></span> <span data-ttu-id="1900a-1212">В процессе форматирования каждый элемент формата заменяется текстовое представление значения соответствующего объекта.</span><span class="sxs-lookup"><span data-stu-id="1900a-1212">The formatting process replaces each format item with the text representation of the value of the corresponding object.</span></span>  
  
 <span data-ttu-id="1900a-1213">Синтаксис элементов форматирования `{` *индекс*[`,`*выравнивание*] [`:`*formatString*]`}`, который указывает Обязательный индекса, необязательно длину и выравнивание форматированного текста и необязательная строка символов описателя формата, определяющих способ форматирования значения соответствующего объекта.</span><span class="sxs-lookup"><span data-stu-id="1900a-1213">The syntax of a format item is `{`*index*[`,`*alignment*][`:`*formatString*]`}`, which specifies a mandatory index, the optional length and alignment of the formatted text, and an optional string of format specifier characters that govern how the value of the corresponding object is formatted.</span></span>  
  
 <span data-ttu-id="1900a-1214">Платформа .NET Framework предоставляет широкую поддержку форматирования, который описан более подробно в следующих разделах о форматировании.</span><span class="sxs-lookup"><span data-stu-id="1900a-1214">The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics.</span></span>  
  
-   <span data-ttu-id="1900a-1215">Дополнительные сведения о составного форматирования, поддерживаемые методами, такими как <xref:System.String.Format%2A>, <xref:System.Text.StringBuilder.AppendFormat%2A>и некоторые перегрузки <xref:System.Console.WriteLine%2A>, в разделе [составное форматирование](~/docs/standard/base-types/composite-formatting.md).</span><span class="sxs-lookup"><span data-stu-id="1900a-1215">For more information about the composite formatting feature supported by methods such as <xref:System.String.Format%2A>, <xref:System.Text.StringBuilder.AppendFormat%2A>, and some overloads of <xref:System.Console.WriteLine%2A>, see [Composite Formatting](~/docs/standard/base-types/composite-formatting.md).</span></span>  
  
-   <span data-ttu-id="1900a-1216">Дополнительные сведения об описателях числового формата см. в разделе [строки стандартного числового формата](~/docs/standard/base-types/standard-numeric-format-strings.md) и [строки настраиваемых числовых форматов](~/docs/standard/base-types/custom-numeric-format-strings.md).</span><span class="sxs-lookup"><span data-stu-id="1900a-1216">For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
-   <span data-ttu-id="1900a-1217">Дополнительные сведения о дате и времени описатели формата см. в разделе [стандартной строки даты и времени формат](~/docs/standard/base-types/standard-date-and-time-format-strings.md) и [пользовательских строк даты и времени формат](~/docs/standard/base-types/custom-date-and-time-format-strings.md).</span><span class="sxs-lookup"><span data-stu-id="1900a-1217">For more information about date and time format specifiers, see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) and [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md).</span></span>  
  
-   <span data-ttu-id="1900a-1218">Дополнительные сведения об описателях форматов перечисления см. в разделе [строки форматов перечисления](~/docs/standard/base-types/enumeration-format-strings.md).</span><span class="sxs-lookup"><span data-stu-id="1900a-1218">For more information about enumeration format specifiers, see [Enumeration Format Strings](~/docs/standard/base-types/enumeration-format-strings.md).</span></span>  
  
-   <span data-ttu-id="1900a-1219">Дополнительные сведения о форматировании см. в разделе [типы форматирования](~/docs/standard/base-types/formatting-types.md).</span><span class="sxs-lookup"><span data-stu-id="1900a-1219">For more information about formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
 <span data-ttu-id="1900a-1220">Дополнительные сведения о признак конца строки, в разделе «Примечания» <xref:System.Console.WriteLine%2A> метод, который не принимает никаких параметров.</span><span class="sxs-lookup"><span data-stu-id="1900a-1220">For more information about the line terminator, see the Remarks section of the <xref:System.Console.WriteLine%2A> method that takes no parameters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1900a-1221">В следующем примере вызывается <xref:System.Console.WriteLine%28System.String%2CSystem.Object%29> метод для отображения пяти формируется случайным образом <xref:System.Boolean> значения.</span><span class="sxs-lookup"><span data-stu-id="1900a-1221">The following example calls the <xref:System.Console.WriteLine%28System.String%2CSystem.Object%29> method to display five randomly generated <xref:System.Boolean> values.</span></span>  
  
 [!code-csharp[System.Console.WriteLine#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console.WriteLine/CS/WriteLine6.cs#6)]
 [!code-vb[System.Console.WriteLine#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console.WriteLine/VB/WriteLine6.vb#6)]  
  
 <span data-ttu-id="1900a-1222">В следующем примере вызывается <xref:System.Console.WriteLine%28System.String%2CSystem.Object%29> метод для отображения текущей даты.</span><span class="sxs-lookup"><span data-stu-id="1900a-1222">The following example calls the <xref:System.Console.WriteLine%28System.String%2CSystem.Object%29> method to display the current date.</span></span>   <span data-ttu-id="1900a-1223">Обратите внимание, что формат элементов в `format` «D» использует аргумент [стандартных форматов даты и времени строка](~/docs/standard/base-types/standard-date-and-time-format-strings.md) для отображения даты в длинном формате даты текущего языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="1900a-1223">Note that the format item in the `format` argument uses the "D" [standard date and time format string](~/docs/standard/base-types/standard-date-and-time-format-strings.md) to display the date in the long date format of the current culture.</span></span>  
  
 [!code-csharp[System.Console.WriteLine#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console.WriteLine/CS/WriteLine7.cs#7)]
 [!code-vb[System.Console.WriteLine#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console.WriteLine/VB/WriteLine7.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1900a-1224">Ошибка ввода/вывода.</span><span class="sxs-lookup"><span data-stu-id="1900a-1224">An I/O error occurred.</span></span></exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1900a-1225">Свойство <paramref name="format" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="1900a-1225"><paramref name="format" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="1900a-1226">Недопустимая спецификация формата в <paramref name="format" />.</span><span class="sxs-lookup"><span data-stu-id="1900a-1226">The format specification in <paramref name="format" /> is invalid.</span></span></exception>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="1900a-1227">для изменения безопасных окон верхнего уровня и дочерние окна.</span><span class="sxs-lookup"><span data-stu-id="1900a-1227">for modifying safe top-level windows and subwindows.</span></span> <span data-ttu-id="1900a-1228">Связанное перечисление: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span><span class="sxs-lookup"><span data-stu-id="1900a-1228">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span></span></permission>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.Write(System.String,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine (string format, params object[] arg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(string format, object[] arg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.WriteLine(System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLine (format As String, ParamArray arg As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine(System::String ^ format, ... cli::array &lt;System::Object ^&gt; ^ arg);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="arg" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="1900a-1229">Строка составного формата.</span><span class="sxs-lookup"><span data-stu-id="1900a-1229">A composite format string.</span></span></param>
        <param name="arg"><span data-ttu-id="1900a-1230">Массив объектов для записи с использованием <c>format</c>.</span><span class="sxs-lookup"><span data-stu-id="1900a-1230">An array of objects to write using <c>format</c>.</span></span></param>
        <summary><span data-ttu-id="1900a-1231">Записывает текстовые представления заданного массива объектов, за которым следует текущий признак конца строки, в стандартный выходной поток с использованием заданных сведений о форматировании.</span><span class="sxs-lookup"><span data-stu-id="1900a-1231">Writes the text representation of the specified array of objects, followed by the current line terminator, to the standard output stream using the specified format information.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1900a-1232">Этот метод использует [составное форматирование](~/docs/standard/base-types/composite-formatting.md) платформы .NET Framework, чтобы преобразовать значение объекта в его текстовое представление и встроить это представление в строку.</span><span class="sxs-lookup"><span data-stu-id="1900a-1232">This method uses the  [composite formatting feature](~/docs/standard/base-types/composite-formatting.md) of the .NET Framework to convert the value of an object to its text representation and embed that representation in a string.</span></span> <span data-ttu-id="1900a-1233">Результирующая строка записывается в поток вывода.</span><span class="sxs-lookup"><span data-stu-id="1900a-1233">The resulting string is written to the output stream.</span></span>  
  
 <span data-ttu-id="1900a-1234">`format` Параметр состоит из нуля или больше текста, перемежаемых ноль или более индексированные местозаполнители, называются элементами форматирования, которые соответствуют объекту в списке параметров данного метода.</span><span class="sxs-lookup"><span data-stu-id="1900a-1234">The `format` parameter consists of zero or more runs of text intermixed with zero or more indexed placeholders, called format items, that correspond to an object in the parameter list of this method.</span></span> <span data-ttu-id="1900a-1235">В процессе форматирования каждый элемент формата заменяется текстовое представление значения соответствующего объекта.</span><span class="sxs-lookup"><span data-stu-id="1900a-1235">The formatting process replaces each format item with the text representation of the value of the corresponding object.</span></span>  
  
 <span data-ttu-id="1900a-1236">Синтаксис элементов форматирования `{` *индекс*[`,`*выравнивание*] [`:`*formatString*]`}`, который указывает Обязательный индекса, необязательно длину и выравнивание форматированного текста и необязательная строка символов описателя формата, определяющих способ форматирования значения соответствующего объекта.</span><span class="sxs-lookup"><span data-stu-id="1900a-1236">The syntax of a format item is `{`*index*[`,`*alignment*][`:`*formatString*]`}`, which specifies a mandatory index, the optional length and alignment of the formatted text, and an optional string of format specifier characters that govern how the value of the corresponding object is formatted.</span></span>  
  
 <span data-ttu-id="1900a-1237">Платформа .NET Framework предоставляет широкую поддержку форматирования, который описан более подробно в следующих разделах о форматировании.</span><span class="sxs-lookup"><span data-stu-id="1900a-1237">The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics.</span></span>  
  
-   <span data-ttu-id="1900a-1238">Дополнительные сведения о составного форматирования, поддерживаемые методами, такими как <xref:System.String.Format%2A>, <xref:System.Text.StringBuilder.AppendFormat%2A>и некоторые перегрузки <xref:System.Console.WriteLine%2A>, в разделе [составное форматирование](~/docs/standard/base-types/composite-formatting.md).</span><span class="sxs-lookup"><span data-stu-id="1900a-1238">For more information about the composite formatting feature supported by methods such as <xref:System.String.Format%2A>, <xref:System.Text.StringBuilder.AppendFormat%2A>, and some overloads of <xref:System.Console.WriteLine%2A>, see [Composite Formatting](~/docs/standard/base-types/composite-formatting.md).</span></span>  
  
-   <span data-ttu-id="1900a-1239">Дополнительные сведения об описателях числового формата см. в разделе [строки стандартного числового формата](~/docs/standard/base-types/standard-numeric-format-strings.md) и [строки настраиваемых числовых форматов](~/docs/standard/base-types/custom-numeric-format-strings.md).</span><span class="sxs-lookup"><span data-stu-id="1900a-1239">For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
-   <span data-ttu-id="1900a-1240">Дополнительные сведения о дате и времени описатели формата см. в разделе [стандартной строки даты и времени формат](~/docs/standard/base-types/standard-date-and-time-format-strings.md) и [пользовательских строк даты и времени формат](~/docs/standard/base-types/custom-date-and-time-format-strings.md).</span><span class="sxs-lookup"><span data-stu-id="1900a-1240">For more information about date and time format specifiers, see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) and [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md).</span></span>  
  
-   <span data-ttu-id="1900a-1241">Дополнительные сведения об описателях форматов перечисления см. в разделе [строки форматов перечисления](~/docs/standard/base-types/enumeration-format-strings.md).</span><span class="sxs-lookup"><span data-stu-id="1900a-1241">For more information about enumeration format specifiers, see [Enumeration Format Strings](~/docs/standard/base-types/enumeration-format-strings.md).</span></span>  
  
-   <span data-ttu-id="1900a-1242">Дополнительные сведения о форматировании см. в разделе [типы форматирования](~/docs/standard/base-types/formatting-types.md).</span><span class="sxs-lookup"><span data-stu-id="1900a-1242">For more information about formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
 <span data-ttu-id="1900a-1243">Дополнительные сведения о признак конца строки, в разделе «Примечания» <xref:System.Console.WriteLine%2A> метод, который не принимает никаких параметров.</span><span class="sxs-lookup"><span data-stu-id="1900a-1243">For more information about the line terminator, see the Remarks section of the <xref:System.Console.WriteLine%2A> method that takes no parameters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1900a-1244">В следующем примере демонстрируются стандартные описатели форматирования чисел, дат и значений перечислимых типов.</span><span class="sxs-lookup"><span data-stu-id="1900a-1244">The following example demonstrates the standard formatting specifiers for numbers, dates, and enumerations.</span></span>  
  
 [!code-cpp[console.writelineFmt1#1](~/samples/snippets/cpp/VS_Snippets_CLR/console.writelineFmt1/cpp/wl.cpp#1)] 
 [!code-csharp[console.writelineFmt1#1](~/samples/snippets/csharp/VS_Snippets_CLR/console.writelineFmt1/cs/wl.cs#1)]
 [!code-vb[console.writelineFmt1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/console.writelineFmt1/vb/wl.vb#1)]  
  
 <span data-ttu-id="1900a-1245">В следующем примере представлен калькулятора совет, вычисляет совет 18% и использует <xref:System.Console.WriteLine%2A> метод для отображения сумму издержек, исходный объем совет и общую сумму.</span><span class="sxs-lookup"><span data-stu-id="1900a-1245">The following example is a tip calculator that calculates an 18% tip and uses the <xref:System.Console.WriteLine%2A> method to display the amount of the original charge, the amount of the tip, and the total amount.</span></span> <span data-ttu-id="1900a-1246">Пример является консольным приложением, которое пользователь должен ввести сумму исходной стоимости как параметр командной строки.</span><span class="sxs-lookup"><span data-stu-id="1900a-1246">The example is a console application that requires the user to supply the amount of the original charge as a command-line parameter.</span></span>  
  
 [!code-csharp[System.Console.WriteLine#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console.WriteLine/CS/tipcalc.cs#1)]
 [!code-vb[System.Console.WriteLine#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console.WriteLine/VB/tipcalc.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1900a-1247">Ошибка ввода/вывода.</span><span class="sxs-lookup"><span data-stu-id="1900a-1247">An I/O error occurred.</span></span></exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1900a-1248">Параметр <paramref name="format" /> или <paramref name="arg" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="1900a-1248"><paramref name="format" /> or <paramref name="arg" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="1900a-1249">Недопустимая спецификация формата в <paramref name="format" />.</span><span class="sxs-lookup"><span data-stu-id="1900a-1249">The format specification in <paramref name="format" /> is invalid.</span></span></exception>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="1900a-1250">для изменения безопасных окон верхнего уровня и дочерние окна.</span><span class="sxs-lookup"><span data-stu-id="1900a-1250">for modifying safe top-level windows and subwindows.</span></span> <span data-ttu-id="1900a-1251">Связанное перечисление: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span><span class="sxs-lookup"><span data-stu-id="1900a-1251">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span></span></permission>
        <block subset="none" type="usage">
          <para><span data-ttu-id="1900a-1252">Этот метод не вызывается кодом C++.</span><span class="sxs-lookup"><span data-stu-id="1900a-1252">This method is not called by C++ code.</span></span> <span data-ttu-id="1900a-1253">Компилятор C++ разрешает вызовы к [System.Console.WriteLine](xref:System.Console.WriteLine*) включать строки и список четырьмя или более параметров объекта как вызов <see cref="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object,System.Object)" />.</span><span class="sxs-lookup"><span data-stu-id="1900a-1253">The C++ compiler resolves calls to [System.Console.WriteLine](xref:System.Console.WriteLine*) that include a string and a list of four or more object parameters as a call to <see cref="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object,System.Object)" />.</span></span> <span data-ttu-id="1900a-1254">Он разрешает вызовы к [System.Console.WriteLine](xref:System.Console.WriteLine*) строки и массив объектов, содержащих как вызов <see cref="M:System.Console.WriteLine(System.String,System.Object)" />.</span><span class="sxs-lookup"><span data-stu-id="1900a-1254">It resolves calls to [System.Console.WriteLine](xref:System.Console.WriteLine*) that include a string and an object array as a call to <see cref="M:System.Console.WriteLine(System.String,System.Object)" />.</span></span></para>
        </block>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.Write(System.String,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.WriteLine(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLine (buffer As Char(), index As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="1900a-1255">Массив знаков Юникода.</span><span class="sxs-lookup"><span data-stu-id="1900a-1255">An array of Unicode characters.</span></span></param>
        <param name="index"><span data-ttu-id="1900a-1256">Начальная позиция в массиве <c>buffer</c>.</span><span class="sxs-lookup"><span data-stu-id="1900a-1256">The starting position in <c>buffer</c>.</span></span></param>
        <param name="count"><span data-ttu-id="1900a-1257">Количество символов для записи.</span><span class="sxs-lookup"><span data-stu-id="1900a-1257">The number of characters to write.</span></span></param>
        <summary><span data-ttu-id="1900a-1258">Записывает заданный подмассив знаков Юникода, за которым следует текущий признак конца строки, в стандартный выходной поток.</span><span class="sxs-lookup"><span data-stu-id="1900a-1258">Writes the specified subarray of Unicode characters, followed by the current line terminator, to the standard output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1900a-1259">Этот метод записывает `count` символов, начиная с позиции `index` из `buffer` в стандартный выходной поток.</span><span class="sxs-lookup"><span data-stu-id="1900a-1259">This method writes `count` characters starting at position `index` of `buffer` to the standard output stream.</span></span>  
  
 <span data-ttu-id="1900a-1260">Дополнительные сведения о признак конца строки, в разделе «Примечания» <xref:System.Console.WriteLine%2A> метод, который не принимает никаких параметров.</span><span class="sxs-lookup"><span data-stu-id="1900a-1260">For more information about the line terminator, see the Remarks section of the <xref:System.Console.WriteLine%2A> method that takes no parameters.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1900a-1261">Свойство <paramref name="buffer" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="1900a-1261"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="1900a-1262">Значение параметра <paramref name="index" /> или <paramref name="count" /> меньше нуля.</span><span class="sxs-lookup"><span data-stu-id="1900a-1262"><paramref name="index" /> or <paramref name="count" /> is less than zero.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1900a-1263">Сумма <paramref name="index" /> и <paramref name="count" /> указывает позицию, которая не находится в <paramref name="buffer" />.</span><span class="sxs-lookup"><span data-stu-id="1900a-1263"><paramref name="index" /> plus <paramref name="count" /> specify a position that is not within <paramref name="buffer" />.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1900a-1264">Ошибка ввода/вывода.</span><span class="sxs-lookup"><span data-stu-id="1900a-1264">An I/O error occurred.</span></span></exception>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="1900a-1265">для изменения безопасных окон верхнего уровня и дочерние окна.</span><span class="sxs-lookup"><span data-stu-id="1900a-1265">for modifying safe top-level windows and subwindows.</span></span> <span data-ttu-id="1900a-1266">Связанное перечисление: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span><span class="sxs-lookup"><span data-stu-id="1900a-1266">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span></span></permission>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.Write(System.String,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine (string format, object arg0, object arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(string format, object arg0, object arg1) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.WriteLine(System.String,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLine (format As String, arg0 As Object, arg1 As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine(System::String ^ format, System::Object ^ arg0, System::Object ^ arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="arg0" Type="System.Object" />
        <Parameter Name="arg1" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="1900a-1267">Строка составного формата.</span><span class="sxs-lookup"><span data-stu-id="1900a-1267">A composite format string.</span></span></param>
        <param name="arg0"><span data-ttu-id="1900a-1268">Первый объект для записи с использованием <c>format</c>.</span><span class="sxs-lookup"><span data-stu-id="1900a-1268">The first object to write using <c>format</c>.</span></span></param>
        <param name="arg1"><span data-ttu-id="1900a-1269">Второй объект для записи с использованием <c>format</c>.</span><span class="sxs-lookup"><span data-stu-id="1900a-1269">The second object to write using <c>format</c>.</span></span></param>
        <summary><span data-ttu-id="1900a-1270">Записывает текстовые представления заданных объектов, за которыми следует текущий признак конца строки, в стандартный выходной поток с использованием заданных сведений о форматировании.</span><span class="sxs-lookup"><span data-stu-id="1900a-1270">Writes the text representation of the specified objects, followed by the current line terminator, to the standard output stream using the specified format information.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1900a-1271">Этот метод использует [составное форматирование](~/docs/standard/base-types/composite-formatting.md) платформы .NET Framework, чтобы преобразовать значение объекта в его текстовое представление и встроить это представление в строку.</span><span class="sxs-lookup"><span data-stu-id="1900a-1271">This method uses the [composite formatting feature](~/docs/standard/base-types/composite-formatting.md) of the .NET Framework to convert the value of an object to its text representation and embed that representation in a string.</span></span> <span data-ttu-id="1900a-1272">Результирующая строка записывается в поток вывода.</span><span class="sxs-lookup"><span data-stu-id="1900a-1272">The resulting string is written to the output stream.</span></span>  
  
 <span data-ttu-id="1900a-1273">`format` Параметр состоит из нуля или больше текста, перемежаемых ноль или более индексированные местозаполнители, называются элементами форматирования, которые соответствуют объекту в списке параметров данного метода.</span><span class="sxs-lookup"><span data-stu-id="1900a-1273">The `format` parameter consists of zero or more runs of text intermixed with zero or more indexed placeholders, called format items, that correspond to an object in the parameter list of this method.</span></span> <span data-ttu-id="1900a-1274">В процессе форматирования каждый элемент формата заменяется текстовое представление значения соответствующего объекта.</span><span class="sxs-lookup"><span data-stu-id="1900a-1274">The formatting process replaces each format item with the text representation of the value of the corresponding object.</span></span>  
  
 <span data-ttu-id="1900a-1275">Синтаксис элементов форматирования `{` *индекс*[`,`*выравнивание*] [`:`*formatString*]`}`, который указывает Обязательный индекса, необязательно длину и выравнивание форматированного текста и необязательная строка символов описателя формата, определяющих способ форматирования значения соответствующего объекта.</span><span class="sxs-lookup"><span data-stu-id="1900a-1275">The syntax of a format item is `{`*index*[`,`*alignment*][`:`*formatString*]`}`, which specifies a mandatory index, the optional length and alignment of the formatted text, and an optional string of format specifier characters that govern how the value of the corresponding object is formatted.</span></span>  
  
 <span data-ttu-id="1900a-1276">Платформа .NET Framework предоставляет широкую поддержку форматирования, который описан более подробно в следующих разделах о форматировании.</span><span class="sxs-lookup"><span data-stu-id="1900a-1276">The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics.</span></span>  
  
-   <span data-ttu-id="1900a-1277">Дополнительные сведения о составного форматирования, поддерживаемые методами, такими как <xref:System.String.Format%2A>, <xref:System.Text.StringBuilder.AppendFormat%2A>и некоторые перегрузки <xref:System.Console.WriteLine%2A>, в разделе [составное форматирование](~/docs/standard/base-types/composite-formatting.md).</span><span class="sxs-lookup"><span data-stu-id="1900a-1277">For more information about the composite formatting feature supported by methods such as <xref:System.String.Format%2A>, <xref:System.Text.StringBuilder.AppendFormat%2A>, and some overloads of <xref:System.Console.WriteLine%2A>, see [Composite Formatting](~/docs/standard/base-types/composite-formatting.md).</span></span>  
  
-   <span data-ttu-id="1900a-1278">Дополнительные сведения об описателях числового формата см. в разделе [строки стандартного числового формата](~/docs/standard/base-types/standard-numeric-format-strings.md) и [строки настраиваемых числовых форматов](~/docs/standard/base-types/custom-numeric-format-strings.md).</span><span class="sxs-lookup"><span data-stu-id="1900a-1278">For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
-   <span data-ttu-id="1900a-1279">Дополнительные сведения о дате и времени описатели формата см. в разделе [стандартной строки даты и времени формат](~/docs/standard/base-types/standard-date-and-time-format-strings.md) и [пользовательских строк даты и времени формат](~/docs/standard/base-types/custom-date-and-time-format-strings.md).</span><span class="sxs-lookup"><span data-stu-id="1900a-1279">For more information about date and time format specifiers, see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) and [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md).</span></span>  
  
-   <span data-ttu-id="1900a-1280">Дополнительные сведения об описателях форматов перечисления см. в разделе [строки форматов перечисления](~/docs/standard/base-types/enumeration-format-strings.md).</span><span class="sxs-lookup"><span data-stu-id="1900a-1280">For more information about enumeration format specifiers, see [Enumeration Format Strings](~/docs/standard/base-types/enumeration-format-strings.md).</span></span>  
  
-   <span data-ttu-id="1900a-1281">Дополнительные сведения о форматировании см. в разделе [типы форматирования](~/docs/standard/base-types/formatting-types.md).</span><span class="sxs-lookup"><span data-stu-id="1900a-1281">For more information about formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
 <span data-ttu-id="1900a-1282">Дополнительные сведения о признак конца строки, в разделе «Примечания» <xref:System.Console.WriteLine%2A> метод, который не принимает никаких параметров.</span><span class="sxs-lookup"><span data-stu-id="1900a-1282">For more information about the line terminator, see the Remarks section of the <xref:System.Console.WriteLine%2A> method that takes no parameters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1900a-1283">В следующем примере демонстрируются стандартные описатели форматирования чисел, дат и значений перечислимых типов.</span><span class="sxs-lookup"><span data-stu-id="1900a-1283">The following example demonstrates the standard formatting specifiers for numbers, dates, and enumerations.</span></span>  
  
 [!code-cpp[console.writelineFmt1#1](~/samples/snippets/cpp/VS_Snippets_CLR/console.writelineFmt1/cpp/wl.cpp#1)] 
 [!code-csharp[console.writelineFmt1#1](~/samples/snippets/csharp/VS_Snippets_CLR/console.writelineFmt1/cs/wl.cs#1)]
 [!code-vb[console.writelineFmt1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/console.writelineFmt1/vb/wl.vb#1)]  
  
 <span data-ttu-id="1900a-1284">В следующем примере представлен калькулятора совет, вычисляет совет 18% и использует <xref:System.Console.WriteLine%2A> метод для отображения сумму издержек, исходный объем совет и общую сумму.</span><span class="sxs-lookup"><span data-stu-id="1900a-1284">The following example is a tip calculator that calculates an 18% tip and uses the <xref:System.Console.WriteLine%2A> method to display the amount of the original charge, the amount of the tip, and the total amount.</span></span> <span data-ttu-id="1900a-1285">Пример является консольным приложением, которое пользователь должен ввести сумму исходной стоимости как параметр командной строки.</span><span class="sxs-lookup"><span data-stu-id="1900a-1285">The example is a console application that requires the user to supply the amount of the original charge as a command-line parameter.</span></span>  
  
 [!code-csharp[System.Console.WriteLine#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console.WriteLine/CS/tipcalc.cs#1)]
 [!code-vb[System.Console.WriteLine#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console.WriteLine/VB/tipcalc.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1900a-1286">Ошибка ввода/вывода.</span><span class="sxs-lookup"><span data-stu-id="1900a-1286">An I/O error occurred.</span></span></exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1900a-1287">Свойство <paramref name="format" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="1900a-1287"><paramref name="format" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="1900a-1288">Недопустимая спецификация формата в <paramref name="format" />.</span><span class="sxs-lookup"><span data-stu-id="1900a-1288">The format specification in <paramref name="format" /> is invalid.</span></span></exception>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="1900a-1289">для изменения безопасных окон верхнего уровня и дочерние окна.</span><span class="sxs-lookup"><span data-stu-id="1900a-1289">for modifying safe top-level windows and subwindows.</span></span> <span data-ttu-id="1900a-1290">Связанное перечисление: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span><span class="sxs-lookup"><span data-stu-id="1900a-1290">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span></span></permission>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.Write(System.String,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine (string format, object arg0, object arg1, object arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(string format, object arg0, object arg1, object arg2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLine (format As String, arg0 As Object, arg1 As Object, arg2 As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine(System::String ^ format, System::Object ^ arg0, System::Object ^ arg1, System::Object ^ arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="arg0" Type="System.Object" />
        <Parameter Name="arg1" Type="System.Object" />
        <Parameter Name="arg2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="1900a-1291">Строка составного формата.</span><span class="sxs-lookup"><span data-stu-id="1900a-1291">A composite format string.</span></span></param>
        <param name="arg0"><span data-ttu-id="1900a-1292">Первый объект для записи с использованием <c>format</c>.</span><span class="sxs-lookup"><span data-stu-id="1900a-1292">The first object to write using <c>format</c>.</span></span></param>
        <param name="arg1"><span data-ttu-id="1900a-1293">Второй объект для записи с использованием <c>format</c>.</span><span class="sxs-lookup"><span data-stu-id="1900a-1293">The second object to write using <c>format</c>.</span></span></param>
        <param name="arg2"><span data-ttu-id="1900a-1294">Третий объект для записи с использованием <c>format</c>.</span><span class="sxs-lookup"><span data-stu-id="1900a-1294">The third object to write using <c>format</c>.</span></span></param>
        <summary><span data-ttu-id="1900a-1295">Записывает текстовые представления заданных объектов, за которыми следует текущий признак конца строки, в стандартный выходной поток с использованием заданных сведений о форматировании.</span><span class="sxs-lookup"><span data-stu-id="1900a-1295">Writes the text representation of the specified objects, followed by the current line terminator, to the standard output stream using the specified format information.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1900a-1296">Этот метод использует [составное форматирование](~/docs/standard/base-types/composite-formatting.md) платформы .NET Framework, чтобы преобразовать значение объекта в его текстовое представление и встроить это представление в строку.</span><span class="sxs-lookup"><span data-stu-id="1900a-1296">This method uses the [composite formatting feature](~/docs/standard/base-types/composite-formatting.md) of the .NET Framework to convert the value of an object to its text representation and embed that representation in a string.</span></span> <span data-ttu-id="1900a-1297">Результирующая строка записывается в поток вывода.</span><span class="sxs-lookup"><span data-stu-id="1900a-1297">The resulting string is written to the output stream.</span></span>  
  
 <span data-ttu-id="1900a-1298">`format` Параметр состоит из нуля или больше текста, перемежаемых ноль или более индексированные местозаполнители, называются элементами форматирования, которые соответствуют объекту в списке параметров данного метода.</span><span class="sxs-lookup"><span data-stu-id="1900a-1298">The `format` parameter consists of zero or more runs of text intermixed with zero or more indexed placeholders, called format items, that correspond to an object in the parameter list of this method.</span></span> <span data-ttu-id="1900a-1299">В процессе форматирования каждый элемент формата заменяется текстовое представление значения соответствующего объекта.</span><span class="sxs-lookup"><span data-stu-id="1900a-1299">The formatting process replaces each format item with the text representation of the value of the corresponding object.</span></span>  
  
 <span data-ttu-id="1900a-1300">Синтаксис элементов форматирования `{` *индекс*[`,`*выравнивание*] [`:`*formatString*]`}`, который указывает Обязательный индекса, необязательно длину и выравнивание форматированного текста и необязательная строка символов описателя формата, определяющих способ форматирования значения соответствующего объекта.</span><span class="sxs-lookup"><span data-stu-id="1900a-1300">The syntax of a format item is `{`*index*[`,`*alignment*][`:`*formatString*]`}`, which specifies a mandatory index, the optional length and alignment of the formatted text, and an optional string of format specifier characters that govern how the value of the corresponding object is formatted.</span></span>  
  
 <span data-ttu-id="1900a-1301">Платформа .NET Framework предоставляет широкую поддержку форматирования, который описан более подробно в следующих разделах о форматировании.</span><span class="sxs-lookup"><span data-stu-id="1900a-1301">The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics.</span></span>  
  
-   <span data-ttu-id="1900a-1302">Дополнительные сведения о составного форматирования, поддерживаемые методами, такими как <xref:System.String.Format%2A>, <xref:System.Text.StringBuilder.AppendFormat%2A>и некоторые перегрузки <xref:System.Console.WriteLine%2A>, в разделе [составное форматирование](~/docs/standard/base-types/composite-formatting.md).</span><span class="sxs-lookup"><span data-stu-id="1900a-1302">For more information about the composite formatting feature supported by methods such as <xref:System.String.Format%2A>, <xref:System.Text.StringBuilder.AppendFormat%2A>, and some overloads of <xref:System.Console.WriteLine%2A>, see [Composite Formatting](~/docs/standard/base-types/composite-formatting.md).</span></span>  
  
-   <span data-ttu-id="1900a-1303">Дополнительные сведения об описателях числового формата см. в разделе [строки стандартного числового формата](~/docs/standard/base-types/standard-numeric-format-strings.md) и [строки настраиваемых числовых форматов](~/docs/standard/base-types/custom-numeric-format-strings.md).</span><span class="sxs-lookup"><span data-stu-id="1900a-1303">For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
-   <span data-ttu-id="1900a-1304">Дополнительные сведения о дате и времени описатели формата см. в разделе [стандартной строки даты и времени формат](~/docs/standard/base-types/standard-date-and-time-format-strings.md) и [пользовательских строк даты и времени формат](~/docs/standard/base-types/custom-date-and-time-format-strings.md).</span><span class="sxs-lookup"><span data-stu-id="1900a-1304">For more information about date and time format specifiers, see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) and [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md).</span></span>  
  
-   <span data-ttu-id="1900a-1305">Дополнительные сведения об описателях форматов перечисления см. в разделе [строки форматов перечисления](~/docs/standard/base-types/enumeration-format-strings.md).</span><span class="sxs-lookup"><span data-stu-id="1900a-1305">For more information about enumeration format specifiers, see [Enumeration Format Strings](~/docs/standard/base-types/enumeration-format-strings.md).</span></span>  
  
-   <span data-ttu-id="1900a-1306">Дополнительные сведения о форматировании см. в разделе [типы форматирования](~/docs/standard/base-types/formatting-types.md).</span><span class="sxs-lookup"><span data-stu-id="1900a-1306">For more information about formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
 <span data-ttu-id="1900a-1307">Дополнительные сведения о признак конца строки, в разделе «Примечания» <xref:System.Console.WriteLine%2A> метод, который не принимает никаких параметров.</span><span class="sxs-lookup"><span data-stu-id="1900a-1307">For more information about the line terminator, see the Remarks section of the <xref:System.Console.WriteLine%2A> method that takes no parameters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1900a-1308">В следующем примере демонстрируются стандартные описатели форматирования чисел, дат и значений перечислимых типов.</span><span class="sxs-lookup"><span data-stu-id="1900a-1308">The following example demonstrates the standard formatting specifiers for numbers, dates, and enumerations.</span></span>  
  
 [!code-cpp[console.writelineFmt1#1](~/samples/snippets/cpp/VS_Snippets_CLR/console.writelineFmt1/cpp/wl.cpp#1)] 
 [!code-csharp[console.writelineFmt1#1](~/samples/snippets/csharp/VS_Snippets_CLR/console.writelineFmt1/cs/wl.cs#1)]
 [!code-vb[console.writelineFmt1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/console.writelineFmt1/vb/wl.vb#1)]  
  
 <span data-ttu-id="1900a-1309">В следующем примере представлен калькулятора совет, вычисляет совет 18% и использует <xref:System.Console.WriteLine%2A> метод для отображения сумму издержек, исходный объем совет и общую сумму.</span><span class="sxs-lookup"><span data-stu-id="1900a-1309">The following example is a tip calculator that calculates an 18% tip and uses the <xref:System.Console.WriteLine%2A> method to display the amount of the original charge, the amount of the tip, and the total amount.</span></span> <span data-ttu-id="1900a-1310">Пример является консольным приложением, которое пользователь должен ввести сумму исходной стоимости как параметр командной строки.</span><span class="sxs-lookup"><span data-stu-id="1900a-1310">The example is a console application that requires the user to supply the amount of the original charge as a command-line parameter.</span></span>  
  
 [!code-csharp[System.Console.WriteLine#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console.WriteLine/CS/tipcalc.cs#1)]
 [!code-vb[System.Console.WriteLine#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console.WriteLine/VB/tipcalc.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1900a-1311">Ошибка ввода/вывода.</span><span class="sxs-lookup"><span data-stu-id="1900a-1311">An I/O error occurred.</span></span></exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1900a-1312">Свойство <paramref name="format" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="1900a-1312"><paramref name="format" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="1900a-1313">Недопустимая спецификация формата в <paramref name="format" />.</span><span class="sxs-lookup"><span data-stu-id="1900a-1313">The format specification in <paramref name="format" /> is invalid.</span></span></exception>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="1900a-1314">для изменения безопасных окон верхнего уровня и дочерние окна.</span><span class="sxs-lookup"><span data-stu-id="1900a-1314">for modifying safe top-level windows and subwindows.</span></span> <span data-ttu-id="1900a-1315">Связанное перечисление: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span><span class="sxs-lookup"><span data-stu-id="1900a-1315">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span></span></permission>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.Write(System.String,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine (string format, object arg0, object arg1, object arg2, object arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(string format, object arg0, object arg1, object arg2, object arg3) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLine (format As String, arg0 As Object, arg1 As Object, arg2 As Object, arg3 As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine(System::String ^ format, System::Object ^ arg0, System::Object ^ arg1, System::Object ^ arg2, System::Object ^ arg3);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="arg0" Type="System.Object" />
        <Parameter Name="arg1" Type="System.Object" />
        <Parameter Name="arg2" Type="System.Object" />
        <Parameter Name="arg3" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="1900a-1316">Строка составного формата.</span><span class="sxs-lookup"><span data-stu-id="1900a-1316">A composite format string.</span></span></param>
        <param name="arg0"><span data-ttu-id="1900a-1317">Первый объект для записи с использованием <c>format</c>.</span><span class="sxs-lookup"><span data-stu-id="1900a-1317">The first object to write using <c>format</c>.</span></span></param>
        <param name="arg1"><span data-ttu-id="1900a-1318">Второй объект для записи с использованием <c>format</c>.</span><span class="sxs-lookup"><span data-stu-id="1900a-1318">The second object to write using <c>format</c>.</span></span></param>
        <param name="arg2"><span data-ttu-id="1900a-1319">Третий объект для записи с использованием <c>format</c>.</span><span class="sxs-lookup"><span data-stu-id="1900a-1319">The third object to write using <c>format</c>.</span></span></param>
        <param name="arg3"><span data-ttu-id="1900a-1320">Четвертый объект для записи с использованием <c>format</c>.</span><span class="sxs-lookup"><span data-stu-id="1900a-1320">The fourth object to write using <c>format</c>.</span></span></param>
        <summary><span data-ttu-id="1900a-1321">Записывает текстовые представления заданных объектов и список параметров переменной длины, за которыми следует текущий признак конца строки, в стандартный выходной поток с использованием заданных сведений о форматировании.</span><span class="sxs-lookup"><span data-stu-id="1900a-1321">Writes the text representation of the specified objects and variable-length parameter list, followed by the current line terminator, to the standard output stream using the specified format information.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="1900a-1322">Этот интерфейс API CLS-несовместим.</span><span class="sxs-lookup"><span data-stu-id="1900a-1322">This API is not CLS-compliant.</span></span> <span data-ttu-id="1900a-1323">CLS-совместимая альтернатива — <xref:System.Console.WriteLine%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="1900a-1323">The CLS-compliant alternative is <xref:System.Console.WriteLine%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType>.</span></span> <span data-ttu-id="1900a-1324">Компиляторы C# и Visual Basic автоматически разрешить вызов этого метода, как вызов <xref:System.Console.WriteLine%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="1900a-1324">The C# and Visual Basic compilers automatically resolve a call to this method as a call to <xref:System.Console.WriteLine%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="1900a-1325">Этот метод использует [составное форматирование](~/docs/standard/base-types/composite-formatting.md) платформы .NET Framework, чтобы преобразовать значение объекта в его текстовое представление и встроить это представление в строку.</span><span class="sxs-lookup"><span data-stu-id="1900a-1325">This method uses the [composite formatting feature](~/docs/standard/base-types/composite-formatting.md) of the .NET Framework to convert the value of an object to its text representation and embed that representation in a string.</span></span> <span data-ttu-id="1900a-1326">Результирующая строка записывается в поток вывода.</span><span class="sxs-lookup"><span data-stu-id="1900a-1326">The resulting string is written to the output stream.</span></span>  
  
 <span data-ttu-id="1900a-1327">`format` Параметр состоит из нуля или больше текста, перемежаемых ноль или более индексированные местозаполнители, называются элементами форматирования, которые соответствуют объекту в списке параметров данного метода.</span><span class="sxs-lookup"><span data-stu-id="1900a-1327">The `format` parameter consists of zero or more runs of text intermixed with zero or more indexed placeholders, called format items, that correspond to an object in the parameter list of this method.</span></span> <span data-ttu-id="1900a-1328">В процессе форматирования каждый элемент формата заменяется текстовое представление значения соответствующего объекта.</span><span class="sxs-lookup"><span data-stu-id="1900a-1328">The formatting process replaces each format item with the text representation of the value of the corresponding object.</span></span>  
  
 <span data-ttu-id="1900a-1329">Синтаксис элементов форматирования `{` *индекс*[`,`*выравнивание*] [`:`*formatString*]`}`, который указывает Обязательный индекса, необязательно длину и выравнивание форматированного текста и необязательная строка символов описателя формата, определяющих способ форматирования значения соответствующего объекта.</span><span class="sxs-lookup"><span data-stu-id="1900a-1329">The syntax of a format item is `{`*index*[`,`*alignment*][`:`*formatString*]`}`, which specifies a mandatory index, the optional length and alignment of the formatted text, and an optional string of format specifier characters that govern how the value of the corresponding object is formatted.</span></span>  
  
 <span data-ttu-id="1900a-1330">Платформа .NET Framework предоставляет широкую поддержку форматирования, который описан более подробно в следующих разделах о форматировании.</span><span class="sxs-lookup"><span data-stu-id="1900a-1330">The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics.</span></span>  
  
-   <span data-ttu-id="1900a-1331">Дополнительные сведения о составного форматирования, поддерживаемые методами, такими как <xref:System.String.Format%2A>, <xref:System.Text.StringBuilder.AppendFormat%2A>и некоторые перегрузки <xref:System.Console.WriteLine%2A>, в разделе [составное форматирование](~/docs/standard/base-types/composite-formatting.md).</span><span class="sxs-lookup"><span data-stu-id="1900a-1331">For more information about the composite formatting feature supported by methods such as <xref:System.String.Format%2A>, <xref:System.Text.StringBuilder.AppendFormat%2A>, and some overloads of <xref:System.Console.WriteLine%2A>, see [Composite Formatting](~/docs/standard/base-types/composite-formatting.md).</span></span>  
  
-   <span data-ttu-id="1900a-1332">Дополнительные сведения об описателях числового формата см. в разделе [строки стандартного числового формата](~/docs/standard/base-types/standard-numeric-format-strings.md) и [строки настраиваемых числовых форматов](~/docs/standard/base-types/custom-numeric-format-strings.md).</span><span class="sxs-lookup"><span data-stu-id="1900a-1332">For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
-   <span data-ttu-id="1900a-1333">Дополнительные сведения о дате и времени описатели формата см. в разделе [стандартной строки даты и времени формат](~/docs/standard/base-types/standard-date-and-time-format-strings.md) и [пользовательских строк даты и времени формат](~/docs/standard/base-types/custom-date-and-time-format-strings.md).</span><span class="sxs-lookup"><span data-stu-id="1900a-1333">For more information about date and time format specifiers, see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) and [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md).</span></span>  
  
-   <span data-ttu-id="1900a-1334">Дополнительные сведения об описателях форматов перечисления см. в разделе [строки форматов перечисления](~/docs/standard/base-types/enumeration-format-strings.md).</span><span class="sxs-lookup"><span data-stu-id="1900a-1334">For more information about enumeration format specifiers, see [Enumeration Format Strings](~/docs/standard/base-types/enumeration-format-strings.md).</span></span>  
  
-   <span data-ttu-id="1900a-1335">Дополнительные сведения о форматировании см. в разделе [типы форматирования](~/docs/standard/base-types/formatting-types.md).</span><span class="sxs-lookup"><span data-stu-id="1900a-1335">For more information about formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
 <span data-ttu-id="1900a-1336">Дополнительные сведения о признак конца строки, в разделе «Примечания» <xref:System.Console.WriteLine%2A> метод, который не принимает никаких параметров.</span><span class="sxs-lookup"><span data-stu-id="1900a-1336">For more information about the line terminator, see the Remarks section of the <xref:System.Console.WriteLine%2A> method that takes no parameters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1900a-1337">В следующем примере показано использование аргументов, переменных и <xref:System.Console.WriteLine%28System.String%2CSystem.Object%2CSystem.Object%2CSystem.Object%2CSystem.Object%29> метод.</span><span class="sxs-lookup"><span data-stu-id="1900a-1337">The following example illustrates the use of variable arguments with the <xref:System.Console.WriteLine%28System.String%2CSystem.Object%2CSystem.Object%2CSystem.Object%2CSystem.Object%29> method.</span></span> <span data-ttu-id="1900a-1338">Метод вызывается с Строка составного формата и пятью элементами формата.</span><span class="sxs-lookup"><span data-stu-id="1900a-1338">The method is called with a composite format string and five format items.</span></span>  
  
 [!code-cpp[System.Console.WriteLine#5](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Console.WriteLine/CPP/writeline_vararg.cpp#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1900a-1339">Ошибка ввода/вывода.</span><span class="sxs-lookup"><span data-stu-id="1900a-1339">An I/O error occurred.</span></span></exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1900a-1340">Свойство <paramref name="format" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="1900a-1340"><paramref name="format" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="1900a-1341">Недопустимая спецификация формата в <paramref name="format" />.</span><span class="sxs-lookup"><span data-stu-id="1900a-1341">The format specification in <paramref name="format" /> is invalid.</span></span></exception>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="1900a-1342">для изменения безопасных окон верхнего уровня и дочерние окна.</span><span class="sxs-lookup"><span data-stu-id="1900a-1342">for modifying safe top-level windows and subwindows.</span></span> <span data-ttu-id="1900a-1343">Связанное перечисление: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span><span class="sxs-lookup"><span data-stu-id="1900a-1343">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span></span></permission>
        <block subset="none" type="usage">
          <para><span data-ttu-id="1900a-1344">Этот метод помечен атрибутом <see langword="vararg" /> ключевое слово, которое означает, что он поддерживает переменное число параметров.</span><span class="sxs-lookup"><span data-stu-id="1900a-1344">This method is marked with the <see langword="vararg" /> keyword, which means that it supports a variable number of parameters.</span></span> <span data-ttu-id="1900a-1345">Метод может вызываться из Visual C++, но не может вызываться из кода C# или Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="1900a-1345">The method can be called from Visual C++, but it cannot be called from C# or Visual Basic code.</span></span> <span data-ttu-id="1900a-1346">Компиляторы C# и Visual Basic разрешить вызовы <see cref="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object,System.Object)" /> как вызов <see cref="M:System.Console.WriteLine(System.String,System.Object[])" />.</span><span class="sxs-lookup"><span data-stu-id="1900a-1346">The C# and Visual Basic compilers resolve calls to <see cref="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object,System.Object)" /> as calls to <see cref="M:System.Console.WriteLine(System.String,System.Object[])" />.</span></span></para>
        </block>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.Write(System.String,System.Object)" />
      </Docs>
    </Member>
  </Members>
</Type>