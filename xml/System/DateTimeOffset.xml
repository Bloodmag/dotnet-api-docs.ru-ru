<Type Name="DateTimeOffset" FullName="System.DateTimeOffset">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="39cc8bd388d8e17e50e0dd3b0e47253eccebe402" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30731268" />
  </Metadata>
  <TypeSignature Language="C#" Value="public struct DateTimeOffset : IComparable, IComparable&lt;DateTimeOffset&gt;, IEquatable&lt;DateTimeOffset&gt;, IFormattable, System.Runtime.Serialization.IDeserializationCallback, System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit DateTimeOffset extends System.ValueType implements class System.IComparable, class System.IComparable`1&lt;valuetype System.DateTimeOffset&gt;, class System.IEquatable`1&lt;valuetype System.DateTimeOffset&gt;, class System.IFormattable, class System.Runtime.Serialization.IDeserializationCallback, class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.DateTimeOffset" />
  <TypeSignature Language="VB.NET" Value="Public Structure DateTimeOffset&#xA;Implements IComparable, IComparable(Of DateTimeOffset), IDeserializationCallback, IEquatable(Of DateTimeOffset), IFormattable, ISerializable" />
  <TypeSignature Language="C++ CLI" Value="public value class DateTimeOffset : IComparable, IComparable&lt;DateTimeOffset&gt;, IEquatable&lt;DateTimeOffset&gt;, IFormattable, System::Runtime::Serialization::IDeserializationCallback, System::Runtime::Serialization::ISerializable" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IComparable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IComparable&lt;System.DateTimeOffset&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.DateTimeOffset&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IFormattable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.IDeserializationCallback</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Представляет момент времени, который обычно выражается в виде даты и времени суток, относительно времени в формате UTC.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.DateTimeOffset> Структура включает в себя <xref:System.DateTime> значение, вместе с <xref:System.DateTimeOffset.Offset%2A> свойство, которое определяет разницу между текущим <xref:System.DateTimeOffset> экземпляра даты и времени по Гринвичу (UTC). Так как она точно определяет даты и времени относительно времени UTC, <xref:System.DateTimeOffset> структуры не включает `Kind` члена, как <xref:System.DateTime> структуры. Он представляет дату и время со значениями, UTC лежит в диапазоне от 12:00:00 (полночь), 1 января 0001 года (нашей эры) в 11:59:59 вечера, 31 декабря 9999 года н. э. (C.E.).  
  
 Компонент времени <xref:System.DateTimeOffset> значение измеряется в 100-наносекундных единицах, называемых тактами, и точная Дата представляется числом тактов с 00:00 1 января 0001 года нашей эры. (Н.Э.) в <xref:System.Globalization.GregorianCalendar> календаря. Объект <xref:System.DateTimeOffset> всегда выражается в контексте явно определенного или календаря по умолчанию. Тактов, которое относится к leap секунд не включаются в общее число тактов.  
  
> [!NOTE]
>  Если вы работаете со значением тактов, который нужно преобразовать в другой интервал времени, например минут или секунд, следует использовать <xref:System.TimeSpan.TicksPerDay?displayProperty=nameWithType>, <xref:System.TimeSpan.TicksPerHour?displayProperty=nameWithType>, <xref:System.TimeSpan.TicksPerMinute?displayProperty=nameWithType>, <xref:System.TimeSpan.TicksPerSecond?displayProperty=nameWithType>, или <xref:System.TimeSpan.TicksPerMillisecond?displayProperty=nameWithType> константу, чтобы выполнить преобразование. Например, чтобы добавить время в секундах представлен на заданное число тактов, <xref:System.DateTimeOffset.Second%2A> компонент <xref:System.DateTimeOffset> значение, можно использовать выражение `dateValue.Second + nTicks/Timespan.TicksPerSecond`.  
  
 Несмотря на то что <xref:System.DateTimeOffset> значение включает смещение, он не является структурой данных полностью часовому поясу. Смещение от UTC является одной их характеристик часового пояса, он не позволяет однозначно определить часовой пояс. Не только многие часовые пояса обладают одинаковое смещение от времени UTC, но смещение часового пояса один изменяется, если он обнаруживает летнего времени. Это означает, что как только <xref:System.DateTimeOffset> значение часовым поясом, могут не быть однозначно связаны обратно в его исходный часовой пояс.  
  
 Поскольку <xref:System.DateTimeOffset> — это структура <xref:System.DateTimeOffset> объект, который был объявлен, но в остальном не инициализирован содержит значения по умолчанию для каждого поля элемента. Это означает, что его <xref:System.DateTimeOffset.DateTime%2A> свойству <xref:System.DateTimeOffset.MinValue?displayProperty=nameWithType> и его <xref:System.DateTimeOffset.Offset%2A> свойству <xref:System.TimeSpan.Zero?displayProperty=nameWithType>.  
  
 Можно создать новую <xref:System.DateTimeOffset> значение путем вызова перегрузок его конструктора, которые похожи на перегруженных конструкторов для <xref:System.DateTime> структуры. Можно также создать новый <xref:System.DateTimeOffset> значения путем его назначения <xref:System.DateTime> значение. Это неявное преобразование; он не требует оператора приведения (в C#) или вызова метода преобразования (в Visual Basic). Можно также инициализировать <xref:System.DateTimeOffset> значение из строкового представления даты и времени путем вызова ряд синтаксический анализ методы, которые включают статических строк <xref:System.DateTimeOffset.Parse%2A>, <xref:System.DateTimeOffset.ParseExact%2A>, <xref:System.DateTimeOffset.TryParse%2A>, и <xref:System.DateTimeOffset.TryParseExact%2A>.  
  
 Члены <xref:System.DateTimeOffset> структуры предоставляют функциональные возможности в следующих областях:  
  
-   Дата и арифметических операций.  
  
     Можно добавить или вычесть дат или временных интервалов от конкретного <xref:System.DateTimeOffset> значение. Арифметические операции с <xref:System.DateTimeOffset> значения, в отличие от с <xref:System.DateTime> компенсировать различия смещение по времени значения, при возврате результата. Например, следующий код использует <xref:System.DateTime> переменные Вычитаемый текущее местное время в текущее время в формате UTC. В этом коде используется <xref:System.DateTimeOffset> переменные, чтобы выполнить ту же операцию. Вычитание с <xref:System.DateTime> значения возвращает разницу местного часового пояса от времени UTC, при вычитании с <xref:System.DateTimeOffset> значения возвращает <xref:System.TimeSpan.Zero?displayProperty=nameWithType>.  
  
     [!code-csharp[System.DateTimeOffset.Type#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Type/cs/Type.cs#1)]
     [!code-vb[System.DateTimeOffset.Type#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Type/vb/Type.vb#1)]  
  
-   Операции преобразования типов.  
  
     Вы можете преобразовать <xref:System.DateTimeOffset> значения <xref:System.DateTimeOffset.DateTime%2A> значения и наоборот.  
  
-   Операции обработки и извлечения времени.  
  
     Можно извлечь дату или время <xref:System.DateTimeOffset> значение. Также можно извлечь значение конкретного <xref:System.DateTimeOffset> компонента, такие как год или месяц.  
  
-   Преобразование даты и времени.  
  
     Можно преобразовать любой <xref:System.DateTimeOffset> значение в другой <xref:System.DateTimeOffset> значение, представляющее тот же момент времени в другом часовом поясе. Однако правил коррекции часового пояса применяются только в случае использования <xref:System.DateTimeOffset.ToLocalTime%2A> метод, который преобразует <xref:System.DateTimeOffset> значение даты и времени в зоне локальной системы.  
  
-   Сравнение дат и времени.  
  
     Можно определить, есть ли определенный <xref:System.DateTimeOffset> значение предшествует, совпадает или расположен позже, чем другой <xref:System.DateTimeOffset> значение. Прежде чем будет выполнено сравнение, все значения будут преобразованы в формат UTC.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Инициализирует новый экземпляр структуры <see cref="T:System.DateTimeOffset" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DateTimeOffset (DateTime dateTime);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.DateTime dateTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.#ctor(System.DateTime)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTimeOffset(DateTime dateTime);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="dateTime" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="dateTime">Дата и время.</param>
        <summary>Инициализирует новый экземпляр структуры <see cref="T:System.DateTimeOffset" /> с использованием заданного значения <see cref="T:System.DateTime" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот конструктор поведение зависит от значения <xref:System.DateTime.Kind%2A?displayProperty=nameWithType> свойство `dateTime` параметр:  
  
-   Если значение <xref:System.DateTime.Kind%2A?displayProperty=nameWithType> — <xref:System.DateTimeKind.Utc?displayProperty=nameWithType>, <xref:System.DateTimeOffset.DateTime%2A> свойств нового экземпляра, равна `dateTime`и <xref:System.DateTimeOffset.Offset%2A> свойство устанавливается равным <xref:System.TimeSpan.Zero>.  
  
-   Если значение <xref:System.DateTime.Kind%2A?displayProperty=nameWithType> — <xref:System.DateTimeKind.Local?displayProperty=nameWithType> или <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>, <xref:System.DateTimeOffset.DateTime%2A> свойств нового экземпляра, равна `dateTime`и <xref:System.DateTimeOffset.Offset%2A> свойство имеет значение равное смещению текущего часового пояса локальной системы.  
  
   
  
## Examples  
 В следующем примере показано как значение <xref:System.DateTime.Kind%2A?displayProperty=nameWithType> свойство `dateTime` параметр влияет на значение даты и времени, который возвращается этим конструктором.  
  
 [!code-csharp[System.DateTimeOffset.Constructors#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Constructors/cs/Constructors.cs#1)]
 [!code-vb[System.DateTimeOffset.Constructors#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Constructors/vb/Constructors.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Дата и время в формате UTC, которые получаются в результате применения смещения, более раннего чем <see cref="F:System.DateTimeOffset.MinValue" />.  
  
 - или -  
  
 Дата и время в формате UTC, которые получаются в результате применения смещения, более позднего чем <see cref="F:System.DateTimeOffset.MaxValue" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DateTimeOffset (DateTime dateTime, TimeSpan offset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.DateTime dateTime, valuetype System.TimeSpan offset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.#ctor(System.DateTime,System.TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTimeOffset(DateTime dateTime, TimeSpan offset);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="dateTime" Type="System.DateTime" />
        <Parameter Name="offset" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="dateTime">Дата и время.</param>
        <param name="offset">Смещение по времени от времени в формате UTC.</param>
        <summary>Инициализирует новый экземпляр структуры <see cref="T:System.DateTimeOffset" /> с использованием заданного значения <see cref="T:System.DateTime" /> и смещения.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот конструктор поведение отчасти зависит от значения <xref:System.DateTime.Kind%2A> свойство `dateTime` параметр:  
  
-   Если значение <xref:System.DateTime.Kind%2A> — <xref:System.DateTimeKind.Utc?displayProperty=nameWithType>, значение `offset` параметр должен быть 0 или <xref:System.ArgumentException> возникает исключение.  
  
-   Если значение <xref:System.DateTime.Kind%2A> — <xref:System.DateTimeKind.Local?displayProperty=nameWithType>, значение `offset` параметр должен быть равно смещению местного часового пояса от времени в формате UTC для этой определенной даты или <xref:System.ArgumentException> возникает исключение.  
  
-   Если значение <xref:System.DateTime.Kind%2A> — <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>, `offset` параметр может иметь любое допустимое значение.  
  
   
  
## Examples  
 В следующем примере показано, как инициализировать <xref:System.DateTimeOffset> объект с даты и времени смещение местного часового пояса, когда этот часовой пояс заранее не известен.  
  
 [!code-csharp[System.DateTimeOffset.Constructors#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Constructors/cs/Constructors.cs#3)]
 [!code-vb[System.DateTimeOffset.Constructors#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Constructors/vb/Constructors.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="dateTime.Kind" /> равно <see cref="F:System.DateTimeKind.Utc" />, а <paramref name="offset" /> не равно нулю.  
  
 - или -  
  
 <paramref name="dateTime.Kind" /> равно <see cref="F:System.DateTimeKind.Local" />, а <paramref name="offset" /> не равно смещению местного часового пояса в системе.  
  
 - или -  
  
 <paramref name="offset" /> не указано в целых минутах.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="offset" /> меньше -14 часов или больше 14 часов.  
  
 - или -  
  
 Значение <see cref="P:System.DateTimeOffset.UtcDateTime" /> меньше <see cref="F:System.DateTimeOffset.MinValue" /> или больше <see cref="F:System.DateTimeOffset.MaxValue" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DateTimeOffset (long ticks, TimeSpan offset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int64 ticks, valuetype System.TimeSpan offset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.#ctor(System.Int64,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (ticks As Long, offset As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTimeOffset(long ticks, TimeSpan offset);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="ticks" Type="System.Int64" />
        <Parameter Name="offset" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="ticks">Дата и время, представленные в виде числа 100-наносекундных интервалов, прошедших с 00:00 1 января 0001 г.</param>
        <param name="offset">Смещение по времени от времени в формате UTC.</param>
        <summary>Инициализирует новый экземпляр структуры <see cref="T:System.DateTimeOffset" /> с использованием заданного количества тактов и смещения.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Как правило, при попытке вызвать <xref:System.DateTimeOffset.%23ctor%2A> конструктора для создания <xref:System.DateTimeOffset> значений с местное время и смещение Кроме том с локального времени вызывает зоны <xref:System.ArgumentException>. Можно использовать эту перегрузку <xref:System.DateTimeOffset> конструктор, чтобы обойти это ограничение. В следующем примере используется количество тактов в местное время для создания экземпляра <xref:System.DateTimeOffset> значение смещение которого не обязательно, местное время:  
  
 [!code-csharp[System.DateTimeOffset.Constructors#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Constructors/cs/Constructors.cs#4)]
 [!code-vb[System.DateTimeOffset.Constructors#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Constructors/vb/Constructors.vb#4)]  
  
   
  
## Examples  
 В следующем примере инициализируется <xref:System.DateTimeOffset> с использованием количества тактов в произвольной дате (в данном случае 16 июля 2007 г. в 13:32) со смещением -5.  
  
 [!code-csharp[System.DateTimeOffset.Constructors#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Constructors/cs/Constructors.cs#2)]
 [!code-vb[System.DateTimeOffset.Constructors#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Constructors/vb/Constructors.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="offset" /> не следует указывать в целых минутах.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Свойство <see cref="P:System.DateTimeOffset.UtcDateTime" /> является более ранним, чем <see cref="F:System.DateTimeOffset.MinValue" />, или более поздним, чем <see cref="F:System.DateTimeOffset.MaxValue" />.  
  
 - или -  
  
 Значение <paramref name="ticks" /> меньше <see langword="DateTimeOffset.MinValue.Ticks" /> или больше <see langword="DateTimeOffset.MaxValue.Ticks" />.  
  
 - или -  
  
 <paramref name="Offset" /> меньше -14 часов или больше 14 часов.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DateTimeOffset (int year, int month, int day, int hour, int minute, int second, TimeSpan offset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 year, int32 month, int32 day, int32 hour, int32 minute, int32 second, valuetype System.TimeSpan offset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (year As Integer, month As Integer, day As Integer, hour As Integer, minute As Integer, second As Integer, offset As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTimeOffset(int year, int month, int day, int hour, int minute, int second, TimeSpan offset);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="month" Type="System.Int32" />
        <Parameter Name="day" Type="System.Int32" />
        <Parameter Name="hour" Type="System.Int32" />
        <Parameter Name="minute" Type="System.Int32" />
        <Parameter Name="second" Type="System.Int32" />
        <Parameter Name="offset" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="year">Год (от 1 до 9999).</param>
        <param name="month">Месяц (от 1 до 12).</param>
        <param name="day">День (от 1 до количества дней в <c>month</c>).</param>
        <param name="hour">Часы (от 0 до 23).</param>
        <param name="minute">Минуты (от 0 до 59).</param>
        <param name="second">Секунды (от 0 до 59).</param>
        <param name="offset">Смещение по времени от времени в формате UTC.</param>
        <summary>Инициализирует новый экземпляр структуры <see cref="T:System.DateTimeOffset" />, используя указанный год, месяц, день, час, минуту, секунду и смещение.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот конструктор интерпретирует `year`, `month`, и `day` как год, месяц и день по григорианскому календарю. Для создания экземпляра <xref:System.DateTimeOffset> значение с помощью год, месяц и день в календаре другого вызова <xref:System.DateTimeOffset.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Globalization.Calendar%2CSystem.TimeSpan%29> конструктор.  
  
   
  
## Examples  
 В следующем примере создается <xref:System.DateTimeOffset> с использованием <xref:System.DateTimeOffset.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.TimeSpan%29?displayProperty=nameWithType> перегрузку конструктора.  
  
 [!code-csharp[System.DateTimeOffset.Constructors#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Constructors/cs/Constructors.cs#5)]
 [!code-vb[System.DateTimeOffset.Constructors#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Constructors/vb/Constructors.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          Параметр <paramref name="offset" /> не представляет целое количество минут.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          Значение <paramref name="year" /> меньше единицы или больше 9999.  
  
 - или -  
  
 Значение <paramref name="month" /> меньше единицы или больше 12.  
  
 - или -  
  
 Значение параметра <paramref name="day" /> меньше единицы или больше чем число дней в параметре <paramref name="month" />.  
  
 - или -  
  
 Параметр <paramref name="hour" /> меньше нуля или больше 23.  
  
 - или -  
  
 Параметр <paramref name="minute" /> меньше 0 или больше 59.  
  
 -или-  
  
 Параметр <paramref name="second" /> меньше 0 или больше 59.  
  
 - или -  
  
 Значение параметра <paramref name="offset" /> меньше –14 часов или больше 14 часов.  
  
 - или -  
  
 Момент времени, заданный в свойстве <see cref="P:System.DateTimeOffset.UtcDateTime" />, наступает раньше <see cref="F:System.DateTimeOffset.MinValue" /> или позже <see cref="F:System.DateTimeOffset.MaxValue" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DateTimeOffset (int year, int month, int day, int hour, int minute, int second, int millisecond, TimeSpan offset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 year, int32 month, int32 day, int32 hour, int32 minute, int32 second, int32 millisecond, valuetype System.TimeSpan offset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (year As Integer, month As Integer, day As Integer, hour As Integer, minute As Integer, second As Integer, millisecond As Integer, offset As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTimeOffset(int year, int month, int day, int hour, int minute, int second, int millisecond, TimeSpan offset);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="month" Type="System.Int32" />
        <Parameter Name="day" Type="System.Int32" />
        <Parameter Name="hour" Type="System.Int32" />
        <Parameter Name="minute" Type="System.Int32" />
        <Parameter Name="second" Type="System.Int32" />
        <Parameter Name="millisecond" Type="System.Int32" />
        <Parameter Name="offset" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="year">Год (от 1 до 9999).</param>
        <param name="month">Месяц (от 1 до 12).</param>
        <param name="day">День (от 1 до количества дней в <c>month</c>).</param>
        <param name="hour">Часы (от 0 до 23).</param>
        <param name="minute">Минуты (от 0 до 59).</param>
        <param name="second">Секунды (от 0 до 59).</param>
        <param name="millisecond">Миллисекунды (от 0 до 999).</param>
        <param name="offset">Смещение по времени от времени в формате UTC.</param>
        <summary>Инициализирует новый экземпляр структуры <see cref="T:System.DateTimeOffset" />, используя указанные год, месяц, день, час, минуту, секунду, миллисекунду и смещение.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот конструктор интерпретирует `year`, `month`, и `day` как год, месяц и день по григорианскому календарю. Для создания экземпляра <xref:System.DateTimeOffset> значение с помощью год, месяц и день в календаре другого вызова <xref:System.DateTimeOffset.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Globalization.Calendar%2CSystem.TimeSpan%29> конструктор.  
  
   
  
## Examples  
 В следующем примере создается <xref:System.DateTimeOffset> с использованием <xref:System.DateTimeOffset.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.TimeSpan%29?displayProperty=nameWithType> перегрузку конструктора.  
  
 [!code-csharp[System.DateTimeOffset.Constructors#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Constructors/cs/Constructors.cs#7)]
 [!code-vb[System.DateTimeOffset.Constructors#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Constructors/vb/Constructors.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          Параметр <paramref name="offset" /> не представляет целое количество минут.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          Значение <paramref name="year" /> меньше единицы или больше 9999.  
  
 - или -  
  
 Значение <paramref name="month" /> меньше единицы или больше 12.  
  
 - или -  
  
 Значение параметра <paramref name="day" /> меньше единицы или больше чем число дней в параметре <paramref name="month" />.  
  
 - или -  
  
 Параметр <paramref name="hour" /> меньше нуля или больше 23.  
  
 - или -  
  
 Параметр <paramref name="minute" /> меньше 0 или больше 59.  
  
 -или-  
  
 Параметр <paramref name="second" /> меньше 0 или больше 59.  
  
 - или -  
  
 Параметр <paramref name="millisecond" /> имеет значение меньше 0 или больше 999.  
  
 - или -  
  
 Параметр <paramref name="offset" /> меньше –14 или больше 14.  
  
 - или -  
  
 Момент времени, заданный в свойстве <see cref="P:System.DateTimeOffset.UtcDateTime" />, наступает раньше <see cref="F:System.DateTimeOffset.MinValue" /> или позже <see cref="F:System.DateTimeOffset.MaxValue" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DateTimeOffset (int year, int month, int day, int hour, int minute, int second, int millisecond, System.Globalization.Calendar calendar, TimeSpan offset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 year, int32 month, int32 day, int32 hour, int32 minute, int32 second, int32 millisecond, class System.Globalization.Calendar calendar, valuetype System.TimeSpan offset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Globalization.Calendar,System.TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTimeOffset(int year, int month, int day, int hour, int minute, int second, int millisecond, System::Globalization::Calendar ^ calendar, TimeSpan offset);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="month" Type="System.Int32" />
        <Parameter Name="day" Type="System.Int32" />
        <Parameter Name="hour" Type="System.Int32" />
        <Parameter Name="minute" Type="System.Int32" />
        <Parameter Name="second" Type="System.Int32" />
        <Parameter Name="millisecond" Type="System.Int32" />
        <Parameter Name="calendar" Type="System.Globalization.Calendar" />
        <Parameter Name="offset" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="year">Год.</param>
        <param name="month">Месяц (от 1 до 12).</param>
        <param name="day">День (от 1 до количества дней в <c>month</c>).</param>
        <param name="hour">Часы (от 0 до 23).</param>
        <param name="minute">Минуты (от 0 до 59).</param>
        <param name="second">Секунды (от 0 до 59).</param>
        <param name="millisecond">Миллисекунды (от 0 до 999).</param>
        <param name="calendar">Календарь, используемый для анализа параметров <c>year</c>, <c>month</c> и <c>day</c>.</param>
        <param name="offset">Смещение по времени от времени в формате UTC.</param>
        <summary>Инициализирует новый экземпляр структуры <see cref="T:System.DateTimeOffset" />, используя указанные год, месяц, день, час, минуту, секунду, миллисекунду и смещение для заданного календаря.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `year`, `month`, `day`, `hour`, `minute`, `second`, И `millisecond` все параметры отражают значения, выраженное в календаре, определяемое `calendar` параметра. Если эти значения даты и времени, которые невозможно выразить с помощью данного календаря исключение.  
  
   
  
## Examples  
 В следующем примере используется экземплярами <xref:System.Globalization.HebrewCalendar> класса и <xref:System.Globalization.HijriCalendar> класса для создания экземпляра <xref:System.DateTimeOffset> значение. Эта дата отображается в консоли с использованием соответствующих календарей и григорианского календаря.  
  
 [!code-csharp[System.DateTimeOffset.Constructors#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Constructors/cs/Constructors.cs#8)]
 [!code-vb[System.DateTimeOffset.Constructors#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Constructors/vb/Constructors.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          Параметр <paramref name="offset" /> не представляет целое количество минут.</exception>
        <exception cref="T:System.ArgumentNullException">
          Параметр <paramref name="calendar" /> не может иметь значение <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          Значение параметра <paramref name="year" /> меньше заданного для параметра <paramref name="calendar" /> значения <see langword="MinSupportedDateTime.Year" /> или больше чем <see langword="MaxSupportedDateTime.Year" />.  
  
 - или -  
  
 Значение параметра <paramref name="month" /> меньше или больше чем число месяцев, заданное в параметре <paramref name="year" /> параметра <paramref name="calendar" />.  
  
 - или -  
  
 Значение параметра <paramref name="day" /> меньше единицы или больше чем число дней в параметре <paramref name="month" />.  
  
 - или -  
  
 Параметр <paramref name="hour" /> меньше нуля или больше 23.  
  
 - или -  
  
 Параметр <paramref name="minute" /> меньше 0 или больше 59.  
  
 -или-  
  
 Параметр <paramref name="second" /> меньше 0 или больше 59.  
  
 - или -  
  
 Параметр <paramref name="millisecond" /> имеет значение меньше 0 или больше 999.  
  
 - или -  
  
 Значение параметра <paramref name="offset" /> меньше –14 часов или больше 14 часов.  
  
 - или -  
  
 Параметры <paramref name="year" />, <paramref name="month" /> и <paramref name="day" /> не удается представить как значения типа даты и времени.  
  
 - или -  
  
 Момент времени, заданный в свойстве <see cref="P:System.DateTimeOffset.UtcDateTime" />, наступает раньше <see cref="F:System.DateTimeOffset.MinValue" /> или позже <see cref="F:System.DateTimeOffset.MaxValue" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public DateTimeOffset Add (TimeSpan timeSpan);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.DateTimeOffset Add(valuetype System.TimeSpan timeSpan) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.Add(System.TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTimeOffset Add(TimeSpan timeSpan);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeSpan" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeSpan">Объект <see cref="T:System.TimeSpan" />, представляющий положительный или отрицательный интервал времени.</param>
        <summary>Возвращает новый объект <see cref="T:System.DateTimeOffset" />, добавляющий указанный интервал времени к значению этого экземпляра.</summary>
        <returns>Объект, значение которого равно сумме даты и времени, представленных текущим объектом <see cref="T:System.DateTimeOffset" />, и интервала времени, представленного параметром <paramref name="timeSpan" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Можно использовать <xref:System.DateTimeOffset.Add%2A> метод, чтобы добавить более одного вида интервал времени (дней, часов, минут, секунд или миллисекунд) в одной операции. Этот метод идентичен для оператора сложения. <xref:System.DateTimeOffset> Структура также поддерживает добавление специализированные методы (такие как <xref:System.DateTimeOffset.AddDays%2A>, <xref:System.DateTimeOffset.AddHours%2A>, и <xref:System.DateTimeOffset.AddMinutes%2A>) для каждого интервала времени.  
  
> [!NOTE]
>  Этот метод возвращает новый <xref:System.DateTimeOffset> объекта. Не изменяйте значение текущего объекта путем добавления `timeSpan` даты и времени.  
  
 <xref:System.DateTimeOffset.Add%2A> Метод не влияет на значение текущей <xref:System.DateTimeOffset> объекта <xref:System.DateTimeOffset.Offset%2A> свойство.  
  
 Поскольку <xref:System.DateTimeOffset> объект не представляет дату и время в определенного часового пояса, <xref:System.DateTimeOffset.Add%2A> метод не учитывает правила коррекции для определенного часового пояса, при выполнении арифметических операций.  
  
 Если `timeSpan` параметр `null`, этот метод возвращает значение исходного <xref:System.DateTimeOffset> объекта без изменений.  
  
   
  
## Examples  
 В следующем примере создается массив <xref:System.TimeSpan> объекты, представляющие время перелета между назначения. <xref:System.DateTimeOffset.Add%2A> Добавляет этих значений времени для <xref:System.DateTimeOffset> , представляющий определенного рейса взлета начальное время. Результат отражает запланированному времени прибытия в пункт назначения.  
  
 [!code-csharp[System.DateTimeOffset.Methods#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Methods/cs/Methods.cs#1)]
 [!code-vb[System.DateTimeOffset.Methods#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Methods/vb/Methods.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Итоговое значение <see cref="T:System.DateTimeOffset" /> меньше <see cref="F:System.DateTimeOffset.MinValue" />.  
  
 - или -  
  
 Итоговое значение <see cref="T:System.DateTimeOffset" /> больше <see cref="F:System.DateTimeOffset.MaxValue" />.</exception>
        <altmember cref="M:System.DateTimeOffset.op_Addition(System.DateTimeOffset,System.TimeSpan)" />
      </Docs>
    </Member>
    <Member MemberName="AddDays">
      <MemberSignature Language="C#" Value="public DateTimeOffset AddDays (double days);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.DateTimeOffset AddDays(float64 days) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.AddDays(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddDays (days As Double) As DateTimeOffset" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTimeOffset AddDays(double days);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="days" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="days">Число полных и неполных дней. Это число может быть положительным или отрицательным.</param>
        <summary>Возвращает новый объект <see cref="T:System.DateTimeOffset" />, прибавляющий заданное количество полных и неполных дней к значению данного экземпляра.</summary>
        <returns>Объект, значение которого равно сумме даты и времени, представленных текущим объектом <see cref="T:System.DateTimeOffset" />, и количества дней, представленного параметром <paramref name="days" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Дробная часть `days` параметр является дробной части дня. Например 4.5 соответствует 4 дням, 12 часов, 0 минут, 0 секундам, 0 миллисекунд. `days` Значения округляются до ближайшей миллисекунды.  
  
> [!NOTE]
>  Этот метод возвращает новый <xref:System.DateTimeOffset> объекта. Не изменяйте значение текущего объекта путем добавления `days` даты и времени.  
  
 Поскольку <xref:System.DateTimeOffset> объект не представляет дату и время в определенного часового пояса, <xref:System.DateTimeOffset.AddDays%2A> метод не учитывает правила коррекции для определенного часового пояса, при выполнении арифметических операций.  
  
 Преобразование временных интервалов менее чем за день в дробную часть может приводить к потере точности. Если это создает проблему, можно использовать <xref:System.DateTimeOffset.Add%2A> метод, который позволяет указать более одного вида интервал времени в одном методе и избавляет от необходимости преобразовывать интервалы времени в дробные части дня.  
  
   
  
## Examples  
 В следующем примере используется <xref:System.DateTimeOffset.AddDays%2A> метод для даты, которые попадают в понедельник начала рабочей недели в марта 2008 г.  
  
 [!code-csharp[System.DateTimeOffset.Methods#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Methods/cs/Methods.cs#2)]
 [!code-vb[System.DateTimeOffset.Methods#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Methods/vb/Methods.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Итоговое значение <see cref="T:System.DateTimeOffset" /> меньше <see cref="F:System.DateTimeOffset.MinValue" />.  
  
 - или -  
  
 Итоговое значение <see cref="T:System.DateTimeOffset" /> больше <see cref="F:System.DateTimeOffset.MaxValue" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="AddHours">
      <MemberSignature Language="C#" Value="public DateTimeOffset AddHours (double hours);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.DateTimeOffset AddHours(float64 hours) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.AddHours(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddHours (hours As Double) As DateTimeOffset" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTimeOffset AddHours(double hours);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hours" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="hours">Число полных и неполных часов. Это число может быть положительным или отрицательным.</param>
        <summary>Возвращает новый объект <see cref="T:System.DateTimeOffset" />, добавляющий заданное количество полных и неполных часов к значению этого экземпляра.</summary>
        <returns>Объект, значение которого равно сумме даты и времени, представленных текущим объектом <see cref="T:System.DateTimeOffset" />, и количества часов, представленного параметром <paramref name="hours" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Дробная часть `hours` параметр является дробная часть часа. Например 4.5 соответствует 4 часов, 30 минут, 0 секунд, 0 миллисекунд. `hours` Значения округляются до ближайшей миллисекунды.  
  
> [!NOTE]
>  Этот метод возвращает новый <xref:System.DateTimeOffset> объекта. Не изменяйте значение текущего объекта путем добавления `hours` даты и времени.  
  
 Поскольку <xref:System.DateTimeOffset> объект не представляет дату и время в определенного часового пояса, <xref:System.DateTimeOffset.AddHours%2A> метод не учитывает правила коррекции для определенного часового пояса, при выполнении арифметических операций.  
  
 Преобразование временных интервалов менее часа в дробную часть может приводить к потере точности. (Например, — одна минута 0,01666 часа.) Если это создает проблему, можно использовать <xref:System.DateTimeOffset.Add%2A> метод, который позволяет указать более одного вида интервал времени в одном методе и избавляет от необходимости преобразовывать интервалы времени в дробные части часа.  
  
   
  
## Examples  
 В следующем примере используется <xref:System.DateTimeOffset.AddHours%2A> сдвигает метода для перечисления времени начала работы для определенной недели в офисе, который имеет две смены восемь часов в день.  
  
 [!code-csharp[System.DateTimeOffset.Methods#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Methods/cs/Methods.cs#3)]
 [!code-vb[System.DateTimeOffset.Methods#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Methods/vb/Methods.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Итоговое значение <see cref="T:System.DateTimeOffset" /> меньше <see cref="F:System.DateTimeOffset.MinValue" />.  
  
 - или -  
  
 Итоговое значение <see cref="T:System.DateTimeOffset" /> больше <see cref="F:System.DateTimeOffset.MaxValue" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="AddMilliseconds">
      <MemberSignature Language="C#" Value="public DateTimeOffset AddMilliseconds (double milliseconds);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.DateTimeOffset AddMilliseconds(float64 milliseconds) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.AddMilliseconds(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddMilliseconds (milliseconds As Double) As DateTimeOffset" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTimeOffset AddMilliseconds(double milliseconds);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="milliseconds" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="milliseconds">Число полных и неполных миллисекунд. Это число может быть положительным или отрицательным.</param>
        <summary>Возвращает новый объект <see cref="T:System.DateTimeOffset" />, прибавляющий заданное число миллисекунд к значению данного экземпляра.</summary>
        <returns>Объект, значение которого равно сумме даты и времени, представленных текущим объектом <see cref="T:System.DateTimeOffset" />, и количества полных миллисекунд, представленных параметром <paramref name="milliseconds" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Дробная часть `milliseconds` параметр является дробная часть миллисекунды. Например 4.5 соответствует 4 миллисекундам и 5000 тактов, где 1 миллисекунда равна 10 000 тактов. Однако `milliseconds` округляется до ближайшей миллисекунды; округляются все значения.5 или более поздней.  
  
> [!NOTE]
>  Этот метод возвращает новый <xref:System.DateTimeOffset> объекта. Не изменяйте значение текущего объекта путем добавления `milliseconds` даты и времени.  
  
 Поскольку <xref:System.DateTimeOffset> объект не представляет дату и время в определенного часового пояса, <xref:System.DateTimeOffset.AddMilliseconds%2A> метод не учитывает правила коррекции для определенного часового пояса, при выполнении арифметических операций.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Итоговое значение <see cref="T:System.DateTimeOffset" /> меньше <see cref="F:System.DateTimeOffset.MinValue" />.  
  
 - или -  
  
 Итоговое значение <see cref="T:System.DateTimeOffset" /> больше <see cref="F:System.DateTimeOffset.MaxValue" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="AddMinutes">
      <MemberSignature Language="C#" Value="public DateTimeOffset AddMinutes (double minutes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.DateTimeOffset AddMinutes(float64 minutes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.AddMinutes(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddMinutes (minutes As Double) As DateTimeOffset" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTimeOffset AddMinutes(double minutes);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="minutes" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="minutes">Число полных и неполных минут. Это число может быть положительным или отрицательным.</param>
        <summary>Возвращает новый объект <see cref="T:System.DateTimeOffset" />, прибавляющий заданное количество полных и неполных минут к значению данного экземпляра.</summary>
        <returns>Объект, значение которого равно сумме даты и времени, представленных текущим объектом <see cref="T:System.DateTimeOffset" />, и количества минут, представленных параметром <paramref name="minutes" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Дробная часть `minutes` параметр является дробной части минуты. Например 4.5 соответствует 4 минутам, 30 секундам, 0 миллисекунд. `minutes` Значения округляются до ближайшей миллисекунды.  
  
> [!NOTE]
>  Этот метод возвращает новый <xref:System.DateTimeOffset> объекта. Не изменяйте значение текущего объекта путем добавления `minutes` даты и времени.  
  
 Поскольку <xref:System.DateTimeOffset> объект не представляет дату и время в определенного часового пояса, <xref:System.DateTimeOffset.AddMinutes%2A> метод не учитывает правила коррекции для определенного часового пояса, при выполнении арифметических операций.  
  
 Преобразование временных интервалов длительностью меньше минуты в дробную часть может привести к потере точности. (Например, одну секунду — 0,01666 минуты). Если это создает проблему, можно использовать <xref:System.DateTimeOffset.Add%2A> метод, который позволяет указать более одного вида интервал времени в одном методе и избавляет от необходимости преобразовывать интервалы времени в дробные части минуты.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Итоговое значение <see cref="T:System.DateTimeOffset" /> меньше <see cref="F:System.DateTimeOffset.MinValue" />.  
  
 - или -  
  
 Итоговое значение <see cref="T:System.DateTimeOffset" /> больше <see cref="F:System.DateTimeOffset.MaxValue" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="AddMonths">
      <MemberSignature Language="C#" Value="public DateTimeOffset AddMonths (int months);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.DateTimeOffset AddMonths(int32 months) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.AddMonths(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddMonths (months As Integer) As DateTimeOffset" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTimeOffset AddMonths(int months);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="months" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="months">Число полных месяцев. Это число может быть положительным или отрицательным.</param>
        <summary>Возвращает новый объект <see cref="T:System.DateTimeOffset" />, добавляющий заданное число месяцев к значению данного экземпляра.</summary>
        <returns>Объект, значение которого равно сумме даты и времени, представленных текущим объектом <see cref="T:System.DateTimeOffset" />, и количества месяцев, представленных параметром <paramref name="months" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 В отличие от большинства других методов, добавляющих одну единицу временного интервала (например, минуты или дни) в значение даты и времени <xref:System.DateTimeOffset.AddMonths%2A> не позволяют добавлять дробную часть месяца. Чтобы добавить время, которое состоит из другие единицы измерения времени, в дополнение к месяцев к <xref:System.DateTimeOffset> , используйте <xref:System.DateTimeOffset.Add%2A> метод.  
  
> [!NOTE]
>  Этот метод возвращает новый <xref:System.DateTimeOffset> объекта. Не изменяйте значение текущего объекта путем добавления `months` даты и времени.  
  
   
  
## Examples  
 В следующем примере используется <xref:System.DateTimeOffset.AddMonths%2A> метод, чтобы отобразить дату начала каждого квартала 2007 г.  
  
 [!code-csharp[System.DateTimeOffset.Methods#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Methods/cs/Methods.cs#4)]
 [!code-vb[System.DateTimeOffset.Methods#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Methods/vb/Methods.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Итоговое значение <see cref="T:System.DateTimeOffset" /> меньше <see cref="F:System.DateTimeOffset.MinValue" />.  
  
 - или -  
  
 Итоговое значение <see cref="T:System.DateTimeOffset" /> больше <see cref="F:System.DateTimeOffset.MaxValue" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="AddSeconds">
      <MemberSignature Language="C#" Value="public DateTimeOffset AddSeconds (double seconds);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.DateTimeOffset AddSeconds(float64 seconds) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.AddSeconds(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddSeconds (seconds As Double) As DateTimeOffset" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTimeOffset AddSeconds(double seconds);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="seconds" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="seconds">Число полных и неполных секунд. Это число может быть положительным или отрицательным.</param>
        <summary>Возвращает новый объект <see cref="T:System.DateTimeOffset" />, прибавляющий заданное количество полных и неполных секунд к значению данного экземпляра.</summary>
        <returns>Объект, значение которого равно сумме даты и времени, представленных текущим объектом <see cref="T:System.DateTimeOffset" />, и количества секунд, представленных параметром <paramref name="seconds" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Дробная часть `seconds` параметр является долей секунды. В следующей таблице показаны значения дробной части секунды.  
  
|Второе значение|Эквивалент|  
|------------------|----------------|  
|второй.1|100 миллисекунд|  
|.01 секунду|10 миллисекунд|  
|.001 секунду|1 миллисекунда|  
  
 `seconds` Значения округляются до ближайшей миллисекунды.  
  
> [!NOTE]
>  Этот метод возвращает новый <xref:System.DateTimeOffset> объекта. Не изменяйте значение текущего объекта путем добавления `minutes` даты и времени.  
  
 Поскольку <xref:System.DateTimeOffset> объект не представляет дату и время в определенного часового пояса, <xref:System.DateTimeOffset.AddSeconds%2A> метод не учитывает правила коррекции для определенного часового пояса, при выполнении арифметических операций.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Итоговое значение <see cref="T:System.DateTimeOffset" /> меньше <see cref="F:System.DateTimeOffset.MinValue" />.  
  
 - или -  
  
 Итоговое значение <see cref="T:System.DateTimeOffset" /> больше <see cref="F:System.DateTimeOffset.MaxValue" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="AddTicks">
      <MemberSignature Language="C#" Value="public DateTimeOffset AddTicks (long ticks);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.DateTimeOffset AddTicks(int64 ticks) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.AddTicks(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddTicks (ticks As Long) As DateTimeOffset" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTimeOffset AddTicks(long ticks);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ticks" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="ticks">Число 100-наносекундных тактов. Это число может быть положительным или отрицательным.</param>
        <summary>Возвращает новый объект <see cref="T:System.DateTimeOffset" />, прибавляющий заданное число тактов к значению этого экземпляра.</summary>
        <returns>Объект, значение которого равно сумме даты и времени, представленных текущим объектом <see cref="T:System.DateTimeOffset" />, и количества тактов, представленных параметром <paramref name="ticks" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Такт представляет 100 наносекунд или одной десятимиллионной секунды. Поскольку — это интервал времени, очень небольшой и точным, все больше единицы времени может быть выражен как число тактов без потери точности.  
  
> [!NOTE]
>  Этот метод возвращает новый <xref:System.DateTimeOffset> объекта. Не изменяйте значение текущего объекта путем добавления `minutes` даты и времени.  
  
 Ниже перечислены количество тактов в определенный временной интервал.  
  
|Интервал времени|Число тактов|  
|-------------------|---------------------|  
|Second|10,000,000|  
|Minute|600,000,000|  
|Hour|36,000,000,000|  
|Day|864,000,000,000|  
|Неделя|6,048,000,000,000|  
|Месяц.|Зависит от количества дней в месяце.|  
|Не високосный год|315,360,000,000,000|  
|Високосный год|316,224,000,000,000|  
  
 Поскольку <xref:System.DateTimeOffset> объект не представляет дату и время в определенного часового пояса, <xref:System.DateTimeOffset.AddTicks%2A> метод не учитывает правила коррекции для определенного часового пояса, при выполнении арифметических операций.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Итоговое значение <see cref="T:System.DateTimeOffset" /> меньше <see cref="F:System.DateTimeOffset.MinValue" />.  
  
 - или -  
  
 Итоговое значение <see cref="T:System.DateTimeOffset" /> больше <see cref="F:System.DateTimeOffset.MaxValue" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="AddYears">
      <MemberSignature Language="C#" Value="public DateTimeOffset AddYears (int years);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.DateTimeOffset AddYears(int32 years) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.AddYears(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddYears (years As Integer) As DateTimeOffset" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTimeOffset AddYears(int years);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="years" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="years">Число лет. Это число может быть положительным или отрицательным.</param>
        <summary>Возвращает новый объект <see cref="T:System.DateTimeOffset" />, прибавляющий заданное число лет к значению этого экземпляра.</summary>
        <returns>Объект, значение которого равно сумме даты и времени, представленных текущим объектом <see cref="T:System.DateTimeOffset" />, и количества лет, представленного параметром <paramref name="years" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 В отличие от большинства других методов, добавляющих одну единицу временного интервала (например, минуты или дни) в значение даты и времени <xref:System.DateTimeOffset.AddYears%2A> не позволяют добавлять дробную часть года. Чтобы добавить время, которое состоит из другие единицы измерения времени, в дополнение к лет <xref:System.DateTimeOffset> , используйте <xref:System.DateTimeOffset.Add%2A> метод.  
  
> [!NOTE]
>  Этот метод возвращает новый <xref:System.DateTimeOffset> объекта. Не изменяйте значение текущего объекта путем добавления `months` даты и времени.  
  
   
  
## Examples  
 В Соединенных Штатах водительское удостоверение не может быть выдано лицам младше 16 лет. Следующий пример отображает последней возможной даты, на котором пользователь должен рождения для законом водительские права.  
  
 [!code-csharp[System.DateTimeOffset.Methods#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Methods/cs/Methods.cs#6)]
 [!code-vb[System.DateTimeOffset.Methods#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Methods/vb/Methods.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Итоговое значение <see cref="T:System.DateTimeOffset" /> меньше <see cref="F:System.DateTimeOffset.MinValue" />.  
  
 - или -  
  
 Итоговое значение <see cref="T:System.DateTimeOffset" /> больше <see cref="F:System.DateTimeOffset.MaxValue" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Compare">
      <MemberSignature Language="C#" Value="public static int Compare (DateTimeOffset first, DateTimeOffset second);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Compare(valuetype System.DateTimeOffset first, valuetype System.DateTimeOffset second) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.Compare(System.DateTimeOffset,System.DateTimeOffset)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Compare (first As DateTimeOffset, second As DateTimeOffset) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Compare(DateTimeOffset first, DateTimeOffset second);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="first" Type="System.DateTimeOffset" />
        <Parameter Name="second" Type="System.DateTimeOffset" />
      </Parameters>
      <Docs>
        <param name="first">Первый из сравниваемых объектов.</param>
        <param name="second">Второй из сравниваемых объектов.</param>
        <summary>Сравнивает два объекта <see cref="T:System.DateTimeOffset" />, и указывает, как соотносятся между собой указанные в них моменты времени: первый раньше второго, первый и второй равны, или же первый позже второго.</summary>
        <returns>Знаковое целое число, позволяющее определить, наступает ли момент, указанный в параметре <paramref name="first" />, раньше или одновременно с моментом, указанным в параметре <paramref name="second" />, как показано в следующей таблице.  
  
 <list type="table"><listheader><term> Возвращаемое значение  
  
 </term><description> Описание  
  
 </description></listheader><item><term> Меньше нуля  
  
 </term><description> Момент, указанный в параметре <paramref name="first" />, наступает раньше, чем момент, указанный в параметре <paramref name="second" />.  
  
 </description></item><item><term> Нуль  
  
 </term><description><paramref name="first" /> равен <paramref name="second" />.  
  
 </description></item><item><term> Больше нуля  
  
 </term><description> Момент, указанный в параметре <paramref name="first" />, наступает позже, чем момент, указанный в параметре <paramref name="second" />.  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При выполнении сравнения, метод преобразует оба `first` и `second` параметров в формате UTC (UTC) перед проведением сравнения. Метод эквивалентно следующему:  
  
 [!code-csharp[System.DateTimeOffset.Syntax#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Syntax/cs/Syntax.cs#1)]
 [!code-vb[System.DateTimeOffset.Syntax#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Syntax/vb/Syntax.vb#1)]  
  
 Другими словами <xref:System.DateTimeOffset.Compare%2A> метод определяет неравенство двух <xref:System.DateTimeOffset> объекты представления одного момента времени. Сравнивает непосредственно ни даты и время, ни смещения.  
  
   
  
## Examples  
 В следующем примере демонстрируется вызовы <xref:System.DateTimeOffset.Compare%2A> метод для сравнения <xref:System.DateTimeOffset> объектов.  
  
 [!code-csharp[System.DateTimeOffset.Methods#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Methods/cs/Methods2.cs#7)]
 [!code-vb[System.DateTimeOffset.Methods#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Methods/vb/Methods2.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (DateTimeOffset other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(valuetype System.DateTimeOffset other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.CompareTo(System.DateTimeOffset)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (other As DateTimeOffset) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(DateTimeOffset other);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable`1.CompareTo(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.DateTimeOffset" />
      </Parameters>
      <Docs>
        <param name="other">Объект, сравниваемый с текущим объектом <see cref="T:System.DateTimeOffset" />.</param>
        <summary>Сравнивает текущий объект <see cref="T:System.DateTimeOffset" /> с заданным объектом <see cref="T:System.DateTimeOffset" /> и указывает, когда наступает момент, заданный в первом объекте: раньше, позже или одновременно с моментом, указанным во втором объекте <see cref="T:System.DateTimeOffset" />.</summary>
        <returns>Целое число со знаком, позволяющее определить, как соотносятся между собой текущий объект <see cref="T:System.DateTimeOffset" /> и параметр <paramref name="other" />. Возможные соотношения показаны в следующей таблице.  
  
 <list type="table"><listheader><term> Возвращаемое значение  
  
 </term><description> Описание  
  
 </description></listheader><item><term> Меньше нуля  
  
 </term><description> Момент времени в объекте <see cref="T:System.DateTimeOffset" /> наступает раньше момента времени в параметре <paramref name="other" />.  
  
 </description></item><item><term> Нуль  
  
 </term><description> Текущий объект <see cref="T:System.DateTimeOffset" /> совпадает с <paramref name="other" />.  
  
 </description></item><item><term> Больше нуля.  
  
 </term><description> Момент времени в текущем объекте <see cref="T:System.DateTimeOffset" /> наступает позже момента времени в параметре <paramref name="other" />.  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод сравнивает <xref:System.DateTimeOffset> объекты, сравнивая их <xref:System.DateTimeOffset.UtcDateTime%2A> значений; то есть, определяет ли два объекта представления одного момента времени и указывает, является ли текущий объект раньше, позже или же, как `other`параметра.  
  
   
  
## Examples  
 В следующем примере демонстрируется вызовы <xref:System.DateTimeOffset.CompareTo%2A> метод для сравнения <xref:System.DateTimeOffset> объектов.  
  
 [!code-csharp[System.DateTimeOffset.Methods#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Methods/cs/Methods3.cs#8)]
 [!code-vb[System.DateTimeOffset.Methods#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Methods/vb/Methods3.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Date">
      <MemberSignature Language="C#" Value="public DateTime Date { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime Date" />
      <MemberSignature Language="DocId" Value="P:System.DateTimeOffset.Date" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Date As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime Date { DateTime get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает значение <see cref="T:System.DateTime" />, представляющее компонент даты в текущем объекте <see cref="T:System.DateTimeOffset" />.</summary>
        <value>Значение <see cref="T:System.DateTime" />, представляющее компонент даты в текущем объекте <see cref="T:System.DateTimeOffset" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это свойство удаляет любые значительная часть компонента времени из <xref:System.DateTimeOffset> и возвращает только значимый компонент даты. Например если <xref:System.DateTimeOffset> объекта имеет значение даты и времени «1-12-07 4:01:00 + 7:30», это свойство возвращает <xref:System.DateTime> значение «1-12-07 12:00:00 AM». <xref:System.DateTime> Значения могут отображаться с помощью любого из описатели стандартного или пользовательского формата, которые отображают только даты. (См. в разделе "Пример" пример).  
  
 Значение <xref:System.DateTime.Kind%2A?displayProperty=nameWithType> свойство возвращаемого <xref:System.DateTime> объект всегда является <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>. Он не влияет значение <xref:System.DateTimeOffset.Offset%2A> свойства.  
  
 Для отображения даты без временного компонента, можно также использовать «D» или «d» описателях; Иллюстрация см. в разделе.  
  
   
  
## Examples  
 В следующем примере извлекается значение <xref:System.DateTimeOffset.Date%2A> свойства для определенной даты. Затем это значение отображается в консоль с помощью некоторых описателей стандартных и пользовательских форматов только даты.  
  
 [!code-csharp[System.DateTimeOffset.Properties#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/cs/Properties.cs#1)]
 [!code-vb[System.DateTimeOffset.Properties#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/vb/Properties.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DateTime">
      <MemberSignature Language="C#" Value="public DateTime DateTime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime DateTime" />
      <MemberSignature Language="DocId" Value="P:System.DateTimeOffset.DateTime" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DateTime As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime DateTime { DateTime get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает значение <see cref="T:System.DateTime" />, представляющее дату и время текущего объекта <see cref="T:System.DateTimeOffset" />.</summary>
        <value>Дата и время текущего объекта <see cref="T:System.DateTimeOffset" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.DateTimeOffset.DateTime%2A> Не затрагивается значение <xref:System.DateTimeOffset.Offset%2A> свойства.  
  
 Это свойство возвращает дату и время координата <xref:System.DateTimeOffset> объекта, который может быть полезным при выполнении <xref:System.DateTimeOffset> для <xref:System.DateTime> преобразования. Например если <xref:System.DateTimeOffset> объекта имеет значение даты и времени «1-12-07 4:01:00 + 7:30», свойство возвращает дату «1-12-07 4:01:00».  
  
 Значение <xref:System.DateTime.Kind%2A?displayProperty=nameWithType> свойство возвращаемого <xref:System.DateTime> объект <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>.  
  
   
  
## Examples  
 Следующий пример иллюстрирует использование <xref:System.DateTimeOffset.DateTime%2A> свойство для преобразования времени, возвращенных <xref:System.DateTimeOffset.Now%2A> и <xref:System.DateTimeOffset.UtcNow%2A> свойства <xref:System.DateTime> значения.  
  
 [!code-csharp[System.DateTimeOffset.Properties#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/cs/Properties.cs#2)]
 [!code-vb[System.DateTimeOffset.Properties#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/vb/Properties.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.DateTimeOffset.LocalDateTime" />
      </Docs>
    </Member>
    <Member MemberName="Day">
      <MemberSignature Language="C#" Value="public int Day { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Day" />
      <MemberSignature Language="DocId" Value="P:System.DateTimeOffset.Day" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Day As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Day { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает день месяца, представленный текущим объектом <see cref="T:System.DateTimeOffset" />.</summary>
        <value>Компонент дня текущего объекта <see cref="T:System.DateTimeOffset" />, выраженный в виде значения в диапазоне от 1 до 31.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.DateTimeOffset.Day%2A> Не затрагивается значение <xref:System.DateTimeOffset.Offset%2A> свойства.  
  
 Можно также создать строковое представление <xref:System.DateTimeOffset> компонента дня объекта путем вызова <xref:System.DateTimeOffset.ToString%2A> метод с описателей настраиваемого формата «d» или «dd».  
  
   
  
## Examples  
 В следующем примере отображается компонент дня <xref:System.DateTimeOffset> объекта тремя разными способами:  
  
-   Путем получения значения из <xref:System.DateTimeOffset.Day%2A> свойство.  
  
-   Путем вызова <xref:System.DateTimeOffset.ToString%28System.String%29> метод с описателем формата «d».  
  
-   Путем вызова <xref:System.DateTimeOffset.ToString%28System.String%29> метод с помощью описателя формата «dd».  
  
 [!code-csharp[System.DateTimeOffset.Properties#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/cs/Properties.cs#10)]
 [!code-vb[System.DateTimeOffset.Properties#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/vb/Properties.vb#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DayOfWeek">
      <MemberSignature Language="C#" Value="public DayOfWeek DayOfWeek { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DayOfWeek DayOfWeek" />
      <MemberSignature Language="DocId" Value="P:System.DateTimeOffset.DayOfWeek" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DayOfWeek As DayOfWeek" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DayOfWeek DayOfWeek { DayOfWeek get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DayOfWeek</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает день недели, представленный текущим объектом <see cref="T:System.DateTimeOffset" />.</summary>
        <value>Одно из значений перечисления, определяющее день недели текущего объекта <see cref="T:System.DateTimeOffset" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Значение константы в <xref:System.DayOfWeek> перечисления в диапазоне от <xref:System.DayOfWeek.Sunday?displayProperty=nameWithType> для <xref:System.DayOfWeek.Saturday?displayProperty=nameWithType>. Если приведение в целое число, его значение лежит в диапазоне от нуля (указывающая <xref:System.DayOfWeek.Sunday?displayProperty=nameWithType>) до 6 (что означает <xref:System.DayOfWeek.Saturday?displayProperty=nameWithType>).  
  
 Можно также отобразить название дня недели для определенной даты с помощью описатель формата «D» или описатель настраиваемого формата «dddd». Пример:  
  
 [!code-csharp[System.DateTimeOffset.Properties#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/cs/Properties.cs#4)]
 [!code-vb[System.DateTimeOffset.Properties#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/vb/Properties.vb#4)]  
  
 Обратите внимание, что строка, возвращаемая вызовом `ToString` метод <xref:System.DayOfWeek> член перечисления, который возвращается этим свойством не локализовано. Чтобы извлечь строку, содержащую название дня недели для текущего языка и региональных параметров или определенного языка и региональных параметров, вызовите <xref:System.DateTimeOffset.ToString%2A> метода с использованием описателя настраиваемого формата «dddd». Например, следующий код отображает название дня недели для даты с помощью `fr-fr` языка и региональных параметров.  
  
 [!code-csharp[System.DateTimeOffset.Properties#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/cs/Properties.cs#5)]
 [!code-vb[System.DateTimeOffset.Properties#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/vb/Properties.vb#5)]  
  
   
  
## Examples  
 Следующий пример отображает название дня недели в первый день каждого месяца 2008 г.  
  
 [!code-csharp[System.DateTimeOffset.Properties#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/cs/Properties.cs#3)]
 [!code-vb[System.DateTimeOffset.Properties#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/vb/Properties.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DayOfYear">
      <MemberSignature Language="C#" Value="public int DayOfYear { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DayOfYear" />
      <MemberSignature Language="DocId" Value="P:System.DateTimeOffset.DayOfYear" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DayOfYear As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int DayOfYear { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает день года, представленный текущим объектом <see cref="T:System.DateTimeOffset" />.</summary>
        <value>Компонент года текущего объекта <see cref="T:System.DateTimeOffset" />, выраженный в виде значения в диапазоне от 1 до 366.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Определяет, равны ли два объекта <see cref="T:System.DateTimeOffset" /> или равен ли объект <see cref="T:System.DateTimeOffset" /> заданному объекту.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (DateTimeOffset other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(valuetype System.DateTimeOffset other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.Equals(System.DateTimeOffset)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As DateTimeOffset) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(DateTimeOffset other);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.DateTimeOffset" />
      </Parameters>
      <Docs>
        <param name="other">Объект, который требуется сравнить с текущим объектом <see cref="T:System.DateTimeOffset" />.</param>
        <summary>Определяет, представляет ли текущий объект <see cref="T:System.DateTimeOffset" /> тот же момент времени, что и заданный объект <see cref="T:System.DateTimeOffset" />.</summary>
        <returns>
          Значение <see langword="true" />, если объекты <see cref="T:System.DateTimeOffset" /> имеют одинаковые значения <see cref="P:System.DateTimeOffset.UtcDateTime" />; в противном случае — значение <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Перед проведением сравнения, этот метод преобразует оба значения <xref:System.DateTimeOffset> объектов в формате UTC. Метод эквивалентно следующему:  
  
 [!code-csharp[System.DateTimeOffset.Syntax#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Syntax/cs/Syntax.cs#2)]
 [!code-vb[System.DateTimeOffset.Syntax#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Syntax/vb/Syntax.vb#2)]  
  
 Другими словами <xref:System.DateTimeOffset.Equals%28System.DateTimeOffset%29> метод определяет неравенство двух <xref:System.DateTimeOffset> объекты представления одного момента времени. Сравнивает непосредственно ни даты и время, ни смещения. Чтобы определить, является ли два <xref:System.DateTimeOffset> объекты представляют одновременно и имеют одинаковое значение смещения, используйте <xref:System.DateTimeOffset.EqualsExact%2A> метод.  
  
 Объект <xref:System.DateTimeOffset> объектом, не `null` считается более поздней версии (или более поздней), чем `null`.  
  
 Эта перегрузка <xref:System.DateTimeOffset.Equals%28System.DateTimeOffset%29> реализует метод <xref:System.IEquatable%601.Equals%2A?displayProperty=nameWithType> метод. Он обеспечивает немного лучшую производительность, чем <xref:System.DateTimeOffset.Equals%28System.Object%29?displayProperty=nameWithType> перегружать, так как `other` параметр не должен быть преобразован из объекта.  
  
   
  
## Examples  
 В следующем примере демонстрируется вызовы <xref:System.DateTimeOffset.Equals%28System.DateTimeOffset%29> тестируемого метода <xref:System.DateTimeOffset> объектов на равенство с текущим <xref:System.DateTimeOffset> объекта.  
  
 [!code-csharp[System.DateTimeOffset.Methods#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Methods/cs/Methods.cs#9)]
 [!code-vb[System.DateTimeOffset.Methods#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Methods/vb/Methods.vb#9)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.DateTimeOffset.EqualsExact(System.DateTimeOffset)" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">Объект, который требуется сравнить с текущим объектом <see cref="T:System.DateTimeOffset" />.</param>
        <summary>Определяет, представляет ли объект <see cref="T:System.DateTimeOffset" /> тот же момент времени, что и заданный объект.</summary>
        <returns>
          Значение <see langword="true" />, если параметр <paramref name="obj" /> является объектом <see cref="T:System.DateTimeOffset" /> и представляет тот же момент времени, что и текущий объект <see cref="T:System.DateTimeOffset" />; в противном случае — значение <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Перед проведением сравнения, этот метод преобразует значения текущего <xref:System.DateTimeOffset> объекта и `obj` параметр в формате UTC. Метод эквивалентно следующему:  
  
 [!code-csharp[System.DateTimeOffset.Syntax#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Syntax/cs/Syntax.cs#3)]
 [!code-vb[System.DateTimeOffset.Syntax#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Syntax/vb/Syntax.vb#3)]  
  
 Другими словами <xref:System.DateTimeOffset.Equals%28System.Object%29?displayProperty=nameWithType> метод определяет, является ли текущего <xref:System.DateTimeOffset> объекта и указанный объект представления одного момента времени. Сравнивает непосредственно ни даты и время, ни смещения. Чтобы определить, является ли два <xref:System.DateTimeOffset> объекты представляют одновременно и имеют одинаковое значение смещения, используйте <xref:System.DateTimeOffset.EqualsExact%2A> метод.  
  
 Если `obj` — `null`, или если тип времени выполнения `obj` не <xref:System.DateTimeOffset>, метод возвращает `false`.  
  
   
  
## Examples  
 Следующий пример показывает ли текущий <xref:System.DateTimeOffset> объект равен некоторые другие <xref:System.DateTimeOffset> , а также как на пустую ссылку и объекты a <xref:System.DateTime> объекта.  
  
 [!code-csharp[System.DateTimeOffset.Methods#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Methods/cs/Methods.cs#10)]
 [!code-vb[System.DateTimeOffset.Methods#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Methods/vb/Methods.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.DateTimeOffset.EqualsExact(System.DateTimeOffset)" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public static bool Equals (DateTimeOffset first, DateTimeOffset second);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Equals(valuetype System.DateTimeOffset first, valuetype System.DateTimeOffset second) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.Equals(System.DateTimeOffset,System.DateTimeOffset)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Equals (first As DateTimeOffset, second As DateTimeOffset) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Equals(DateTimeOffset first, DateTimeOffset second);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="first" Type="System.DateTimeOffset" />
        <Parameter Name="second" Type="System.DateTimeOffset" />
      </Parameters>
      <Docs>
        <param name="first">Первый из сравниваемых объектов.</param>
        <param name="second">Второй из сравниваемых объектов.</param>
        <summary>Определяет, представляют ли два заданных объекта <see cref="T:System.DateTimeOffset" /> один и тот же момент времени.</summary>
        <returns>
          Значение <see langword="true" />, если два объекта <see cref="T:System.DateTimeOffset" /> имеют одинаковые значения <see cref="P:System.DateTimeOffset.UtcDateTime" />; в противном случае — значение <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Перед проведением сравнения, этот метод преобразует оба <xref:System.DateTimeOffset> объектов в формате UTC. Метод эквивалентно следующему:  
  
 [!code-csharp[System.DateTimeOffset.Syntax#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Syntax/cs/Syntax.cs#4)]
 [!code-vb[System.DateTimeOffset.Syntax#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Syntax/vb/Syntax.vb#4)]  
  
 Другими словами <xref:System.DateTimeOffset.Equals%28System.DateTimeOffset%2CSystem.DateTimeOffset%29> метод определяет, является ли два <xref:System.DateTimeOffset> объекты представления одного момента времени. Сравнивает непосредственно ни даты и время, ни смещения. Чтобы определить, является ли два <xref:System.DateTimeOffset> объекты представляют одновременно и имеют одинаковое значение смещения, используйте <xref:System.DateTimeOffset.EqualsExact%2A> метод.  
  
   
  
## Examples  
 В следующем примере демонстрируется вызовы <xref:System.DateTimeOffset.Equals%28System.DateTimeOffset%2CSystem.DateTimeOffset%29> метод для проверки различных пар <xref:System.DateTimeOffset> объектов на равенство.  
  
 [!code-csharp[System.DateTimeOffset.Methods#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Methods/cs/Methods.cs#11)]
 [!code-vb[System.DateTimeOffset.Methods#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Methods/vb/Methods.vb#11)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.DateTimeOffset.EqualsExact(System.DateTimeOffset)" />
      </Docs>
    </Member>
    <Member MemberName="EqualsExact">
      <MemberSignature Language="C#" Value="public bool EqualsExact (DateTimeOffset other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool EqualsExact(valuetype System.DateTimeOffset other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.EqualsExact(System.DateTimeOffset)" />
      <MemberSignature Language="VB.NET" Value="Public Function EqualsExact (other As DateTimeOffset) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool EqualsExact(DateTimeOffset other);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.DateTimeOffset" />
      </Parameters>
      <Docs>
        <param name="other">Объект, который требуется сравнить с текущим объектом <see cref="T:System.DateTimeOffset" />.</param>
        <summary>Определяет, представляет ли текущий объект <see cref="T:System.DateTimeOffset" /> тот же момент времени, что и заданный объект <see cref="T:System.DateTimeOffset" /> и совпадают ли их смещения.</summary>
        <returns>
          Значение <see langword="true" />, если текущий объект <see cref="T:System.DateTimeOffset" /> и параметр <paramref name="other" /> имеет одинаковые дату, время и значения <see cref="P:System.DateTimeOffset.Offset" />; в противном случае — значение <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Поскольку многие часовые пояса обладают одинаковым смещением, возвращаемое значение `true` не гарантируют того, текущий и `other` объекта представляют время, в том же часовом поясе.  
  
 В отличие от <xref:System.DateTimeOffset.EqualsExact%2A> метод, перегрузки <xref:System.DateTimeOffset.Equals%2A> метод определяют только два <xref:System.DateTimeOffset> значения представляют один момент времени. Они не указывают, что два значения имеют ту же дату и время, а также смещения.  
  
   
  
## Examples  
 Следующий пример иллюстрирует использование <xref:System.DateTimeOffset.EqualsExact%2A> метод, чтобы сравнить аналогичные <xref:System.DateTimeOffset> объектов.  
  
 [!code-csharp[System.DateTimeOffset.Methods#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Methods/cs/Methods.cs#12)]
 [!code-vb[System.DateTimeOffset.Methods#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Methods/vb/Methods.vb#12)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.DateTimeOffset.Equals" />
      </Docs>
    </Member>
    <Member MemberName="FromFileTime">
      <MemberSignature Language="C#" Value="public static DateTimeOffset FromFileTime (long fileTime);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTimeOffset FromFileTime(int64 fileTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.FromFileTime(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromFileTime (fileTime As Long) As DateTimeOffset" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTimeOffset FromFileTime(long fileTime);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileTime" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="fileTime">Время файла Windows, выраженное в тактах.</param>
        <summary>Преобразует заданное время файла Windows в его эквивалент по местному времени.</summary>
        <returns>Объект, представляющий дату и время <paramref name="fileTime" /> со смещением, равным смещению местного времени.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Временная характеристика файла Windows является 64-разрядное значение, представляющее количество 100-наносекундных интервалов, прошедших с 00:00 1 января 1601 г. нашей эры (C.E.) Гринвичу (UTC). Windows использует временную характеристику файла для записи, когда приложение создает, обращается к или записывает в файл.  
  
 Временная характеристика файла Windows доступен напрямую через Windows API путем вызова `GetFileTime` функции, которая возвращает `FILETIME` структуры. Единственным параметром этой функции является дескриптор файла, файл времени сведения о которой требуется получить. Дескриптор файла, извлечь, вызвав `CreateFile` функции. `FILETIME` Структуры `dwHighDateTime` член содержит четыре старшие байты времени файла и его `dwLowDateTime` член содержит четыре байта низкого порядка. В следующем примере показано, как получить временной характеристики файла Windows и преобразовать их в <xref:System.DateTimeOffset> значения.  
  
 Временной характеристики файла Windows также могут создаваться из <xref:System.DateTime> значения путем вызова <xref:System.DateTime.ToFileTime%2A?displayProperty=nameWithType> и <xref:System.DateTime.ToFileTimeUtc%2A?displayProperty=nameWithType> методов и из <xref:System.DateTimeOffset> значения путем вызова <xref:System.DateTimeOffset.ToFileTime%2A?displayProperty=nameWithType> метод.  
  
   
  
## Examples  
 В следующем примере Windows API для извлечения времени файлов Windows для исполняемого файла WordPad.  
  
 [!code-csharp[System.DateTimeOffset.FromFileTime#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.FromFileTime/cs/FileTime.cs#1)]
 [!code-vb[System.DateTimeOffset.FromFileTime#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.FromFileTime/vb/FileTime.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          Значение параметра <paramref name="filetime" /> меньше нуля.  
  
 - или -  
  
 Значение <paramref name="filetime" /> больше значения <see langword="DateTimeOffset.MaxValue.Ticks" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="FromUnixTimeMilliseconds">
      <MemberSignature Language="C#" Value="public static DateTimeOffset FromUnixTimeMilliseconds (long milliseconds);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTimeOffset FromUnixTimeMilliseconds(int64 milliseconds) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.FromUnixTimeMilliseconds(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromUnixTimeMilliseconds (milliseconds As Long) As DateTimeOffset" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTimeOffset FromUnixTimeMilliseconds(long milliseconds);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="milliseconds" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="milliseconds">Время Unix, выраженное как количество миллисекунд, истекших с 1970-01-01T00:00:00Z (1 января 1970 года, 00:00 UTC). Для времени Unix до этой даты значение отрицательное.</param>
        <summary>Преобразует время в формате Unix, выраженное как количество миллисекунд, истекших с 1970-01-01T00:00:00Z, в значение <see cref="T:System.DateTimeOffset" />.</summary>
        <returns>Значение даты и времени, представляющее тот же момент, что и время в формате Unix.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.DateTimeOffset.Offset%2A> Значение свойства возвращаемого <xref:System.DateTimeOffset> экземпляр <xref:System.TimeSpan.Zero?displayProperty=nameWithType>, который представляет время. Преобразовать во время в определенного часового пояса, вызвав <xref:System.TimeZoneInfo.ConvertTime%28System.DateTimeOffset%2CSystem.TimeZoneInfo%29?displayProperty=nameWithType> метод.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          Значение параметра <paramref name="milliseconds" /> меньше –62 135 596 800 000.  
  
 - или -  
  
 Значение <paramref name="milliseconds" /> больше 253 402 300 799 999.</exception>
        <altmember cref="M:System.DateTimeOffset.FromUnixTimeSeconds(System.Int64)" />
        <altmember cref="M:System.DateTimeOffset.ToUnixTimeMilliseconds" />
      </Docs>
    </Member>
    <Member MemberName="FromUnixTimeSeconds">
      <MemberSignature Language="C#" Value="public static DateTimeOffset FromUnixTimeSeconds (long seconds);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTimeOffset FromUnixTimeSeconds(int64 seconds) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.FromUnixTimeSeconds(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromUnixTimeSeconds (seconds As Long) As DateTimeOffset" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTimeOffset FromUnixTimeSeconds(long seconds);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="seconds" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="seconds">Время Unix, выраженное как количество секунд, истекших с 1970-01-01T00:00:00Z (1 января 1970 года, 00:00 UTC). Для времени Unix до этой даты значение отрицательное.</param>
        <summary>Преобразует время в формате Unix, выраженное как количество секунд, истекших с 1970-01-01T00:00:00Z, в значение <see cref="T:System.DateTimeOffset" />.</summary>
        <returns>Значение даты и времени, представляющее тот же момент, что и время в формате Unix.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.DateTimeOffset.Offset%2A> Значение свойства возвращаемого <xref:System.DateTimeOffset> экземпляр <xref:System.TimeSpan.Zero?displayProperty=nameWithType>, который представляет время. Преобразовать во время в определенного часового пояса, вызвав <xref:System.TimeZoneInfo.ConvertTime%28System.DateTimeOffset%2CSystem.TimeZoneInfo%29?displayProperty=nameWithType> метод.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          Значение параметра <paramref name="seconds" /> меньше –62 135 596 800.  
  
 - или -  
  
 Значение <paramref name="seconds" /> больше 253 402 300 799.</exception>
        <altmember cref="M:System.DateTimeOffset.FromUnixTimeMilliseconds(System.Int64)" />
        <altmember cref="M:System.DateTimeOffset.ToUnixTimeSeconds" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Возвращает хэш-код для текущего объекта <see cref="T:System.DateTimeOffset" />.</summary>
        <returns>Хэш-код в виде 32-разрядного целого числа со знаком.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Hour">
      <MemberSignature Language="C#" Value="public int Hour { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Hour" />
      <MemberSignature Language="DocId" Value="P:System.DateTimeOffset.Hour" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Hour As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Hour { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает часовой компонент, представленный текущим объектом <see cref="T:System.DateTimeOffset" />.</summary>
        <value>Часовой компонент текущего объекта <see cref="T:System.DateTimeOffset" />. В этом свойстве используются 24-часовые часы; значение может меняться в диапазоне от 0 до 23.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.DateTimeOffset.Hour%2A> Не затрагивается значение <xref:System.DateTimeOffset.Offset%2A> свойства.  
  
 Можно также создать строковое представление <xref:System.DateTimeOffset> час компонента объекта путем вызова <xref:System.DateTimeOffset.ToString%2A> метод с «H», или описателей настраиваемого формата «HH».  
  
   
  
## Examples  
 В следующем примере отображается компонент часа <xref:System.DateTimeOffset> объекта тремя разными способами:  
  
-   Путем получения значения из <xref:System.DateTimeOffset.Hour%2A> свойство.  
  
-   Путем вызова <xref:System.DateTimeOffset.ToString%28System.String%29> метод с помощью описателя формата «H».  
  
-   Путем вызова <xref:System.DateTimeOffset.ToString%28System.String%29> описатель формата «HH» метод.  
  
 [!code-csharp[System.DateTimeOffset.Properties#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/cs/Properties.cs#6)]
 [!code-vb[System.DateTimeOffset.Properties#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/vb/Properties.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LocalDateTime">
      <MemberSignature Language="C#" Value="public DateTime LocalDateTime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime LocalDateTime" />
      <MemberSignature Language="DocId" Value="P:System.DateTimeOffset.LocalDateTime" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LocalDateTime As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime LocalDateTime { DateTime get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает значение <see cref="T:System.DateTime" />, представляющее местную дату и время в текущем объекте <see cref="T:System.DateTimeOffset" />.</summary>
        <value>Локальные дата и время текущего объекта <see cref="T:System.DateTimeOffset" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При необходимости <xref:System.DateTimeOffset.LocalDateTime%2A> свойство преобразует текущий <xref:System.DateTimeOffset> объекта даты и времени в дату и время локальной системы. Преобразование выполняется из двух этапов:  
  
1.  Свойство преобразует текущий <xref:System.DateTimeOffset> время объекта в формате UTC.  
  
2.  Затем оно преобразует UTC в местное время.  
  
 Существует недопустимое и неоднозначное время сопоставляются стандартного времени часового пояса локальной. (Тем не менее, преобразование может привести к возникновению аномалии: Если <xref:System.DateTimeOffset> значение, которое является производным от локального компьютера отражает неоднозначные дату и время, значение можно преобразовать в формат UTC, а затем снова в местное время, которое отличается от исходного.)  При выполнении этого преобразования, свойство применяется все правила коррекции в местном часовом поясе.  
  
 Это свойство возвращает дату и время координата <xref:System.DateTimeOffset> объекта, который может быть полезным при <xref:System.DateTimeOffset> для <xref:System.DateTime> преобразования. Помимо выполнения преобразования необходимое время, это свойство отличается от <xref:System.DateTimeOffset.DateTime%2A> свойство, задав значение <xref:System.DateTime.Kind%2A> свойство возвращаемого <xref:System.DateTime> объект <xref:System.DateTimeKind.Local?displayProperty=nameWithType>.  
  
   
  
## Examples  
 В следующем примере показано несколько преобразований из <xref:System.DateTimeOffset> значений в местное время в США. США. Обратите внимание, что за последние три значения времени являются неоднозначными; Это свойство сопоставляется все из них одно значение даты и времени в тихоокеанском стандартном часовом поясе.  
  
 [!code-csharp[System.DateTimeOffset.Properties#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/cs/Properties.cs#7)]
 [!code-vb[System.DateTimeOffset.Properties#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/vb/Properties.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.DateTimeOffset.DateTime" />
      </Docs>
    </Member>
    <Member MemberName="MaxValue">
      <MemberSignature Language="C#" Value="public static readonly DateTimeOffset MaxValue;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype System.DateTimeOffset MaxValue" />
      <MemberSignature Language="DocId" Value="F:System.DateTimeOffset.MaxValue" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MaxValue As DateTimeOffset " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly DateTimeOffset MaxValue;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Представляет максимально допустимое значение типа <see cref="T:System.DateTimeOffset" />. Это поле доступно только для чтения.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Значение этой константы — 12/31/9999 11:59:59 PM + 00:00.  
  
 <xref:System.DateTimeOffset.MaxValue> Свойство используется для определения ли новое значение <xref:System.DateTimeOffset> объекта или <xref:System.DateTimeOffset> значение, возвращенный арифметическая операция такое же, как или более ранних, чем это максимальное значение диапазона. Если это не так, метод вызывает <xref:System.ArgumentOutOfRangeException>. Любой <xref:System.DateTimeOffset> значение преобразуется в формате UTC, прежде чем метод сравнивает его с <xref:System.DateTimeOffset.MaxValue>.  Это означает, что <xref:System.DateTimeOffset> значение, Дата и время приближается максимальный диапазон, но смещение которого является отрицательным, может привести к исключению. Например, значение 12/31/9999 11:00 PM-02: 00 выходит за пределы диапазона, так как он является один час позже, чем <xref:System.DateTimeOffset.MaxValue> после преобразования в формат UTC.  
  
 В одних календарях, таких как <xref:System.Globalization.UmAlQuraCalendar>, поддерживает диапазон верхний даты, предшествующей <xref:System.DateTime.MaxValue>. В этих случаях при обращении к <xref:System.DateTime.MaxValue> в присваивания значений переменным или форматирование и операциях синтаксического анализа может вызывать <xref:System.ArgumentOutOfRangeException>. Вместо извлечения значение <xref:System.DateTime.MaxValue?displayProperty=nameWithType>, можно получить значение указанного языка и региональных параметров последнюю допустимое значение даты из <xref:System.Globalization.Calendar.MaxSupportedDateTime%2A?displayProperty=nameWithType> свойство.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <see cref="F:System.DateTime.MaxValue" /> находится вне диапазона текущего или заданного по умолчанию календаря культуры.</exception>
      </Docs>
    </Member>
    <Member MemberName="Millisecond">
      <MemberSignature Language="C#" Value="public int Millisecond { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Millisecond" />
      <MemberSignature Language="DocId" Value="P:System.DateTimeOffset.Millisecond" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Millisecond As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Millisecond { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает временной компонент миллисекунд, представленный текущим объектом <see cref="T:System.DateTimeOffset" />.</summary>
        <value>Компонент миллисекунд текущего объекта <see cref="T:System.DateTimeOffset" />, выраженный в виде целого числа в диапазоне от 0 до 999.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Можно также создать строковое представление <xref:System.DateTimeOffset> компонент миллисекунд объекта путем вызова <xref:System.DateTimeOffset.ToString%2A> метод с помощью описателя настраиваемого формата «fff».  
  
 Если вы полагаетесь на свойства, такие как <xref:System.DateTimeOffset.Now%2A> или <xref:System.DateTimeOffset.UtcNow%2A> точно отслеживать число миллисекунд, точность компонента миллисекунд времени зависит от разрешения системных часов. Windows NT 3.5 и более поздней версии и версии операционной системы Windows Vista разрешение часов является приблизительно соответствует 10 – 15 миллисекундам.  
  
   
  
## Examples  
 В следующем примере отображается количество миллисекунд <xref:System.DateTimeOffset> объекта с помощью настраиваемого описателя формата, прямой доступ к <xref:System.DateTimeOffset.Millisecond%2A> свойство.  
  
 [!code-csharp[System.DateTimeOffset.Properties#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/cs/Properties.cs#12)]
 [!code-vb[System.DateTimeOffset.Properties#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/vb/Properties.vb#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Minute">
      <MemberSignature Language="C#" Value="public int Minute { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Minute" />
      <MemberSignature Language="DocId" Value="P:System.DateTimeOffset.Minute" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Minute As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Minute { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает компонент минут, представленный текущим объектом <see cref="T:System.DateTimeOffset" />.</summary>
        <value>Компонент минут текущего объекта <see cref="T:System.DateTimeOffset" />, выраженный в виде целого числа в диапазоне от 0 до 59.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.DateTimeOffset.Minute%2A> Не затрагивается значение <xref:System.DateTimeOffset.Offset%2A> свойства.  
  
 Можно также создать строковое представление <xref:System.DateTimeOffset> компонент минут объекта путем вызова <xref:System.DateTimeOffset.ToString%2A> метод с описателей настраиваемого формата «mm» или «m».  
  
   
  
## Examples  
 В следующем примере отображается компонент минут <xref:System.DateTimeOffset> объекта тремя разными способами:  
  
-   Путем получения значения из <xref:System.DateTimeOffset.Minute%2A> свойство.  
  
-   Путем вызова <xref:System.DateTimeOffset.ToString%28System.String%29> метод с помощью описателя формата «m».  
  
-   Путем вызова <xref:System.DateTimeOffset.ToString%28System.String%29> метод с помощью описателя формата «mm».  
  
 [!code-csharp[System.DateTimeOffset.Properties#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/cs/Properties.cs#8)]
 [!code-vb[System.DateTimeOffset.Properties#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/vb/Properties.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinValue">
      <MemberSignature Language="C#" Value="public static readonly DateTimeOffset MinValue;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype System.DateTimeOffset MinValue" />
      <MemberSignature Language="DocId" Value="F:System.DateTimeOffset.MinValue" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MinValue As DateTimeOffset " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly DateTimeOffset MinValue;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Представляет наиболее раннее из возможных значений <see cref="T:System.DateTimeOffset" />. Это поле доступно только для чтения.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Значение этой константы — 1/1/0001 12:00:00 AM + 00:00.  
  
 <xref:System.DateTimeOffset.MinValue> Свойство используется для определения ли новое значение <xref:System.DateTimeOffset> объекта или <xref:System.DateTimeOffset> значение, возвращенный арифметическая операция такое же, как или более поздней, чем это минимальное значение диапазона. Если это не так, метод вызывает <xref:System.ArgumentOutOfRangeException>. Любой <xref:System.DateTimeOffset> значение преобразуется в формате UTC, прежде чем этот метод выполняет сравнение с <xref:System.DateTimeOffset.MinValue>.  Это означает, что <xref:System.DateTimeOffset> значение, Дата и время приближается минимальный диапазон, но смещение которого является положительным, может привести к исключению. Например, значение 1/1/0001 1:00:00 AM + 02:00 выходит за пределы диапазона, так как он является один час раньше <xref:System.DateTimeOffset.MinValue> после преобразования в формат UTC.  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.DateTimeOffset.ParseExact" />
      </Docs>
    </Member>
    <Member MemberName="Month">
      <MemberSignature Language="C#" Value="public int Month { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Month" />
      <MemberSignature Language="DocId" Value="P:System.DateTimeOffset.Month" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Month As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Month { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает компонент месяца даты, представленный текущим объектом <see cref="T:System.DateTimeOffset" />.</summary>
        <value>Компонент месяца текущего объекта <see cref="T:System.DateTimeOffset" />, выраженный в виде целого числа в диапазоне от 1 до 12.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.DateTimeOffset.Month%2A> Не затрагивается значение <xref:System.DateTimeOffset.Offset%2A> свойства.  
  
 Можно также создать строковое представление <xref:System.DateTimeOffset> компонента месяца объекта путем вызова <xref:System.DateTimeOffset.ToString%2A> метод с описателей настраиваемого формата «M» или «MM».  
  
   
  
## Examples  
 В следующем примере отображается компонент месяца <xref:System.DateTimeOffset> значение тремя разными способами:  
  
-   Путем получения значения из <xref:System.DateTimeOffset.Month%2A> свойство.  
  
-   Путем вызова <xref:System.DateTimeOffset.ToString%28System.String%29> метод с помощью описателя формата «M».  
  
-   Путем вызова <xref:System.DateTimeOffset.ToString%28System.String%29> метод с помощью описателя формата «MM».  
  
 [!code-csharp[System.DateTimeOffset.Properties#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/cs/Properties.cs#9)]
 [!code-vb[System.DateTimeOffset.Properties#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/vb/Properties.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Now">
      <MemberSignature Language="C#" Value="public static DateTimeOffset Now { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.DateTimeOffset Now" />
      <MemberSignature Language="DocId" Value="P:System.DateTimeOffset.Now" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Now As DateTimeOffset" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property DateTimeOffset Now { DateTimeOffset get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает объект <see cref="T:System.DateTimeOffset" />, для которого в качестве значения установлена текущая дата и время на текущем компьютере, а в качестве смещения — смещение местного времени от времени в формате UTC.</summary>
        <value>Объект <see cref="T:System.DateTimeOffset" />, у которого дата и время соответствуют текущему местному времени, а смещение равно смещению местного часового пояса от времени в формате UTC.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Точность компонента миллисекунд текущего местного времени зависит от разрешения системных часов. Windows NT 3.5 и более поздней версии и версии операционной системы Windows Vista разрешение часов является приблизительно соответствует 10 – 15 миллисекундам.  
  
   
  
## Examples  
 В следующем примере используется <xref:System.DateTimeOffset.Now%2A> свойство для получения текущей даты и времени и отображает его, используя каждый из [стандартных форматов даты и времени строки](~/docs/standard/base-types/standard-date-and-time-format-strings.md) поддерживаемые <xref:System.DateTimeOffset> тип.  
  
 [!code-csharp[System.DateTimeOffset.Now#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetimeoffset.now/cs/now1.cs#1)]
 [!code-vb[System.DateTimeOffset.Now#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetimeoffset.now/vb/now1.vb#1)]  
  
 В следующем примере используется <xref:System.DateTimeOffset.Now%2A> и <xref:System.DateTimeOffset.Millisecond%2A> свойства для определения разрешения системных часов. Он отображает время только при изменении значения компонента миллисекунд.  
  
 [!code-csharp[System.DateTimeOffset.Properties#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/cs/Properties.cs#11)]
 [!code-vb[System.DateTimeOffset.Properties#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/vb/Properties.vb#11)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.DateTimeOffset.UtcNow" />
      </Docs>
    </Member>
    <Member MemberName="Offset">
      <MemberSignature Language="C#" Value="public TimeSpan Offset { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan Offset" />
      <MemberSignature Language="DocId" Value="P:System.DateTimeOffset.Offset" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Offset As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan Offset { TimeSpan get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает смещение по времени от времени в формате UTC.</summary>
        <value>Разность между значением времени текущего объекта <see cref="T:System.DateTimeOffset" /> и временем в формате UTC.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Значение <xref:System.TimeSpan.Hours%2A> свойство возвращаемого <xref:System.TimeSpan> объекта может изменяться от-14 часов до 14 часов.  
  
 Значение <xref:System.DateTimeOffset.Offset%2A> свойство является точным до минуты.  
  
   
  
## Examples  
 В следующем примере используется <xref:System.DateTimeOffset.Offset%2A> свойство для отображения различие местное время в формате UTC.  
  
 [!code-csharp[System.DateTimeOffset.Properties#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/cs/Properties.cs#13)]
 [!code-vb[System.DateTimeOffset.Properties#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/vb/Properties.vb#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Addition">
      <MemberSignature Language="C#" Value="public static DateTimeOffset operator + (DateTimeOffset dateTimeOffset, TimeSpan timeSpan);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.DateTimeOffset op_Addition(valuetype System.DateTimeOffset dateTimeOffset, valuetype System.TimeSpan timeSpan) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.op_Addition(System.DateTimeOffset,System.TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTimeOffset operator +(DateTimeOffset dateTimeOffset, TimeSpan timeSpan);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateTimeOffset" Type="System.DateTimeOffset" />
        <Parameter Name="timeSpan" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="dateTimeOffset">Объект, к которому необходимо добавить интервал времени.</param>
        <param name="timeSpan">Добавляемый интервал времени.</param>
        <summary>Добавляет указанный интервал времени к объекту <see cref="T:System.DateTimeOffset" /> с заданной датой и временем и образует объект <see cref="T:System.DateTimeOffset" /> с новыми значениями даты и времени.</summary>
        <returns>Объект, значение которого является суммой значений <paramref name="dateTimeTz" /> и <paramref name="timeSpan" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.DateTimeOffset.op_Addition%2A> Метод определяет операцию сложения для <xref:System.DateTimeOffset> значения. Он включает следующий код:  
  
 [!code-csharp[System.DateTimeOffset.Operators#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Operators/cs/Operators.cs#1)]
 [!code-vb[System.DateTimeOffset.Operators#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Operators/vb/Operators.vb#1)]  
  
 Языки, которые не поддерживают пользовательские операторы и перегрузка операторов можно вызвать <xref:System.DateTimeOffset.Add%2A> метод вместо него.  
  
 Эквивалентный метод для этого оператора является <xref:System.DateTimeOffset.Add%28System.TimeSpan%29?displayProperty=nameWithType>.]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Итоговое значение <see cref="T:System.DateTimeOffset" /> меньше <see cref="F:System.DateTimeOffset.MinValue" />.  
  
 - или -  
  
 Итоговое значение <see cref="T:System.DateTimeOffset" /> больше <see cref="F:System.DateTimeOffset.MaxValue" />.</exception>
        <altmember cref="M:System.DateTimeOffset.Add(System.TimeSpan)" />
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (DateTimeOffset left, DateTimeOffset right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.DateTimeOffset left, valuetype System.DateTimeOffset right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.op_Equality(System.DateTimeOffset,System.DateTimeOffset)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (left As DateTimeOffset, right As DateTimeOffset) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(DateTimeOffset left, DateTimeOffset right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.DateTimeOffset" />
        <Parameter Name="right" Type="System.DateTimeOffset" />
      </Parameters>
      <Docs>
        <param name="left">Первый из сравниваемых объектов.</param>
        <param name="right">Второй из сравниваемых объектов.</param>
        <summary>Определяет, представляют ли два заданных объекта <see cref="T:System.DateTimeOffset" /> один и тот же момент времени.</summary>
        <returns>
          Значение <see langword="true" />, если объекты <see cref="T:System.DateTimeOffset" /> имеют одинаковые значения <see cref="P:System.DateTimeOffset.UtcDateTime" />; в противном случае — значение <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.DateTimeOffset.op_Equality%2A> Метод определяет операцию оператор равенства для <xref:System.DateTimeOffset> объектов. Он включает следующий код:  
  
 [!code-csharp[System.DateTimeOffset.Operators#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Operators/cs/Operators.cs#2)]
 [!code-vb[System.DateTimeOffset.Operators#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Operators/vb/Operators.vb#2)]  
  
 Перед вычислением `left` и `right` операндов равенства, оператор преобразует оба эти значения в формате UTC. Операция не эквивалентно следующему:  
  
 [!code-csharp[System.DateTimeOffset.Syntax#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Syntax/cs/Syntax.cs#4)]
 [!code-vb[System.DateTimeOffset.Syntax#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Syntax/vb/Syntax.vb#4)]  
  
 Другими словами <xref:System.DateTimeOffset.op_Equality%2A> метод определяет, является ли два <xref:System.DateTimeOffset> объекты представления одного момента времени. Сравнивает непосредственно ни даты и время, ни смещения. Чтобы определить, является ли два <xref:System.DateTimeOffset> объекты представляют одновременно и имеют одинаковое значение смещения, используйте <xref:System.DateTimeOffset.EqualsExact%2A> метод.  
  
 Эквивалентный метод для этого оператора <xref:System.DateTimeOffset.Equals%28System.DateTimeOffset%2CSystem.DateTimeOffset%29?displayProperty=nameWithType>]]></format>
        </remarks>
        <altmember cref="Overload:System.DateTimeOffset.Equals" />
      </Docs>
    </Member>
    <Member MemberName="op_GreaterThan">
      <MemberSignature Language="C#" Value="public static bool operator &gt; (DateTimeOffset left, DateTimeOffset right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_GreaterThan(valuetype System.DateTimeOffset left, valuetype System.DateTimeOffset right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.op_GreaterThan(System.DateTimeOffset,System.DateTimeOffset)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt; (left As DateTimeOffset, right As DateTimeOffset) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &gt;(DateTimeOffset left, DateTimeOffset right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.DateTimeOffset" />
        <Parameter Name="right" Type="System.DateTimeOffset" />
      </Parameters>
      <Docs>
        <param name="left">Первый из сравниваемых объектов.</param>
        <param name="right">Второй из сравниваемых объектов.</param>
        <summary>Определяет, больше ли (или меньше) значение одного указанного объекта <see cref="T:System.DateTimeOffset" /> значения другого указанного объекта <see cref="T:System.DateTimeOffset" />.</summary>
        <returns>
          Значение <see langword="true" /> если момент времени в значении <see cref="P:System.DateTimeOffset.UtcDateTime" /> параметра <paramref name="left" /> наступает позже, чем момент в значении <see cref="P:System.DateTimeOffset.UtcDateTime" /> параметра <paramref name="right" />; в противном случае — значение <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.DateTimeOffset.op_GreaterThan%2A> Метод определяет операцию больше оператора для <xref:System.DateTimeOffset> объектов. Он включает следующий код:  
  
 [!code-csharp[System.DateTimeOffset.Operators#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Operators/cs/Operators.cs#3)]
 [!code-vb[System.DateTimeOffset.Operators#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Operators/vb/Operators.vb#3)]  
  
 Языки, которые не поддерживают пользовательские операторы можно вызвать <xref:System.DateTimeOffset.Compare%2A> метод вместо него. Они также могут вызывать <xref:System.DateTimeOffset.op_GreaterThan%2A> метод напрямую, как приведенный ниже пример показывает.  
  
 [!code-vb[System.DateTimeOffset.Operators#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Operators/vb/Operators.vb#4)]  
  
 Перед вычислением `left` и `right` операндов, оператор преобразует оба эти значения в формате UTC. Операция не эквивалентно следующему:  
  
 [!code-csharp[System.DateTimeOffset.Syntax#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Syntax/cs/Syntax.cs#5)]
 [!code-vb[System.DateTimeOffset.Syntax#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Syntax/vb/Syntax.vb#5)]  
  
 Эквивалентный метод для этого оператора <xref:System.DateTimeOffset.Compare%28System.DateTimeOffset%2CSystem.DateTimeOffset%29?displayProperty=nameWithType>]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_GreaterThanOrEqual">
      <MemberSignature Language="C#" Value="public static bool operator &gt;= (DateTimeOffset left, DateTimeOffset right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_GreaterThanOrEqual(valuetype System.DateTimeOffset left, valuetype System.DateTimeOffset right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.op_GreaterThanOrEqual(System.DateTimeOffset,System.DateTimeOffset)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt;= (left As DateTimeOffset, right As DateTimeOffset) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &gt;=(DateTimeOffset left, DateTimeOffset right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.DateTimeOffset" />
        <Parameter Name="right" Type="System.DateTimeOffset" />
      </Parameters>
      <Docs>
        <param name="left">Первый из сравниваемых объектов.</param>
        <param name="right">Второй из сравниваемых объектов.</param>
        <summary>Определяет, действительно ли значение одного указанного объекта <see cref="T:System.DateTimeOffset" /> больше или равно значению другого указанного объекта <see cref="T:System.DateTimeOffset" />.</summary>
        <returns>
          <see langword="true" /> если значение <see cref="P:System.DateTimeOffset.UtcDateTime" /> параметра <paramref name="left" /> соответствует тому же или более позднему моменту времени, чем момент, заданный значением <see cref="P:System.DateTimeOffset.UtcDateTime" /> параметра <paramref name="right" />; в противном случае — значение <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.DateTimeOffset.op_GreaterThan%2A> Метод определяет операцию, которое больше или равно-оператор для <xref:System.DateTimeOffset> объектов. Он включает следующий код:  
  
 [!code-csharp[System.DateTimeOffset.Operators#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Operators/cs/Operators.cs#5)]
 [!code-vb[System.DateTimeOffset.Operators#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Operators/vb/Operators.vb#5)]  
  
 Языки, которые не поддерживают пользовательские операторы можно вызвать <xref:System.DateTimeOffset.Compare%2A> метод вместо него. В некоторых языках можно также вызвать <xref:System.DateTimeOffset.op_GreaterThanOrEqual%2A> метод напрямую, как приведенный ниже пример показывает.  
  
 [!code-vb[System.DateTimeOffset.Operators#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Operators/vb/Operators.vb#6)]  
  
 Перед вычислением `left` и `right` операндов, оператор преобразует оба эти значения в формате UTC. Операция не эквивалентно следующему:  
  
 [!code-csharp[System.DateTimeOffset.Syntax#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Syntax/cs/Syntax.cs#6)]
 [!code-vb[System.DateTimeOffset.Syntax#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Syntax/vb/Syntax.vb#6)]  
  
 Эквивалентный метод для этого оператора <xref:System.DateTimeOffset.Compare%28System.DateTimeOffset%2CSystem.DateTimeOffset%29?displayProperty=nameWithType>]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator DateTimeOffset (DateTime dateTime);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.DateTimeOffset op_Implicit(valuetype System.DateTime dateTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.op_Implicit(System.DateTime)~System.DateTimeOffset" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator DateTimeOffset(DateTime dateTime);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateTime" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="dateTime">Преобразуемый объект.</param>
        <summary>Определяется неявное преобразование объекта <see cref="T:System.DateTime" /> в объект <see cref="T:System.DateTimeOffset" />.</summary>
        <returns>Преобразованный объект.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.DateTimeOffset.op_Implicit%2A> Метод, который позволяет компилятору автоматически преобразовать <xref:System.DateTime> объект <xref:System.DateTimeOffset> объекта без оператора явного приведения (в C#) или вызов функции преобразования (в Visual Basic). Он определяет расширяющее преобразование, которое происходит без потери данных и не вызывает <xref:System.OverflowException>. <xref:System.DateTimeOffset.op_Implicit%2A> Метод выполняет код, аналогичный приведенному ниже:  
  
 [!code-csharp[System.DateTimeOffset.Operators#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Operators/cs/Operators.cs#7)]
 [!code-vb[System.DateTimeOffset.Operators#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Operators/vb/Operators.vb#7)]  
  
 Этот метод эквивалентен методу <xref:System.DateTimeOffset.%23ctor%2A> конструктор. Смещение результирующего <xref:System.DateTimeOffset> объект зависит от значения <xref:System.DateTime.Kind%2A?displayProperty=nameWithType> свойство `dateTime` параметр:  
  
-   Если значение <xref:System.DateTime.Kind%2A?displayProperty=nameWithType> свойство <xref:System.DateTimeKind.Utc?displayProperty=nameWithType>, Дата и время <xref:System.DateTimeOffset> объекта равна `dateTime`и его <xref:System.DateTimeOffset.Offset%2A> свойство имеет значение меньше 0.  
  
-   Если значение <xref:System.DateTime.Kind%2A?displayProperty=nameWithType> свойство <xref:System.DateTimeKind.Local?displayProperty=nameWithType> или <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>, Дата и время <xref:System.DateTimeOffset> объекта равна `dateTime`и его <xref:System.DateTimeOffset.Offset%2A> свойство имеет значение равное смещению текущего часового пояса локальной системы.  
  
 Эквивалентный метод для этого оператора <xref:System.DateTimeOffset.%23ctor%28System.DateTime%29?displayProperty=nameWithType>]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Дата и время в формате UTC, которые получаются в результате применения смещения, более раннего чем <see cref="F:System.DateTimeOffset.MinValue" />.  
  
 - или -  
  
 Дата и время в формате UTC, которые получаются в результате применения смещения, более позднего чем <see cref="F:System.DateTimeOffset.MaxValue" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (DateTimeOffset left, DateTimeOffset right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.DateTimeOffset left, valuetype System.DateTimeOffset right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.op_Inequality(System.DateTimeOffset,System.DateTimeOffset)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (left As DateTimeOffset, right As DateTimeOffset) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(DateTimeOffset left, DateTimeOffset right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.DateTimeOffset" />
        <Parameter Name="right" Type="System.DateTimeOffset" />
      </Parameters>
      <Docs>
        <param name="left">Первый из сравниваемых объектов.</param>
        <param name="right">Второй из сравниваемых объектов.</param>
        <summary>Определяет, указывают ли два заданных объекта <see cref="T:System.DateTimeOffset" /> на разные моменты времени.</summary>
        <returns>
          Значение <see langword="true" /> если параметры <paramref name="left" /> и <paramref name="right" /> обладают разными значениями свойства <see cref="P:System.DateTimeOffset.UtcDateTime" />; в противном случае — значение <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.DateTimeOffset.op_Inequality%2A> Метод определяет операцию неравенства для <xref:System.DateTimeOffset> объектов. Он всегда возвращает результат, противоположный из <xref:System.DateTimeOffset.op_Equality%2A>. <xref:System.DateTimeOffset.op_Inequality%2A> Метод включает следующий код:  
  
 [!code-csharp[System.DateTimeOffset.Operators#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Operators/cs/Operators.cs#8)]
 [!code-vb[System.DateTimeOffset.Operators#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Operators/vb/Operators.vb#8)]  
  
 Перед вычислением `left` и `right` операндов равенства, оператор преобразует оба эти значения в формате UTC. Операция не эквивалентно следующему:  
  
 [!code-csharp[System.DateTimeOffset.Syntax#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Syntax/cs/Syntax.cs#4)]
 [!code-vb[System.DateTimeOffset.Syntax#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Syntax/vb/Syntax.vb#4)]  
  
 Другими словами <xref:System.DateTimeOffset.op_Inequality%2A> метод определяет, является ли два <xref:System.DateTimeOffset> объекты представляют разные моменты времени. Сравнивает непосредственно ни даты и время, ни смещения.  
  
 Языки, которые не поддерживают пользовательские операторы можно вызвать <xref:System.DateTimeOffset.Compare%2A> метод вместо него. Кроме того, в некоторых языках можно также вызвать <xref:System.DateTimeOffset.op_Inequality%2A> метод напрямую, как приведенный ниже пример показывает.  
  
 [!code-vb[System.DateTimeOffset.Operators#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Operators/vb/Operators.vb#9)]  
  
 Эквивалентный метод для этого оператора <xref:System.DateTimeOffset.Compare%28System.DateTimeOffset%2CSystem.DateTimeOffset%29?displayProperty=nameWithType>]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_LessThan">
      <MemberSignature Language="C#" Value="public static bool operator &lt; (DateTimeOffset left, DateTimeOffset right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_LessThan(valuetype System.DateTimeOffset left, valuetype System.DateTimeOffset right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.op_LessThan(System.DateTimeOffset,System.DateTimeOffset)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt; (left As DateTimeOffset, right As DateTimeOffset) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &lt;(DateTimeOffset left, DateTimeOffset right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.DateTimeOffset" />
        <Parameter Name="right" Type="System.DateTimeOffset" />
      </Parameters>
      <Docs>
        <param name="left">Первый из сравниваемых объектов.</param>
        <param name="right">Второй из сравниваемых объектов.</param>
        <summary>Определяет, меньше ли значение одного указанного объекта <see cref="T:System.DateTimeOffset" />, чем значение другого указанного объекта <see cref="T:System.DateTimeOffset" />.</summary>
        <returns>
          Значение <see langword="true" /> если момент времени в значении <see cref="P:System.DateTimeOffset.UtcDateTime" /> параметра <paramref name="left" /> наступает раньше, чем момент в значении <see cref="P:System.DateTimeOffset.UtcDateTime" /> параметра <paramref name="right" />; в противном случае — значение <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.DateTimeOffset.op_LessThan%2A> Метод определяет операцию оператор «меньше» <xref:System.DateTimeOffset> объектов. Он включает следующий код:  
  
 [!code-csharp[System.DateTimeOffset.Operators#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Operators/cs/Operators.cs#10)]
 [!code-vb[System.DateTimeOffset.Operators#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Operators/vb/Operators.vb#10)]  
  
 Перед вычислением `left` и `right` операндов, оператор преобразует оба операнда в формате UTC. Операция не эквивалентно следующему:  
  
 [!code-csharp[System.DateTimeOffset.Syntax#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Syntax/cs/Syntax.cs#8)]
 [!code-vb[System.DateTimeOffset.Syntax#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Syntax/vb/Syntax.vb#8)]  
  
 Языки, которые не поддерживают пользовательские операторы можно вызвать <xref:System.DateTimeOffset.Compare%2A> метод вместо него. Кроме того, в некоторых языках можно также вызвать <xref:System.DateTimeOffset.op_LessThan%2A> метод напрямую, как приведенный ниже пример показывает.  
  
 [!code-vb[System.DateTimeOffset.Operators#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Operators/vb/Operators.vb#11)]  
  
 Эквивалентный метод для этого оператора <xref:System.DateTimeOffset.Compare%28System.DateTimeOffset%2CSystem.DateTimeOffset%29?displayProperty=nameWithType>]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_LessThanOrEqual">
      <MemberSignature Language="C#" Value="public static bool operator &lt;= (DateTimeOffset left, DateTimeOffset right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_LessThanOrEqual(valuetype System.DateTimeOffset left, valuetype System.DateTimeOffset right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.op_LessThanOrEqual(System.DateTimeOffset,System.DateTimeOffset)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt;= (left As DateTimeOffset, right As DateTimeOffset) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &lt;=(DateTimeOffset left, DateTimeOffset right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.DateTimeOffset" />
        <Parameter Name="right" Type="System.DateTimeOffset" />
      </Parameters>
      <Docs>
        <param name="left">Первый из сравниваемых объектов.</param>
        <param name="right">Второй из сравниваемых объектов.</param>
        <summary>Определяет, меньше ли значение одного указанного объекта <see cref="T:System.DateTimeOffset" />, чем значение другого указанного объекта <see cref="T:System.DateTimeOffset" />.</summary>
        <returns>
          Значение <see langword="true" /> если момент времени в значении <see cref="P:System.DateTimeOffset.UtcDateTime" /> параметра <paramref name="left" /> наступает раньше, чем момент в значении <see cref="P:System.DateTimeOffset.UtcDateTime" /> параметра <paramref name="right" />; в противном случае — значение <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.DateTimeOffset.op_LessThanOrEqual%2A> Метод определяет операцию меньше или равно оператору для <xref:System.DateTimeOffset> объектов. Он включает следующий код:  
  
 [!code-csharp[System.DateTimeOffset.Operators#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Operators/cs/Operators.cs#12)]
 [!code-vb[System.DateTimeOffset.Operators#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Operators/vb/Operators.vb#12)]  
  
 Языки, которые не поддерживают пользовательские операторы можно вызвать <xref:System.DateTimeOffset.Compare%2A> метод вместо него. В некоторых языках можно также вызвать <xref:System.DateTimeOffset.op_LessThanOrEqual%2A> метод напрямую, как приведенный ниже пример показывает.  
  
 [!code-vb[System.DateTimeOffset.Operators#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Operators/vb/Operators.vb#13)]  
  
 Перед вычислением `left` и `right` операндов, оператор преобразует оба эти значения в формате UTC. Операция не эквивалентно следующему:  
  
 [!code-csharp[System.DateTimeOffset.Syntax#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Syntax/cs/Syntax.cs#9)]
 [!code-vb[System.DateTimeOffset.Syntax#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Syntax/vb/Syntax.vb#9)]  
  
 Эквивалентный метод для этого оператора <xref:System.DateTimeOffset.Compare%28System.DateTimeOffset%2CSystem.DateTimeOffset%29?displayProperty=nameWithType>]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="op_Subtraction">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Вычитает указанный объект <see cref="T:System.DateTimeOffset" /> или <see cref="T:System.TimeSpan" /> из объекта <see cref="T:System.DateTimeOffset" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="op_Subtraction">
      <MemberSignature Language="C#" Value="public static TimeSpan operator - (DateTimeOffset left, DateTimeOffset right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.TimeSpan op_Subtraction(valuetype System.DateTimeOffset left, valuetype System.DateTimeOffset right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.op_Subtraction(System.DateTimeOffset,System.DateTimeOffset)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator - (left As DateTimeOffset, right As DateTimeOffset) As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static TimeSpan operator -(DateTimeOffset left, DateTimeOffset right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.DateTimeOffset" />
        <Parameter Name="right" Type="System.DateTimeOffset" />
      </Parameters>
      <Docs>
        <param name="left">Уменьшаемое.</param>
        <param name="right">Вычитаемое.</param>
        <summary>Вычитает объект <see cref="T:System.DateTimeOffset" /> из другого объекта и выдает интервал времени.</summary>
        <returns>Объект, представляющий разность значений <paramref name="left" /> и <paramref name="right" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.DateTimeOffset.op_Subtraction%2A> Метод определяет операцию вычитания для <xref:System.DateTimeOffset> объектов. Он включает следующий код:  
  
 [!code-csharp[System.DateTimeOffset.Operators#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Operators/cs/Operators.cs#14)]
 [!code-vb[System.DateTimeOffset.Operators#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Operators/vb/Operators.vb#14)]  
  
 Языки, которые не поддерживают пользовательские операторы и перегрузка операторов можно вызвать <xref:System.DateTimeOffset.Subtract%28System.DateTimeOffset%29?displayProperty=nameWithType> метод вместо него.  
  
 Эквивалентный метод для этого оператора является <xref:System.DateTimeOffset.Subtract%28System.TimeSpan%29?displayProperty=nameWithType>.]]></format>
        </remarks>
        <altmember cref="M:System.DateTimeOffset.Subtract(System.DateTimeOffset)" />
      </Docs>
    </Member>
    <Member MemberName="op_Subtraction">
      <MemberSignature Language="C#" Value="public static DateTimeOffset operator - (DateTimeOffset dateTimeOffset, TimeSpan timeSpan);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.DateTimeOffset op_Subtraction(valuetype System.DateTimeOffset dateTimeOffset, valuetype System.TimeSpan timeSpan) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.op_Subtraction(System.DateTimeOffset,System.TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTimeOffset operator -(DateTimeOffset dateTimeOffset, TimeSpan timeSpan);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateTimeOffset" Type="System.DateTimeOffset" />
        <Parameter Name="timeSpan" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="dateTimeOffset">Объект даты и времени, из которого вычитается интервал.</param>
        <param name="timeSpan">Вычитаемый интервал времени.</param>
        <summary>Вычитает заданный временной интервал из указанной даты и времени и выдает новую дату и время.</summary>
        <returns>Объект, равный значению <paramref name="dateTimeOffset" /> за вычетом значения <paramref name="timeSpan" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.DateTimeOffset.op_Subtraction%2A> Метод определяет операцию вычитания для <xref:System.DateTimeOffset> объектов. Он включает следующий код:  
  
 [!code-csharp[System.DateTimeOffset.Operators#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Operators/cs/Operators.cs#15)]
 [!code-vb[System.DateTimeOffset.Operators#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Operators/vb/Operators.vb#15)]  
  
 Языки, которые не поддерживают пользовательские операторы и перегрузка операторов можно вызвать <xref:System.DateTimeOffset.Subtract%28System.TimeSpan%29?displayProperty=nameWithType> метод вместо него.  
  
 Эквивалентный метод для этого оператора является <xref:System.DateTimeOffset.Subtract%28System.TimeSpan%29?displayProperty=nameWithType>.]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Результирующее значение <see cref="T:System.DateTimeOffset" /> меньше, чем значение <see cref="F:System.DateTimeOffset.MinValue" /> или больше, чем значение <see cref="F:System.DateTimeOffset.MaxValue" />.</exception>
        <altmember cref="M:System.DateTimeOffset.Subtract(System.TimeSpan)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Parse">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Преобразует заданное строковое представление даты и времени в его эквивалент <see cref="T:System.DateTimeOffset" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static DateTimeOffset Parse (string input);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTimeOffset Parse(string input) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.Parse(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (input As String) As DateTimeOffset" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTimeOffset Parse(System::String ^ input);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="input">Строка, содержащая дату и время, которые нужно преобразовать.</param>
        <summary>Преобразует заданное строковое представление даты, времени и смещения в их эквивалент <see cref="T:System.DateTimeOffset" />.</summary>
        <returns>Объект, эквивалентный дате и времени, содержащимся в параметре <paramref name="input" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.DateTimeOffset.Parse%28System.String%29> анализирует строку с тремя элементами, которые могут отображаться в любом порядке и разделены пробелами. Эти три элемента, как показано в следующей таблице.  
  
|Элемент|Пример|  
|-------------|-------------|  
|\<Дата >|"2/10/2007"|  
|\<Время >|«1:02:03 PM»|  
|\<Offset>|"-7:30"|  
  
 Несмотря на то, что каждый из этих элементов является необязательным, \<смещение > не может отображаться самостоятельно. Необходимо указать вместе с либо \<даты > или \<время >. Если \<даты > отсутствует значение по умолчанию значение — текущий день. Если \<время > отсутствует значение по умолчанию значение равно 12:00:00 AM. Если \<даты > уже установлен, но его год компонент включает в себя только две цифры, он преобразуется в год в зависимости от значения текущего календаря текущего языка и региональных параметров <xref:System.Globalization.Calendar.TwoDigitYearMax%2A?displayProperty=nameWithType> свойство. Если \<смещение > отсутствует значение по умолчанию значение равно смещению местного часового пояса. \<Смещение > может представлять отрицательное или положительное смещение от времени в формате UTC. В любом случае \<смещение > должен включать символ знака.  
  
 `input` Строка анализируется с использованием сведений о форматировании в <xref:System.Globalization.DateTimeFormatInfo> , инициализируемый для текущего языка и региональных параметров. Чтобы проанализировать строку, содержащую назначенный форматирования, не обязательно соответствуют форматирование текущего языка и региональных параметров, используйте <xref:System.DateTimeOffset.ParseExact%2A> метод и задать описатель формата.  
  
   
  
## Examples  
 В следующем примере вызывается <xref:System.DateTimeOffset.Parse%28System.String%29> метод для анализа нескольких строк даты и времени. Пример включает вывод 22 марта 2007 г., для системы с языком и региональными параметрами en-us.  
  
 [!code-csharp[System.DateTimeOffset.Parse#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Parse/cs/ParseExamples.cs#1)]
 [!code-vb[System.DateTimeOffset.Parse#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Parse/vb/ParseExamples.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Смещение больше 14 часов или меньше –14 часов.</exception>
        <exception cref="T:System.ArgumentNullException">
          Свойство <paramref name="input" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.FormatException">
          Параметр <paramref name="input" /> не содержит допустимое строковое представление даты и времени.  
  
 - или -  
  
 Параметр <paramref name="input" /> содержит строковое представление значения смещения без даты или времени.</exception>
        <altmember cref="Overload:System.DateTimeOffset.TryParse" />
        <altmember cref="Overload:System.DateTimeOffset.ParseExact" />
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static DateTimeOffset Parse (string input, IFormatProvider formatProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTimeOffset Parse(string input, class System.IFormatProvider formatProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.Parse(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (input As String, formatProvider As IFormatProvider) As DateTimeOffset" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTimeOffset Parse(System::String ^ input, IFormatProvider ^ formatProvider);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="formatProvider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="input">Строка, содержащая дату и время, которые нужно преобразовать.</param>
        <param name="formatProvider">Объект, предоставляющий сведения о форматировании значения <c>input</c>, связанные с языком и региональными параметрами.</param>
        <summary>Преобразует заданное строковое представление даты и времени в его эквивалент <see cref="T:System.DateTimeOffset" />, используя указанные сведения о форматировании, связанные с языком и региональными параметрами.</summary>
        <returns>Объект, эквивалентный дате и времени, содержащимся в параметре <paramref name="input" />, в соответствии с форматом, заданном параметром <paramref name="formatProvider" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод анализирует строку с тремя элементами, которые могут отображаться в любом порядке и разделены пробелами. В следующей таблице показаны эти три элемента.  
  
|Элемент|Пример|  
|-------------|-------------|  
|\<Дата >|"2/10/2007"|  
|\<Время >|«1:02:03 PM»|  
|\<Offset>|"-7:30"|  
  
 Несмотря на то, что каждый из этих элементов является необязательным, \<смещение > не может отображаться самостоятельно. Необходимо указать вместе с либо \<даты > или \<время >. Если \<даты > отсутствует значение по умолчанию значение — текущий день. Если \<даты > уже установлен, но его год компонент включает в себя только две цифры, он преобразуется в году в `provider` параметра текущий календарь основан на значение <xref:System.Globalization.Calendar.TwoDigitYearMax%2A?displayProperty=nameWithType> свойства. Если \<время > отсутствует значение по умолчанию значение равно 12:00:00 AM. Если \<смещение > отсутствует значение по умолчанию значение равно смещению местного часового пояса. \<Смещение > может представлять отрицательное или положительное смещение от времени в формате UTC. В любом случае \<смещение > должен включать символ знака.  
  
 Формат этих трех элементов определяется `formatProvider` параметр, который может быть одним из следующих:  
  
-   Объект <xref:System.Globalization.CultureInfo> , представляющий язык и региональные параметры, форматирование которого используется в `input` параметра. <xref:System.Globalization.DateTimeFormatInfo> Объект, возвращаемый <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> свойство определяет форматирования, используемые в `input`.  
  
-   Объект <xref:System.Globalization.DateTimeFormatInfo> объект, который определяет формат данных даты и времени.  
  
 Если `formatprovider` — `null`, <xref:System.Globalization.CultureInfo> используется объект, соответствующий текущего языка и региональных параметров.  
  
 Положительный или отрицательный знак, используемый в \<смещение > должен быть либо + или -. Не определяется <xref:System.Globalization.NumberFormatInfo.PositiveSign%2A> или <xref:System.Globalization.NumberFormatInfo.NegativeSign%2A> свойства <xref:System.Globalization.NumberFormatInfo> объекта `formatProvider` параметра.  
  
   
  
## Examples  
 В следующем примере анализируется даты и времени строки, которые отформатированы для региональных параметров fr-fr и отображает их с помощью локальной системы по умолчанию en-us язык и региональные параметры.  
  
 [!code-csharp[System.DateTimeOffset.Parse#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Parse/cs/ParseExamples.cs#2)]
 [!code-vb[System.DateTimeOffset.Parse#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Parse/vb/ParseExamples.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Смещение больше 14 часов или меньше –14 часов.</exception>
        <exception cref="T:System.ArgumentNullException">
          Свойство <paramref name="input" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.FormatException">
          Параметр <paramref name="input" /> не содержит допустимое строковое представление даты и времени.  
  
 - или -  
  
 Параметр <paramref name="input" /> содержит строковое представление значения смещения без даты или времени.</exception>
        <altmember cref="Overload:System.DateTimeOffset.TryParse" />
        <altmember cref="Overload:System.DateTimeOffset.ParseExact" />
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static DateTimeOffset Parse (ReadOnlySpan&lt;char&gt; input, IFormatProvider formatProvider = null, System.Globalization.DateTimeStyles styles = System.Globalization.DateTimeStyles.None);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTimeOffset Parse(valuetype System.ReadOnlySpan`1&lt;char&gt; input, class System.IFormatProvider formatProvider, valuetype System.Globalization.DateTimeStyles styles) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.Parse(System.ReadOnlySpan{System.Char},System.IFormatProvider,System.Globalization.DateTimeStyles)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (input As ReadOnlySpan(Of Char), Optional formatProvider As IFormatProvider = null, Optional styles As DateTimeStyles = System.Globalization.DateTimeStyles.None) As DateTimeOffset" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="formatProvider" Type="System.IFormatProvider" />
        <Parameter Name="styles" Type="System.Globalization.DateTimeStyles" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <param name="formatProvider">To be added.</param>
        <param name="styles">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static DateTimeOffset Parse (string input, IFormatProvider formatProvider, System.Globalization.DateTimeStyles styles);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTimeOffset Parse(string input, class System.IFormatProvider formatProvider, valuetype System.Globalization.DateTimeStyles styles) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.Parse(System.String,System.IFormatProvider,System.Globalization.DateTimeStyles)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (input As String, formatProvider As IFormatProvider, styles As DateTimeStyles) As DateTimeOffset" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTimeOffset Parse(System::String ^ input, IFormatProvider ^ formatProvider, System::Globalization::DateTimeStyles styles);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="formatProvider" Type="System.IFormatProvider" />
        <Parameter Name="styles" Type="System.Globalization.DateTimeStyles" />
      </Parameters>
      <Docs>
        <param name="input">Строка, содержащая дату и время, которые нужно преобразовать.</param>
        <param name="formatProvider">Объект, предоставляющий сведения о форматировании значения <c>input</c>, связанные с языком и региональными параметрами.</param>
        <param name="styles">Побитовое сочетание значений перечисления, которое определяет разрешенный формат параметра <c>input</c>. Обычно указывается значение <see cref="F:System.Globalization.DateTimeStyles.None" />.</param>
        <summary>Преобразует заданное строковое представление даты и времени в его эквивалент <see cref="T:System.DateTimeOffset" />, используя указанную информацию о форматировании, связанную с языком и региональными параметрами, а также заданный стиль форматирования.</summary>
        <returns>Объект, эквивалентный дате и времени, содержащимся в параметре <paramref name="input" />, в соответствии со значениями параметров <paramref name="formatProvider" /> и <paramref name="styles" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод анализирует строку с тремя элементами, которые могут отображаться в любом порядке и разделены пробелами. В следующей таблице показаны эти три элемента.  
  
|Элемент|Пример|  
|-------------|-------------|  
|\<Дата >|"2/10/2007"|  
|\<Время >|«1:02:03 PM»|  
|\<Offset>|"-7:30"|  
  
 Несмотря на то, что каждый из этих элементов является необязательным, \<смещение > не может отображаться самостоятельно. Необходимо указать вместе с либо \<даты > или \<время >. Если \<даты > отсутствует значение по умолчанию значение — текущий день. Если \<даты > уже установлен, но его год компонент включает в себя только две цифры, он преобразуется в году в `provider` параметра текущий календарь основан на значение <xref:System.Globalization.Calendar.TwoDigitYearMax%2A?displayProperty=nameWithType> свойства. Если \<время > отсутствует значение по умолчанию значение равно 12:00:00 AM. Если \<смещение > отсутствует значение по умолчанию значение равно смещению местного часового пояса или <xref:System.TimeSpan.Zero?displayProperty=nameWithType> при любом <xref:System.Globalization.DateTimeStyles.AdjustToUniversal?displayProperty=nameWithType> или <xref:System.Globalization.DateTimeStyles.AssumeUniversal?displayProperty=nameWithType> значение указывается в `styles` параметра. Если \<смещение > присутствует, он может представлять отрицательное или положительное смещение от времени в формате UTC. В любом случае \<смещение > должен включать символ знака.  
  
 Формат этих трех элементов определяется `formatProvider` параметр, который может быть одним из следующих:  
  
-   Объект <xref:System.Globalization.CultureInfo> , представляющий язык и региональные параметры, форматирование которого используется в `input` параметра. <xref:System.Globalization.DateTimeFormatInfo> Объект, возвращаемый <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> свойство определяет форматирования, используемые в `input`.  
  
-   Объект <xref:System.Globalization.DateTimeFormatInfo> объект, который определяет формат данных даты и времени.  
  
 Каждый элемент также может заключаться в начальные или конечные пробелы и \<Дата > и \<время > элементов может содержать внутренние пробелы (например, 6:00:00). Только \<смещение > компонент не может содержать внутренние пробелы.  
  
 Если `formatprovider` — `null`, <xref:System.Globalization.CultureInfo> используется объект, соответствующий текущего языка и региональных параметров.  
  
 Положительный или отрицательный знак, используемый в \<смещение > должен быть либо + или -. Не определяется <xref:System.Globalization.NumberFormatInfo.PositiveSign%2A> или <xref:System.Globalization.NumberFormatInfo.NegativeSign%2A> свойства <xref:System.Globalization.NumberFormatInfo> объект, возвращаемый `formatProvider` параметра.  
  
 В следующей таблице показаны члены <xref:System.Globalization.DateTimeStyles?displayProperty=nameWithType> перечисления, которые поддерживаются.  
  
|Элемент параметра DateTimeStyles|Описание:|  
|---------------------------|-----------------|  
|<xref:System.Globalization.DateTimeStyles.AdjustToUniversal>|Выполняет синтаксический анализ строки, представленной `input` и, если необходимо, преобразует его в формат UTC. Это эквивалентно синтаксический анализ строки и затем вызвать <xref:System.DateTimeOffset.ToUniversalTime%2A?displayProperty=nameWithType> метод возвращаемого <xref:System.DateTimeOffset> объекта.|  
|<xref:System.Globalization.DateTimeStyles.AllowInnerWhite>|Несмотря на допустимость, это значение игнорируется. Внутренние пробелы допустимо использовать в \<Дата > и \<время > элементов.|  
|<xref:System.Globalization.DateTimeStyles.AllowLeadingWhite>|Несмотря на допустимость, это значение игнорируется. За любым компонентом в анализируемой строке разрешается начальные пробелы.|  
|<xref:System.Globalization.DateTimeStyles.AllowTrailingWhite>|Несмотря на допустимость, это значение игнорируется. За любым компонентом в анализируемой строке разрешается конечные пробелы.|  
|<xref:System.Globalization.DateTimeStyles.AllowWhiteSpaces>|Это поведение установлено по умолчанию. Его нельзя переопределить, указав более строгий <xref:System.Globalization.DateTimeStyles> значение перечисления, например <xref:System.Globalization.DateTimeStyles.None?displayProperty=nameWithType>.|  
|<xref:System.Globalization.DateTimeStyles.AssumeLocal>|Указывает, что если `input` не имеет параметра \<смещение > элемент, должно быть указано смещение местного часового пояса. Это поведение по умолчанию <xref:System.DateTimeOffset.Parse%2A> метод.|  
|<xref:System.Globalization.DateTimeStyles.AssumeUniversal>|Указывает, что если `input` не имеет параметра \<смещение > элемент, должно быть указано смещение UTC (00:00).|  
|<xref:System.Globalization.DateTimeStyles.None>|Несмотря на допустимость, это значение игнорируется и не делает ничего.|  
|<xref:System.Globalization.DateTimeStyles.RoundtripKind>|Поскольку <xref:System.DateTimeOffset> структуры не включает `Kind` значение свойства, это значение игнорируется.|  
  
 Только <xref:System.Globalization.DateTimeStyles.NoCurrentDateDefault?displayProperty=nameWithType> значение не поддерживается. <xref:System.ArgumentException> Создается, если это значение включено в `styles` параметра.  
  
   
  
## Examples  
 В следующем примере показано влияние передачи <xref:System.Globalization.DateTimeStyles.AssumeLocal?displayProperty=nameWithType>, <xref:System.Globalization.DateTimeStyles.AssumeUniversal?displayProperty=nameWithType>, и <xref:System.Globalization.DateTimeStyles.AdjustToUniversal?displayProperty=nameWithType> значения `styles` параметр <xref:System.DateTimeOffset.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29> метода.  
  
 [!code-csharp[System.DateTimeOffset.Parse#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Parse/cs/ParseExamples.cs#3)]
 [!code-vb[System.DateTimeOffset.Parse#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Parse/vb/ParseExamples.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Смещение больше 14 часов или меньше –14 часов.  
  
 - или -  
  
 <paramref name="styles" /> не является допустимым значением <see cref="T:System.Globalization.DateTimeStyles" />.  
  
 - или -  
  
 Параметр <paramref name="styles" /> содержит недопустимое значение <see cref="T:System.Globalization.DateTimeStyles" />.  
  
 - или -  
  
 Параметр <paramref name="styles" /> содержит значения <see cref="T:System.Globalization.DateTimeStyles" />, совместное использование которых недопустимо.</exception>
        <exception cref="T:System.ArgumentNullException">
          Свойство <paramref name="input" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.FormatException">
          Параметр <paramref name="input" /> не содержит допустимое строковое представление даты и времени.  
  
 - или -  
  
 Параметр <paramref name="input" /> содержит строковое представление значения смещения без даты или времени.</exception>
        <altmember cref="Overload:System.DateTimeOffset.TryParse" />
        <altmember cref="Overload:System.DateTimeOffset.ParseExact" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ParseExact">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Преобразует заданное строковое представление даты и времени в его эквивалент <see cref="T:System.DateTimeOffset" />. Формат строкового представления должен полностью соответствовать заданному формату.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ParseExact">
      <MemberSignature Language="C#" Value="public static DateTimeOffset ParseExact (string input, string format, IFormatProvider formatProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTimeOffset ParseExact(string input, string format, class System.IFormatProvider formatProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.ParseExact(System.String,System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ParseExact (input As String, format As String, formatProvider As IFormatProvider) As DateTimeOffset" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTimeOffset ParseExact(System::String ^ input, System::String ^ format, IFormatProvider ^ formatProvider);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="formatProvider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="input">Строка, содержащая дату и время, которые нужно преобразовать.</param>
        <param name="format">Описатель формата, задающий ожидаемый формат <c>input</c>.</param>
        <param name="formatProvider">Объект, который предоставляет сведения о форматировании параметра <c>input</c> в зависимости от языка и региональных параметров.</param>
        <summary>Преобразует заданное строковое представление даты и времени в его эквивалент <see cref="T:System.DateTimeOffset" />, используя указанные сведения о форматировании, связанные с языком и региональными параметрами. Формат строкового представления должен полностью соответствовать заданному формату.</summary>
        <returns>Объект, эквивалентный дате и времени, содержащимся в параметре <paramref name="input" />, в соответствии со значениями параметров <paramref name="format" /> и <paramref name="formatProvider" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.DateTimeOffset.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%29> Метод анализирует строковое представление даты, которое должно быть в формате, заданном параметром `format` параметр. Он также требует, \<даты >, \<время >, и \<смещение > элементы строкового представления даты и времени отображаются в порядке, заданном свойством `format`. Если `input` строка не соответствует это `format` параметр, метод создает <xref:System.FormatException>.  Напротив <xref:System.DateTimeOffset.Parse%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType> метод анализирует строковое представление даты в любом из форматов, распознаваемые поставщика формата <xref:System.Globalization.DateTimeFormatInfo> объекта. <xref:System.DateTimeOffset.Parse%2A> также позволяет \<даты >, \<время >, и \<смещение > элементы строковое представление даты и времени, которые могут появляться в любом порядке.  
  
 `format` Параметр является строкой, содержащей либо один стандартный, одного или нескольких настраиваемых описателей формата, определяющих требуемый формат параметра `input` параметр. Дополнительные сведения о допустимых кодах форматирования см. в разделе [стандартной строки даты и времени формат](~/docs/standard/base-types/standard-date-and-time-format-strings.md) и [пользовательских строк даты и времени формат](~/docs/standard/base-types/custom-date-and-time-format-strings.md). Если `format` включает `z`, `zz`, или `zzz` настраиваемых описателей формата для указания, что смещение должны присутствовать в `input`, что смещение должно включать знак плюс или минус. Если знак отсутствует, метод вызывает <xref:System.FormatException>.  
  
 Если `format` требует `input` содержат даты, но не время, итоговый <xref:System.DateTimeOffset> объекту присваивается время, соответствующее полуночи (0: 00:00). Если `format` требует `input` содержал время без даты, итоговый <xref:System.DateTimeOffset> объекту присваивается текущая дата в локальной системе. Если `format` не требует `input` содержалось смещение, итоговый <xref:System.DateTimeOffset> объекту присваивается смещение часового пояса локальной системы.  
  
 Определенная дата и время символы и строки, используемые в `input` определяются `formatProvider` параметра, как точный формат из `input` Если `format` является строкой описателя стандартного формата. `formatProvider` Параметр может иметь одно из следующих:  
  
-   Объект <xref:System.Globalization.CultureInfo> , представляющий язык и региональные параметры на основе которой `input` интерпретируется. <xref:System.Globalization.DateTimeFormatInfo> Объект, возвращаемый его <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> свойство определяет символы и форматирование в `input`.  
  
-   Объект <xref:System.Globalization.DateTimeFormatInfo> объект, который определяет формат данных даты и времени.  
  
 Если `formatprovider` — `null`, <xref:System.Globalization.CultureInfo> используется объект, соответствующий текущего языка и региональных параметров.  
  
   
  
## Examples  
 В следующем примере используется <xref:System.DateTimeOffset.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType> метод с стандартные и настраиваемые описатели формата и инвариантный язык и региональные параметры для анализа нескольких строк даты и времени.  
  
 [!code-csharp[System.DateTimeOffset.ParseExact#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.ParseExact/cs/ParseExact.cs#1)]
 [!code-vb[System.DateTimeOffset.ParseExact#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.ParseExact/vb/ParseExact.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Смещение больше 14 часов или меньше –14 часов.</exception>
        <exception cref="T:System.ArgumentNullException">
          Свойство <paramref name="input" /> имеет значение <see langword="null" />.  
  
 - или -  
  
 Свойство <paramref name="format" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.FormatException">
          Параметр <paramref name="input" /> является пустой строкой ("").  
  
 - или -  
  
 Параметр <paramref name="input" /> не содержит допустимое строковое представление даты и времени.  
  
 - или -  
  
 Параметр <paramref name="format" /> равен пустой строке.  
  
 - или -  
  
 Компонент часов и обозначение AM/PM в <paramref name="input" /> не совпадают.</exception>
        <block subset="none" type="usage">
          <para>В [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)], <see cref="Overload:System.DateTimeOffset.ParseExact" /> вызывает исключение <see cref="T:System.FormatException" /> Если анализируемая строка содержит компонент часов и обозначение AM/PM, которых нет в соглашении. В [!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)] и более ранних версиях обозначение AM/PM игнорируется.</para>
        </block>
        <altmember cref="Overload:System.DateTimeOffset.TryParseExact" />
      </Docs>
    </Member>
    <Member MemberName="ParseExact">
      <MemberSignature Language="C#" Value="public static DateTimeOffset ParseExact (ReadOnlySpan&lt;char&gt; input, ReadOnlySpan&lt;char&gt; format, IFormatProvider formatProvider, System.Globalization.DateTimeStyles styles = System.Globalization.DateTimeStyles.None);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTimeOffset ParseExact(valuetype System.ReadOnlySpan`1&lt;char&gt; input, valuetype System.ReadOnlySpan`1&lt;char&gt; format, class System.IFormatProvider formatProvider, valuetype System.Globalization.DateTimeStyles styles) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.ParseExact(System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Char},System.IFormatProvider,System.Globalization.DateTimeStyles)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ParseExact (input As ReadOnlySpan(Of Char), format As ReadOnlySpan(Of Char), formatProvider As IFormatProvider, Optional styles As DateTimeStyles = System.Globalization.DateTimeStyles.None) As DateTimeOffset" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="format" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="formatProvider" Type="System.IFormatProvider" />
        <Parameter Name="styles" Type="System.Globalization.DateTimeStyles" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <param name="format">To be added.</param>
        <param name="formatProvider">To be added.</param>
        <param name="styles">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParseExact">
      <MemberSignature Language="C#" Value="public static DateTimeOffset ParseExact (ReadOnlySpan&lt;char&gt; input, string[] formats, IFormatProvider formatProvider, System.Globalization.DateTimeStyles styles = System.Globalization.DateTimeStyles.None);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTimeOffset ParseExact(valuetype System.ReadOnlySpan`1&lt;char&gt; input, string[] formats, class System.IFormatProvider formatProvider, valuetype System.Globalization.DateTimeStyles styles) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.ParseExact(System.ReadOnlySpan{System.Char},System.String[],System.IFormatProvider,System.Globalization.DateTimeStyles)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ParseExact (input As ReadOnlySpan(Of Char), formats As String(), formatProvider As IFormatProvider, Optional styles As DateTimeStyles = System.Globalization.DateTimeStyles.None) As DateTimeOffset" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="formats" Type="System.String[]" />
        <Parameter Name="formatProvider" Type="System.IFormatProvider" />
        <Parameter Name="styles" Type="System.Globalization.DateTimeStyles" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <param name="formats">To be added.</param>
        <param name="formatProvider">To be added.</param>
        <param name="styles">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParseExact">
      <MemberSignature Language="C#" Value="public static DateTimeOffset ParseExact (string input, string format, IFormatProvider formatProvider, System.Globalization.DateTimeStyles styles);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTimeOffset ParseExact(string input, string format, class System.IFormatProvider formatProvider, valuetype System.Globalization.DateTimeStyles styles) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.ParseExact(System.String,System.String,System.IFormatProvider,System.Globalization.DateTimeStyles)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ParseExact (input As String, format As String, formatProvider As IFormatProvider, styles As DateTimeStyles) As DateTimeOffset" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTimeOffset ParseExact(System::String ^ input, System::String ^ format, IFormatProvider ^ formatProvider, System::Globalization::DateTimeStyles styles);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="formatProvider" Type="System.IFormatProvider" />
        <Parameter Name="styles" Type="System.Globalization.DateTimeStyles" />
      </Parameters>
      <Docs>
        <param name="input">Строка, содержащая дату и время, которые нужно преобразовать.</param>
        <param name="format">Описатель формата, задающий ожидаемый формат <c>input</c>.</param>
        <param name="formatProvider">Объект, который предоставляет сведения о форматировании параметра <c>input</c> в зависимости от языка и региональных параметров.</param>
        <param name="styles">Побитовое сочетание значений перечисления, которое определяет разрешенный формат параметра <c>input</c>.</param>
        <summary>Преобразует заданное строковое представление даты и времени в его эквивалент <see cref="T:System.DateTimeOffset" />, используя заданный формат, указанные сведения о форматировании, связанные с языком и региональными параметрами, а также стиль. Формат строкового представления должен полностью соответствовать заданному формату.</summary>
        <returns>Объект, эквивалентный дате и времени, содержащимся в параметре <paramref name="input" />, в соответствии со значениями параметров <paramref name="format" />, <paramref name="formatProvider" /> и <paramref name="styles" /> parameters.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.DateTimeOffset.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType> Метод анализирует строковое представление даты, которое должно быть в формате, заданном параметром `format` параметр. Он также требует, \<даты >, \<время >, и \<смещение > элементы строкового представления даты и времени отображаются в порядке, заданном свойством `format`. Если `input` строка не соответствует шаблону `format` параметр с любыми изменениями, определяется `styles` параметр, метод создает <xref:System.FormatException>.  Напротив <xref:System.DateTimeOffset.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType> метод анализирует строковое представление даты в любом из форматов, распознаваемые поставщика формата <xref:System.Globalization.DateTimeFormatInfo> объекта. <xref:System.DateTimeOffset.Parse%2A> также позволяет \<даты >, \<время >, и \<смещение > элементы строковое представление даты и времени, которые могут появляться в любом порядке.  
  
 `format` Параметр является строкой, содержащей либо один стандартный, одного или нескольких настраиваемых описателей формата, определяющих необходимый шаблон `input` параметра. Дополнительные сведения о допустимых кодах форматирования см. в разделе [стандартной строки даты и времени формат](~/docs/standard/base-types/standard-date-and-time-format-strings.md) и [пользовательских строк даты и времени формат](~/docs/standard/base-types/custom-date-and-time-format-strings.md). Если `format` включает `z`, `zz`, или `zzz` настраиваемых описателей формата для указания, что смещение должны присутствовать в `input`, что смещение должно включать знак плюс или минус. Если знак отсутствует, метод вызывает <xref:System.FormatException>.  
  
 Если `format` требует `input` содержат даты, но не время, итоговый <xref:System.DateTimeOffset> объекту присваивается время, соответствующее полуночи (0: 00:00). Если `format` требует `input` содержал время без даты, итоговый <xref:System.DateTimeOffset> объекту присваивается текущая дата в локальной системе. Если `format` не требует `input` содержалось смещение, смещение результирующего <xref:System.DateTimeOffset> объект зависит от значения `styles` параметра. Если `styles` включает <xref:System.Globalization.DateTimeStyles.AssumeLocal>, назначенные смещению местного часового пояса <xref:System.DateTimeOffset> объекта. Если `styles` включает <xref:System.Globalization.DateTimeStyles.AssumeUniversal>, смещение по Гринвичу (UTC) или + 00:00, назначается <xref:System.DateTimeOffset> объекта. Если значение не указано, используется смещению местного часового пояса.  
  
 Определенная дата и время символы и строки, используемые в `input` определяются `formatProvider` параметра. Это справедливо и для точного формата параметра `input`, если `format` является строкой описателя стандартного формата. `formatProvider` Параметр может иметь одно из следующих:  
  
-   Объект <xref:System.Globalization.CultureInfo> , представляющий язык и региональные параметры на основе которой `input` интерпретируется. <xref:System.Globalization.DateTimeFormatInfo> Объект, возвращаемый <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> свойство определяет символы и форматирование в `input`.  
  
-   Объект <xref:System.Globalization.DateTimeFormatInfo> объект, который определяет формат данных даты и времени.  
  
 Если `formatprovider` — `null`, <xref:System.Globalization.CultureInfo> используется объект, соответствующий текущего языка и региональных параметров.  
  
 `styles` Параметр определяет, разрешены ли пробелы во входной строке указывает, а также порядок синтаксического анализа строки без явного компонент смещения. Все члены <xref:System.Globalization.DateTimeStyles> перечисления поддерживаются за исключением <xref:System.Globalization.DateTimeStyles.NoCurrentDateDefault>. В следующей таблице перечислены влияние каждого поддерживаемого члена.  
  
|Член `DateTimeStyles`|Поведение|  
|-----------------------------|--------------|  
|<xref:System.Globalization.DateTimeStyles.AdjustToUniversal>|Выполняет синтаксический анализ `input` и, если необходимо, преобразует его в формат UTC. Это эквивалентно синтаксический анализ строки и затем вызвать <xref:System.DateTimeOffset.ToUniversalTime%2A?displayProperty=nameWithType> метод возвращаемого <xref:System.DateTimeOffset> объекта.|  
|<xref:System.Globalization.DateTimeStyles.AssumeLocal>|Если `format` не требует `input` содержалось значение смещения, возвращенный <xref:System.DateTimeOffset> объекту присваивается смещение местного часового пояса. Это значение по умолчанию.|  
|<xref:System.Globalization.DateTimeStyles.AssumeUniversal>|Если `format` не требует `input` содержалось значение смещения, возвращенный <xref:System.DateTimeOffset> объекту присваивается смещение относительно UTC (+ 00:00).|  
|<xref:System.Globalization.DateTimeStyles.AllowInnerWhite>|Позволяет `input` для содержать внутренние пробелы, не предусмотренные `format`. Дополнительные пробелы могут располагаться между компонентами даты и времени, а также внутри отдельных компонентов и учитывается при анализе строки.|  
|<xref:System.Globalization.DateTimeStyles.AllowLeadingWhite>|Позволяет `input` для включения начальные пробелы, не предусмотренные `format`. Они учитываются при анализе строки.|  
|<xref:System.Globalization.DateTimeStyles.AllowTrailingWhite>|Позволяет `input` включать конечные пробелы, не предусмотренные `format`. Они учитываются при анализе строки.|  
|<xref:System.Globalization.DateTimeStyles.AllowWhiteSpaces>|Позволяет `input` содержать начальные, конечные и внутренние пробелы, не указан `format`. Все лишние пробелы, не указан в `format` при анализе строки игнорируются.|  
|<xref:System.Globalization.DateTimeStyles.None>|Указывает, что дополнительные пробелы не разрешен в `input`. Пробелы должны располагаться в точности так, как указано в `format`. Это поведение установлено по умолчанию.|  
|<xref:System.Globalization.DateTimeStyles.RoundtripKind>|Имеет смысл, так как <xref:System.DateTimeOffset> структуры не включает `Kind` свойство.|  
  
   
  
## Examples  
 В следующем примере используется <xref:System.DateTimeOffset.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType> метод стандартные и настраиваемые описатели формата, инвариантного языка и региональных параметров и различных <xref:System.Globalization.DateTimeStyles> значений для анализа нескольких строк даты и времени.  
  
 [!code-csharp[System.DateTimeOffset.ParseExact#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.ParseExact/cs/ParseExact.cs#2)]
 [!code-vb[System.DateTimeOffset.ParseExact#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.ParseExact/vb/ParseExact.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Смещение больше 14 часов или меньше –14 часов.  
  
 - или -  
  
 В параметре <paramref name="styles" /> содержится неподдерживаемое значение.  
  
 - или -  
  
 Параметр <paramref name="styles" /> содержит значения <see cref="T:System.Globalization.DateTimeStyles" />, совместное использование которых недопустимо.</exception>
        <exception cref="T:System.ArgumentNullException">
          Свойство <paramref name="input" /> имеет значение <see langword="null" />.  
  
 - или -  
  
 Свойство <paramref name="format" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.FormatException">
          Параметр <paramref name="input" /> является пустой строкой ("").  
  
 - или -  
  
 Параметр <paramref name="input" /> не содержит допустимое строковое представление даты и времени.  
  
 - или -  
  
 Параметр <paramref name="format" /> равен пустой строке.  
  
 - или -  
  
 Компонент часов и обозначение AM/PM в <paramref name="input" /> не совпадают.</exception>
        <block subset="none" type="usage">
          <para>В [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)], <see cref="Overload:System.DateTimeOffset.ParseExact" /> вызывает исключение <see cref="T:System.FormatException" /> Если анализируемая строка содержит компонент часов и обозначение AM/PM, которых нет в соглашении. В [!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)] и более ранних версиях обозначение AM/PM игнорируется.</para>
        </block>
        <altmember cref="Overload:System.DateTimeOffset.TryParseExact" />
      </Docs>
    </Member>
    <Member MemberName="ParseExact">
      <MemberSignature Language="C#" Value="public static DateTimeOffset ParseExact (string input, string[] formats, IFormatProvider formatProvider, System.Globalization.DateTimeStyles styles);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTimeOffset ParseExact(string input, string[] formats, class System.IFormatProvider formatProvider, valuetype System.Globalization.DateTimeStyles styles) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.ParseExact(System.String,System.String[],System.IFormatProvider,System.Globalization.DateTimeStyles)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ParseExact (input As String, formats As String(), formatProvider As IFormatProvider, styles As DateTimeStyles) As DateTimeOffset" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTimeOffset ParseExact(System::String ^ input, cli::array &lt;System::String ^&gt; ^ formats, IFormatProvider ^ formatProvider, System::Globalization::DateTimeStyles styles);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="formats" Type="System.String[]" />
        <Parameter Name="formatProvider" Type="System.IFormatProvider" />
        <Parameter Name="styles" Type="System.Globalization.DateTimeStyles" />
      </Parameters>
      <Docs>
        <param name="input">Строка, содержащая дату и время, которые нужно преобразовать.</param>
        <param name="formats">Массив описателей формата, в котором заданы требуемые форматы <c>input</c>.</param>
        <param name="formatProvider">Объект, который предоставляет сведения о форматировании параметра <c>input</c> в зависимости от языка и региональных параметров.</param>
        <param name="styles">Побитовое сочетание значений перечисления, которое определяет разрешенный формат параметра <c>input</c>.</param>
        <summary>Преобразует заданное строковое представление даты и времени в его эквивалент <see cref="T:System.DateTimeOffset" />, используя заданные форматы, указанные сведения о форматировании, связанные с языком и региональными параметрами, а также стиль. Формат строкового представления должен полностью соответствовать одному из заданных форматов.</summary>
        <returns>Объект, эквивалентный дате и времени, содержащимся в параметре <paramref name="input" />, в соответствии со значениями параметров <paramref name="formats" />, <paramref name="formatProvider" /> и <paramref name="styles" /> parameters.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.DateTimeOffset.ParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType> Метод анализирует строковое представление даты, не соответствует ни одному из шаблонов, назначенных `formats` параметра. Если `input` строка не соответствует ни одному из этих шаблонов с любыми вариациями определяется `styles` параметр, метод создает <xref:System.FormatException>. Помимо сравнение `input` для нескольких шаблонов форматирования, этот перегруженный метод работает идентично <xref:System.DateTimeOffset.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType> метод.  
  
 `formats` Параметр является массивом строк, элементы которого содержат один стандартный описатель формата или одного или нескольких настраиваемых описателей формата, определяющих возможные шаблон `input` параметра. При вызове метода `input` должен полностью соответствовать одному из этих шаблонов. Дополнительные сведения о допустимых кодах форматирования см. в разделе [стандартной строки даты и времени формат](~/docs/standard/base-types/standard-date-and-time-format-strings.md) и [пользовательских строк даты и времени формат](~/docs/standard/base-types/custom-date-and-time-format-strings.md). Если сопоставляемый элемент `formats` включает `z`, `zz`, или `zzz` настраиваемых описателей формата для указания, что смещение должны присутствовать в `input`, что смещение должно включать знак плюс или минус. Если знак отсутствует, метод вызывает <xref:System.FormatException>.  
  
> [!IMPORTANT]
>  С помощью `formats` параметр этой перегрузки для задания нескольких форматов может помочь снизить степень недовольства, многие пользователи сталкиваются при вводе значения даты и времени. В частности возможность задать несколько шаблонов ввода позволяет приложению обрабатывать представления даты и времени, которые могут присутствовать или отсутствовать начальные нули в месяцев, дней, часов, минут и секунд. Иллюстрация приведена в примере.  
  
 Если сопоставляемый элемент `formats` требует `input` содержат даты, но не время, полученный <xref:System.DateTimeOffset> объекту присваивается время, соответствующее полуночи (0: 00:00). Если сопоставляемый элемент `formats` требует `input` содержал время без даты, полученный <xref:System.DateTimeOffset> объекту присваивается текущая дата в локальной системе. Если сопоставляемый элемент `formats` не требует `input` содержалось смещение, смещение результирующего <xref:System.DateTimeOffset> объект зависит от значения `styles` параметра. Если `styles` включает <xref:System.Globalization.DateTimeStyles.AssumeLocal>, назначенные смещению местного часового пояса <xref:System.DateTimeOffset> объекта. Если `styles` включает <xref:System.Globalization.DateTimeStyles.AssumeUniversal>, смещение по Гринвичу (UTC) или + 00:00, назначается <xref:System.DateTimeOffset> объекта. Если значение не указано, используется смещению местного часового пояса.  
  
 Определенная дата и время символы и строки, используемые в `input` определяются `formatProvider` параметра. Это справедливо и для точного формата параметра `input`, если соответствующий элемент `formats` является строкой описателя стандартного формата. `formatProvider` Параметр может иметь одно из следующих:  
  
-   Объект <xref:System.Globalization.CultureInfo> , представляющий язык и региональные параметры на основе которой `input` интерпретируется. <xref:System.Globalization.DateTimeFormatInfo> Объект, возвращаемый <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> свойство определяет символы и форматирование в `input`.  
  
-   Объект <xref:System.Globalization.DateTimeFormatInfo> объект, который определяет формат данных даты и времени.  
  
 Если `formatprovider` — `null`, <xref:System.Globalization.CultureInfo> используется объект, соответствующий текущего языка и региональных параметров.  
  
 `styles` Параметр определяет, разрешены ли пробелы во входной строке указывает, а также порядок синтаксического анализа строки без явного компонент смещения. Все члены <xref:System.Globalization.DateTimeStyles> перечисления поддерживаются за исключением <xref:System.Globalization.DateTimeStyles.NoCurrentDateDefault>. В следующей таблице перечислены влияние каждого поддерживаемого члена.  
  
|Член `DateTimeStyles`|Поведение|  
|-----------------------------|--------------|  
|<xref:System.Globalization.DateTimeStyles.AdjustToUniversal>|Выполняет синтаксический анализ `input` и, если необходимо, преобразует его в формат UTC. Это эквивалентно синтаксический анализ строки и затем вызвать <xref:System.DateTimeOffset.ToUniversalTime%2A?displayProperty=nameWithType> метод возвращаемого <xref:System.DateTimeOffset> объекта.|  
|<xref:System.Globalization.DateTimeStyles.AssumeLocal>|Если сопоставляемый элемент `formats` не требует `input` содержалось значение смещения, возвращенный <xref:System.DateTimeOffset> объекту присваивается смещение местного часового пояса. Это значение по умолчанию.|  
|<xref:System.Globalization.DateTimeStyles.AssumeUniversal>|Если сопоставляемый элемент `formats` не требует `input` содержалось значение смещения, возвращенный <xref:System.DateTimeOffset> объекту присваивается смещение относительно UTC (+ 00:00).|  
|<xref:System.Globalization.DateTimeStyles.AllowInnerWhite>|Позволяет `input` для содержать внутренние пробелы, не предусмотренные `format`. Дополнительные пробелы могут располагаться между компонентами даты и времени, а также внутри отдельных компонентов (за исключением смещения) и учитывается при анализе строки.|  
|<xref:System.Globalization.DateTimeStyles.AllowLeadingWhite>|Позволяет `input` для включения начальные пробелы, не предусмотренные `formats`. Они учитываются при анализе строки.|  
|<xref:System.Globalization.DateTimeStyles.AllowTrailingWhite>|Позволяет `input` включать конечные пробелы, не предусмотренные `formats`. Они учитываются при анализе строки.|  
|<xref:System.Globalization.DateTimeStyles.AllowWhiteSpaces>|Позволяет `input` содержать начальные, конечные и внутренние пробелы, не указан `formats`. Все лишние пробелы, не указан в сопоставляемом в `formats` при анализе строки игнорируются.|  
|<xref:System.Globalization.DateTimeStyles.None>|Указывает, что дополнительные пробелы не разрешен в `input`. Пробелы должны располагаться в точности так, как указано в конкретный элемент `formats` для успешного сопоставления. Это поведение установлено по умолчанию.|  
|<xref:System.Globalization.DateTimeStyles.RoundtripKind>|Имеет смысл, так как <xref:System.DateTimeOffset> структуры не включает `Kind` свойство.|  
  
   
  
## Examples  
 Следующий пример определяет несколько входных форматах для строковое представление даты и времени и смещения, а затем передает строку, вводимые пользователем для <xref:System.DateTimeOffset.ParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType> метод.  
  
 [!code-csharp[System.DateTimeOffset.ParseExact#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.ParseExact/cs/ParseExact.cs#3)]
 [!code-vb[System.DateTimeOffset.ParseExact#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.ParseExact/vb/ParseExact.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Смещение больше 14 часов или меньше –14 часов.  
  
 - или -  
  
 Параметр <paramref name="styles" /> содержит недопустимое значение.  
  
 - или -  
  
 Параметр <paramref name="styles" /> содержит значения <see cref="T:System.Globalization.DateTimeStyles" />, совместное использование которых недопустимо.</exception>
        <exception cref="T:System.ArgumentNullException">
          Свойство <paramref name="input" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.FormatException">
          Параметр <paramref name="input" /> является пустой строкой ("").  
  
 - или -  
  
 Параметр <paramref name="input" /> не содержит допустимое строковое представление даты и времени.  
  
 - или -  
  
 Ни один из элементов <paramref name="formats" /> не содержит допустимый описатель формата.  
  
 - или -  
  
 Компонент часов и обозначение AM/PM в <paramref name="input" /> не совпадают.</exception>
        <block subset="none" type="usage">
          <para>В [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)], <see cref="Overload:System.DateTimeOffset.ParseExact" /> вызывает исключение <see cref="T:System.FormatException" /> Если анализируемая строка содержит компонент часов и обозначение AM/PM, которых нет в соглашении. В [!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)] и более ранних версиях обозначение AM/PM игнорируется.</para>
        </block>
        <altmember cref="Overload:System.DateTimeOffset.TryParseExact" />
      </Docs>
    </Member>
    <Member MemberName="Second">
      <MemberSignature Language="C#" Value="public int Second { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Second" />
      <MemberSignature Language="DocId" Value="P:System.DateTimeOffset.Second" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Second As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Second { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает компонент секунд по показаниям часов, представленный текущим объектом <see cref="T:System.DateTimeOffset" />.</summary>
        <value>Компонент секунд текущего объекта <see cref="T:System.DateTimeOffset" />, выраженный в виде целочисленного значения в диапазоне от 0 до 59.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.DateTimeOffset.Second%2A> Не затрагивается значение <xref:System.DateTimeOffset.Offset%2A> свойства.  
  
 Можно также создать строковое представление <xref:System.DateTimeOffset> второго компонента объекта путем вызова <xref:System.DateTimeOffset.ToString%2A> метод с «s», то описателей настраиваемого формата «ss».  
  
   
  
## Examples  
 В следующем примере отображаются второй компонент <xref:System.DateTimeOffset> объекта тремя разными способами:  
  
-   Путем получения значения из <xref:System.DateTimeOffset.Second%2A> свойство.  
  
-   Путем вызова <xref:System.DateTimeOffset.ToString%28System.String%29> метод с помощью описателя формата «s».  
  
-   Путем вызова <xref:System.DateTimeOffset.ToString%28System.String%29> описатель формата «ss» метод.  
  
 [!code-csharp[System.DateTimeOffset.Properties#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/cs/Properties.cs#14)]
 [!code-vb[System.DateTimeOffset.Properties#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/vb/Properties.vb#14)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Subtract">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Вычитает указанное время или длительность из текущего объекта <see cref="T:System.DateTimeOffset" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Subtract">
      <MemberSignature Language="C#" Value="public TimeSpan Subtract (DateTimeOffset value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.TimeSpan Subtract(valuetype System.DateTimeOffset value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.Subtract(System.DateTimeOffset)" />
      <MemberSignature Language="VB.NET" Value="Public Function Subtract (value As DateTimeOffset) As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TimeSpan Subtract(DateTimeOffset value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.DateTimeOffset" />
      </Parameters>
      <Docs>
        <param name="value">Объект, представляющий вычитаемое значение.</param>
        <summary>Вычитает значение <see cref="T:System.DateTimeOffset" />, представляющее определенную дату и время, из текущего объекта <see cref="T:System.DateTimeOffset" />.</summary>
        <returns>Объект, задающий интервал между двумя объектами <see cref="T:System.DateTimeOffset" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод преобразует оба <xref:System.DateTimeOffset> объектов в формате UTC перед вычислением интервала времени, разделяющий их. Эта функция удаляет возможное влияние на результат сравнения могут быть разные смещения относительно времени UTC.  
  
> [!NOTE]
>  Для языков, поддерживающих настраиваемые операторы можно также выполнять вычитание даты и времени с помощью оператора вычитания. Дополнительные сведения см. в разделе <xref:System.DateTimeOffset.op_Subtraction%2A> метод.  
  
 Так как ни один из текущего <xref:System.DateTimeOffset> объекта ни `value` параметр представляет дату и время в определенного часового пояса, <xref:System.DateTimeOffset.Subtract%28System.DateTimeOffset%29> метод не учитывает правила коррекции для определенного часового пояса, при его Вычитает значения даты и времени.  
  
   
  
## Examples  
 В следующем примере демонстрируется вычитания, использующий <xref:System.DateTimeOffset.Subtract%28System.DateTimeOffset%29> метод.  
  
 [!code-csharp[System.DateTimeOffset.Methods#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Methods/cs/Methods.cs#13)]
 [!code-vb[System.DateTimeOffset.Methods#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Methods/vb/Methods.vb#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Subtract">
      <MemberSignature Language="C#" Value="public DateTimeOffset Subtract (TimeSpan value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.DateTimeOffset Subtract(valuetype System.TimeSpan value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.Subtract(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Function Subtract (value As TimeSpan) As DateTimeOffset" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTimeOffset Subtract(TimeSpan value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="value">Вычитаемый интервал времени.</param>
        <summary>Вычитает указанный интервал времени из текущего объекта <see cref="T:System.DateTimeOffset" />.</summary>
        <returns>Объект, значение которого равно дате и времени, представленным текущим объектом <see cref="T:System.DateTimeOffset" />, за вычетом интервала времени, представленного параметром <paramref name="value" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Можно использовать <xref:System.DateTimeOffset.Subtract%2A> метод Вычитаемый интервал времени (дней, часов, минут, секунд или миллисекунд) в одной операции более одного типа. Его поведение идентично <xref:System.DateTimeOffset.op_Subtraction%28System.DateTimeOffset%2CSystem.TimeSpan%29> метод, который определяет оператор вычитания. <xref:System.DateTimeOffset> Структура также поддерживает добавление специализированные методы (такие как <xref:System.DateTimeOffset.AddDays%2A>, <xref:System.DateTimeOffset.AddHours%2A>, и <xref:System.DateTimeOffset.AddMinutes%2A>), которые позволяют выполнить вычитание, назначив отрицательное значение для параметра метода.  
  
> [!NOTE]
>  Этот метод возвращает новый <xref:System.DateTimeOffset> объекта. Не изменяйте значение текущего объекта путем добавления `timeSpan` даты и времени.  
  
 <xref:System.DateTimeOffset.Subtract%2A> Метод не влияет на значение <xref:System.DateTimeOffset> объекта <xref:System.DateTimeOffset.Offset%2A> свойство. Возвращенный <xref:System.DateTimeOffset> объект имеет одинаковое смещение, что и исходный объект.  
  
 Так как текущий <xref:System.DateTimeOffset> объект не представляет дату и время в определенного часового пояса, <xref:System.DateTimeOffset.Subtract%28System.TimeSpan%29> метод не учитывает правила коррекции для определенного часового пояса, при выполнении операции вычитания.  
  
   
  
## Examples  
 В следующем примере демонстрируется вычитания, использующий <xref:System.DateTimeOffset.Subtract%2A> метод.  
  
 [!code-csharp[System.DateTimeOffset.Methods#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Methods/cs/Methods.cs#14)]
 [!code-vb[System.DateTimeOffset.Methods#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Methods/vb/Methods.vb#14)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Итоговое значение <see cref="T:System.DateTimeOffset" /> меньше <see cref="F:System.DateTimeOffset.MinValue" />.  
  
 - или -  
  
 Итоговое значение <see cref="T:System.DateTimeOffset" /> больше <see cref="F:System.DateTimeOffset.MaxValue" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.IComparable.CompareTo">
      <MemberSignature Language="C#" Value="int IComparable.CompareTo (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.IComparable.CompareTo(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.System#IComparable#CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function CompareTo (obj As Object) As Integer Implements IComparable.CompareTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.IComparable.CompareTo(System::Object ^ obj) = IComparable::CompareTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">Объект, который требуется сравнить с текущим объектом <see cref="T:System.DateTimeOffset" />.</param>
        <summary>Сравнивает значение текущего объекта <see cref="T:System.DateTimeOffset" /> с другим объектом того же типа.</summary>
        <returns>32-разрядное целое число со знаком, позволяющее определить, больше, меньше или равно значение текущего объекта <see cref="T:System.DateTimeOffset" /> значению параметра <paramref name="obj" />. Возвращаемые значения метода интерпретируются следующим образом:  
  
 <list type="table"><listheader><term> Возвращаемое значение  
  
 </term><description> Описание  
  
 </description></listheader><item><term> Меньше нуля  
  
 </term><description> Текущий объект <see cref="T:System.DateTimeOffset" /> меньше параметра <paramref name="obj" /> (заданный в нем момент времени наступает раньше).  
  
 </description></item><item><term> Нуль  
  
 </term><description> Текущий объект <see cref="T:System.DateTimeOffset" /> равен параметру <paramref name="obj" /> (соответствует тому же моменту времени).  
  
 </description></item><item><term> Больше нуля  
  
 </term><description> Текущий объект <see cref="T:System.DateTimeOffset" /> больше параметра <paramref name="obj" /> (заданный в нем момент времени наступает позже).  
  
 </description></item></list></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.IDeserializationCallback.OnDeserialization">
      <MemberSignature Language="C#" Value="void IDeserializationCallback.OnDeserialization (object sender);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(object sender) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub OnDeserialization (sender As Object) Implements IDeserializationCallback.OnDeserialization" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(System::Object ^ sender) = System::Runtime::Serialization::IDeserializationCallback::OnDeserialization;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="sender">Объект, который инициализирует обратный вызов. Данная функциональная возможность для этого параметра в настоящее время не реализуется.</param>
        <summary>Выполняется после завершения десериализации объекта.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.ISerializable.GetObjectData">
      <MemberSignature Language="C#" Value="void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.ISerializable.GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Sub GetObjectData (info As SerializationInfo, context As StreamingContext) Implements ISerializable.GetObjectData" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.ISerializable.GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context) = System::Runtime::Serialization::ISerializable::GetObjectData;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">Объект, который требуется заполнить данными.</param>
        <param name="context">Конечный объект для этой сериализации (см. раздел, посвященный <see cref="T:System.Runtime.Serialization.StreamingContext" />).</param>
        <summary>Передает объекту <see cref="T:System.Runtime.Serialization.SerializationInfo" /> данные, необходимые для сериализации текущего объекта <see cref="T:System.DateTimeOffset" />.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="info" /> имеет значение <see langword="null" />.</exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">требуется полное доверие для непосредственно вызывающего метода. Этот член не может использоваться частично доверенным или прозрачным кодом.</permission>
      </Docs>
    </Member>
    <Member MemberName="Ticks">
      <MemberSignature Language="C#" Value="public long Ticks { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Ticks" />
      <MemberSignature Language="DocId" Value="P:System.DateTimeOffset.Ticks" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Ticks As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long Ticks { long get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает количество тактов, представляющее местную дату и время в текущем объекте <see cref="T:System.DateTimeOffset" /> по показаниям часов.</summary>
        <value>Число тактов во времени объекта <see cref="T:System.DateTimeOffset" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.DateTimeOffset.Ticks%2A> Не затрагивается значение <xref:System.DateTimeOffset.Offset%2A> свойства.  
  
 Значение <xref:System.DateTimeOffset.Ticks%2A> свойство представляет количество 100-наносекундных интервалов, прошедших с полуночи в 12:00:00 1 января 0001 года (значение <xref:System.DateTimeOffset.MinValue>). Он не включает тактов, которое будет добавлено по корректировочных секунд. Одна наносекунда равна одной миллиардной доли секунды; существует 10 миллионов тактов в секунду. Значение <xref:System.DateTimeOffset.Ticks%2A> свойство лежит в диапазоне от `DateTimeOffset.MinValue.Ticks` для `DateTimeOffset.MaxValue.Ticks`.  
  
 Количество тактов, можно назначить <xref:System.DateTimeOffset> с использованием <xref:System.DateTimeOffset.%23ctor%28System.Int64%2CSystem.TimeSpan%29> перегрузку конструктора.  
  
   
  
## Examples  
 В следующем примере инициализируется <xref:System.DateTimeOffset> объектов путем определения приблизительного количества тактов в дате 1 июля 2008 года 1:23:07. Затем он отображает дату и количество тактов, представленного указанной даты в консоль.  
  
 [!code-csharp[System.DateTimeOffset.Properties#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/cs/Properties.cs#15)]
 [!code-vb[System.DateTimeOffset.Properties#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/vb/Properties.vb#15)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.DateTimeOffset.UtcDateTime" />
      </Docs>
    </Member>
    <Member MemberName="TimeOfDay">
      <MemberSignature Language="C#" Value="public TimeSpan TimeOfDay { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan TimeOfDay" />
      <MemberSignature Language="DocId" Value="P:System.DateTimeOffset.TimeOfDay" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TimeOfDay As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan TimeOfDay { TimeSpan get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает время суток текущего объекта <see cref="T:System.DateTimeOffset" />.</summary>
        <value>Время, истекшее с полуночи на текущую дату.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.DateTimeOffset.TimeOfDay%2A> Не затрагивается значение <xref:System.DateTimeOffset.Offset%2A> свойства.  
  
 <xref:System.DateTimeOffset.TimeOfDay%2A> Свойство возвращает компонент времени <xref:System.DateTimeOffset> объекта в виде <xref:System.TimeSpan> объекта. Это эквивалентно <xref:System.DateTime.TimeOfDay%2A?displayProperty=nameWithType> свойство.  
  
   
  
## Examples  
 В следующем примере используется <xref:System.DateTimeOffset.TimeOfDay%2A> свойство для извлечения времени и выводит на консоль.  
  
 [!code-csharp[System.DateTimeOffset.Properties#16](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/cs/Properties.cs#16)]
 [!code-vb[System.DateTimeOffset.Properties#16](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/vb/Properties.vb#16)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToFileTime">
      <MemberSignature Language="C#" Value="public long ToFileTime ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int64 ToFileTime() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.ToFileTime" />
      <MemberSignature Language="VB.NET" Value="Public Function ToFileTime () As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; long ToFileTime();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Преобразует значение текущего объекта <see cref="T:System.DateTimeOffset" /> во временную характеристику файла Windows.</summary>
        <returns>Значение текущего объекта <see cref="T:System.DateTimeOffset" /> представленное в виде временной характеристики файла Windows.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Временная характеристика файла Windows является 64-разрядное значение, представляющее количество 100-наносекундных интервалов, прошедших с 00:00 1 января 1601 г. нашей эры (C.E.) Гринвичу (UTC). Windows использует временную характеристику файла для записи, когда приложение создает, обращается к или записывает в файл.  
  
 <xref:System.DateTimeOffset.ToFileTime%2A> Метод преобразует текущий <xref:System.DateTimeOffset> объекта даты и времени в формате UTC, до выполнения преобразования. Другими словами, вызов <xref:System.DateTimeOffset.ToFileTime%2A> метод эквивалентен следующий вызов метода:  
  
```csharp
this.ToUtcDateTime().ToFileTime();  
```  
  
```vb  
Me.ToUtcDateTime().ToFileTime()  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Результирующая временная характеристика будет представлять дату и время до полуночи 1 января, 1601 от Р. Х. в формате UTC.</exception>
        <altmember cref="M:System.DateTimeOffset.FromFileTime(System.Int64)" />
      </Docs>
    </Member>
    <Member MemberName="ToLocalTime">
      <MemberSignature Language="C#" Value="public DateTimeOffset ToLocalTime ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.DateTimeOffset ToLocalTime() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.ToLocalTime" />
      <MemberSignature Language="VB.NET" Value="Public Function ToLocalTime () As DateTimeOffset" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTimeOffset ToLocalTime();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Преобразует текущий объект <see cref="T:System.DateTimeOffset" /> в объект <see cref="T:System.DateTimeOffset" />, представляющий местное время.</summary>
        <returns>Объект, который представляет дату и время текущего объекта <see cref="T:System.DateTimeOffset" />, преобразованные в местное время.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При выполнении преобразования в местное время, метод сначала преобразует текущий <xref:System.DateTimeOffset> объекта даты и времени в формате UTC путем вычитания смещение от времени. Он затем преобразует Дата и время UTC в местное время, добавляя смещение местного часового пояса. Таким образом, он учитывает все правила коррекции для местного часового пояса.  
  
 Значение текущего <xref:System.DateTimeOffset> объекта и значение <xref:System.DateTimeOffset> объект, возвращаемый при вызове этого метода представляют тот же момент времени. То есть если оба переданы <xref:System.DateTimeOffset.Equals%28System.DateTimeOffset%2CSystem.DateTimeOffset%29?displayProperty=nameWithType> метода, метод возвращает `true`.  
  
 Если преобразование приводит к тому времени, которое находится за пределами диапазона <xref:System.DateTimeOffset> типа, <xref:System.DateTimeOffset.ToLocalTime%2A> возвращает <xref:System.DateTimeOffset> объекта, имеющего даты и времени значение <xref:System.DateTimeOffset.MaxValue> или <xref:System.DateTimeOffset.MinValue> , а также смещение, смещение локального часового пояса.  
  
   
  
## Examples  
 В следующем примере используется <xref:System.DateTimeOffset.ToLocalTime%2A> метод преобразования <xref:System.DateTimeOffset> значение в местное время в тихоокеанском стандартном часовом поясе. Он также демонстрирует метод поддержка правил коррекции часового пояса.  
  
 [!code-csharp[System.DateTimeOffset.Methods#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Methods/cs/Methods.cs#15)]
 [!code-vb[System.DateTimeOffset.Methods#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Methods/vb/Methods.vb#15)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.DateTimeOffset.ToUniversalTime" />
      </Docs>
    </Member>
    <Member MemberName="ToOffset">
      <MemberSignature Language="C#" Value="public DateTimeOffset ToOffset (TimeSpan offset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.DateTimeOffset ToOffset(valuetype System.TimeSpan offset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.ToOffset(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToOffset (offset As TimeSpan) As DateTimeOffset" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTimeOffset ToOffset(TimeSpan offset);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="offset">Смещение, в которое необходимо преобразовать значение <see cref="T:System.DateTimeOffset" />.</param>
        <summary>Преобразует значение текущего объекта <see cref="T:System.DateTimeOffset" /> в дату и время, указанные в значении смещения.</summary>
        <returns>Объект, равный исходному объекту <see cref="T:System.DateTimeOffset" /> (то есть, методы <see cref="M:System.DateTimeOffset.ToUniversalTime" /> этих объектов возвращают один и тот же момент времени), свойству <see cref="P:System.DateTimeOffset.Offset" /> которого, однако, присвоено значение <paramref name="offset" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.DateTimeOffset.ToOffset%2A> Метод является альтернативой вызову <xref:System.TimeZoneInfo.ConvertTime%28System.DateTimeOffset%2CSystem.TimeZoneInfo%29?displayProperty=nameWithType> метод. Он может быть полезна для выполнения простых преобразований из одного часового пояса в другой, если известны смещения часовых поясов в формате UTC. Тем не менее поскольку ни одна из исходного <xref:System.DateTimeOffset> объект ни новый <xref:System.DateTimeOffset> объект, возвращаемый при вызове этого метода однозначно относятся к определенному часовому поясу, метод не выполняет все правила коррекции часового пояса в преобразование.  
  
   
  
## Examples  
 Следующий пример показывает, как использовать <xref:System.DateTimeOffset.ToOffset%2A> метод преобразования <xref:System.DateTimeOffset> объект <xref:System.DateTimeOffset> объект с другой смещение.  
  
 [!code-csharp[System.DateTimeOffset.ToOffset#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.ToOffset/cs/ToOffset.cs#1)]
 [!code-vb[System.DateTimeOffset.ToOffset#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.ToOffset/vb/ToOffset.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Результирующий объект <see cref="T:System.DateTimeOffset" /> имеет значение <see cref="P:System.DateTimeOffset.DateTime" />, соответствующее более раннему моменту времени, чем <see cref="F:System.DateTimeOffset.MinValue" />.  
  
 - или -  
  
 Результирующий объект <see cref="T:System.DateTimeOffset" /> имеет значение <see cref="P:System.DateTimeOffset.DateTime" />, соответствующее более позднему моменту времени, чем <see cref="F:System.DateTimeOffset.MaxValue" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          Значение параметра <paramref name="offset" /> меньше -14 часов.  
  
 - или -  
  
 Значение параметра <paramref name="offset" /> больше 14 часов.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToString">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Преобразует значение текущего объекта <see cref="T:System.DateTimeOffset" /> в эквивалентное ему строковое представление.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Преобразует значение текущего объекта <see cref="T:System.DateTimeOffset" /> в эквивалентное ему строковое представление.</summary>
        <returns>Строковое представление объекта <see cref="T:System.DateTimeOffset" />, которое включает смещение, добавленное в конце строки.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Возвращаемое значение этого метода идентично <xref:System.DateTime.ToString?displayProperty=nameWithType> за исключением того, что он содержит пробел, а затем по смещению в конце строки. Другими словами, он форматирует вывод с использованием шаблона короткого формата даты, длинный шаблон времени и `zzz` строки пользовательского формата, отделена от предыдущего элемента пробелом. Например если <xref:System.DateTime.ToString?displayProperty=nameWithType> возвращает значение 1/12/2008 6:15:50 PM, <xref:System.DateTimeOffset.ToString> возвращает значение 1/12/2008 6:15:50 PM -08:00 для времени, которое составляет восемь часов за временем по Гринвичу (UTC).  
  
 Этот метод использует сведения о форматировании, производным от текущего языка и региональных параметров. Дополнительные сведения см. в разделе <xref:System.Globalization.CultureInfo.CurrentCulture%2A>. Другие перегрузки <xref:System.DateTimeOffset.ToString%2A> метод позволяют задать язык и региональные параметры, соответствующее которым форматирование для использования, а также определять шаблон выходные данные из <xref:System.DateTimeOffset> значение.  
  
   
  
## Examples  
 В следующем примере демонстрируется вызовы <xref:System.DateTimeOffset.ToString> метод и отображение его выходных данных в системе с текущими региональными параметрами являются en-us.  
  
 [!code-csharp[System.DateTimeOffset.ToString#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.ToString/cs/ToString.cs#1)]
 [!code-vb[System.DateTimeOffset.ToString#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.ToString/vb/ToString.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Дата и время находятся за пределами диапазона дат, поддерживаемого календарем, принятым для текущего языка и региональных параметров.</exception>
        <block subset="none" type="usage">
          <para>
            <see cref="M:System.DateTimeOffset.ToString" /> Метод возвращает строковое представление даты и времени в календаре текущего языка и региональных параметров. Если значение текущей <see cref="T:System.DateTimeOffset" /> экземпляре: раньше, чем <see cref="P:System.Globalization.Calendar.MinSupportedDateTime" /> или более поздней, чем <see cref="P:System.Globalization.Calendar.MaxSupportedDateTime" />, метод создает <see cref="T:System.ArgumentOutOfRangeException" />. Ниже приведен пример. Предпринимается попытка форматировать дату, которая находится за пределами диапазона <see cref="T:System.Globalization.HijriCalendar" /> класса, если текущий язык — арабский (Сирия).  
  
 [!code-csharp[System.DateTimeOffset.ToString.ArgumentOutOfRangeException#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetimeoffset.tostring.argumentoutofrangeexception/cs/datetimeoffset.tostring.argumentoutofrangeexception2.cs#2)]
 [!code-vb[System.DateTimeOffset.ToString.ArgumentOutOfRangeException#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetimeoffset.tostring.argumentoutofrangeexception/vb/datetimeoffset.tostring.argumentoutofrangeexception2.vb#2)]</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (IFormatProvider formatProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToString(class System.IFormatProvider formatProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.ToString(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (formatProvider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString(IFormatProvider ^ formatProvider);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="formatProvider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="formatProvider">Объект, предоставляющий сведения о форматировании для определенного языка и региональных параметров.</param>
        <summary>Преобразует числовое значение текущего объекта <see cref="T:System.DateTimeOffset" /> в эквивалентное ему строковое представление с использованием указанных сведений об особенностях форматирования для данного языка и региональных параметров.</summary>
        <returns>Строковое представление значения текущего объекта <see cref="T:System.DateTimeOffset" />, заданное параметром <paramref name="formatProvider" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Возвращаемое значение этого метода идентичен возвращаемому эквивалентной перегрузкой <xref:System.DateTime.ToString%2A?displayProperty=nameWithType> за исключением того, что он содержит пробел, а затем по смещению в конце строки. Другими словами, он форматирует вывод с использованием шаблона короткого формата даты, длинный шаблон времени и `zzz` строки пользовательского формата, отделена от предыдущего элемента пробелом.  
  
 Формат этих трех элементов определяется `formatProvider` параметра. `formatProvider` Параметр может иметь одно из следующих:  
  
-   Объект <xref:System.Globalization.CultureInfo> , представляющий язык и региональные параметры, чьи правила форматирования применяются к возвращаемой строки. <xref:System.Globalization.DateTimeFormatInfo> Объект, возвращаемый <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> свойство определяет формат возвращаемой строки.  
  
-   Объект <xref:System.Globalization.DateTimeFormatInfo> объект, который определяет формат данных даты и времени.  
  
 Если `formatProvider` — `null`, <xref:System.Globalization.DateTimeFormatInfo> используется объект, связанный с текущего языка и региональных параметров (см. <xref:System.Globalization.CultureInfo.CurrentCulture%2A>).  
  
   
  
## Examples  
 В следующем примере отображается <xref:System.DateTimeOffset> с помощью <xref:System.Globalization.CultureInfo> объекты, представляющие инвариантного языка и региональных параметров, а также четыре других языков и региональных параметров.  
  
 [!code-csharp[System.DateTimeOffset.ToString#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.ToString/cs/ToString.cs#2)]
 [!code-vb[System.DateTimeOffset.ToString#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.ToString/vb/ToString.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Дата и время находятся за пределами диапазона дат, поддерживаемых календарем, который используется <paramref name="formatProvider" />.</exception>
        <block subset="none" type="usage">
          <para>
            <see cref="M:System.DateTimeOffset.ToString(System.IFormatProvider)" /> Метод возвращает строковое представление даты и времени в календаре, языка и региональных параметров, представленных <paramref name="formatProvider" /> параметра. Его календарь определяется <see cref="P:System.Globalization.DateTimeFormatInfo.Calendar" /> свойство. Если значение текущей <see cref="T:System.DateTimeOffset" /> экземпляре: раньше, чем <see cref="P:System.Globalization.Calendar.MinSupportedDateTime" /> или более поздней, чем <see cref="P:System.Globalization.Calendar.MaxSupportedDateTime" />, метод создает <see cref="T:System.ArgumentOutOfRangeException" />. Ниже приведен пример. Предпринимается попытка форматировать дату, которая находится за пределами диапазона <see cref="T:System.Globalization.JapaneseCalendar" /> класса.  
  
 [!code-csharp[System.DateTimeOffset.ToString.ArgumentOutOfRangeException#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetimeoffset.tostring.argumentoutofrangeexception/cs/datetimeoffset.tostring.argumentoutofrangeexception1.cs#1)]
 [!code-vb[System.DateTimeOffset.ToString.ArgumentOutOfRangeException#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetimeoffset.tostring.argumentoutofrangeexception/vb/datetimeoffset.tostring.argumentoutofrangeexception1.vb#1)]</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (string format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToString(string format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.ToString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (format As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString(System::String ^ format);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="format">Строка формата.</param>
        <summary>Преобразует значение текущего объекта <see cref="T:System.DateTimeOffset" /> в эквивалентное ему строковое представление с использованием заданного формата.</summary>
        <returns>Строковое представление значения текущего объекта <see cref="T:System.DateTimeOffset" />, заданное параметром <paramref name="format" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `format` Параметр должен содержать описатель символов в одном формате (см. [стандартной строки даты и времени формат](~/docs/standard/base-types/standard-date-and-time-format-strings.md)) или шаблона пользовательского формата (см. [пользовательские строки даты и времени формат](~/docs/standard/base-types/custom-date-and-time-format-strings.md) ), определяющий формат возвращаемой строки. Если `format` является null или пустую строку ("»), <xref:System.DateTimeOffset> значение выводится в формате по умолчанию.  
  
 В следующей таблице показаны принцип действия определенных описателей формата при использовании с <xref:System.DateTimeOffset>, которая отличается от их поведения при использовании с <xref:System.DateTime>.  
  
|Существующий описатель формата|Новые возможности|  
|-------------------------------|------------------|  
|"K"|Предназначен для обратного преобразования даты и времени. С <xref:System.DateTimeOffset>, сопоставляется с «zzz» (смещение всегда отображается с часы и минуты). Обратите внимание, что «K» описатель настраиваемого формата; он не может отображаться как один символ в `format`.|  
|"U"|Не поддерживается.|  
|"r"|Преобразует <xref:System.DateTimeOffset> объекта в формате UTC и выводит его с помощью строки настраиваемого формата `ddd, dd MMM yyyy HH:mm:ss GMT`.|  
|"u"|Преобразует <xref:System.DateTimeOffset> объекта в формате UTC и выводит его в формате `yyyy-MM-dd HH:mm:ssZ`.|  
  
 Оставшиеся стандартных даты и времени описателей ведут себя так же, <xref:System.DateTimeOffset.ToString%28System.String%29> метода, как с <xref:System.DateTime.ToString%2A> метод.  
  
 Этот метод использует сведения о форматировании, производным от текущего языка и региональных параметров. Дополнительные сведения см. в разделе <xref:System.Globalization.CultureInfo.CurrentCulture%2A>.  
  
   
  
## Examples  
 В следующем примере отображается <xref:System.DateTimeOffset> на консоль, используя каждый из стандартных даты и времени описателей формата. Выходные данные форматируются с помощью en-us язык и региональные параметры.  
  
 [!code-csharp[System.DateTimeOffset.ToString#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.ToString/cs/ToString.cs#3)]
 [!code-vb[System.DateTimeOffset.ToString#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.ToString/vb/ToString.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">Длина параметра <paramref name="format" /> равна единице, но он не является одним из знаков стандартного описателя формата, определенных для объекта <see cref="T:System.Globalization.DateTimeFormatInfo" />.  
  
 - или -  
  
 Параметр <paramref name="format" /> не содержит допустимый пользовательский шаблон формата.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Дата и время находятся за пределами диапазона дат, поддерживаемого календарем, принятым для текущего языка и региональных параметров.</exception>
        <block subset="none" type="usage">
          <para>
            <see cref="M:System.DateTimeOffset.ToString(System.String)" /> Метод возвращает строковое представление даты и времени в календаре текущего языка и региональных параметров. Если значение текущей <see cref="T:System.DateTimeOffset" /> экземпляре: раньше, чем <see cref="P:System.Globalization.Calendar.MinSupportedDateTime" /> или более поздней, чем <see cref="P:System.Globalization.Calendar.MaxSupportedDateTime" />, метод создает <see cref="T:System.ArgumentOutOfRangeException" />. Ниже приведен пример. Предпринимается попытка форматировать дату, которая находится за пределами диапазона <see cref="T:System.Globalization.HebrewCalendar" /> класса, если текущий язык — иврит (Израиль).  
  
 [!code-csharp[System.DateTimeOffset.ToString.ArgumentOutOfRangeException#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetimeoffset.tostring.argumentoutofrangeexception/cs/datetimeoffset.tostring.argumentoutofrangeexception3.cs#3)]
 [!code-vb[System.DateTimeOffset.ToString.ArgumentOutOfRangeException#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetimeoffset.tostring.argumentoutofrangeexception/vb/datetimeoffset.tostring.argumentoutofrangeexception3.vb#3)]</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (string format, IFormatProvider formatProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToString(string format, class System.IFormatProvider formatProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.ToString(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (format As String, formatProvider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ToString(System::String ^ format, IFormatProvider ^ formatProvider);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IFormattable.ToString(System.String,System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="formatProvider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="format">Строка формата.</param>
        <param name="formatProvider">Объект, предоставляющий сведения о форматировании для определенного языка и региональных параметров.</param>
        <summary>Преобразует значение текущего объекта <see cref="T:System.DateTimeOffset" /> в эквивалентное ему строковое представление с использованием указанного формата и сведений об особенностях формата для данного языка и региональных параметров.</summary>
        <returns>Строковое представление значения текущего объекта <see cref="T:System.DateTimeOffset" />, заданное параметрами <paramref name="format" /> и <paramref name="provider" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `format` Параметр должен содержать описатель символов в одном формате (см. [стандартной строки даты и времени формат](~/docs/standard/base-types/standard-date-and-time-format-strings.md)) или шаблона пользовательского формата (см. [пользовательские строки даты и времени формат](~/docs/standard/base-types/custom-date-and-time-format-strings.md) ). Если `format` является null или пустую строку ("»), <xref:System.DateTimeOffset> объекта выводится в формате по умолчанию.  
  
 В следующей таблице показаны принцип действия определенных описателей формата при использовании с <xref:System.DateTimeOffset>, которая отличается от их поведения при использовании с <xref:System.DateTime>.  
  
|Существующий описатель формата|Новые возможности|  
|-------------------------------|------------------|  
|"K"|Предназначен для обратного преобразования даты и времени. С <xref:System.DateTimeOffset>, сопоставляется с «zzz» (смещение всегда отображается с часы и минуты). Обратите внимание, что «K» описатель настраиваемого формата; он не может отображаться как один символ в `format`.|  
|"U"|Не поддерживается.|  
|"r"|Преобразует <xref:System.DateTimeOffset> объекта в формате UTC и выводит его с помощью строки настраиваемого формата `ddd, dd MMM yyyy HH:mm:ss GMT`.|  
|"u"|Преобразует <xref:System.DateTimeOffset> значение в формате UTC и выводит его в формате `yyyy-MM-dd HH:mm:ssZ`.|  
  
 Оставшиеся стандартных даты и времени описателей ведут себя так же, <xref:System.DateTimeOffset.ToString%28System.String%29> метода, как с <xref:System.DateTime.ToString%2A> метод.  
  
 Шаблон, который соответствует спецификаторы стандартных форматов, а также символы и имена компонентов даты и времени, определяется `formatProvider` параметра. `formatProvider` Параметр может иметь одно из следующих:  
  
-   Объект <xref:System.Globalization.CultureInfo> , представляющий язык и региональные параметры, форматирование которого используется в `input`. <xref:System.Globalization.DateTimeFormatInfo> Объект, возвращаемый <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> свойство определяет форматирования, используемые в `input`.  
  
-   Объект <xref:System.Globalization.DateTimeFormatInfo> объект, который определяет формат данных даты и времени.  
  
 Если `formatProvider` — `null`, <xref:System.Globalization.DateTimeFormatInfo> используется объект, связанный с текущего языка и региональных параметров (см. <xref:System.Globalization.CultureInfo.CurrentCulture%2A>).  
  
   
  
## Examples  
 В следующем примере используется <xref:System.DateTimeOffset.ToString%28System.String%2CSystem.IFormatProvider%29> метод для отображения <xref:System.DateTimeOffset> объекта с помощью строки пользовательского формата для нескольких языков и региональных параметров.  
  
 [!code-csharp[System.DateTimeOffset.ToString#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.ToString/cs/ToString.cs#4)]
 [!code-vb[System.DateTimeOffset.ToString#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.ToString/vb/ToString.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">Длина параметра <paramref name="format" /> равна единице, но он не является одним из знаков стандартного описателя формата, определенных для объекта <see cref="T:System.Globalization.DateTimeFormatInfo" />.  
  
 - или -  
  
 Параметр <paramref name="format" /> не содержит допустимый пользовательский шаблон формата.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Дата и время находятся за пределами диапазона дат, поддерживаемых календарем, который используется <paramref name="formatProvider" />.</exception>
        <block subset="none" type="usage">
          <para>
            <see cref="M:System.DateTimeOffset.ToString(System.String,System.IFormatProvider)" /> Метод возвращает строковое представление даты и времени в календарь, используемый <paramref name="formatProvider" /> параметра. Его календарь определяется <see cref="P:System.Globalization.DateTimeFormatInfo.Calendar" /> свойство. Если значение текущей <see cref="T:System.DateTimeOffset" /> экземпляре: раньше, чем <see cref="P:System.Globalization.Calendar.MinSupportedDateTime" /> или более поздней, чем <see cref="P:System.Globalization.Calendar.MaxSupportedDateTime" />, метод создает <see cref="T:System.ArgumentOutOfRangeException" />. Ниже приведен пример. Предпринимается попытка форматировать дату, которая находится за пределами диапазона <see cref="T:System.Globalization.UmAlQuraCalendar" /> класса.  
  
 [!code-csharp[System.DateTimeOffset.ToString.ArgumentOutOfRangeException#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetimeoffset.tostring.argumentoutofrangeexception/cs/datetimeoffset.tostring.argumentoutofrangeexception4.cs#4)]
 [!code-vb[System.DateTimeOffset.ToString.ArgumentOutOfRangeException#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetimeoffset.tostring.argumentoutofrangeexception/vb/datetimeoffset.tostring.argumentoutofrangeexception4.vb#4)]</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="ToUniversalTime">
      <MemberSignature Language="C#" Value="public DateTimeOffset ToUniversalTime ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.DateTimeOffset ToUniversalTime() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.ToUniversalTime" />
      <MemberSignature Language="VB.NET" Value="Public Function ToUniversalTime () As DateTimeOffset" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTimeOffset ToUniversalTime();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Преобразует текущий объект <see cref="T:System.DateTimeOffset" /> в значение <see cref="T:System.DateTimeOffset" />, представляющее время в формате UTC.</summary>
        <returns>Объект, представляющий дату и время текущего объекта <see cref="T:System.DateTimeOffset" />, преобразованную во время в формате UTC.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод возвращает <xref:System.DateTimeOffset> которого <xref:System.DateTimeOffset.Offset%2A> свойство имеет значение ноль.  
  
 Значение текущего <xref:System.DateTimeOffset> объекта и значение <xref:System.DateTimeOffset> объект, возвращаемый при вызове этого метода представляют тот же момент времени. То есть если оба переданы <xref:System.DateTimeOffset.Equals%28System.DateTimeOffset%2CSystem.DateTimeOffset%29?displayProperty=nameWithType> метода, метод возвращает `true`.  
  
   
  
## Examples  
 В следующем примере вызывается <xref:System.DateTimeOffset.ToUniversalTime%2A> метода для преобразования местного времени и несколько раз в формате UTC.  
  
 [!code-csharp[System.DateTimeOffset.Methods#16](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Methods/cs/Methods.cs#16)]
 [!code-vb[System.DateTimeOffset.Methods#16](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Methods/vb/Methods.vb#16)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.DateTimeOffset.ToLocalTime" />
        <altmember cref="M:System.DateTimeOffset.ToOffset(System.TimeSpan)" />
      </Docs>
    </Member>
    <Member MemberName="ToUnixTimeMilliseconds">
      <MemberSignature Language="C#" Value="public long ToUnixTimeMilliseconds ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int64 ToUnixTimeMilliseconds() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.ToUnixTimeMilliseconds" />
      <MemberSignature Language="VB.NET" Value="Public Function ToUnixTimeMilliseconds () As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; long ToUnixTimeMilliseconds();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Возвращает количество миллисекунд, истекших с 1970-01-01T00:00:00.000Z.</summary>
        <returns>Количество миллисекунд, истекших с 1970-01-01T00:00:00.000Z.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Время UNIX представляет собой число секунд, истекших с 1970-01-01T00: 00 00z (1 января 1970, в 12:00 по Гринвичу). Он не учитывает корректировочных секунд. Этот метод возвращает число миллисекунд времени Unix.  
  
 Этот метод сначала преобразует текущий экземпляр перед возвратом количество миллисекунд времени Unix, его в формат UTC. Для значений даты и времени меньше 1970-01-01T00: 00 00z, этот метод возвращает отрицательное значение.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.DateTimeOffset.ToUnixTimeSeconds" />
        <altmember cref="M:System.DateTimeOffset.FromUnixTimeMilliseconds(System.Int64)" />
      </Docs>
    </Member>
    <Member MemberName="ToUnixTimeSeconds">
      <MemberSignature Language="C#" Value="public long ToUnixTimeSeconds ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int64 ToUnixTimeSeconds() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.ToUnixTimeSeconds" />
      <MemberSignature Language="VB.NET" Value="Public Function ToUnixTimeSeconds () As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; long ToUnixTimeSeconds();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Возвращает количество секунд, истекших с 1970-01-01T00:00:00Z.</summary>
        <returns>Количество секунд, истекших с 1970-01-01T00:00:00Z.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Время UNIX представляет собой число секунд, истекших с 1970-01-01T00: 00 00z (1 января 1970, в 12:00 по Гринвичу). Он не учитывает корректировочных секунд.  
  
 Этот метод сначала преобразует текущий экземпляр перед возвратом время Unix, его в формат UTC. Для значений даты и времени меньше 1970-01-01T00: 00 00z, этот метод возвращает отрицательное значение.  
  
   
  
## Examples  
 В следующем примере вызывается <xref:System.DateTimeOffset.ToUnixTimeSeconds%2A> метод для возврата времени Unix значений, которые равны, незадолго до и через некоторое время после 1970-01-01T00: 00 00z.  
  
 [!code-csharp[System.DateTimeOffset.ToUnixTimeSeconds#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetimeoffset.tounixtimeseconds/cs/tounixtimeseconds1.cs#1)]
 [!code-vb[System.DateTimeOffset.ToUnixTimeSeconds#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetimeoffset.tounixtimeseconds/vb/tounixtimeseconds1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.DateTimeOffset.FromUnixTimeSeconds(System.Int64)" />
        <altmember cref="M:System.DateTimeOffset.ToUnixTimeMilliseconds" />
      </Docs>
    </Member>
    <Member MemberName="TryFormat">
      <MemberSignature Language="C#" Value="public bool TryFormat (Span&lt;char&gt; destination, out int charsWritten, ReadOnlySpan&lt;char&gt; format = null, IFormatProvider formatProvider = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryFormat(valuetype System.Span`1&lt;char&gt; destination, [out] int32&amp; charsWritten, valuetype System.ReadOnlySpan`1&lt;char&gt; format, class System.IFormatProvider formatProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.TryFormat(System.Span{System.Char},System.Int32@,System.ReadOnlySpan{System.Char},System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryFormat (destination As Span(Of Char), ByRef charsWritten As Integer, Optional format As ReadOnlySpan(Of Char) = null, Optional formatProvider As IFormatProvider = null) As Boolean" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Span&lt;System.Char&gt;" />
        <Parameter Name="charsWritten" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="format" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="formatProvider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="destination">To be added.</param>
        <param name="charsWritten">To be added.</param>
        <param name="format">To be added.</param>
        <param name="formatProvider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TryParse">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Преобразует заданное строковое представление даты и времени в его эквивалент <see cref="T:System.DateTimeOffset" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;char&gt; input, out DateTimeOffset result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;char&gt; input, [out] valuetype System.DateTimeOffset&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.TryParse(System.ReadOnlySpan{System.Char},System.DateTimeOffset@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (input As ReadOnlySpan(Of Char), ByRef result As DateTimeOffset) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(ReadOnlySpan&lt;char&gt; input, [Runtime::InteropServices::Out] DateTimeOffset % result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="result" Type="System.DateTimeOffset&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (string input, out DateTimeOffset result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(string input, [out] valuetype System.DateTimeOffset&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.TryParse(System.String,System.DateTimeOffset@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (input As String, ByRef result As DateTimeOffset) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(System::String ^ input, [Runtime::InteropServices::Out] DateTimeOffset % result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="result" Type="System.DateTimeOffset&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="input">Строка, содержащая дату и время, которые нужно преобразовать.</param>
        <param name="result">После возврата из этого метода содержит эквивалент <see cref="T:System.DateTimeOffset" /> для даты и времени, заданных в параметре <c>input</c>, если преобразование прошло успешно, или значение <see cref="F:System.DateTimeOffset.MinValue" />, если преобразование выполнить не удалось. Преобразование выполнить не удается, если значение параметра <c>input</c> равно <see langword="null" /> или в нем не содержится допустимое строковое представление даты и времени. Этот параметр передается неинициализированным.</param>
        <summary>Предпринимает попытку преобразования указанного строкового представления даты и времени в его эквивалент <see cref="T:System.DateTimeOffset" />, и возвращает значение, позволяющее определить успешность преобразования.</summary>
        <returns>
          Значение <see langword="true" />, если параметр <paramref name="input" /> успешно преобразован, в противном случае — значение <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Эта перегрузка <xref:System.DateTimeOffset.TryParse%28System.String%2CSystem.DateTimeOffset%40%29> метод аналогичен <xref:System.DateTimeOffset.Parse%28System.String%29?displayProperty=nameWithType> за исключением того, что он не вызывает исключение при сбое преобразования. Анализирует строку с тремя элементами, которые могут отображаться в любом порядке и разделены пробелами. В следующей таблице показаны эти три элемента.  
  
|Элемент|Пример|  
|-------------|-------------|  
|\<Дата >|"2/10/2007"|  
|\<Время >|«1:02:03 PM»|  
|\<Offset>|"-7:30"|  
  
 Несмотря на то, что каждый из этих элементов является необязательным, \<смещение > не может отображаться самостоятельно. Необходимо указать вместе с либо \<даты > или \<время >. Если \<даты > отсутствует значение по умолчанию значение — текущий день. Если \<даты > уже установлен, но его год компонент включает в себя только две цифры, он преобразуется в год в зависимости от значения текущего календаря текущего языка и региональных параметров <xref:System.Globalization.Calendar.TwoDigitYearMax%2A?displayProperty=nameWithType> свойство. Если \<время > отсутствует значение по умолчанию значение равно 12:00:00 AM. Если \<смещение > отсутствует значение по умолчанию значение равно смещению местного часового пояса. Если \<смещение > присутствует, он может представлять отрицательное или положительное смещение от времени в формате UTC. В любом случае \<смещение > необходимо включить символ знака или этот метод возвращает `false`.  
  
 `input` Строка анализируется с использованием сведений о форматировании в <xref:System.Globalization.DateTimeFormatInfo> объект инициализирован для текущего языка и региональных параметров. Чтобы проанализировать строку, содержащую назначенный форматирование, необязательно соответствует тому, который текущего языка и региональных параметров, используйте <xref:System.DateTimeOffset.TryParseExact%2A> метод и задать описатель формата.  
  
   
  
## Examples  
 В следующем примере вызывается <xref:System.DateTimeOffset.TryParse%28System.String%2CSystem.DateTimeOffset%40%29> метод для анализа нескольких строк, содержащих различные форматы даты и времени.  
  
 [!code-csharp[System.DateTimeOffset.TryParse#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.TryParse/cs/TryParse.cs#1)]
 [!code-vb[System.DateTimeOffset.TryParse#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.TryParse/vb/TryParse.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.DateTimeOffset.Parse" />
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;char&gt; input, IFormatProvider formatProvider, System.Globalization.DateTimeStyles styles, out DateTimeOffset result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;char&gt; input, class System.IFormatProvider formatProvider, valuetype System.Globalization.DateTimeStyles styles, [out] valuetype System.DateTimeOffset&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.TryParse(System.ReadOnlySpan{System.Char},System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTimeOffset@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (input As ReadOnlySpan(Of Char), formatProvider As IFormatProvider, styles As DateTimeStyles, ByRef result As DateTimeOffset) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(ReadOnlySpan&lt;char&gt; input, IFormatProvider ^ formatProvider, System::Globalization::DateTimeStyles styles, [Runtime::InteropServices::Out] DateTimeOffset % result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="formatProvider" Type="System.IFormatProvider" />
        <Parameter Name="styles" Type="System.Globalization.DateTimeStyles" />
        <Parameter Name="result" Type="System.DateTimeOffset&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <param name="formatProvider">To be added.</param>
        <param name="styles">To be added.</param>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (string input, IFormatProvider formatProvider, System.Globalization.DateTimeStyles styles, out DateTimeOffset result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(string input, class System.IFormatProvider formatProvider, valuetype System.Globalization.DateTimeStyles styles, [out] valuetype System.DateTimeOffset&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.TryParse(System.String,System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTimeOffset@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (input As String, formatProvider As IFormatProvider, styles As DateTimeStyles, ByRef result As DateTimeOffset) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(System::String ^ input, IFormatProvider ^ formatProvider, System::Globalization::DateTimeStyles styles, [Runtime::InteropServices::Out] DateTimeOffset % result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="formatProvider" Type="System.IFormatProvider" />
        <Parameter Name="styles" Type="System.Globalization.DateTimeStyles" />
        <Parameter Name="result" Type="System.DateTimeOffset&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="input">Строка, содержащая дату и время, которые нужно преобразовать.</param>
        <param name="formatProvider">Объект, предоставляющий сведения о форматировании параметра <c>input</c> в зависимости от языка и региональных параметров.</param>
        <param name="styles">Побитовое сочетание значений перечисления, которое определяет разрешенный формат параметра <c>input</c>.</param>
        <param name="result">После возврата из этого метода содержит значение <see cref="T:System.DateTimeOffset" />, эквивалентное дате и времени, заданным в параметре <c>input</c>, если преобразование прошло успешно, или значение <see cref="F:System.DateTimeOffset.MinValue" />, если преобразование выполнить не удалось. Преобразование выполнить не удается, если значение параметра <c>input</c> равно <see langword="null" /> или в нем не содержится допустимое строковое представление даты и времени. Этот параметр передается неинициализированным.</param>
        <summary>Предпринимает попытку преобразования указанного строкового представления даты и времени в его эквивалент <see cref="T:System.DateTimeOffset" />, и возвращает значение, позволяющее определить успешность преобразования.</summary>
        <returns>
          Значение <see langword="true" />, если параметр <paramref name="input" /> успешно преобразован, в противном случае — значение <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Эта перегрузка <xref:System.DateTimeOffset.TryParse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTimeOffset%40%29> метод аналогичен <xref:System.DateTimeOffset.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType> за исключением того, что он не вызывает исключение при сбое преобразования. Метод анализирует строку с тремя элементами, которые могут отображаться в любом порядке и разделены пробелами. В следующей таблице показаны эти три элемента.  
  
|Элемент|Пример|  
|-------------|-------------|  
|\<Дата >|"2/10/2007"|  
|\<Время >|«1:02:03 PM»|  
|\<Offset>|"-7:30"|  
  
 Несмотря на то, что каждый из этих элементов является необязательным, \<смещение > не может отображаться самостоятельно. Необходимо указать вместе с либо \<даты > или \<время >. Если \<даты > отсутствует значение по умолчанию значение — текущий день. Если \<даты > уже установлен, но его год компонент включает в себя только две цифры, он преобразуется в году в `provider` параметра текущий календарь основан на значение <xref:System.Globalization.Calendar.TwoDigitYearMax%2A?displayProperty=nameWithType> свойства. Если \<время > отсутствует значение по умолчанию значение равно 12:00:00 AM. Если \<смещение > отсутствует значение по умолчанию значение равно смещению местного часового пояса или <xref:System.TimeSpan.Zero> при любом <xref:System.Globalization.DateTimeStyles.AdjustToUniversal?displayProperty=nameWithType> или <xref:System.Globalization.DateTimeStyles.AssumeUniversal?displayProperty=nameWithType> значение указывается в `styles`. Если \<смещение > присутствует, он может представлять отрицательное или положительное смещение от времени в формате UTC. В любом случае \<смещение > необходимо включить символ знака или этот метод возвращает `false`.  
  
 `input` Строка анализируется с использованием сведений о форматировании конкретного языка и региональных параметров в <xref:System.Globalization.DateTimeFormatInfo> объекта, заданного параметром `formatProvider` параметр. `formatProvider` Параметр может иметь одно из следующих:  
  
-   Объект <xref:System.Globalization.CultureInfo> , представляющий язык и региональные параметры, форматирование которого используется в `input`. <xref:System.Globalization.DateTimeFormatInfo> Объект, возвращаемый <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> свойство определяет формат, который используется в `input`.  
  
-   Объект <xref:System.Globalization.DateTimeFormatInfo> объект, который определяет формат данных даты и времени.  
  
 Кроме того, каждый элемент могут быть отделены начальные или конечные пробелы и \<Дата > и \<время > компонентов может содержать внутренние пробелы (например, 6:00:00). Только \<смещение > компонент не может содержать внутренние пробелы.  
  
 Если `provider` — `null`, <xref:System.Globalization.CultureInfo> используется объект, соответствующий текущего языка и региональных параметров.  
  
 Положительный или отрицательный знак, используемый в \<смещение > должен быть либо + или -. Не определяется <xref:System.Globalization.NumberFormatInfo.PositiveSign%2A> или <xref:System.Globalization.NumberFormatInfo.NegativeSign%2A> свойства <xref:System.Globalization.NumberFormatInfo> объект, возвращаемый `formatprovider` параметра <xref:System.Globalization.CultureInfo.NumberFormat%2A> свойство.  
  
 Следующие элементы <xref:System.Globalization.DateTimeStyles> перечисления поддерживаются:  
  
|Элемент параметра DateTimeStyles|Комментарии|  
|---------------------------|--------------|  
|<xref:System.Globalization.DateTimeStyles.AdjustToUniversal>|Выполняет синтаксический анализ строки, представленной `input` и, если необходимо, преобразует его в формат UTC. Это эквивалентно синтаксический анализ строки и затем вызвать возвращенного объекта <xref:System.DateTimeOffset.ToUniversalTime> метод.|  
|<xref:System.Globalization.DateTimeStyles.AllowInnerWhite>|Несмотря на допустимость, это значение игнорируется. Внутренние пробелы допускается в \<Дата > и \<время > компоненты.|  
|<xref:System.Globalization.DateTimeStyles.AllowLeadingWhite>|Несмотря на допустимость, это значение игнорируется. За любым компонентом анализируемой строки допускается начальные пробелы.|  
|<xref:System.Globalization.DateTimeStyles.AllowTrailingWhite>|Несмотря на допустимость, это значение игнорируется. За любым компонентом анализируемой строки допускается конечные пробелы.|  
|<xref:System.Globalization.DateTimeStyles.AllowWhiteSpaces>|Это поведение установлено по умолчанию. Его нельзя переопределить, указав более строгий <xref:System.Globalization.DateTimeStyles> значение перечисления, например <xref:System.Globalization.DateTimeStyles.None?displayProperty=nameWithType>.|  
|<xref:System.Globalization.DateTimeStyles.AssumeLocal>|Указывает, что если `input` не имеет параметра \<смещение > элемент, должно быть указано смещение местного часового пояса. Это поведение по умолчанию <xref:System.DateTimeOffset.TryParse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTimeOffset%40%29> метод.|  
|<xref:System.Globalization.DateTimeStyles.AssumeUniversal>|Указывает, что если `input` не имеет параметра \<смещение > элемент, должно быть указано смещение UTC (00:00).|  
|<xref:System.Globalization.DateTimeStyles.None>|Несмотря на допустимость, это значение игнорируется и не делает ничего.|  
|<xref:System.Globalization.DateTimeStyles.RoundtripKind>|Поскольку <xref:System.DateTimeOffset> структуры не включает `Kind` значение свойства, это значение игнорируется.|  
  
 Только <xref:System.Globalization.DateTimeStyles.NoCurrentDateDefault?displayProperty=nameWithType> значение не поддерживается. <xref:System.ArgumentException> Создается, если это значение включено в `styles` параметра.  
  
   
  
## Examples  
 В следующем примере вызывается <xref:System.DateTimeOffset.TryParse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTimeOffset%40%29> метод с различными <xref:System.Globalization.DateTimeStyles> значения для анализа некоторых строк, содержащих различные форматы даты и времени.  
  
 [!code-csharp[System.DateTimeOffset.TryParse#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.TryParse/cs/TryParse.cs#2)]
 [!code-vb[System.DateTimeOffset.TryParse#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.TryParse/vb/TryParse.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          Параметр <paramref name="styles" /> содержит неопределенное значение <see cref="T:System.Globalization.DateTimeStyles" />.  
  
 - или -  
  
 Тип <see cref="F:System.Globalization.DateTimeStyles.NoCurrentDateDefault" /> не поддерживается.  
  
 - или -  
  
 Параметр <paramref name="styles" /> содержит взаимоисключающие значения <see cref="T:System.Globalization.DateTimeStyles" />.</exception>
        <altmember cref="Overload:System.DateTimeOffset.Parse" />
      </Docs>
    </Member>
    <MemberGroup MemberName="TryParseExact">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Преобразует заданное строковое представление даты и времени в его эквивалент <see cref="T:System.DateTimeOffset" />. Формат строкового представления должен полностью соответствовать заданному формату.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TryParseExact">
      <MemberSignature Language="C#" Value="public static bool TryParseExact (ReadOnlySpan&lt;char&gt; input, ReadOnlySpan&lt;char&gt; format, IFormatProvider formatProvider, System.Globalization.DateTimeStyles styles, out DateTimeOffset result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParseExact(valuetype System.ReadOnlySpan`1&lt;char&gt; input, valuetype System.ReadOnlySpan`1&lt;char&gt; format, class System.IFormatProvider formatProvider, valuetype System.Globalization.DateTimeStyles styles, [out] valuetype System.DateTimeOffset&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.TryParseExact(System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Char},System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTimeOffset@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParseExact (input As ReadOnlySpan(Of Char), format As ReadOnlySpan(Of Char), formatProvider As IFormatProvider, styles As DateTimeStyles, ByRef result As DateTimeOffset) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParseExact(ReadOnlySpan&lt;char&gt; input, ReadOnlySpan&lt;char&gt; format, IFormatProvider ^ formatProvider, System::Globalization::DateTimeStyles styles, [Runtime::InteropServices::Out] DateTimeOffset % result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="format" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="formatProvider" Type="System.IFormatProvider" />
        <Parameter Name="styles" Type="System.Globalization.DateTimeStyles" />
        <Parameter Name="result" Type="System.DateTimeOffset&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <param name="format">To be added.</param>
        <param name="formatProvider">To be added.</param>
        <param name="styles">To be added.</param>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParseExact">
      <MemberSignature Language="C#" Value="public static bool TryParseExact (ReadOnlySpan&lt;char&gt; input, string[] formats, IFormatProvider formatProvider, System.Globalization.DateTimeStyles styles, out DateTimeOffset result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParseExact(valuetype System.ReadOnlySpan`1&lt;char&gt; input, string[] formats, class System.IFormatProvider formatProvider, valuetype System.Globalization.DateTimeStyles styles, [out] valuetype System.DateTimeOffset&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.TryParseExact(System.ReadOnlySpan{System.Char},System.String[],System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTimeOffset@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParseExact (input As ReadOnlySpan(Of Char), formats As String(), formatProvider As IFormatProvider, styles As DateTimeStyles, ByRef result As DateTimeOffset) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParseExact(ReadOnlySpan&lt;char&gt; input, cli::array &lt;System::String ^&gt; ^ formats, IFormatProvider ^ formatProvider, System::Globalization::DateTimeStyles styles, [Runtime::InteropServices::Out] DateTimeOffset % result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="formats" Type="System.String[]" />
        <Parameter Name="formatProvider" Type="System.IFormatProvider" />
        <Parameter Name="styles" Type="System.Globalization.DateTimeStyles" />
        <Parameter Name="result" Type="System.DateTimeOffset&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <param name="formats">To be added.</param>
        <param name="formatProvider">To be added.</param>
        <param name="styles">To be added.</param>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParseExact">
      <MemberSignature Language="C#" Value="public static bool TryParseExact (string input, string format, IFormatProvider formatProvider, System.Globalization.DateTimeStyles styles, out DateTimeOffset result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParseExact(string input, string format, class System.IFormatProvider formatProvider, valuetype System.Globalization.DateTimeStyles styles, [out] valuetype System.DateTimeOffset&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.TryParseExact(System.String,System.String,System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTimeOffset@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParseExact (input As String, format As String, formatProvider As IFormatProvider, styles As DateTimeStyles, ByRef result As DateTimeOffset) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParseExact(System::String ^ input, System::String ^ format, IFormatProvider ^ formatProvider, System::Globalization::DateTimeStyles styles, [Runtime::InteropServices::Out] DateTimeOffset % result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="formatProvider" Type="System.IFormatProvider" />
        <Parameter Name="styles" Type="System.Globalization.DateTimeStyles" />
        <Parameter Name="result" Type="System.DateTimeOffset&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="input">Строка, содержащая дату и время, которые нужно преобразовать.</param>
        <param name="format">Описатель формата, задающий требуемый формат параметра <c>input</c>.</param>
        <param name="formatProvider">Объект, который предоставляет сведения о форматировании параметра <c>input</c> в зависимости от языка и региональных параметров.</param>
        <param name="styles">Побитовое сочетание значений перечисления, которое показывает разрешенный формат ввода. Обычно указывается значение <see langword="None" />.</param>
        <param name="result">После возврата из этого метода содержит эквивалент <see cref="T:System.DateTimeOffset" /> для даты и времени, заданных в параметре <c>input</c>, если преобразование прошло успешно, или значение <see cref="F:System.DateTimeOffset.MinValue" />, если преобразование выполнить не удалось. Преобразование выполнить не удается, если параметр <c>input</c> имеет значение <see langword="null" /> или не содержит допустимое строчное представление даты и времени в требуемом формате, заданном параметрами <c>format</c> и <c>provider</c>. Этот параметр передается неинициализированным.</param>
        <summary>Преобразует заданное строковое представление даты и времени в его эквивалент <see cref="T:System.DateTimeOffset" />, используя заданный формат, указанные сведения о форматировании, связанные с языком и региональными параметрами, а также стиль. Формат строкового представления должен полностью соответствовать заданному формату.</summary>
        <returns>
          Значение <see langword="true" />, если параметр <paramref name="input" /> успешно преобразован, в противном случае — значение <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Эта перегрузка <xref:System.DateTimeOffset.TryParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTimeOffset%40%29> метод аналогичен <xref:System.DateTimeOffset.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType> метода, за исключением того, что этот метод не вызывает исключение при сбое преобразования. Он анализирует строковое представление даты и времени, которое должно точно соответствовать шаблону, заданному `format` параметра. Если `input` строки не соответствуют этому шаблону, с возможные варианты пробелами, определяется `styles` параметр, операция анализа завершается ошибкой, а метод возвращает `false`.  
  
 `format` Параметр является строкой, содержащей либо один стандартный, одного или нескольких настраиваемых описателей формата, определяющих необходимый шаблон `input`. Дополнительные сведения о допустимых кодах форматирования см. в разделе [стандартной строки даты и времени формат](~/docs/standard/base-types/standard-date-and-time-format-strings.md) и [пользовательских строк даты и времени формат](~/docs/standard/base-types/custom-date-and-time-format-strings.md). Если `format` включает `z`, `zz`, или `zzz` настраиваемых описателей формата для указания, что смещение должны присутствовать в `input`, что смещение должно включать знак плюс или минус. Если знак отсутствует, операция анализа завершается неудачей и метод возвращает `false`.  
  
 Если `format` требует `input` содержат даты, но не время, итоговый <xref:System.DateTimeOffset> объекту присваивается время, соответствующее полуночи (0: 00:00). Если `format` требует `input` содержал время без даты, итоговый <xref:System.DateTimeOffset> объекту присваивается текущая дата в локальной системе. Если `format` не требует `input` содержалось смещение, смещение результирующего <xref:System.DateTimeOffset> объект зависит от значения `styles` параметра. Если `styles` включает <xref:System.Globalization.DateTimeStyles.AssumeLocal>, назначенные смещению местного часового пояса <xref:System.DateTimeOffset> объекта. Если `styles` включает <xref:System.Globalization.DateTimeStyles.AssumeUniversal>, смещение по Гринвичу (UTC) или + 00:00, назначается <xref:System.DateTimeOffset> объекта. Если значение не указано, используется смещению местного часового пояса.  
  
 Определенная дата и время символы и строки, используемые в `input` определяются `formatProvider` параметра. Это справедливо и для точного шаблона параметра `input` Если `format` является строкой описателя стандартного формата. `formatProvider` Параметр может иметь одно из следующих:  
  
-   Объект <xref:System.Globalization.CultureInfo> , представляющий язык и региональные параметры на основе которой `input` интерпретируется. <xref:System.Globalization.DateTimeFormatInfo> Объект, возвращаемый <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> свойство определяет символы и стандартных форматов может применяться в `input`.  
  
-   Объект <xref:System.Globalization.DateTimeFormatInfo> объект, который определяет формат данных даты и времени.  
  
 Если `formatprovider` — `null`, <xref:System.Globalization.CultureInfo> используется объект, соответствующий текущего языка и региональных параметров.  
  
 `styles` Параметр определяет, разрешены ли пробелы во входной строке указывает, а также порядок синтаксического анализа строки без явного компонент смещения. Все члены <xref:System.Globalization.DateTimeStyles> перечисления поддерживаются за исключением <xref:System.Globalization.DateTimeStyles.NoCurrentDateDefault>. В следующей таблице перечислены влияние каждого поддерживаемого члена.  
  
|Член `DateTimeStyles`|Поведение|  
|-----------------------------|--------------|  
|<xref:System.Globalization.DateTimeStyles.AdjustToUniversal>|Выполняет синтаксический анализ `input` и, если необходимо, преобразует его в формат UTC. Это эквивалентно синтаксический анализ строки и затем вызвать <xref:System.DateTimeOffset.ToUniversalTime%2A?displayProperty=nameWithType> метод возвращаемого <xref:System.DateTimeOffset> объекта.|  
|<xref:System.Globalization.DateTimeStyles.AssumeLocal>|Если `format` не требует `input` содержалось значение смещения, возвращенный <xref:System.DateTimeOffset> объекту присваивается смещение местного часового пояса. Это поведение установлено по умолчанию.|  
|<xref:System.Globalization.DateTimeStyles.AssumeUniversal>|Если `format` не требует `input` содержалось значение смещения, возвращенный <xref:System.DateTimeOffset> объекту присваивается смещение относительно UTC (+ 00:00).|  
|<xref:System.Globalization.DateTimeStyles.AllowInnerWhite>|Позволяет `input` для содержать внутренние пробелы, не указан формат. Дополнительные пробелы могут располагаться между компонентами даты и времени, а также внутри отдельных компонентов, отличный от смещения и учитывается при анализе строки.|  
|<xref:System.Globalization.DateTimeStyles.AllowLeadingWhite>|Позволяет `input` для включения начальные пробелы, не предусмотренные `format`. Они учитываются при анализе строки.|  
|<xref:System.Globalization.DateTimeStyles.AllowTrailingWhite>|Позволяет `input` включать конечные пробелы, не предусмотренные `format`. Они учитываются при анализе строки.|  
|<xref:System.Globalization.DateTimeStyles.AllowWhiteSpaces>|Позволяет `input` содержать начальные, конечные и внутренние пробелы, не указан `format`. Все лишние пробелы, не указан в `format` при анализе строки игнорируются.|  
|<xref:System.Globalization.DateTimeStyles.None>|Указывает, что дополнительные пробелы не разрешен в `input`. Пробелы должны располагаться в точности так, как указано в `format`. Это поведение установлено по умолчанию.|  
|<xref:System.Globalization.DateTimeStyles.RoundtripKind>|Не делает ничего, так как <xref:System.DateTimeOffset> структуры не включает `Kind` свойство.|  
  
   
  
## Examples  
 В следующем примере используется <xref:System.DateTimeOffset.TryParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTimeOffset%40%29> метод стандартные и настраиваемые описатели формата, инвариантного языка и региональных параметров и различных <xref:System.Globalization.DateTimeStyles> значений для анализа нескольких строк даты и времени.  
  
 [!code-csharp[System.DateTimeOffset.TryParseExact#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.TryParseExact/cs/TryParseExact.cs#1)]
 [!code-vb[System.DateTimeOffset.TryParseExact#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.TryParseExact/vb/TryParseExact.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          Параметр <paramref name="styles" /> содержит неопределенное значение <see cref="T:System.Globalization.DateTimeStyles" />.  
  
 - или -  
  
 Тип <see cref="F:System.Globalization.DateTimeStyles.NoCurrentDateDefault" /> не поддерживается.  
  
 - или -  
  
 Параметр <paramref name="styles" /> содержит взаимоисключающие значения <see cref="T:System.Globalization.DateTimeStyles" />.</exception>
        <block subset="none" type="usage">
          <para>В [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)], <see cref="Overload:System.DateTimeOffset.TryParseExact" /> возвращает <see langword="false" /> Если анализируемая строка содержит компонент часов и обозначение AM/PM, которых нет в соглашении. В [!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)] и более ранних версиях обозначение AM/PM игнорируется.</para>
        </block>
        <altmember cref="Overload:System.DateTimeOffset.ParseExact" />
      </Docs>
    </Member>
    <Member MemberName="TryParseExact">
      <MemberSignature Language="C#" Value="public static bool TryParseExact (string input, string[] formats, IFormatProvider formatProvider, System.Globalization.DateTimeStyles styles, out DateTimeOffset result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParseExact(string input, string[] formats, class System.IFormatProvider formatProvider, valuetype System.Globalization.DateTimeStyles styles, [out] valuetype System.DateTimeOffset&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.TryParseExact(System.String,System.String[],System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTimeOffset@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParseExact (input As String, formats As String(), formatProvider As IFormatProvider, styles As DateTimeStyles, ByRef result As DateTimeOffset) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParseExact(System::String ^ input, cli::array &lt;System::String ^&gt; ^ formats, IFormatProvider ^ formatProvider, System::Globalization::DateTimeStyles styles, [Runtime::InteropServices::Out] DateTimeOffset % result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="formats" Type="System.String[]" />
        <Parameter Name="formatProvider" Type="System.IFormatProvider" />
        <Parameter Name="styles" Type="System.Globalization.DateTimeStyles" />
        <Parameter Name="result" Type="System.DateTimeOffset&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="input">Строка, содержащая дату и время, которые нужно преобразовать.</param>
        <param name="formats">Массив, в котором задаются ожидаемые форматы <c>input</c>.</param>
        <param name="formatProvider">Объект, который предоставляет сведения о форматировании параметра <c>input</c> в зависимости от языка и региональных параметров.</param>
        <param name="styles">Побитовое сочетание значений перечисления, которое показывает разрешенный формат ввода. Обычно указывается значение <see langword="None" />.</param>
        <param name="result">После возврата из этого метода содержит эквивалент <see cref="T:System.DateTimeOffset" /> для даты и времени, заданных в параметре <c>input</c>, если преобразование прошло успешно, или значение <see cref="F:System.DateTimeOffset.MinValue" />, если преобразование выполнить не удалось. Преобразование выполнить не удается, если параметр <c>input</c> не содержит допустимое строковое представление даты и времени, не содержит даты и времени в требуемом формате, заданном параметром <c>format</c>, или если параметр <c>formats</c> имеет значение <see langword="null" />. Этот параметр передается неинициализированным.</param>
        <summary>Преобразует заданное строковое представление даты и времени в его эквивалент <see cref="T:System.DateTimeOffset" />, используя заданный массив форматов, указанные сведения о форматировании, связанные с языком и региональными параметрами, и стиль форматирования. Формат строкового представления должен полностью соответствовать одному из заданных форматов.</summary>
        <returns>
          Значение <see langword="true" />, если параметр <paramref name="input" /> успешно преобразован, в противном случае — значение <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.DateTimeOffset.TryParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTimeOffset%40%29> Метод анализирует строковое представление даты, не соответствует ни одному из шаблонов, назначенных `formats` массива. Если `input` строка не соответствует ни одному из этих шаблонов с любыми изменениями, определяется `styles` параметр, операция анализа завершается ошибкой, а метод возвращает `false`. Помимо сравнение `input` на несколько строк, содержащих описателей формата, этот перегруженный метод работает идентично <xref:System.DateTimeOffset.ParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType> метод.  
  
 `formats` Параметр является массивом строк, элементы которого содержат один стандартный описатель формата или одного или нескольких настраиваемых описателей формата, определяющих возможные шаблон `input`. Дополнительные сведения о допустимых кодах форматирования см. в разделе [стандартной строки даты и времени формат](~/docs/standard/base-types/standard-date-and-time-format-strings.md) и [пользовательских строк даты и времени формат](~/docs/standard/base-types/custom-date-and-time-format-strings.md). Если сопоставляемый элемент `formats` включает `z`, `zz`, или `zzz` настраиваемых описателей формата для указания, что смещение должны присутствовать в `input`, что смещение должно включать знак плюс или минус. Если знак отсутствует, операция анализа завершается неудачно, а метод возвращает `false`.  
  
> [!IMPORTANT]
>  С помощью `formats` параметр этой перегрузки для задания нескольких форматов может помочь снизить степень недовольства, многие пользователи сталкиваются при вводе значения даты и времени. В частности возможность задать несколько шаблонов ввода позволяет приложению обрабатывать представления даты и времени, которые могут присутствовать или отсутствовать начальные нули в месяцев, дней, часов, минут и секунд. Иллюстрация приведена в примере.  
  
 Если сопоставляемый элемент `formats` требует `input` содержат даты, но не время, полученный <xref:System.DateTimeOffset> объекту присваивается время, соответствующее полуночи (0: 00:00). Если сопоставляемый элемент `formats` требует, что входные данные содержат время, но не дату, итоговый <xref:System.DateTimeOffset> объекту присваивается текущая дата в локальной системе. Если сопоставляемый элемент `formats` не требует `input` содержалось смещение, смещение результирующего <xref:System.DateTimeOffset> объект зависит от значения `styles` параметра. Если `styles` включает <xref:System.Globalization.DateTimeStyles.AssumeLocal>, назначенные смещению местного часового пояса <xref:System.DateTimeOffset> объекта. Если `styles` включает <xref:System.Globalization.DateTimeStyles.AssumeUniversal>, смещение по Гринвичу (UTC) или + 00:00, назначается <xref:System.DateTimeOffset> объекта. Если значение не указано, используется смещению местного часового пояса.  
  
 Определенная дата и время символы и строки, используемые в `input` определяются `formatProvider` параметра. Это справедливо и для точного шаблона параметра `input` Если соответствующий элемент `formats` является строкой описателя стандартного формата. `formatProvider` Параметр может иметь одно из следующих:  
  
-   Объект <xref:System.Globalization.CultureInfo> , представляющий язык и региональные параметры на основе которой `input` интерпретируется. <xref:System.Globalization.DateTimeFormatInfo> Объект, возвращаемый <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> свойство определяет символы и форматирование в `input`.  
  
-   Объект <xref:System.Globalization.DateTimeFormatInfo> объект, который определяет формат данных даты и времени.  
  
 Если `formatprovider` — `null`, <xref:System.Globalization.CultureInfo> используется объект, соответствующий текущего языка и региональных параметров.  
  
 `styles` Параметр определяет, разрешены ли пробелы во входной строке указывает, а также порядок синтаксического анализа строки без явного компонент смещения. Все члены <xref:System.Globalization.DateTimeStyles> перечисления поддерживаются за исключением <xref:System.Globalization.DateTimeStyles.NoCurrentDateDefault>. В следующей таблице перечислены влияние каждого поддерживаемого члена.  
  
|Член `DateTimeStyles`|Поведение|  
|-----------------------------|--------------|  
|<xref:System.Globalization.DateTimeStyles.AdjustToUniversal>|Выполняет синтаксический анализ `input` и, если необходимо, преобразует его в формат UTC. Это эквивалентно синтаксический анализ строки и затем вызвать <xref:System.DateTimeOffset.ToUniversalTime%2A?displayProperty=nameWithType> метод возвращаемого <xref:System.DateTimeOffset> объекта.|  
|<xref:System.Globalization.DateTimeStyles.AssumeLocal>|Если сопоставляемый элемент `formats` не требует `input` содержалось значение смещения, возвращенный <xref:System.DateTimeOffset> объекту присваивается смещение местного часового пояса. Это значение по умолчанию.|  
|<xref:System.Globalization.DateTimeStyles.AssumeUniversal>|Если сопоставляемый элемент `formats` не требует `input` содержалось значение смещения, возвращенный <xref:System.DateTimeOffset> объекту присваивается смещение относительно UTC (+ 00:00).|  
|<xref:System.Globalization.DateTimeStyles.AllowInnerWhite>|Позволяет `input` для содержать внутренние пробелы, не указан с помощью элементов в `formats`. Дополнительные пробелы могут располагаться между компонентами даты и времени, а также внутри отдельных компонентов (за исключением смещения) и учитывается при анализе строки.|  
|<xref:System.Globalization.DateTimeStyles.AllowLeadingWhite>|Позволяет `input` для включения начальных пробелов, не указан с помощью элементов в `formats`. Они учитываются при анализе строки.|  
|<xref:System.Globalization.DateTimeStyles.AllowTrailingWhite>|Позволяет `input` включать конечные пробелы, не указан с помощью элементов в `formats`. Они учитываются при анализе строки.|  
|<xref:System.Globalization.DateTimeStyles.AllowWhiteSpaces>|Позволяет `input` содержать начальные, конечные и внутренние пробелы, не указан с помощью элементов в `formats`. Все лишние пробелы, не указан в сопоставляемом в `formats` при анализе строки игнорируются.|  
|<xref:System.Globalization.DateTimeStyles.None>|Указывает, что дополнительные пробелы не разрешен в `input`. Пробелы должны располагаться в точности совпадают с указанными в соответствующем элементе в `formats` для успешного сопоставления. Это поведение установлено по умолчанию.|  
|<xref:System.Globalization.DateTimeStyles.RoundtripKind>|Имеет смысл, так как <xref:System.DateTimeOffset> структуры не включает `Kind` свойство.|  
  
   
  
## Examples  
 Следующий пример определяет несколько входных форматах для строковое представление даты и времени и смещения, а затем передает строку, вводимые пользователем для <xref:System.DateTimeOffset.TryParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTimeOffset%40%29> метод.  
  
 [!code-csharp[System.DateTimeOffset.TryParseExact#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.TryParseExact/cs/TryParseExact.cs#2)]
 [!code-vb[System.DateTimeOffset.TryParseExact#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.TryParseExact/vb/TryParseExact.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          Параметр <paramref name="styles" /> содержит неопределенное значение <see cref="T:System.Globalization.DateTimeStyles" />.  
  
 - или -  
  
 Тип <see cref="F:System.Globalization.DateTimeStyles.NoCurrentDateDefault" /> не поддерживается.  
  
 - или -  
  
 Параметр <paramref name="styles" /> содержит взаимоисключающие значения <see cref="T:System.Globalization.DateTimeStyles" />.</exception>
        <block subset="none" type="usage">
          <para>В [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)], <see cref="Overload:System.DateTimeOffset.TryParseExact" /> возвращает <see langword="false" /> Если анализируемая строка содержит компонент часов и обозначение AM/PM, которых нет в соглашении. В [!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)] и более ранних версиях обозначение AM/PM игнорируется.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="UnixEpoch">
      <MemberSignature Language="C#" Value="public static readonly DateTimeOffset UnixEpoch;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype System.DateTimeOffset UnixEpoch" />
      <MemberSignature Language="DocId" Value="F:System.DateTimeOffset.UnixEpoch" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly UnixEpoch As DateTimeOffset " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly DateTimeOffset UnixEpoch;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UtcDateTime">
      <MemberSignature Language="C#" Value="public DateTime UtcDateTime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime UtcDateTime" />
      <MemberSignature Language="DocId" Value="P:System.DateTimeOffset.UtcDateTime" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UtcDateTime As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime UtcDateTime { DateTime get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает значение <see cref="T:System.DateTime" />, представляющее дату и время текущего объекта <see cref="T:System.DateTimeOffset" /> в формате UTC.</summary>
        <value>Дата и время текущего объекта <see cref="T:System.DateTimeOffset" /> в формате UTC.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.DateTimeOffset.UtcDateTime%2A> Свойство выполняет два преобразования:  
  
-   Он преобразует дату и время текущего <xref:System.DateTimeOffset> объекта в формате UTC. Преобразование выполняется путем вычитания значения <xref:System.DateTimeOffset.Offset%2A> свойство из дату и время текущего <xref:System.DateTimeOffset> объекта.  
  
-   Он преобразует <xref:System.DateTimeOffset> значение <xref:System.DateTime> значение.  
  
 <xref:System.DateTime.Kind%2A> Свойство возвращаемого <xref:System.DateTimeOffset.DateTime%2A> имеет значение <xref:System.DateTimeKind.Utc?displayProperty=nameWithType>.  
  
 Получение значения <xref:System.DateTimeOffset.UtcDateTime%2A> свойство эквивалентно вызову текущего <xref:System.DateTimeOffset> объекта `ToUniversalTime.DateTime` свойства, за исключением того, что <xref:System.DateTime.Kind%2A> последнее свойство <xref:System.DateTime> значение <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>.  
  
   
  
## Examples  
 В следующем примере показано, как использование <xref:System.DateTimeOffset.UtcDateTime%2A> свойство для отображения <xref:System.DateTimeOffset> значение и соответствующее ей время UTC.  
  
 [!code-csharp[System.DateTimeOffset.Properties#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/cs/Properties.cs#17)]
 [!code-vb[System.DateTimeOffset.Properties#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/vb/Properties.vb#17)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UtcNow">
      <MemberSignature Language="C#" Value="public static DateTimeOffset UtcNow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.DateTimeOffset UtcNow" />
      <MemberSignature Language="DocId" Value="P:System.DateTimeOffset.UtcNow" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property UtcNow As DateTimeOffset" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property DateTimeOffset UtcNow { DateTimeOffset get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает объект <see cref="T:System.DateTimeOffset" />, в качестве даты и времени которого установлены текущие дата и время в формате UTC, а в качестве смещения — значение <see cref="F:System.TimeSpan.Zero" />.</summary>
        <value>Объект, дата и время которого совпадают с текущим временем в формате UTC, а смещение которого равно <see cref="F:System.TimeSpan.Zero" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.DateTimeOffset.UtcNow%2A> Свойство вычисляет текущее всеобщее скоординированное время (UTC) в зависимости от локального системного времени и смещения часового пояса локальной системы.  
  
 Точность компонента миллисекунд текущее время UTC зависит от разрешения системных часов. Windows NT 3.5 и более поздней версии и версии операционной системы Windows Vista разрешение часов является приблизительно соответствует 10 – 15 миллисекундам.  
  
   
  
## Examples  
 В следующем примере показано отношение между временем в формате UTC и местным временем.  
  
 [!code-csharp[System.DateTimeOffset.Properties#18](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/cs/Properties.cs#18)]
 [!code-vb[System.DateTimeOffset.Properties#18](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/vb/Properties.vb#18)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.DateTimeOffset.Now" />
      </Docs>
    </Member>
    <Member MemberName="UtcTicks">
      <MemberSignature Language="C#" Value="public long UtcTicks { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 UtcTicks" />
      <MemberSignature Language="DocId" Value="P:System.DateTimeOffset.UtcTicks" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UtcTicks As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long UtcTicks { long get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает количество тактов, которое представляет дату и время текущего объекта <see cref="T:System.DateTimeOffset" /> в формате UTC.</summary>
        <value>Число тактов во времени объекта <see cref="T:System.DateTimeOffset" /> в формате UTC.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Значение <xref:System.DateTimeOffset.UtcTicks%2A> свойство представляет количество 100-наносекундных интервалов, прошедших с полуночи в 12:00:00 1 января 0001 года (значение <xref:System.DateTimeOffset.MinValue>). Он не включает тактов, которое будет добавлено по корректировочных секунд. Одна наносекунда равна одной миллиардной доли секунды; существует 10 миллионов тактов в секунду. Значение <xref:System.DateTimeOffset.UtcTicks%2A> свойство лежит в диапазоне от `DateTimeOffset.MinValue.Ticks` для `DateTimeOffset.MaxValue.Ticks`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Year">
      <MemberSignature Language="C#" Value="public int Year { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Year" />
      <MemberSignature Language="DocId" Value="P:System.DateTimeOffset.Year" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Year As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Year { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает компонент года даты, представленный текущим объектом <see cref="T:System.DateTimeOffset" />.</summary>
        <value>Компонент года текущего объекта <see cref="T:System.DateTimeOffset" />, выраженный в виде целочисленного значения в диапазоне от 0 до 9999.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.DateTimeOffset.Year%2A> Не затрагивается значение <xref:System.DateTimeOffset.Offset%2A> свойства.  
  
 Можно также создать строковое представление <xref:System.DateTimeOffset> компонента года объекта путем вызова <xref:System.DateTimeOffset.ToString%2A> метод с описателей настраиваемого формата «y», «yy», «yyyy».  
  
   
  
## Examples  
 В следующем примере отображается компонент года <xref:System.DateTimeOffset> значение четырьмя способами:  
  
-   Путем получения значения из <xref:System.DateTimeOffset.Year%2A> свойство.  
  
-   Путем вызова <xref:System.DateTimeOffset.ToString%28System.String%29> метод с помощью описателя формата «y».  
  
-   Путем вызова <xref:System.DateTimeOffset.ToString%28System.String%29> метод с помощью описателя формата «yy».  
  
-   Путем вызова <xref:System.DateTimeOffset.ToString%28System.String%29> метод с помощью описателя формата «yyyy».  
  
 [!code-csharp[System.DateTimeOffset.Properties#19](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/cs/Properties.cs#19)]
 [!code-vb[System.DateTimeOffset.Properties#19](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/vb/Properties.vb#19)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>