<Type Name="EventHandler" FullName="System.EventHandler">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="07986ea157c411c7d8d2b8f8cc8045b040e5c96a" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36431294" />
  </Metadata>
  <TypeSignature Language="C#" Value="public delegate void EventHandler(object sender, EventArgs e);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed EventHandler extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.EventHandler" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub EventHandler(sender As Object, e As EventArgs)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void EventHandler(System::Object ^ sender, EventArgs ^ e);" />
  <TypeSignature Language="F#" Value="type EventHandler = delegate of obj * EventArgs -&gt; unit" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Parameters>
    <Parameter Name="sender" Type="System.Object" />
    <Parameter Name="e" Type="System.EventArgs" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="sender">Источник события.</param>
    <param name="e">Объект, не содержащий данных события.</param>
    <summary>Представляет метод, обрабатывающий событие, не имеющее данных.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Модели событий .NET Framework основана на существовании делегата события, связывающего событие с его обработчиком. Чтобы породить событие, требуются два элемента:  
  
-   Делегат, определяющий метод, который предоставляет ответ на событие.  
  
-   Кроме того класс, который содержит данные события, если событие предоставляет данные.  
  
 Делегат — это тип, который определяет сигнатуру, то есть тип возвращаемого значения и типы список параметров для метода. Тип делегата можно использовать для объявления переменной, которая может ссылаться на любой метод с такой же сигнатурой, что и делегат.  
  
 В стандартной сигнатуре делегата обработчика событий определяет метод, который не возвращает значение. Этот метод первый параметр принадлежит к типу <xref:System.Object> и ссылается на экземпляр, который инициирует событие. Второй параметр является производным от типа <xref:System.EventArgs> и содержит данные события. Если событие не создает данные события, второй параметр является просто значение <xref:System.EventArgs.Empty?displayProperty=nameWithType> поле. В противном случае второй параметр является типом, производным от <xref:System.EventArgs> и предоставляет всевозможные поля и свойства, необходимые для хранения данных о событиях.  
  
 <xref:System.EventHandler> Делегат является предопределенным делегатом, представляющим метод обработчика событий для события, не создает данные. Если событие генерирует данные, необходимо использовать универсальный <xref:System.EventHandler%601> класс делегата.  
  
 Чтобы связать событие с методом, который будет обрабатывать событие, добавьте в событие экземпляр делегата. Обработчик событий вызывается всякий раз, когда происходит событие, если делегат не удален.  
  
 Дополнительные сведения о делегатах обработчиков событий см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 В следующем примере показано событие с именем `ThresholdReached` , связанный с <xref:System.EventHandler> делегата. Метод, назначенный <xref:System.EventHandler> делегат вызывается `OnThresholdReached` метод.  
  
 [!code-cpp[EventsOverview#6](~/samples/snippets/cpp/VS_Snippets_CLR/eventsoverview/cpp/programwithdata.cpp#6)]
 [!code-csharp[EventsOverview#6](~/samples/snippets/csharp/VS_Snippets_CLR/eventsoverview/cs/programwithdata.cs#6)]
 [!code-vb[EventsOverview#6](~/samples/snippets/visualbasic/VS_Snippets_CLR/eventsoverview/vb/module1withdata.vb#6)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.EventHandler`1" />
    <altmember cref="T:System.EventArgs" />
    <altmember cref="T:System.Delegate" />
  </Docs>
</Type>