<Type Name="EventHandler&lt;TEventArgs&gt;" FullName="System.EventHandler&lt;TEventArgs&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="0de1f20485aeaaee467bd3da15188490b36a1286" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37728260" />
  </Metadata>
  <TypeSignature Language="C#" Value="public delegate void EventHandler&lt;TEventArgs&gt;(object sender, TEventArgs e);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed EventHandler`1&lt;TEventArgs&gt; extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.EventHandler`1" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub EventHandler(Of TEventArgs)(sender As Object, e As TEventArgs)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TEventArgs&gt;&#xA;public delegate void EventHandler(System::Object ^ sender, TEventArgs e);" />
  <TypeSignature Language="F#" Value="type EventHandler&lt;'EventArgs&gt; = delegate of obj * 'EventArgs -&gt; unit" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TEventArgs" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="sender" Type="System.Object" />
    <Parameter Name="e" Type="TEventArgs" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <typeparam name="TEventArgs">
      <span data-ttu-id="f3614-101">Тип данных события, создаваемых событием.</span>
      <span class="sxs-lookup">
        <span data-stu-id="f3614-101">The type of the event data generated by the event.</span>
      </span>
    </typeparam>
    <param name="sender">
      <span data-ttu-id="f3614-102">Источник события.</span>
      <span class="sxs-lookup">
        <span data-stu-id="f3614-102">The source of the event.</span>
      </span>
    </param>
    <param name="e">
      <span data-ttu-id="f3614-103">Объект, содержащий данные о событии.</span>
      <span class="sxs-lookup">
        <span data-stu-id="f3614-103">An object that contains the event data.</span>
      </span>
    </param>
    <summary>
      <span data-ttu-id="f3614-104">Представляет метод, обрабатывающий событие, когда событие предоставляет данные.</span>
      <span class="sxs-lookup">
        <span data-stu-id="f3614-104">Represents the method that will handle an event when the event provides data.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3614-105">Модели событий .NET Framework основана на использовании делегат события, связывающего событие с обработчиком.</span><span class="sxs-lookup"><span data-stu-id="f3614-105">The event model in the .NET Framework is based on having an event delegate that connects an event with its handler.</span></span> <span data-ttu-id="f3614-106">Чтобы породить событие, требуются два элемента:</span><span class="sxs-lookup"><span data-stu-id="f3614-106">To raise an event, two elements are needed:</span></span>  
  
-   <span data-ttu-id="f3614-107">Делегат, который ссылается на метод, который предоставляет ответ на событие.</span><span class="sxs-lookup"><span data-stu-id="f3614-107">A delegate that refers to a method that provides the response to the event.</span></span>  
  
-   <span data-ttu-id="f3614-108">Кроме того класс, который содержит данные события, в том случае, если событие предоставляет данные.</span><span class="sxs-lookup"><span data-stu-id="f3614-108">Optionally, a class that holds the event data, if the event provides data.</span></span>  
  
 <span data-ttu-id="f3614-109">Делегат — это тип, который определяет сигнатуру, то есть тип возвращаемого значения и типы список параметров для метода.</span><span class="sxs-lookup"><span data-stu-id="f3614-109">The delegate is a type that defines a signature, that is, the return value type and parameter list types for a method.</span></span> <span data-ttu-id="f3614-110">Тип делегата можно использовать для объявления переменной, которая может ссылаться на любой метод с сигнатурой делегата.</span><span class="sxs-lookup"><span data-stu-id="f3614-110">You can use the delegate type to declare a variable that can refer to any method with the same signature as the delegate.</span></span>  
  
 <span data-ttu-id="f3614-111">Стандартной сигнатурой делегата обработчика событий определяет метод, который не возвращает значение.</span><span class="sxs-lookup"><span data-stu-id="f3614-111">The standard signature of an event handler delegate defines a method that does not return a value.</span></span> <span data-ttu-id="f3614-112">Этот метод первый параметр имеет тип <xref:System.Object> и ссылается на экземпляр, вызывающий событие.</span><span class="sxs-lookup"><span data-stu-id="f3614-112">This method's first parameter is of type <xref:System.Object> and refers to the instance that raises the event.</span></span> <span data-ttu-id="f3614-113">Второй параметр является производным от типа <xref:System.EventArgs> и содержит данные события.</span><span class="sxs-lookup"><span data-stu-id="f3614-113">Its second parameter is derived from type <xref:System.EventArgs> and holds the event data.</span></span> <span data-ttu-id="f3614-114">Если событие не создает данные о событиях, второй параметр — просто значение <xref:System.EventArgs.Empty?displayProperty=nameWithType> поля.</span><span class="sxs-lookup"><span data-stu-id="f3614-114">If the event does not generate event data, the second parameter is simply the value of the <xref:System.EventArgs.Empty?displayProperty=nameWithType> field.</span></span> <span data-ttu-id="f3614-115">В противном случае — второй параметр — тип, производный от <xref:System.EventArgs> и предоставляет всевозможные поля и свойства, необходимые для хранения данных о событии.</span><span class="sxs-lookup"><span data-stu-id="f3614-115">Otherwise, the second parameter is a type derived from <xref:System.EventArgs> and supplies any fields or properties needed to hold the event data.</span></span>  
  
 <span data-ttu-id="f3614-116"><xref:System.EventHandler%601> Делегат — предварительно определенных делегат, представляющий метод обработчика событий для события, который генерирует данные.</span><span class="sxs-lookup"><span data-stu-id="f3614-116">The <xref:System.EventHandler%601> delegate is a predefined delegate that represents an event handler method for an event that generates data.</span></span> <span data-ttu-id="f3614-117">Преимущество использования <xref:System.EventHandler%601> не нужны для кодирования собственного пользовательского делегата, если событие создает данные события.</span><span class="sxs-lookup"><span data-stu-id="f3614-117">The advantage of using <xref:System.EventHandler%601> is that you do not need to code your own custom delegate if your event generates event data.</span></span> <span data-ttu-id="f3614-118">Достаточно просто указать тип объекта данных события как универсальный параметр.</span><span class="sxs-lookup"><span data-stu-id="f3614-118">You simply provide the type of the event data object as the generic parameter.</span></span>  
  
 <span data-ttu-id="f3614-119">Чтобы связать событие с методом, который будет обрабатывать событие, добавьте экземпляр делегата к событию.</span><span class="sxs-lookup"><span data-stu-id="f3614-119">To associate the event with the method that will handle the event, add an instance of the delegate to the event.</span></span> <span data-ttu-id="f3614-120">Обработчик событий вызывается всякий раз, когда происходит событие, если делегат не удален.</span><span class="sxs-lookup"><span data-stu-id="f3614-120">The event handler is called whenever the event occurs, unless you remove the delegate.</span></span>  
  
 <span data-ttu-id="f3614-121">Дополнительные сведения о делегатов обработчиков событий, см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="f3614-121">For more information about event handler delegates, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f3614-122">В следующем примере показано событие с именем `ThresholdReached`.</span><span class="sxs-lookup"><span data-stu-id="f3614-122">The following example shows an event named `ThresholdReached`.</span></span> <span data-ttu-id="f3614-123">Событие связано с <xref:System.EventHandler%601> делегировать.</span><span class="sxs-lookup"><span data-stu-id="f3614-123">The event is associated with an <xref:System.EventHandler%601> delegate.</span></span>  
  
 [!code-cpp[EventsOverview#6](~/samples/snippets/cpp/VS_Snippets_CLR/eventsoverview/cpp/programwithdata.cpp#6)]
 [!code-csharp[EventsOverview#6](~/samples/snippets/csharp/VS_Snippets_CLR/eventsoverview/cs/programwithdata.cs#6)]
 [!code-vb[EventsOverview#6](~/samples/snippets/visualbasic/VS_Snippets_CLR/eventsoverview/vb/module1withdata.vb#6)]  
  
 ]]></format>
    </remarks>
    <altCompliant cref="T:System.EventHandler" />
    <altmember cref="T:System.EventHandler" />
    <altmember cref="T:System.EventArgs" />
    <altmember cref="T:System.Delegate" />
  </Docs>
</Type>