<Type Name="Func&lt;T,TResult&gt;" FullName="System.Func&lt;T,TResult&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="92c283526b5eff775e544f9b80f8037a8be49acc" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30727558" />
  </Metadata>
  <TypeSignature Language="C#" Value="public delegate TResult Func&lt;in T,out TResult&gt;(T arg);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed Func`2&lt;- T, + TResult&gt; extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Func`2" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Function Func(Of In T, Out TResult)(arg As T) As TResult " />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T, typename TResult&gt;&#xA;public delegate TResult Func(T arg);" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T">
      <Constraints>
        <ParameterAttribute>Contravariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="TResult">
      <Constraints>
        <ParameterAttribute>Covariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("System.Core, Version=3.5.0.0, Culture=Neutral, PublicKeyToken=b77a5c561934e089")</AttributeName>
    </Attribute>
  </Attributes>
  <Parameters>
    <Parameter Name="arg" Type="T" />
  </Parameters>
  <ReturnValue>
    <ReturnType>TResult</ReturnType>
  </ReturnValue>
  <Docs>
    <typeparam name="T">
      <span data-ttu-id="bf68a-101">Тип параметра метода, инкапсулируемого данным делегатом.</span>
      <span class="sxs-lookup">
        <span data-stu-id="bf68a-101">The type of the parameter of the method that this delegate encapsulates.</span>
      </span>
    </typeparam>
    <typeparam name="TResult">
      <span data-ttu-id="bf68a-102">Тип возвращаемого значения метода, инкапсулируемого данным делегатом.</span>
      <span class="sxs-lookup">
        <span data-stu-id="bf68a-102">The type of the return value of the method that this delegate encapsulates.</span>
      </span>
    </typeparam>
    <param name="arg">
      <span data-ttu-id="bf68a-103">Параметр метода, инкапсулируемого данным делегатом.</span>
      <span class="sxs-lookup">
        <span data-stu-id="bf68a-103">The parameter of the method that this delegate encapsulates.</span>
      </span>
    </param>
    <summary>
      <span data-ttu-id="bf68a-104">Инкапсулирует метод с одним параметром и возвращает значение типа, указанного в параметре <typeparamref name="TResult" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="bf68a-104">Encapsulates a method that has one parameter and returns a value of the type specified by the <typeparamref name="TResult" /> parameter.</span>
      </span>
    </summary>
    <returns>
      <span data-ttu-id="bf68a-105">Возвращаемое значение метода, инкапсулируемого данным делегатом.</span>
      <span class="sxs-lookup">
        <span data-stu-id="bf68a-105">The return value of the method that this delegate encapsulates.</span>
      </span>
    </returns>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bf68a-106">Этот делегат можно использовать для представления метода, который может быть передан в качестве параметра без явного объявления пользовательского делегата.</span><span class="sxs-lookup"><span data-stu-id="bf68a-106">You can use this delegate to represent a method that can be passed as a parameter without explicitly declaring a custom delegate.</span></span> <span data-ttu-id="bf68a-107">Инкапсулированный метод должен соответствовать сигнатуре метода, определенные этим делегатом.</span><span class="sxs-lookup"><span data-stu-id="bf68a-107">The encapsulated method must correspond to the method signature that is defined by this delegate.</span></span> <span data-ttu-id="bf68a-108">Это означает, что инкапсулированный метод должен иметь один параметр, передаваемый по значению и что он должен возвращать значение.</span><span class="sxs-lookup"><span data-stu-id="bf68a-108">This means that the encapsulated method must have one parameter that is passed to it by value, and that it must return a value.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="bf68a-109">Для ссылки на метод, который имеет один параметр и возвращает `void` (или в Visual Basic, объявленный как `Sub` , а не как `Function`), использовать универсальный <xref:System.Action%601> вместо этого делегата.</span><span class="sxs-lookup"><span data-stu-id="bf68a-109">To reference a method that has one parameter and returns `void` (or in Visual Basic, that is declared as a `Sub` rather than as a `Function`), use the generic <xref:System.Action%601> delegate instead.</span></span>  
  
 <span data-ttu-id="bf68a-110">При использовании <xref:System.Func%602> делегата, не нужно явным образом определять делегат, инкапсулирующий метод с одним параметром.</span><span class="sxs-lookup"><span data-stu-id="bf68a-110">When you use the <xref:System.Func%602> delegate, you do not have to explicitly define a delegate that encapsulates a method with a single parameter.</span></span> <span data-ttu-id="bf68a-111">Например, в следующем коде явно объявляется делегат с именем `ConvertMethod` и ссылка на `UppercaseString` способ его экземпляр делегата.</span><span class="sxs-lookup"><span data-stu-id="bf68a-111">For example, the following code explicitly declares a delegate named `ConvertMethod` and assigns a reference to the `UppercaseString` method to its delegate instance.</span></span>  
  
 [!code-csharp[System.Func~2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Func~2/cs/Delegate.cs#1)]
 [!code-vb[System.Func~2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Func~2/vb/Delegate.vb#1)]  
  
 <span data-ttu-id="bf68a-112">В следующем примере этот код упрощается путем создания экземпляра <xref:System.Func%602> делегат вместо явного объявления нового делегата и присвоения именованного метода.</span><span class="sxs-lookup"><span data-stu-id="bf68a-112">The following example simplifies this code by instantiating the <xref:System.Func%602> delegate instead of explicitly defining a new delegate and assigning a named method to it.</span></span>  
  
 [!code-csharp[System.Func~2#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Func~2/cs/Func2_1.cs#2)]
 [!code-vb[System.Func~2#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Func~2/vb/Func2_1.vb#2)]  
  
 <span data-ttu-id="bf68a-113">Можно также использовать <xref:System.Func%602> делегировать с анонимных методов в C#, как показано в следующем примере.</span><span class="sxs-lookup"><span data-stu-id="bf68a-113">You can also use the <xref:System.Func%602> delegate with anonymous methods in C#, as the following example illustrates.</span></span> <span data-ttu-id="bf68a-114">(Введение анонимных методов см. в разделе [анонимные методы](~/docs/csharp/programming-guide/statements-expressions-operators/anonymous-methods.md).)</span><span class="sxs-lookup"><span data-stu-id="bf68a-114">(For an introduction to anonymous methods, see [Anonymous Methods](~/docs/csharp/programming-guide/statements-expressions-operators/anonymous-methods.md).)</span></span>  
  
 [!code-csharp[System.Func~2#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Func~2/cs/Anon.cs#3)]  
  
 <span data-ttu-id="bf68a-115">Можно также назначить лямбда-выражение, <xref:System.Func%602> делегат, как показано в следующем примере.</span><span class="sxs-lookup"><span data-stu-id="bf68a-115">You can also assign a lambda expression to a <xref:System.Func%602> delegate, as the following example illustrates.</span></span> <span data-ttu-id="bf68a-116">(Введение лямбда-выражений см. в разделе [лямбда-выражения](~/docs/visual-basic/programming-guide/language-features/procedures/lambda-expressions.md) и [лямбда-выражения](~/docs/csharp/programming-guide/statements-expressions-operators/lambda-expressions.md).)</span><span class="sxs-lookup"><span data-stu-id="bf68a-116">(For an introduction to lambda expressions, see [Lambda Expressions](~/docs/visual-basic/programming-guide/language-features/procedures/lambda-expressions.md) and [Lambda Expressions](~/docs/csharp/programming-guide/statements-expressions-operators/lambda-expressions.md).)</span></span>  
  
 [!code-csharp[System.Func~2#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Func~2/cs/Lambda.cs#4)]
 [!code-vb[System.Func~2#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Func~2/vb/Lambda.vb#4)]  
  
 <span data-ttu-id="bf68a-117">Базовый тип лямбда-выражения является одним из универсальных `Func` делегатов.</span><span class="sxs-lookup"><span data-stu-id="bf68a-117">The underlying type of a lambda expression is one of the generic `Func` delegates.</span></span> <span data-ttu-id="bf68a-118">Это дает возможность передать лямбда-выражение в качестве параметра без явного присвоения его делегату.</span><span class="sxs-lookup"><span data-stu-id="bf68a-118">This makes it possible to pass a lambda expression as a parameter without explicitly assigning it to a delegate.</span></span> <span data-ttu-id="bf68a-119">В частности так как многие методы типов в <xref:System.Linq> пространство имен имеет <xref:System.Func%602> параметры, можно передать эти методы лямбда-выражение без явного создания <xref:System.Func%602> делегата.</span><span class="sxs-lookup"><span data-stu-id="bf68a-119">In particular, because many methods of types in the <xref:System.Linq> namespace have <xref:System.Func%602> parameters, you can pass these methods a lambda expression without explicitly instantiating a <xref:System.Func%602> delegate.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bf68a-120">Следующий пример демонстрирует объявление и использование <xref:System.Func%602> делегата.</span><span class="sxs-lookup"><span data-stu-id="bf68a-120">The following example demonstrates how to declare and use a <xref:System.Func%602> delegate.</span></span> <span data-ttu-id="bf68a-121">В этом примере объявляется <xref:System.Func%602> переменной и присваивает его лямбда-выражение, преобразующее символы в строке в верхний регистр.</span><span class="sxs-lookup"><span data-stu-id="bf68a-121">This example declares a <xref:System.Func%602> variable and assigns it a lambda expression that converts the characters in a string to uppercase.</span></span> <span data-ttu-id="bf68a-122">Делегат, инкапсулирующий этот метод впоследствии передается <xref:System.Linq.Enumerable.Select%2A?displayProperty=nameWithType> метод для преобразования строк в массиве строк в верхний регистр.</span><span class="sxs-lookup"><span data-stu-id="bf68a-122">The delegate that encapsulates this method is subsequently passed to the <xref:System.Linq.Enumerable.Select%2A?displayProperty=nameWithType> method to change the strings in an array of strings to uppercase.</span></span>  
  
 [!code-csharp[System.Func~2#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Func~2/cs/Example.cs#5)]
 [!code-vb[System.Func~2#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Func~2/vb/Example.vb#5)]  
  
 ]]></format>
    </remarks>
  </Docs>
</Type>