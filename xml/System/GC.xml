<Type Name="GC" FullName="System.GC">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="11996d97bef6121bce982a8368bef5e8197c8a44" />
    <Meta Name="ms.sourcegitcommit" Value="1465f1a9bce3970cd9e95769eaa641b92a0a22d5" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="04/18/2018" />
    <Meta Name="ms.locfileid" Value="31469403" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class GC" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit GC extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.GC" />
  <TypeSignature Language="VB.NET" Value="Public Class GC" />
  <TypeSignature Language="C++ CLI" Value="public ref class GC abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="503bd-101">Управляет системным сборщиком мусора — службой, которая автоматически высвобождает неиспользуемую память.</span>
      <span class="sxs-lookup">
        <span data-stu-id="503bd-101">Controls the system garbage collector, a service that automatically reclaims unused memory.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="503bd-102">Сборщик мусора — это компонент времени выполнения, который управляет выделением и освобождением памяти для управляемых.</span><span class="sxs-lookup"><span data-stu-id="503bd-102">The garbage collector is a common language runtime component that controls the allocation and release of managed memory.</span></span> <span data-ttu-id="503bd-103">Методы в этом классе влияют при выполнении сборки мусора для объекта и освобождение ресурсов, выделенных с помощью объекта.</span><span class="sxs-lookup"><span data-stu-id="503bd-103">The methods in this class influence when garbage collection is performed on an object and when resources allocated by an object are released.</span></span> <span data-ttu-id="503bd-104">Свойства этого класса предоставляют сведения о общий объем доступной памяти в системе и возрастную категорию или создание память, выделенная для объекта.</span><span class="sxs-lookup"><span data-stu-id="503bd-104">Properties in this class provide information about the total amount of memory available in the system and the age category, or generation, of memory allocated to an object.</span></span>  
  
 <span data-ttu-id="503bd-105">Сборщик мусора отслеживает и уничтожает объекты, находящиеся в управляемой памяти.</span><span class="sxs-lookup"><span data-stu-id="503bd-105">The garbage collector tracks and reclaims objects allocated in managed memory.</span></span> <span data-ttu-id="503bd-106">Периодически сборщик мусора выполняет сборку мусора освободить память, выделенную для объектов, для которых не существует допустимых ссылок.</span><span class="sxs-lookup"><span data-stu-id="503bd-106">Periodically, the garbage collector performs garbage collection to reclaim memory allocated to objects for which there are no valid references.</span></span> <span data-ttu-id="503bd-107">Сборка мусора происходит автоматически, если запрос на выделение памяти не может быть удовлетворено доступного объема свободной памяти.</span><span class="sxs-lookup"><span data-stu-id="503bd-107">Garbage collection happens automatically when a request for memory cannot be satisfied using available free memory.</span></span> <span data-ttu-id="503bd-108">Кроме того, приложение может принудительно запустить с помощью сбора мусора <xref:System.GC.Collect%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="503bd-108">Alternatively, an application can force garbage collection using the <xref:System.GC.Collect%2A> method.</span></span>  
  
 <span data-ttu-id="503bd-109">Сборка мусора состоит из следующих шагов:</span><span class="sxs-lookup"><span data-stu-id="503bd-109">Garbage collection consists of the following steps:</span></span>  
  
1.  <span data-ttu-id="503bd-110">Сборщик мусора выполняет поиск управляемых объектов, на которые имеются ссылки в управляемом коде.</span><span class="sxs-lookup"><span data-stu-id="503bd-110">The garbage collector searches for managed objects that are referenced in managed code.</span></span>  
  
2.  <span data-ttu-id="503bd-111">Сборщик мусора пытается завершить объекты, на которые нет ссылок.</span><span class="sxs-lookup"><span data-stu-id="503bd-111">The garbage collector tries to finalize objects that are not referenced.</span></span>  
  
3.  <span data-ttu-id="503bd-112">Сборщик мусора освобождает объекты, на которые нет ссылок и освобождает память.</span><span class="sxs-lookup"><span data-stu-id="503bd-112">The garbage collector frees objects that are not referenced and reclaims their memory.</span></span>  
  
 <span data-ttu-id="503bd-113">Этот раздел включает следующие подразделы:</span><span class="sxs-lookup"><span data-stu-id="503bd-113">This topic includes the following sections:</span></span>  
  
 <span data-ttu-id="503bd-114">[Сборщик мусора и неуправляемые ресурсы](#unmanaged) </span><span class="sxs-lookup"><span data-stu-id="503bd-114">[The garbage collector and unmanaged resources](#unmanaged) </span></span>  
 <span data-ttu-id="503bd-115">[Время существования объектов и версий](#generations) </span><span class="sxs-lookup"><span data-stu-id="503bd-115">[Object aging and generations](#generations) </span></span>  
 [<span data-ttu-id="503bd-116">Отключение сбора мусора</span><span class="sxs-lookup"><span data-stu-id="503bd-116">Disallowing garbage collection</span></span>](#NoGCRegion)  
  
<a name="unmanaged"></a>   
## <a name="the-garbage-collector-and-unmanaged-resources"></a><span data-ttu-id="503bd-117">Сборщик мусора и неуправляемые ресурсы</span><span class="sxs-lookup"><span data-stu-id="503bd-117">The garbage collector and unmanaged resources</span></span>  
 <span data-ttu-id="503bd-118">Во время сбора сборщик мусора не освобождает объект, при обнаружении одну или несколько ссылок на объект в управляемом коде.</span><span class="sxs-lookup"><span data-stu-id="503bd-118">During a collection, the garbage collector will not free an object if it finds one or more references to the object in managed code.</span></span> <span data-ttu-id="503bd-119">Тем не менее сборщик мусора не распознает ссылки на объект из неуправляемого кода и может уничтожать объекты, которые используются исключительно в неуправляемом коде, если явно запрещено сделать это.</span><span class="sxs-lookup"><span data-stu-id="503bd-119">However, the garbage collector does not recognize references to an object from unmanaged code, and might free objects that are being used exclusively in unmanaged code unless explicitly prevented from doing so.</span></span> <span data-ttu-id="503bd-120"><xref:System.GC.KeepAlive%2A> Метод предоставляет механизм, который не позволяет сборщику мусора уничтожать объекты, которые по-прежнему используются в неуправляемом коде.</span><span class="sxs-lookup"><span data-stu-id="503bd-120">The <xref:System.GC.KeepAlive%2A> method provides a mechanism that prevents the garbage collector from collecting objects that are still in use in unmanaged code.</span></span>  
  
 <span data-ttu-id="503bd-121">Помимо распределения управляемой памяти реализации сборщика мусора не работают со сведениями о ресурсах, принадлежащих объекту, таких как дескрипторы файлов или подключения к базе данных.</span><span class="sxs-lookup"><span data-stu-id="503bd-121">Aside from managed memory allocations, implementations of the garbage collector do not maintain information about resources held by an object, such as file handles or database connections.</span></span> <span data-ttu-id="503bd-122">Если тип использует неуправляемые ресурсы, которые должны быть освобождены до освобождения экземпляров типа, этот тип может реализовать метод завершения.</span><span class="sxs-lookup"><span data-stu-id="503bd-122">When a type uses unmanaged resources that must be released before instances of the type are reclaimed, the type can implement a finalizer.</span></span>  
  
 <span data-ttu-id="503bd-123">В большинстве случаев финализаторы реализуются путем переопределения <xref:System.Object.Finalize%2A?displayProperty=nameWithType> метод; Однако типы, написанные на C# или C++ реализуют деструкторы, которые компилятор преобразует в переопределения <xref:System.Object.Finalize%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="503bd-123">In most cases, finalizers are implemented by overriding the <xref:System.Object.Finalize%2A?displayProperty=nameWithType> method; however, types written in C# or C++ implement destructors, which compilers turn into an override of <xref:System.Object.Finalize%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="503bd-124">В большинстве случаев Если у объекта есть метод завершения, сборщик мусора вызывает его до освобождения объекта.</span><span class="sxs-lookup"><span data-stu-id="503bd-124">In most cases, if an object has a finalizer, the garbage collector calls it prior to freeing the object.</span></span> <span data-ttu-id="503bd-125">Тем не менее сборщик мусора не требуется вызывать методы завершения во всех случаях; например <xref:System.GC.SuppressFinalize%2A> метод явным образом запрещает метода завершения объекта вызова.</span><span class="sxs-lookup"><span data-stu-id="503bd-125">However, the garbage collector is not required to call finalizers in all situations; for example, the <xref:System.GC.SuppressFinalize%2A> method explicitly prevents an object's finalizer from being called.</span></span> <span data-ttu-id="503bd-126">Кроме того сборщик мусора не требуется для использования определенного потока для завершения объектов или гарантировал порядок вызова методов завершения для объектов, которые ссылаются друг на друга, но в остальном доступных для сборки мусора.</span><span class="sxs-lookup"><span data-stu-id="503bd-126">Also, the garbage collector is not required to use a specific thread to finalize objects, or guarantee the order in which finalizers are called for objects that reference each other but are otherwise available for garbage collection.</span></span>  
  
 <span data-ttu-id="503bd-127">В сценариях, где ресурсы должны быть освобождены в определенное время, классы могут реализовывать <xref:System.IDisposable> интерфейс, содержащий <xref:System.IDisposable.Dispose%2A?displayProperty=nameWithType> метод, который выполняет задачи управления и очистку ресурсов.</span><span class="sxs-lookup"><span data-stu-id="503bd-127">In scenarios where resources must be released at a specific time, classes can implement the <xref:System.IDisposable> interface, which contains the <xref:System.IDisposable.Dispose%2A?displayProperty=nameWithType> method that performs resource management and cleanup tasks.</span></span> <span data-ttu-id="503bd-128">Классы, реализующие <xref:System.IDisposable.Dispose%2A> , необходимо указать как часть своего контракта класса, и время вызова метода очистки объекта потребителями класса.</span><span class="sxs-lookup"><span data-stu-id="503bd-128">Classes that implement <xref:System.IDisposable.Dispose%2A> must specify, as part of their class contract, if and when class consumers call the method to clean up the object.</span></span> <span data-ttu-id="503bd-129">Сборщик мусора не, по умолчанию вызывает <xref:System.IDisposable.Dispose%2A> метод, однако реализации <xref:System.IDisposable.Dispose%2A> метод можно вызывать методы в <xref:System.GC> класса для настройки поведения сборщика мусора.</span><span class="sxs-lookup"><span data-stu-id="503bd-129">The garbage collector does not, by default, call the <xref:System.IDisposable.Dispose%2A> method; however, implementations of the <xref:System.IDisposable.Dispose%2A> method can call methods in the <xref:System.GC> class to customize the finalization behavior of the garbage collector.</span></span>  
  
 <span data-ttu-id="503bd-130">Дополнительные сведения о завершении объекта и шаблон dispose см. в разделе [очистки неуправляемых ресурсов](~/docs/standard/garbage-collection/unmanaged.md).</span><span class="sxs-lookup"><span data-stu-id="503bd-130">For more information on object finalization and the dispose pattern, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md).</span></span>  
  
<a name="generations"></a>   
## <a name="object-aging-and-generations"></a><span data-ttu-id="503bd-131">Время существования объектов и версий</span><span class="sxs-lookup"><span data-stu-id="503bd-131">Object aging and generations</span></span>  
 <span data-ttu-id="503bd-132">В среде CLR сборщик мусора поддерживает концепцию возраста объектов поколений.</span><span class="sxs-lookup"><span data-stu-id="503bd-132">The garbage collector in the common language runtime supports object aging using generations.</span></span> <span data-ttu-id="503bd-133">Поколение — это единица измерения относительного времени хранения объектов в памяти.</span><span class="sxs-lookup"><span data-stu-id="503bd-133">A generation is a unit of measure of the relative age of objects in memory.</span></span> <span data-ttu-id="503bd-134">Номер поколения, или возраст объекта указывает поколения, к которой принадлежит объект.</span><span class="sxs-lookup"><span data-stu-id="503bd-134">The generation number, or age, of an object indicates the generation to which an object belongs.</span></span> <span data-ttu-id="503bd-135">Объекты, создаваемые дополнительные недавно входят новые поколения и имеют меньший номер поколения, чем объекты, созданные ранее в приложение жизненного цикла.</span><span class="sxs-lookup"><span data-stu-id="503bd-135">Objects created more recently are part of newer generations, and have lower generation numbers than objects created earlier in the application life cycle.</span></span> <span data-ttu-id="503bd-136">Объекты в поколении самые последние находятся в поколении 0.</span><span class="sxs-lookup"><span data-stu-id="503bd-136">Objects in the most recent generation are in generation 0.</span></span> <span data-ttu-id="503bd-137">Данная реализация сборщика мусора поддерживает три поколения объектов поколения 0, 1 и 2.</span><span class="sxs-lookup"><span data-stu-id="503bd-137">This implementation of the garbage collector supports three generations of objects, generations 0, 1, and 2.</span></span> <span data-ttu-id="503bd-138">Можно извлечь значение <xref:System.GC.MaxGeneration%2A> свойства, чтобы определить максимальный номер поколения поддерживается системой.</span><span class="sxs-lookup"><span data-stu-id="503bd-138">You can retrieve the value of the <xref:System.GC.MaxGeneration%2A> property to determine the maximum generation number supported by the system.</span></span>  
  
 <span data-ttu-id="503bd-139">Время существования объекта позволяет приложениям целевой сборка мусора на определенное число поколений, вместо сборщику мусора обрабатывать все поколения.</span><span class="sxs-lookup"><span data-stu-id="503bd-139">Object aging allows applications to target garbage collection at a specific set of generations rather than requiring the garbage collector to evaluate all generations.</span></span> <span data-ttu-id="503bd-140">Перегруженные версии <xref:System.GC.Collect%2A> метод, который включает `generation` позволяют указать мусора старших поколений.</span><span class="sxs-lookup"><span data-stu-id="503bd-140">Overloads of the <xref:System.GC.Collect%2A> method that include a `generation` parameter allow you to specify the oldest generation to be garbage collected.</span></span>  
  
<a name="NoGCRegion"></a>   
## <a name="disallowing-garbage-collection"></a><span data-ttu-id="503bd-141">Отключение сбора мусора</span><span class="sxs-lookup"><span data-stu-id="503bd-141">Disallowing garbage collection</span></span>  
 <span data-ttu-id="503bd-142">Начиная с [!INCLUDE[net_v46](~/includes/net-v46-md.md)], сборщик мусора поддерживает GC режим задержки без области, можно использовать во время выполнения критического пути, в какой сборке мусора коллекции может отрицательно сказаться на производительности приложения.</span><span class="sxs-lookup"><span data-stu-id="503bd-142">Starting with the [!INCLUDE[net_v46](~/includes/net-v46-md.md)], the garbage collector supports a no GC region latency mode that can be used during the execution of critical paths in which garbage collection can adversely affect an app's performance.</span></span> <span data-ttu-id="503bd-143">Сборка Мусора режим задержки без области необходимо указать объем памяти, который может быть выделен без помех сборщиком мусора.</span><span class="sxs-lookup"><span data-stu-id="503bd-143">The no GC region latency mode requires that you specify an amount of memory that can be allocated without interference from the garbage collector.</span></span> <span data-ttu-id="503bd-144">Если среда выполнения может выделить память, среда выполнения не выполнит сбор мусора во время выполнения кода на критическом пути.</span><span class="sxs-lookup"><span data-stu-id="503bd-144">If the runtime can allocate that memory, the runtime will not perform a garbage collection while code in the critical path is executing.</span></span>  
  
 <span data-ttu-id="503bd-145">Определение начала критический путь без области сборки Мусора путем вызова одной из перегрузок <xref:System.GC.TryStartNoGCRegion%2A>.</span><span class="sxs-lookup"><span data-stu-id="503bd-145">You define the beginning of the critical path of the no GC region by calling one of the overloads of the <xref:System.GC.TryStartNoGCRegion%2A>.</span></span> <span data-ttu-id="503bd-146">Укажите окончание его критическим путем вызова <xref:System.GC.EndNoGCRegion%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="503bd-146">You specify the end of its critical path by calling the <xref:System.GC.EndNoGCRegion%2A> method.</span></span>  
  
 <span data-ttu-id="503bd-147">Не удается вложить вызовы <xref:System.GC.TryStartNoGCRegion%2A> метод и вы должны вызывать только <xref:System.GC.EndNoGCRegion%2A> метод, если среда выполнения в данный момент в режим задержки без области сборки Мусора.</span><span class="sxs-lookup"><span data-stu-id="503bd-147">You cannot nest calls to the <xref:System.GC.TryStartNoGCRegion%2A> method, and you should only call the <xref:System.GC.EndNoGCRegion%2A> method if the runtime is currently in no GC region latency mode.</span></span> <span data-ttu-id="503bd-148">Другими словами, не следует вызывать <xref:System.GC.TryStartNoGCRegion%2A> несколько раз (после первого вызова метода, последующие вызовы не будет выполнено), и не должен ожидать вызовы <xref:System.GC.EndNoGCRegion%2A> для успешного выполнения только потому, что первый вызов <xref:System.GC.TryStartNoGCRegion%2A> успешно выполнен.</span><span class="sxs-lookup"><span data-stu-id="503bd-148">In other words, you should not call <xref:System.GC.TryStartNoGCRegion%2A> multiple times (after the first method call, subsequent calls will not succeed), and you should not expect calls to <xref:System.GC.EndNoGCRegion%2A> to succeed just because the first call to <xref:System.GC.TryStartNoGCRegion%2A> succeeded.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="503bd-149">В следующем примере несколько методов сборки Мусора поколения памяти данные о блоке неиспользуемых объектов и печати на консоль.</span><span class="sxs-lookup"><span data-stu-id="503bd-149">The following example uses several GC methods to get generation and memory information about a block of unused objects and print it to the console.</span></span> <span data-ttu-id="503bd-150">Неиспользуемые объекты затем собираются и отображаются результирующие итоги памяти.</span><span class="sxs-lookup"><span data-stu-id="503bd-150">The unused objects are then collected, and the resulting memory totals are displayed.</span></span>  
  
 [!code-cpp[System.GC.Collect Int Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.gc.collect int example/CPP/class1.cpp#1)]
 [!code-csharp[System.GC.Collect Int Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.gc.collect int example/CS/class1.cs#1)]
 [!code-vb[System.GC.Collect Int Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.gc.collect int example/VB/class1.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Runtime.GCSettings" />
  </Docs>
  <Members>
    <Member MemberName="AddMemoryPressure">
      <MemberSignature Language="C#" Value="public static void AddMemoryPressure (long bytesAllocated);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddMemoryPressure(int64 bytesAllocated) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.GC.AddMemoryPressure(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddMemoryPressure (bytesAllocated As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddMemoryPressure(long bytesAllocated);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytesAllocated" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="bytesAllocated">
          <span data-ttu-id="503bd-151">Дополнительный объем выделенной неуправляемой памяти.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503bd-151">The incremental amount of unmanaged memory that has been allocated.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="503bd-152">Информирует среду выполнения о выделении большого объема неуправляемой памяти, которую необходимо учесть при планировании сборки мусора.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503bd-152">Informs the runtime of a large allocation of unmanaged memory that should be taken into account when scheduling garbage collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="503bd-153">При определении времени запланировать сбор мусора, среда выполнения учитывает выделенный объем управляемой памяти.</span><span class="sxs-lookup"><span data-stu-id="503bd-153">In determining when to schedule garbage collection, the runtime takes into account how much managed memory is allocated.</span></span> <span data-ttu-id="503bd-154">Если маленький управляемый объект выделяет большой объем неуправляемой памяти, среда выполнения учитывает только управляемую память и поэтому недооценивает срочность планирования сборки мусора.</span><span class="sxs-lookup"><span data-stu-id="503bd-154">If a small managed object allocates a large amount of unmanaged memory, the runtime takes into account only the managed memory, and thus underestimates the urgency of scheduling garbage collection.</span></span> <span data-ttu-id="503bd-155"><xref:System.GC.AddMemoryPressure%2A> Метод информирует среду выполнения о этот дополнительную нагрузку на системную память.</span><span class="sxs-lookup"><span data-stu-id="503bd-155">The <xref:System.GC.AddMemoryPressure%2A> method informs the runtime of this additional pressure on system memory.</span></span>  
  
 <span data-ttu-id="503bd-156">В простейшей схеме использования управляемый объект выделяет неуправляемую память в конструкторе и освобождает его в `Dispose` или `Finalize` метод.</span><span class="sxs-lookup"><span data-stu-id="503bd-156">In the simplest usage pattern, a managed object allocates unmanaged memory in the constructor and releases it in the `Dispose` or `Finalize` method.</span></span> <span data-ttu-id="503bd-157">Вызовите <xref:System.GC.AddMemoryPressure%2A> метод после выделения неуправляемой памяти и вызывать <xref:System.GC.RemoveMemoryPressure%2A> метод после ее освобождения.</span><span class="sxs-lookup"><span data-stu-id="503bd-157">Call the <xref:System.GC.AddMemoryPressure%2A> method after allocating the unmanaged memory, and call the <xref:System.GC.RemoveMemoryPressure%2A> method after releasing it.</span></span>  
  
 <span data-ttu-id="503bd-158">В более сложных сценариях, где выделения неуправляемой памяти существенно изменяется за время жизни управляемого объекта, можно вызвать <xref:System.GC.AddMemoryPressure%2A> и <xref:System.GC.RemoveMemoryPressure%2A> методов для взаимодействия эти добавочных изменений в среду выполнения.</span><span class="sxs-lookup"><span data-stu-id="503bd-158">In more complicated scenarios, where the unmanaged memory allocation changes substantially during the lifetime of the managed object, you can call the <xref:System.GC.AddMemoryPressure%2A> and <xref:System.GC.RemoveMemoryPressure%2A> methods to communicate these incremental changes to the runtime.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="503bd-159">Необходимо гарантировать, что удаляется точно степень давления, можно добавить.</span><span class="sxs-lookup"><span data-stu-id="503bd-159">You must ensure that you remove exactly the amount of pressure you add.</span></span> <span data-ttu-id="503bd-160">Невыполнение этого может отрицательно сказаться на производительности системы в приложениях, выполняемых в течение длительного времени.</span><span class="sxs-lookup"><span data-stu-id="503bd-160">Failing to do so can adversely affect the performance of the system in applications that run for long periods of time.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="503bd-161">
            <paramref name="bytesAllocated" /> меньше или равно 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503bd-161">
              <paramref name="bytesAllocated" /> is less than or equal to 0.</span>
          </span>
          <span data-ttu-id="503bd-162">- или -</span>
          <span class="sxs-lookup">
            <span data-stu-id="503bd-162">-or-</span>
          </span>
          <span data-ttu-id="503bd-163">На 32-разрядном компьютере <paramref name="bytesAllocated" /> больше <see cref="F:System.Int32.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503bd-163">On a 32-bit computer, <paramref name="bytesAllocated" /> is larger than <see cref="F:System.Int32.MaxValue" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="503bd-164">для возможности вызова неуправляемого кода, при обработке приоритетом сборки мусора.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503bd-164">for the ability to call unmanaged code when manipulating garbage-collection priority.</span>
          </span>
          <span data-ttu-id="503bd-165">Связанное перечисление: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="503bd-165">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="503bd-166">требуется полное доверие для непосредственно вызывающего метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503bd-166">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="503bd-167">Этот член не может использоваться частично доверенным или прозрачным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503bd-167">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="CancelFullGCNotification">
      <MemberSignature Language="C#" Value="public static void CancelFullGCNotification ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CancelFullGCNotification() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.GC.CancelFullGCNotification" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub CancelFullGCNotification ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void CancelFullGCNotification();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="503bd-168">Отменяет регистрацию уведомления о сборке мусора.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503bd-168">Cancels the registration of a garbage collection notification.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="503bd-169">Этот метод отменяет уведомление о сборке мусора, зарегистрированный с помощью <xref:System.GC.RegisterForFullGCNotification%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="503bd-169">This method cancels a garbage collection notification that was registered by using the <xref:System.GC.RegisterForFullGCNotification%2A> method.</span></span> <span data-ttu-id="503bd-170">Нет необходимости вызывать этот метод перед настройкой пороговые значения параметра в последующих вызовах <xref:System.GC.RegisterForFullGCNotification%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="503bd-170">You do not have to call this method before adjusting threshold parameter values in subsequent calls to the <xref:System.GC.RegisterForFullGCNotification%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="503bd-171">В следующем примере отменяется регистрация сборки мусора.</span><span class="sxs-lookup"><span data-stu-id="503bd-171">The following example cancels a garbage collection registration.</span></span> <span data-ttu-id="503bd-172">Данный пример является частью большего примера, приведенного для [сборке мусора](~/docs/standard/garbage-collection/notifications.md) раздела.</span><span class="sxs-lookup"><span data-stu-id="503bd-172">This example is part of a larger example provided for the [Garbage Collection Notifications](~/docs/standard/garbage-collection/notifications.md) topic.</span></span>  
  
 [!code-cpp[GCNotification#7](~/samples/snippets/cpp/VS_Snippets_CLR/GCNotification/cpp/program.cpp#7)]
 [!code-csharp[GCNotification#7](~/samples/snippets/csharp/VS_Snippets_CLR/GCNotification/cs/Program.cs#7)]
 [!code-vb[GCNotification#7](~/samples/snippets/visualbasic/VS_Snippets_CLR/GCNotification/vb/program.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="503bd-173">Этот член недоступен, если включена параллельная сборка мусора.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503bd-173">This member is not available when concurrent garbage collection is enabled.</span>
          </span>
          <span data-ttu-id="503bd-174">Сведения об отключении параллельной сборки мусора см. в статье, посвященной параметру среды выполнения [&lt;gcConcurrent&gt;](~/docs/framework/configure-apps/file-schema/runtime/gcconcurrent-element.md).</span>
          <span class="sxs-lookup">
            <span data-stu-id="503bd-174">See the [&lt;gcConcurrent&gt;](~/docs/framework/configure-apps/file-schema/runtime/gcconcurrent-element.md) runtime setting for information about how to disable concurrent garbage collection.</span>
          </span>
        </exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">
          <span data-ttu-id="503bd-175">Для полного доверия для непосредственного вызывающего.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503bd-175">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="503bd-176">Этот член не может быть использован частично доверенным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503bd-176">This member cannot be used by partially trusted code.</span>
          </span>
        </permission>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="503bd-177">требуется полное доверие для непосредственно вызывающего метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503bd-177">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="503bd-178">Этот член не может использоваться частично доверенным или прозрачным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503bd-178">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="Collect">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="503bd-179">Принудительно начинает сборку мусора.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503bd-179">Forces garbage collection.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Collect">
      <MemberSignature Language="C#" Value="public static void Collect ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Collect() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.GC.Collect" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Collect ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Collect();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="503bd-180">Принудительно запускает немедленную сборку мусора для всех поколений.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503bd-180">Forces an immediate garbage collection of all generations.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="503bd-181">Используйте этот метод, чтобы попытаться освободить всю память, который недоступен.</span><span class="sxs-lookup"><span data-stu-id="503bd-181">Use this method to try to reclaim all memory that is inaccessible.</span></span> <span data-ttu-id="503bd-182">Он выполняет блокирующей сборки мусора для всех поколений.</span><span class="sxs-lookup"><span data-stu-id="503bd-182">It performs a blocking garbage collection of all generations.</span></span>  
  
 <span data-ttu-id="503bd-183">Все объекты, независимо от того, как долго они находятся в памяти, считаются для коллекции. Тем не менее объекты, на которые имеются ссылки в управляемом коде, не собираются.</span><span class="sxs-lookup"><span data-stu-id="503bd-183">All objects, regardless of how long they have been in memory, are considered for collection; however, objects that are referenced in managed code are not collected.</span></span> <span data-ttu-id="503bd-184">Используйте этот метод, чтобы принудительно предпринять попытку высвободить максимальный объем доступной памяти.</span><span class="sxs-lookup"><span data-stu-id="503bd-184">Use this method to force the system to try to reclaim the maximum amount of available memory.</span></span>  
  
 <span data-ttu-id="503bd-185">Начиная с [!INCLUDE[net_v451](~/includes/net-v451-md.md)], можно сжать кучи больших объектов (LOH), задав <xref:System.Runtime.GCSettings.LargeObjectHeapCompactionMode%2A?displayProperty=nameWithType> свойства <xref:System.Runtime.GCLargeObjectHeapCompactionMode.CompactOnce?displayProperty=nameWithType> перед вызовом <xref:System.GC.Collect%2A> метода, как приведенный ниже пример иллюстрирует.</span><span class="sxs-lookup"><span data-stu-id="503bd-185">Starting with the [!INCLUDE[net_v451](~/includes/net-v451-md.md)], you can compact the large object heap (LOH) by setting the <xref:System.Runtime.GCSettings.LargeObjectHeapCompactionMode%2A?displayProperty=nameWithType> property to <xref:System.Runtime.GCLargeObjectHeapCompactionMode.CompactOnce?displayProperty=nameWithType> before calling the <xref:System.GC.Collect%2A> method, as the following example illustrates.</span></span>  
  
 [!code-csharp[System.Runtime.GCSettings#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.gcsettings/cs/lohcompactionmode1.cs#1)]
 [!code-vb[System.Runtime.GCSettings#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.gcsettings/vb/lohcompactionmode1.vb#1)]  
  
   
  
## Examples  
 <span data-ttu-id="503bd-186">В следующем примере демонстрируется использование <xref:System.GC.Collect%2A> метод, чтобы выполнить сборку мусора для всех поколений памяти.</span><span class="sxs-lookup"><span data-stu-id="503bd-186">The following example demonstrates how to use the <xref:System.GC.Collect%2A> method to perform a collection on all generations of memory.</span></span> <span data-ttu-id="503bd-187">Код создает число неиспользуемых объектов, а затем вызывает <xref:System.GC.Collect%2A> метод для их удаления из памяти.</span><span class="sxs-lookup"><span data-stu-id="503bd-187">The code generates a number of unused objects, and then calls the <xref:System.GC.Collect%2A> method to clean them from memory.</span></span>  
  
 [!code-cpp[System.GC.Collect Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.GC.Collect Example/CPP/class1.cpp#1)]
 [!code-csharp[System.GC.Collect Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.GC.Collect Example/CS/class1.cs#1)]
 [!code-vb[System.GC.Collect Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.GC.Collect Example/VB/class1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Collect">
      <MemberSignature Language="C#" Value="public static void Collect (int generation);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Collect(int32 generation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.GC.Collect(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Collect (generation As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Collect(int generation);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="generation" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="generation">
          <span data-ttu-id="503bd-188">Количество старших поколений, для которых следует выполнить сборку мусора.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503bd-188">The number of the oldest generation to be garbage collected.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="503bd-189">Принудительно начинает немедленную сборку мусора, начиная с нулевого поколения и вплоть до указанного поколения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503bd-189">Forces an immediate garbage collection from generation 0 through a specified generation.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="503bd-190">Используйте этот метод для освобождения памяти, который недоступен.</span><span class="sxs-lookup"><span data-stu-id="503bd-190">Use this method to try to reclaim memory that is inaccessible.</span></span> <span data-ttu-id="503bd-191">Тем не менее с помощью этого метода не гарантирует что всей недоступной памяти в указанном поколении.</span><span class="sxs-lookup"><span data-stu-id="503bd-191">However, using this method does not guarantee that all inaccessible memory in the specified generation is reclaimed.</span></span>  
  
 <span data-ttu-id="503bd-192">Если реализована время существования объекта, сборщик мусора не собирать объекты с номер поколения, превышающего заданного поколения.</span><span class="sxs-lookup"><span data-stu-id="503bd-192">If object aging is implemented, the garbage collector does not collect objects with a generation number that is higher than the specified generation.</span></span> <span data-ttu-id="503bd-193">Если не используется время существования объекта, сборщик мусора считает, что все объекты во время сборки мусора.</span><span class="sxs-lookup"><span data-stu-id="503bd-193">If object aging is not implemented, the garbage collector considers all objects during the garbage collection.</span></span>  
  
 <span data-ttu-id="503bd-194">Используйте <xref:System.GC.MaxGeneration%2A> свойства, чтобы определить максимальное допустимое значение параметра `generation` параметр.</span><span class="sxs-lookup"><span data-stu-id="503bd-194">Use the <xref:System.GC.MaxGeneration%2A> property to determine the maximum valid value of the `generation` parameter.</span></span>  
  
 <span data-ttu-id="503bd-195">Чтобы сборщик мусора учитывать все объекты, независимо от их поколения, используйте версию этого метода, который не имеет параметров.</span><span class="sxs-lookup"><span data-stu-id="503bd-195">To have the garbage collector consider all objects regardless of their generation, use the version of this method that takes no parameters.</span></span> <span data-ttu-id="503bd-196">Чтобы сборщик мусора освобождает объекты, на основе <xref:System.GCCollectionMode> установка, использование <xref:System.GC.Collect%28System.Int32%2CSystem.GCCollectionMode%29?displayProperty=nameWithType> перегрузки метода.</span><span class="sxs-lookup"><span data-stu-id="503bd-196">To have the garbage collector reclaim objects based on a <xref:System.GCCollectionMode> setting, use the <xref:System.GC.Collect%28System.Int32%2CSystem.GCCollectionMode%29?displayProperty=nameWithType> method overload.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="503bd-197">В следующем примере демонстрируется использование <xref:System.GC.Collect%2A> метод, чтобы выполнить сборку мусора для отдельных уровней памяти.</span><span class="sxs-lookup"><span data-stu-id="503bd-197">The following example demonstrates how to use the <xref:System.GC.Collect%2A> method to perform a collection on individual layers of memory.</span></span> <span data-ttu-id="503bd-198">Код создает число неиспользуемых объектов, а затем вызывает <xref:System.GC.Collect%2A> метод для их удаления из памяти.</span><span class="sxs-lookup"><span data-stu-id="503bd-198">The code generates a number of unused objects, and then calls the <xref:System.GC.Collect%2A> method to clean them from memory.</span></span>  
  
 [!code-cpp[System.GC.Collect Int Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.gc.collect int example/CPP/class1.cpp#1)]
 [!code-csharp[System.GC.Collect Int Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.gc.collect int example/CS/class1.cs#1)]
 [!code-vb[System.GC.Collect Int Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.gc.collect int example/VB/class1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="503bd-199">Недопустимый параметр <paramref name="generation" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503bd-199">
              <paramref name="generation" /> is not valid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Collect">
      <MemberSignature Language="C#" Value="public static void Collect (int generation, GCCollectionMode mode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Collect(int32 generation, valuetype System.GCCollectionMode mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.GC.Collect(System.Int32,System.GCCollectionMode)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Collect (generation As Integer, mode As GCCollectionMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Collect(int generation, GCCollectionMode mode);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="generation" Type="System.Int32" />
        <Parameter Name="mode" Type="System.GCCollectionMode" />
      </Parameters>
      <Docs>
        <param name="generation">
          <span data-ttu-id="503bd-200">Количество старших поколений, для которых следует выполнить сборку мусора.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503bd-200">The number of the oldest generation to be garbage collected.</span>
          </span>
        </param>
        <param name="mode">
          <span data-ttu-id="503bd-201">Значение перечисления, указывающее, является ли сборка мусора принудительной (<see cref="F:System.GCCollectionMode.Default" /> или <see cref="F:System.GCCollectionMode.Forced" />) или оптимизированной (<see cref="F:System.GCCollectionMode.Optimized" />).</span>
          <span class="sxs-lookup">
            <span data-stu-id="503bd-201">An enumeration value that specifies whether the garbage collection is forced (<see cref="F:System.GCCollectionMode.Default" /> or <see cref="F:System.GCCollectionMode.Forced" />) or optimized (<see cref="F:System.GCCollectionMode.Optimized" />).</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="503bd-202">Принудительно запускает немедленную сборку мусора начиная с нулевого поколения и вплоть до указанного поколения в момент времени, заданный значением <see cref="T:System.GCCollectionMode" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503bd-202">Forces a garbage collection from generation 0 through a specified generation, at a time specified by a <see cref="T:System.GCCollectionMode" /> value.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="503bd-203">Используйте `mode` для указания, является ли сборка мусора должно выполняться немедленно или только если время является оптимальным для освобождения объектов.</span><span class="sxs-lookup"><span data-stu-id="503bd-203">Use the `mode` parameter to specify whether garbage collection should occur immediately or only if the time is optimal to reclaim objects.</span></span> <span data-ttu-id="503bd-204">С помощью этого метода не гарантирует что всей недоступной памяти в указанном поколении.</span><span class="sxs-lookup"><span data-stu-id="503bd-204">Using this method does not guarantee that all inaccessible memory in the specified generation is reclaimed.</span></span>  
  
 <span data-ttu-id="503bd-205">Чтобы настроить степень вмешательства сборщика мусора в приложении в критические периоды, установите <xref:System.Runtime.GCSettings.LatencyMode%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="503bd-205">To adjust the intrusiveness of garbage collection during critical periods in your application, set the <xref:System.Runtime.GCSettings.LatencyMode%2A> property.</span></span>  
  
 <span data-ttu-id="503bd-206">Сборщик мусора не пытается освободить объекты номер поколения, выше, чем указано в `generation` параметра.</span><span class="sxs-lookup"><span data-stu-id="503bd-206">The garbage collector does not collect objects with a generation number higher than specified by the `generation` parameter.</span></span> <span data-ttu-id="503bd-207">Используйте <xref:System.GC.MaxGeneration%2A> свойства, чтобы определить максимальное допустимое значение параметра `generation`.</span><span class="sxs-lookup"><span data-stu-id="503bd-207">Use the <xref:System.GC.MaxGeneration%2A> property to determine the maximum valid value of `generation`.</span></span>  
  
 <span data-ttu-id="503bd-208">Чтобы сборщик мусора учитывать все объекты, независимо от их поколения, используйте версию этого метода, который не имеет параметров.</span><span class="sxs-lookup"><span data-stu-id="503bd-208">To have the garbage collector consider all objects regardless of their generation, use the version of this method that takes no parameters.</span></span>  
  
 <span data-ttu-id="503bd-209">Чтобы сборщик мусора освобождает объекты, вплоть до указанного поколения объектов, используйте <xref:System.GC.Collect%28System.Int32%29?displayProperty=nameWithType> перегрузки метода.</span><span class="sxs-lookup"><span data-stu-id="503bd-209">To have the garbage collector reclaim objects up to a specified generation of objects, use the <xref:System.GC.Collect%28System.Int32%29?displayProperty=nameWithType> method overload.</span></span> <span data-ttu-id="503bd-210">При указании максимальное поколение, освобождаются все объекты.</span><span class="sxs-lookup"><span data-stu-id="503bd-210">When you specify the maximum generation, all objects are collected.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="503bd-211">Следующий пример вызывает сборку мусора для объектов поколения 2 с <xref:System.GCCollectionMode.Optimized> параметр.</span><span class="sxs-lookup"><span data-stu-id="503bd-211">The following example forces a garbage collection for generation 2 objects with the <xref:System.GCCollectionMode.Optimized> setting.</span></span>  
  
 [!code-csharp[System.GC.GCCollectionMode#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.GC.GCCollectionMode/cs/Program.cs#1)]
 [!code-vb[System.GC.GCCollectionMode#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.GC.GCCollectionMode/vb/program.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="503bd-212">Недопустимый параметр <paramref name="generation" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503bd-212">
              <paramref name="generation" /> is not valid.</span>
          </span>
          <span data-ttu-id="503bd-213">- или -</span>
          <span class="sxs-lookup">
            <span data-stu-id="503bd-213">-or-</span>
          </span>
          <span data-ttu-id="503bd-214">
            <paramref name="mode" /> не является одним из значений <see cref="T:System.GCCollectionMode" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503bd-214">
              <paramref name="mode" /> is not one of the <see cref="T:System.GCCollectionMode" /> values.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Collect">
      <MemberSignature Language="C#" Value="public static void Collect (int generation, GCCollectionMode mode, bool blocking);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Collect(int32 generation, valuetype System.GCCollectionMode mode, bool blocking) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.GC.Collect(System.Int32,System.GCCollectionMode,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Collect (generation As Integer, mode As GCCollectionMode, blocking As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Collect(int generation, GCCollectionMode mode, bool blocking);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="generation" Type="System.Int32" />
        <Parameter Name="mode" Type="System.GCCollectionMode" />
        <Parameter Name="blocking" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="generation">
          <span data-ttu-id="503bd-215">Количество старших поколений, для которых следует выполнить сборку мусора.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503bd-215">The number of the oldest generation to be garbage collected.</span>
          </span>
        </param>
        <param name="mode">
          <span data-ttu-id="503bd-216">Значение перечисления, указывающее, является ли сборка мусора принудительной (<see cref="F:System.GCCollectionMode.Default" /> или <see cref="F:System.GCCollectionMode.Forced" />) или оптимизированной (<see cref="F:System.GCCollectionMode.Optimized" />).</span>
          <span class="sxs-lookup">
            <span data-stu-id="503bd-216">An enumeration value that specifies whether the garbage collection is forced (<see cref="F:System.GCCollectionMode.Default" /> or <see cref="F:System.GCCollectionMode.Forced" />) or optimized (<see cref="F:System.GCCollectionMode.Optimized" />).</span>
          </span>
        </param>
        <param name="blocking">
          <span data-ttu-id="503bd-217">Значение <see langword="true" /> для выполнения блокирующей сборки мусора; значение <see langword="false" /> для выполнения фоновой сборки мусора, где это возможно.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503bd-217">
              <see langword="true" /> to perform a blocking garbage collection; <see langword="false" /> to perform a background garbage collection where possible.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="503bd-218">Принудительная сборка мусора с поколения 0 до указанного поколения во время, указанное значением <see cref="T:System.GCCollectionMode" />, со значением, указывающим, должна ли сборка быть блокирующей.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503bd-218">Forces a garbage collection from generation 0 through a specified generation, at a time specified by a <see cref="T:System.GCCollectionMode" /> value, with a value specifying whether the collection should be blocking.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="503bd-219">В следующей таблице перечислены взаимодействия `mode` и `blocking` параметры:</span><span class="sxs-lookup"><span data-stu-id="503bd-219">The following table summarizes the interaction of the `mode` and `blocking` parameters:</span></span>  
  
|`mode`|<span data-ttu-id="503bd-220">`blocking` равно `true`</span><span class="sxs-lookup"><span data-stu-id="503bd-220">`blocking` is `true`</span></span>|<span data-ttu-id="503bd-221">`blocking` равно `false`</span><span class="sxs-lookup"><span data-stu-id="503bd-221">`blocking` is `false`</span></span>|  
|-|-|-|  
|<span data-ttu-id="503bd-222"><xref:System.GCCollectionMode.Forced> или <xref:System.GCCollectionMode.Default></span><span class="sxs-lookup"><span data-stu-id="503bd-222"><xref:System.GCCollectionMode.Forced> or <xref:System.GCCollectionMode.Default></span></span>|<span data-ttu-id="503bd-223">Блокирующий сбор выполнится, как только это станет возможным.</span><span class="sxs-lookup"><span data-stu-id="503bd-223">A blocking collection is performed as soon as possible.</span></span> <span data-ttu-id="503bd-224">Если выполняется фоновая сборка мусора и `generation` равен 0 или 1, <xref:System.GC.Collect%28System.Int32%2CSystem.GCCollectionMode%2CSystem.Boolean%29> метод немедленно запускает заблокированной коллекции и возвращает при завершении коллекции.</span><span class="sxs-lookup"><span data-stu-id="503bd-224">If a background collection is in progress and `generation` is 0 or 1, the <xref:System.GC.Collect%28System.Int32%2CSystem.GCCollectionMode%2CSystem.Boolean%29> method immediately triggers a blocking collection and returns when the collection is finished.</span></span> <span data-ttu-id="503bd-225">Если выполняется фоновая сборка мусора и `generation` 2, метод ожидает, пока фоновая сборка мусора завершения работы вызывает блокирующие сборки поколения 2 и возвращает.</span><span class="sxs-lookup"><span data-stu-id="503bd-225">If a background collection is in progress and `generation` is 2, the method waits until the background collection is finished, triggers a blocking generation 2 collection, and then returns.</span></span>|<span data-ttu-id="503bd-226">Сборка выполнится, как только это станет возможным.</span><span class="sxs-lookup"><span data-stu-id="503bd-226">A collection is performed as soon as possible.</span></span> <span data-ttu-id="503bd-227">Метод <xref:System.GC.Collect%28System.Int32%2CSystem.GCCollectionMode%2CSystem.Boolean%29> запрашивает фоновую сборку, но не гарантирует этот режим. В зависимости от обстоятельств может выполняться блокирующая сборка.</span><span class="sxs-lookup"><span data-stu-id="503bd-227">The <xref:System.GC.Collect%28System.Int32%2CSystem.GCCollectionMode%2CSystem.Boolean%29> method requests a background collection, but this is not guaranteed; depending on the circumstances, a blocking collection may still be performed.</span></span> <span data-ttu-id="503bd-228">Если фоновая сборка уже выполняется, метод возвращает управление немедленно.</span><span class="sxs-lookup"><span data-stu-id="503bd-228">If a background collection is already in progress, the method returns immediately.</span></span>|  
|<xref:System.GCCollectionMode.Optimized>|<span data-ttu-id="503bd-229">В зависимости от текущего состояния сборщика мусора и значения параметра `generation` может выполняться блокирующая сборка.</span><span class="sxs-lookup"><span data-stu-id="503bd-229">A blocking collection may be performed, depending on the state of the garbage collector and the `generation` parameter.</span></span> <span data-ttu-id="503bd-230">Сборщик мусора пытается обеспечить оптимальную производительность.</span><span class="sxs-lookup"><span data-stu-id="503bd-230">The garbage collector tries to provide optimal performance.</span></span>|<span data-ttu-id="503bd-231">Сборка может быть выполнена в зависимости от состояния сборщика мусора.</span><span class="sxs-lookup"><span data-stu-id="503bd-231">A collection may be performed, depending on the state of the garbage collector.</span></span> <span data-ttu-id="503bd-232">Метод <xref:System.GC.Collect%28System.Int32%2CSystem.GCCollectionMode%2CSystem.Boolean%29> запрашивает фоновую сборку, но не гарантирует этот режим. В зависимости от обстоятельств может выполняться блокирующая сборка.</span><span class="sxs-lookup"><span data-stu-id="503bd-232">The <xref:System.GC.Collect%28System.Int32%2CSystem.GCCollectionMode%2CSystem.Boolean%29> method requests a background collection, but this is not guaranteed; depending on the circumstances, a blocking collection may still be performed.</span></span> <span data-ttu-id="503bd-233">Сборщик мусора пытается обеспечить оптимальную производительность.</span><span class="sxs-lookup"><span data-stu-id="503bd-233">The garbage collector tries to provide optimal performance.</span></span> <span data-ttu-id="503bd-234">Если фоновая сборка уже выполняется, метод возвращает управление немедленно.</span><span class="sxs-lookup"><span data-stu-id="503bd-234">If a background collection is already in progress, the method returns immediately.</span></span>|  
  
 <span data-ttu-id="503bd-235">Если вызов <xref:System.GC.Collect%28System.Int32%2CSystem.GCCollectionMode%2CSystem.Boolean%29> метод выполняет полной блокирующей сборки мусора, можно также сжать кучи больших объектов, задав <xref:System.Runtime.GCSettings.LargeObjectHeapCompactionMode%2A?displayProperty=nameWithType> свойства <xref:System.Runtime.GCLargeObjectHeapCompactionMode.CompactOnce?displayProperty=nameWithType> перед вызовом <xref:System.GC.Collect%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="503bd-235">If a call to the <xref:System.GC.Collect%28System.Int32%2CSystem.GCCollectionMode%2CSystem.Boolean%29> method performs a full blocking garbage collection, you can also compact the large object heap by setting the <xref:System.Runtime.GCSettings.LargeObjectHeapCompactionMode%2A?displayProperty=nameWithType> property to <xref:System.Runtime.GCLargeObjectHeapCompactionMode.CompactOnce?displayProperty=nameWithType> before calling the <xref:System.GC.Collect%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="503bd-236">Недопустимый параметр <paramref name="generation" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503bd-236">
              <paramref name="generation" /> is not valid.</span>
          </span>
          <span data-ttu-id="503bd-237">- или -</span>
          <span class="sxs-lookup">
            <span data-stu-id="503bd-237">-or-</span>
          </span>
          <span data-ttu-id="503bd-238">
            <paramref name="mode" /> не является одним из значений <see cref="T:System.GCCollectionMode" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503bd-238">
              <paramref name="mode" /> is not one of the <see cref="T:System.GCCollectionMode" /> values.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Collect">
      <MemberSignature Language="C#" Value="public static void Collect (int generation, GCCollectionMode mode, bool blocking, bool compacting);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Collect(int32 generation, valuetype System.GCCollectionMode mode, bool blocking, bool compacting) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.GC.Collect(System.Int32,System.GCCollectionMode,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Collect (generation As Integer, mode As GCCollectionMode, blocking As Boolean, compacting As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Collect(int generation, GCCollectionMode mode, bool blocking, bool compacting);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="generation" Type="System.Int32" />
        <Parameter Name="mode" Type="System.GCCollectionMode" />
        <Parameter Name="blocking" Type="System.Boolean" />
        <Parameter Name="compacting" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="generation">
          <span data-ttu-id="503bd-239">Количество старших поколений, для которых следует выполнить сборку мусора.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503bd-239">The number of the oldest generation to be garbage collected.</span>
          </span>
        </param>
        <param name="mode">
          <span data-ttu-id="503bd-240">Значение перечисления, указывающее, является ли сборка мусора принудительной (<see cref="F:System.GCCollectionMode.Default" /> или <see cref="F:System.GCCollectionMode.Forced" />) или оптимизированной (<see cref="F:System.GCCollectionMode.Optimized" />).</span>
          <span class="sxs-lookup">
            <span data-stu-id="503bd-240">An enumeration value that specifies whether the garbage collection is forced (<see cref="F:System.GCCollectionMode.Default" /> or <see cref="F:System.GCCollectionMode.Forced" />) or optimized (<see cref="F:System.GCCollectionMode.Optimized" />).</span>
          </span>
        </param>
        <param name="blocking">
          <span data-ttu-id="503bd-241">Значение <see langword="true" /> для выполнения блокирующей сборки мусора; значение <see langword="false" /> для выполнения фоновой сборки мусора, где это возможно.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503bd-241">
              <see langword="true" /> to perform a blocking garbage collection; <see langword="false" /> to perform a background garbage collection where possible.</span>
          </span>
        </param>
        <param name="compacting">
          <span data-ttu-id="503bd-242">Значение <see langword="true" />, чтобы сжимать кучу маленьких объектов; значение <see langword="false" />, чтобы только очищать.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503bd-242">
              <see langword="true" /> to compact the small object heap; <see langword="false" /> to sweep only.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="503bd-243">Принудительная сборка мусора с поколения 0 до указанного поколения во время, указанное значением <see cref="T:System.GCCollectionMode" />, со значениями, указывающими, должна ли сборка быть блокирующей и сжимающей.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503bd-243">Forces a garbage collection from generation 0 through a specified generation, at a time specified by a <see cref="T:System.GCCollectionMode" /> value, with values that specify whether the collection should be blocking and compacting.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="503bd-244">Если `blocking` — `false`, сборщик Мусора решает, следует ли выполнять фоновый рисунок или блокирующей сборки мусора.</span><span class="sxs-lookup"><span data-stu-id="503bd-244">If `blocking` is `false`, the GC decides whether to perform a background or a blocking garbage collection.</span></span> <span data-ttu-id="503bd-245">Если `compacting` — `true`, он выполняет блокирующей сборки мусора.</span><span class="sxs-lookup"><span data-stu-id="503bd-245">If `compacting` is `true`, it performs a blocking garbage collection.</span></span>  
  
 <span data-ttu-id="503bd-246">Если `compacting` — `true`, среда выполнения сжимает кучу небольших объектов (SOH).</span><span class="sxs-lookup"><span data-stu-id="503bd-246">If `compacting` is `true`, the runtime compacts the small object heap (SOH).</span></span> <span data-ttu-id="503bd-247">Для кучи больших объектов (LOH) не сжимается, если не <xref:System.Runtime.GCSettings.LargeObjectHeapCompactionMode%2A?displayProperty=nameWithType> свойству <xref:System.Runtime.GCLargeObjectHeapCompactionMode.CompactOnce?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="503bd-247">The large object heap (LOH) is not compacted unless the <xref:System.Runtime.GCSettings.LargeObjectHeapCompactionMode%2A?displayProperty=nameWithType> property is set to <xref:System.Runtime.GCLargeObjectHeapCompactionMode.CompactOnce?displayProperty=nameWithType>.</span></span> <span data-ttu-id="503bd-248">Обратите внимание, что в нем все блокировка сборки мусора, не только полностью блокирующие сборки мусора.</span><span class="sxs-lookup"><span data-stu-id="503bd-248">Note that this includes all blocking garbage collections, not just full blocking garbage collections.</span></span>  
  
 <span data-ttu-id="503bd-249">Можно вызвать <xref:System.GC.Collect%28System.Int32%2CSystem.GCCollectionMode%2CSystem.Boolean%2CSystem.Boolean%29> способ уменьшить до наименьшего возможного размера, в управляемой куче, как показано в следующем фрагменте кода.</span><span class="sxs-lookup"><span data-stu-id="503bd-249">You can call the <xref:System.GC.Collect%28System.Int32%2CSystem.GCCollectionMode%2CSystem.Boolean%2CSystem.Boolean%29> method to reduce the managed heap to the smallest size possible, as the following code fragment illustrates.</span></span>  
  
 [!code-csharp[System.GC.Collect#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.gc.collect/cs/collect4.cs#1)]
 [!code-vb[System.GC.Collect#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.gc.collect/vb/collect4.vb#1)]  
  
 <span data-ttu-id="503bd-250">Указание `true` для `compacting` аргумент гарантирует со сжатием, полной блокирующей сборки мусора.</span><span class="sxs-lookup"><span data-stu-id="503bd-250">Specifying `true` for the `compacting` argument guarantees a compacting, full blocking garbage collection.</span></span> <span data-ttu-id="503bd-251">Установка <xref:System.Runtime.GCSettings.LargeObjectHeapCompactionMode%2A?displayProperty=nameWithType> свойства <xref:System.Runtime.GCLargeObjectHeapCompactionMode.CompactOnce?displayProperty=nameWithType> гарантирует сжимаются LOH и состояние работоспособности.</span><span class="sxs-lookup"><span data-stu-id="503bd-251">Setting the <xref:System.Runtime.GCSettings.LargeObjectHeapCompactionMode%2A?displayProperty=nameWithType> property to <xref:System.Runtime.GCLargeObjectHeapCompactionMode.CompactOnce?displayProperty=nameWithType> ensures that both the LOH and SOH are compacted.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CollectionCount">
      <MemberSignature Language="C#" Value="public static int CollectionCount (int generation);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 CollectionCount(int32 generation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.GC.CollectionCount(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CollectionCount (generation As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int CollectionCount(int generation);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="generation" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="generation">
          <span data-ttu-id="503bd-252">Поколение объектов, для которого будет определено количество операций сборки мусора.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503bd-252">The generation of objects for which the garbage collection count is to be determined.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="503bd-253">Возвращает количество операций сборки мусора, выполненных для заданного поколения объектов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503bd-253">Returns the number of times garbage collection has occurred for the specified generation of objects.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="503bd-254">Количество операций сборки мусора, выполненных для заданного поколения объектов с начала процесса.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503bd-254">The number of times garbage collection has occurred for the specified generation since the process was started.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="503bd-255">Если вы реализуете собственное управление ресурсами, может потребоваться принудительно запустить сборку мусора периодически путем вызова <xref:System.GC.Collect%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="503bd-255">If you implement your own resource management, you might need to force garbage collection periodically by calling the <xref:System.GC.Collect%2A> method.</span></span> <span data-ttu-id="503bd-256">Поскольку это ресурсоемкая операция, пропустив вызов после сборки мусора недавно может повысить производительность.</span><span class="sxs-lookup"><span data-stu-id="503bd-256">Because this is an expensive operation, you can improve performance by skipping the call when a garbage collection has occurred recently.</span></span> <span data-ttu-id="503bd-257">Сохранить значение, возвращаемое <xref:System.GC.CollectionCount%2A> сразу после вызова <xref:System.GC.Collect%2A>.</span><span class="sxs-lookup"><span data-stu-id="503bd-257">Save the value returned by <xref:System.GC.CollectionCount%2A> immediately after calling <xref:System.GC.Collect%2A>.</span></span> <span data-ttu-id="503bd-258">В следующий раз, необходимо вызвать <xref:System.GC.Collect%2A>, сравнения текущего значения, возвращенного <xref:System.GC.CollectionCount%2A> сохраненному значению.</span><span class="sxs-lookup"><span data-stu-id="503bd-258">The next time you need to call <xref:System.GC.Collect%2A>, compare the current value returned by <xref:System.GC.CollectionCount%2A> to the saved value.</span></span> <span data-ttu-id="503bd-259">Если два значения равны, ни одна из коллекций произошла за этот промежуток времени, и имеет смысл для вызова <xref:System.GC.Collect%2A> еще раз.</span><span class="sxs-lookup"><span data-stu-id="503bd-259">If the two values are equal, no collection has occurred in the interim and it is reasonable to call <xref:System.GC.Collect%2A> again.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="503bd-260">Значение параметра <paramref name="generation" /> меньше 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503bd-260">
              <paramref name="generation" /> is less than 0.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="EndNoGCRegion">
      <MemberSignature Language="C#" Value="public static void EndNoGCRegion ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void EndNoGCRegion() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.GC.EndNoGCRegion" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub EndNoGCRegion ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void EndNoGCRegion();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="503bd-261">Завершает режим задержки без области сборки мусора.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503bd-261">Ends the no GC region latency mode.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="503bd-262"><xref:System.GC.EndNoGCRegion%2A> Вызывает исключение <xref:System.InvalidOperationException> если сборщик мусора не входит в режим задержки без области сборки Мусора.</span><span class="sxs-lookup"><span data-stu-id="503bd-262">The <xref:System.GC.EndNoGCRegion%2A> method throws an <xref:System.InvalidOperationException> if the garbage collector is not in no GC region latency mode.</span></span> <span data-ttu-id="503bd-263">Это происходит при выполнении любого из следующих условий:</span><span class="sxs-lookup"><span data-stu-id="503bd-263">This occurs under any of the following conditions:</span></span>  
  
-   <span data-ttu-id="503bd-264"><xref:System.GC.TryStartNoGCRegion%2A> Метод не был вызван ранее.</span><span class="sxs-lookup"><span data-stu-id="503bd-264">The <xref:System.GC.TryStartNoGCRegion%2A> method was not called previously.</span></span>  
  
-   <span data-ttu-id="503bd-265">Вызов <xref:System.GC.TryStartNoGCRegion%2A> возвращаемое значение метода `false`.</span><span class="sxs-lookup"><span data-stu-id="503bd-265">The call to the <xref:System.GC.TryStartNoGCRegion%2A> method returned `false`.</span></span>  
  
-   <span data-ttu-id="503bd-266">Вызов <xref:System.GC.TryStartNoGCRegion%2A> метод исключение.</span><span class="sxs-lookup"><span data-stu-id="503bd-266">The call to the <xref:System.GC.TryStartNoGCRegion%2A> method threw an exception.</span></span>  
  
 <span data-ttu-id="503bd-267">С помощью следующего кода можно предотвратить возникновение исключений для любой из следующих причин:</span><span class="sxs-lookup"><span data-stu-id="503bd-267">You can prevent an exception for any of these reasons by using code such as the following:</span></span>  
  
 [!code-csharp[System.GC.EndNoGCRegion#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.gc.endnogcregion/cs/endnogcregion1.cs#1)]
 [!code-vb[System.GC.EndNoGCRegion#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.gc.endnogcregion/vb/endnogcregion1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="503bd-268">Сборщик мусора не находится в режиме задержки без области сборки мусора.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503bd-268">The garbage collector is not in no GC region latency mode.</span>
          </span>
          <span data-ttu-id="503bd-269">- или -</span>
          <span class="sxs-lookup">
            <span data-stu-id="503bd-269">-or-</span>
          </span>
          <span data-ttu-id="503bd-270">Режим задержки без области сборки мусора был завершен заранее, поскольку была вызвана сборка мусора.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503bd-270">The no GC region latency mode was ended previously because a garbage collection was induced.</span>
          </span>
          <span data-ttu-id="503bd-271">- или -</span>
          <span class="sxs-lookup">
            <span data-stu-id="503bd-271">-or-</span>
          </span>
          <span data-ttu-id="503bd-272">Выделение памяти превышает объем, указанный в вызове метода <see cref="M:System.GC.TryStartNoGCRegion(System.Int64)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503bd-272">A memory allocation exceeded the amount specified in the call to the <see cref="M:System.GC.TryStartNoGCRegion(System.Int64)" /> method.</span>
          </span>
        </exception>
        <altmember cref="M:System.GC.TryStartNoGCRegion(System.Int64)" />
        <altmember cref="P:System.Runtime.GCSettings.LatencyMode" />
      </Docs>
    </Member>
    <Member MemberName="GetAllocatedBytesForCurrentThread">
      <MemberSignature Language="C#" Value="public static long GetAllocatedBytesForCurrentThread ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 GetAllocatedBytesForCurrentThread() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.GC.GetAllocatedBytesForCurrentThread" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetAllocatedBytesForCurrentThread () As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long GetAllocatedBytesForCurrentThread();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetGeneration">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="503bd-273">Возвращает текущий номер поколения объекта.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503bd-273">Returns the current generation number of an object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetGeneration">
      <MemberSignature Language="C#" Value="public static int GetGeneration (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetGeneration(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.GC.GetGeneration(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetGeneration (obj As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int GetGeneration(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="503bd-274">Объект, информация о поколении которого извлекается.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503bd-274">The object that generation information is retrieved for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="503bd-275">Возвращает номер текущего поколения указанного объекта.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503bd-275">Returns the current generation number of the specified object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="503bd-276">Текущий номер поколения <paramref name="obj" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503bd-276">The current generation number of <paramref name="obj" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="503bd-277">Используйте этот метод, чтобы определить возраст объекта, а затем использовать эти сведения с <xref:System.GC.Collect%2A> метод, чтобы сборщик мусора для сбора объектов этого поколения.</span><span class="sxs-lookup"><span data-stu-id="503bd-277">Use this method to determine the age of an object, and then use that information with the <xref:System.GC.Collect%2A> method to force the garbage collector to collect objects in the same generation.</span></span> <span data-ttu-id="503bd-278">Например используйте этот метод, если у вас есть набор объектов, которые были созданы группы и стали недоступными одновременно.</span><span class="sxs-lookup"><span data-stu-id="503bd-278">For example, use this method when you have a set of objects that are created as a group and that become inaccessible at the same time.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="503bd-279">В следующем примере демонстрируется использование <xref:System.GC.GetGeneration%2A> метод, чтобы определить возраст объекта.</span><span class="sxs-lookup"><span data-stu-id="503bd-279">The following example demonstrates how to use the <xref:System.GC.GetGeneration%2A> method to determine the age of an object.</span></span> <span data-ttu-id="503bd-280">Затем в примере выполняется сборки мусора для очистки памяти и сравнения pre и post итоги памяти коллекцию в консоли.</span><span class="sxs-lookup"><span data-stu-id="503bd-280">The example then performs garbage collections to clean up memory and compare the pre and post collection memory totals in the console.</span></span>  
  
 [!code-cpp[System.GC.Collect Int Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.gc.collect int example/CPP/class1.cpp#1)]
 [!code-csharp[System.GC.Collect Int Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.gc.collect int example/CS/class1.cs#1)]
 [!code-vb[System.GC.Collect Int Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.gc.collect int example/VB/class1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.GC.MaxGeneration" />
      </Docs>
    </Member>
    <Member MemberName="GetGeneration">
      <MemberSignature Language="C#" Value="public static int GetGeneration (WeakReference wo);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetGeneration(class System.WeakReference wo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.GC.GetGeneration(System.WeakReference)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetGeneration (wo As WeakReference) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int GetGeneration(WeakReference ^ wo);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="wo" Type="System.WeakReference" />
      </Parameters>
      <Docs>
        <param name="wo">
          <span data-ttu-id="503bd-281">Объект <see cref="T:System.WeakReference" />, указывающий на целевой объект, номер поколения которого требуется определить.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503bd-281">A <see cref="T:System.WeakReference" /> that refers to the target object whose generation number is to be determined.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="503bd-282">Возвращает текущий номер поколения для целевого объекта указанной слабой ссылки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503bd-282">Returns the current generation number of the target of a specified weak reference.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="503bd-283">Текущий номер поколения для целевого объекта <paramref name="wo" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503bd-283">The current generation number of the target of <paramref name="wo" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="503bd-284">В следующем примере показано использование <xref:System.GC.GetGeneration%2A> метод, чтобы определить возраст объект слабой ссылки.</span><span class="sxs-lookup"><span data-stu-id="503bd-284">The following example demonstrates the use of the <xref:System.GC.GetGeneration%2A> method to determine the age of a weak reference object.</span></span>  
  
 [!code-cpp[System.GC.GetGenerationWeak Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.GC.GetGenerationWeak Example/CPP/systemgcgetgenerationweak.cpp#1)]
 [!code-csharp[System.GC.GetGenerationWeak Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.GC.GetGenerationWeak Example/CS/systemgcgetgenerationweak.cs#1)]
 [!code-vb[System.GC.GetGenerationWeak Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.GC.GetGenerationWeak Example/VB/systemgcgetgenerationweak.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="503bd-285">Сборка мусора уже выполнена для <paramref name="wo" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503bd-285">Garbage collection has already been performed on <paramref name="wo" />.</span>
          </span>
        </exception>
        <altmember cref="P:System.GC.MaxGeneration" />
      </Docs>
    </Member>
    <Member MemberName="GetTotalMemory">
      <MemberSignature Language="C#" Value="public static long GetTotalMemory (bool forceFullCollection);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 GetTotalMemory(bool forceFullCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.GC.GetTotalMemory(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetTotalMemory (forceFullCollection As Boolean) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long GetTotalMemory(bool forceFullCollection);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="forceFullCollection" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="forceFullCollection">
          <span data-ttu-id="503bd-286">Значение <see langword="true" />, указывающий, что перед возвратом этот метод может дождаться выполнения сборки мусора; в противном случае — <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503bd-286">
              <see langword="true" /> to indicate that this method can wait for garbage collection to occur before returning; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="503bd-287">Извлекает предполагаемое количество выделенных в данный момент байтов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503bd-287">Retrieves the number of bytes currently thought to be allocated.</span>
          </span>
          <span data-ttu-id="503bd-288">Параметр указывает, может ли этот метод выдержать короткий интервал времени ожидания перед возвратом, пока система выполняет сборку мусора и завершает объекты.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503bd-288">A parameter indicates whether this method can wait a short interval before returning, to allow the system to collect garbage and finalize objects.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="503bd-289">Наилучшая доступная аппроксимация числа байтов, распределенных в данный момент в управляемой памяти.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503bd-289">A number that is the best available approximation of the number of bytes currently allocated in managed memory.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="503bd-290">Если `forceFullCollection` параметр `true`, этот метод ожидает короткий интервал времени перед возвратом, пока система выполняет сборку мусора и завершает объекты.</span><span class="sxs-lookup"><span data-stu-id="503bd-290">If the `forceFullCollection` parameter is `true`, this method waits a short interval before returning while the system collects garbage and finalizes objects.</span></span> <span data-ttu-id="503bd-291">Длительность интервала — внутренне определяемый предел зависит от числа завершенных циклов сборки мусора и изменения восстановленного объема памяти между циклами.</span><span class="sxs-lookup"><span data-stu-id="503bd-291">The duration of the interval is an internally specified limit determined by the number of garbage collection cycles completed and the change in the amount of memory recovered between cycles.</span></span> <span data-ttu-id="503bd-292">Сборщик мусора не гарантирует, что собираются все недоступной памяти.</span><span class="sxs-lookup"><span data-stu-id="503bd-292">The garbage collector does not guarantee that all inaccessible memory is collected.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="503bd-293">В следующем примере демонстрируется использование <xref:System.GC.GetTotalMemory%2A> метода для возврата и отображения число байтов, выделенных в данный момент в управляемой памяти.</span><span class="sxs-lookup"><span data-stu-id="503bd-293">The following example demonstrates how to use the <xref:System.GC.GetTotalMemory%2A> method to get and display the number of bytes currently allocated in managed memory.</span></span>  
  
 [!code-cpp[System.GC.Collect Int Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.gc.collect int example/CPP/class1.cpp#1)]
 [!code-csharp[System.GC.Collect Int Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.gc.collect int example/CS/class1.cs#1)]
 [!code-vb[System.GC.Collect Int Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.gc.collect int example/VB/class1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeepAlive">
      <MemberSignature Language="C#" Value="public static void KeepAlive (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void KeepAlive(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.GC.KeepAlive(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub KeepAlive (obj As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void KeepAlive(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="503bd-294">Объект для ссылки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503bd-294">The object to reference.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="503bd-295">Ссылается на указанный объект, делая его недоступным для сборщика мусора с момента начала текущей процедуры до вызова этого метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503bd-295">References the specified object, which makes it ineligible for garbage collection from the start of the current routine to the point where this method is called.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="503bd-296">Назначение <xref:System.GC.KeepAlive%2A> проще гарантировать наличие ссылки на объект, который может быть преждевременно освобожден сборщиком мусора.</span><span class="sxs-lookup"><span data-stu-id="503bd-296">The purpose of the <xref:System.GC.KeepAlive%2A> method is to ensure the existence of a reference to an object that is at risk of being prematurely reclaimed by the garbage collector.</span></span> <span data-ttu-id="503bd-297">Является распространенным сценарием, где это может произойти при отсутствии ссылок на объект в управляемом коде или в данных, но он по-прежнему используется в неуправляемый код, например API-интерфейсов Win32, неуправляемые библиотеки DLL или методы, с помощью COM.</span><span class="sxs-lookup"><span data-stu-id="503bd-297">A common scenario where this might happen is when there are no references to the object in managed code or data, but the object is still in use in unmanaged code such as Win32 APIs, unmanaged DLLs, or methods using COM.</span></span>  
  
 <span data-ttu-id="503bd-298">Этот метод ссылается `obj` параметр в результате этого объекта недоступным для сборщика мусора начала процедуры к точке, в порядке выполнения, где вызывается этот метод.</span><span class="sxs-lookup"><span data-stu-id="503bd-298">This method references the `obj` parameter, making that object ineligible for garbage collection from the start of the routine to the point, in execution order, where this method is called.</span></span> <span data-ttu-id="503bd-299">Код этого метода в конце, а не в начале диапазона инструкций, где `obj` должны быть доступны.</span><span class="sxs-lookup"><span data-stu-id="503bd-299">Code this method at the end, not the beginning, of the range of instructions where `obj` must be available.</span></span>  
  
 <span data-ttu-id="503bd-300"><xref:System.GC.KeepAlive%2A> Метод не выполняет никаких действий и не производит побочных эффектов Кроме увеличения времени существования объекта, переданного в качестве параметра.</span><span class="sxs-lookup"><span data-stu-id="503bd-300">The <xref:System.GC.KeepAlive%2A> method performs no operation and produces no side effects other than extending the lifetime of the object passed in as a parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="503bd-301">В следующем примере кода создается объект в начале его `Main` метода и не ссылается на объект до самого конца при <xref:System.GC.KeepAlive%2A> вызывается метод.</span><span class="sxs-lookup"><span data-stu-id="503bd-301">The following code example creates an object at the beginning of its `Main` method and does not refer to the object again until the end, when the <xref:System.GC.KeepAlive%2A> method is called.</span></span> <span data-ttu-id="503bd-302">Объект сохраняется в течение 30 секунд `Main` метода, несмотря на вызовы <xref:System.GC.Collect%2A> и <xref:System.GC.WaitForPendingFinalizers%2A> методы.</span><span class="sxs-lookup"><span data-stu-id="503bd-302">The object persists for the 30-second duration of the `Main` method, despite calls to the <xref:System.GC.Collect%2A> and <xref:System.GC.WaitForPendingFinalizers%2A> methods.</span></span>  
  
 [!code-cpp[System.GC.KeepAlive Example2#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.GC.KeepAlive Example2/CPP/gckeepalive.cpp#1)]
 [!code-csharp[System.GC.KeepAlive Example2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.GC.KeepAlive Example2/CS/gckeepalive.cs#1)]
 [!code-vb[System.GC.KeepAlive Example2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.GC.KeepAlive Example2/VB/gckeepalive.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxGeneration">
      <MemberSignature Language="C#" Value="public static int MaxGeneration { get; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 MaxGeneration" />
      <MemberSignature Language="DocId" Value="P:System.GC.MaxGeneration" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MaxGeneration As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int MaxGeneration { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="503bd-303">Возвращает наибольшее число поколений, поддерживаемое системой в настоящее время.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503bd-303">Gets the maximum number of generations that the system currently supports.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="503bd-304">Значение от нуля до максимального числа поддерживаемых поколений.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503bd-304">A value that ranges from zero to the maximum number of supported generations.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="503bd-305">Номер поколения, или возраст объекта является определяемым относительная мера времени существования объекта зависящая от.</span><span class="sxs-lookup"><span data-stu-id="503bd-305">The generation number, or age, of an object is an implementation-defined relative measure of an object's lifespan.</span></span> <span data-ttu-id="503bd-306">Недавно созданные объекты в поколении 0 и старые объекты находящиеся в поколение меньше или равно поколение возвращенных <xref:System.GC.MaxGeneration%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="503bd-306">The most recently created objects are in generation 0 and the oldest objects are in a generation less than or equal to the generation returned by the <xref:System.GC.MaxGeneration%2A> property.</span></span>  
  
 <span data-ttu-id="503bd-307">Сборщик мусора предполагает, что память, выделенная является наиболее вероятные мусора более старые памяти.</span><span class="sxs-lookup"><span data-stu-id="503bd-307">The garbage collector assumes that newer memory is more likely to be eligible for garbage collection than older memory.</span></span> <span data-ttu-id="503bd-308">Таким образом, сборщик мусора повышает эффективность своей работы, настраивая номера поколений при каждом высвобождении памяти, и <xref:System.GC.MaxGeneration%2A> значение свойства может увеличиваться с течением времени.</span><span class="sxs-lookup"><span data-stu-id="503bd-308">Therefore, the garbage collector improves its performance by adjusting generation numbers each time it reclaims memory, and the <xref:System.GC.MaxGeneration%2A> property value can grow over time.</span></span>  
  
 <span data-ttu-id="503bd-309">Если реализована концепция возраста объектов, <xref:System.GC.MaxGeneration%2A> свойство возвращает максимальный номер поколения используется системой; в противном случае это свойство возвращает ноль.</span><span class="sxs-lookup"><span data-stu-id="503bd-309">If object aging is implemented, the <xref:System.GC.MaxGeneration%2A> property returns the maximum generation number used by the system; otherwise, this property returns zero.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="503bd-310">Следующий пример демонстрирует использование свойства MaxGeneration для отображения наибольший номер поколения в настоящее время используется.</span><span class="sxs-lookup"><span data-stu-id="503bd-310">The following example demonstrates how to use the MaxGeneration property to display the largest generation number currently in use.</span></span>  
  
 [!code-cpp[System.GC.Collect Int Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.gc.collect int example/CPP/class1.cpp#1)]
 [!code-csharp[System.GC.Collect Int Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.gc.collect int example/CS/class1.cs#1)]
 [!code-vb[System.GC.Collect Int Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.gc.collect int example/VB/class1.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="503bd-311">Для этой реализации значение, возвращаемое <see cref="P:System.GC.MaxGeneration" /> свойство гарантированно остаются постоянными в течение всего времени выполнения приложения.</span>
            <span class="sxs-lookup">
              <span data-stu-id="503bd-311">For this implementation, the value returned by the <see cref="P:System.GC.MaxGeneration" /> property is guaranteed to remain constant for the lifetime of an executing application.</span>
            </span>
            <span data-ttu-id="503bd-312">Используйте <see cref="P:System.GC.MaxGeneration" /> свойства, чтобы определить максимальное значение, можно указать при вызове <see cref="M:System.GC.Collect(System.Int32)" /> метода, принимающего поколения в качестве параметра.</span>
            <span class="sxs-lookup">
              <span data-stu-id="503bd-312">Use the <see cref="P:System.GC.MaxGeneration" /> property to determine the maximum value you can specify when calling the <see cref="M:System.GC.Collect(System.Int32)" /> method that takes a generation parameter.</span>
            </span>
          </para>
        </block>
        <altmember cref="M:System.GC.GetGeneration(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="RegisterForFullGCNotification">
      <MemberSignature Language="C#" Value="public static void RegisterForFullGCNotification (int maxGenerationThreshold, int largeObjectHeapThreshold);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisterForFullGCNotification(int32 maxGenerationThreshold, int32 largeObjectHeapThreshold) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.GC.RegisterForFullGCNotification(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RegisterForFullGCNotification (maxGenerationThreshold As Integer, largeObjectHeapThreshold As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RegisterForFullGCNotification(int maxGenerationThreshold, int largeObjectHeapThreshold);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="maxGenerationThreshold" Type="System.Int32" />
        <Parameter Name="largeObjectHeapThreshold" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="maxGenerationThreshold">
          <span data-ttu-id="503bd-313">Число от 1 до 99, указывающее условия создания уведомления в зависимости от объектов, выделенных в поколение 2.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503bd-313">A number between 1 and 99 that specifies when the notification should be raised based on the objects allocated in generation 2.</span>
          </span>
        </param>
        <param name="largeObjectHeapThreshold">
          <span data-ttu-id="503bd-314">Число от 1 до 99, указывающее условия создания уведомления в зависимости от объектов, помещенных в кучу больших объектов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503bd-314">A number between 1 and 99 that specifies when the notification should be raised based on objects allocated in the large object heap.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="503bd-315">Указывает, что необходимо отправлять уведомления о сборке мусора, когда соблюдены условия для полной сборки мусора и когда завершена сборка.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503bd-315">Specifies that a garbage collection notification should be raised when conditions favor full garbage collection and when the collection has been completed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="503bd-316">Для каждого поколения сборщик мусора Задает пороговое значение для распределения в этом поколении.</span><span class="sxs-lookup"><span data-stu-id="503bd-316">For each generation, the garbage collector sets a threshold for allocations into that generation.</span></span> <span data-ttu-id="503bd-317">Когда размер выделений превышает этот порог, сбора мусора запускается для этого поколения.</span><span class="sxs-lookup"><span data-stu-id="503bd-317">When the size of allocations exceeds this threshold, a garbage collection is triggered on that generation.</span></span> <span data-ttu-id="503bd-318">Для например, если пороговое значение поколения 2 составляет 20 МБ (то есть, остается после первого поколения 20 МБ, перешедшие в поколение 2) и более 20 МБ уцелел поколения 1 и предлагается в поколение 2, будет предпринята попытка следующей сборки мусора как сборки поколения 2.</span><span class="sxs-lookup"><span data-stu-id="503bd-318">For example, if generation 2’s threshold is 20MB (which means that 20MB survives generation 1 collections and is promoted into generation 2), and more than 20MB has survived generation 1 and is prompted into generation 2, the next garbage collection will be attempted as a generation 2 collection.</span></span> <span data-ttu-id="503bd-319">Аналогично Если куча больших объектов (LOH) пороговое значение — 20 МБ и приложения выделил более 20 МБ больших объектов, следующая сборка мусора также применяется как сборки поколения 2 (поскольку LOH собираются только в gen2 сборки мусора).</span><span class="sxs-lookup"><span data-stu-id="503bd-319">Similarly, if the large object heap's (LOH's) threshold is 20MB and your app has allocated more than 20MB of large objects, the next garbage collection will also be attempted as a generation 2 collection (since the LOH is only collected in gen2 garbage collections).</span></span>  
  
 <span data-ttu-id="503bd-320">`maxGenerationThreshold` И `largeObjectHeapThreshold` пороговые значения управления заранее объем уведомляются прежде, чем полная сборка мусора происходит.</span><span class="sxs-lookup"><span data-stu-id="503bd-320">The `maxGenerationThreshold` and `largeObjectHeapThreshold` thresholds control how much in advance you are notified before a full garbage collection occurs.</span></span> <span data-ttu-id="503bd-321">Чем больше порогового значения, дополнительные выделения, которые могут возникать между уведомления и следующей сборке мусора.</span><span class="sxs-lookup"><span data-stu-id="503bd-321">The greater the threshold, the more allocations that can occur between notification and the next full garbage collection.</span></span>  
  
 <span data-ttu-id="503bd-322">Если у вас есть ситуации, в которых полная сборка мусора средой CLR может неблагоприятно повлиять на производительность приложения, вы можете запросить уведомления, когда среда выполнения собирается выполнить полную сборку мусора и обходить эту сборку вызывая сборку самостоятельно (с помощью <xref:System.GC.Collect%2A> метод) Если предпочтительна, по-прежнему выполняются условия.</span><span class="sxs-lookup"><span data-stu-id="503bd-322">If you have situations in which a full garbage collection by the common language runtime would adversely affect your application's performance, you can ask to be notified when the runtime is about to do a full garbage collection and circumvent that collection by inducing a collection yourself (using the <xref:System.GC.Collect%2A> method) when conditions are still favorable.</span></span> <span data-ttu-id="503bd-323">Помимо изменения расписание сбора мусора самостоятельно, полной сборки Мусора уведомлений можно использовать в следующих сценариях:</span><span class="sxs-lookup"><span data-stu-id="503bd-323">In addition to changing the garbage collection schedule yourself, full GC notification is useful in following the scenarios:</span></span>  
  
-   <span data-ttu-id="503bd-324">За метод полной сборкой мусора, и при появлении одного приближается, уменьшите размер динамических данных (например, освободив некоторых записей кэша).</span><span class="sxs-lookup"><span data-stu-id="503bd-324">You monitor for the approach of a full garbage collection and, when you are notified that one is approaching, you reduce live data size (for example, by releasing some cache entries).</span></span> <span data-ttu-id="503bd-325">В результате Если производится сбор мусора, является возможность освободить больше памяти.</span><span class="sxs-lookup"><span data-stu-id="503bd-325">As a result, when the garbage collection occurs, it is able to reclaim more memory.</span></span>  
  
-   <span data-ttu-id="503bd-326">Мониторинг для выполнения полной сборкой мусора, чтобы вы можете собирать статистику.</span><span class="sxs-lookup"><span data-stu-id="503bd-326">You monitor for the completion of a full garbage collection so that you can collect some statistics.</span></span>  <span data-ttu-id="503bd-327">Например может потребоваться измерения размера кучи по завершении сборки Мусора, чтобы знать размер данных в режиме реального времени.</span><span class="sxs-lookup"><span data-stu-id="503bd-327">For example, you might want to measure the size of the heap at GC completion so that you know the size of live data.</span></span> <span data-ttu-id="503bd-328">(После полной сборки Мусора кучи — минимальный размер).</span><span class="sxs-lookup"><span data-stu-id="503bd-328">(After a full GC, the heap is at its smallest size.)</span></span>  
  
 <span data-ttu-id="503bd-329">Дополнительные сведения о том, что представляет полную сборку мусора см. в разделе [сборке мусора](~/docs/standard/garbage-collection/notifications.md).</span><span class="sxs-lookup"><span data-stu-id="503bd-329">For more information about what represents a full garbage collection, see [Garbage Collection Notifications](~/docs/standard/garbage-collection/notifications.md).</span></span>  
  
 <span data-ttu-id="503bd-330">При регистрации уведомления о сборке мусора, чтобы настроить уведомления при приближении к полной сборкой мусора, и при ее завершении.</span><span class="sxs-lookup"><span data-stu-id="503bd-330">When you register for a garbage collection notification, you can be notified when a full garbage collection is approaching and when it is completed.</span></span> <span data-ttu-id="503bd-331">Этот шаблон напоминает как операционная система отслеживает уведомления о нехватке памяти.</span><span class="sxs-lookup"><span data-stu-id="503bd-331">This pattern resembles how the operating system monitors for low memory notifications.</span></span>  
  
 <span data-ttu-id="503bd-332">Следуйте приведенным ниже рекомендациям для указания `maxGenerationThreshold` и `largeObjectHeapThreshold` параметры:</span><span class="sxs-lookup"><span data-stu-id="503bd-332">Use the following guidelines for specifying the `maxGenerationThreshold` and `largeObjectHeapThreshold` parameters:</span></span>  
  
-   <span data-ttu-id="503bd-333">Чем больше порогового значения, дополнительные выделения произойдет между уведомления и полная сборка мусора.</span><span class="sxs-lookup"><span data-stu-id="503bd-333">The larger the threshold value, the more allocations will occur between the notification and the full garbage collection.</span></span>  
  
     <span data-ttu-id="503bd-334">Большее значение порога обеспечивает дополнительные возможности для выполнения, чтобы проверить приближение сборки.</span><span class="sxs-lookup"><span data-stu-id="503bd-334">A larger threshold value provides more opportunities for the runtime to check for an approaching collection.</span></span> <span data-ttu-id="503bd-335">Это повышает вероятность того, что вы получите уведомление.</span><span class="sxs-lookup"><span data-stu-id="503bd-335">This increases the likelihood that you will be notified.</span></span> <span data-ttu-id="503bd-336">Однако не следует задавать слишком большое пороговое значение, так как дополнительные выделения прежде, чем среда выполнения вызывает следующую сборку.</span><span class="sxs-lookup"><span data-stu-id="503bd-336">However, you should not set the threshold too high because that results in a more allocations before the runtime induces the next collection.</span></span>  
  
     <span data-ttu-id="503bd-337">Если коллекция самостоятельно после уведомления с использованием высокого порогового значения, меньше объектов уничтожаются не будет удален при следующей коллекции среды выполнения.</span><span class="sxs-lookup"><span data-stu-id="503bd-337">When you induce a collection yourself upon notification using a high threshold value, fewer objects are reclaimed than would be reclaimed by the runtime's next collection.</span></span>  
  
-   <span data-ttu-id="503bd-338">Чем меньше пороговое значение, меньшее число распределения между уведомлением и полная сборка мусора.</span><span class="sxs-lookup"><span data-stu-id="503bd-338">The smaller the threshold value, the fewer the allocations between notification and the full garbage collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="503bd-339">В следующем примере показано, как зарегистрировать уведомление о сборке мусора и запустить поток, чтобы отслеживать состояние уведомления о сборке мусора.</span><span class="sxs-lookup"><span data-stu-id="503bd-339">The following example shows how to register a garbage collection notification and start a thread to monitor the status of the garbage collection notification.</span></span> <span data-ttu-id="503bd-340">Данный пример кода является частью большего примера, приведенного для [сборке мусора](~/docs/standard/garbage-collection/notifications.md) раздела.</span><span class="sxs-lookup"><span data-stu-id="503bd-340">This code example is part of a larger example provided for [Garbage Collection Notifications](~/docs/standard/garbage-collection/notifications.md) topic.</span></span>  
  
 [!code-cpp[GCNotification#2](~/samples/snippets/cpp/VS_Snippets_CLR/GCNotification/cpp/program.cpp#2)]
 [!code-csharp[GCNotification#2](~/samples/snippets/csharp/VS_Snippets_CLR/GCNotification/cs/Program.cs#2)]
 [!code-vb[GCNotification#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/GCNotification/vb/program.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="503bd-341">Значение параметра <paramref name="maxGenerationThreshold" /> или <paramref name="largeObjectHeapThreshold" /> не входит в диапазон от 1 до 99.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503bd-341">
              <paramref name="maxGenerationThreshold" /> or <paramref name="largeObjectHeapThreshold" /> is not between 1 and 99.</span>
          </span>
        </exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">
          <span data-ttu-id="503bd-342">Для полного доверия для непосредственного вызывающего.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503bd-342">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="503bd-343">Этот член не может быть использован частично доверенным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503bd-343">This member cannot be used by partially trusted code.</span>
          </span>
        </permission>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="503bd-344">требуется полное доверие для непосредственно вызывающего метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503bd-344">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="503bd-345">Этот член не может использоваться частично доверенным или прозрачным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503bd-345">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="RemoveMemoryPressure">
      <MemberSignature Language="C#" Value="public static void RemoveMemoryPressure (long bytesAllocated);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveMemoryPressure(int64 bytesAllocated) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.GC.RemoveMemoryPressure(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveMemoryPressure (bytesAllocated As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveMemoryPressure(long bytesAllocated);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytesAllocated" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="bytesAllocated">
          <span data-ttu-id="503bd-346">Объем освобожденной неуправляемой памяти.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503bd-346">The amount of unmanaged memory that has been released.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="503bd-347">Информирует среду выполнения о том, что неуправляемая память освобождена и ее более не требуется учитывать при планировании сборки мусора.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503bd-347">Informs the runtime that unmanaged memory has been released and no longer needs to be taken into account when scheduling garbage collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="503bd-348">При определении времени запланировать сбор мусора, среда выполнения учитывает выделенный объем управляемой памяти.</span><span class="sxs-lookup"><span data-stu-id="503bd-348">In determining when to schedule garbage collection, the runtime takes into account how much managed memory is allocated.</span></span> <span data-ttu-id="503bd-349">Если маленький управляемый объект выделяет большой объем неуправляемой памяти, среда выполнения учитывает только управляемую память и поэтому недооценивает срочность планирования сборки мусора.</span><span class="sxs-lookup"><span data-stu-id="503bd-349">If a small managed object allocates a large amount of unmanaged memory, the runtime takes into account only the managed memory, and thus underestimates the urgency of scheduling garbage collection.</span></span> <span data-ttu-id="503bd-350"><xref:System.GC.AddMemoryPressure%2A> Метод информирует среду выполнения о этот дополнительную нагрузку на системной памяти и <xref:System.GC.RemoveMemoryPressure%2A> метод информирует среду выполнения, что была снята дополнительную нагрузку.</span><span class="sxs-lookup"><span data-stu-id="503bd-350">The <xref:System.GC.AddMemoryPressure%2A> method informs the runtime of this additional pressure on system memory, and the <xref:System.GC.RemoveMemoryPressure%2A> method informs the runtime that the additional pressure has been released.</span></span>  
  
 <span data-ttu-id="503bd-351">В простейшей схеме использования управляемый объект выделяет неуправляемую память в конструкторе и освобождает его в `Dispose` или `Finalize` метод.</span><span class="sxs-lookup"><span data-stu-id="503bd-351">In the simplest usage pattern, a managed object allocates unmanaged memory in the constructor and releases it in the `Dispose` or `Finalize` method.</span></span> <span data-ttu-id="503bd-352">Вызовите <xref:System.GC.AddMemoryPressure%2A> метод после выделения неуправляемой памяти и вызывать <xref:System.GC.RemoveMemoryPressure%2A> метод после ее освобождения.</span><span class="sxs-lookup"><span data-stu-id="503bd-352">Call the <xref:System.GC.AddMemoryPressure%2A> method after allocating the unmanaged memory, and call the <xref:System.GC.RemoveMemoryPressure%2A> method after releasing it.</span></span>  
  
 <span data-ttu-id="503bd-353">В более сложных сценариях, где выделения неуправляемой памяти существенно изменяется за время жизни управляемого объекта, можно вызвать <xref:System.GC.AddMemoryPressure%2A> и <xref:System.GC.RemoveMemoryPressure%2A> методов для взаимодействия эти добавочных изменений в среду выполнения.</span><span class="sxs-lookup"><span data-stu-id="503bd-353">In more complicated scenarios, where the unmanaged memory allocation changes substantially during the lifetime of the managed object, you can call the <xref:System.GC.AddMemoryPressure%2A> and <xref:System.GC.RemoveMemoryPressure%2A> methods to communicate these incremental changes to the runtime.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="503bd-354">Необходимо гарантировать, что удаляется точно степень давления, можно добавить.</span><span class="sxs-lookup"><span data-stu-id="503bd-354">You must ensure that you remove exactly the amount of pressure you add.</span></span> <span data-ttu-id="503bd-355">Невыполнение этого может отрицательно сказаться на производительности системы в приложениях, выполняемых в течение длительного времени.</span><span class="sxs-lookup"><span data-stu-id="503bd-355">Failing to do so can adversely affect the performance of the system in applications that run for long periods of time.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="503bd-356">
            <paramref name="bytesAllocated" /> меньше или равно 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503bd-356">
              <paramref name="bytesAllocated" /> is less than or equal to 0.</span>
          </span>
          <span data-ttu-id="503bd-357">- или -</span>
          <span class="sxs-lookup">
            <span data-stu-id="503bd-357">-or-</span>
          </span>
          <span data-ttu-id="503bd-358">На 32-разрядном компьютере <paramref name="bytesAllocated" /> больше <see cref="F:System.Int32.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503bd-358">On a 32-bit computer, <paramref name="bytesAllocated" /> is larger than <see cref="F:System.Int32.MaxValue" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="503bd-359">для возможности вызова неуправляемого кода, при обработке приоритетом сборки мусора.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503bd-359">for the ability to call unmanaged code when manipulating garbage-collection priority.</span>
          </span>
          <span data-ttu-id="503bd-360">Связанное перечисление: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="503bd-360">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="503bd-361">требуется полное доверие для непосредственно вызывающего метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503bd-361">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="503bd-362">Этот член не может использоваться частично доверенным или прозрачным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503bd-362">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="ReRegisterForFinalize">
      <MemberSignature Language="C#" Value="public static void ReRegisterForFinalize (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ReRegisterForFinalize(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.GC.ReRegisterForFinalize(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ReRegisterForFinalize (obj As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ReRegisterForFinalize(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="503bd-363">Объект, для которого должен быть вызван метод завершения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503bd-363">The object that a finalizer must be called for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="503bd-364">Требует, чтобы система вызвала метод завершения для указанного объекта, для которого ранее был вызван метод <see cref="M:System.GC.SuppressFinalize(System.Object)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503bd-364">Requests that the system call the finalizer for the specified object for which <see cref="M:System.GC.SuppressFinalize(System.Object)" /> has previously been called.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="503bd-365"><xref:System.GC.ReRegisterForFinalize%2A> Добавляет метод `obj` параметра к списку объектов, запрашивающих завершения, прежде чем сборщик мусора освобождает объект.</span><span class="sxs-lookup"><span data-stu-id="503bd-365">The <xref:System.GC.ReRegisterForFinalize%2A> method adds the `obj` parameter to the list of objects that request finalization before the garbage collector frees the object.</span></span> <span data-ttu-id="503bd-366">`obj` Параметр должен иметь код, вызывающий этот метод.</span><span class="sxs-lookup"><span data-stu-id="503bd-366">The `obj` parameter must be the caller of this method.</span></span>  
  
 <span data-ttu-id="503bd-367">Вызов <xref:System.GC.ReRegisterForFinalize%2A> метод не гарантирует, что сборщик мусора вызовет метод завершения объекта.</span><span class="sxs-lookup"><span data-stu-id="503bd-367">Calling the <xref:System.GC.ReRegisterForFinalize%2A> method does not guarantee that the garbage collector will call an object's finalizer.</span></span>  
  
 <span data-ttu-id="503bd-368">По умолчанию все объекты, которые реализуют финализаторы добавляются в список объектов, которые требуют завершения; Тем не менее, может быть уже завершен или может отключен путем вызова объекта <xref:System.GC.SuppressFinalize%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="503bd-368">By default, all objects that implement finalizers are added to the list of objects that require finalization; however, an object might have already been finalized or might have disabled finalization by calling the <xref:System.GC.SuppressFinalize%2A> method.</span></span>  
  
 <span data-ttu-id="503bd-369">Метод завершения может использовать этот метод, чтобы восстановить себя или объект, который он ссылается.</span><span class="sxs-lookup"><span data-stu-id="503bd-369">A finalizer can use this method to resurrect itself or an object that it references.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="503bd-370">В следующем примере показано, как с помощью метода ReRegisterForFinalize завершить объект второй после сборки мусора.</span><span class="sxs-lookup"><span data-stu-id="503bd-370">The following example demonstrates how to use the ReRegisterForFinalize method to finalize an object a second time after garbage collection.</span></span>  
  
 [!code-cpp[System.GC.ReregisterForFinalize Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.GC.ReRegisterForFinalize Example/CPP/class1.cpp#1)]
 [!code-csharp[System.GC.ReregisterForFinalize Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.GC.ReRegisterForFinalize Example/CS/class1.cs#1)]
 [!code-vb[System.GC.ReregisterForFinalize Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.GC.ReRegisterForFinalize Example/VB/class1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="503bd-371">Свойство <paramref name="obj" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503bd-371">
              <paramref name="obj" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.GC.SuppressFinalize(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="SuppressFinalize">
      <MemberSignature Language="C#" Value="public static void SuppressFinalize (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SuppressFinalize(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.GC.SuppressFinalize(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SuppressFinalize (obj As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SuppressFinalize(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="503bd-372">Объект, метод завершения для которого не должен выполняться.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503bd-372">The object whose finalizer must not be executed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="503bd-373">Сообщает среде CLR, что она на не должна вызывать метод завершения для указанного объекта.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503bd-373">Requests that the common language runtime not call the finalizer for the specified object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="503bd-374">Этот метод устанавливает бит в заголовке объекта `obj`, который среда выполнения проверяет при вызове метода завершения.</span><span class="sxs-lookup"><span data-stu-id="503bd-374">This method sets a bit in the object header of `obj`, which the runtime checks when calling finalizers.</span></span> <span data-ttu-id="503bd-375">Метод завершения, которое представляется <xref:System.Object.Finalize%2A?displayProperty=nameWithType> метод, используется для освобождения неуправляемых ресурсов, перед объект сбора мусора.</span><span class="sxs-lookup"><span data-stu-id="503bd-375">A finalizer, which is represented by the <xref:System.Object.Finalize%2A?displayProperty=nameWithType> method, is used to release unmanaged resources before an object is garbage-collected.</span></span> <span data-ttu-id="503bd-376">Если `obj` не метод завершения, вызов <xref:System.GC.SuppressFinalize%2A> метод не оказывает влияния.</span><span class="sxs-lookup"><span data-stu-id="503bd-376">If `obj` does not have a finalizer, the call to the <xref:System.GC.SuppressFinalize%2A> method has no effect.</span></span>  
  
 <span data-ttu-id="503bd-377">Объекты, реализующие <xref:System.IDisposable> интерфейс этот метод можно вызывать из объекта <xref:System.IDisposable.Dispose%2A?displayProperty=nameWithType> реализацию, чтобы помешать сборщику мусора вызвать <xref:System.Object.Finalize%2A?displayProperty=nameWithType> на объекте, который не требует его.</span><span class="sxs-lookup"><span data-stu-id="503bd-377">Objects that implement the <xref:System.IDisposable> interface can call this method from the object's <xref:System.IDisposable.Dispose%2A?displayProperty=nameWithType> implementation to prevent the garbage collector from calling <xref:System.Object.Finalize%2A?displayProperty=nameWithType> on an object that does not require it.</span></span> <span data-ttu-id="503bd-378">Как правило, это делается во избежание метода завершения освободить неуправляемые ресурсы, которые уже был освобожден <xref:System.IDisposable.Dispose%2A?displayProperty=nameWithType> реализации.</span><span class="sxs-lookup"><span data-stu-id="503bd-378">Typically, this is done to prevent the finalizer from releasing unmanaged resources that have already been freed by the <xref:System.IDisposable.Dispose%2A?displayProperty=nameWithType> implementation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="503bd-379">В следующем примере демонстрируется использование <xref:System.GC.SuppressFinalize%2A> метода в классе ресурса во избежание избыточной сборки мусора от их вызова.</span><span class="sxs-lookup"><span data-stu-id="503bd-379">The following example demonstrates how to use the <xref:System.GC.SuppressFinalize%2A> method in a resource class to prevent a redundant garbage collection from being called.</span></span> <span data-ttu-id="503bd-380">В этом примере [шаблон удаления](~/docs/standard/design-guidelines/dispose-pattern.md) освободить как управляемые ресурсы (то есть объекты, реализующие <xref:System.IDisposable>) и неуправляемые ресурсы.</span><span class="sxs-lookup"><span data-stu-id="503bd-380">The example uses the [dispose pattern](~/docs/standard/design-guidelines/dispose-pattern.md) to free both managed resources (that is, objects that implement <xref:System.IDisposable>) and unmanaged resources.</span></span>  
  
 [!code-csharp[System.GC.SuppressFinalize#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.gc.suppressfinalize/cs/suppressfinalize1.cs#1)]
 [!code-vb[System.GC.SuppressFinalize#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.gc.suppressfinalize/vb/suppressfinalize1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="503bd-381">Свойство <paramref name="obj" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503bd-381">
              <paramref name="obj" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.GC.ReRegisterForFinalize(System.Object)" />
        <altmember cref="M:System.Object.Finalize" />
      </Docs>
    </Member>
    <MemberGroup MemberName="TryStartNoGCRegion">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="503bd-382">Пытается запретить сборку мусора во время выполнения критического пути.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503bd-382">Attempts to disallow garbage collection during the execution of a critical path.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="503bd-383">Не удается вложить вызовы <xref:System.GC.TryStartNoGCRegion%2A> метод и вы должны вызывать только <xref:System.GC.EndNoGCRegion%2A> метод, если среда выполнения в данный момент в режим задержки без области сборки Мусора.</span><span class="sxs-lookup"><span data-stu-id="503bd-383">You cannot nest calls to the <xref:System.GC.TryStartNoGCRegion%2A> method, and you should only call the <xref:System.GC.EndNoGCRegion%2A> method if the runtime is currently in no GC region latency mode.</span></span> <span data-ttu-id="503bd-384">Другими словами, не следует вызывать <xref:System.GC.TryStartNoGCRegion%2A> несколько раз (после первого вызова метода, последующие вызовы не будет выполнено), и не должен ожидать вызовы <xref:System.GC.EndNoGCRegion%2A> для успешного выполнения только потому, что первый вызов <xref:System.GC.TryStartNoGCRegion%2A> успешно выполнен.</span><span class="sxs-lookup"><span data-stu-id="503bd-384">In other words, you should not call <xref:System.GC.TryStartNoGCRegion%2A> multiple times (after the first method call, subsequent calls will not succeed), and you should not expect calls to <xref:System.GC.EndNoGCRegion%2A> to succeed just because the first call to <xref:System.GC.TryStartNoGCRegion%2A> succeeded.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.GC.EndNoGCRegion" />
      </Docs>
    </MemberGroup>
    <Member MemberName="TryStartNoGCRegion">
      <MemberSignature Language="C#" Value="public static bool TryStartNoGCRegion (long totalSize);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryStartNoGCRegion(int64 totalSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.GC.TryStartNoGCRegion(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryStartNoGCRegion (totalSize As Long) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryStartNoGCRegion(long totalSize);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="totalSize" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="totalSize">
          <span data-ttu-id="503bd-385">Объем памяти в байтах для выделения без запуска сборки мусора.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503bd-385">The amount of memory in bytes to allocate without triggering a garbage collection.</span>
          </span>
          <span data-ttu-id="503bd-386">Он должен быть меньше или равен размеру временного сегмента.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503bd-386">It must be less than or equal to the size of an ephemeral segment.</span>
          </span>
          <span data-ttu-id="503bd-387">Сведения о размере эфемерных сегментов см. в разделе "Эфемерные поколения и сегменты" статьи [Основы сборки мусора](~/docs/standard/garbage-collection/fundamentals.md).</span>
          <span class="sxs-lookup">
            <span data-stu-id="503bd-387">For information on the size of an ephemeral segment, see the "Ephemeral generations and segments" section in the [Fundamentals of Garbage Collection](~/docs/standard/garbage-collection/fundamentals.md) article.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="503bd-388">Пытается запретить сборку мусора во время выполнения критического пути, если доступен указанный достаточный объем памяти.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503bd-388">Attempts to disallow garbage collection during the execution of a critical path if a specified amount of memory is available.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="503bd-389">Значение <see langword="true" />, если среде выполнения удалось зафиксировать необходимый объем памяти и сборщик мусора может перейти в режим задержки без области сборки мусора; в противном случае — значение <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503bd-389">
              <see langword="true" /> if the runtime was able to commit the required amount of memory and the garbage collector is able to enter no GC region latency mode; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="503bd-390"><xref:System.GC.TryStartNoGCRegion%28System.Int64%29> Метод предпринимает попытку сборщика мусора в GC режим задержки без области, запрещающая сбора мусора, пока приложение выполняет критической области кода.</span><span class="sxs-lookup"><span data-stu-id="503bd-390">The <xref:System.GC.TryStartNoGCRegion%28System.Int64%29> method attempts to place the garbage collector in no GC region latency mode, which disallows garbage collection while an app executes a critical region of code.</span></span>  <span data-ttu-id="503bd-391">Если среда выполнения не сможет изначально назначить запрошенный объем памяти, сборщик мусора выполняет полной блокирующей сборки мусора, при попытке освободить память.</span><span class="sxs-lookup"><span data-stu-id="503bd-391">If the runtime is unable to initially allocate the requested amount of memory, the garbage collector performs a full blocking garbage collection in an attempt to free additional memory.</span></span> <span data-ttu-id="503bd-392">Сборщик мусора переходит в режим задержки без области сборки Мусора он может выделить необходимый объем памяти, что в данном случае является фактически 2 \* `totalSize` байт (он пытается выделить `totalSize` байт для кучи маленьких объектов и `totalSize` байт для кучи больших объектов).</span><span class="sxs-lookup"><span data-stu-id="503bd-392">The garbage collector enters no GC region latency mode if it is able to allocate the required amount of memory, which in this case is actually 2 \* `totalSize` bytes (it attempts to allocate `totalSize` bytes for the small object heap and `totalSize` bytes for the large object heap).</span></span>  
  
 <span data-ttu-id="503bd-393">`totalSize` должно быть достаточно большим для обработки всех операций выделения памяти, которые происходят в критический путь.</span><span class="sxs-lookup"><span data-stu-id="503bd-393">`totalSize` must be large enough to handle all memory allocations that occur in the critical path.</span></span> <span data-ttu-id="503bd-394">Сюда входят выделения, приложения, а также параметры распределения, среда выполнения предоставляет от имени приложения.</span><span class="sxs-lookup"><span data-stu-id="503bd-394">This includes allocations by the app, as well as allocations that the runtime makes on the app's behalf.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="503bd-395">Не удается вложить вызовы <xref:System.GC.TryStartNoGCRegion%2A> метод и вы должны вызывать только <xref:System.GC.EndNoGCRegion%2A> метод, если среда выполнения в данный момент в режим задержки без области сборки Мусора.</span><span class="sxs-lookup"><span data-stu-id="503bd-395">You cannot nest calls to the <xref:System.GC.TryStartNoGCRegion%2A> method, and you should only call the <xref:System.GC.EndNoGCRegion%2A> method if the runtime is currently in no GC region latency mode.</span></span> <span data-ttu-id="503bd-396">Другими словами, не следует вызывать <xref:System.GC.TryStartNoGCRegion%2A> несколько раз (после первого вызова метода, последующие вызовы не будет выполнено), и не должен ожидать вызовы <xref:System.GC.EndNoGCRegion%2A> для успешного выполнения только потому, что первый вызов <xref:System.GC.TryStartNoGCRegion%2A> успешно выполнен.</span><span class="sxs-lookup"><span data-stu-id="503bd-396">In other words, you should not call <xref:System.GC.TryStartNoGCRegion%2A> multiple times (after the first method call, subsequent calls will not succeed), and you should not expect calls to <xref:System.GC.EndNoGCRegion%2A> to succeed just because the first call to <xref:System.GC.TryStartNoGCRegion%2A> succeeded.</span></span>  
  
 <span data-ttu-id="503bd-397">Выход из глобального Каталога режим задержки без области путем вызова <xref:System.GC.EndNoGCRegion%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="503bd-397">You exit the no GC region latency mode by calling the <xref:System.GC.EndNoGCRegion%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="503bd-398">
            <paramref name="totalSize" /> превышает размер эфемерного сегмента.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503bd-398">
              <paramref name="totalSize" /> exceeds the ephemeral segment size.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="503bd-399">Процесс уже находится в режиме задержки без области сборки мусора.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503bd-399">The process is already in no GC region latency mode.</span>
          </span>
        </exception>
        <altmember cref="M:System.GC.EndNoGCRegion" />
      </Docs>
    </Member>
    <Member MemberName="TryStartNoGCRegion">
      <MemberSignature Language="C#" Value="public static bool TryStartNoGCRegion (long totalSize, bool disallowFullBlockingGC);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryStartNoGCRegion(int64 totalSize, bool disallowFullBlockingGC) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.GC.TryStartNoGCRegion(System.Int64,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryStartNoGCRegion (totalSize As Long, disallowFullBlockingGC As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryStartNoGCRegion(long totalSize, bool disallowFullBlockingGC);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="totalSize" Type="System.Int64" />
        <Parameter Name="disallowFullBlockingGC" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="totalSize">
          <span data-ttu-id="503bd-400">Объем памяти в байтах для выделения без запуска сборки мусора.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503bd-400">The amount of memory in bytes to allocate without triggering a garbage collection.</span>
          </span>
          <span data-ttu-id="503bd-401">Он должен быть меньше или равен размеру временного сегмента.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503bd-401">It must be less than or equal to the size of an ephemeral segment.</span>
          </span>
          <span data-ttu-id="503bd-402">Сведения о размере эфемерных сегментов см. в разделе "Эфемерные поколения и сегменты" статьи [Основы сборки мусора](~/docs/standard/garbage-collection/fundamentals.md).</span>
          <span class="sxs-lookup">
            <span data-stu-id="503bd-402">For information on the size of an ephemeral segment, see the "Ephemeral generations and segments" section in the [Fundamentals of Garbage Collection](~/docs/standard/garbage-collection/fundamentals.md) article.</span>
          </span>
        </param>
        <param name="disallowFullBlockingGC">
          <span data-ttu-id="503bd-403">Значение <see langword="true" />, чтобы пропустить полную блокирующую сборку мусора, если сборщику мусора изначально не удалось выделить <c>totalSize</c> байтов; в противном случае значение <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503bd-403">
              <see langword="true" /> to omit a full blocking garbage collection if the garbage collector is initially unable to allocate <c>totalSize</c> bytes; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="503bd-404">Пытается запретить сборку мусора во время выполнения критического пути, если доступен указанный объем памяти, и устанавливает, будет ли выполняться полная блокирующая сборка мусора, если изначально не хватает памяти.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503bd-404">Attempts to disallow garbage collection during the execution of a critical path if a specified amount of memory is available, and controls whether the garbage collector does a full blocking garbage collection if not enough memory is initially available.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="503bd-405">Значение <see langword="true" />, если среде выполнения удалось зафиксировать необходимый объем памяти и сборщик мусора может перейти в режим задержки без области сборки мусора; в противном случае — значение <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503bd-405">
              <see langword="true" /> if the runtime was able to commit the required amount of memory and the garbage collector is able to enter no GC region latency mode; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="503bd-406"><xref:System.GC.TryStartNoGCRegion%28System.Int64%2CSystem.Boolean%29> Метод предпринимает попытку сборщика мусора в GC режим задержки без области, запрещающая сбора мусора, пока приложение выполняет критической области кода.</span><span class="sxs-lookup"><span data-stu-id="503bd-406">The <xref:System.GC.TryStartNoGCRegion%28System.Int64%2CSystem.Boolean%29> method attempts to place the garbage collector in no GC region latency mode, which disallows garbage collection while an app executes a critical region of code.</span></span>  <span data-ttu-id="503bd-407">Если среда выполнения не может изначально выделить запрошенного объема памяти и `disallowFullBlockingGC` аргумент `false`, сборщик мусора выполняет полной блокирующей сборки мусора, пытаясь освободить память; в противном случае происходит сбой выделения, и метод возвращает `false`.</span><span class="sxs-lookup"><span data-stu-id="503bd-407">If the runtime is unable to initially allocate the requested amount of memory and the `disallowFullBlockingGC` argument is `false`, the garbage collector performs a full blocking garbage collection in an attempt to free additional memory; otherwise, the allocation fails, and the method returns `false`.</span></span> <span data-ttu-id="503bd-408">Сборщик мусора переходит в режим задержки без области сборки Мусора он может выделить необходимый объем памяти, что в данном случае является фактически 2 \* `totalSize` (он пытается выделить `totalSize` для кучи маленьких объектов и `totalSize` для кучи больших объектов).</span><span class="sxs-lookup"><span data-stu-id="503bd-408">The garbage collector enters no GC region latency mode if it is able to allocate the required amount of memory, which in this case is actually 2 \* `totalSize` (it attempts to allocate `totalSize` for the small object heap and `totalSize` for the large object heap).</span></span>  
  
 <span data-ttu-id="503bd-409">`totalSize` должно быть достаточно большим для обработки всех операций выделения памяти, которые происходят в критический путь.</span><span class="sxs-lookup"><span data-stu-id="503bd-409">`totalSize` must be large enough to handle all memory allocations that occur in the critical path.</span></span> <span data-ttu-id="503bd-410">Сюда входят выделения, приложения, а также параметры распределения, среда выполнения предоставляет от имени приложения.</span><span class="sxs-lookup"><span data-stu-id="503bd-410">This includes allocations by the app, as well as allocations that the runtime makes on the app's behalf.</span></span>  
  
 <span data-ttu-id="503bd-411">Установка `disallowFullBlockingGC` для `true` для предотвращения блокировки полной сборки мусора коллекции, если изначально не хватает памяти наиболее полезна в сценариях балансировки нагрузки: одну систему можно вызвать этот метод и сообщает о себе как Готово к приему запросов, если он возвращает `true`, и иметь подсистемы балансировки нагрузки, которые перенаправляют запросы с другими системами, если он возвращает `false`.</span><span class="sxs-lookup"><span data-stu-id="503bd-411">Setting `disallowFullBlockingGC` to `true` to prevent a full blocking garbage collection if not enough memory is initially available is most useful in load balancing scenarios: one system can call this method and report itself as ready to accept requests if it returns `true`, and have the load balancer redirect requests to other systems if it returns `false`.</span></span> <span data-ttu-id="503bd-412">Затем его можно сделать полной блокирующей сборки мусора, если он не обрабатывает запросы путем вызова <xref:System.GC.Collect%28System.Int32%2CSystem.GCCollectionMode%2CSystem.Boolean%2CSystem.Boolean%29> метод.</span><span class="sxs-lookup"><span data-stu-id="503bd-412">It can then do a full blocking garbage collection when it's not handling requests by calling the <xref:System.GC.Collect%28System.Int32%2CSystem.GCCollectionMode%2CSystem.Boolean%2CSystem.Boolean%29> method.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="503bd-413">Не удается вложить вызовы <xref:System.GC.TryStartNoGCRegion%2A> метод и вы должны вызывать только <xref:System.GC.EndNoGCRegion%2A> метод, если среда выполнения в данный момент в режим задержки без области сборки Мусора.</span><span class="sxs-lookup"><span data-stu-id="503bd-413">You cannot nest calls to the <xref:System.GC.TryStartNoGCRegion%2A> method, and you should only call the <xref:System.GC.EndNoGCRegion%2A> method if the runtime is currently in no GC region latency mode.</span></span> <span data-ttu-id="503bd-414">Другими словами, не следует вызывать <xref:System.GC.TryStartNoGCRegion%2A> несколько раз (после первого вызова метода, последующие вызовы не будет выполнено), и не должен ожидать вызовы <xref:System.GC.EndNoGCRegion%2A> для успешного выполнения только потому, что первый вызов <xref:System.GC.TryStartNoGCRegion%2A> успешно выполнен.</span><span class="sxs-lookup"><span data-stu-id="503bd-414">In other words, you should not call <xref:System.GC.TryStartNoGCRegion%2A> multiple times (after the first method call, subsequent calls will not succeed), and you should not expect calls to <xref:System.GC.EndNoGCRegion%2A> to succeed just because the first call to <xref:System.GC.TryStartNoGCRegion%2A> succeeded.</span></span>  
  
 <span data-ttu-id="503bd-415">Выход из глобального Каталога режим задержки без области путем вызова <xref:System.GC.EndNoGCRegion%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="503bd-415">You exit the no GC region latency mode by calling the <xref:System.GC.EndNoGCRegion%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="503bd-416">
            <paramref name="totalSize" /> превышает размер эфемерного сегмента.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503bd-416">
              <paramref name="totalSize" /> exceeds the ephemeral segment size.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="503bd-417">Процесс уже находится в режиме задержки без области сборки мусора.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503bd-417">The process is already in no GC region latency mode.</span>
          </span>
        </exception>
        <altmember cref="M:System.GC.EndNoGCRegion" />
      </Docs>
    </Member>
    <Member MemberName="TryStartNoGCRegion">
      <MemberSignature Language="C#" Value="public static bool TryStartNoGCRegion (long totalSize, long lohSize);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryStartNoGCRegion(int64 totalSize, int64 lohSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.GC.TryStartNoGCRegion(System.Int64,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryStartNoGCRegion (totalSize As Long, lohSize As Long) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryStartNoGCRegion(long totalSize, long lohSize);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="totalSize" Type="System.Int64" />
        <Parameter Name="lohSize" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="totalSize">
          <span data-ttu-id="503bd-418">Объем памяти в байтах для выделения без запуска сборки мусора.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503bd-418">The amount of memory in bytes to allocate without triggering a garbage collection.</span>
          </span>
          <span data-ttu-id="503bd-419">Значение <c>totalSize</c> –<c>lohSize</c> должно быть меньше или равно размеру временного сегмента.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503bd-419">
              <c>totalSize</c> –<c>lohSize</c> must be less than or equal to the size of an ephemeral segment.</span>
          </span>
          <span data-ttu-id="503bd-420">Сведения о размере эфемерных сегментов см. в разделе "Эфемерные поколения и сегменты" статьи [Основы сборки мусора](~/docs/standard/garbage-collection/fundamentals.md).</span>
          <span class="sxs-lookup">
            <span data-stu-id="503bd-420">For information on the size of an ephemeral segment, see the "Ephemeral generations and segments" section in the [Fundamentals of Garbage Collection](~/docs/standard/garbage-collection/fundamentals.md) article.</span>
          </span>
        </param>
        <param name="lohSize">
          <span data-ttu-id="503bd-421">Число байтов в <c>totalSize</c> для назначения кучи больших объектов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503bd-421">The number of bytes in <c>totalSize</c> to use for large object heap (LOH) allocations.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="503bd-422">Пытается запретить сборку мусора во время выполнения критического пути, если указанный объем памяти доступен для кучи больших объектов и для кучи маленьких объектов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503bd-422">Attempts to disallow garbage collection during the execution of a critical path if a specified amount of memory is available for the large object heap and the small object heap.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="503bd-423">Значение <see langword="true" />, если среде выполнения удалось зафиксировать необходимый объем памяти и сборщик мусора может перейти в режим задержки без области сборки мусора; в противном случае — значение <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503bd-423">
              <see langword="true" /> if the runtime was able to commit the required amount of memory and the garbage collector is able to enter no GC region latency mode; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="503bd-424"><xref:System.GC.TryStartNoGCRegion%28System.Int64%2CSystem.Int64%29> Метод предпринимает попытку сборщика мусора в GC режим задержки без области, запрещающая сбора мусора, пока приложение выполняет критической области кода.</span><span class="sxs-lookup"><span data-stu-id="503bd-424">The <xref:System.GC.TryStartNoGCRegion%28System.Int64%2CSystem.Int64%29> method attempts to place the garbage collector in no GC region latency mode, which disallows garbage collection while an app executes a critical region of code.</span></span>  <span data-ttu-id="503bd-425">Если среда выполнения не сможет изначально назначить запрошенный объем памяти, сборщик мусора выполняет полной блокирующей сборки мусора, при попытке освободить память.</span><span class="sxs-lookup"><span data-stu-id="503bd-425">If the runtime is unable to initially allocate the requested amount of memory, the garbage collector performs a full blocking garbage collection in an attempt to free additional memory.</span></span> <span data-ttu-id="503bd-426">Сборщик мусора переходит в режим задержки без области сборки Мусора он может выделить `lohSize` для LOH и `totalSize` — `lohSize` для кучи маленьких объектов (SOH).</span><span class="sxs-lookup"><span data-stu-id="503bd-426">The garbage collector enters no GC region latency mode if it is able to allocate `lohSize` for the LOH and `totalSize` – `lohSize` for the small object heap (SOH).</span></span>  
  
 <span data-ttu-id="503bd-427">`lohSize` должно быть достаточно большим для обработки всех операций выделения памяти, происходящие на критическом пути для LOH и `totalSize` — `lohSize` должно быть достаточно большим для обработки всех операций выделения памяти, происходящие на критическом пути для состояние работоспособности.</span><span class="sxs-lookup"><span data-stu-id="503bd-427">`lohSize` must be large enough to handle all memory allocations that occur in the critical path for the LOH, and `totalSize` – `lohSize` must be large enough to handle all memory allocations that occur in the critical path for the SOH.</span></span> <span data-ttu-id="503bd-428">Сюда входят выделения, приложения, а также параметры распределения, среда выполнения предоставляет от имени приложения.</span><span class="sxs-lookup"><span data-stu-id="503bd-428">This includes allocations by the app, as well as allocations that the runtime makes on the app's behalf.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="503bd-429">Не удается вложить вызовы <xref:System.GC.TryStartNoGCRegion%2A> метод и вы должны вызывать только <xref:System.GC.EndNoGCRegion%2A> метод, если среда выполнения в данный момент в режим задержки без области сборки Мусора.</span><span class="sxs-lookup"><span data-stu-id="503bd-429">You cannot nest calls to the <xref:System.GC.TryStartNoGCRegion%2A> method, and you should only call the <xref:System.GC.EndNoGCRegion%2A> method if the runtime is currently in no GC region latency mode.</span></span> <span data-ttu-id="503bd-430">Другими словами, не следует вызывать <xref:System.GC.TryStartNoGCRegion%2A> несколько раз (после первого вызова метода, последующие вызовы не будет выполнено), и не должен ожидать вызовы <xref:System.GC.EndNoGCRegion%2A> для успешного выполнения только потому, что первый вызов <xref:System.GC.TryStartNoGCRegion%2A> успешно выполнен.</span><span class="sxs-lookup"><span data-stu-id="503bd-430">In other words, you should not call <xref:System.GC.TryStartNoGCRegion%2A> multiple times (after the first method call, subsequent calls will not succeed), and you should not expect calls to <xref:System.GC.EndNoGCRegion%2A> to succeed just because the first call to <xref:System.GC.TryStartNoGCRegion%2A> succeeded.</span></span>  
  
 <span data-ttu-id="503bd-431">Выход из глобального Каталога режим задержки без области путем вызова <xref:System.GC.EndNoGCRegion%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="503bd-431">You exit the no GC region latency mode by calling the <xref:System.GC.EndNoGCRegion%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="503bd-432">
            <paramref name="totalSize" /> — <paramref name="lohSize" /> превышает размер эфемерного сегмента.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503bd-432">
              <paramref name="totalSize" /> – <paramref name="lohSize" /> exceeds the ephemeral segment size.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="503bd-433">Процесс уже находится в режиме задержки без области сборки мусора.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503bd-433">The process is already in no GC region latency mode.</span>
          </span>
        </exception>
        <altmember cref="M:System.GC.EndNoGCRegion" />
      </Docs>
    </Member>
    <Member MemberName="TryStartNoGCRegion">
      <MemberSignature Language="C#" Value="public static bool TryStartNoGCRegion (long totalSize, long lohSize, bool disallowFullBlockingGC);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryStartNoGCRegion(int64 totalSize, int64 lohSize, bool disallowFullBlockingGC) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.GC.TryStartNoGCRegion(System.Int64,System.Int64,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryStartNoGCRegion (totalSize As Long, lohSize As Long, disallowFullBlockingGC As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryStartNoGCRegion(long totalSize, long lohSize, bool disallowFullBlockingGC);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="totalSize" Type="System.Int64" />
        <Parameter Name="lohSize" Type="System.Int64" />
        <Parameter Name="disallowFullBlockingGC" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="totalSize">
          <span data-ttu-id="503bd-434">Объем памяти в байтах для выделения без запуска сборки мусора.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503bd-434">The amount of memory in bytes to allocate without triggering a garbage collection.</span>
          </span>
          <span data-ttu-id="503bd-435">Значение <c>totalSize</c> –<c>lohSize</c> должно быть меньше или равно размеру временного сегмента.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503bd-435">
              <c>totalSize</c> –<c>lohSize</c> must be less than or equal to the size of an ephemeral segment.</span>
          </span>
          <span data-ttu-id="503bd-436">Сведения о размере эфемерных сегментов см. в разделе "Эфемерные поколения и сегменты" статьи [Основы сборки мусора](~/docs/standard/garbage-collection/fundamentals.md).</span>
          <span class="sxs-lookup">
            <span data-stu-id="503bd-436">For information on the size of an ephemeral segment, see the "Ephemeral generations and segments" section in the [Fundamentals of Garbage Collection](~/docs/standard/garbage-collection/fundamentals.md) article.</span>
          </span>
        </param>
        <param name="lohSize">
          <span data-ttu-id="503bd-437">Число байтов в <c>totalSize</c> для назначения кучи больших объектов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503bd-437">The number of bytes in <c>totalSize</c> to use for large object heap (LOH) allocations.</span>
          </span>
        </param>
        <param name="disallowFullBlockingGC">
          <span data-ttu-id="503bd-438">Значение <see langword="true" />, чтобы пропустить полную блокирующую сборку мусора, если сборщику мусора изначально не удалось выделить указанную память в куче малых и в куче больших объектов; в противном случае — значение <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503bd-438">
              <see langword="true" /> to omit a full blocking garbage collection if the garbage collector is initially unable to allocate the specified memory on the small object heap (SOH) and LOH; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="503bd-439">Пытается запретить сборку мусора во время выполнения критического пути, если доступен указанный объем памяти для кучи больших объектов и для кучи маленьких объектов, и устанавливает, будет ли выполняться полная блокирующая сборка мусора, если изначально не хватает памяти.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503bd-439">Attempts to disallow garbage collection during the execution of a critical path if a specified amount of memory is available for the large object heap and the small object heap, and controls whether the garbage collector does a full blocking garbage collection if not enough memory is initially available.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="503bd-440">Значение <see langword="true" />, если среде выполнения удалось зафиксировать необходимый объем памяти и сборщик мусора может перейти в режим задержки без области сборки мусора; в противном случае — значение <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503bd-440">
              <see langword="true" /> if the runtime was able to commit the required amount of memory and the garbage collector is able to enter no GC region latency mode; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="503bd-441"><xref:System.GC.TryStartNoGCRegion%28System.Int64%2CSystem.Int64%2CSystem.Boolean%29> Метод предпринимает попытку сборщика мусора в GC режим задержки без области, запрещающая сбора мусора, пока приложение выполняет критической области кода.</span><span class="sxs-lookup"><span data-stu-id="503bd-441">The <xref:System.GC.TryStartNoGCRegion%28System.Int64%2CSystem.Int64%2CSystem.Boolean%29> method attempts to place the garbage collector in no GC region latency mode, which disallows garbage collection while an app executes a critical region of code.</span></span>  <span data-ttu-id="503bd-442">Если среда выполнения не может изначально выделить запрошенного объема памяти и `disallowFullBlockingGC` аргумент `false`, сборщик мусора выполняет полной блокирующей сборки мусора, пытаясь освободить память; в противном случае происходит сбой выделения, и метод возвращает `false`.</span><span class="sxs-lookup"><span data-stu-id="503bd-442">If the runtime is unable to initially allocate the requested amount of memory and the `disallowFullBlockingGC` argument is `false`, the garbage collector performs a full blocking garbage collection in an attempt to free additional memory; otherwise, the allocation fails, and the method returns `false`.</span></span> <span data-ttu-id="503bd-443">Сборщик мусора переходит в режим задержки без области сборки Мусора он может выделить `lohSize` для LOH и `totalSize` — `lohSize` для кучи маленьких объектов (SOH).</span><span class="sxs-lookup"><span data-stu-id="503bd-443">The garbage collector enters no GC region latency mode if it is able to allocate `lohSize` for the LOH and `totalSize` – `lohSize` for the small object heap (SOH).</span></span>  
  
 <span data-ttu-id="503bd-444">`lohSize` должно быть достаточно большим для обработки всех операций выделения памяти, происходящие на критическом пути для LOH и `totalSize` — `lohSize` должно быть достаточно большим для обработки всех операций выделения памяти, происходящие на критическом пути для состояние работоспособности.</span><span class="sxs-lookup"><span data-stu-id="503bd-444">`lohSize` must be large enough to handle all memory allocations that occur in the critical path for the LOH, and `totalSize` – `lohSize` must be large enough to handle all memory allocations that occur in the critical path for the SOH.</span></span> <span data-ttu-id="503bd-445">Сюда входят выделения, приложения, а также параметры распределения, среда выполнения предоставляет от имени приложения.</span><span class="sxs-lookup"><span data-stu-id="503bd-445">This includes allocations by the app, as well as allocations that the runtime makes on the app's behalf.</span></span>  
  
 <span data-ttu-id="503bd-446">Установка `disallowFullBlockingGC` для `true` для предотвращения блокировки полной сборки мусора коллекции, если изначально не хватает памяти наиболее полезна в сценариях балансировки нагрузки: одну систему можно вызвать этот метод и сообщает о себе как Готово к приему запросов, если он возвращает `true`, и иметь подсистемы балансировки нагрузки, которые перенаправляют запросы с другими системами, если он возвращает `false`.</span><span class="sxs-lookup"><span data-stu-id="503bd-446">Setting `disallowFullBlockingGC` to `true` to prevent a full blocking garbage collection if not enough memory is initially available is most useful in load balancing scenarios: one system can call this method and report itself as ready to accept requests if it returns `true`, and have the load balancer redirect requests to other systems if it returns `false`.</span></span> <span data-ttu-id="503bd-447">Затем его можно сделать полной блокирующей сборки мусора, если он не обрабатывает запросы путем вызова <xref:System.GC.Collect%28System.Int32%2CSystem.GCCollectionMode%2CSystem.Boolean%2CSystem.Boolean%29> метод.</span><span class="sxs-lookup"><span data-stu-id="503bd-447">It can then do a full blocking garbage collection when it's not handling requests by calling the <xref:System.GC.Collect%28System.Int32%2CSystem.GCCollectionMode%2CSystem.Boolean%2CSystem.Boolean%29> method.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="503bd-448">Не удается вложить вызовы <xref:System.GC.TryStartNoGCRegion%2A> метод и вы должны вызывать только <xref:System.GC.EndNoGCRegion%2A> метод, если среда выполнения в данный момент в режим задержки без области сборки Мусора.</span><span class="sxs-lookup"><span data-stu-id="503bd-448">You cannot nest calls to the <xref:System.GC.TryStartNoGCRegion%2A> method, and you should only call the <xref:System.GC.EndNoGCRegion%2A> method if the runtime is currently in no GC region latency mode.</span></span> <span data-ttu-id="503bd-449">Другими словами, не следует вызывать <xref:System.GC.TryStartNoGCRegion%2A> несколько раз (после первого вызова метода, последующие вызовы не будет выполнено), и не должен ожидать вызовы <xref:System.GC.EndNoGCRegion%2A> для успешного выполнения только потому, что первый вызов <xref:System.GC.TryStartNoGCRegion%2A> успешно выполнен.</span><span class="sxs-lookup"><span data-stu-id="503bd-449">In other words, you should not call <xref:System.GC.TryStartNoGCRegion%2A> multiple times (after the first method call, subsequent calls will not succeed), and you should not expect calls to <xref:System.GC.EndNoGCRegion%2A> to succeed just because the first call to <xref:System.GC.TryStartNoGCRegion%2A> succeeded.</span></span>  
  
 <span data-ttu-id="503bd-450">Выход из глобального Каталога режим задержки без области путем вызова <xref:System.GC.EndNoGCRegion%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="503bd-450">You exit the no GC region latency mode by calling the <xref:System.GC.EndNoGCRegion%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="503bd-451">
            <paramref name="totalSize" /> — <paramref name="lohSize" /> превышает размер эфемерного сегмента.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503bd-451">
              <paramref name="totalSize" /> – <paramref name="lohSize" /> exceeds the ephemeral segment size.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="503bd-452">Процесс уже находится в режиме задержки без области сборки мусора.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503bd-452">The process is already in no GC region latency mode.</span>
          </span>
        </exception>
        <altmember cref="M:System.GC.EndNoGCRegion" />
      </Docs>
    </Member>
    <MemberGroup MemberName="WaitForFullGCApproach">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="503bd-453">Возвращает состояние зарегистрированного уведомления, чтобы определить, является ли неизбежной полная, блокирующая сборка мусора средой CLR.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503bd-453">Returns the status of a registered notification for determining whether a full, blocking garbage collection by the common language runtime is imminent.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WaitForFullGCApproach">
      <MemberSignature Language="C#" Value="public static GCNotificationStatus WaitForFullGCApproach ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.GCNotificationStatus WaitForFullGCApproach() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.GC.WaitForFullGCApproach" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function WaitForFullGCApproach () As GCNotificationStatus" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static GCNotificationStatus WaitForFullGCApproach();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.GCNotificationStatus</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="503bd-454">Возвращает состояние зарегистрированного уведомления, чтобы определить, является ли неизбежной полная, блокирующая сборка мусора средой CLR.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503bd-454">Returns the status of a registered notification for determining whether a full, blocking garbage collection by the common language runtime is imminent.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="503bd-455">Состояние зарегистрированного уведомления о сборке мусора.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503bd-455">The status of the registered garbage collection notification.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="503bd-456">Используйте <xref:System.GCNotificationStatus> перечисления, возвращаемый этим методом, чтобы определить состояние текущего уведомления о сборке мусора, зарегистрированный с помощью <xref:System.GC.RegisterForFullGCNotification%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="503bd-456">Use the <xref:System.GCNotificationStatus> enumeration returned by this method to determine the status of the current garbage collection notification that was registered by using the <xref:System.GC.RegisterForFullGCNotification%2A> method.</span></span> <span data-ttu-id="503bd-457">Можно также использовать <xref:System.GC.WaitForFullGCComplete%2A> метод, чтобы определить, завершена ли полная сборка мусора.</span><span class="sxs-lookup"><span data-stu-id="503bd-457">You can also use the <xref:System.GC.WaitForFullGCComplete%2A> method to determine whether the full garbage collection has completed.</span></span>  
  
 <span data-ttu-id="503bd-458">При перечислении возвращает <xref:System.GCNotificationStatus.Succeeded>, можно выполнять задачи, такие как дополнительные объекты, предотвращая выделяется и вызывая сборку самостоятельно с <xref:System.GC.Collect%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="503bd-458">When the enumeration returns <xref:System.GCNotificationStatus.Succeeded>, you can do tasks such as preventing additional objects from being allocated and inducing a collection yourself with the <xref:System.GC.Collect%2A> method.</span></span> <span data-ttu-id="503bd-459">Обратите внимание, что уведомление не гарантирует, что полная сборка мусора происходит, только то, что условия Достигнуто пороговое значение, подходящей для полная сборка мусора возникает.</span><span class="sxs-lookup"><span data-stu-id="503bd-459">Note that the notification does not guarantee that a full garbage collection will occur, only that conditions have reached the threshold that are favorable for a full garbage collection to occur.</span></span>  
  
 <span data-ttu-id="503bd-460">Этот метод бесконечно ожидает уведомления о сборке мусора может быть получена.</span><span class="sxs-lookup"><span data-stu-id="503bd-460">This method waits indefinitely for a garbage collection notification to be obtained.</span></span> <span data-ttu-id="503bd-461">Если вы хотите указать время ожидания для метода, возвращающего не удается получить уведомления, используйте <xref:System.GC.WaitForFullGCApproach%28System.Int32%29?displayProperty=nameWithType> перегрузки метода.</span><span class="sxs-lookup"><span data-stu-id="503bd-461">If you want to specify a time-out period for the method to return if the notification cannot be obtained, use the <xref:System.GC.WaitForFullGCApproach%28System.Int32%29?displayProperty=nameWithType> method overload.</span></span> <span data-ttu-id="503bd-462">Если этот метод вызывается без указания времени ожидания, можно вызвать <xref:System.GC.CancelFullGCNotification%2A> метод, если ожидается больше, чем основной.</span><span class="sxs-lookup"><span data-stu-id="503bd-462">If you call this method without specifying a time-out, you can call the <xref:System.GC.CancelFullGCNotification%2A> method if you are waiting longer than preferred.</span></span>  
  
 <span data-ttu-id="503bd-463">С помощью вызова этого метода необходимо следовать <xref:System.GC.WaitForFullGCComplete%2A> метод, чтобы убедиться в том, что у вас уже есть полная сборка мусора.</span><span class="sxs-lookup"><span data-stu-id="503bd-463">You should follow this method with a call to the <xref:System.GC.WaitForFullGCComplete%2A> method to make sure that you have had a full garbage collection.</span></span> <span data-ttu-id="503bd-464">Вызов этого метода только дает неопределенные результаты.</span><span class="sxs-lookup"><span data-stu-id="503bd-464">Calling this method alone causes indeterminate results.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="503bd-465">В следующем примере показано, как этот метод используется для определения того, достигает ли полная блокировка сборки мусора.</span><span class="sxs-lookup"><span data-stu-id="503bd-465">The following example shows how to use this method to determine whether a full, blocking garbage collection is approaching.</span></span> <span data-ttu-id="503bd-466">Каждый раз, когда находится в состоянии уведомление <xref:System.GCNotificationStatus.Succeeded>, пользовательский метод `OnFullGCApproachNotify` вызывается для выполнения действий в ответ на приближение сборки.</span><span class="sxs-lookup"><span data-stu-id="503bd-466">Whenever the status of the notification is <xref:System.GCNotificationStatus.Succeeded>, the user method `OnFullGCApproachNotify` is called to perform actions in response to the approaching collection.</span></span> <span data-ttu-id="503bd-467">Данный пример кода является частью большего примера, приведенного для [сборке мусора](~/docs/standard/garbage-collection/notifications.md) раздела.</span><span class="sxs-lookup"><span data-stu-id="503bd-467">This code example is part of a larger example provided for [Garbage Collection Notifications](~/docs/standard/garbage-collection/notifications.md) topic.</span></span>  
  
 [!code-cpp[GCNotification#3](~/samples/snippets/cpp/VS_Snippets_CLR/GCNotification/cpp/program.cpp#3)]
 [!code-csharp[GCNotification#3](~/samples/snippets/csharp/VS_Snippets_CLR/GCNotification/cs/Program.cs#3)]
 [!code-vb[GCNotification#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/GCNotification/vb/program.vb#3)]  
  
 ]]></format>
        </remarks>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">
          <span data-ttu-id="503bd-468">Для полного доверия для непосредственного вызывающего.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503bd-468">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="503bd-469">Этот член не может быть использован частично доверенным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503bd-469">This member cannot be used by partially trusted code.</span>
          </span>
        </permission>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="503bd-470">требуется полное доверие для непосредственно вызывающего метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503bd-470">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="503bd-471">Этот член не может использоваться частично доверенным или прозрачным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503bd-471">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="WaitForFullGCApproach">
      <MemberSignature Language="C#" Value="public static GCNotificationStatus WaitForFullGCApproach (int millisecondsTimeout);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.GCNotificationStatus WaitForFullGCApproach(int32 millisecondsTimeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.GC.WaitForFullGCApproach(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function WaitForFullGCApproach (millisecondsTimeout As Integer) As GCNotificationStatus" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static GCNotificationStatus WaitForFullGCApproach(int millisecondsTimeout);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.GCNotificationStatus</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="millisecondsTimeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="millisecondsTimeout">
          <span data-ttu-id="503bd-472">Продолжительность времени ожидания, прежде чем можно извлечь состояние уведомления.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503bd-472">The length of time to wait before a notification status can be obtained.</span>
          </span>
          <span data-ttu-id="503bd-473">Укажите значение -1, если период ожидания неограниченный.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503bd-473">Specify -1 to wait indefinitely.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="503bd-474">Возвращает состояние зарегистрированного уведомления в пределах указанного времени ожидания, чтобы определить, является ли неизбежной полная блокировка сборки мусора средой CLR.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503bd-474">Returns, in a specified time-out period, the status of a registered notification for determining whether a full, blocking garbage collection by the common language runtime is imminent.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="503bd-475">Состояние зарегистрированного уведомления о сборке мусора.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503bd-475">The status of the registered garbage collection notification.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="503bd-476">Используйте <xref:System.GCNotificationStatus> перечисления, возвращаемый этим методом, чтобы определить состояние текущего уведомления о сборке мусора, зарегистрированный с помощью <xref:System.GC.RegisterForFullGCNotification%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="503bd-476">Use the <xref:System.GCNotificationStatus> enumeration returned by this method to determine the status of the current garbage collection notification that was registered by using the <xref:System.GC.RegisterForFullGCNotification%2A> method.</span></span> <span data-ttu-id="503bd-477">Можно также использовать <xref:System.GC.WaitForFullGCComplete%2A> метод, чтобы определить, завершена ли полная сборка мусора.</span><span class="sxs-lookup"><span data-stu-id="503bd-477">You can also use the <xref:System.GC.WaitForFullGCComplete%2A> method to determine whether the full garbage collection has completed.</span></span>  
  
 <span data-ttu-id="503bd-478">Обратите внимание, что этот метод возвращает немедленно каждый раз, когда извлечь состояние уведомления сбора мусора, независимо от значения, указанного в `millisecondsTimeout`.</span><span class="sxs-lookup"><span data-stu-id="503bd-478">Note that this method returns immediately whenever a garbage collection notification status is obtained, regardless of the value specified by `millisecondsTimeout`.</span></span> <span data-ttu-id="503bd-479">Если состояние уведомления сбора мусора не может быть получен до `millisecondsTimeout` время ожидания, этот метод возвращает <xref:System.GCNotificationStatus.NotApplicable>.</span><span class="sxs-lookup"><span data-stu-id="503bd-479">If a garbage collection notification status is not obtained before `millisecondsTimeout` times out, this method returns <xref:System.GCNotificationStatus.NotApplicable>.</span></span>  
  
 <span data-ttu-id="503bd-480">При перечислении возвращает <xref:System.GCNotificationStatus.Succeeded>, можно выполнять задачи, такие как дополнительные объекты, предотвращая выделяется и вызывая сборку самостоятельно с <xref:System.GC.Collect%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="503bd-480">When the enumeration returns <xref:System.GCNotificationStatus.Succeeded>, you can do tasks such as preventing additional objects from being allocated and inducing a collection yourself with the <xref:System.GC.Collect%2A> method.</span></span> <span data-ttu-id="503bd-481">Обратите внимание, что уведомление не гарантирует, что полная сборка мусора происходит, только то, что условия Достигнуто пороговое значение, подходящей для полная сборка мусора возникает.</span><span class="sxs-lookup"><span data-stu-id="503bd-481">Note that the notification does not guarantee that a full garbage collection will occur, only that conditions have reached the threshold that are favorable for a full garbage collection to occur.</span></span>  
  
 <span data-ttu-id="503bd-482">Можно вызвать <xref:System.GC.CancelFullGCNotification%2A> метод, если не может ожидать интервал времени ожидания, которое должно пройти.</span><span class="sxs-lookup"><span data-stu-id="503bd-482">You can call the <xref:System.GC.CancelFullGCNotification%2A> method when you cannot wait for the time-out period to elapse.</span></span>  
  
 <span data-ttu-id="503bd-483">С помощью вызова этого метода необходимо следовать <xref:System.GC.WaitForFullGCComplete%2A> метод, чтобы убедиться в том, что у вас уже есть полная сборка мусора.</span><span class="sxs-lookup"><span data-stu-id="503bd-483">You should follow this method with a call to the <xref:System.GC.WaitForFullGCComplete%2A> method to make sure that you have had a full garbage collection.</span></span> <span data-ttu-id="503bd-484">Вызов этого метода только дает неопределенные результаты.</span><span class="sxs-lookup"><span data-stu-id="503bd-484">Calling this method alone causes indeterminate results.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="503bd-485">Параметр <paramref name="millisecondsTimeout" /> должен быть неотрицательным или не больше <see cref="F:System.Int32.MaxValue" /> или -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503bd-485">
              <paramref name="millisecondsTimeout" /> must be either non-negative or less than or equal to <see cref="F:System.Int32.MaxValue" /> or -1.</span>
          </span>
        </exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">
          <span data-ttu-id="503bd-486">Для полного доверия для непосредственного вызывающего.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503bd-486">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="503bd-487">Этот член не может быть использован частично доверенным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503bd-487">This member cannot be used by partially trusted code.</span>
          </span>
        </permission>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="503bd-488">требуется полное доверие для непосредственно вызывающего метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503bd-488">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="503bd-489">Этот член не может использоваться частично доверенным или прозрачным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503bd-489">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="WaitForFullGCComplete">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="503bd-490">Возвращает состояние зарегистрированного уведомления, чтобы определить, завершена ли полная блокировка сборки мусора средой CLR.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503bd-490">Returns the status of a registered notification for determining whether a full, blocking garbage collection by the common language runtime has completed.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WaitForFullGCComplete">
      <MemberSignature Language="C#" Value="public static GCNotificationStatus WaitForFullGCComplete ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.GCNotificationStatus WaitForFullGCComplete() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.GC.WaitForFullGCComplete" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function WaitForFullGCComplete () As GCNotificationStatus" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static GCNotificationStatus WaitForFullGCComplete();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.GCNotificationStatus</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="503bd-491">Возвращает состояние зарегистрированного уведомления, чтобы определить, завершена ли полная блокировка сборки мусора средой CLR.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503bd-491">Returns the status of a registered notification for determining whether a full, blocking garbage collection by the common language runtime has completed.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="503bd-492">Состояние зарегистрированного уведомления о сборке мусора.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503bd-492">The status of the registered garbage collection notification.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="503bd-493">Используйте <xref:System.GCNotificationStatus> перечисления, возвращаемый этим методом, чтобы определить состояние текущего уведомления о сборке мусора, зарегистрированный с помощью <xref:System.GC.RegisterForFullGCNotification%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="503bd-493">Use the <xref:System.GCNotificationStatus> enumeration returned by this method to determine the status of the current garbage collection notification that was registered by using the <xref:System.GC.RegisterForFullGCNotification%2A> method.</span></span> <span data-ttu-id="503bd-494">Можно также использовать <xref:System.GC.WaitForFullGCApproach%2A> метод, чтобы определить, является ли неизбежной полная сборка мусора.</span><span class="sxs-lookup"><span data-stu-id="503bd-494">You can also use the <xref:System.GC.WaitForFullGCApproach%2A> method to determine whether a full garbage collection is imminent.</span></span>  
  
 <span data-ttu-id="503bd-495">При перечислении возвращает <xref:System.GCNotificationStatus.Succeeded>, можно выполнять задачи, такие как возобновление работы и получить число коллекций с <xref:System.GC.CollectionCount%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="503bd-495">When the enumeration returns <xref:System.GCNotificationStatus.Succeeded>, you can do tasks such as resuming work and obtaining a collection count with the <xref:System.GC.CollectionCount%2A> property.</span></span>  
  
 <span data-ttu-id="503bd-496">Этот метод бесконечно ожидает уведомления о сборке мусора может быть получена.</span><span class="sxs-lookup"><span data-stu-id="503bd-496">This method waits indefinitely for a garbage collection notification to be obtained.</span></span> <span data-ttu-id="503bd-497">Если вы хотите указать время ожидания для метода, возвращающего не удается получить уведомления, используйте <xref:System.GC.WaitForFullGCApproach%28System.Int32%29?displayProperty=nameWithType> перегрузки метода.</span><span class="sxs-lookup"><span data-stu-id="503bd-497">If you want to specify a time-out period for the method to return if the notification cannot be obtained, use the <xref:System.GC.WaitForFullGCApproach%28System.Int32%29?displayProperty=nameWithType> method overload.</span></span> <span data-ttu-id="503bd-498">Если этот метод вызывается без указания времени ожидания, можно вызвать <xref:System.GC.CancelFullGCNotification%2A> метод, если ожидается больше, чем основной.</span><span class="sxs-lookup"><span data-stu-id="503bd-498">If you call this method without specifying a time-out, you can call the <xref:System.GC.CancelFullGCNotification%2A> method if you are waiting longer than preferred.</span></span>  
  
 <span data-ttu-id="503bd-499">Вызов этого метода должен стоять вызов <xref:System.GC.WaitForFullGCApproach%2A> метод, чтобы убедиться в том, что у вас уже есть полная сборка мусора.</span><span class="sxs-lookup"><span data-stu-id="503bd-499">This method call should be preceded with a call to the <xref:System.GC.WaitForFullGCApproach%2A> method to make sure that you have had a full garbage collection.</span></span> <span data-ttu-id="503bd-500">Сам по себе вызов этого метода может привести к непредсказуемым результатам.</span><span class="sxs-lookup"><span data-stu-id="503bd-500">Calling this method alone can produce indeterminate results.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="503bd-501">В следующем примере показано, как использовать этот метод, чтобы определить, завершена ли полная сборка мусора.</span><span class="sxs-lookup"><span data-stu-id="503bd-501">The following example shows how to use this method to determine whether a full garbage collection has completed.</span></span> <span data-ttu-id="503bd-502">Каждый раз, когда находится в состоянии уведомление <xref:System.GCNotificationStatus.Succeeded>, пользовательский метод `OnFullGCCompletedNotify` вызывается для выполнения действий в ответ на выполненной сборки мусора.</span><span class="sxs-lookup"><span data-stu-id="503bd-502">Whenever the status of the notification is <xref:System.GCNotificationStatus.Succeeded>, the user method `OnFullGCCompletedNotify` is called to perform actions in response to the completed collection.</span></span> <span data-ttu-id="503bd-503">Данный пример кода является частью большего примера, приведенного для [сборке мусора](~/docs/standard/garbage-collection/notifications.md) раздела.</span><span class="sxs-lookup"><span data-stu-id="503bd-503">This code example is part of a larger example provided for [Garbage Collection Notifications](~/docs/standard/garbage-collection/notifications.md) topic.</span></span>  
  
 [!code-cpp[GCNotification#4](~/samples/snippets/cpp/VS_Snippets_CLR/GCNotification/cpp/program.cpp#4)]
 [!code-csharp[GCNotification#4](~/samples/snippets/csharp/VS_Snippets_CLR/GCNotification/cs/Program.cs#4)]
 [!code-vb[GCNotification#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/GCNotification/vb/program.vb#4)]  
  
 ]]></format>
        </remarks>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">
          <span data-ttu-id="503bd-504">Для полного доверия для непосредственного вызывающего.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503bd-504">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="503bd-505">Этот член не может быть использован частично доверенным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503bd-505">This member cannot be used by partially trusted code.</span>
          </span>
        </permission>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="503bd-506">требуется полное доверие для непосредственно вызывающего метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503bd-506">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="503bd-507">Этот член не может использоваться частично доверенным или прозрачным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503bd-507">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="WaitForFullGCComplete">
      <MemberSignature Language="C#" Value="public static GCNotificationStatus WaitForFullGCComplete (int millisecondsTimeout);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.GCNotificationStatus WaitForFullGCComplete(int32 millisecondsTimeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.GC.WaitForFullGCComplete(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function WaitForFullGCComplete (millisecondsTimeout As Integer) As GCNotificationStatus" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static GCNotificationStatus WaitForFullGCComplete(int millisecondsTimeout);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.GCNotificationStatus</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="millisecondsTimeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="millisecondsTimeout">
          <span data-ttu-id="503bd-508">Продолжительность времени ожидания, прежде чем можно извлечь состояние уведомления.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503bd-508">The length of time to wait before a notification status can be obtained.</span>
          </span>
          <span data-ttu-id="503bd-509">Укажите значение -1, если период ожидания неограниченный.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503bd-509">Specify -1 to wait indefinitely.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="503bd-510">Возвращает состояние зарегистрированного уведомления в пределах указанного времени ожидания, чтобы определить, завершена ли полная блокировка сборки мусора средой CLR.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503bd-510">Returns, in a specified time-out period, the status of a registered notification for determining whether a full, blocking garbage collection by common language the runtime has completed.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="503bd-511">Состояние зарегистрированного уведомления о сборке мусора.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503bd-511">The status of the registered garbage collection notification.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="503bd-512">Используйте <xref:System.GCNotificationStatus> перечисления, возвращаемый этим методом, чтобы определить состояние текущего уведомления о сборке мусора, зарегистрированный с помощью <xref:System.GC.RegisterForFullGCNotification%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="503bd-512">Use the <xref:System.GCNotificationStatus> enumeration returned by this method to determine the status of the current garbage collection notification that was registered by using the <xref:System.GC.RegisterForFullGCNotification%2A> method.</span></span> <span data-ttu-id="503bd-513">Можно также использовать <xref:System.GC.WaitForFullGCApproach%2A> метод, чтобы определить, является ли неизбежной полная сборка мусора.</span><span class="sxs-lookup"><span data-stu-id="503bd-513">You can also use the <xref:System.GC.WaitForFullGCApproach%2A> method to determine whether a full garbage collection is imminent.</span></span>  
  
 <span data-ttu-id="503bd-514">Обратите внимание, что этот метод возвращает немедленно каждый раз, когда извлечь состояние уведомления сбора мусора, независимо от значения, указанного в `millisecondsTimeout`.</span><span class="sxs-lookup"><span data-stu-id="503bd-514">Note that this method returns immediately whenever a garbage collection notification status is obtained, regardless of the value specified by `millisecondsTimeout`.</span></span> <span data-ttu-id="503bd-515">Если состояние уведомления сбора мусора не может быть получен до `millisecondsTimeout` время ожидания, этот метод возвращает <xref:System.GCNotificationStatus.NotApplicable>.</span><span class="sxs-lookup"><span data-stu-id="503bd-515">If a garbage collection notification status is not obtained before `millisecondsTimeout` times out, this method returns <xref:System.GCNotificationStatus.NotApplicable>.</span></span>  
  
 <span data-ttu-id="503bd-516">При перечислении возвращает <xref:System.GCNotificationStatus.Succeeded>, можно выполнять задачи, такие как возобновление работы и получить число коллекций с <xref:System.GC.CollectionCount%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="503bd-516">When the enumeration returns <xref:System.GCNotificationStatus.Succeeded>, you can do tasks such as resuming work and obtaining a collection count with the <xref:System.GC.CollectionCount%2A> property.</span></span>  
  
 <span data-ttu-id="503bd-517">Можно вызвать <xref:System.GC.CancelFullGCNotification%2A> метод, если не может ожидать интервал времени ожидания, которое должно пройти.</span><span class="sxs-lookup"><span data-stu-id="503bd-517">You can call the <xref:System.GC.CancelFullGCNotification%2A> method when you cannot wait for the time-out period to elapse.</span></span>  
  
 <span data-ttu-id="503bd-518">Вызов этого метода должен стоять вызов <xref:System.GC.WaitForFullGCApproach%2A> метод, чтобы убедиться в том, что у вас уже есть полная сборка мусора.</span><span class="sxs-lookup"><span data-stu-id="503bd-518">This method call should be preceded with a call to the <xref:System.GC.WaitForFullGCApproach%2A> method to make sure that you have had a full garbage collection.</span></span> <span data-ttu-id="503bd-519">Сам по себе вызов этого метода может привести к непредсказуемым результатам.</span><span class="sxs-lookup"><span data-stu-id="503bd-519">Calling this method alone can produce indeterminate results.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="503bd-520">Параметр <paramref name="millisecondsTimeout" /> должен быть неотрицательным или не больше <see cref="F:System.Int32.MaxValue" /> или -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503bd-520">
              <paramref name="millisecondsTimeout" /> must be either non-negative or less than or equal to <see cref="F:System.Int32.MaxValue" /> or -1.</span>
          </span>
        </exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">
          <span data-ttu-id="503bd-521">Для полного доверия для непосредственного вызывающего.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503bd-521">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="503bd-522">Этот член не может быть использован частично доверенным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503bd-522">This member cannot be used by partially trusted code.</span>
          </span>
        </permission>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="503bd-523">требуется полное доверие для непосредственно вызывающего метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503bd-523">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="503bd-524">Этот член не может использоваться частично доверенным или прозрачным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503bd-524">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="WaitForPendingFinalizers">
      <MemberSignature Language="C#" Value="public static void WaitForPendingFinalizers ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WaitForPendingFinalizers() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.GC.WaitForPendingFinalizers" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WaitForPendingFinalizers ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WaitForPendingFinalizers();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="503bd-525">Приостанавливает текущий поток до тех пор, пока поток, обрабатывающий очередь методов завершения, не обработает всю очередь.</span>
          <span class="sxs-lookup">
            <span data-stu-id="503bd-525">Suspends the current thread until the thread that is processing the queue of finalizers has emptied that queue.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="503bd-526">Когда сборщик мусора находит объекты, которые могут быть освобождены, он проверяет каждый объект, чтобы определить его требования к завершению.</span><span class="sxs-lookup"><span data-stu-id="503bd-526">When the garbage collector finds objects that can be reclaimed, it checks each object to determine the object's finalization requirements.</span></span> <span data-ttu-id="503bd-527">Если объект реализует метод завершения и завершения не отключен, вызвав <xref:System.GC.SuppressFinalize%2A>, то объект помещается в список объектов, которые помечены как готовые к завершению.</span><span class="sxs-lookup"><span data-stu-id="503bd-527">If an object implements a finalizer and has not disabled finalization by calling <xref:System.GC.SuppressFinalize%2A>, the object is placed in a list of objects that are marked as ready for finalization.</span></span> <span data-ttu-id="503bd-528">Сборщик мусора вызывает <xref:System.Object.Finalize%2A> методы для объектов в этом списке и удаляет элементы из списка.</span><span class="sxs-lookup"><span data-stu-id="503bd-528">The garbage collector calls the <xref:System.Object.Finalize%2A> methods for the objects in this list and removes the entries from the list.</span></span> <span data-ttu-id="503bd-529">Этот метод блокируется, пока все методы завершения выполнено до завершения.</span><span class="sxs-lookup"><span data-stu-id="503bd-529">This method blocks until all finalizers have run to completion.</span></span>  
  
 <span data-ttu-id="503bd-530">Поток, на котором выполняются методы завершения не определен, поэтому нет никакой гарантии, что этот метод будет завершена.</span><span class="sxs-lookup"><span data-stu-id="503bd-530">The thread on which finalizers are run is unspecified, so there is no guarantee that this method will terminate.</span></span> <span data-ttu-id="503bd-531">Тем не менее, этот поток может быть прерван другим потоком <xref:System.GC.WaitForPendingFinalizers%2A> метод идет.</span><span class="sxs-lookup"><span data-stu-id="503bd-531">However, this thread can be interrupted by another thread while the <xref:System.GC.WaitForPendingFinalizers%2A> method is in progress.</span></span> <span data-ttu-id="503bd-532">Например может запустить другой поток, который ожидает в течение заданного времени и прервет этот поток, если он все еще находится в приостановленном состоянии.</span><span class="sxs-lookup"><span data-stu-id="503bd-532">For example, you can start another thread that waits for a period of time and then interrupts this thread if this thread is still suspended.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="503bd-533">В следующем примере демонстрируется использование <xref:System.GC.WaitForPendingFinalizers%2A> методе для приостановки текущего потока до завершения всех объектов.</span><span class="sxs-lookup"><span data-stu-id="503bd-533">The following example demonstrates how to use the <xref:System.GC.WaitForPendingFinalizers%2A> method to suspend the current thread until finalization of all the collected objects is complete.</span></span>  
  
 [!code-cpp[System.GC.WaitForPendingFinalizers Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.GC.WaitForPendingFinalizers Example/CPP/class1.cpp#1)]
 [!code-csharp[System.GC.WaitForPendingFinalizers Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.GC.WaitForPendingFinalizers Example/CS/class1.cs#1)]
 [!code-vb[System.GC.WaitForPendingFinalizers Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.GC.WaitForPendingFinalizers Example/VB/class1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>