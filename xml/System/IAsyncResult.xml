<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="IAsyncResult.xml" source-language="en-US" target-language="ru-RU">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac52276b9f380f6f18b31bcbd48397cc4ae980b77ed.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2276b9f380f6f18b31bcbd48397cc4ae980b77ed</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.IAsyncResult">
          <source>Represents the status of an asynchronous operation.</source>
          <target state="translated">Представляет состояние асинхронной операции.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IAsyncResult">
          <source>The <ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph> interface is implemented by classes containing methods that can operate asynchronously.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph> Интерфейс реализуется классами, содержащий методы, которые могут выполняться асинхронно.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IAsyncResult">
          <source>It is the return type of methods that initiate an asynchronous operation, such as <ph id="ph1">&lt;xref:System.IO.FileStream.BeginRead%2A?displayProperty=nameWithType&gt;</ph>, and it is passed to methods that conclude an asynchronous operation, such as <ph id="ph2">&lt;xref:System.IO.FileStream.EndRead%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Это тип возвращаемого значения методов, которые запускают асинхронной операции, такие как <ph id="ph1">&lt;xref:System.IO.FileStream.BeginRead%2A?displayProperty=nameWithType&gt;</ph>, и оно передается в методы, которые завершения асинхронной операции, такие как <ph id="ph2">&lt;xref:System.IO.FileStream.EndRead%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IAsyncResult">
          <source><ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph> objects are also passed to methods invoked by <ph id="ph2">&lt;xref:System.AsyncCallback&gt;</ph> delegates when an asynchronous operation completes.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph> объекты также передаются в методы, вызываемые <ph id="ph2">&lt;xref:System.AsyncCallback&gt;</ph> делегируют при завершении асинхронной операции.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IAsyncResult">
          <source>An object that supports the <ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph> interface stores state information for an asynchronous operation and provides a synchronization object to allow threads to be signaled when the operation completes.</source>
          <target state="translated">Объект, который поддерживает <ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph> интерфейс хранятся сведения о состоянии для асинхронной операции и предоставляет объект синхронизации, чтобы разрешить сигнализирующий после завершения операции.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IAsyncResult">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.Remoting.Messaging.AsyncResult&gt;</ph> class is the implementation of <ph id="ph2">&lt;xref:System.IAsyncResult&gt;</ph> that is returned by the <ph id="ph3">`BeginInvoke`</ph> method when you use a delegate to call a method asynchronously.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.Remoting.Messaging.AsyncResult&gt;</ph> Класс — это реализация <ph id="ph2">&lt;xref:System.IAsyncResult&gt;</ph> , возвращаемый <ph id="ph3">`BeginInvoke`</ph> метод при использовании делегата для асинхронного вызова метода.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IAsyncResult">
          <source>For a detailed description of how the <ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph> interface is used, see the <bpt id="p1">[</bpt>Calling Synchronous Methods Asynchronously<ept id="p1">](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</ept> topic.</source>
          <target state="translated">Подробное описание того, как <ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph> используется интерфейс см. в разделе <bpt id="p1">[</bpt>асинхронный вызов синхронных методов<ept id="p1">](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</ept> раздела.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IAsyncResult">
          <source>The following example demonstrates how to use the <ph id="ph1">&lt;xref:System.Runtime.Remoting.Messaging.AsyncResult.AsyncWaitHandle%2A&gt;</ph> property to get a <ph id="ph2">&lt;xref:System.Threading.WaitHandle&gt;</ph>, and how to wait for an asynchronous call on a delegate.</source>
          <target state="translated">В следующем примере демонстрируется использование <ph id="ph1">&lt;xref:System.Runtime.Remoting.Messaging.AsyncResult.AsyncWaitHandle%2A&gt;</ph> свойства <ph id="ph2">&lt;xref:System.Threading.WaitHandle&gt;</ph>и Ожидание асинхронного вызова для делегата.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IAsyncResult">
          <source>The <ph id="ph1">&lt;xref:System.Threading.WaitHandle&gt;</ph> is signaled when the asynchronous call completes, and you can wait for it by calling the <ph id="ph2">&lt;xref:System.Threading.WaitHandle.WaitOne%2A&gt;</ph> method.</source>
          <target state="translated">Объект <ph id="ph1">&lt;xref:System.Threading.WaitHandle&gt;</ph> получает сигнал после завершения асинхронного вызова; его можно дождаться путем вызова метода <ph id="ph2">&lt;xref:System.Threading.WaitHandle.WaitOne%2A&gt;</ph> .</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IAsyncResult">
          <source>The example consists of two classes: the class that contains the method that is called asynchronously, and the class that contains the <ph id="ph1">`Main`</ph> method that makes the call.</source>
          <target state="translated">Пример состоит из двух классов: класса, содержащего метод, который вызывается асинхронно и класса, содержащего <ph id="ph1">`Main`</ph> метод, который выполняет вызов.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IAsyncResult">
          <source>For more information and more examples of calling methods asynchronously by using delegates, see <bpt id="p1">[</bpt>Calling Synchronous Methods Asynchronously<ept id="p1">](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</ept>.</source>
          <target state="translated">Дополнительные сведения и примеры асинхронного вызова методов с помощью делегатов см. в разделе <bpt id="p1">[</bpt>асинхронный вызов синхронных методов<ept id="p1">](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</ept>.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="P:System.IAsyncResult.AsyncState">
          <source>Gets a user-defined object that qualifies or contains information about an asynchronous operation.</source>
          <target state="translated">Получает определенный пользователем объект, который определяет или содержит сведения об асинхронной операции.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IAsyncResult.AsyncState">
          <source>A user-defined object that qualifies or contains information about an asynchronous operation.</source>
          <target state="translated">Определенный пользователем объект, который определяет или содержит сведения об асинхронной операции.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IAsyncResult.AsyncState">
          <source>This property returns the object that is the last parameter of the method that initiates an asynchronous operation.</source>
          <target state="translated">Это свойство возвращает объект, который является последним параметром метода, который инициирует асинхронную операцию.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IAsyncResult.AsyncState">
          <source>The following code example demonstrates how the <ph id="ph1">&lt;xref:System.Runtime.Remoting.Messaging.AsyncResult.AsyncState%2A&gt;</ph> property is used to pass information to a callback method.</source>
          <target state="translated">В следующем примере кода показано, как <ph id="ph1">&lt;xref:System.Runtime.Remoting.Messaging.AsyncResult.AsyncState%2A&gt;</ph> свойство используется для передачи сведений в метод обратного вызова.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IAsyncResult.AsyncState">
          <source>The last parameter of the <ph id="ph1">`BeginInvoke`</ph> method call is a format string, which the callback method uses to format an output message.</source>
          <target state="translated">Последний параметр <ph id="ph1">`BeginInvoke`</ph> вызов метода — это строка форматирования, используемую методом обратного вызова для форматирования выходного сообщения.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IAsyncResult.AsyncState">
          <source>The example consists of two classes: the class that contains the method that is called asynchronously, and the class that contains the <ph id="ph1">`Main`</ph> method that makes the call.</source>
          <target state="translated">Пример состоит из двух классов: класса, содержащего метод, который вызывается асинхронно и класса, содержащего <ph id="ph1">`Main`</ph> метод, который выполняет вызов.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IAsyncResult.AsyncState">
          <source>For more information about how this callback example works, and more examples of calling methods asynchronously by using delegates, see <bpt id="p1">[</bpt>Calling Synchronous Methods Asynchronously<ept id="p1">](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</ept>.</source>
          <target state="translated">Дополнительные сведения о работе в этом примере обратного вызова и Дополнительные примеры асинхронного вызова методов с помощью делегатов см. в разделе <bpt id="p1">[</bpt>асинхронный вызов синхронных методов<ept id="p1">](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</ept>.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IAsyncResult.AsyncState">
          <source>Implement this property to allow the caller of an asynchronous operation to obtain an application-defined object specified at the start of the operation.</source>
          <target state="translated">Реализуйте это свойство позволяет вызывающему оператору асинхронной операции получить определенный приложением объект, указанный в начале операции.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IAsyncResult.AsyncState">
          <source>This object can be used to pass state information for the asynchronous operation to an <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> that you provide.</source>
          <target state="translated">Этот объект используется для передачи сведений о состоянии для асинхронной операции <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> указываемое.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="P:System.IAsyncResult.AsyncWaitHandle">
          <source>Gets a <ph id="ph1">&lt;see cref="T:System.Threading.WaitHandle" /&gt;</ph> that is used to wait for an asynchronous operation to complete.</source>
          <target state="translated">Возвращает дескриптор <ph id="ph1">&lt;see cref="T:System.Threading.WaitHandle" /&gt;</ph>, используемый для ожидания завершения асинхронной операции.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IAsyncResult.AsyncWaitHandle">
          <source>A <ph id="ph1">&lt;see cref="T:System.Threading.WaitHandle" /&gt;</ph> that is used to wait for an asynchronous operation to complete.</source>
          <target state="translated">Дескриптор <ph id="ph1">&lt;see cref="T:System.Threading.WaitHandle" /&gt;</ph>, используемый для ожидания завершения асинхронной операции.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IAsyncResult.AsyncWaitHandle">
          <source>The return value allows the client to wait for an asynchronous operation to complete instead of polling <ph id="ph1">&lt;xref:System.IAsyncResult.IsCompleted%2A&gt;</ph> until the operation concludes.</source>
          <target state="translated">Возвращаемое значение позволяет клиенту ожидать завершения вместо опроса асинхронной операции <ph id="ph1">&lt;xref:System.IAsyncResult.IsCompleted%2A&gt;</ph> до завершает операцию.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IAsyncResult.AsyncWaitHandle">
          <source>The return value can be used to perform a <ph id="ph1">&lt;xref:System.Threading.WaitHandle.WaitOne%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Threading.WaitHandle.WaitAny%2A&gt;</ph>, or <ph id="ph3">&lt;xref:System.Threading.WaitHandle.WaitAll%2A&gt;</ph> operation.</source>
          <target state="translated">Возвращаемое значение может использоваться для выполнения <ph id="ph1">&lt;xref:System.Threading.WaitHandle.WaitOne%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Threading.WaitHandle.WaitAny%2A&gt;</ph>, или <ph id="ph3">&lt;xref:System.Threading.WaitHandle.WaitAll%2A&gt;</ph> операции.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IAsyncResult.AsyncWaitHandle">
          <source>The common language runtime supplies a number of waitable objects, such as <ph id="ph1">&lt;xref:System.Threading.ManualResetEvent&gt;</ph>, <ph id="ph2">&lt;xref:System.Threading.AutoResetEvent&gt;</ph>, and <ph id="ph3">&lt;xref:System.Threading.Mutex&gt;</ph>, all of which mirror Win32 synchronization primitives.</source>
          <target state="translated">Общеязыковая среда выполнения предоставляет несколько объектов ожидания, таких как <ph id="ph1">&lt;xref:System.Threading.ManualResetEvent&gt;</ph>, <ph id="ph2">&lt;xref:System.Threading.AutoResetEvent&gt;</ph>, и <ph id="ph3">&lt;xref:System.Threading.Mutex&gt;</ph>, которые отображают примитивы синхронизации Win32.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IAsyncResult.AsyncWaitHandle">
          <source>The following example demonstrates how to use the <ph id="ph1">&lt;xref:System.IAsyncResult.AsyncWaitHandle%2A&gt;</ph> property to get a <ph id="ph2">&lt;xref:System.Threading.WaitHandle&gt;</ph>, and how to wait for an asynchronous call on a delegate.</source>
          <target state="translated">В следующем примере демонстрируется использование <ph id="ph1">&lt;xref:System.IAsyncResult.AsyncWaitHandle%2A&gt;</ph> свойства <ph id="ph2">&lt;xref:System.Threading.WaitHandle&gt;</ph>и Ожидание асинхронного вызова для делегата.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IAsyncResult.AsyncWaitHandle">
          <source>The <ph id="ph1">&lt;xref:System.Threading.WaitHandle&gt;</ph> is signaled when the asynchronous call completes, and you can wait for it by calling the <ph id="ph2">&lt;xref:System.Threading.WaitHandle.WaitOne%2A&gt;</ph> method.</source>
          <target state="translated">Объект <ph id="ph1">&lt;xref:System.Threading.WaitHandle&gt;</ph> получает сигнал после завершения асинхронного вызова; его можно дождаться путем вызова метода <ph id="ph2">&lt;xref:System.Threading.WaitHandle.WaitOne%2A&gt;</ph> .</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IAsyncResult.AsyncWaitHandle">
          <source>The example consists of two classes: the class that contains the method that is called asynchronously, and the class that contains the <ph id="ph1">`Main`</ph> method that makes the call.</source>
          <target state="translated">Пример состоит из двух классов: класса, содержащего метод, который вызывается асинхронно и класса, содержащего <ph id="ph1">`Main`</ph> метод, который выполняет вызов.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IAsyncResult.AsyncWaitHandle">
          <source>For more information and more examples of calling methods asynchronously by using delegates, see <bpt id="p1">[</bpt>Calling Synchronous Methods Asynchronously<ept id="p1">](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</ept>.</source>
          <target state="translated">Дополнительные сведения и примеры асинхронного вызова методов с помощью делегатов см. в разделе <bpt id="p1">[</bpt>асинхронный вызов синхронных методов<ept id="p1">](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</ept>.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IAsyncResult.AsyncWaitHandle">
          <source>The object that implements <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> does not need to create the <ph id="ph2">&lt;see cref="T:System.Threading.WaitHandle" /&gt;</ph> until the <ph id="ph3">&lt;see cref="P:System.IAsyncResult.AsyncWaitHandle" /&gt;</ph> property is read.</source>
          <target state="translated">Объект, реализующий <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> не нужно создавать <ph id="ph2">&lt;see cref="T:System.Threading.WaitHandle" /&gt;</ph> до <ph id="ph3">&lt;see cref="P:System.IAsyncResult.AsyncWaitHandle" /&gt;</ph> свойство доступно для чтения.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IAsyncResult.AsyncWaitHandle">
          <source>It is the choice of the <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> implementer.</source>
          <target state="translated">Он зависит от выбора <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> исполнитель.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IAsyncResult.AsyncWaitHandle">
          <source>However, if the implementer creates <ph id="ph1">&lt;see cref="P:System.IAsyncResult.AsyncWaitHandle" /&gt;</ph>, it is the responsibility of the implementer to signal the <ph id="ph2">&lt;see cref="T:System.Threading.WaitHandle" /&gt;</ph> that will terminate the wait at the appropriate time.</source>
          <target state="translated">Тем не менее если разработчик создает <ph id="ph1">&lt;see cref="P:System.IAsyncResult.AsyncWaitHandle" /&gt;</ph>, возлагается на разработчика указывают <ph id="ph2">&lt;see cref="T:System.Threading.WaitHandle" /&gt;</ph> , завершит режим ожидания в нужное время.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IAsyncResult.AsyncWaitHandle">
          <source>For example, <ph id="ph1">&lt;see cref="T:System.Runtime.Remoting.Messaging.AsyncResult" /&gt;</ph> terminates the wait on behalf of the caller when an asynchronously invoked method returns.</source>
          <target state="translated">Например <ph id="ph1">&lt;see cref="T:System.Runtime.Remoting.Messaging.AsyncResult" /&gt;</ph> прекращает Ожидание от имени вызывающего объекта, при возвращении асинхронно вызванный метод.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IAsyncResult.AsyncWaitHandle">
          <source>Once created, <ph id="ph1">&lt;see cref="P:System.IAsyncResult.AsyncWaitHandle" /&gt;</ph> should be kept alive until the user calls the method that concludes the asynchronous operation.</source>
          <target state="translated">После создания <ph id="ph1">&lt;see cref="P:System.IAsyncResult.AsyncWaitHandle" /&gt;</ph> должен поддерживаться пока пользователь не вызовет метод, завершающий асинхронную операцию.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IAsyncResult.AsyncWaitHandle">
          <source>At that time the object behind <ph id="ph1">&lt;see cref="P:System.IAsyncResult.AsyncWaitHandle" /&gt;</ph> can be discarded.</source>
          <target state="translated">В это время объект позади <ph id="ph1">&lt;see cref="P:System.IAsyncResult.AsyncWaitHandle" /&gt;</ph> может быть удален.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IAsyncResult.AsyncWaitHandle">
          <source>Clients that wait for the operation to complete (as opposed to polling) use this property to obtain a synchronization object to wait on.</source>
          <target state="translated">Это свойство используется клиентами, которые ожидать завершения (в отличие от опроса) операции для получения ожидаемого объекта синхронизации.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IAsyncResult.AsyncWaitHandle">
          <source>When you use the <ph id="ph1">&lt;see langword="BeginInvoke" /&gt;</ph> method of a delegate to call a method asynchronously and obtain a wait handle from the resulting <ph id="ph2">&lt;see cref="T:System.IAsyncResult" /&gt;</ph>, we recommend that you close the wait handle as soon as you are finished using it, by calling the <ph id="ph3">&lt;see cref="M:System.Threading.WaitHandle.Close" /&gt;</ph> method.</source>
          <target state="translated">При использовании <ph id="ph1">&lt;see langword="BeginInvoke" /&gt;</ph> метод делегата для асинхронного вызова метода и получения дескриптора ожидания из полученных <ph id="ph2">&lt;see cref="T:System.IAsyncResult" /&gt;</ph>, рекомендуется закрывать дескриптор ожидания, сразу после завершения работы, путем вызова <ph id="ph3">&lt;see cref="M:System.Threading.WaitHandle.Close" /&gt;</ph> метод.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IAsyncResult.AsyncWaitHandle">
          <source>If you simply release all references to the wait handle, system resources are freed when garbage collection reclaims the wait handle, but garbage collection works more efficiently when disposable objects are explicitly closed or disposed.</source>
          <target state="translated">Если вы просто удалить все ссылки на дескриптор ожидания, системные ресурсы будут освобождены при удалении дескриптора ожидания сборщиком мусора, но сборка мусора работает более эффективно высвобождаемые объекты явно закрыт или удален.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IAsyncResult.AsyncWaitHandle">
          <source>For more information, see the <ph id="ph1">&lt;see cref="P:System.Runtime.Remoting.Messaging.AsyncResult.AsyncWaitHandle" /&gt;</ph> property.</source>
          <target state="translated">Дополнительные сведения см. в описании свойства <ph id="ph1">&lt;see cref="P:System.Runtime.Remoting.Messaging.AsyncResult.AsyncWaitHandle" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="P:System.IAsyncResult.CompletedSynchronously">
          <source>Gets a value that indicates whether the asynchronous operation completed synchronously.</source>
          <target state="translated">Возвращает значение, указывающее, выполнялась ли асинхронная операция синхронно.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IAsyncResult.CompletedSynchronously">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the asynchronous operation completed synchronously; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Значение <ph id="ph1">&lt;see langword="true" /&gt;</ph>, если асинхронная операция выполнена синхронно, в противном случае — значение <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IAsyncResult.CompletedSynchronously">
          <source>If the synchronous completion of the call is detected in the <ph id="ph1">&lt;xref:System.AsyncCallback&gt;</ph> delegate, it is probable that the thread that initiated the asynchronous operation is the current thread.</source>
          <target state="translated">Если обнаружено синхронное завершение вызова в <ph id="ph1">&lt;xref:System.AsyncCallback&gt;</ph> делегата, вполне вероятно, что поток, который запустил асинхронную операцию является текущим потоком.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IAsyncResult.CompletedSynchronously">
          <source>Most implementers of the <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> interface will not use this property and should return <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Большинство разработчиков <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> интерфейса, это свойство не используется и должен возвращать <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IAsyncResult.CompletedSynchronously">
          <source>Beginning with the <ph id="ph1">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>, a task that is created with the <ph id="ph2">&lt;see cref="M:System.Threading.Tasks.TaskFactory.FromAsync(System.IAsyncResult,System.Action{System.IAsyncResult},System.Threading.Tasks.TaskCreationOptions)" /&gt;</ph> method will not complete if this property is not implemented correctly.</source>
          <target state="translated">Начиная с версии <ph id="ph1">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>, задачу, которая создается с <ph id="ph2">&lt;see cref="M:System.Threading.Tasks.TaskFactory.FromAsync(System.IAsyncResult,System.Action{System.IAsyncResult},System.Threading.Tasks.TaskCreationOptions)" /&gt;</ph> метод не завершается, если это свойство не будет правильно реализован.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IAsyncResult.CompletedSynchronously">
          <source>See <bpt id="p1">[</bpt>Application Compatibility in 4.5<ept id="p1">](~/docs/framework/migration-guide/application-compatibility-in-the-net-framework-4-5.md)</ept>.</source>
          <target state="translated">В разделе <bpt id="p1">[</bpt>совместимость приложений в 4.5<ept id="p1">](~/docs/framework/migration-guide/application-compatibility-in-the-net-framework-4-5.md)</ept>.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IAsyncResult.CompletedSynchronously">
          <source>Use this property to determine if the asynchronous operation completed synchronously.</source>
          <target state="translated">Это свойство позволяет определить, если асинхронная операция синхронно.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IAsyncResult.CompletedSynchronously">
          <source>For example, this property can return <ph id="ph1">&lt;see langword="true" /&gt;</ph> for an asynchronous I/O operation if the I/O request was small.</source>
          <target state="translated">Например, это свойство может вернуть <ph id="ph1">&lt;see langword="true" /&gt;</ph> для асинхронной операции ввода-вывода, если запрос ввода-вывода был небольшим.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="P:System.IAsyncResult.IsCompleted">
          <source>Gets a value that indicates whether the asynchronous operation has completed.</source>
          <target state="translated">Возвращает значение, указывающее, выполнена ли асинхронная операция.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IAsyncResult.IsCompleted">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the operation is complete; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Значение <ph id="ph1">&lt;see langword="true" /&gt;</ph>, если операция завершена; в противном случае — значение <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IAsyncResult.IsCompleted">
          <source>When this property is <ph id="ph1">`true`</ph>, you can assume it is safe to discard any resources you allocate for use by the asynchronous operation.</source>
          <target state="translated">Если этому свойству присвоено <ph id="ph1">`true`</ph>, можно предположить, безопасно удаление ресурсов, выделенных для асинхронной операции.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IAsyncResult.IsCompleted">
          <source>The following example shows how to use the <ph id="ph1">&lt;xref:System.IAsyncResult.IsCompleted%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.IAsyncResult&gt;</ph> to discover when an asynchronous call completes.</source>
          <target state="translated">В следующем примере показано, как использовать <ph id="ph1">&lt;xref:System.IAsyncResult.IsCompleted%2A&gt;</ph> свойство <ph id="ph2">&lt;xref:System.IAsyncResult&gt;</ph> для обнаружения после завершения асинхронного вызова.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IAsyncResult.IsCompleted">
          <source>In this case, the asynchronous call is made by using the <ph id="ph1">`BeginInvoke`</ph> method of a delegate.</source>
          <target state="translated">В этом случае асинхронный вызов выполняется с помощью <ph id="ph1">`BeginInvoke`</ph> метод делегата.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IAsyncResult.IsCompleted">
          <source>You might use the <ph id="ph1">&lt;xref:System.IAsyncResult.IsCompleted%2A&gt;</ph> property to poll for completion when making the asynchronous call from a thread that services the user interface.</source>
          <target state="translated">Можно использовать <ph id="ph1">&lt;xref:System.IAsyncResult.IsCompleted%2A&gt;</ph> свойство опроса для выполнения при выполнении асинхронного вызова из потока, обслуживающего пользовательский интерфейс.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IAsyncResult.IsCompleted">
          <source>Polling for completion allows the calling thread to continue executing while the asynchronous call executes on a <ph id="ph1">&lt;xref:System.Threading.ThreadPool&gt;</ph> thread.</source>
          <target state="translated">Опрос завершения позволяет вызывающему потоку продолжить выполнение при асинхронном вызове для потока <ph id="ph1">&lt;xref:System.Threading.ThreadPool&gt;</ph> .</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IAsyncResult.IsCompleted">
          <source>The example consists of two classes: the class that contains the method that is called asynchronously, and the class that contains the <ph id="ph1">`Main`</ph> method that makes the call.</source>
          <target state="translated">Пример состоит из двух классов: класса, содержащего метод, который вызывается асинхронно и класса, содержащего <ph id="ph1">`Main`</ph> метод, который выполняет вызов.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IAsyncResult.IsCompleted">
          <source>For more information and more examples of calling methods asynchronously by using delegates, see <bpt id="p1">[</bpt>Calling Synchronous Methods Asynchronously<ept id="p1">](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</ept>.</source>
          <target state="translated">Дополнительные сведения и примеры асинхронного вызова методов с помощью делегатов см. в разделе <bpt id="p1">[</bpt>асинхронный вызов синхронных методов<ept id="p1">](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</ept>.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IAsyncResult.IsCompleted">
          <source>Implementers will typically return the value of a private field or internal test as the value of this property.</source>
          <target state="translated">Разработчики обычно возвращают значение закрытого поля или внутренней проверки в качестве значения этого свойства.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IAsyncResult.IsCompleted">
          <source>Clients that poll for operation status (as opposed to waiting on a synchronization object) use this property to determine the status of the operation.</source>
          <target state="translated">Клиенты, использующие опрос по состоянию (вместо ожидания объекта синхронизации) это свойство позволяет определить состояние операции.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>