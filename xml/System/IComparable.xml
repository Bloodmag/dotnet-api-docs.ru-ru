<Type Name="IComparable" FullName="System.IComparable">
  <Metadata><Meta Name="ms.openlocfilehash" Value="de45437685e7e2891c7f6e699cd8812bc393beca" /><Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="10/04/2018" /><Meta Name="ms.locfileid" Value="48589861" /></Metadata><TypeSignature Language="C#" Value="public interface IComparable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IComparable" />
  <TypeSignature Language="DocId" Value="T:System.IComparable" />
  <TypeSignature Language="VB.NET" Value="Public Interface IComparable" />
  <TypeSignature Language="C++ CLI" Value="public interface class IComparable" />
  <TypeSignature Language="F#" Value="type IComparable = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="3a978-101">Определяет обобщенный метод сравнения, который реализуется типом значения или классом для упорядочения или сортировки экземпляров.</span><span class="sxs-lookup"><span data-stu-id="3a978-101">Defines a generalized type-specific comparison method that a value type or class implements to order or sort its instances.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a978-102">Этот интерфейс реализуется типами, значения которых можно упорядочить или сортировки.</span><span class="sxs-lookup"><span data-stu-id="3a978-102">This interface is implemented by types whose values can be ordered or sorted.</span></span> <span data-ttu-id="3a978-103">Он требует, что реализации типы определяют единственный метод, <xref:System.IComparable.CompareTo%28System.Object%29>, которое указывает, является ли положение текущего экземпляра в порядке сортировки перед, после или таким же, как второй объект того же типа.</span><span class="sxs-lookup"><span data-stu-id="3a978-103">It requires that implementing types define a single method, <xref:System.IComparable.CompareTo%28System.Object%29>, that indicates whether the position of the current instance in the sort order is before, after, or the same as a second object of the same type.</span></span> <span data-ttu-id="3a978-104">Экземпляр <xref:System.IComparable> реализации вызывается автоматически методами, такими как <xref:System.Array.Sort%2A?displayProperty=nameWithType> и <xref:System.Collections.ArrayList.Sort%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="3a978-104">The instance's <xref:System.IComparable> implementation is called automatically by methods such as <xref:System.Array.Sort%2A?displayProperty=nameWithType> and <xref:System.Collections.ArrayList.Sort%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="3a978-105">Реализация <xref:System.IComparable.CompareTo%28System.Object%29> метод должен возвращать <xref:System.Int32> , имеет одно из трех значений, как показано в следующей таблице.</span><span class="sxs-lookup"><span data-stu-id="3a978-105">The implementation of the <xref:System.IComparable.CompareTo%28System.Object%29> method must return an <xref:System.Int32> that has one of three values, as shown in the following table.</span></span>  
  
|<span data-ttu-id="3a978-106">Значение</span><span class="sxs-lookup"><span data-stu-id="3a978-106">Value</span></span>|<span data-ttu-id="3a978-107">Значение</span><span class="sxs-lookup"><span data-stu-id="3a978-107">Meaning</span></span>|  
|-----------|-------------|  
|<span data-ttu-id="3a978-108">Меньше нуля</span><span class="sxs-lookup"><span data-stu-id="3a978-108">Less than zero</span></span>|<span data-ttu-id="3a978-109">Текущий экземпляр предшествует объекта, заданного параметром <xref:System.IComparable.CompareTo%2A> метод в порядке сортировки.</span><span class="sxs-lookup"><span data-stu-id="3a978-109">The current instance precedes the object specified by the <xref:System.IComparable.CompareTo%2A> method in the sort order.</span></span>|  
|<span data-ttu-id="3a978-110">Нуль</span><span class="sxs-lookup"><span data-stu-id="3a978-110">Zero</span></span>|<span data-ttu-id="3a978-111">Этого текущего экземпляра происходит в той же позиции в порядке сортировки, что объекту, заданному параметром <xref:System.IComparable.CompareTo%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="3a978-111">This current instance occurs in the same position in the sort order as the object specified by the <xref:System.IComparable.CompareTo%2A> method.</span></span>|  
|<span data-ttu-id="3a978-112">Больше нуля</span><span class="sxs-lookup"><span data-stu-id="3a978-112">Greater than zero</span></span>|<span data-ttu-id="3a978-113">Это текущий экземпляр стоит после объекта, заданного параметром <xref:System.IComparable.CompareTo%2A> метод в порядке сортировки.</span><span class="sxs-lookup"><span data-stu-id="3a978-113">This current instance follows the object specified by the <xref:System.IComparable.CompareTo%2A> method in the sort order.</span></span>|  
  
 <span data-ttu-id="3a978-114">Все числовые типы (такие как <xref:System.Int32> и <xref:System.Double>) реализовать <xref:System.IComparable>, как и <xref:System.String>, <xref:System.Char>, и <xref:System.DateTime>.</span><span class="sxs-lookup"><span data-stu-id="3a978-114">All numeric types (such as <xref:System.Int32> and <xref:System.Double>) implement <xref:System.IComparable>, as do <xref:System.String>, <xref:System.Char>, and <xref:System.DateTime>.</span></span> <span data-ttu-id="3a978-115">Пользовательские типы также должны предоставлять свою собственную реализацию <xref:System.IComparable> позволяющим упорядочить или сортировать экземпляры объекта.</span><span class="sxs-lookup"><span data-stu-id="3a978-115">Custom types should also provide their own implementation of <xref:System.IComparable> to enable object instances to be ordered or sorted.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3a978-116">В следующем примере демонстрируется реализация <xref:System.IComparable> и необходимый <xref:System.IComparable.CompareTo%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="3a978-116">The following example illustrates the implementation of <xref:System.IComparable> and the requisite <xref:System.IComparable.CompareTo%2A> method.</span></span>  
  
 [!code-cpp[IComparable Example#1](~/samples/snippets/cpp/VS_Snippets_CLR/IComparable Example/CPP/source.cpp#1)]
 [!code-csharp[IComparable Example#1](~/samples/snippets/csharp/VS_Snippets_CLR/IComparable Example/CS/source.cs#1)]
 [!code-vb[IComparable Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IComparable Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IComparable.CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (obj As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int CompareTo(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="abstract member CompareTo : obj -&gt; int" Usage="iComparable.CompareTo obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="3a978-117">Объект для сравнения с данным экземпляром.</span><span class="sxs-lookup"><span data-stu-id="3a978-117">An object to compare with this instance.</span></span></param>
        <summary><span data-ttu-id="3a978-118">Сравнивает текущий экземпляр с другим объектом того же типа и возвращает целое число, которое показывает, расположен ли текущий экземпляр перед, после или на той же позиции в порядке сортировки, что и другой объект.</span><span class="sxs-lookup"><span data-stu-id="3a978-118">Compares the current instance with another object of the same type and returns an integer that indicates whether the current instance precedes, follows, or occurs in the same position in the sort order as the other object.</span></span></summary>
        <returns><span data-ttu-id="3a978-119">Значение, указывающее, каков относительный порядок сравниваемых объектов.</span><span class="sxs-lookup"><span data-stu-id="3a978-119">A value that indicates the relative order of the objects being compared.</span></span> <span data-ttu-id="3a978-120">Возвращаемые значения представляют следующие результаты сравнения.</span><span class="sxs-lookup"><span data-stu-id="3a978-120">The return value has these meanings:</span></span> 
 <list type="table"><listheader><term> <span data-ttu-id="3a978-121">Значение</span><span class="sxs-lookup"><span data-stu-id="3a978-121">Value</span></span> 
 </term><description> <span data-ttu-id="3a978-122">Значение</span><span class="sxs-lookup"><span data-stu-id="3a978-122">Meaning</span></span> 
 </description></listheader><item><term> <span data-ttu-id="3a978-123">Меньше нуля</span><span class="sxs-lookup"><span data-stu-id="3a978-123">Less than zero</span></span> 
 </term><description> <span data-ttu-id="3a978-124">Данный экземпляр предшествует параметру <paramref name="obj" /> в порядке сортировки.</span><span class="sxs-lookup"><span data-stu-id="3a978-124">This instance precedes <paramref name="obj" /> in the sort order.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="3a978-125">Нуль</span><span class="sxs-lookup"><span data-stu-id="3a978-125">Zero</span></span> 
 </term><description> <span data-ttu-id="3a978-126">Данный экземпляр занимает ту же позицию в порядке сортировки, что и параметр <paramref name="obj" />.</span><span class="sxs-lookup"><span data-stu-id="3a978-126">This instance occurs in the same position in the sort order as <paramref name="obj" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="3a978-127">Больше нуля</span><span class="sxs-lookup"><span data-stu-id="3a978-127">Greater than zero</span></span> 
 </term><description> <span data-ttu-id="3a978-128">Данный экземпляр следует за параметром <paramref name="obj" /> в порядке сортировки.</span><span class="sxs-lookup"><span data-stu-id="3a978-128">This instance follows <paramref name="obj" /> in the sort order.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a978-129"><xref:System.IComparable.CompareTo%2A> Метод реализуется типами, значения которых можно упорядочить или сортировки.</span><span class="sxs-lookup"><span data-stu-id="3a978-129">The <xref:System.IComparable.CompareTo%2A> method is implemented by types whose values can be ordered or sorted.</span></span> <span data-ttu-id="3a978-130">Он вызывается автоматически с помощью методов класса неуниверсальную коллекцию объектов, таких как <xref:System.Array.Sort%2A?displayProperty=nameWithType>, чтобы упорядочить каждый элемент массива.</span><span class="sxs-lookup"><span data-stu-id="3a978-130">It is called automatically by methods of non-generic collection objects, such as <xref:System.Array.Sort%2A?displayProperty=nameWithType>, to order each member of the array.</span></span> <span data-ttu-id="3a978-131">Если пользовательский класс или структура не реализует <xref:System.IComparable>, его члены не может быть упорядочен, и операция сортировки может создать исключение <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="3a978-131">If a custom class or structure does not implement <xref:System.IComparable>, its members cannot be ordered and the sort operation can throw an <xref:System.InvalidOperationException>.</span></span>  
  
 <span data-ttu-id="3a978-132">Этот метод является только определением и должен быть реализован для определенного типа класса или значение повлиять.</span><span class="sxs-lookup"><span data-stu-id="3a978-132">This method is only a definition and must be implemented by a specific class or value type to have effect.</span></span> <span data-ttu-id="3a978-133">Значение сравнения, указанный в разделе («предшествует», «происходит в той же позиции, что» и «соответствует») зависит от конкретной реализации возвращаемое значение.</span><span class="sxs-lookup"><span data-stu-id="3a978-133">The meaning of the comparisons specified in the Return Value section ("precedes", "occurs in the same position as", and "follows") depends on the particular implementation.</span></span>  
  
 <span data-ttu-id="3a978-134">По определению, любой объект сравнивает больше (или ниже) `null`, и два указателя null равны друг с другом.</span><span class="sxs-lookup"><span data-stu-id="3a978-134">By definition, any object compares greater than (or follows) `null`, and two null references compare equal to each other.</span></span>  
  
 <span data-ttu-id="3a978-135">Параметр, `obj`, должен иметь тот же тип как класс или тип, реализующий этот интерфейс; значения в противном случае <xref:System.ArgumentException> возникает исключение.</span><span class="sxs-lookup"><span data-stu-id="3a978-135">The parameter, `obj`, must be the same type as the class or value type that implements this interface; otherwise, an <xref:System.ArgumentException> is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3a978-136">Следующий пример иллюстрирует использование <xref:System.IComparable.CompareTo%2A> для сравнения `Temperature` объект, реализующий <xref:System.IComparable> с другим объектом.</span><span class="sxs-lookup"><span data-stu-id="3a978-136">The following example illustrates the use of <xref:System.IComparable.CompareTo%2A> to compare a `Temperature` object implementing <xref:System.IComparable> with another object.</span></span> <span data-ttu-id="3a978-137">`Temperature` Реализован <xref:System.IComparable.CompareTo%2A> просто поместить вызов <xref:System.Int32.CompareTo%2A?displayProperty=nameWithType> метод.</span><span class="sxs-lookup"><span data-stu-id="3a978-137">The `Temperature` object implements <xref:System.IComparable.CompareTo%2A> by simply wrapping a call to the <xref:System.Int32.CompareTo%2A?displayProperty=nameWithType> method.</span></span>  
  
 [!code-cpp[IComparable Example#1](~/samples/snippets/cpp/VS_Snippets_CLR/IComparable Example/CPP/source.cpp#1)]
 [!code-csharp[IComparable Example#1](~/samples/snippets/csharp/VS_Snippets_CLR/IComparable Example/CS/source.cs#1)]
 [!code-vb[IComparable Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IComparable Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="3a978-138">Тип значения параметра <paramref name="obj" /> отличается от типа данного экземпляра.</span><span class="sxs-lookup"><span data-stu-id="3a978-138"><paramref name="obj" /> is not the same type as this instance.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="3a978-139">Для объектов, A, B и C должны выполняться следующие условия:</span><span class="sxs-lookup"><span data-stu-id="3a978-139">For objects A, B and C, the following must be true:</span></span> 
 <span data-ttu-id="3a978-140"><c>A.CompareTo(A)</c> должен возвращать нуль.</span><span class="sxs-lookup"><span data-stu-id="3a978-140"><c>A.CompareTo(A)</c> must return zero.</span></span>  
  
<span data-ttu-id="3a978-141">Если <c>A.CompareTo(B)</c> возвращает нуль, затем <c>B.CompareTo(A)</c> должен возвращать нуль.</span><span class="sxs-lookup"><span data-stu-id="3a978-141">If <c>A.CompareTo(B)</c> returns zero, then <c>B.CompareTo(A)</c> must return zero.</span></span>  
  
<span data-ttu-id="3a978-142">Если <c>A.CompareTo(B)</c> возвращает ноль и <c>B.CompareTo(C)</c> возвращает нуль, затем <c>A.CompareTo(C)</c> должен возвращать нуль.</span><span class="sxs-lookup"><span data-stu-id="3a978-142">If <c>A.CompareTo(B)</c> returns zero and <c>B.CompareTo(C)</c> returns zero, then <c>A.CompareTo(C)</c> must return zero.</span></span>  
  
<span data-ttu-id="3a978-143">Если <c>A.CompareTo(B)</c> возвращает значение, отличное от нуля, затем <c>B.CompareTo(A)</c> должен возвращать значение с противоположным знаком.</span><span class="sxs-lookup"><span data-stu-id="3a978-143">If <c>A.CompareTo(B)</c> returns a value other than zero, then <c>B.CompareTo(A)</c> must return a value of the opposite sign.</span></span>  
  
<span data-ttu-id="3a978-144">Если <c>A.CompareTo(B)</c> возвращает значение <paramref name="x" /> не равно нулю, и <c>B.CompareTo(C)</c> возвращает значение <paramref name="y" /> из тот же знак, что <paramref name="x" />, затем <c>A. CompareTo(C)</c> должен возвращать значение тот же знак, что <paramref name="x" /> и <paramref name="y" />.</span><span class="sxs-lookup"><span data-stu-id="3a978-144">If <c>A.CompareTo(B)</c> returns a value <paramref name="x" /> not equal to zero, and <c>B.CompareTo(C)</c> returns a value <paramref name="y" /> of the same sign as <paramref name="x" />, then <c>A.CompareTo(C)</c> must return a value of the same sign as <paramref name="x" /> and <paramref name="y" />.</span></span></para></block>
        <block subset="none" type="usage"><para><span data-ttu-id="3a978-145">Используйте <see cref="M:System.IComparable.CompareTo(System.Object)" /> метод для определения порядка экземпляров класса.</span><span class="sxs-lookup"><span data-stu-id="3a978-145">Use the <see cref="M:System.IComparable.CompareTo(System.Object)" /> method to determine the ordering of instances of a class.</span></span></para></block>
        <altmember cref="T:System.Object" />
      </Docs>
    </Member>
  </Members>
</Type>