<Type Name="ICustomFormatter" FullName="System.ICustomFormatter">
  <TypeSignature Language="C#" Value="public interface ICustomFormatter" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ICustomFormatter" />
  <TypeSignature Language="DocId" Value="T:System.ICustomFormatter" />
  <TypeSignature Language="VB.NET" Value="Public Interface ICustomFormatter" />
  <TypeSignature Language="C++ CLI" Value="public interface class ICustomFormatter" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="8a88d-101">Определяет метод, поддерживающий пользовательское форматирование значения объекта.</span><span class="sxs-lookup"><span data-stu-id="8a88d-101">Defines a method that supports custom formatting of the value of an object.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a88d-102"><xref:System.ICustomFormatter> Интерфейс включает один метод <xref:System.ICustomFormatter.Format%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="8a88d-102">The <xref:System.ICustomFormatter> interface includes a single method, <xref:System.ICustomFormatter.Format%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="8a88d-103">Этот интерфейс реализован по типу ссылки или значений <xref:System.ICustomFormatter.Format%2A> метод возвращает форматированное строковое представление значения объекта.</span><span class="sxs-lookup"><span data-stu-id="8a88d-103">When this interface is implemented by a reference or value type, the <xref:System.ICustomFormatter.Format%2A> method returns a custom-formatted string representation of an object's value.</span></span>  
  
 <span data-ttu-id="8a88d-104">Как правило <xref:System.ICustomFormatter> интерфейс реализуется с помощью <xref:System.IFormatProvider> интерфейс для настройки поведения двух методов .NET Framework составную строку форматирования, включающие <xref:System.IFormatProvider> параметра.</span><span class="sxs-lookup"><span data-stu-id="8a88d-104">Typically, the <xref:System.ICustomFormatter> interface is implemented with the <xref:System.IFormatProvider> interface to customize the behavior of two .NET Framework composite string formatting methods that include an <xref:System.IFormatProvider> parameter.</span></span> <span data-ttu-id="8a88d-105">В частности <xref:System.ICustomFormatter> интерфейса может предоставить пользовательское форматирование значения объекта, передаваемого <xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType> и <xref:System.Text.StringBuilder.AppendFormat%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType> методы.</span><span class="sxs-lookup"><span data-stu-id="8a88d-105">Specifically, the <xref:System.ICustomFormatter> interface can provide custom formatting of the value of an object passed to the <xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType> and <xref:System.Text.StringBuilder.AppendFormat%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType> methods.</span></span>  
  
 <span data-ttu-id="8a88d-106">Предоставляя пользовательское представление значения объекта требуется сделать следующее:</span><span class="sxs-lookup"><span data-stu-id="8a88d-106">Providing a custom representation of an object's value requires that you do the following:</span></span>  
  
1.  <span data-ttu-id="8a88d-107">Определите класс, который реализует <xref:System.ICustomFormatter> интерфейса и его один член <xref:System.ICustomFormatter.Format%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="8a88d-107">Define a class that implements the <xref:System.ICustomFormatter> interface and its single member, the <xref:System.ICustomFormatter.Format%2A> method.</span></span>  
  
2.  <span data-ttu-id="8a88d-108">Определите класс, который реализует <xref:System.IFormatProvider> интерфейса и его один член <xref:System.IFormatProvider.GetFormat%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="8a88d-108">Define a class that implements the <xref:System.IFormatProvider> interface and its single member, the <xref:System.IFormatProvider.GetFormat%2A> method.</span></span> <span data-ttu-id="8a88d-109"><xref:System.IFormatProvider.GetFormat%2A> Метод возвращает экземпляр вашего <xref:System.ICustomFormatter> реализации.</span><span class="sxs-lookup"><span data-stu-id="8a88d-109">The <xref:System.IFormatProvider.GetFormat%2A> method returns an instance of your <xref:System.ICustomFormatter> implementation.</span></span> <span data-ttu-id="8a88d-110">Часто один класс реализует интерфейс <xref:System.ICustomFormatter> и <xref:System.IFormatProvider>.</span><span class="sxs-lookup"><span data-stu-id="8a88d-110">Often, a single class implements both <xref:System.ICustomFormatter> and <xref:System.IFormatProvider>.</span></span> <span data-ttu-id="8a88d-111">В этом случае класс элемента `GetFormat` реализация возвращает экземпляр самого себя.</span><span class="sxs-lookup"><span data-stu-id="8a88d-111">In that case, the class's `GetFormat` implementation just returns an instance of itself.</span></span>  
  
3.  <span data-ttu-id="8a88d-112">Передайте <xref:System.IFormatProvider> реализации как `provider` аргумент <xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType> метод или метод сравнимыми.</span><span class="sxs-lookup"><span data-stu-id="8a88d-112">Pass the <xref:System.IFormatProvider> implementation as the `provider` argument of the <xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType> method or a comparable method.</span></span>  
  
 <span data-ttu-id="8a88d-113">Метод .NET Framework будет использовать пользовательский формат вместо свой собственный.</span><span class="sxs-lookup"><span data-stu-id="8a88d-113">The .NET Framework method will then use your custom formatting instead of its own.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8a88d-114">В следующем примере реализуется <xref:System.ICustomFormatter> разрешающее двоичных, восьмеричных и шестнадцатеричных форматирование целых значений.</span><span class="sxs-lookup"><span data-stu-id="8a88d-114">The following example implements <xref:System.ICustomFormatter> to allow binary, octal, and hexadecimal formatting of integral values.</span></span> <span data-ttu-id="8a88d-115">В этом примере один класс `IBinaryFormatter`, реализует интерфейс <xref:System.ICustomFormatter> и <xref:System.IFormatProvider>.</span><span class="sxs-lookup"><span data-stu-id="8a88d-115">In this example, a single class, `IBinaryFormatter`, implements both <xref:System.ICustomFormatter> and <xref:System.IFormatProvider>.</span></span> <span data-ttu-id="8a88d-116">Его <xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType> метод определяет, является ли `formatType` представляет параметр <xref:System.ICustomFormatter> типа.</span><span class="sxs-lookup"><span data-stu-id="8a88d-116">Its <xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType> method determines whether the `formatType` parameter represents an <xref:System.ICustomFormatter> type.</span></span> <span data-ttu-id="8a88d-117">В этом случае `BinaryFormatter` экземпляра; в противном случае он возвращает `null`.</span><span class="sxs-lookup"><span data-stu-id="8a88d-117">If it does, `BinaryFormatter` returns an instance of itself; otherwise, it returns `null`.</span></span> <span data-ttu-id="8a88d-118">Его <xref:System.ICustomFormatter.Format%2A?displayProperty=nameWithType> реализация определяет, является ли параметр формата одной из трех строк, поддерживаемый формат («B» для двоичного файла, «O» для восьмеричной и «H» для шестнадцатеричной) и форматирует `arg` параметр соответствующим образом.</span><span class="sxs-lookup"><span data-stu-id="8a88d-118">Its <xref:System.ICustomFormatter.Format%2A?displayProperty=nameWithType> implementation determines whether the format parameter is one of the three supported format strings ("B" for binary, "O" for octal, and "H" for hexadecimal) and formats the `arg` parameter appropriately.</span></span> <span data-ttu-id="8a88d-119">В противном случае, если `arg` не `null`, он вызывает `arg` параметра <xref:System.IFormattable.ToString%2A?displayProperty=nameWithType> реализацию, если он существует, или его без параметров `ToString` метод, если нет.</span><span class="sxs-lookup"><span data-stu-id="8a88d-119">Otherwise, if `arg` is not `null`, it calls the `arg` parameter's <xref:System.IFormattable.ToString%2A?displayProperty=nameWithType> implementation, if one exists, or its parameterless `ToString` method, if one does not.</span></span> <span data-ttu-id="8a88d-120">Если значением параметра `arg` является `null`, метод возвращает <xref:System.String.Empty?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="8a88d-120">If `arg` is `null`, the method returns <xref:System.String.Empty?displayProperty=nameWithType>.</span></span>  
  
 [!code-csharp[System.ICustomFormatter.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.icustomformatter.class/cs/binaryformatter.cs#1)]
 [!code-vb[System.ICustomFormatter.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.icustomformatter.class/vb/binaryformatter.vb#1)]  
  
 <span data-ttu-id="8a88d-121">`BinaryFormatter` можно использовать для пользовательского форматирования, передав `BinaryFormatter` объекта в виде `provider` параметр <xref:System.String.Format%2A> метода, как показано в следующем примере.</span><span class="sxs-lookup"><span data-stu-id="8a88d-121">`BinaryFormatter` can then be used to provide custom formatting by passing a `BinaryFormatter` object as the `provider` parameter of the <xref:System.String.Format%2A> method, as the following example shows.</span></span>  
  
 [!code-csharp[System.ICustomFormatter.Class#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.icustomformatter.class/cs/binaryformatter.cs#2)]
 [!code-vb[System.ICustomFormatter.Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.icustomformatter.class/vb/binaryformatter.vb#2)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para><span data-ttu-id="8a88d-122">Общеязыковая среда выполнения пытается использовать ваш <see cref="T:System.ICustomFormatter" /> реализацию для каждого элемента форматирования в строке составного формата.</span><span class="sxs-lookup"><span data-stu-id="8a88d-122">The common language runtime attempts to use your <see cref="T:System.ICustomFormatter" /> implementation for every format item in a composite format string.</span></span> <span data-ttu-id="8a88d-123">Поэтому следует ожидать, что ваш <see cref="T:System.ICustomFormatter" /> реализации будет вызываться для предоставления служб форматирования для объектов или значения, которые он не предназначен для обработки.</span><span class="sxs-lookup"><span data-stu-id="8a88d-123">As a result, you should expect that your <see cref="T:System.ICustomFormatter" /> implementation will be called to provide formatting services to objects or values that it is not designed to handle.</span></span> <span data-ttu-id="8a88d-124">В этих случаях вашей <see cref="M:System.ICustomFormatter.Format(System.String,System.Object,System.IFormatProvider)" /> метода необходимо вызвать соответствующий метод форматирования для этого объекта или значение.</span><span class="sxs-lookup"><span data-stu-id="8a88d-124">In these cases, your <see cref="M:System.ICustomFormatter.Format(System.String,System.Object,System.IFormatProvider)" /> method must call the appropriate formatting method for that object or value.</span></span>  
  
 <span data-ttu-id="8a88d-125">Существует два типа из <see cref="T:System.ICustomFormatter" /> реализации: встроенная функция и расширение.</span><span class="sxs-lookup"><span data-stu-id="8a88d-125">There are two kinds of <see cref="T:System.ICustomFormatter" /> implementations: intrinsic and extension.</span></span>  
  
 <span data-ttu-id="8a88d-126">Встроенные реализации являются реализациями, которые предоставляют пользовательский формат для объекта определяется приложением.</span><span class="sxs-lookup"><span data-stu-id="8a88d-126">Intrinsic implementations are implementations that provide custom formatting for an application-defined object.</span></span> <span data-ttu-id="8a88d-127">В этом случае реализация должна содержать следующее:</span><span class="sxs-lookup"><span data-stu-id="8a88d-127">In this case, your implementation should include the following:</span></span>  
  
-   <span data-ttu-id="8a88d-128">Определение строк формата, которые определяют форматирование объекта.</span><span class="sxs-lookup"><span data-stu-id="8a88d-128">A definition of format strings that define the formatting of the object.</span></span> <span data-ttu-id="8a88d-129">Строки формата являются необязательными.</span><span class="sxs-lookup"><span data-stu-id="8a88d-129">Format strings are optional.</span></span> <span data-ttu-id="8a88d-130">Как правило строка формата «G» или «g» определяет формат Общие (или наиболее часто используемые).</span><span class="sxs-lookup"><span data-stu-id="8a88d-130">Typically, a "G" or "g" format string defines the general (or most commonly used) format.</span></span> <span data-ttu-id="8a88d-131">Тем не менее можно определять всех выбранных строк формата.</span><span class="sxs-lookup"><span data-stu-id="8a88d-131">However, you are free to define any format strings that you choose.</span></span> <span data-ttu-id="8a88d-132">Вы можете решить, будет ли они зависеть от регистра символов.</span><span class="sxs-lookup"><span data-stu-id="8a88d-132">You are also free to decide whether they are case-sensitive or case-insensitive.</span></span>  
  
-   <span data-ttu-id="8a88d-133">Тест, чтобы убедиться, что тип объекта, переданного в <see cref="M:System.ICustomFormatter.Format(System.String,System.Object,System.IFormatProvider)" /> метод является определяемых приложением.</span><span class="sxs-lookup"><span data-stu-id="8a88d-133">A test to ensure that the type of the object passed to your <see cref="M:System.ICustomFormatter.Format(System.String,System.Object,System.IFormatProvider)" /> method is your application-defined type.</span></span> <span data-ttu-id="8a88d-134">Если это не так, необходимо вызвать объекта <see cref="T:System.IFormattable" /> реализации, если она существует, или его <see cref="M:System.Object.ToString" /> метод, если это не так.</span><span class="sxs-lookup"><span data-stu-id="8a88d-134">If it is not, you should call the object's <see cref="T:System.IFormattable" /> implementation, if one exists, or its <see cref="M:System.Object.ToString" /> method, if it does not.</span></span> <span data-ttu-id="8a88d-135">Следует быть готовым для обработки исключений, может вызывать эти вызовы методов.</span><span class="sxs-lookup"><span data-stu-id="8a88d-135">You should be prepared to handle any exceptions these method calls might throw.</span></span>  
  
-   <span data-ttu-id="8a88d-136">Код для обработки строки формата null, если ваша реализация поддерживает строки формата.</span><span class="sxs-lookup"><span data-stu-id="8a88d-136">Code to handle a null format string, if your implementation supports format strings.</span></span> <span data-ttu-id="8a88d-137">Наиболее распространенным подходом является замена строки формата null с помощью спецификатора общего формата.</span><span class="sxs-lookup"><span data-stu-id="8a88d-137">The most common approach is to replace a null format string with the general format specifier.</span></span>  
  
-   <span data-ttu-id="8a88d-138">Код для обработки всех строк формата, которые поддерживает реализация.</span><span class="sxs-lookup"><span data-stu-id="8a88d-138">Code to handle any format strings that your implementation supports.</span></span>  
  
-   <span data-ttu-id="8a88d-139">Код для обработки строк формата, которые не поддерживают.</span><span class="sxs-lookup"><span data-stu-id="8a88d-139">Code to handle format strings that you do not support.</span></span> <span data-ttu-id="8a88d-140">Наиболее распространенный подход — создать <see cref="T:System.FormatException" />, несмотря на то, что можно указать форматирование по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="8a88d-140">The most common approach is to throw a <see cref="T:System.FormatException" />, although you can provide default formatting.</span></span>  
  
 <span data-ttu-id="8a88d-141">Реализации расширения являются реализациями, которые предоставляют пользовательский формат для типа, который уже имеет поддержку форматирования.</span><span class="sxs-lookup"><span data-stu-id="8a88d-141">Extension implementations are implementations that provide custom formatting for a type that already has formatting support.</span></span> <span data-ttu-id="8a88d-142">Например, можно определить <c>CustomerNumberFormatter</c> , форматирует целочисленный тип с дефисами между определенными цифрами.</span><span class="sxs-lookup"><span data-stu-id="8a88d-142">For example, you could define a <c>CustomerNumberFormatter</c> that formats an integral type with hyphens between specific digits.</span></span> <span data-ttu-id="8a88d-143">В этом случае реализация должна содержать следующее:</span><span class="sxs-lookup"><span data-stu-id="8a88d-143">In this case, your implementation should include the following:</span></span>  
  
-   <span data-ttu-id="8a88d-144">Определение строк формата, которые расширяют форматирование объекта.</span><span class="sxs-lookup"><span data-stu-id="8a88d-144">A definition of format strings that extend the formatting of the object.</span></span> <span data-ttu-id="8a88d-145">Эти строки формата являются обязательными, но они не должно конфликтовать с существующими строками формата этого типа.</span><span class="sxs-lookup"><span data-stu-id="8a88d-145">These format strings are required, but they must not conflict with the type's existing format strings.</span></span> <span data-ttu-id="8a88d-146">Например, при расширении форматирования для <see cref="T:System.Int32" /> типа, не следует реализовывать описателей «C», «D», «E», «F» и «G» среди других.</span><span class="sxs-lookup"><span data-stu-id="8a88d-146">For example, if you are extending formatting for the <see cref="T:System.Int32" /> type, you should not implement the "C", "D", "E", "F", and "G" format specifiers, among others.</span></span>  
  
-   <span data-ttu-id="8a88d-147">Тест, тип объекта, переданного в <see cref="M:System.ICustomFormatter.Format(System.String,System.Object,System.IFormatProvider)" /> метод — это тип, форматирование которого расширение поддерживает.</span><span class="sxs-lookup"><span data-stu-id="8a88d-147">A test that the type of the object passed to your <see cref="M:System.ICustomFormatter.Format(System.String,System.Object,System.IFormatProvider)" /> method is a type whose formatting your extension supports.</span></span> <span data-ttu-id="8a88d-148">Если это не так, вызывающие этот объект <see cref="T:System.IFormattable" /> реализацию, если он существует, или объект без параметров <see cref="M:System.Object.ToString" /> метод, если это не так.</span><span class="sxs-lookup"><span data-stu-id="8a88d-148">If it is not, call the object's <see cref="T:System.IFormattable" /> implementation, if one exists, or the object's parameterless <see cref="M:System.Object.ToString" /> method, if it does not.</span></span> <span data-ttu-id="8a88d-149">Следует быть готовым для обработки исключений, может вызывать эти вызовы методов.</span><span class="sxs-lookup"><span data-stu-id="8a88d-149">You should be prepared to handle any exceptions these method calls might throw.</span></span>  
  
-   <span data-ttu-id="8a88d-150">Код для обработки всех строк формата, которые поддерживает расширение.</span><span class="sxs-lookup"><span data-stu-id="8a88d-150">Code to handle any format strings that your extension supports.</span></span>  
  
-   <span data-ttu-id="8a88d-151">Код для обработки всех строк формата, которые не поддерживаются расширения.</span><span class="sxs-lookup"><span data-stu-id="8a88d-151">Code to handle any format strings that your extension does not support.</span></span> <span data-ttu-id="8a88d-152">Они должны быть переданы тип <see cref="T:System.IFormattable" /> реализации.</span><span class="sxs-lookup"><span data-stu-id="8a88d-152">These should be passed on to the type's <see cref="T:System.IFormattable" /> implementation.</span></span> <span data-ttu-id="8a88d-153">Следует быть готовым для обработки исключений, может вызывать эти вызовы методов.</span><span class="sxs-lookup"><span data-stu-id="8a88d-153">You should be prepared to handle any exceptions these method calls might throw.</span></span></para>
    </block>
    <altmember cref="T:System.IFormatProvider" />
  </Docs>
  <Members>
    <Member MemberName="Format">
      <MemberSignature Language="C#" Value="public string Format (string format, object arg, IFormatProvider formatProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Format(string format, object arg, class System.IFormatProvider formatProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ICustomFormatter.Format(System.String,System.Object,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function Format (format As String, arg As Object, formatProvider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ Format(System::String ^ format, System::Object ^ arg, IFormatProvider ^ formatProvider);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="arg" Type="System.Object" />
        <Parameter Name="formatProvider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="8a88d-154">Строка формата, содержащая спецификации форматирования.</span><span class="sxs-lookup"><span data-stu-id="8a88d-154">A format string containing formatting specifications.</span></span></param>
        <param name="arg"><span data-ttu-id="8a88d-155">Объект для форматирования.</span><span class="sxs-lookup"><span data-stu-id="8a88d-155">An object to format.</span></span></param>
        <param name="formatProvider"><span data-ttu-id="8a88d-156">Объект, предоставляющий сведения о формате для текущего экземпляра.</span><span class="sxs-lookup"><span data-stu-id="8a88d-156">An object that supplies format information about the current instance.</span></span></param>
        <summary><span data-ttu-id="8a88d-157">Преобразует значение указанного объекта в эквивалентное ему строковое представление с использованием указанного формата и сведений об особенностях форматирования для данного языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="8a88d-157">Converts the value of a specified object to an equivalent string representation using specified format and culture-specific formatting information.</span></span></summary>
        <returns><span data-ttu-id="8a88d-158">Строковое представление значения <paramref name="arg" />, отформатированное с использованием параметров <paramref name="format" /> и <paramref name="formatProvider" />.</span><span class="sxs-lookup"><span data-stu-id="8a88d-158">The string representation of the value of <paramref name="arg" />, formatted as specified by <paramref name="format" /> and <paramref name="formatProvider" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a88d-159">Метод <xref:System.ICustomFormatter.Format%2A?displayProperty=nameWithType> является методом обратного вызова.</span><span class="sxs-lookup"><span data-stu-id="8a88d-159"><xref:System.ICustomFormatter.Format%2A?displayProperty=nameWithType> is a callback method.</span></span> <span data-ttu-id="8a88d-160">Вызывается метод, поддерживающий настраиваемое форматирование, таких как <xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType> или <xref:System.Text.StringBuilder.AppendFormat%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="8a88d-160">It is called by a method that supports custom formatting, such as <xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType> or <xref:System.Text.StringBuilder.AppendFormat%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType>.</span></span> <span data-ttu-id="8a88d-161">Реализация вызывается один раз для каждого элемента форматирования в [Строка составного формата](~/docs/standard/base-types/composite-formatting.md).</span><span class="sxs-lookup"><span data-stu-id="8a88d-161">The implementation is called once for each format item in a [composite format string](~/docs/standard/base-types/composite-formatting.md).</span></span> <span data-ttu-id="8a88d-162">Например, в следующей инструкции <xref:System.ICustomFormatter.Format%2A?displayProperty=nameWithType> метод вызывается трижды.</span><span class="sxs-lookup"><span data-stu-id="8a88d-162">For example, in the following statement, the <xref:System.ICustomFormatter.Format%2A?displayProperty=nameWithType> method is called three times.</span></span>  
  
 [!code-csharp[System.ICustomFormatter.Class#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.icustomformatter.class/cs/binaryformatter.cs#4)]
 [!code-vb[System.ICustomFormatter.Class#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.icustomformatter.class/vb/binaryformatter.vb#4)]  
  
 <span data-ttu-id="8a88d-163">`arg` Объект в списке объектов, отсчитываемый от нуля позиция которого соответствует индексу элемента определенного формата.</span><span class="sxs-lookup"><span data-stu-id="8a88d-163">The `arg` parameter is the object in the object list whose zero-based position corresponds to the index of a particular format item.</span></span>  
  
 <span data-ttu-id="8a88d-164">`format` Параметр содержит строки формата, который является `formatString` компонент элемента формата.</span><span class="sxs-lookup"><span data-stu-id="8a88d-164">The `format` parameter contains a format string, which is the `formatString` component of a format item.</span></span> <span data-ttu-id="8a88d-165">Если нет элемента форматирования `formatString` компонента, значение `format` — `null`.</span><span class="sxs-lookup"><span data-stu-id="8a88d-165">If the format item has no `formatString` component, the value of `format` is `null`.</span></span> <span data-ttu-id="8a88d-166">Если `format` — `null`, в зависимости от типа `arg`, вы сможете использовать спецификации формата по умолчанию по своему усмотрению.</span><span class="sxs-lookup"><span data-stu-id="8a88d-166">If `format` is `null`, depending on the type of `arg`, you may be able to use the default format specification of your choice.</span></span>  
  
 <span data-ttu-id="8a88d-167">`formatProvider` Параметр <xref:System.IFormatProvider> реализацию, которая предоставляет формат для `arg`.</span><span class="sxs-lookup"><span data-stu-id="8a88d-167">The `formatProvider` parameter is the <xref:System.IFormatProvider> implementation that provides formatting for `arg`.</span></span> <span data-ttu-id="8a88d-168">Обычно это экземпляр вашего <xref:System.ICustomFormatter> реализации.</span><span class="sxs-lookup"><span data-stu-id="8a88d-168">Typically, it is an instance of your <xref:System.ICustomFormatter> implementation.</span></span> <span data-ttu-id="8a88d-169">Если `formatProvider` — `null`, игнорируйте этот параметр.</span><span class="sxs-lookup"><span data-stu-id="8a88d-169">If `formatProvider` is `null`, ignore that parameter.</span></span>  
  
 <span data-ttu-id="8a88d-170">Реализация <xref:System.ICustomFormatter.Format%2A> метод должен включать следующие функциональные возможности, поэтому .NET Framework можно указать форматирование не поддерживают.</span><span class="sxs-lookup"><span data-stu-id="8a88d-170">Your implementation of the <xref:System.ICustomFormatter.Format%2A> method must include the following functionality so the .NET Framework can provide formatting you do not support.</span></span> <span data-ttu-id="8a88d-171">Если метод форматирования не поддерживает формат, определите, является ли объект форматирован <xref:System.IFormattable> интерфейса.</span><span class="sxs-lookup"><span data-stu-id="8a88d-171">If your format method does not support a format, determine whether the object being formatted implements the <xref:System.IFormattable> interface.</span></span> <span data-ttu-id="8a88d-172">Если он вызывать <xref:System.IFormattable.ToString%2A?displayProperty=nameWithType> метода этого интерфейса.</span><span class="sxs-lookup"><span data-stu-id="8a88d-172">If it does, invoke the <xref:System.IFormattable.ToString%2A?displayProperty=nameWithType> method of that interface.</span></span> <span data-ttu-id="8a88d-173">В противном случае вызов по умолчанию <xref:System.Object.ToString%2A?displayProperty=nameWithType> метод базового объекта.</span><span class="sxs-lookup"><span data-stu-id="8a88d-173">Otherwise, invoke the default <xref:System.Object.ToString%2A?displayProperty=nameWithType> method of the underlying object.</span></span> <span data-ttu-id="8a88d-174">Следующий код иллюстрирует этот шаблон.</span><span class="sxs-lookup"><span data-stu-id="8a88d-174">The following code illustrates this pattern.</span></span>  
  
 [!code-csharp[System.ICustomFormatter.Class#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.icustomformatter.class/cs/binaryformatter.cs#3)]
 [!code-vb[System.ICustomFormatter.Class#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.icustomformatter.class/vb/binaryformatter.vb#3)]  
  
   
  
## Examples  
 <span data-ttu-id="8a88d-175">В следующем примере реализуется <xref:System.ICustomFormatter> разрешающее двоичных, восьмеричных и шестнадцатеричных форматирование целых значений.</span><span class="sxs-lookup"><span data-stu-id="8a88d-175">The following example implements <xref:System.ICustomFormatter> to allow binary, octal, and hexadecimal formatting of integral values.</span></span> <span data-ttu-id="8a88d-176">Его <xref:System.ICustomFormatter.Format%2A?displayProperty=nameWithType> реализация определяет, является ли параметр формата одной из трех строк, поддерживаемый формат («B» для двоичного файла, «O» для восьмеричной и «H» для шестнадцатеричной) и форматирует `arg` параметр соответствующим образом.</span><span class="sxs-lookup"><span data-stu-id="8a88d-176">Its <xref:System.ICustomFormatter.Format%2A?displayProperty=nameWithType> implementation determines whether the format parameter is one of the three supported format strings ("B" for binary, "O" for octal, and "H" for hexadecimal) and formats the `arg` parameter appropriately.</span></span> <span data-ttu-id="8a88d-177">В противном случае, если `arg` не `null`, он вызывает `arg` параметра <xref:System.IFormattable.ToString%2A?displayProperty=nameWithType> реализацию, если он существует, или его без параметров `ToString` метод, если нет.</span><span class="sxs-lookup"><span data-stu-id="8a88d-177">Otherwise, if `arg` is not `null`, it calls the `arg` parameter's <xref:System.IFormattable.ToString%2A?displayProperty=nameWithType> implementation, if one exists, or its parameterless `ToString` method, if one does not.</span></span> <span data-ttu-id="8a88d-178">Если значением параметра `arg` является `null`, метод возвращает <xref:System.String.Empty?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="8a88d-178">If `arg` is `null`, the method returns <xref:System.String.Empty?displayProperty=nameWithType>.</span></span>  
  
 [!code-csharp[System.ICustomFormatter.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.icustomformatter.class/cs/binaryformatter.cs#1)]
 [!code-vb[System.ICustomFormatter.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.icustomformatter.class/vb/binaryformatter.vb#1)]  
  
 <span data-ttu-id="8a88d-179">`BinaryFormatter` можно использовать для пользовательского форматирования, передав `BinaryFormatter` объекта в виде `provider` параметр <xref:System.String.Format%2A> метода, как показано в следующем примере.</span><span class="sxs-lookup"><span data-stu-id="8a88d-179">`BinaryFormatter` can then be used to provide custom formatting by passing a `BinaryFormatter` object as the `provider` parameter of the <xref:System.String.Format%2A> method, as the following example shows.</span></span>  
  
 [!code-csharp[System.ICustomFormatter.Class#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.icustomformatter.class/cs/binaryformatter.cs#2)]
 [!code-vb[System.ICustomFormatter.Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.icustomformatter.class/vb/binaryformatter.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IFormattable" />
      </Docs>
    </Member>
  </Members>
</Type>