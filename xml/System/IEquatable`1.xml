<Type Name="IEquatable&lt;T&gt;" FullName="System.IEquatable&lt;T&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="19bc49f94beee1a3c075a5ffa5eaa52f9c90027f" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30728058" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IEquatable&lt;T&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IEquatable`1&lt;T&gt;" />
  <TypeSignature Language="DocId" Value="T:System.IEquatable`1" />
  <TypeSignature Language="VB.NET" Value="Public Interface IEquatable(Of T)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public interface class IEquatable" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Interfaces />
  <Docs>
    <typeparam name="T">
      <span data-ttu-id="e6de1-101">Тип объектов для сравнения.</span>
      <span class="sxs-lookup">
        <span data-stu-id="e6de1-101">The type of objects to compare.</span>
      </span>
    </typeparam>
    <summary>
      <span data-ttu-id="e6de1-102">Определяет обобщенный метод, который реализуется типом значения или классом для создания метода с целью определения экземпляров.</span>
      <span class="sxs-lookup">
        <span data-stu-id="e6de1-102">Defines a generalized method that a value type or class implements to create a type-specific method for determining equality of instances.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e6de1-103">Этот интерфейс реализуется типами, значения которых могут быть сравнение (пример, числовых и строковых классов).</span><span class="sxs-lookup"><span data-stu-id="e6de1-103">This interface is implemented by types whose values can be equated (for example, the numeric and string classes).</span></span> <span data-ttu-id="e6de1-104">Тип значения или класс реализует <xref:System.IEquatable%601.Equals%2A> метод для создания определенного типа метода, пригодного для определения равенства экземпляров.</span><span class="sxs-lookup"><span data-stu-id="e6de1-104">A value type or class implements the <xref:System.IEquatable%601.Equals%2A> method to create a type-specific method suitable for determining equality of instances.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e6de1-105"><xref:System.IComparable%601> Интерфейс определяет <xref:System.IComparable%601.CompareTo%2A> метод, который определяет порядок сортировки экземплярами реализующего типа.</span><span class="sxs-lookup"><span data-stu-id="e6de1-105">The <xref:System.IComparable%601> interface defines the <xref:System.IComparable%601.CompareTo%2A> method, which determines the sort order of instances of the implementing type.</span></span> <span data-ttu-id="e6de1-106"><xref:System.IEquatable%601> Интерфейс определяет <xref:System.IEquatable%601.Equals%2A> метод, который определяет равенство экземплярами реализующего типа.</span><span class="sxs-lookup"><span data-stu-id="e6de1-106">The <xref:System.IEquatable%601> interface defines the <xref:System.IEquatable%601.Equals%2A> method, which determines the equality of instances of the implementing type.</span></span>  
  
 <span data-ttu-id="e6de1-107"><xref:System.IEquatable%601> Интерфейс используется универсальная коллекция объектов, таких как <xref:System.Collections.Generic.Dictionary%602>, <xref:System.Collections.Generic.List%601>, и <xref:System.Collections.Generic.LinkedList%601> при проверке на равенство в таких методов, как `Contains`, `IndexOf`, `LastIndexOf`, и `Remove`.</span><span class="sxs-lookup"><span data-stu-id="e6de1-107">The <xref:System.IEquatable%601> interface is used by generic collection objects such as <xref:System.Collections.Generic.Dictionary%602>, <xref:System.Collections.Generic.List%601>, and <xref:System.Collections.Generic.LinkedList%601> when testing for equality in such methods as `Contains`, `IndexOf`, `LastIndexOf`, and `Remove`.</span></span> <span data-ttu-id="e6de1-108">Он должен быть реализован для любого объекта, который может храниться в универсальной коллекции.</span><span class="sxs-lookup"><span data-stu-id="e6de1-108">It should be implemented for any object that might be stored in a generic collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e6de1-109">Далее приведен пример <xref:System.IEquatable%601.Equals%2A?displayProperty=nameWithType> метод.</span><span class="sxs-lookup"><span data-stu-id="e6de1-109">See the example for the <xref:System.IEquatable%601.Equals%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>
        <span data-ttu-id="e6de1-110">Замените параметр типа <see cref="T:System.IEquatable`1" /> интерфейс с типом, реализующим этот интерфейс.</span>
        <span class="sxs-lookup">
          <span data-stu-id="e6de1-110">Replace the type parameter of the <see cref="T:System.IEquatable`1" /> interface with the type that is implementing this interface.</span>
        </span>
        <span data-ttu-id="e6de1-111">Если вы реализуете <see cref="T:System.IEquatable`1" />, также должны переопределять реализацию базового класса <see cref="M:System.Object.Equals(System.Object)" /> и <see cref="M:System.Object.GetHashCode" /> , чтобы их поведение согласуется со спецификацией <see cref="M:System.IEquatable`1.Equals(`0)" /> метод.</span>
        <span class="sxs-lookup">
          <span data-stu-id="e6de1-111">If you implement <see cref="T:System.IEquatable`1" />, you should also override the base class implementations of <see cref="M:System.Object.Equals(System.Object)" /> and <see cref="M:System.Object.GetHashCode" /> so that their behavior is consistent with that of the <see cref="M:System.IEquatable`1.Equals(`0)" /> method.</span>
        </span>
        <span data-ttu-id="e6de1-112">При переопределении <see cref="M:System.Object.Equals(System.Object)" />, переопределенная реализация называется также вызовы статического <see langword="Equals(System.Object, System.Object)" /> метод в классе.</span>
        <span class="sxs-lookup">
          <span data-stu-id="e6de1-112">If you do override <see cref="M:System.Object.Equals(System.Object)" />, your overridden implementation is also called in calls to the static <see langword="Equals(System.Object, System.Object)" /> method on your class.</span>
        </span>
        <span data-ttu-id="e6de1-113">Кроме того, необходимо перегрузить <see langword="op_Equality" /> и <see langword="op_Inequality" /> операторы.</span>
        <span class="sxs-lookup">
          <span data-stu-id="e6de1-113">In addition, you should overload the <see langword="op_Equality" /> and <see langword="op_Inequality" /> operators.</span>
        </span>
        <span data-ttu-id="e6de1-114">Это гарантирует, что все тесты на равенство получения согласованных результатов.</span>
        <span class="sxs-lookup">
          <span data-stu-id="e6de1-114">This ensures that all tests for equality return consistent results.</span>
        </span>
        <block subset="none" type="note">
          <para>
            <span data-ttu-id="e6de1-115">Сведения о переопределении <see cref="M:System.Object.Equals(System.Object)" />, в разделе <see cref="M:System.Object.Equals(System.Object)" /> статьи.</span>
            <span class="sxs-lookup">
              <span data-stu-id="e6de1-115">For information on overriding <see cref="M:System.Object.Equals(System.Object)" />, see the <see cref="M:System.Object.Equals(System.Object)" /> article.</span>
            </span>
          </para>
        </block>
        <span data-ttu-id="e6de1-116">Для типа значения всегда должны реализовывать <see cref="T:System.IEquatable`1" /> и Переопределите <see cref="M:System.Object.Equals(System.Object)" /> для повышения производительности.</span>
        <span class="sxs-lookup">
          <span data-stu-id="e6de1-116">For a value type, you should always implement <see cref="T:System.IEquatable`1" /> and override <see cref="M:System.Object.Equals(System.Object)" /> for better performance.</span>
        </span>
        <span data-ttu-id="e6de1-117">
          <see cref="M:System.Object.Equals(System.Object)" /> поля типов значений и использует отражение для сравнения двух значений на равенство.</span>
        <span class="sxs-lookup">
          <span data-stu-id="e6de1-117">
            <see cref="M:System.Object.Equals(System.Object)" /> boxes value types and relies on reflection to compare two values for equality.</span>
        </span>
        <span data-ttu-id="e6de1-118">Обе реализации <see cref="M:System.IEquatable`1.Equals(`0)" /> и переопределенный <see cref="M:System.Object.Equals(System.Object)" /> должен возвращать согласованные результаты.</span>
        <span class="sxs-lookup">
          <span data-stu-id="e6de1-118">Both your implementation of <see cref="M:System.IEquatable`1.Equals(`0)" /> and your override of <see cref="M:System.Object.Equals(System.Object)" /> should return consistent results.</span>
        </span>
        <span data-ttu-id="e6de1-119">Если вы реализуете <see cref="T:System.IEquatable`1" />, также требуется реализовать <see cref="T:System.IComparable`1" /> Если можно упорядочить или сортировки экземпляров типа.</span>
        <span class="sxs-lookup">
          <span data-stu-id="e6de1-119">If you implement <see cref="T:System.IEquatable`1" />, you should also implement <see cref="T:System.IComparable`1" /> if instances of your type can be ordered or sorted.</span>
        </span>
        <span data-ttu-id="e6de1-120">Если тип реализует <see cref="T:System.IComparable`1" />, почти всегда также реализовать <see cref="T:System.IEquatable`1" />.</span>
        <span class="sxs-lookup">
          <span data-stu-id="e6de1-120">If your type implements <see cref="T:System.IComparable`1" />, you almost always also implement <see cref="T:System.IEquatable`1" />.</span>
        </span>
      </para>
      <para>
        <span data-ttu-id="e6de1-121">Обратите внимание, что некоторые макеты тип поддерживает отношение заказа, когда равенство может отличаться от порядка сортировки отношение.</span>
        <span class="sxs-lookup">
          <span data-stu-id="e6de1-121">Note that there are some designs where a type supports an order relation, but equality may be distinct from an ordering relation.</span>
        </span>
        <span data-ttu-id="e6de1-122">Рассмотрим `Person` класса, где можно отсортировать в алфавитном порядке.</span>
        <span class="sxs-lookup">
          <span data-stu-id="e6de1-122">Consider a `Person` class where you sort alphabetically.</span>
        </span>
        <span data-ttu-id="e6de1-123">Два человека, с тем же именем сортировки одинаковыми, но не тот же пользователь.</span>
        <span class="sxs-lookup">
          <span data-stu-id="e6de1-123">Two people with the same name sort the same, but are not the same person.</span>
        </span>
      </para>
    </block>
    <altmember cref="T:System.IComparable`1" />
    <altmember cref="T:System.IComparable" />
  </Docs>
  <Members>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (T other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(!T other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IEquatable`1.Equals(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As T) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Equals(T other);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="T" />
      </Parameters>
      <Docs>
        <param name="other">
          <span data-ttu-id="e6de1-124">Объект, который требуется сравнить с данным объектом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6de1-124">An object to compare with this object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e6de1-125">Указывает, эквивалентен ли текущий объект другому объекту того же типа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6de1-125">Indicates whether the current object is equal to another object of the same type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e6de1-126">
            <see langword="true" />, если текущий объект эквивалентен параметру <paramref name="other" />, в противном случае — <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e6de1-126">
              <see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e6de1-127">Реализация <xref:System.IEquatable%601.Equals%2A> метод предназначен для проверки на равенство с другим объектом типа `T`, совпадает с типом текущего объекта.</span><span class="sxs-lookup"><span data-stu-id="e6de1-127">The implementation of the <xref:System.IEquatable%601.Equals%2A> method is intended to perform a test for equality with another object of type `T`, the same type as the current object.</span></span> <span data-ttu-id="e6de1-128"><xref:System.IEquatable%601.Equals(%600)> Метод вызывается в следующих случаях:</span><span class="sxs-lookup"><span data-stu-id="e6de1-128">The <xref:System.IEquatable%601.Equals(%600)> method is called in the following circumstances:</span></span>  
  
-   <span data-ttu-id="e6de1-129">Когда `Equals` вызывается метод и `other` аргумент является строго типизированный объект типа `T`.</span><span class="sxs-lookup"><span data-stu-id="e6de1-129">When the `Equals` method is called and the `other` argument is a strongly-typed object of type `T`.</span></span> <span data-ttu-id="e6de1-130">(Если `other` не относится к типу `T`, базовый <xref:System.Object.Equals%28System.Object%29?displayProperty=nameWithType> вызывается метод.</span><span class="sxs-lookup"><span data-stu-id="e6de1-130">(If `other` is not of type `T`, the base <xref:System.Object.Equals%28System.Object%29?displayProperty=nameWithType> method is called.</span></span> <span data-ttu-id="e6de1-131">Из двух методов <xref:System.IEquatable%601.Equals%2A?displayProperty=nameWithType> предлагает немного более высокую производительность.)</span><span class="sxs-lookup"><span data-stu-id="e6de1-131">Of the two methods, <xref:System.IEquatable%601.Equals%2A?displayProperty=nameWithType> offers slightly better performance.)</span></span>  
  
-   <span data-ttu-id="e6de1-132">При вызове методов поиска числа объектов универсальной коллекции.</span><span class="sxs-lookup"><span data-stu-id="e6de1-132">When the search methods of a number of generic collection objects are called.</span></span> <span data-ttu-id="e6de1-133">Ниже приведены некоторые из этих типов и их методов:</span><span class="sxs-lookup"><span data-stu-id="e6de1-133">Some of these types and their methods include the following:</span></span>  
  
    -   <span data-ttu-id="e6de1-134">Некоторые перегрузки универсального <xref:System.Array.BinarySearch%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="e6de1-134">Some of the generic overloads of the <xref:System.Array.BinarySearch%2A> method.</span></span>  
  
    -   <span data-ttu-id="e6de1-135">Методы поиска <xref:System.Collections.Generic.List%601> класса, включая <xref:System.Collections.Generic.List%601.Contains%28%600%29?displayProperty=nameWithType>, <xref:System.Collections.Generic.List%601.IndexOf%2A?displayProperty=nameWithType>, <xref:System.Collections.Generic.List%601.LastIndexOf%2A?displayProperty=nameWithType>, и <xref:System.Collections.Generic.List%601.Remove%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="e6de1-135">The search methods of the <xref:System.Collections.Generic.List%601> class, including <xref:System.Collections.Generic.List%601.Contains%28%600%29?displayProperty=nameWithType>, <xref:System.Collections.Generic.List%601.IndexOf%2A?displayProperty=nameWithType>, <xref:System.Collections.Generic.List%601.LastIndexOf%2A?displayProperty=nameWithType>, and <xref:System.Collections.Generic.List%601.Remove%2A?displayProperty=nameWithType>.</span></span>  
  
    -   <span data-ttu-id="e6de1-136">Методы поиска <xref:System.Collections.Generic.Dictionary%602> класса, включая <xref:System.Collections.Generic.Dictionary%602.ContainsKey%2A> и <xref:System.Collections.Generic.IDictionary%602.Remove%2A>.</span><span class="sxs-lookup"><span data-stu-id="e6de1-136">The search methods of the <xref:System.Collections.Generic.Dictionary%602> class, including <xref:System.Collections.Generic.Dictionary%602.ContainsKey%2A> and <xref:System.Collections.Generic.IDictionary%602.Remove%2A>.</span></span>  
  
    -   <span data-ttu-id="e6de1-137">Методы поиска универсального <xref:System.Collections.Generic.LinkedList%601> класса, включая <xref:System.Collections.Generic.LinkedList%601.Contains%2A?displayProperty=nameWithType> и <xref:System.Collections.Generic.LinkedList%601.Remove%2A>.</span><span class="sxs-lookup"><span data-stu-id="e6de1-137">The search methods of the generic <xref:System.Collections.Generic.LinkedList%601> class, including <xref:System.Collections.Generic.LinkedList%601.Contains%2A?displayProperty=nameWithType> and <xref:System.Collections.Generic.LinkedList%601.Remove%2A>.</span></span>  
  
 <span data-ttu-id="e6de1-138">Другими словами, чтобы обработать возможность сохранения объектов класса в массиве или универсальной коллекции объектов, рекомендуется реализовать <xref:System.IEquatable%601> , чтобы легко идентифицировать и управления этим состоянием объекта.</span><span class="sxs-lookup"><span data-stu-id="e6de1-138">In other words, to handle the possibility that objects of a class will be stored in an array or a generic collection object, it is a good idea to implement <xref:System.IEquatable%601> so that the object can be easily identified and manipulated.</span></span>  
  
 <span data-ttu-id="e6de1-139">При реализации <xref:System.IEquatable%601.Equals%2A> метод, определяйте равенство типа, указанного аргументом универсального типа.</span><span class="sxs-lookup"><span data-stu-id="e6de1-139">When implementing the <xref:System.IEquatable%601.Equals%2A> method, define equality appropriately for the type specified by the generic type argument.</span></span> <span data-ttu-id="e6de1-140">Например, если используется аргумент типа <xref:System.Int32>, определяйте равенство сравнения двух 32-разрядных целых чисел со знаком.</span><span class="sxs-lookup"><span data-stu-id="e6de1-140">For example, if the type argument is <xref:System.Int32>, define equality appropriately for the comparison of two 32-bit signed integers.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e6de1-141">Следующий пример показывает, частичная реализация `Person` класс, реализующий <xref:System.IEquatable%601> и имеет два свойства `LastName` и `SSN`.</span><span class="sxs-lookup"><span data-stu-id="e6de1-141">The following example shows the partial implementation of a `Person` class that implements <xref:System.IEquatable%601> and has two properties, `LastName` and `SSN`.</span></span> <span data-ttu-id="e6de1-142"><xref:System.IEquatable%601.Equals%2A> Возвращает `True` Если `SSN` свойства двух `Person` объектов является одинаковым; в противном случае он возвращает `False`.</span><span class="sxs-lookup"><span data-stu-id="e6de1-142">The <xref:System.IEquatable%601.Equals%2A> method returns `True` if the `SSN` property of two `Person` objects is identical; otherwise, it returns `False`.</span></span>  
  
 [!code-csharp[System.GenericIEquatable.Equals#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.GenericIEquatable.Equals/cs/EqualsEx2.cs#3)]
 [!code-vb[System.GenericIEquatable.Equals#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.GenericIEquatable.Equals/vb/EqualsEx2.vb#3)]  
  
 <span data-ttu-id="e6de1-143">`Person` объекты можно хранить в <xref:System.Collections.Generic.List%601> объекта и можно определить по `Contains` метода, как показано в следующем примере.</span><span class="sxs-lookup"><span data-stu-id="e6de1-143">`Person` objects can then be stored in a <xref:System.Collections.Generic.List%601> object and can be identified by the `Contains` method, as the following example shows.</span></span>  
  
 [!code-csharp[System.GenericIEquatable.Equals#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.GenericIEquatable.Equals/cs/Snippet12.cs#12)]
 [!code-vb[System.GenericIEquatable.Equals#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.GenericIEquatable.Equals/vb/Snippet12.vb#12)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="e6de1-144">Если вы реализуете <see cref="M:System.IEquatable`1.Equals(`0)" />, также должны переопределять реализацию базового класса <see cref="M:System.Object.Equals(System.Object)" /> и <see cref="M:System.Object.GetHashCode" /> , чтобы их поведение согласуется со спецификацией <see cref="M:System.IEquatable`1.Equals(`0)" /> метод.</span>
            <span class="sxs-lookup">
              <span data-stu-id="e6de1-144">If you implement <see cref="M:System.IEquatable`1.Equals(`0)" />, you should also override the base class implementations of <see cref="M:System.Object.Equals(System.Object)" /> and <see cref="M:System.Object.GetHashCode" /> so that their behavior is consistent with that of the <see cref="M:System.IEquatable`1.Equals(`0)" /> method.</span>
            </span>
            <span data-ttu-id="e6de1-145">При переопределении <see cref="M:System.Object.Equals(System.Object)" />, переопределенная реализация называется также вызовы статического <see langword="Equals(System.Object, System.Object)" /> метод в классе.</span>
            <span class="sxs-lookup">
              <span data-stu-id="e6de1-145">If you do override <see cref="M:System.Object.Equals(System.Object)" />, your overridden implementation is also called in calls to the static <see langword="Equals(System.Object, System.Object)" /> method on your class.</span>
            </span>
            <span data-ttu-id="e6de1-146">Кроме того, необходимо перегрузить <see langword="op_Equality" /> и <see langword="op_Inequality" /> операторы.</span>
            <span class="sxs-lookup">
              <span data-stu-id="e6de1-146">In addition, you should overload the <see langword="op_Equality" /> and <see langword="op_Inequality" /> operators.</span>
            </span>
            <span data-ttu-id="e6de1-147">Это гарантирует, что все тесты на равенство возвращать согласованные результаты, что показано в примере.</span>
            <span class="sxs-lookup">
              <span data-stu-id="e6de1-147">This ensures that all tests for equality return consistent results, which the example illustrates.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
  </Members>
</Type>