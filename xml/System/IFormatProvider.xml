<Type Name="IFormatProvider" FullName="System.IFormatProvider">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="380cd37c1402c4dcf42f0e57f7d4df8be500b69c" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36430878" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IFormatProvider" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IFormatProvider" />
  <TypeSignature Language="DocId" Value="T:System.IFormatProvider" />
  <TypeSignature Language="VB.NET" Value="Public Interface IFormatProvider" />
  <TypeSignature Language="C++ CLI" Value="public interface class IFormatProvider" />
  <TypeSignature Language="F#" Value="type IFormatProvider = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Предоставляет механизм для извлечения объекта с целью управления форматированием.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IFormatProvider> Интерфейс предоставляет объект, предоставляющий сведения о форматировании для форматирования и анализа операций. Операций форматирования преобразовать значение типа в строковое представление этого значения. Типичные методы форматирования, `ToString` методы типа, а также <xref:System.String.Format%2A>. Операции анализа преобразовать строковое представление значения в тип с таким значением. Типичные методы синтаксического анализа, `Parse` и `TryParse`.  
  
 <xref:System.IFormatProvider> Интерфейс состоит из единственного метода <xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType>. <xref:System.IFormatProvider.GetFormat%2A> метод обратного вызова: синтаксический анализ или форматирования метод вызывает его и передает его <xref:System.Type> объект, который представляет тип объекта, форматирования или разбора метод ожидает предоставит сведения о форматировании. <xref:System.IFormatProvider.GetFormat%2A> Метод отвечает за возврат объекта этого типа.  
  
 <xref:System.IFormatProvider> реализации часто используемые неявно методами форматирования и анализа. Например <xref:System.DateTime.ToString%28System.String%29?displayProperty=nameWithType> метод неявно использует <xref:System.IFormatProvider> реализацию, которая представляет текущую культуру системы. <xref:System.IFormatProvider> реализации можно также указать явным образом методы, которые имеют параметр типа <xref:System.IFormatProvider>, такие как <xref:System.Int32.Parse%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType> и <xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType>.  
  
 Платформа .NET Framework включает следующие три предопределенные <xref:System.IFormatProvider> реализации для предоставления сведений о культуре, используемый в форматирования или синтаксического анализа значений числовых и даты и времени:  
  
-   <xref:System.Globalization.NumberFormatInfo> Класс, предоставляющий сведения, используемые для форматирования чисел, например валюты, тысячи разделителя и десятичный разделитель для определенного языка и региональных параметров. Дополнительные сведения о строках стандартных форматов, распознаваемые <xref:System.Globalization.NumberFormatInfo> объекта и в операциях форматирования числовых см. [строки стандартного числового формата](~/docs/standard/base-types/standard-numeric-format-strings.md) и [строки настраиваемых числовых форматов](~/docs/standard/base-types/custom-numeric-format-strings.md).  
  
-   <xref:System.Globalization.DateTimeFormatInfo> Класс, предоставляющий сведения, используемые для форматирования даты и времени, такие как символы разделителя даты и времени для определенного языка и региональных параметров или порядок и формат даты год, месяц и день компоненты. Сведения о строках стандартных форматов, распознаваемые <xref:System.Globalization.DateTimeFormatInfo> объекта и в операциях форматирования числовых см. [стандартной строки даты и времени формат](~/docs/standard/base-types/standard-date-and-time-format-strings.md) и [пользовательские значения даты и времени строки формата ](~/docs/standard/base-types/custom-date-and-time-format-strings.md).  
  
-   <xref:System.Globalization.CultureInfo> Класс, который представляет определенный язык и региональные параметры. Его <xref:System.IFormatProvider.GetFormat%2A> метод возвращает зависящим от культуры <xref:System.Globalization.NumberFormatInfo> или <xref:System.Globalization.DateTimeFormatInfo> объекта, в зависимости от того, следует ли <xref:System.Globalization.CultureInfo> объект используется в форматирования или разбора операция, использующая чисел, дат и времени.  
  
 Платформа .NET Framework также поддерживает настраиваемые параметры форматирования. Это обычно включает создание класса форматирования, который реализует интерфейс <xref:System.IFormatProvider> и <xref:System.ICustomFormatter>. Экземпляр этого класса передается как параметр метода, который выполняет пользовательские операции форматирования, такие как <xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType> приведен пример такой пользовательской реализации, форматирует число в виде числа 12 цифр учетной записи.  
  
   
  
## Examples  
 В следующем примере показан способ <xref:System.IFormatProvider> реализации можно изменить представление значения даты и времени. В этом случае один Дата отображается с помощью <xref:System.Globalization.CultureInfo> объекты, представляющие четыре разных языков и региональных параметров.  
  
 [!code-csharp[System.IFormatProvider.Class#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IFormatProvider.Class/cs/provider2.cs#3)]
 [!code-vb[System.IFormatProvider.Class#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IFormatProvider.Class/vb/provider2.vb#3)]  
  
 Следующий пример иллюстрирует использование класса, который реализует <xref:System.IFormatProvider> интерфейс и <xref:System.IFormatProvider.GetFormat%2A> метод. `AcctNumberFormat` Класса преобразует <xref:System.Int64> значение, представляющее номер счета отформатированный 12-значный номер учетной записи. Его `GetFormat` метод возвращает ссылку на текущий `AcctNumberFormat` экземпляра, если `formatType` параметр ссылается на класс, реализующий <xref:System.ICustomFormatter>; в противном случае `GetFormat` возвращает `null`.  
  
 [!code-csharp[System.IFormatProvider.Class#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IFormatProvider.Class/cs/Provider.cs#2)]
 [!code-vb[System.IFormatProvider.Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IFormatProvider.Class/vb/Provider.vb#2)]  
  
 Класс, реализующий <xref:System.IFormatProvider> можно использовать в вызове форматирования и синтаксического анализа. Например, следующий код вызывает <xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType> методе, чтобы создать строку, содержащую отформатированный 12-значный номер учетной записи.  
  
 [!code-csharp[System.IFormatProvider.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IFormatProvider.Class/cs/Provider.cs#1)]
 [!code-vb[System.IFormatProvider.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IFormatProvider.Class/vb/Provider.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ICustomFormatter" />
    <altmember cref="T:System.IFormattable" />
  </Docs>
  <Members>
    <Member MemberName="GetFormat">
      <MemberSignature Language="C#" Value="public object GetFormat (Type formatType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetFormat(class System.Type formatType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IFormatProvider.GetFormat(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFormat (formatType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetFormat(Type ^ formatType);" />
      <MemberSignature Language="F#" Value="abstract member GetFormat : Type -&gt; obj" Usage="iFormatProvider.GetFormat formatType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="formatType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="formatType">Объект, определяющий тип возвращаемого объекта форматирования.</param>
        <summary>Возвращает объекты, предоставляющие службы форматирования для заданного типа.</summary>
        <returns>Экземпляр объекта, заданного в параметре <paramref name="formatType" />, если реализация <see cref="T:System.IFormatProvider" /> может предоставить объект такого типа; в противном случае — <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IFormatProvider.GetFormat%2A> — Это метод обратного вызова, форматирования и анализа методов вызова неуправляемого кода для получения сведений о формате для входной строки в операциях анализа или формат выходной строки в операциях форматирования. В `formatType` параметра, форматирования или разбора метод передает тип объекта, необходимого для выполнения своей работы. Если <xref:System.IFormatProvider> реализации можно указать это форматирования или синтаксического анализа объектов, возвращает этот объект. Если нет, возвращается `null`.  
  
 Например, в вызове <xref:System.Int32.ToString%28System.IFormatProvider%29?displayProperty=nameWithType> , аргумент метода является <xref:System.IFormatProvider> объект, предоставляющий сведения о может форматировании строковое представление текущего экземпляра целое число со знаком. Если среда выполнения выполняет метод, он вызывает <xref:System.IFormatProvider> объекта <xref:System.IFormatProvider.GetFormat%2A> метод и передает его <xref:System.Type> , представляющий <xref:System.Globalization.NumberFormatInfo> типа. Если <xref:System.IFormatProvider> объекта можно указать <xref:System.Globalization.NumberFormatInfo> объекта, она возвращает этот объект. Если он не может предоставить объект этого типа, он возвращает `null`.  
  
 Можно реализовать <xref:System.IFormatProvider> интерфейс и <xref:System.IFormatProvider.GetFormat%2A> метода в классах, которые предоставляют настраиваемые службы форматирования или анализа. <xref:System.IFormatProvider> Реализацию затем передается в качестве аргумента ни одной перегрузке синтаксического анализа и форматирования метод, который имеет параметр типа <xref:System.IFormatProvider>, такие как <xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType>, <xref:System.Int32.ToString%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType>, или <xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType>.  
  
   
  
## Examples  
 Следующий пример иллюстрирует использование класса, который реализует <xref:System.IFormatProvider> интерфейс и <xref:System.IFormatProvider.GetFormat%2A> метод. `AcctNumberFormat` Класса преобразует <xref:System.Int64> значение, представляющее номер счета отформатированный 12-значный номер учетной записи. Его `GetFormat` метод возвращает ссылку на себя, если `formatType` параметр ссылается на класс, реализующий <xref:System.ICustomFormatter>; в противном случае `GetFormat` возвращает `null`.  
  
 [!code-csharp[System.IFormatProvider.Class#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IFormatProvider.Class/cs/Provider.cs#2)]
 [!code-vb[System.IFormatProvider.Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IFormatProvider.Class/vb/Provider.vb#2)]  
  
 Экземпляр `AcctNumberFormat` можно затем передать класс в качестве аргумента методу, который предоставляет службы форматирования или анализа. Например, следующий код передает `AcctNumberFormat` класса <xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType> метод для создания отформатированный 12-значный номер учетной записи.  
  
 [!code-csharp[System.IFormatProvider.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IFormatProvider.Class/cs/Provider.cs#1)]
 [!code-vb[System.IFormatProvider.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IFormatProvider.Class/vb/Provider.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>