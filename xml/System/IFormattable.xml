<Type Name="IFormattable" FullName="System.IFormattable">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f1ee32cae285a624ff6ceecaa94663848cf18034" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30728568" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IFormattable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IFormattable" />
  <TypeSignature Language="DocId" Value="T:System.IFormattable" />
  <TypeSignature Language="VB.NET" Value="Public Interface IFormattable" />
  <TypeSignature Language="C++ CLI" Value="public interface class IFormattable" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Предоставляет функциональные возможности для форматирования значения объекта в представление строки.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IFormattable> Интерфейс преобразует объект в его строковое представление, в зависимости от строки формата и поставщик форматирования.  
  
 Строка формата обычно определяет общий внешний вид объекта. Например платформа .NET Framework поддерживает следующие функции:  
  
-   Строки стандартного формата для форматирования значения перечисления (см. [строки форматов перечисления](~/docs/standard/base-types/enumeration-format-strings.md)).  
  
-   Стандартные и настраиваемые строки форматирования для форматирования числовых значений (в разделе [строки стандартного числового формата](~/docs/standard/base-types/standard-numeric-format-strings.md) и [строки настраиваемых числовых форматов](~/docs/standard/base-types/custom-numeric-format-strings.md)).  
  
-   Стандартные и настраиваемые строки форматирования для форматирования значений даты и времени (в разделе [стандартной строки даты и времени формат](~/docs/standard/base-types/standard-date-and-time-format-strings.md) и [пользовательские строки даты и времени формат](~/docs/standard/base-types/custom-date-and-time-format-strings.md)).  
  
-   Строки стандартных и пользовательских форматов для форматирования временных интервалов (см. [строки стандартного формата TimeSpan](~/docs/standard/base-types/standard-timespan-format-strings.md) и [строки пользовательского формата TimeSpan](~/docs/standard/base-types/custom-timespan-format-strings.md)).  
  
 Можно также определить собственные строки формата для поддержки форматирования прикладных типов.  
  
 Поставщик формата возвращает объект форматирования, который обычно определяет символы, используемые в преобразовании объекта в строковое представление. Например при преобразовании числа в виде денежного значения, поставщика формата определяет символ валюты, который отображается в результирующей строке. Платформа .NET Framework определяет три поставщики формата:  
  
-   <xref:System.Globalization.CultureInfo?displayProperty=nameWithType> Класс, который возвращает один <xref:System.Globalization.NumberFormatInfo> объект для форматирования числовых значений или <xref:System.Globalization.DateTimeFormatInfo> объект для форматирования значений даты и времени.  
  
-   <xref:System.Globalization.NumberFormatInfo?displayProperty=nameWithType> Класс, который возвращает экземпляр самого себя для форматирования числовых значений.  
  
-   <xref:System.Globalization.DateTimeFormatInfo?displayProperty=nameWithType> Класс, который возвращает экземпляр самого себя для форматирования значений даты и времени.  
  
 Кроме того можно определить собственные поставщики пользовательского формата для предоставления зависящим от культуры, профессии для конкретного или специализированные сведения, используемый для форматирования. Дополнительные сведения о реализации пользовательского форматирования с помощью поставщика настраиваемого формата см. в разделе <xref:System.ICustomFormatter>.  
  
 <xref:System.IFormattable> Интерфейс определяет единственный метод <xref:System.IFormattable.ToString%2A>, который предоставляет службы форматирования для реализующего типа. <xref:System.IFormattable.ToString%2A> Метод может вызываться напрямую. Кроме того, он вызывается автоматически <xref:System.Convert.ToString%28System.Object%29?displayProperty=nameWithType> и <xref:System.Convert.ToString%28System.Object%2CSystem.IFormatProvider%29?displayProperty=nameWithType> методов и методы, использующие [составное форматирование](~/docs/standard/base-types/composite-formatting.md) в .NET Framework. Такие методы включают <xref:System.Console.WriteLine%28System.String%2CSystem.Object%29?displayProperty=nameWithType>, <xref:System.String.Format%2A?displayProperty=nameWithType>, и <xref:System.Text.StringBuilder.AppendFormat%28System.String%2CSystem.Object%29?displayProperty=nameWithType>, среди прочего. <xref:System.IFormattable.ToString%2A> Метод вызывается для каждого элемента форматирования в строке формата этого метода.  
  
 <xref:System.IFormattable> Интерфейс реализуется в базовые типы данных.  
  
   
  
## Examples  
 В следующем примере определяется класс `Temperature` , реализующий интерфейс <xref:System.IFormattable> . Класс поддерживает четыре спецификатора формата: «G» и «C», которое показывает, что температура будет отображаться по Цельсию; «F», указывает, что температура будет отображаться по Фаренгейту; и «K», указывает, что температура для отображения в градусах Кельвина. Кроме того <xref:System.IFormattable.ToString%2A?displayProperty=nameWithType> реализации также может обрабатывать строка формата, `null` или пустым. Два других `ToString` методов, определенных `Temperature` класс просто перенести вызов <xref:System.IFormattable.ToString%2A?displayProperty=nameWithType> реализации.  
  
 [!code-csharp[System.IFormattable#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.iformattable/cs/example1.cs#1)]
 [!code-vb[System.IFormattable#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.iformattable/vb/example1.vb#1)]  
  
 Следующий пример вызывает <xref:System.IFormattable.ToString%2A?displayProperty=nameWithType> реализацию напрямую или с помощью строки составного формата.  
  
 [!code-csharp[System.IFormattable#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.iformattable/cs/example1.cs#2)]
 [!code-vb[System.IFormattable#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.iformattable/vb/example1.vb#2)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>Классы, которые требуется больший контроль над форматированием строк, чем <see cref="M:System.Object.ToString" /> предоставляет следует реализовать <see cref="T:System.IFormattable" />.  
  
 Класс, реализующий <see cref="T:System.IFormattable" /> должен поддерживать (Общие) описателей «G». Кроме описатель «G» в классе можно определить список описателей формата, которые она поддерживает. Кроме того, класс должен быть подготовлен для обработки спецификатора формата, <see langword="null" />. Дополнительные сведения о форматировании и коды форматирования см. в разделе [типы форматирования](~/docs/standard/base-types/formatting-types.md)</para>
    </block>
    <altmember cref="T:System.IFormatProvider" />
    <altmember cref="M:System.Object.ToString" />
    <altmember cref="P:System.Threading.Thread.CurrentCulture" />
  </Docs>
  <Members>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (string format, IFormatProvider formatProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToString(string format, class System.IFormatProvider formatProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IFormattable.ToString(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (format As String, formatProvider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString(System::String ^ format, IFormatProvider ^ formatProvider);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="formatProvider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="format">Используемый формат.  
  
 - или -  
  
 Пустая ссылка (<see langword="Nothing" /> в Visual Basic) для использования формата по умолчанию, определенного для типа реализации<see cref="T:System.IFormattable" />.</param>
        <param name="formatProvider">Поставщик для использования формата значения.  
  
 - или -  
  
 Пустая ссылка (<see langword="Nothing" /> в Visual Basic) для получения сведений о формате чисел из текущего установленного в операционной системе языкового стандарта.</param>
        <summary>Форматирует значение текущего экземпляра, используя указанный формат.</summary>
        <returns>Значение текущего экземпляра в указанном формате.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IFormattable.ToString%2A> Метод преобразует значение в строковое представление, которое может быть выражено несколькими способами. Его точный формат зависит от того, специальные символы или в определенном порядке, определенное для конкретных языков и региональных параметров, профессиях или отраслях. Метод можно вызывать напрямую. Он также называется автоматически <xref:System.Convert.ToString%28System.Object%29?displayProperty=nameWithType> и <xref:System.Convert.ToString%28System.Object%2CSystem.IFormatProvider%29?displayProperty=nameWithType> методов и методы, использующие составное форматирование в платформе .NET Framework, такие как <xref:System.String.Format%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType>, <xref:System.Console.WriteLine%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType>, и <xref:System.Text.StringBuilder.AppendFormat%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType>. (Дополнительные сведения см. в разделе [составное форматирование](~/docs/standard/base-types/composite-formatting.md).)  
  
 Составное форматирование вызова методов <xref:System.IFormattable.ToString%2A> метод один раз для каждого элемента форматирования в строке формата. Параметры, передаваемые методу зависят от определенного метода форматирования, который вызывается и содержимое элемента форматирования, следующим образом:  
  
-   Если элемент формата не включает строку формата (например, в том случае, если элемент формата — это просто `{0}`), оно передается `null` в качестве значения <xref:System.String?displayProperty=nameWithType> параметра.  
  
-   Если элемент форматирования, включающий строку формата (например, `{0:G}`), что строка формата передается в качестве значения <xref:System.String?displayProperty=nameWithType> параметра.  
  
-   Если исходного вызова метода не включает <xref:System.IFormatProvider?displayProperty=nameWithType> параметр <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType> передается в качестве значения параметра <xref:System.IFormatProvider?displayProperty=nameWithType> параметр.  
  
-   Если исходный вызов метода включает <xref:System.IFormatProvider?displayProperty=nameWithType> параметр, поставщика, введенные в вызов метода передается в качестве значения <xref:System.IFormatProvider?displayProperty=nameWithType> параметра.  
  
> [!NOTE]
>  Объект <xref:System.IFormattable.ToString%2A> методов составного форматирования вызывается реализация, только в том случае, если они не передаются <xref:System.ICustomFormatter> поставщик формата, или, если <xref:System.ICustomFormatter.Format%2A> метод поставщика настраиваемого формата возвращает `null`.  
  
 Платформа .NET Framework включает три поставщиков форматирования, которые реализуют <xref:System.IFormatProvider> интерфейс:  
  
-   <xref:System.Globalization.NumberFormatInfo> предоставляет числовое форматирование сведения, такие как символы для десятичных и разделители групп и орфографию и размещения символов валют в денежные значения.  
  
-   <xref:System.Globalization.DateTimeFormatInfo> предоставляет связанных с даты и времени сведения о форматировании, такие как положение месяца, дня и года в шаблон даты.  
  
-   <xref:System.Globalization.CultureInfo> содержит значение по умолчанию форматирование сведения в конкретном языке, включая данные числового формата и сведения о форматировании даты и времени.  
  
 Кроме того можно определить собственный поставщик настраиваемого формата.  
  
   
  
## Examples  
 В следующем примере демонстрируется `Temperature` класс, реализующий <xref:System.IFormattable.ToString%2A> метод. Данный пример кода является частью большего примера, приведенного для <xref:System.IFormattable> класса.  
  
 [!code-csharp[System.IFormattable#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.iformattable/cs/example1.cs#1)]
 [!code-vb[System.IFormattable#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.iformattable/vb/example1.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <see cref="M:System.IFormattable.ToString(System.String,System.IFormatProvider)" /> Метод должен поддерживать (Общие) описателей «G». Кроме описатель «G» в классе можно определить список описателей формата, которые она поддерживает. Кроме того, класс должен быть подготовлен для обработки спецификатора формата, <see langword="null" />. Дополнительные сведения о форматировании и коды форматирования см. в разделе [типы форматирования](~/docs/standard/base-types/formatting-types.md).</para>
        </block>
        <altmember cref="T:System.String" />
        <altmember cref="T:System.IFormatProvider" />
        <altmember cref="T:System.Globalization.NumberFormatInfo" />
        <altmember cref="T:System.Globalization.DateTimeFormatInfo" />
        <altmember cref="T:System.Globalization.CultureInfo" />
      </Docs>
    </Member>
  </Members>
</Type>