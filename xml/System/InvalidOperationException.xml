<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="InvalidOperationException.xml" source-language="en-US" target-language="ru-RU">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac57eef3c78c550cc2f6c9c891703b21cfbe65f49ec.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7eef3c78c550cc2f6c9c891703b21cfbe65f49ec</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.InvalidOperationException">
          <source>The exception that is thrown when a method call is invalid for the object's current state.</source>
          <target state="translated">Исключение, которое выдается при вызове метода, недопустимого для текущего состояния объекта.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source><ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> is used in cases when the failure to invoke a method is caused by reasons other than invalid arguments.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> используется в случаях, когда возникает ошибка вызова метода по причинам, отличным от недопустимые аргументы.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>Typically, it is thrown when the state of an object cannot support the method call.</source>
          <target state="translated">Как правило оно создается при состояние объекта не поддерживает вызов метода.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>For example, an <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> exception is thrown by methods such as:</source>
          <target state="translated">Например <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> исключение выдается методами, например:</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source><ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A?displayProperty=nameWithType&gt;</ph> if objects of a collection are modified after the enumerator is created.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A?displayProperty=nameWithType&gt;</ph> Если объекты коллекции были изменены после создания перечислителя.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>For more information, see <bpt id="p1">[</bpt>Changing a collection while iterating it<ept id="p1">](#Iterating)</ept>.</source>
          <target state="translated">Дополнительные сведения см. в разделе <bpt id="p1">[</bpt>изменения коллекции во время итерации его<ept id="p1">](#Iterating)</ept>.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source><ph id="ph1">&lt;xref:System.Resources.ResourceSet.GetString%2A?displayProperty=nameWithType&gt;</ph> if the resource set is closed before the method call is made.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Resources.ResourceSet.GetString%2A?displayProperty=nameWithType&gt;</ph> Если набор ресурсов закрыт до вызова метода выполняется.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source><ph id="ph1">&lt;xref:System.Xml.Linq.XContainer.Add%2A?displayProperty=nameWithType&gt;</ph>, if the object or objects to be added would result in an incorrectly structured XML document.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Linq.XContainer.Add%2A?displayProperty=nameWithType&gt;</ph>, если объект или объекты для добавления приведет к неправильной структурой XML-документа.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>A method that attempts to manipulate the UI from a thread that is not the main or UI thread.</source>
          <target state="translated">Метод, который пытается обработать пользовательский Интерфейс из потока, не являющегося главным или потоком пользовательского интерфейса.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>Because the <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> exception can be thrown in a wide variety of circumstances, it is important to read the exception message returned by the <ph id="ph2">&lt;xref:System.Exception.Message%2A&gt;</ph> property.</source>
          <target state="translated">Поскольку <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> исключение может выдаваться в различных ситуациях, очень важно прочитать сообщение об исключении, возвращенных <ph id="ph2">&lt;xref:System.Exception.Message%2A&gt;</ph> свойство.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>In this section:</source>
          <target state="translated">Содержание</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source><bpt id="p1">[</bpt>Some common causes of InvalidOperationException exceptions<ept id="p1">](#Causes)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1">[</bpt>Некоторые основные причины исключения InvalidOperationException<ept id="p1">](#Causes)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source><bpt id="p1">[</bpt>Updating a UI thread from a non-UI thread<ept id="p1">](#UI)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Обновление потока пользовательского интерфейса из потока без пользовательского интерфейса<ept id="p1">](#UI)</ept></target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source><bpt id="p1">[</bpt>Changing a collection while iterating it<ept id="p1">](#Iterating)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Изменение коллекции во время итерации его<ept id="p1">](#Iterating)</ept></target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source><bpt id="p1">[</bpt>Sorting an array or collection whose objects cannot be compared<ept id="p1">](#Sorting)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Сортировка массива или коллекции нельзя сравнивать, объекты<ept id="p1">](#Sorting)</ept></target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source><bpt id="p1">[</bpt>Casting a Nullable<ph id="ph1">&amp;lt;</ph>T<ph id="ph2">&amp;gt;</ph> that is null to its underlying type<ept id="p1">](#Nullable)</ept><ph id="ph3"> </ph></source>
          <target state="translated"><bpt id="p1">[</bpt>Приведение Nullable<ph id="ph1">&amp;lt;</ph>T<ph id="ph2">&amp;gt;</ph> значения NULL к его базовому типу<ept id="p1">](#Nullable)</ept><ph id="ph3"> </ph></target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source><bpt id="p1">[</bpt>Calling a System.Linq.Enumerable method on an empty collection<ept id="p1">](#Empty)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Вызов метода System.Linq.Enumerable для пустой коллекции<ept id="p1">](#Empty)</ept></target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source><bpt id="p1">[</bpt>Calling Enumerable.Single or Enumerable.SingleOrDefault on a sequence without one element<ept id="p1">](#Single)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Вызов Enumerable.Single или Enumerable.SingleOrDefault последовательность без одного элемента<ept id="p1">](#Single)</ept></target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source><bpt id="p1">[</bpt>Dynamic cross-application domain field access<ept id="p1">](#Emit)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Доступ к полю динамического нескольких приложений домена<ept id="p1">](#Emit)</ept></target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source><bpt id="p1">[</bpt>Throwing an InvalidOperationException exception<ept id="p1">](#Throwing)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Создает исключение InvalidOperationException<ept id="p1">](#Throwing)</ept></target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source><bpt id="p1">[</bpt>Miscellaneous information<ept id="p1">](#Misc)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Прочие сведения<ept id="p1">](#Misc)</ept></target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>Some common causes of InvalidOperationException exceptions</source>
          <target state="translated">Некоторые основные причины исключения InvalidOperationException</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>The following sections show how some common cases in which in <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> exception is thrown in an app.</source>
          <target state="translated">В следующих разделах показано, как некоторые наиболее распространенные случаи, в котором в <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> исключения в приложении.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>How you handle the issue depends on the specific situation.</source>
          <target state="translated">Способ решения проблемы зависит от конкретной ситуации.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>Most commonly, however, the exception results from developer error, and the <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> exception can be anticipated and avoided.</source>
          <target state="translated">Чаще всего, однако исключение приводит к ошибки разработчика и <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> исключения можно ожидать и избегать.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>Updating a UI thread from a non-UI thread</source>
          <target state="translated">Обновление потока пользовательского интерфейса из потока без пользовательского интерфейса</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>Often, worker threads are used to perform some background work that involves gathering data to be displayed in an application's user interface.</source>
          <target state="translated">Часто рабочие потоки используются для выполнения некоторых фоновой работы необходимо собрать данные, отображаемые в пользовательском интерфейсе приложения.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>However.</source>
          <target state="translated">Тем не менее.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>most GUI (graphical user interface) application frameworks for the .NET Framework, such as Windows Forms and Windows Presentation Foundation (WPF),  let you access GUI objects only from the thread that creates and manages the UI (the Main or UI thread).</source>
          <target state="translated">Большинство платформ приложений GUI (графический интерфейс пользователя) для платформы .NET Framework, например Windows Forms и Windows Presentation Foundation (WPF), позволяют получить доступ к объектам графического интерфейса пользователя только из потока, который создает и управляет пользовательского интерфейса (поток Main или пользовательского интерфейса).</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>An <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> is thrown when you try to access a UI element from a thread other than the UI thread.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> Возникает при попытке получить доступ к элементу пользовательского интерфейса из потока, поток пользовательского интерфейса.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>The text of the exception message is shown in the following table.</source>
          <target state="translated">В следующей таблице показан текст сообщений об исключениях.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>Application Type</source>
          <target state="translated">Тип приложения</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>Message</source>
          <target state="translated">Сообщение</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>WPF app</source>
          <target state="translated">Приложения WPF</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source><bpt id="p1">**</bpt>The calling thread cannot access this object because a different thread owns it.<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Вызывающий поток не доступ к этому объекту, так как им владеет другой поток.<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>UWP app</source>
          <target state="translated">Приложение UWP</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source><bpt id="p1">**</bpt>The application called an interface that was marshalled for a different thread.<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Приложение вызвало интерфейс, который был маршалирован для другого потока.<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>Windows Forms app</source>
          <target state="translated">Приложение Windows Forms</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source><bpt id="p1">**</bpt>Cross-thread operation not valid: Control 'TextBox1' accessed from a thread other than the thread it was created on.<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Недопустимая операция в нескольких потоках: элемент управления TextBox1 из потока, в котором он был создан.<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>UI frameworks for the .NET Framework implement a <bpt id="p1">*</bpt>dispatcher<ept id="p1">*</ept> pattern that includes a method to check whether a call to a member of a UI element is being executed on the UI thread, and other methods to schedule the call on the UI thread:</source>
          <target state="translated">Платформы пользовательского интерфейса для платформы .NET Framework реализуют <bpt id="p1">*</bpt>диспетчер<ept id="p1">*</ept> шаблон, который содержит метод для проверки, выполняется ли вызов члена элемента пользовательского интерфейса в потоке пользовательского интерфейса, а другие методы для планирования вызова в потоке пользовательского интерфейса:</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>In WPF apps, call the <ph id="ph1">&lt;xref:System.Windows.Threading.Dispatcher.CheckAccess%2A?displayProperty=nameWithType&gt;</ph> method to determine if a method is running on a non-UI thread.</source>
          <target state="translated">В приложениях WPF, вызовите <ph id="ph1">&lt;xref:System.Windows.Threading.Dispatcher.CheckAccess%2A?displayProperty=nameWithType&gt;</ph> метод, чтобы определить, выполняется ли метод в потоке без пользовательского интерфейса.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>It returns <ph id="ph1">`true`</ph> if the method is running on the UI thread and <ph id="ph2">`false`</ph> otherwise.</source>
          <target state="translated">Он возвращает <ph id="ph1">`true`</ph> Если метод выполняется в потоке пользовательского интерфейса и <ph id="ph2">`false`</ph> в противном случае.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>Call one of the overloads of the <ph id="ph1">&lt;xref:System.Windows.Threading.Dispatcher.Invoke%2A?displayProperty=nameWithType&gt;</ph> method to schedule the call on the UI thread.</source>
          <target state="translated">Вызовите одну из перегрузок <ph id="ph1">&lt;xref:System.Windows.Threading.Dispatcher.Invoke%2A?displayProperty=nameWithType&gt;</ph> метод для планирования вызова в потоке пользовательского интерфейса.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>In UWP apps, call the <bpt id="p1">[</bpt>CoreDispatcher.HasThreadAccess<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/windows.ui.core.coredispatcher.hasthreadaccess.aspx)</ept> method to determine if a method is running on a non-UI thread.</source>
          <target state="translated">В приложениях UWP вызвать <bpt id="p1">[</bpt>CoreDispatcher.HasThreadAccess<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/windows.ui.core.coredispatcher.hasthreadaccess.aspx)</ept> метод, чтобы определить, выполняется ли метод в потоке без пользовательского интерфейса.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>Call the  <bpt id="p1">[</bpt>CoreDispatcher.RunAsync<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/windows.ui.core.coredispatcher.runasync.aspx)</ept> method to execute a delegate that updates the UI thread.</source>
          <target state="translated">Вызовите <bpt id="p1">[</bpt>CoreDispatcher.RunAsync<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/windows.ui.core.coredispatcher.runasync.aspx)</ept> метод для выполнения делегата, который обновляет поток пользовательского интерфейса.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>Use the</source>
          <target state="translated">Используйте команду</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>In Windows Forms apps, use the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.InvokeRequired%2A?displayProperty=nameWithType&gt;</ph> property to determine if a method is running on a non-UI thread.</source>
          <target state="translated">В приложениях Windows Forms с помощью <ph id="ph1">&lt;xref:System.Windows.Forms.Control.InvokeRequired%2A?displayProperty=nameWithType&gt;</ph> свойства, чтобы определить, выполняется ли метод в потоке без пользовательского интерфейса.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>Call one of the overloads of the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Invoke%2A?displayProperty=nameWithType&gt;</ph> method to execute a delegate that updates the UI thread.</source>
          <target state="translated">Вызовите одну из перегрузок <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Invoke%2A?displayProperty=nameWithType&gt;</ph> метод для выполнения делегата, который обновляет поток пользовательского интерфейса.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>The following examples illustrate the <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> exception that is thrown when you attempt to update a UI element from a thread other than the thread that created it.</source>
          <target state="translated">В следующих примерах показаны <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> исключение, возникающее при попытке обновить элемент пользовательского интерфейса из потока, поток, который его создал.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>Each example requires that you create two controls:</source>
          <target state="translated">В каждом примере необходимо создать два элемента управления:</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>A text box control named <ph id="ph1">`textBox1`</ph>.</source>
          <target state="translated">Элемент управления текстовым полем с именем <ph id="ph1">`textBox1`</ph>.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>In a Windows Forms app, you should set its <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox.Multiline%2A&gt;</ph> property to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">В приложении Windows Forms, необходимо задать его <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox.Multiline%2A&gt;</ph> свойства <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>A button  control named <ph id="ph1">`threadExampleBtn`</ph>.</source>
          <target state="translated">Элемент управления button с именем <ph id="ph1">`threadExampleBtn`</ph>.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>The example provides a handler, <ph id="ph1">`ThreadsExampleBtn_Click`</ph>, for the button's <ph id="ph2">`Click`</ph> event.</source>
          <target state="translated">Обработчик, приведена в примере <ph id="ph1">`ThreadsExampleBtn_Click`</ph>, кнопки <ph id="ph2">`Click`</ph> событий.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>In each case, the <ph id="ph1">`threadExampleBtn_Click`</ph> event handler calls the <ph id="ph2">`DoSomeWork`</ph> method twice.</source>
          <target state="translated">В каждом случае <ph id="ph1">`threadExampleBtn_Click`</ph> вызовов обработчика событий <ph id="ph2">`DoSomeWork`</ph> метод дважды.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>The first call runs synchronously and succeeds.</source>
          <target state="translated">Первый вызов выполняется синхронно и выполняется успешно.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>But the second call, because it runs asynchronously on a thread pool thread, attempts to update the UI from a non-UI thread.</source>
          <target state="translated">Но второй вызов, так как выполняется асинхронно в потоке пула потоков, использовать для обновления пользовательского интерфейса из потока без пользовательского интерфейса.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>This results in a <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> exception.</source>
          <target state="translated">Это приведет к <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> исключения.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>WPF and UWP apps</source>
          <target state="translated">Приложения WPF и UWP</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>The following version of the <ph id="ph1">`DoSomeWork`</ph> method eliminates the exception in a WPF app.</source>
          <target state="translated">В следующей версии <ph id="ph1">`DoSomeWork`</ph> метод устраняющий исключение в приложении WPF.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>The following version of the <ph id="ph1">`DoSomeWork`</ph> method eliminates the exception in a UWP app.</source>
          <target state="translated">В следующей версии <ph id="ph1">`DoSomeWork`</ph> метод устраняющий исключение в приложении UWP.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>Windows Forms apps</source>
          <target state="translated">Приложения Windows Forms</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>The following version of the <ph id="ph1">`DoSomeWork`</ph> method eliminates the exception in a Windows Forms app.</source>
          <target state="translated">В следующей версии <ph id="ph1">`DoSomeWork`</ph> метод устраняющий исключение в приложении Windows Forms.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>Changing a collection while iterating it</source>
          <target state="translated">Изменение коллекции во время итерации его</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>The <ph id="ph1">`foreach`</ph> statement in C# or <ph id="ph2">`For Each`</ph> statement in Visual Basic is used to iterate the members of a collection and to read or modify its individual elements.</source>
          <target state="translated"><ph id="ph1">`foreach`</ph> Инструкции на языке C# или <ph id="ph2">`For Each`</ph> инструкции на языке Visual Basic используется для итерации элементов коллекции, а также считывать или изменять его отдельные элементы.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>However, it can't be used to add or remove items from the collection.</source>
          <target state="translated">Однако он не может использоваться для добавления или удаления элементов из коллекции.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>Doing this throws an  <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> exception with a message that is similar to, "<bpt id="p1">**</bpt>Collection was modified; enumeration operation may not execute.<ept id="p1">**</ept>"</source>
          <target state="translated">Это порождает это <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> исключение с сообщением об ошибке, «<bpt id="p1">**</bpt>коллекция была изменена; Невозможно выполнить операцию перечисления. <ept id="p1">**</ept>"</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>The following example iterates a collection of integers attempts to add the square of each integer to the collection.</source>
          <target state="translated">Следующий пример проходит попыток коллекция целых чисел, добавляемый в коллекцию квадрата каждого целого числа.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>The example throws an <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> with the first call to the <ph id="ph2">&lt;xref:System.Collections.Generic.List%601.Add%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">В примере возникают исключения <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> с первого вызова <ph id="ph2">&lt;xref:System.Collections.Generic.List%601.Add%2A?displayProperty=nameWithType&gt;</ph> метод.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>You can eliminate the exception in one of two ways, depending on your application logic:</source>
          <target state="translated">Можно избежать исключений в одном из двух способов в зависимости от логики приложения:</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>If elements must be added to the collection while iterating it, you can iterate it by index using the <ph id="ph1">`for`</ph> statement instead of <ph id="ph2">`foreach`</ph> or <ph id="ph3">`For Each`</ph>.</source>
          <target state="translated">Элементы должны быть добавлены в коллекцию при последовательном переходе его, можно выполнять итерацию с помощью индекса <ph id="ph1">`for`</ph> инструкции, а не <ph id="ph2">`foreach`</ph> или <ph id="ph3">`For Each`</ph>.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>The following example uses the for statement to add the square of numbers in the collection to the collection.</source>
          <target state="translated">В следующем примере используется для инструкции добавить квадрат чисел из коллекции в коллекцию.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>Note that you must establish the number of iterations before iterating the collection either by using a counter inside the loop that will exit the loop appropraitely, by iterating backward, from <ph id="ph1">`Count`</ph> - 1 to 0, or, as the example does, by assigning the number of elements in the array to a variable and using it to establish the upper bound of the loop.</source>
          <target state="translated">Обратите внимание, что перед итерации коллекции, либо путем использования счетчика цикла для выхода из цикла appropraitely, проходя назад, необходимо установить количество итераций из <ph id="ph1">`Count`</ph> - 1 на 0, или, как в примере выполняется путем назначения номер элементов в массиве для переменной и использовать его для установки верхней границы цикла.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>Otherwise, if an element is added to the collection on every iteration, an endless loop results.</source>
          <target state="translated">В противном случае если элемент добавляется в коллекцию для каждой итерации, результаты бесконечного цикла.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>If it is not necessary to add elements to the collection while iterating it, you can store the elements to be added in a temporary collection that you add when iterating the collection has finished.</source>
          <target state="translated">Если нет необходимости добавлять элементы в коллекцию при последовательном переходе его, можно сохранить элементов для добавления в временную коллекцию, можно добавить после завершения итерации коллекции.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>The following example uses this approach to add the square of numbers in a collection to a temporary collection, and then to combine the collections into a single array object.</source>
          <target state="translated">В следующем примере используется этот подход для добавления квадрат чисел из коллекции временную коллекцию, а затем объединить коллекций в один объект массива.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>Sorting an array or collection whose objects cannot be compared</source>
          <target state="translated">Сортировка массива или коллекции нельзя сравнивать, объекты</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>General-purpose sorting methods, such as the <ph id="ph1">&lt;xref:System.Array.Sort%28System.Array%29?displayProperty=nameWithType&gt;</ph> method or the <ph id="ph2">&lt;xref:System.Collections.Generic.List%601.Sort?displayProperty=nameWithType&gt;</ph> method, usually require that at least one of the objects to be sorted implement the <ph id="ph3">&lt;xref:System.IComparable%601&gt;</ph> or the <ph id="ph4">&lt;xref:System.IComparable&gt;</ph> interface.</source>
          <target state="translated">Общего назначения, сортировка методы, такие как <ph id="ph1">&lt;xref:System.Array.Sort%28System.Array%29?displayProperty=nameWithType&gt;</ph> метод или <ph id="ph2">&lt;xref:System.Collections.Generic.List%601.Sort?displayProperty=nameWithType&gt;</ph> метод, обычно требуется по крайней мере один из объектов, которые должны быть отсортированы реализовать <ph id="ph3">&lt;xref:System.IComparable%601&gt;</ph> или <ph id="ph4">&lt;xref:System.IComparable&gt;</ph> интерфейса.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>If not, the collection or array cannot be sorted, and the method throws an  <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> exception.</source>
          <target state="translated">Если нет, коллекции или массива не могут быть отсортированы и вызывает метод <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> исключение.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>The following example defines a <ph id="ph1">`Person`</ph> class, stores two <ph id="ph2">`Person`</ph> objects in a generic <ph id="ph3">&lt;xref:System.Collections.Generic.List%601&gt;</ph> object, and attempts to sort them.</source>
          <target state="translated">В следующем примере определяется <ph id="ph1">`Person`</ph> класса хранилищ двумя <ph id="ph2">`Person`</ph> объектов в универсальный <ph id="ph3">&lt;xref:System.Collections.Generic.List%601&gt;</ph> объекта и попытки их сортировки.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>As the output from the example shows, the call to the <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Sort?displayProperty=nameWithType&gt;</ph> method throws an <ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph>.</source>
          <target state="translated">Как видно в результатах показано в примере вызов <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Sort?displayProperty=nameWithType&gt;</ph> вызывает исключение <ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>You can eliminate the exception in any of three ways:</source>
          <target state="translated">Можно устранить исключение в любом из трех способов:</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>If you can own the type that you are trying to sort (that is, if you control its source code), you can modify it to implement the <ph id="ph1">&lt;xref:System.IComparable%601&gt;</ph> or the <ph id="ph2">&lt;xref:System.IComparable&gt;</ph> interface.</source>
          <target state="translated">Если на вашем тип, который вы пытаетесь сортировки (то есть, если вы можете управлять его исходный код), можно изменить его, чтобы реализовать <ph id="ph1">&lt;xref:System.IComparable%601&gt;</ph> или <ph id="ph2">&lt;xref:System.IComparable&gt;</ph> интерфейса.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>This requires that you implement either the <ph id="ph1">&lt;xref:System.IComparable%601.CompareTo%2A?displayProperty=nameWithType&gt;</ph> or the <ph id="ph2">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph> method.</source>
          <target state="translated">Для этого необходимо реализовать либо <ph id="ph1">&lt;xref:System.IComparable%601.CompareTo%2A?displayProperty=nameWithType&gt;</ph> или <ph id="ph2">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph> метод.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>Adding an interface implementation to an existing type is not a breaking change.</source>
          <target state="translated">Добавление существующего типа реализации интерфейса не является критическим изменением.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>The following example uses this approach to provide an <ph id="ph1">&lt;xref:System.IComparable%601&gt;</ph> implementation  for the <ph id="ph2">`Person`</ph> class.</source>
          <target state="translated">В следующем примере используется этот подход для предоставления <ph id="ph1">&lt;xref:System.IComparable%601&gt;</ph> реализацию <ph id="ph2">`Person`</ph> класса.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>You can still call the collection or array's general sorting method and, as the output from the example shows, the collection sorts successfully.</source>
          <target state="translated">Можно по-прежнему вызывать коллекции или массива общий способ сортировки, и, как видно из примера, коллекции сортирует успешно.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>If you cannot modify the source code for the type you are trying to sort, you can define a special-purpose sorting class that implements the <ph id="ph1">&lt;xref:System.Collections.Generic.IComparer%601&gt;</ph> interface.</source>
          <target state="translated">Если не удается изменить исходный код для типа, который вы пытаетесь сортировки, можно определить специальные сортировки класс, реализующий <ph id="ph1">&lt;xref:System.Collections.Generic.IComparer%601&gt;</ph> интерфейса.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>You can call an overload of the <ph id="ph1">`Sort`</ph> method that includes an  <ph id="ph2">&lt;xref:System.Collections.Generic.IComparer%601&gt;</ph> parameter.</source>
          <target state="translated">Можно вызвать перегрузку <ph id="ph1">`Sort`</ph> метод, который включает в себя <ph id="ph2">&lt;xref:System.Collections.Generic.IComparer%601&gt;</ph> параметра.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>This approach is especially useful if you want to develop a specialized sorting class that can sort objects based on multiple criteria.</source>
          <target state="translated">Этот подход особенно полезен в тех случаях, если требуется создавать специализированный класс сортировки, можно сортировать объекты на основе нескольких критериев.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>The following example uses the approach by developing a custom <ph id="ph1">`PersonComparer`</ph> class that is used to sort <ph id="ph2">`Person`</ph> collections.</source>
          <target state="translated">В следующем примере используется подход по разработке пользовательского <ph id="ph1">`PersonComparer`</ph> класс, используемый для сортировки <ph id="ph2">`Person`</ph> коллекций.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>It then passes an instance of this class to the <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Sort%28System.Collections.Generic.IComparer%7B%600%7D%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Затем инфраструктура службы передает экземпляр этого класса для <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Sort%28System.Collections.Generic.IComparer%7B%600%7D%29?displayProperty=nameWithType&gt;</ph> метод.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>If you cannot modify the source code for the type you are trying to sort, you can create a  <ph id="ph1">&lt;xref:System.Comparison%601&gt;</ph> delegate to perform the sorting.</source>
          <target state="translated">Если не удается изменить исходный код для типа требуется отсортировать, можно создать <ph id="ph1">&lt;xref:System.Comparison%601&gt;</ph> делегата для выполнения сортировки.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>The delegate signature is</source>
          <target state="translated">Сигнатура делегата:</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>The following example uses the approach by defining a  <ph id="ph1">`PersonComparison`</ph> method that matches the  <ph id="ph2">&lt;xref:System.Comparison%601&gt;</ph> delegate signature.</source>
          <target state="translated">В следующем примере используется подход, определив <ph id="ph1">`PersonComparison`</ph> метод, который соответствует <ph id="ph2">&lt;xref:System.Comparison%601&gt;</ph> сигнатуре делегата.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>It then passes this delegate to the <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Sort%28System.Comparison%7B%600%7D%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Затем он передает этот делегат для <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Sort%28System.Comparison%7B%600%7D%29?displayProperty=nameWithType&gt;</ph> метод.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>Casting a Nullable<ph id="ph1">\&lt;</ph>T&gt; that is null to its underlying type</source>
          <target state="translated">Приведение Nullable<ph id="ph1">\&lt;</ph>T &gt;, null к его базовому типу</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>Attempting to cast a <ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph> value that is <ph id="ph2">`null`</ph> to its underlying type throws an <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph> exception  and displays the error message, "<bpt id="p1">**</bpt>Nullable object must have a value.<ept id="p1">**</ept></source>
          <target state="translated">Попытка приведения <ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph> значение, равное <ph id="ph2">`null`</ph> к его базовому типу вызывает <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph> исключение и отображает сообщение об ошибке «<bpt id="p1">**</bpt>нулевой объект должен иметь значение.<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>The following example throws an <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> exception  when it attempts to iterate an array that includes a <ph id="ph2">`Nullable(Of Integer)`</ph> value.</source>
          <target state="translated">В следующем примере показано возникновение <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> исключение при попытке итерация массива, включающего <ph id="ph2">`Nullable(Of Integer)`</ph> значение.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>To prevent the exception:</source>
          <target state="translated">Чтобы предотвратить возникновение исключения:</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>Use the <ph id="ph1">&lt;xref:System.Nullable%601.HasValue%2A?displayProperty=nameWithType&gt;</ph> property to select only those elements that are not <ph id="ph2">`null`</ph>.</source>
          <target state="translated">Используйте <ph id="ph1">&lt;xref:System.Nullable%601.HasValue%2A?displayProperty=nameWithType&gt;</ph> свойство, чтобы выбрать только те элементы, которые не являются <ph id="ph2">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>Call one of the <ph id="ph1">&lt;xref:System.Nullable%601.GetValueOrDefault%2A?displayProperty=nameWithType&gt;</ph> overloads to provide a default value for a <ph id="ph2">`null`</ph> value.</source>
          <target state="translated">Вызовите один из <ph id="ph1">&lt;xref:System.Nullable%601.GetValueOrDefault%2A?displayProperty=nameWithType&gt;</ph> перегрузок, чтобы указать значение по умолчанию для <ph id="ph2">`null`</ph> значение.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>The following example does both to avoid the  <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> exception.</source>
          <target state="translated">В следующем примере выполняется как во избежание <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> исключение.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>Calling a System.Linq.Enumerable method on an empty collection</source>
          <target state="translated">Вызов метода System.Linq.Enumerable для пустой коллекции</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>The <ph id="ph1">&lt;xref:System.Linq.Enumerable.Aggregate%2A?displayProperty=nameWithType&gt;</ph>, <ph id="ph2">&lt;xref:System.Linq.Enumerable.Average%2A?displayProperty=nameWithType&gt;</ph>, <ph id="ph3">&lt;xref:System.Linq.Enumerable.First%2A?displayProperty=nameWithType&gt;</ph>, <ph id="ph4">&lt;xref:System.Linq.Enumerable.Last%2A?displayProperty=nameWithType&gt;</ph>, <ph id="ph5">&lt;xref:System.Linq.Enumerable.Max%2A?displayProperty=nameWithType&gt;</ph>, <ph id="ph6">&lt;xref:System.Linq.Enumerable.Min%2A?displayProperty=nameWithType&gt;</ph>,  <ph id="ph7">&lt;xref:System.Linq.Enumerable.Single%2A?displayProperty=nameWithType&gt;</ph>, and <ph id="ph8">&lt;xref:System.Linq.Enumerable.SingleOrDefault%2A?displayProperty=nameWithType&gt;</ph> methods perform operations on a sequence and return a single result.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Linq.Enumerable.Aggregate%2A?displayProperty=nameWithType&gt;</ph>, <ph id="ph2">&lt;xref:System.Linq.Enumerable.Average%2A?displayProperty=nameWithType&gt;</ph>, <ph id="ph3">&lt;xref:System.Linq.Enumerable.First%2A?displayProperty=nameWithType&gt;</ph>, <ph id="ph4">&lt;xref:System.Linq.Enumerable.Last%2A?displayProperty=nameWithType&gt;</ph>, <ph id="ph5">&lt;xref:System.Linq.Enumerable.Max%2A?displayProperty=nameWithType&gt;</ph>, <ph id="ph6">&lt;xref:System.Linq.Enumerable.Min%2A?displayProperty=nameWithType&gt;</ph>, <ph id="ph7">&lt;xref:System.Linq.Enumerable.Single%2A?displayProperty=nameWithType&gt;</ph>, И <ph id="ph8">&lt;xref:System.Linq.Enumerable.SingleOrDefault%2A?displayProperty=nameWithType&gt;</ph> методы выполнения операций над последовательностью и возвращают один результат.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>Some overloads of these methods throw an <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> exception when the sequence is empty, while other overloads return <ph id="ph2">`null`</ph>.</source>
          <target state="translated">Некоторые перегрузки этих методов создают <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> исключение, если последовательность является пустой, пока другие перегрузки возвращают <ph id="ph2">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>The <ph id="ph1">&lt;xref:System.Linq.Enumerable.SingleOrDefault%2A?displayProperty=nameWithType&gt;</ph> method also throws an <ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph> exception when the sequence contains more than one element.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Linq.Enumerable.SingleOrDefault%2A?displayProperty=nameWithType&gt;</ph> Метод также вызывает <ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph> исключение, если последовательность содержит более одного элемента.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>Most of the methods that throw an <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> exception are overloads.</source>
          <target state="translated">Большинство методов, которые вызывают <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> исключения являются перегрузками.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>Be sure that you understand the behavior of the overload that you choose.</source>
          <target state="translated">Убедитесь, что вы понимаете поведение выбираемой перегрузки.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>The following table lists the exception messages from the <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> exception objects thrown by calls to some <ph id="ph2">&lt;xref:System.Linq.Enumerable?displayProperty=nameWithType&gt;</ph> methods.</source>
          <target state="translated">В следующей таблице перечислены сообщения об исключениях из <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> объектов исключений, вызванных вызовы некоторых <ph id="ph2">&lt;xref:System.Linq.Enumerable?displayProperty=nameWithType&gt;</ph> методы.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>Method</source>
          <target state="translated">Метод</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>Message</source>
          <target state="translated">Сообщение</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source><bpt id="p1">**</bpt>Sequence contains no elements<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Последовательность не содержит элементов<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source><bpt id="p1">**</bpt>Sequence contains no matching element<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Последовательность не содержит совпадающие элементы<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source><bpt id="p1">**</bpt>Sequence contains more than one matching element<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Последовательность содержит более одного совпадающего элемента<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>How you eliminate or handle the exception depends on your application's assumptions and on the particular method you call.</source>
          <target state="translated">Как исключить или обработать исключение зависит от приложения предположений и конкретный метод, вызываемый.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>When you deliberately call one of these methods without checking for an empty sequence, you are assuming that the sequence is not empty, and that an empty sequence is an unexpected occurrence.</source>
          <target state="translated">Намеренно, при вызове одного из этих методов без проверки для пустой последовательности предполагается, что последовательность не пуста и что пустая последовательностью не ожидается.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>In this case, catching or rethrowing the exception is appropriate .</source>
          <target state="translated">В этом случае подходит перехват или повторное создание исключения.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>If your failure to check for an empty sequence was inadvertent, you can  call one of the overloads of the <ph id="ph1">&lt;xref:System.Linq.Enumerable.Any%2A?displayProperty=nameWithType&gt;</ph> overload to determine whether a sequence contains any elements.</source>
          <target state="translated">В случае непреднамеренного ошибкой для проверки для пустой последовательности можно вызвать одну из перегрузок <ph id="ph1">&lt;xref:System.Linq.Enumerable.Any%2A?displayProperty=nameWithType&gt;</ph> перегрузку, чтобы определить, содержит ли последовательность какие-либо элементы.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>Calling the <ph id="ph1">&lt;xref:System.Linq.Enumerable.Any%60%601%28System.Collections.Generic.IEnumerable%7B%60%600%7D%2CSystem.Func%7B%60%600%2CSystem.Boolean%7D%29?displayProperty=nameWithType&gt;</ph> method before generating a sequence can improve performance if the data to be processed might contain a large number of elements or if operation that generates the sequence is expensive.</source>
          <target state="translated">Вызов <ph id="ph1">&lt;xref:System.Linq.Enumerable.Any%60%601%28System.Collections.Generic.IEnumerable%7B%60%600%7D%2CSystem.Func%7B%60%600%2CSystem.Boolean%7D%29?displayProperty=nameWithType&gt;</ph> метод перед созданием последовательности может повысить производительность, если для обработки данных может содержать большое количество элементов или если операцию, которая создает последовательность, является дорогостоящей.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>If you've called a method such as <ph id="ph1">&lt;xref:System.Linq.Enumerable.First%2A?displayProperty=nameWithType&gt;</ph>, <ph id="ph2">&lt;xref:System.Linq.Enumerable.Last%2A?displayProperty=nameWithType&gt;</ph>, or <ph id="ph3">&lt;xref:System.Linq.Enumerable.Single%2A?displayProperty=nameWithType&gt;</ph>, you can substitute an alternate method, such as <ph id="ph4">&lt;xref:System.Linq.Enumerable.FirstOrDefault%2A?displayProperty=nameWithType&gt;</ph>, <ph id="ph5">&lt;xref:System.Linq.Enumerable.LastOrDefault%2A?displayProperty=nameWithType&gt;</ph>, or  <ph id="ph6">&lt;xref:System.Linq.Enumerable.SingleOrDefault%2A?displayProperty=nameWithType&gt;</ph>, that returns a default value instead of a member of the sequence.</source>
          <target state="translated">Если вызван метод, такие как <ph id="ph1">&lt;xref:System.Linq.Enumerable.First%2A?displayProperty=nameWithType&gt;</ph>, <ph id="ph2">&lt;xref:System.Linq.Enumerable.Last%2A?displayProperty=nameWithType&gt;</ph>, или <ph id="ph3">&lt;xref:System.Linq.Enumerable.Single%2A?displayProperty=nameWithType&gt;</ph>, можно заменить альтернативные методы, такие как <ph id="ph4">&lt;xref:System.Linq.Enumerable.FirstOrDefault%2A?displayProperty=nameWithType&gt;</ph>, <ph id="ph5">&lt;xref:System.Linq.Enumerable.LastOrDefault%2A?displayProperty=nameWithType&gt;</ph>, или <ph id="ph6">&lt;xref:System.Linq.Enumerable.SingleOrDefault%2A?displayProperty=nameWithType&gt;</ph>, возвращает значение по умолчанию вместо элемента последовательности.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>The examples provide additional detail.</source>
          <target state="translated">Примеры приведены дополнительные сведения.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Linq.Enumerable.Average%2A?displayProperty=nameWithType&gt;</ph> method to compute the average of a sequence whose values are greater than 4.</source>
          <target state="translated">В следующем примере используется <ph id="ph1">&lt;xref:System.Linq.Enumerable.Average%2A?displayProperty=nameWithType&gt;</ph> метод вычисляет среднее значение для последовательности, значения которых больше, чем 4.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>Since no values from the original array exceed 4, no values are included in the sequence, and the method throws an <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> exception.</source>
          <target state="translated">Поскольку значения из исходного массива не должна превышать 4, значения не включаются в последовательности и вызывает метод <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> исключение.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>The exception can be eliminated by calling the <ph id="ph1">&lt;xref:System.Linq.Enumerable.Any%2A&gt;</ph> method to determine whether the sequence contains any elements before calling the method that processes the sequence, as the following example shows.</source>
          <target state="translated">Исключение, можно устранить путем вызова <ph id="ph1">&lt;xref:System.Linq.Enumerable.Any%2A&gt;</ph> метод, чтобы определить, является ли последовательность содержит какие-либо элементы до вызова метода, который обрабатывает последовательности, как показано в следующем примере.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>The <ph id="ph1">&lt;xref:System.Linq.Enumerable.First%2A?displayProperty=nameWithType&gt;</ph> method returns the first item in a sequence or the first element in a sequence that satisfies a specified condition.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Linq.Enumerable.First%2A?displayProperty=nameWithType&gt;</ph> Метод возвращает первый элемент в последовательности или первый элемент в последовательности, удовлетворяющий указанному условию.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>If the sequence is empty and therefore does not have a first element, it throws an <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> exception.</source>
          <target state="translated">Если последовательность является пустым и поэтому не первый элемент, он выдает <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> исключение.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>In the following example, the <ph id="ph1">&lt;xref:System.Linq.Enumerable.First%60%601%28System.Collections.Generic.IEnumerable%7B%60%600%7D%2CSystem.Func%7B%60%600%2CSystem.Boolean%7D%29?displayProperty=nameWithType&gt;</ph> method throws an <ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph> exception because the dbQueryResults array doesn't contain an element greater than 4.</source>
          <target state="translated">В следующем примере <ph id="ph1">&lt;xref:System.Linq.Enumerable.First%60%601%28System.Collections.Generic.IEnumerable%7B%60%600%7D%2CSystem.Func%7B%60%600%2CSystem.Boolean%7D%29?displayProperty=nameWithType&gt;</ph> вызывает исключение <ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph> исключение, так как массив dbQueryResults не содержит элемент больше, чем 4.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>You can call the <ph id="ph1">&lt;xref:System.Linq.Enumerable.FirstOrDefault%2A?displayProperty=nameWithType&gt;</ph> method instead of <ph id="ph2">&lt;xref:System.Linq.Enumerable.First%2A?displayProperty=nameWithType&gt;</ph> to return a specified or default value.</source>
          <target state="translated">Можно вызвать <ph id="ph1">&lt;xref:System.Linq.Enumerable.FirstOrDefault%2A?displayProperty=nameWithType&gt;</ph> вместо метода <ph id="ph2">&lt;xref:System.Linq.Enumerable.First%2A?displayProperty=nameWithType&gt;</ph> для возвращения заданного значения или значение по умолчанию.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>If the method does not find a first element in the sequence, it returns  the default value for that data type.</source>
          <target state="translated">Если метод не находит первый элемент в последовательности, возвращается значение по умолчанию для этого типа данных.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>The default value is <ph id="ph1">`null`</ph> for a reference type, zero for a numeric data type, and <ph id="ph2">&lt;xref:System.DateTime.MinValue?displayProperty=nameWithType&gt;</ph> for the <ph id="ph3">&lt;xref:System.DateTime&gt;</ph> type.</source>
          <target state="translated">Значение по умолчанию — <ph id="ph1">`null`</ph> для ссылочного типа, ноль для числовым типом данных, и <ph id="ph2">&lt;xref:System.DateTime.MinValue?displayProperty=nameWithType&gt;</ph> для <ph id="ph3">&lt;xref:System.DateTime&gt;</ph> типа.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>Interpreting the value returned by the <ph id="ph1">&lt;xref:System.Linq.Enumerable.FirstOrDefault%2A?displayProperty=nameWithType&gt;</ph> method is often complicated by the fact that the default value of the type can be a valid value in the sequence.</source>
          <target state="translated">Интерпретация значения, возвращенного <ph id="ph1">&lt;xref:System.Linq.Enumerable.FirstOrDefault%2A?displayProperty=nameWithType&gt;</ph> метода часто усложняется тем фактом, что значение по умолчанию типа может быть допустимое значение в последовательности.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>In this case, you an call the <ph id="ph1">&lt;xref:System.Linq.Enumerable.Any%2A?displayProperty=nameWithType&gt;</ph> method to determine whether the sequence has valid members before calling the <ph id="ph2">&lt;xref:System.Linq.Enumerable.First%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">В этом случае вы вызова <ph id="ph1">&lt;xref:System.Linq.Enumerable.Any%2A?displayProperty=nameWithType&gt;</ph> метод, чтобы определить, содержит ли последовательность допустимых членов перед вызовом <ph id="ph2">&lt;xref:System.Linq.Enumerable.First%2A?displayProperty=nameWithType&gt;</ph> метод.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>The following example calls the  <ph id="ph1">&lt;xref:System.Linq.Enumerable.FirstOrDefault%60%601%28System.Collections.Generic.IEnumerable%7B%60%600%7D%2CSystem.Func%7B%60%600%2CSystem.Boolean%7D%29?displayProperty=nameWithType&gt;</ph> method to prevent the <ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph> exception thrown in the previous example.</source>
          <target state="translated">В следующем примере вызывается <ph id="ph1">&lt;xref:System.Linq.Enumerable.FirstOrDefault%60%601%28System.Collections.Generic.IEnumerable%7B%60%600%7D%2CSystem.Func%7B%60%600%2CSystem.Boolean%7D%29?displayProperty=nameWithType&gt;</ph> метод, чтобы запретить <ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph> в предыдущем примере создается исключение.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>Calling Enumerable.Single or Enumerable.SingleOrDefault on a sequence without one element</source>
          <target state="translated">Вызов Enumerable.Single или Enumerable.SingleOrDefault последовательность без одного элемента</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>The <ph id="ph1">&lt;xref:System.Linq.Enumerable.Single%2A?displayProperty=nameWithType&gt;</ph> method returns the only element of a sequence, or the only element of a sequence that meets a specified condition.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Linq.Enumerable.Single%2A?displayProperty=nameWithType&gt;</ph> Метод возвращает единственный элемент последовательности или единственный элемент последовательности, который удовлетворяет заданному условию.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>If there are no elements in the sequence, or if there is more than one element , the method throws an <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> exception.</source>
          <target state="translated">Если в последовательности нет элементов, или если имеется более одного элемента, метод вызывает <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> исключение.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>You can use the <ph id="ph1">&lt;xref:System.Linq.Enumerable.SingleOrDefault%2A?displayProperty=nameWithType&gt;</ph> method to return a default value instead of throwing an exception when the sequence contains no elements.</source>
          <target state="translated">Можно использовать <ph id="ph1">&lt;xref:System.Linq.Enumerable.SingleOrDefault%2A?displayProperty=nameWithType&gt;</ph> метод возвратит значение по умолчанию, а не вызывает исключение, если последовательность не содержит элементов.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>However, the <ph id="ph1">&lt;xref:System.Linq.Enumerable.SingleOrDefault%2A?displayProperty=nameWithType&gt;</ph> method still throws an <ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph> exception  when the sequence contains more than one element.</source>
          <target state="translated">Тем не менее <ph id="ph1">&lt;xref:System.Linq.Enumerable.SingleOrDefault%2A?displayProperty=nameWithType&gt;</ph> метод по-прежнему создает <ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph> исключение, если последовательность содержит более одного элемента.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>The following table lists the exception messages from the <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> exception objects thrown by calls to the <ph id="ph2">&lt;xref:System.Linq.Enumerable.Single%2A?displayProperty=nameWithType&gt;</ph> and <ph id="ph3">&lt;xref:System.Linq.Enumerable.SingleOrDefault%2A?displayProperty=nameWithType&gt;</ph> methods.</source>
          <target state="translated">В следующей таблице перечислены сообщения об исключениях из <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> объектов исключений, вызванных вызовы <ph id="ph2">&lt;xref:System.Linq.Enumerable.Single%2A?displayProperty=nameWithType&gt;</ph> и <ph id="ph3">&lt;xref:System.Linq.Enumerable.SingleOrDefault%2A?displayProperty=nameWithType&gt;</ph> методы.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>Method</source>
          <target state="translated">Метод</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>Message</source>
          <target state="translated">Сообщение</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source><bpt id="p1">**</bpt>Sequence contains no matching element<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Последовательность не содержит совпадающие элементы<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source><bpt id="p1">**</bpt>Sequence contains more than one matching element<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Последовательность содержит более одного совпадающего элемента<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>In the following example, the call to the <ph id="ph1">&lt;xref:System.Linq.Enumerable.Single%2A?displayProperty=nameWithType&gt;</ph> method throws an <ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph> exception because the sequence doesn't have an element greater than 4.</source>
          <target state="translated">В следующем примере вызов <ph id="ph1">&lt;xref:System.Linq.Enumerable.Single%2A?displayProperty=nameWithType&gt;</ph> вызывает исключение <ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph> исключение из-за последовательности не будут содержать элемент больше, чем 4.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>The following example attempts to prevent the <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> exception thrown when a sequence is empty by instead calling the <ph id="ph2">&lt;xref:System.Linq.Enumerable.SingleOrDefault%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">В следующем примере предпринимается во избежание <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> исключение, которое выдается, если последовательность является пустой, вместо вызова <ph id="ph2">&lt;xref:System.Linq.Enumerable.SingleOrDefault%2A?displayProperty=nameWithType&gt;</ph> метод.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>However, because this sequence returns multiple elements whose value is greater than 2, it also throws an <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> exception.</source>
          <target state="translated">Тем не менее, поскольку эта последовательность возвращает несколько элементов, значение которого больше 2, он также создает <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> исключение.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>Calling the <ph id="ph1">&lt;xref:System.Linq.Enumerable.Single%2A?displayProperty=nameWithType&gt;</ph> method assumes that either a sequence or the sequence that meets specified criteria contains only one element.</source>
          <target state="translated">Вызов <ph id="ph1">&lt;xref:System.Linq.Enumerable.Single%2A?displayProperty=nameWithType&gt;</ph> метод предполагает, что последовательности или последовательности, которая отвечает указанным критериям содержит только один элемент.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source><ph id="ph1">&lt;xref:System.Linq.Enumerable.SingleOrDefault%2A?displayProperty=nameWithType&gt;</ph> assumes a sequence with zero or one result, but no more.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Linq.Enumerable.SingleOrDefault%2A?displayProperty=nameWithType&gt;</ph> предполагается последовательность с ноль или один результат, но не более.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>If this assumption is a deliberate one on your part and these conditions are not met, rethrowing or catching the resulting <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> is appropriate.</source>
          <target state="translated">Если это предположение используется преднамеренное со стороны пользователя, а эти условия не выполняются, повторное создание или перехват итоговый <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> подходит.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>Otherwise, or if you expect that invalid conditions will occur with some frequency, you should consider using some other <ph id="ph1">&lt;xref:System.Linq.Enumerable&gt;</ph> method, such as <ph id="ph2">&lt;xref:System.Linq.Enumerable.FirstOrDefault%2A&gt;</ph> or <ph id="ph3">&lt;xref:System.Linq.Enumerable.Where%2A&gt;</ph>.</source>
          <target state="translated">В противном случае или если ожидается, что недопустимые условия будут происходить с некоторой частотой, можно использовать другой <ph id="ph1">&lt;xref:System.Linq.Enumerable&gt;</ph> метода, такие как <ph id="ph2">&lt;xref:System.Linq.Enumerable.FirstOrDefault%2A&gt;</ph> или <ph id="ph3">&lt;xref:System.Linq.Enumerable.Where%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>Dynamic cross-application domain field access</source>
          <target state="translated">Доступ к полю динамического нескольких приложений домена</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.Emit.OpCodes.Ldflda?displayProperty=nameWithType&gt;</ph> Microsoft intermediate language (MSIL) instruction throws an <ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph> exception if the object containing the field whose address you are trying to retrieve is not within the application domain in which your code is executing.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Reflection.Emit.OpCodes.Ldflda?displayProperty=nameWithType&gt;</ph> Корпорации Майкрософт, выдает инструкции промежуточного языка (MSIL) <ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph> исключение, если объект, содержащий поле, адрес которого вы пытаетесь получить не входит в домен приложения, в котором выполняется код.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>The address of a field can only be accessed from the application domain in which it resides.</source>
          <target state="translated">Адрес поля может осуществляться только из домена приложения, в котором он находится.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>Throwing an InvalidOperationException exception</source>
          <target state="translated">Создает исключение InvalidOperationException</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>You should throw an <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> exception only when the state of your object for some reason does not support a particular method call.</source>
          <target state="translated">Необходимо вызвать исключение <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> только в том случае, если состояние объекта, для какой-либо причине не поддерживает вызова определенного метода.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>That is, the method call is valid in some circumstances or contexts, but is invalid in others.</source>
          <target state="translated">Т. е вызова метода является допустимым в некоторых случаях или контекстов, но является недопустимым в других.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>If the method invocation failure is due to invalid arguments, then <ph id="ph1">&lt;xref:System.ArgumentException&gt;</ph> or one of its derived classes, <ph id="ph2">&lt;xref:System.ArgumentNullException&gt;</ph> or <ph id="ph3">&lt;xref:System.ArgumentOutOfRangeException&gt;</ph>, should be thrown instead.</source>
          <target state="translated">В случае сбоя вызова метода из-за недопустимых аргументов, затем <ph id="ph1">&lt;xref:System.ArgumentException&gt;</ph> или одного из его производных классов <ph id="ph2">&lt;xref:System.ArgumentNullException&gt;</ph> или <ph id="ph3">&lt;xref:System.ArgumentOutOfRangeException&gt;</ph>, должны быть выданы.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>Miscellaneous information</source>
          <target state="translated">Прочие сведения</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source><ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> uses the HRESULT COR_E_INVALIDOPERATION, which has the value 0x80131509.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> использует значением COR_E_INVALIDOPERATION HRESULT, который имеет значение 0x80131509.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>For a list of initial property values for an instance of <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph>, see the <ph id="ph2">&lt;xref:System.InvalidOperationException.%23ctor%2A&gt;</ph> constructors.</source>
          <target state="translated">Список начальных значений свойств для экземпляра <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph>, в разделе <ph id="ph2">&lt;xref:System.InvalidOperationException.%23ctor%2A&gt;</ph> конструкторы.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="T:System.InvalidOperationException">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> class.</source>
          <target state="translated">Инициализирует новый экземпляр класса <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="M:System.InvalidOperationException.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> class.</source>
          <target state="translated">Инициализирует новый экземпляр класса <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.InvalidOperationException.#ctor">
          <source>This constructor initializes the <ph id="ph1">&lt;xref:System.Exception.Message%2A&gt;</ph> property of the new instance to a system-supplied message that describes the error, such as "The requested operation cannot be performed."</source>
          <target state="translated">Этот конструктор инициализирует <ph id="ph1">&lt;xref:System.Exception.Message%2A&gt;</ph> свойств нового экземпляра системным сообщением, содержащим описание ошибки, такие как «не может выполнить запрошенную операцию.»</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.InvalidOperationException.#ctor">
          <source>This message takes into account the current system culture.</source>
          <target state="translated">Это сообщение учитывает текущую культуру системы.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.InvalidOperationException.#ctor">
          <source>The following table shows the initial property values for an instance of <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph>.</source>
          <target state="translated">В следующей таблице представлены исходные значения свойств экземпляра класса <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.InvalidOperationException.#ctor">
          <source>Property</source>
          <target state="translated">Свойство.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.InvalidOperationException.#ctor">
          <source>Value</source>
          <target state="translated">Значение</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.InvalidOperationException.#ctor">
          <source>A null reference (<ph id="ph1">`Nothing`</ph> in Visual Basic).</source>
          <target state="translated">Пустая ссылка (<ph id="ph1">`Nothing`</ph> в Visual Basic).</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.InvalidOperationException.#ctor">
          <source>The localized error message string.</source>
          <target state="translated">Строка локализованного сообщения об ошибке.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="M:System.InvalidOperationException.#ctor(System.String)">
          <source>The message that describes the error.</source>
          <target state="translated">Сообщение, описывающее ошибку.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" uid="M:System.InvalidOperationException.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> class with a specified error message.</source>
          <target state="translated">Инициализирует новый экземпляр класса <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> с указанным сообщением об ошибке.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.InvalidOperationException.#ctor(System.String)">
          <source>This constructor initializes the <ph id="ph1">&lt;xref:System.Exception.Message%2A?displayProperty=nameWithType&gt;</ph> property of the new exception using the <ph id="ph2">`message`</ph> parameter.</source>
          <target state="translated">Этот конструктор инициализирует <ph id="ph1">&lt;xref:System.Exception.Message%2A?displayProperty=nameWithType&gt;</ph> нового исключения, используя свойство <ph id="ph2">`message`</ph> параметр.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.InvalidOperationException.#ctor(System.String)">
          <source>The content of <ph id="ph1">`message`</ph> is intended to be understood by humans.</source>
          <target state="translated">Содержимое <ph id="ph1">`message`</ph> должно быть понятно пользователю.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.InvalidOperationException.#ctor(System.String)">
          <source>The caller of this constructor is required to ensure that this string has been localized for the current system culture.</source>
          <target state="translated">Код, вызывающий этот конструктор, должен обеспечить локализацию данной строки в соответствии с текущим языком и региональными параметрами системы.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.InvalidOperationException.#ctor(System.String)">
          <source>The following table shows the initial property values for an instance of <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph>.</source>
          <target state="translated">В следующей таблице представлены исходные значения свойств экземпляра класса <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.InvalidOperationException.#ctor(System.String)">
          <source>Property</source>
          <target state="translated">Свойство.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.InvalidOperationException.#ctor(System.String)">
          <source>Value</source>
          <target state="translated">Значение</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.InvalidOperationException.#ctor(System.String)">
          <source>A null reference (<ph id="ph1">`Nothing`</ph> in Visual Basic).</source>
          <target state="translated">Пустая ссылка (<ph id="ph1">`Nothing`</ph> в Visual Basic).</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.InvalidOperationException.#ctor(System.String)">
          <source>The error message string.</source>
          <target state="translated">Строка сообщения об ошибке.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" uid="M:System.InvalidOperationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The object that holds the serialized object data.</source>
          <target state="translated">Объект, содержащий сериализованные данные объекта.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" uid="M:System.InvalidOperationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The contextual information about the source or destination.</source>
          <target state="translated">Контекстные сведения об источнике или назначении.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="M:System.InvalidOperationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> class with serialized data.</source>
          <target state="translated">Инициализирует новый экземпляр класса <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> с сериализованными данными.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.InvalidOperationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>This constructor is called during deserialization to reconstitute the exception object transmitted over a stream.</source>
          <target state="translated">Данный конструктор вызывается в процессе десериализации для воссоздания объекта исключения, переданного в потоке.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.InvalidOperationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>For more information, see <bpt id="p1">[</bpt>XML and SOAP Serialization<ept id="p1">](~/docs/standard/serialization/xml-and-soap-serialization.md)</ept>.</source>
          <target state="translated">Дополнительные сведения см. в разделе <bpt id="p1">[</bpt>сериализации XML и SOAP<ept id="p1">](~/docs/standard/serialization/xml-and-soap-serialization.md)</ept>.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" uid="M:System.InvalidOperationException.#ctor(System.String,System.Exception)">
          <source>The error message that explains the reason for the exception.</source>
          <target state="translated">Сообщение об ошибке, указывающее причину создания исключения.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="M:System.InvalidOperationException.#ctor(System.String,System.Exception)">
          <source>The exception that is the cause of the current exception.</source>
          <target state="translated">Исключение, которое является причиной текущего исключения.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" uid="M:System.InvalidOperationException.#ctor(System.String,System.Exception)">
          <source>If the <bpt id="p1">&lt;c&gt;</bpt>innerException<ept id="p1">&lt;/c&gt;</ept> parameter is not a null reference (<ph id="ph1">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic), the current exception is raised in a <ph id="ph2">&lt;see langword="catch" /&gt;</ph> block that handles the inner exception.</source>
          <target state="translated">Если параметр <bpt id="p1">&lt;c&gt;</bpt>innerException<ept id="p1">&lt;/c&gt;</ept> не является пустой ссылкой (<ph id="ph1">&lt;see langword="Nothing" /&gt;</ph> в Visual Basic), текущее исключение создается в блоке <ph id="ph2">&lt;see langword="catch" /&gt;</ph>, обрабатывающем внутреннее исключение.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" uid="M:System.InvalidOperationException.#ctor(System.String,System.Exception)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> class with a specified error message and a reference to the inner exception that is the cause of this exception.</source>
          <target state="translated">Инициализирует новый экземпляр класса <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> указанным сообщением об ошибке и ссылкой на внутреннее исключение, вызвавшее данное исключение.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.InvalidOperationException.#ctor(System.String,System.Exception)">
          <source>An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property.</source>
          <target state="translated">Исключение, созданное как прямой результат предыдущего исключения, должно содержать в свойстве <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> ссылку на предыдущее исключение.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.InvalidOperationException.#ctor(System.String,System.Exception)">
          <source>The <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property returns the same value that is passed into the constructor, or a null reference (<ph id="ph2">`Nothing`</ph> in Visual Basic) if the <ph id="ph3">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property does not supply the inner exception value to the constructor.</source>
          <target state="translated">Свойство <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> возвращает то же значение, которое передается конструктору, или пустую ссылку (<ph id="ph2">`Nothing`</ph> в Visual Basic), если свойство <ph id="ph3">&lt;xref:System.Exception.InnerException%2A&gt;</ph> не предоставляет конструктору значение внутреннего исключения.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.InvalidOperationException.#ctor(System.String,System.Exception)">
          <source>The following table shows the initial property values for an instance of <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph>.</source>
          <target state="translated">В следующей таблице представлены исходные значения свойств экземпляра класса <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.InvalidOperationException.#ctor(System.String,System.Exception)">
          <source>Property</source>
          <target state="translated">Свойство.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.InvalidOperationException.#ctor(System.String,System.Exception)">
          <source>Value</source>
          <target state="translated">Значение</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.InvalidOperationException.#ctor(System.String,System.Exception)">
          <source>The inner exception reference.</source>
          <target state="translated">Ссылка на внутреннее исключение.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.InvalidOperationException.#ctor(System.String,System.Exception)">
          <source>The error message string.</source>
          <target state="translated">Строка сообщения об ошибке.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>