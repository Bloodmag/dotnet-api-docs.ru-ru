<Type Name="MarshalByRefObject" FullName="System.MarshalByRefObject">
  <TypeSignature Language="C#" Value="public abstract class MarshalByRefObject" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi abstract serializable beforefieldinit MarshalByRefObject extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.MarshalByRefObject" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class MarshalByRefObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class MarshalByRefObject abstract" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="da9a9-101">Разрешает доступ к объектам через границы доменов приложения в приложениях, поддерживающих удаленное взаимодействие.</span><span class="sxs-lookup"><span data-stu-id="da9a9-101">Enables access to objects across application domain boundaries in applications that support remoting.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da9a9-102">Домен приложения представляет собой раздел процесс операционной системы, когда один или несколько приложений располагаются.</span><span class="sxs-lookup"><span data-stu-id="da9a9-102">An application domain is a partition in an operating system process where one or more applications reside.</span></span> <span data-ttu-id="da9a9-103">Прямую связь объектов в том же домене приложения.</span><span class="sxs-lookup"><span data-stu-id="da9a9-103">Objects in the same application domain communicate directly.</span></span> <span data-ttu-id="da9a9-104">Объекты в различных доменах приложений взаимодействия, либо путем передачи копий объектов через границы домена приложения, либо с помощью прокси-сервера для обмена сообщениями.</span><span class="sxs-lookup"><span data-stu-id="da9a9-104">Objects in different application domains communicate either by transporting copies of objects across application domain boundaries, or by using a proxy to exchange messages.</span></span>  
  
 <span data-ttu-id="da9a9-105"><xref:System.MarshalByRefObject> базовый класс для объектов, которые взаимодействуют через границы доменов приложения путем обмена сообщениями с помощью учетной записи-посредника.</span><span class="sxs-lookup"><span data-stu-id="da9a9-105"><xref:System.MarshalByRefObject> is the base class for objects that communicate across application domain boundaries by exchanging messages using a proxy.</span></span> <span data-ttu-id="da9a9-106">Объекты, которые не наследуются от <xref:System.MarshalByRefObject> являются неявно маршалировать по значению.</span><span class="sxs-lookup"><span data-stu-id="da9a9-106">Objects that do not inherit from <xref:System.MarshalByRefObject> are implicitly marshal by value.</span></span> <span data-ttu-id="da9a9-107">Когда удаленное приложение обращается маршалирование по объект значения, копия объекта передается через границы домена приложения.</span><span class="sxs-lookup"><span data-stu-id="da9a9-107">When a remote application references a marshal by value object, a copy of the object is passed across application domain boundaries.</span></span>  
  
 <span data-ttu-id="da9a9-108"><xref:System.MarshalByRefObject> доступ к объектам непосредственно в пределах локальном домене приложения.</span><span class="sxs-lookup"><span data-stu-id="da9a9-108"><xref:System.MarshalByRefObject> objects are accessed directly within the boundaries of the local application domain.</span></span> <span data-ttu-id="da9a9-109">Первый раз, когда приложение в удаленный домен приложения обращается к <xref:System.MarshalByRefObject>, учетную запись-посредник, передаваемый удаленное приложение.</span><span class="sxs-lookup"><span data-stu-id="da9a9-109">The first time an application in a remote application domain accesses a <xref:System.MarshalByRefObject>, a proxy is passed to the remote application.</span></span> <span data-ttu-id="da9a9-110">Последующие вызовы прокси маршалируются обратно в объекты, находящиеся в локальном домене приложения.</span><span class="sxs-lookup"><span data-stu-id="da9a9-110">Subsequent calls on the proxy are marshaled back to the object residing in the local application domain.</span></span>  
  
 <span data-ttu-id="da9a9-111">Типы должны наследовать <xref:System.MarshalByRefObject> когда тип используется через границы домена приложения, и состояние объекта не должен быть скопирован, так как члены объекта не может использоваться за пределами домена приложения, где они были созданы.</span><span class="sxs-lookup"><span data-stu-id="da9a9-111">Types must inherit from <xref:System.MarshalByRefObject> when the type is used across application domain boundaries, and the state of the object must not be copied because the members of the object are not usable outside the application domain where they were created.</span></span>  
  
 <span data-ttu-id="da9a9-112">При наследовании от объекта <xref:System.MarshalByRefObject> для использования через границы домена приложения следует переопределять любого из его элементов, а также следует его методы вызываются напрямую.</span><span class="sxs-lookup"><span data-stu-id="da9a9-112">When you derive an object from <xref:System.MarshalByRefObject> for use across application domain boundaries, you should not override any of its members, nor should you call its methods directly.</span></span> <span data-ttu-id="da9a9-113">Среда выполнения распознает, что классы, производные от <xref:System.MarshalByRefObject> маршалинга через границы домена приложения.</span><span class="sxs-lookup"><span data-stu-id="da9a9-113">The runtime recognizes that classes derived from  <xref:System.MarshalByRefObject> should be marshaled across app domain boundaries.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="da9a9-114">Этот раздел содержит два примера кода.</span><span class="sxs-lookup"><span data-stu-id="da9a9-114">This section contains two code examples.</span></span> <span data-ttu-id="da9a9-115">В первом примере кода показано, как создать экземпляр класса в другом домене приложения.</span><span class="sxs-lookup"><span data-stu-id="da9a9-115">The first code example shows how to create an instance of a class in another application domain.</span></span> <span data-ttu-id="da9a9-116">Во втором примере кода показан простой класс, который может использоваться для удаленного взаимодействия.</span><span class="sxs-lookup"><span data-stu-id="da9a9-116">The second code example shows a simple class that can be used for remoting.</span></span>  
  
 <span data-ttu-id="da9a9-117">**Пример 1.**</span><span class="sxs-lookup"><span data-stu-id="da9a9-117">**Example 1**</span></span>  
  
 <span data-ttu-id="da9a9-118">В следующем примере кода показан простой способ выполнения кода в другом домене приложения.</span><span class="sxs-lookup"><span data-stu-id="da9a9-118">The following code example shows the simplest way to execute code in another application domain.</span></span> <span data-ttu-id="da9a9-119">В примере определяется класс с именем `Worker` , наследующий от класса <xref:System.MarshalByRefObject>, с методом, который отображает имя домена приложения, в котором он выполняется.</span><span class="sxs-lookup"><span data-stu-id="da9a9-119">The example defines a class named `Worker` that inherits <xref:System.MarshalByRefObject>, with a method that displays the name of the application domain in which it is executing.</span></span> <span data-ttu-id="da9a9-120">В примере создается экземпляров `Worker` в домене приложения по умолчанию и в новый домен приложения.</span><span class="sxs-lookup"><span data-stu-id="da9a9-120">The example creates instances of `Worker` in the default application domain and in a new application domain.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="da9a9-121">Сборка, содержащая `Worker` должна быть загружена в оба домена приложения, однако можно загрузить и другие сборки, которые будут существовать только в новом домене приложения.</span><span class="sxs-lookup"><span data-stu-id="da9a9-121">The assembly that contains `Worker` must be loaded into both application domains, but it could load other assemblies that would exist only in the new application domain.</span></span>  
  
 [!code-cpp[CreateInstanceAndUnwrap2#1](~/samples/snippets/cpp/VS_Snippets_CLR/CreateInstanceAndUnwrap2/cpp/source.cpp#1)]
 [!code-csharp[CreateInstanceAndUnwrap2#1](~/samples/snippets/csharp/VS_Snippets_CLR/CreateInstanceAndUnwrap2/cs/source.cs#1)]
 [!code-vb[CreateInstanceAndUnwrap2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CreateInstanceAndUnwrap2/VB/source.vb#1)]  
  
 <span data-ttu-id="da9a9-122">**Пример 2**</span><span class="sxs-lookup"><span data-stu-id="da9a9-122">**Example 2**</span></span>  
  
 <span data-ttu-id="da9a9-123">В следующем примере демонстрируется класс, производный от <xref:System.MarshalByRefObject> , в дальнейшем используется удаленно.</span><span class="sxs-lookup"><span data-stu-id="da9a9-123">The following example demonstrates a class derived from <xref:System.MarshalByRefObject> that is used later in remoting.</span></span>  
  
 [!code-cpp[RemotingServices.SetObjectUriForMarshal#1](~/samples/snippets/cpp/VS_Snippets_CLR/RemotingServices.SetObjectUriForMarshal/CPP/source.cpp#1)]
 [!code-csharp[RemotingServices.SetObjectUriForMarshal#1](~/samples/snippets/csharp/VS_Snippets_CLR/RemotingServices.SetObjectUriForMarshal/CS/source.cs#1)]
 [!code-vb[RemotingServices.SetObjectUriForMarshal#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/RemotingServices.SetObjectUriForMarshal/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MarshalByRefObject ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.MarshalByRefObject.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; MarshalByRefObject();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="da9a9-124">Инициализирует новый экземпляр класса <see cref="T:System.MarshalByRefObject" />.</span><span class="sxs-lookup"><span data-stu-id="da9a9-124">Initializes a new instance of the <see cref="T:System.MarshalByRefObject" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateObjRef">
      <MemberSignature Language="C#" Value="public virtual System.Runtime.Remoting.ObjRef CreateObjRef (Type requestedType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Runtime.Remoting.ObjRef CreateObjRef(class System.Type requestedType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.MarshalByRefObject.CreateObjRef(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateObjRef (requestedType As Type) As ObjRef" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Runtime::Remoting::ObjRef ^ CreateObjRef(Type ^ requestedType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjRef</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestedType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="requestedType"><span data-ttu-id="da9a9-125">Класс <see cref="T:System.Type" /> объекта, на который будет ссылаться новый объект <see cref="T:System.Runtime.Remoting.ObjRef" />.</span><span class="sxs-lookup"><span data-stu-id="da9a9-125">The <see cref="T:System.Type" /> of the object that the new <see cref="T:System.Runtime.Remoting.ObjRef" /> will reference.</span></span></param>
        <summary><span data-ttu-id="da9a9-126">Создает объект, который содержит всю необходимую информацию для создания прокси-сервера, используемого для взаимодействия с удаленным объектом.</span><span class="sxs-lookup"><span data-stu-id="da9a9-126">Creates an object that contains all the relevant information required to generate a proxy used to communicate with a remote object.</span></span></summary>
        <returns><span data-ttu-id="da9a9-127">Информация, необходимая для создания прокси-сервера.</span><span class="sxs-lookup"><span data-stu-id="da9a9-127">Information required to generate a proxy.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da9a9-128"><xref:System.MarshalByRefObject.CreateObjRef%2A> Метод вызывается методом методы создания удаленного объекта, таких как <xref:System.AppDomain.CreateInstance%2A?displayProperty=nameWithType> и <xref:System.AppDomain.CreateInstanceAndUnwrap%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="da9a9-128">The <xref:System.MarshalByRefObject.CreateObjRef%2A> method is called by remote object creation methods such as <xref:System.AppDomain.CreateInstance%2A?displayProperty=nameWithType> and <xref:System.AppDomain.CreateInstanceAndUnwrap%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="da9a9-129">В большинстве случаев нет необходимости переопределять этот метод.</span><span class="sxs-lookup"><span data-stu-id="da9a9-129">In most cases, there is no need to override this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.Remoting.RemotingException"><span data-ttu-id="da9a9-130">Этот экземпляр не является допустимым объектом удаленного взаимодействия.</span><span class="sxs-lookup"><span data-stu-id="da9a9-130">This instance is not a valid remoting object.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="da9a9-131">У непосредственно вызывающего объекта отсутствует разрешение инфраструктуры.</span><span class="sxs-lookup"><span data-stu-id="da9a9-131">The immediate caller does not have infrastructure permission.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="da9a9-132">требуется полное доверие для непосредственно вызывающего метода.</span><span class="sxs-lookup"><span data-stu-id="da9a9-132">requires full trust for the immediate caller.</span></span> <span data-ttu-id="da9a9-133">Этот член не может использоваться частично доверенным или прозрачным кодом.</span><span class="sxs-lookup"><span data-stu-id="da9a9-133">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="GetLifetimeService">
      <MemberSignature Language="C#" Value="public object GetLifetimeService ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetLifetimeService() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.MarshalByRefObject.GetLifetimeService" />
      <MemberSignature Language="VB.NET" Value="Public Function GetLifetimeService () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetLifetimeService();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="da9a9-134">Извлекает объект обслуживания во время существования, который управляет политикой времени существования данного экземпляра.</span><span class="sxs-lookup"><span data-stu-id="da9a9-134">Retrieves the current lifetime service object that controls the lifetime policy for this instance.</span></span></summary>
        <returns><span data-ttu-id="da9a9-135">Объект типа <see cref="T:System.Runtime.Remoting.Lifetime.ILease" />, используемый для управления политикой времени существования данного экземпляра.</span><span class="sxs-lookup"><span data-stu-id="da9a9-135">An object of type <see cref="T:System.Runtime.Remoting.Lifetime.ILease" /> used to control the lifetime policy for this instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da9a9-136">Дополнительные сведения о времени существования службы см. в разделе <xref:System.Runtime.Remoting.Lifetime.LifetimeServices> класса.</span><span class="sxs-lookup"><span data-stu-id="da9a9-136">For more information about lifetime services, see the <xref:System.Runtime.Remoting.Lifetime.LifetimeServices> class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="da9a9-137">У непосредственно вызывающего объекта отсутствует разрешение инфраструктуры.</span><span class="sxs-lookup"><span data-stu-id="da9a9-137">The immediate caller does not have infrastructure permission.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="da9a9-138">требуется полное доверие для непосредственно вызывающего метода.</span><span class="sxs-lookup"><span data-stu-id="da9a9-138">requires full trust for the immediate caller.</span></span> <span data-ttu-id="da9a9-139">Этот член не может использоваться частично доверенным или прозрачным кодом.</span><span class="sxs-lookup"><span data-stu-id="da9a9-139">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="InitializeLifetimeService">
      <MemberSignature Language="C#" Value="public virtual object InitializeLifetimeService ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object InitializeLifetimeService() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.MarshalByRefObject.InitializeLifetimeService" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function InitializeLifetimeService () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ InitializeLifetimeService();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="da9a9-140">Получает объект службы времени существования для управления политикой времени существования для этого экземпляра.</span><span class="sxs-lookup"><span data-stu-id="da9a9-140">Obtains a lifetime service object to control the lifetime policy for this instance.</span></span></summary>
        <returns><span data-ttu-id="da9a9-141">Объект типа <see cref="T:System.Runtime.Remoting.Lifetime.ILease" />, используемый для управления политикой времени существования данного экземпляра.</span><span class="sxs-lookup"><span data-stu-id="da9a9-141">An object of type <see cref="T:System.Runtime.Remoting.Lifetime.ILease" /> used to control the lifetime policy for this instance.</span></span> <span data-ttu-id="da9a9-142">Этот объект является текущим объектом обслуживания времени существования для данного экземпляра, если таковой существует; в противном случае он является новым объектом обслуживания времени существования, инициализированным значением свойства <see cref="P:System.Runtime.Remoting.Lifetime.LifetimeServices.LeaseManagerPollTime" />.</span><span class="sxs-lookup"><span data-stu-id="da9a9-142">This is the current lifetime service object for this instance if one exists; otherwise, a new lifetime service object initialized to the value of the <see cref="P:System.Runtime.Remoting.Lifetime.LifetimeServices.LeaseManagerPollTime" /> property.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da9a9-143">Дополнительные сведения о времени существования службы см. в разделе <xref:System.Runtime.Remoting.Lifetime.LifetimeServices> класса.</span><span class="sxs-lookup"><span data-stu-id="da9a9-143">For more information about lifetime services, see the <xref:System.Runtime.Remoting.Lifetime.LifetimeServices> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="da9a9-144">В следующем примере кода показано создание аренды.</span><span class="sxs-lookup"><span data-stu-id="da9a9-144">The following code example demonstrates creating a lease.</span></span>  
  
 [!code-cpp[Classic MarshalByRefObject.InitializeLifetimeService Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic MarshalByRefObject.InitializeLifetimeService Example/CPP/source.cpp#1)]
 [!code-csharp[Classic MarshalByRefObject.InitializeLifetimeService Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic MarshalByRefObject.InitializeLifetimeService Example/CS/source.cs#1)]
 [!code-vb[Classic MarshalByRefObject.InitializeLifetimeService Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic MarshalByRefObject.InitializeLifetimeService Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="da9a9-145">У непосредственно вызывающего объекта отсутствует разрешение инфраструктуры.</span><span class="sxs-lookup"><span data-stu-id="da9a9-145">The immediate caller does not have infrastructure permission.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="da9a9-146">требуется полное доверие для непосредственно вызывающего метода.</span><span class="sxs-lookup"><span data-stu-id="da9a9-146">requires full trust for the immediate caller.</span></span> <span data-ttu-id="da9a9-147">Этот член не может использоваться частично доверенным или прозрачным кодом.</span><span class="sxs-lookup"><span data-stu-id="da9a9-147">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="MemberwiseClone">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="da9a9-148">Создает неполную копию текущего объекта.</span><span class="sxs-lookup"><span data-stu-id="da9a9-148">Creates a shallow copy of the current object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="MemberwiseClone">
      <MemberSignature Language="C#" Value="protected MarshalByRefObject MemberwiseClone (bool cloneIdentity);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.MarshalByRefObject MemberwiseClone(bool cloneIdentity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Function MemberwiseClone (cloneIdentity As Boolean) As MarshalByRefObject" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; MarshalByRefObject ^ MemberwiseClone(bool cloneIdentity);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.MarshalByRefObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cloneIdentity" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="cloneIdentity">
          <span data-ttu-id="da9a9-149">Значение <see langword="false" />, чтобы удалить удостоверение текущего объекта <see cref="T:System.MarshalByRefObject" />, в результате чего при маршалинге объектов через удаленные границы будет присвоено новое удостоверение.</span><span class="sxs-lookup"><span data-stu-id="da9a9-149"><see langword="false" /> to delete the current <see cref="T:System.MarshalByRefObject" /> object's identity, which will cause the object to be assigned a new identity when it is marshaled across a remoting boundary.</span></span> <span data-ttu-id="da9a9-150">В большинстве случаев можно использовать значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="da9a9-150">A value of <see langword="false" /> is usually appropriate.</span></span> <span data-ttu-id="da9a9-151">Значение <see langword="true" /> для копирования удостоверения текущего объекта <see cref="T:System.MarshalByRefObject" /> в его клон, в результате чего вызовы удаленного клиента будут перенаправляться на объект удаленного сервера.</span><span class="sxs-lookup"><span data-stu-id="da9a9-151"><see langword="true" /> to copy the current <see cref="T:System.MarshalByRefObject" /> object's identity to its clone, which will cause remoting client calls to be routed to the remote server object.</span></span></param>
        <summary><span data-ttu-id="da9a9-152">Создает неполную копию текущего объекта <see cref="T:System.MarshalByRefObject" />.</span><span class="sxs-lookup"><span data-stu-id="da9a9-152">Creates a shallow copy of the current <see cref="T:System.MarshalByRefObject" /> object.</span></span></summary>
        <returns><span data-ttu-id="da9a9-153">Неполная копия текущего объекта <see cref="T:System.MarshalByRefObject" />.</span><span class="sxs-lookup"><span data-stu-id="da9a9-153">A shallow copy of the current <see cref="T:System.MarshalByRefObject" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da9a9-154"><xref:System.MarshalByRefObject.MemberwiseClone%28System.Boolean%29> Метод создает неполную копию путем создания нового <xref:System.MarshalByRefObject> объекта, а затем скопировать нестатического поля текущего <xref:System.MarshalByRefObject> в новый объект.</span><span class="sxs-lookup"><span data-stu-id="da9a9-154">The <xref:System.MarshalByRefObject.MemberwiseClone%28System.Boolean%29> method creates a shallow copy by creating a new <xref:System.MarshalByRefObject> object, and then copying the nonstatic fields of the current <xref:System.MarshalByRefObject> object to the new object.</span></span> <span data-ttu-id="da9a9-155">Если поле имеет тип значения, выполняется копирование разрядной поля.</span><span class="sxs-lookup"><span data-stu-id="da9a9-155">If a field is a value type, a bit-by-bit copy of the field is performed.</span></span> <span data-ttu-id="da9a9-156">Если поле имеет ссылочный тип, ссылка копируется, но не объекты; Поэтому исходный объект и его копия относятся к одному объекту.</span><span class="sxs-lookup"><span data-stu-id="da9a9-156">If a field is a reference type, the reference is copied but the referred object is not; therefore, the original object and its clone refer to the same object.</span></span>  
  
 <span data-ttu-id="da9a9-157">Например, рассмотрим <xref:System.MarshalByRefObject> объект, называемый X, который ссылается на объекты A и B. объекта B, в свою очередь, ссылается на объект C. Неполная копия X создает новый объект X2, который также ссылается на объекты A и B. Напротив, глубокая копия X создает новый объект X2, который ссылается на новые объекты A2 и В2, которые являются копиями A и B. В2, в свою очередь, ссылается на новый объект C2, который является копией C. Используйте класс, реализующий <xref:System.ICloneable> интерфейс для выполнения глубокой или неполной c копия объекта.</span><span class="sxs-lookup"><span data-stu-id="da9a9-157">For example, consider a <xref:System.MarshalByRefObject> object called X that references objects A and B. Object B, in turn, references object C. A shallow copy of X creates new object X2 that also references objects A and B. In contrast, a deep copy of X creates a new object X2 that references the new objects A2 and B2, which are copies of A and B. B2, in turn, references the new object C2, which is a copy C. Use a class that implements the <xref:System.ICloneable> interface to perform a deep or shallow copy of an object.</span></span>  
  
 <span data-ttu-id="da9a9-158">Удостоверение <xref:System.MarshalByRefObject> объект определяется как объект удаленного сервера, который является целевым объектом запроса клиента удаленного взаимодействия.</span><span class="sxs-lookup"><span data-stu-id="da9a9-158">The identity of a <xref:System.MarshalByRefObject> object is defined as the remote server object that is the target of a remoting client call.</span></span> <span data-ttu-id="da9a9-159">По умолчанию копия из <xref:System.MarshalByRefObject> объект имеет другое удостоверение исходного объекта, который обычно не правильное поведение клонов серверных объектов, которые маршалируются через границы удаленного взаимодействия на клиентской стороне.</span><span class="sxs-lookup"><span data-stu-id="da9a9-159">By default, the memberwise clone of a <xref:System.MarshalByRefObject> object has the same identity as the original object, which is typically not the correct behavior for clones of server-side objects that are marshaled across a remoting boundary to the client side.</span></span> <span data-ttu-id="da9a9-160">Укажите `false`, обычно обстоятельств удалить удостоверение этого клона и нового удостоверения для назначения при маршалинге клона через границы удаленного взаимодействия, или `true` заставить клона, чтобы сохранить удостоверение исходного <xref:System.MarshalByRefObject> объекта.</span><span class="sxs-lookup"><span data-stu-id="da9a9-160">Specify `false`, which is usually appropriate, to delete the identity of the clone and cause a new identity to be assigned when the clone is marshaled across a remoting boundary, or `true` to cause the clone to retain the identity of the original <xref:System.MarshalByRefObject> object.</span></span> <span data-ttu-id="da9a9-161"><xref:System.MarshalByRefObject.MemberwiseClone%28System.Boolean%29> Метод предназначен для использования разработчиками реализации объектов на удаленном сервере.</span><span class="sxs-lookup"><span data-stu-id="da9a9-161">The <xref:System.MarshalByRefObject.MemberwiseClone%28System.Boolean%29> method is intended to be used by developers implementing remote server objects.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>