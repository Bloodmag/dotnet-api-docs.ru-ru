<Type Name="MarshalByRefObject" FullName="System.MarshalByRefObject">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="581d775aac81241d975e88cf7c586e38dbe64827" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36430088" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class MarshalByRefObject" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi abstract serializable beforefieldinit MarshalByRefObject extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.MarshalByRefObject" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class MarshalByRefObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class MarshalByRefObject abstract" />
  <TypeSignature Language="F#" Value="type MarshalByRefObject = class" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Разрешает доступ к объектам через границы доменов приложения в приложениях, поддерживающих удаленное взаимодействие.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Домен приложения представляет собой раздел процесс операционной системы, когда один или несколько приложений располагаются. Прямую связь объектов в том же домене приложения. Объекты в различных доменах приложений взаимодействия, либо путем передачи копий объектов через границы домена приложения, либо с помощью прокси-сервера для обмена сообщениями.  
  
 <xref:System.MarshalByRefObject> базовый класс для объектов, которые взаимодействуют через границы доменов приложения путем обмена сообщениями с помощью учетной записи-посредника. Объекты, которые не наследуются от <xref:System.MarshalByRefObject> являются неявно маршалировать по значению. Когда удаленное приложение обращается маршалирование по объект значения, копия объекта передается через границы домена приложения.  
  
 <xref:System.MarshalByRefObject> доступ к объектам непосредственно в пределах локальном домене приложения. Первый раз, когда приложение в удаленный домен приложения обращается к <xref:System.MarshalByRefObject>, учетную запись-посредник, передаваемый удаленное приложение. Последующие вызовы прокси маршалируются обратно в объекты, находящиеся в локальном домене приложения.  
  
 Типы должны наследовать <xref:System.MarshalByRefObject> когда тип используется через границы домена приложения, и состояние объекта не должен быть скопирован, так как члены объекта не может использоваться за пределами домена приложения, где они были созданы.  
  
 При наследовании от объекта <xref:System.MarshalByRefObject> для использования через границы домена приложения следует переопределять любого из его элементов, а также следует его методы вызываются напрямую. Среда выполнения распознает, что классы, производные от <xref:System.MarshalByRefObject> маршалинга через границы домена приложения.  
  
   
  
## Examples  
 Этот раздел содержит два примера кода. В первом примере кода показано, как создать экземпляр класса в другом домене приложения. Во втором примере кода показан простой класс, который может использоваться для удаленного взаимодействия.  
  
 **Пример 1.**  
  
 В следующем примере кода показан простой способ выполнения кода в другом домене приложения. В примере определяется класс с именем `Worker` , наследующий от класса <xref:System.MarshalByRefObject>, с методом, который отображает имя домена приложения, в котором он выполняется. В примере создается экземпляров `Worker` в домене приложения по умолчанию и в новый домен приложения.  
  
> [!NOTE]
>  Сборка, содержащая `Worker` должна быть загружена в оба домена приложения, однако можно загрузить и другие сборки, которые будут существовать только в новом домене приложения.  
  
 [!code-cpp[CreateInstanceAndUnwrap2#1](~/samples/snippets/cpp/VS_Snippets_CLR/CreateInstanceAndUnwrap2/cpp/source.cpp#1)]
 [!code-csharp[CreateInstanceAndUnwrap2#1](~/samples/snippets/csharp/VS_Snippets_CLR/CreateInstanceAndUnwrap2/cs/source.cs#1)]
 [!code-vb[CreateInstanceAndUnwrap2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CreateInstanceAndUnwrap2/VB/source.vb#1)]  
  
 **Пример 2**  
  
 В следующем примере демонстрируется класс, производный от <xref:System.MarshalByRefObject> , в дальнейшем используется удаленно.  
  
 [!code-cpp[RemotingServices.SetObjectUriForMarshal#1](~/samples/snippets/cpp/VS_Snippets_CLR/RemotingServices.SetObjectUriForMarshal/CPP/source.cpp#1)]
 [!code-csharp[RemotingServices.SetObjectUriForMarshal#1](~/samples/snippets/csharp/VS_Snippets_CLR/RemotingServices.SetObjectUriForMarshal/CS/source.cs#1)]
 [!code-vb[RemotingServices.SetObjectUriForMarshal#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/RemotingServices.SetObjectUriForMarshal/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MarshalByRefObject ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.MarshalByRefObject.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; MarshalByRefObject();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.MarshalByRefObject" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateObjRef">
      <MemberSignature Language="C#" Value="public virtual System.Runtime.Remoting.ObjRef CreateObjRef (Type requestedType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Runtime.Remoting.ObjRef CreateObjRef(class System.Type requestedType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.MarshalByRefObject.CreateObjRef(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateObjRef (requestedType As Type) As ObjRef" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Runtime::Remoting::ObjRef ^ CreateObjRef(Type ^ requestedType);" />
      <MemberSignature Language="F#" Value="abstract member CreateObjRef : Type -&gt; System.Runtime.Remoting.ObjRef&#xA;override this.CreateObjRef : Type -&gt; System.Runtime.Remoting.ObjRef" Usage="marshalByRefObject.CreateObjRef requestedType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjRef</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestedType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="requestedType">Класс <see cref="T:System.Type" /> объекта, на который будет ссылаться новый объект <see cref="T:System.Runtime.Remoting.ObjRef" />.</param>
        <summary>Создает объект, который содержит всю необходимую информацию для создания прокси-сервера, используемого для взаимодействия с удаленным объектом.</summary>
        <returns>Информация, необходимая для создания прокси-сервера.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.MarshalByRefObject.CreateObjRef%2A> Метод вызывается методом методы создания удаленного объекта, таких как <xref:System.AppDomain.CreateInstance%2A?displayProperty=nameWithType> и <xref:System.AppDomain.CreateInstanceAndUnwrap%2A?displayProperty=nameWithType>. В большинстве случаев нет необходимости переопределять этот метод.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.Remoting.RemotingException">Этот экземпляр не является допустимым объектом удаленного взаимодействия.</exception>
        <exception cref="T:System.Security.SecurityException">У непосредственно вызывающего объекта отсутствует разрешение инфраструктуры.</exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">требуется полное доверие для непосредственно вызывающего метода. Этот член не может использоваться частично доверенным или прозрачным кодом.</permission>
      </Docs>
    </Member>
    <Member MemberName="GetLifetimeService">
      <MemberSignature Language="C#" Value="public object GetLifetimeService ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetLifetimeService() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.MarshalByRefObject.GetLifetimeService" />
      <MemberSignature Language="VB.NET" Value="Public Function GetLifetimeService () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetLifetimeService();" />
      <MemberSignature Language="F#" Value="abstract member GetLifetimeService : unit -&gt; obj&#xA;override this.GetLifetimeService : unit -&gt; obj" Usage="marshalByRefObject.GetLifetimeService " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Извлекает объект обслуживания во время существования, который управляет политикой времени существования данного экземпляра.</summary>
        <returns>Объект типа <see cref="T:System.Runtime.Remoting.Lifetime.ILease" />, используемый для управления политикой времени существования данного экземпляра.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Дополнительные сведения о времени существования службы см. в разделе <xref:System.Runtime.Remoting.Lifetime.LifetimeServices> класса.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">У непосредственно вызывающего объекта отсутствует разрешение инфраструктуры.</exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">требуется полное доверие для непосредственно вызывающего метода. Этот член не может использоваться частично доверенным или прозрачным кодом.</permission>
      </Docs>
    </Member>
    <Member MemberName="InitializeLifetimeService">
      <MemberSignature Language="C#" Value="public virtual object InitializeLifetimeService ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object InitializeLifetimeService() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.MarshalByRefObject.InitializeLifetimeService" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function InitializeLifetimeService () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ InitializeLifetimeService();" />
      <MemberSignature Language="F#" Value="abstract member InitializeLifetimeService : unit -&gt; obj&#xA;override this.InitializeLifetimeService : unit -&gt; obj" Usage="marshalByRefObject.InitializeLifetimeService " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Получает объект службы времени существования для управления политикой времени существования для этого экземпляра.</summary>
        <returns>Объект типа <see cref="T:System.Runtime.Remoting.Lifetime.ILease" />, используемый для управления политикой времени существования данного экземпляра. Этот объект является текущим объектом обслуживания времени существования для данного экземпляра, если таковой существует; в противном случае он является новым объектом обслуживания времени существования, инициализированным значением свойства <see cref="P:System.Runtime.Remoting.Lifetime.LifetimeServices.LeaseManagerPollTime" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Дополнительные сведения о времени существования службы см. в разделе <xref:System.Runtime.Remoting.Lifetime.LifetimeServices> класса.  
  
   
  
## Examples  
 В следующем примере кода показано создание аренды.  
  
 [!code-cpp[Classic MarshalByRefObject.InitializeLifetimeService Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic MarshalByRefObject.InitializeLifetimeService Example/CPP/source.cpp#1)]
 [!code-csharp[Classic MarshalByRefObject.InitializeLifetimeService Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic MarshalByRefObject.InitializeLifetimeService Example/CS/source.cs#1)]
 [!code-vb[Classic MarshalByRefObject.InitializeLifetimeService Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic MarshalByRefObject.InitializeLifetimeService Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">У непосредственно вызывающего объекта отсутствует разрешение инфраструктуры.</exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">требуется полное доверие для непосредственно вызывающего метода. Этот член не может использоваться частично доверенным или прозрачным кодом.</permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="MemberwiseClone">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Создает неполную копию текущего объекта.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="MemberwiseClone">
      <MemberSignature Language="C#" Value="protected MarshalByRefObject MemberwiseClone (bool cloneIdentity);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.MarshalByRefObject MemberwiseClone(bool cloneIdentity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Function MemberwiseClone (cloneIdentity As Boolean) As MarshalByRefObject" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; MarshalByRefObject ^ MemberwiseClone(bool cloneIdentity);" />
      <MemberSignature Language="F#" Value="override this.MemberwiseClone : bool -&gt; MarshalByRefObject" Usage="marshalByRefObject.MemberwiseClone cloneIdentity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.MarshalByRefObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cloneIdentity" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="cloneIdentity">Значение <see langword="false" />, чтобы удалить удостоверение текущего объекта <see cref="T:System.MarshalByRefObject" />, в результате чего при маршалинге объектов через удаленные границы будет присвоено новое удостоверение. В большинстве случаев можно использовать значение <see langword="false" />. Значение <see langword="true" /> для копирования удостоверения текущего объекта <see cref="T:System.MarshalByRefObject" /> в его клон, в результате чего вызовы удаленного клиента будут перенаправляться на объект удаленного сервера.</param>
        <summary>Создает неполную копию текущего объекта <see cref="T:System.MarshalByRefObject" />.</summary>
        <returns>Неполная копия текущего объекта <see cref="T:System.MarshalByRefObject" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.MarshalByRefObject.MemberwiseClone%28System.Boolean%29> Метод создает неполную копию путем создания нового <xref:System.MarshalByRefObject> объекта, а затем скопировать нестатического поля текущего <xref:System.MarshalByRefObject> в новый объект. Если поле имеет тип значения, выполняется копирование разрядной поля. Если поле имеет ссылочный тип, ссылка копируется, но не объекты; Поэтому исходный объект и его копия относятся к одному объекту.  
  
 Например, рассмотрим <xref:System.MarshalByRefObject> объект, называемый X, который ссылается на объекты A и B. объекта B, в свою очередь, ссылается на объект C. Неполная копия X создает новый объект X2, который также ссылается на объекты A и B. Напротив, глубокая копия X создает новый объект X2, который ссылается на новые объекты A2 и В2, которые являются копиями A и B. В2, в свою очередь, ссылается на новый объект C2, который является копией C. Используйте класс, реализующий <xref:System.ICloneable> интерфейс для выполнения глубокой или неполной c копия объекта.  
  
 Удостоверение <xref:System.MarshalByRefObject> объект определяется как объект удаленного сервера, который является целевым объектом запроса клиента удаленного взаимодействия. По умолчанию копия из <xref:System.MarshalByRefObject> объект имеет другое удостоверение исходного объекта, который обычно не правильное поведение клонов серверных объектов, которые маршалируются через границы удаленного взаимодействия на клиентской стороне. Укажите `false`, обычно обстоятельств удалить удостоверение этого клона и нового удостоверения для назначения при маршалинге клона через границы удаленного взаимодействия, или `true` заставить клона, чтобы сохранить удостоверение исходного <xref:System.MarshalByRefObject> объекта. <xref:System.MarshalByRefObject.MemberwiseClone%28System.Boolean%29> Метод предназначен для использования разработчиками реализации объектов на удаленном сервере.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>