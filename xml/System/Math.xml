<Type Name="Math" FullName="System.Math">
  <TypeSignature Language="C#" Value="public static class Math" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit Math extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Math" />
  <TypeSignature Language="VB.NET" Value="Public Class Math" />
  <TypeSignature Language="C++ CLI" Value="public ref class Math abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="69036-101">Предоставляет константы и статические методы для тригонометрических, логарифмических и иных общих математических функций.</span><span class="sxs-lookup"><span data-stu-id="69036-101">Provides constants and static methods for trigonometric, logarithmic, and other common mathematical functions.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="69036-102">В следующем примере используется несколько математические и тригонометрические функции из <xref:System.Math> класса для вычисления внутренних углов трапеции.</span><span class="sxs-lookup"><span data-stu-id="69036-102">The following example uses several mathematical and trigonometric functions from the <xref:System.Math> class to calculate the inner angles of a trapezoid.</span></span>  
  
 [!code-cpp[MathSample#1](~/samples/snippets/cpp/VS_Snippets_CLR/MathSample/CPP/mathsample.cpp#1)]
 [!code-csharp[MathSample#1](~/samples/snippets/csharp/VS_Snippets_CLR/MathSample/CS/mathsample.cs#1)]
 [!code-vb[MathSample#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/MathSample/VB/mathsample.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="Abs">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="69036-103">Возвращает абсолютное значение заданного числа.</span><span class="sxs-lookup"><span data-stu-id="69036-103">Returns the absolute value of a specified number.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Abs">
      <MemberSignature Language="C#" Value="public static decimal Abs (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Abs(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Abs(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Abs (value As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Abs(System::Decimal value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="69036-104">Число, которое больше или равно значению <see cref="F:System.Decimal.MinValue" />, но меньше или равно значению <see cref="F:System.Decimal.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="69036-104">A number that is greater than or equal to <see cref="F:System.Decimal.MinValue" />, but less than or equal to <see cref="F:System.Decimal.MaxValue" />.</span></span></param>
        <summary><span data-ttu-id="69036-105">Возвращает абсолютное значение числа <see cref="T:System.Decimal" />.</span><span class="sxs-lookup"><span data-stu-id="69036-105">Returns the absolute value of a <see cref="T:System.Decimal" /> number.</span></span></summary>
        <returns><span data-ttu-id="69036-106">Десятичное число x, такое, что 0 ≤ x ≤<see cref="F:System.Decimal.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="69036-106">A decimal number, x, such that 0 ≤ x ≤<see cref="F:System.Decimal.MaxValue" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69036-107">Абсолютное значение <xref:System.Decimal> ее числовое значение без знака.</span><span class="sxs-lookup"><span data-stu-id="69036-107">The absolute value of a <xref:System.Decimal> is its numeric value without its sign.</span></span> <span data-ttu-id="69036-108">Например абсолютное значение 1.2 и -1,2 — 1.2.</span><span class="sxs-lookup"><span data-stu-id="69036-108">For example, the absolute value of both 1.2 and -1.2 is 1.2.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="69036-109">В следующем примере используется <xref:System.Math.Abs%28System.Decimal%29> метод, чтобы получить абсолютное значение числа <xref:System.Decimal> значения.</span><span class="sxs-lookup"><span data-stu-id="69036-109">The following example uses the <xref:System.Math.Abs%28System.Decimal%29> method to get the absolute value of a number of <xref:System.Decimal> values.</span></span>  
  
 [!code-csharp[System.Math.Abs#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.Abs/cs/Abs1.cs#1)]
 [!code-vb[System.Math.Abs#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.Abs/vb/Abs1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Abs">
      <MemberSignature Language="C#" Value="public static double Abs (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Abs(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Abs(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Abs (value As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Abs(double value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="69036-110">Число, которое больше или равно значению <see cref="F:System.Double.MinValue" />, но меньше или равно значению <see cref="F:System.Double.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="69036-110">A number that is greater than or equal to <see cref="F:System.Double.MinValue" />, but less than or equal to <see cref="F:System.Double.MaxValue" />.</span></span></param>
        <summary><span data-ttu-id="69036-111">Возвращает абсолютное значение числа двойной точности с плавающей запятой.</span><span class="sxs-lookup"><span data-stu-id="69036-111">Returns the absolute value of a double-precision floating-point number.</span></span></summary>
        <returns><span data-ttu-id="69036-112">Число х двойной точности с плавающей запятой, такое, что 0 ≤ x ≤<see cref="F:System.Double.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="69036-112">A double-precision floating-point number, x, such that 0 ≤ x ≤<see cref="F:System.Double.MaxValue" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69036-113">Абсолютное значение <xref:System.Double> ее числовое значение без знака.</span><span class="sxs-lookup"><span data-stu-id="69036-113">The absolute value of a <xref:System.Double> is its numeric value without its sign.</span></span> <span data-ttu-id="69036-114">Например абсолютное значение 1.2e03 и - 1.2e03 — 1.2e03.</span><span class="sxs-lookup"><span data-stu-id="69036-114">For example, the absolute value of both 1.2e03 and -1.2e03 is 1.2e03.</span></span>  
  
 <span data-ttu-id="69036-115">Если `value` равен <xref:System.Double.NegativeInfinity> или <xref:System.Double.PositiveInfinity>, возвращается значение <xref:System.Double.PositiveInfinity>.</span><span class="sxs-lookup"><span data-stu-id="69036-115">If `value` is equal to <xref:System.Double.NegativeInfinity> or <xref:System.Double.PositiveInfinity>, the return value is <xref:System.Double.PositiveInfinity>.</span></span> <span data-ttu-id="69036-116">Если `value` равен <xref:System.Double.NaN>, возвращается значение <xref:System.Double.NaN>.</span><span class="sxs-lookup"><span data-stu-id="69036-116">If `value` is equal to <xref:System.Double.NaN>, the return value is <xref:System.Double.NaN>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="69036-117">В следующем примере используется <xref:System.Math.Abs%28System.Double%29> метод, чтобы получить абсолютное значение числа <xref:System.Double> значения.</span><span class="sxs-lookup"><span data-stu-id="69036-117">The following example uses the <xref:System.Math.Abs%28System.Double%29> method to get the absolute value of a number of <xref:System.Double> values.</span></span>  
  
 [!code-csharp[System.Math.Abs#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.Abs/cs/abs2.cs#2)]
 [!code-vb[System.Math.Abs#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.Abs/vb/abs2.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Abs">
      <MemberSignature Language="C#" Value="public static short Abs (short value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 Abs(int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Abs(System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Abs (value As Short) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short Abs(short value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="69036-118">Число, которое больше значения <see cref="F:System.Int16.MinValue" />, но меньше или равно значению <see cref="F:System.Int16.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="69036-118">A number that is greater than <see cref="F:System.Int16.MinValue" />, but less than or equal to <see cref="F:System.Int16.MaxValue" />.</span></span></param>
        <summary><span data-ttu-id="69036-119">Возвращает абсолютное значение 16-битового целого числа со знаком.</span><span class="sxs-lookup"><span data-stu-id="69036-119">Returns the absolute value of a 16-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="69036-120">16-разрядное целое число х со знаком, такое, что 0 ≤ x ≤<see cref="F:System.Int16.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="69036-120">A 16-bit signed integer, x, such that 0 ≤ x ≤<see cref="F:System.Int16.MaxValue" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69036-121">Абсолютное значение <xref:System.Int16> ее числовое значение без знака.</span><span class="sxs-lookup"><span data-stu-id="69036-121">The absolute value of an <xref:System.Int16> is its numeric value without its sign.</span></span> <span data-ttu-id="69036-122">Например абсолютное значение -123 и 123 — 123.</span><span class="sxs-lookup"><span data-stu-id="69036-122">For example, the absolute value of both 123 and -123 is 123.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="69036-123">В следующем примере используется <xref:System.Math.Abs%28System.Int16%29> метод, чтобы получить абсолютное значение числа <xref:System.Int16> значения.</span><span class="sxs-lookup"><span data-stu-id="69036-123">The following example uses the <xref:System.Math.Abs%28System.Int16%29> method to get the absolute value of a number of <xref:System.Int16> values.</span></span>  
  
 [!code-csharp[System.Math.Abs#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.Abs/cs/abs3.cs#3)]
 [!code-vb[System.Math.Abs#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.Abs/vb/abs3.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="69036-124"><paramref name="value" /> равняется <see cref="F:System.Int16.MinValue" />.</span><span class="sxs-lookup"><span data-stu-id="69036-124"><paramref name="value" /> equals <see cref="F:System.Int16.MinValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Abs">
      <MemberSignature Language="C#" Value="public static int Abs (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Abs(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Abs(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Abs (value As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Abs(int value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="69036-125">Число, которое больше значения <see cref="F:System.Int32.MinValue" />, но меньше или равно значению <see cref="F:System.Int32.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="69036-125">A number that is greater than <see cref="F:System.Int32.MinValue" />, but less than or equal to <see cref="F:System.Int32.MaxValue" />.</span></span></param>
        <summary><span data-ttu-id="69036-126">Возвращает абсолютное значение 32-битового целого числа со знаком.</span><span class="sxs-lookup"><span data-stu-id="69036-126">Returns the absolute value of a 32-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="69036-127">32-разрядное целое число х со знаком, такое, что 0 ≤ x ≤<see cref="F:System.Int32.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="69036-127">A 32-bit signed integer, x, such that 0 ≤ x ≤<see cref="F:System.Int32.MaxValue" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69036-128">Абсолютное значение <xref:System.Int32> ее числовое значение без знака.</span><span class="sxs-lookup"><span data-stu-id="69036-128">The absolute value of an <xref:System.Int32> is its numeric value without its sign.</span></span> <span data-ttu-id="69036-129">Например абсолютное значение -123 и 123 — 123.</span><span class="sxs-lookup"><span data-stu-id="69036-129">For example, the absolute value of both 123 and -123 is 123.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="69036-130">В следующем примере используется <xref:System.Math.Abs%28System.Int32%29> метод, чтобы получить абсолютное значение числа <xref:System.Int32> значения.</span><span class="sxs-lookup"><span data-stu-id="69036-130">The following example uses the <xref:System.Math.Abs%28System.Int32%29> method to get the absolute value of a number of <xref:System.Int32> values.</span></span>  
  
 [!code-csharp[System.Math.Abs#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.Abs/cs/abs4.cs#4)]
 [!code-vb[System.Math.Abs#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.Abs/vb/abs4.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="69036-131"><paramref name="value" /> равняется <see cref="F:System.Int32.MinValue" />.</span><span class="sxs-lookup"><span data-stu-id="69036-131"><paramref name="value" /> equals <see cref="F:System.Int32.MinValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Abs">
      <MemberSignature Language="C#" Value="public static long Abs (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 Abs(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Abs(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Abs (value As Long) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long Abs(long value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="69036-132">Число, которое больше значения <see cref="F:System.Int64.MinValue" />, но меньше или равно значению <see cref="F:System.Int64.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="69036-132">A number that is greater than <see cref="F:System.Int64.MinValue" />, but less than or equal to <see cref="F:System.Int64.MaxValue" />.</span></span></param>
        <summary><span data-ttu-id="69036-133">Возвращает абсолютное значение 64-битового целого числа со знаком.</span><span class="sxs-lookup"><span data-stu-id="69036-133">Returns the absolute value of a 64-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="69036-134">64-разрядное целое число х со знаком, такое, что 0 ≤ x ≤<see cref="F:System.Int64.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="69036-134">A 64-bit signed integer, x, such that 0 ≤ x ≤<see cref="F:System.Int64.MaxValue" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69036-135">Абсолютное значение <xref:System.Int64> ее числовое значение без знака.</span><span class="sxs-lookup"><span data-stu-id="69036-135">The absolute value of an <xref:System.Int64> is its numeric value without its sign.</span></span> <span data-ttu-id="69036-136">Например абсолютное значение -123 и 123 — 123.</span><span class="sxs-lookup"><span data-stu-id="69036-136">For example, the absolute value of both 123 and -123 is 123.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="69036-137">В следующем примере используется <xref:System.Math.Abs%28System.Int64%29> метод, чтобы получить абсолютное значение числа <xref:System.Int64> значения.</span><span class="sxs-lookup"><span data-stu-id="69036-137">The following example uses the <xref:System.Math.Abs%28System.Int64%29> method to get the absolute value of a number of <xref:System.Int64> values.</span></span>  
  
 [!code-csharp[System.Math.Abs#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.Abs/cs/abs5.cs#5)]
 [!code-vb[System.Math.Abs#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.Abs/vb/abs5.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="69036-138"><paramref name="value" /> равняется <see cref="F:System.Int64.MinValue" />.</span><span class="sxs-lookup"><span data-stu-id="69036-138"><paramref name="value" /> equals <see cref="F:System.Int64.MinValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Abs">
      <MemberSignature Language="C#" Value="public static sbyte Abs (sbyte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int8 Abs(int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Abs(System.SByte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Abs (value As SByte) As SByte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::SByte Abs(System::SByte value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="69036-139">Число, которое больше значения <see cref="F:System.SByte.MinValue" />, но меньше или равно значению <see cref="F:System.SByte.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="69036-139">A number that is greater than <see cref="F:System.SByte.MinValue" />, but less than or equal to <see cref="F:System.SByte.MaxValue" />.</span></span></param>
        <summary><span data-ttu-id="69036-140">Возвращает абсолютное значение 8-битового целого числа со знаком.</span><span class="sxs-lookup"><span data-stu-id="69036-140">Returns the absolute value of an 8-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="69036-141">8-разрядное целое число х со знаком, такое, что 0 ≤ x ≤<see cref="F:System.SByte.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="69036-141">An 8-bit signed integer, x, such that 0 ≤ x ≤<see cref="F:System.SByte.MaxValue" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69036-142">Абсолютное значение типа byte со знаком — его числовое значение без знака.</span><span class="sxs-lookup"><span data-stu-id="69036-142">The absolute value of a signed byte is its numeric value without its sign.</span></span> <span data-ttu-id="69036-143">Например абсолютное значение 12 и -12 — 12.</span><span class="sxs-lookup"><span data-stu-id="69036-143">For example, the absolute value of both 12 and -12 is 12.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="69036-144">В следующем примере используется <xref:System.Math.Abs%28System.SByte%29> метод, чтобы получить абсолютное значение числа <xref:System.SByte> значения.</span><span class="sxs-lookup"><span data-stu-id="69036-144">The following example uses the <xref:System.Math.Abs%28System.SByte%29> method to get the absolute value of a number of <xref:System.SByte> values.</span></span>  
  
 [!code-csharp[System.Math.Abs#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.Abs/cs/abs6.cs#6)]
 [!code-vb[System.Math.Abs#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.Abs/vb/abs6.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="69036-145"><paramref name="value" /> равняется <see cref="F:System.SByte.MinValue" />.</span><span class="sxs-lookup"><span data-stu-id="69036-145"><paramref name="value" /> equals <see cref="F:System.SByte.MinValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Abs">
      <MemberSignature Language="C#" Value="public static float Abs (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 Abs(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Abs(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Abs (value As Single) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float Abs(float value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="69036-146">Число, которое больше или равно значению <see cref="F:System.Single.MinValue" />, но меньше или равно значению <see cref="F:System.Single.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="69036-146">A number that is greater than or equal to <see cref="F:System.Single.MinValue" />, but less than or equal to <see cref="F:System.Single.MaxValue" />.</span></span></param>
        <summary><span data-ttu-id="69036-147">Возвращает абсолютное значение числа одинарной точности с плавающей запятой.</span><span class="sxs-lookup"><span data-stu-id="69036-147">Returns the absolute value of a single-precision floating-point number.</span></span></summary>
        <returns><span data-ttu-id="69036-148">Число х одинарной точности с плавающей запятой, такое, что 0 ≤ x ≤<see cref="F:System.Single.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="69036-148">A single-precision floating-point number, x, such that 0 ≤ x ≤<see cref="F:System.Single.MaxValue" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69036-149">Абсолютное значение <xref:System.Single> ее числовое значение без знака.</span><span class="sxs-lookup"><span data-stu-id="69036-149">The absolute value of a <xref:System.Single> is its numeric value without its sign.</span></span> <span data-ttu-id="69036-150">Например, абсолютное значение обоих 1.2E-03 и - 1.2e03 — 1.2e03.</span><span class="sxs-lookup"><span data-stu-id="69036-150">For example, the absolute value of both 1.2e-03 and -1.2e03 is 1.2e03.</span></span>  
  
 <span data-ttu-id="69036-151">Если `value` равен <xref:System.Single.NegativeInfinity> или <xref:System.Single.PositiveInfinity>, возвращается значение <xref:System.Single.PositiveInfinity>.</span><span class="sxs-lookup"><span data-stu-id="69036-151">If `value` is equal to <xref:System.Single.NegativeInfinity> or <xref:System.Single.PositiveInfinity>, the return value is <xref:System.Single.PositiveInfinity>.</span></span> <span data-ttu-id="69036-152">Если `value` равен <xref:System.Single.NaN>, возвращается значение <xref:System.Single.NaN>.</span><span class="sxs-lookup"><span data-stu-id="69036-152">If `value` is equal to <xref:System.Single.NaN>, the return value is <xref:System.Single.NaN>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="69036-153">В следующем примере используется <xref:System.Math.Abs%28System.Single%29> метод, чтобы получить абсолютное значение числа <xref:System.Single> значения.</span><span class="sxs-lookup"><span data-stu-id="69036-153">The following example uses the <xref:System.Math.Abs%28System.Single%29> method to get the absolute value of a number of <xref:System.Single> values.</span></span>  
  
 [!code-csharp[System.Math.Abs#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.Abs/cs/abs7.cs#7)]
 [!code-vb[System.Math.Abs#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.Abs/vb/abs7.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Acos">
      <MemberSignature Language="C#" Value="public static double Acos (double d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Acos(float64 d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Acos(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Acos (d As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Acos(double d);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="69036-154">Число, представляющее косинус, где значение параметра <c>d</c> должно быть больше или равно –1, но меньше или равно 1.</span><span class="sxs-lookup"><span data-stu-id="69036-154">A number representing a cosine, where <c>d</c> must be greater than or equal to -1, but less than or equal to 1.</span></span></param>
        <summary><span data-ttu-id="69036-155">Возвращает угол, косинус которого равен указанному числу.</span><span class="sxs-lookup"><span data-stu-id="69036-155">Returns the angle whose cosine is the specified number.</span></span></summary>
        <returns><span data-ttu-id="69036-156">Угол θ, измеренный в радианах, такой, что 0 ≤θ≤π</span><span class="sxs-lookup"><span data-stu-id="69036-156">An angle, θ, measured in radians, such that 0 ≤θ≤π</span></span>  
  
 <span data-ttu-id="69036-157">- или -</span><span class="sxs-lookup"><span data-stu-id="69036-157">-or-</span></span>  
  
 <span data-ttu-id="69036-158">Значение <see cref="F:System.Double.NaN" />, если <paramref name="d" /> &lt; –1 или <paramref name="d" /> &gt; 1 или значение параметра <paramref name="d" /> равно <see cref="F:System.Double.NaN" />.</span><span class="sxs-lookup"><span data-stu-id="69036-158"><see cref="F:System.Double.NaN" /> if <paramref name="d" /> &lt; -1 or <paramref name="d" /> &gt; 1 or <paramref name="d" /> equals <see cref="F:System.Double.NaN" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69036-159">Умножьте значение на 180 /<xref:System.Math.PI?displayProperty=nameWithType> для преобразования из радиан в градусы.</span><span class="sxs-lookup"><span data-stu-id="69036-159">Multiply the return value by 180/<xref:System.Math.PI?displayProperty=nameWithType> to convert from radians to degrees.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="69036-160">В следующем примере используется <xref:System.Math.Acos%2A> метод, чтобы при вычислении внутренних углов заданной трапеции.</span><span class="sxs-lookup"><span data-stu-id="69036-160">The following example uses the <xref:System.Math.Acos%2A> method to assist in the computation of the inner angles of a given trapezoid.</span></span>  
  
 [!code-cpp[MathSample#1](~/samples/snippets/cpp/VS_Snippets_CLR/MathSample/CPP/mathsample.cpp#1)]
 [!code-csharp[MathSample#1](~/samples/snippets/csharp/VS_Snippets_CLR/MathSample/CS/mathsample.cs#1)]
 [!code-vb[MathSample#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/MathSample/VB/mathsample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Asin">
      <MemberSignature Language="C#" Value="public static double Asin (double d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Asin(float64 d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Asin(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Asin (d As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Asin(double d);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="69036-161">Число, представляющее синус, где значение параметра <c>d</c> должно быть больше или равно –1, но меньше или равно 1.</span><span class="sxs-lookup"><span data-stu-id="69036-161">A number representing a sine, where <c>d</c> must be greater than or equal to -1, but less than or equal to 1.</span></span></param>
        <summary><span data-ttu-id="69036-162">Возвращает угол, синус которого равен указанному числу.</span><span class="sxs-lookup"><span data-stu-id="69036-162">Returns the angle whose sine is the specified number.</span></span></summary>
        <returns><span data-ttu-id="69036-163">Угол θ, измеренный в радианах, такой, что -π/2 ≤θ≤π/2</span><span class="sxs-lookup"><span data-stu-id="69036-163">An angle, θ, measured in radians, such that -π/2 ≤θ≤π/2</span></span>  
  
 <span data-ttu-id="69036-164">- или -</span><span class="sxs-lookup"><span data-stu-id="69036-164">-or-</span></span>  
  
 <span data-ttu-id="69036-165">Значение <see cref="F:System.Double.NaN" />, если <paramref name="d" /> &lt; –1 или <paramref name="d" /> &gt; 1 или значение параметра <paramref name="d" /> равно <see cref="F:System.Double.NaN" />.</span><span class="sxs-lookup"><span data-stu-id="69036-165"><see cref="F:System.Double.NaN" /> if <paramref name="d" /> &lt; -1 or <paramref name="d" /> &gt; 1 or <paramref name="d" /> equals <see cref="F:System.Double.NaN" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69036-166">Положительное возвращаемое значение представляет угол против часовой стрелки от оси x; Возвращает отрицательное значение представляет по часовой стрелке.</span><span class="sxs-lookup"><span data-stu-id="69036-166">A positive return value represents a counterclockwise angle from the x-axis; a negative return value represents a clockwise angle.</span></span>  
  
 <span data-ttu-id="69036-167">Умножьте значение на 180 /<xref:System.Math.PI?displayProperty=nameWithType> для преобразования из радиан в градусы.</span><span class="sxs-lookup"><span data-stu-id="69036-167">Multiply the return value by 180/<xref:System.Math.PI?displayProperty=nameWithType> to convert from radians to degrees.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="69036-168">В следующем примере используется <xref:System.Math.Asin%2A> для при вычислении внутренних углов заданной трапеции.</span><span class="sxs-lookup"><span data-stu-id="69036-168">The following example uses <xref:System.Math.Asin%2A> to assist in the computation of the inner angles of a given trapezoid.</span></span>  
  
 [!code-cpp[MathSample#1](~/samples/snippets/cpp/VS_Snippets_CLR/MathSample/CPP/mathsample.cpp#1)]
 [!code-csharp[MathSample#1](~/samples/snippets/csharp/VS_Snippets_CLR/MathSample/CS/mathsample.cs#1)]
 [!code-vb[MathSample#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/MathSample/VB/mathsample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Atan">
      <MemberSignature Language="C#" Value="public static double Atan (double d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Atan(float64 d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Atan(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Atan (d As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Atan(double d);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="69036-169">Число, представляющее тангенс.</span><span class="sxs-lookup"><span data-stu-id="69036-169">A number representing a tangent.</span></span></param>
        <summary><span data-ttu-id="69036-170">Возвращает угол, тангенс которого равен указанному числу.</span><span class="sxs-lookup"><span data-stu-id="69036-170">Returns the angle whose tangent is the specified number.</span></span></summary>
        <returns><span data-ttu-id="69036-171">Угол θ, измеренный в радианах, такой, что -π/2 ≤θ≤π/2.</span><span class="sxs-lookup"><span data-stu-id="69036-171">An angle, θ, measured in radians, such that -π/2 ≤θ≤π/2.</span></span>  
  
 <span data-ttu-id="69036-172">- или -</span><span class="sxs-lookup"><span data-stu-id="69036-172">-or-</span></span>  
  
 <span data-ttu-id="69036-173">Значение <see cref="F:System.Double.NaN" />, если <paramref name="d" /> равно <see cref="F:System.Double.NaN" />, -π/2, округленное до двойной точности (–1,5707963267949), если <paramref name="d" /> равно <see cref="F:System.Double.NegativeInfinity" />, или π/2, округленное до двойной точности (1,5707963267949), если <paramref name="d" /> равно <see cref="F:System.Double.PositiveInfinity" />.</span><span class="sxs-lookup"><span data-stu-id="69036-173"><see cref="F:System.Double.NaN" /> if <paramref name="d" /> equals <see cref="F:System.Double.NaN" />, -π/2 rounded to double precision (-1.5707963267949) if <paramref name="d" /> equals <see cref="F:System.Double.NegativeInfinity" />, or π/2 rounded to double precision (1.5707963267949) if <paramref name="d" /> equals <see cref="F:System.Double.PositiveInfinity" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69036-174">Положительное возвращаемое значение представляет угол против часовой стрелки от оси x; Возвращает отрицательное значение представляет по часовой стрелке.</span><span class="sxs-lookup"><span data-stu-id="69036-174">A positive return value represents a counterclockwise angle from the x-axis; a negative return value represents a clockwise angle.</span></span>  
  
 <span data-ttu-id="69036-175">Умножьте значение на 180 /<xref:System.Math.PI?displayProperty=nameWithType> для преобразования из радиан в градусы.</span><span class="sxs-lookup"><span data-stu-id="69036-175">Multiply the return value by 180/<xref:System.Math.PI?displayProperty=nameWithType> to convert from radians to degrees.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="69036-176">Следующий пример демонстрирует вычисление арктангенса заданного значения и вывод на консоль.</span><span class="sxs-lookup"><span data-stu-id="69036-176">The following example demonstrates how to calculate the arctangent of a value and display it to the console.</span></span>  
  
 [!code-cpp[math.atanx#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.atanx/CPP/atan.cpp#1)]
 [!code-csharp[math.atanx#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.atanx/CS/atan.cs#1)]
 [!code-vb[math.atanx#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.atanx/VB/atan.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Atan2">
      <MemberSignature Language="C#" Value="public static double Atan2 (double y, double x);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Atan2(float64 y, float64 x) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Atan2(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Atan2 (y As Double, x As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Atan2(double y, double x);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="y" Type="System.Double" />
        <Parameter Name="x" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="y"><span data-ttu-id="69036-177">Координата y точки.</span><span class="sxs-lookup"><span data-stu-id="69036-177">The y coordinate of a point.</span></span></param>
        <param name="x"><span data-ttu-id="69036-178">Координата х точки.</span><span class="sxs-lookup"><span data-stu-id="69036-178">The x coordinate of a point.</span></span></param>
        <summary><span data-ttu-id="69036-179">Возвращает угол, тангенс которого равен отношению двух указанных чисел.</span><span class="sxs-lookup"><span data-stu-id="69036-179">Returns the angle whose tangent is the quotient of two specified numbers.</span></span></summary>
        <returns><span data-ttu-id="69036-180">Угол θ, измеренный в радианах, такой, что -π≤θ≤π, и tan(θ) = <paramref name="y" /> / <paramref name="x" />, где (<paramref name="x" />, <paramref name="y" />) — это точка в декартовой системе координат.</span><span class="sxs-lookup"><span data-stu-id="69036-180">An angle, θ, measured in radians, such that -π≤θ≤π, and tan(θ) = <paramref name="y" /> / <paramref name="x" />, where (<paramref name="x" />, <paramref name="y" />) is a point in the Cartesian plane.</span></span> <span data-ttu-id="69036-181">Обратите внимание на следующее.</span><span class="sxs-lookup"><span data-stu-id="69036-181">Observe the following:</span></span>  
  
-   <span data-ttu-id="69036-182">Для (<paramref name="x" />,<paramref name="y" />) в квадранте 1, 0 &lt; θ &lt; π/2.</span><span class="sxs-lookup"><span data-stu-id="69036-182">For (<paramref name="x" />, <paramref name="y" />) in quadrant 1, 0 &lt; θ &lt; π/2.</span></span>  
  
-   <span data-ttu-id="69036-183">Для (<paramref name="x" />,<paramref name="y" />) в квадранте 2, π/2 &lt; θ≤π.</span><span class="sxs-lookup"><span data-stu-id="69036-183">For (<paramref name="x" />, <paramref name="y" />) in quadrant 2, π/2 &lt; θ≤π.</span></span>  
  
-   <span data-ttu-id="69036-184">Для (<paramref name="x" />,<paramref name="y" />) в квадранте 3, -π &lt; θ &lt; -π/2.</span><span class="sxs-lookup"><span data-stu-id="69036-184">For (<paramref name="x" />, <paramref name="y" />) in quadrant 3, -π &lt; θ &lt; -π/2.</span></span>  
  
-   <span data-ttu-id="69036-185">Для (<paramref name="x" />,<paramref name="y" />) в квадранте 4, -π/2 &lt; θ &lt; 0.</span><span class="sxs-lookup"><span data-stu-id="69036-185">For (<paramref name="x" />, <paramref name="y" />) in quadrant 4, -π/2 &lt; θ &lt; 0.</span></span>  
  
 <span data-ttu-id="69036-186">Для точек за пределами указанных квадрантов возвращаемое значение указано ниже.</span><span class="sxs-lookup"><span data-stu-id="69036-186">For points on the boundaries of the quadrants, the return value is the following:</span></span>  
  
-   <span data-ttu-id="69036-187">Если y равно 0 и x не является отрицательным, θ = 0.</span><span class="sxs-lookup"><span data-stu-id="69036-187">If y is 0 and x is not negative, θ = 0.</span></span>  
  
-   <span data-ttu-id="69036-188">Если y равно 0 и x не является отрицательным, θ = π.</span><span class="sxs-lookup"><span data-stu-id="69036-188">If y is 0 and x is negative, θ = π.</span></span>  
  
-   <span data-ttu-id="69036-189">Если y — положительное число, а x равно 0, θ = π/2.</span><span class="sxs-lookup"><span data-stu-id="69036-189">If y is positive and x is 0, θ = π/2.</span></span>  
  
-   <span data-ttu-id="69036-190">Если y является отрицательным и х равно 0, θ = -π/2.</span><span class="sxs-lookup"><span data-stu-id="69036-190">If y is negative and x is 0, θ = -π/2.</span></span>  
  
-   <span data-ttu-id="69036-191">Если y равен 0 и х равен 0, то θ = -π/2.</span><span class="sxs-lookup"><span data-stu-id="69036-191">If y is 0 and x is 0, θ = 0.</span></span>  
  
 <span data-ttu-id="69036-192">Если значение параметра <paramref name="x" /> или <paramref name="y" /> равно <see cref="F:System.Double.NaN" /> либо если значения параметров <paramref name="x" /> и <paramref name="y" /> равны значению <see cref="F:System.Double.PositiveInfinity" /> или <see cref="F:System.Double.NegativeInfinity" />, метод возвращает значение <see cref="F:System.Double.NaN" />.</span><span class="sxs-lookup"><span data-stu-id="69036-192">If <paramref name="x" /> or <paramref name="y" /> is <see cref="F:System.Double.NaN" />, or if <paramref name="x" /> and <paramref name="y" /> are either <see cref="F:System.Double.PositiveInfinity" /> or <see cref="F:System.Double.NegativeInfinity" />, the method returns <see cref="F:System.Double.NaN" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69036-193">Возвращаемое значение — это угол, в декартовой системе координат, сформированный путем оси x и vector, начиная от начала координат (0,0) и заканчивающимся в точке, (x, y).</span><span class="sxs-lookup"><span data-stu-id="69036-193">The return value is the angle in the Cartesian plane formed by the x-axis, and a vector starting from the origin, (0,0), and terminating at the point, (x,y).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="69036-194">Следующий пример демонстрирует вычисление арктангенса угла и вектора.</span><span class="sxs-lookup"><span data-stu-id="69036-194">The following example demonstrates how to calculate the arctangent of an angle and a vector.</span></span> <span data-ttu-id="69036-195">Результирующее значение отображается в консоли.</span><span class="sxs-lookup"><span data-stu-id="69036-195">The resulting value is displayed in the console.</span></span>  
  
 [!code-cpp[math.atanx#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.atanx/CPP/atan.cpp#1)]
 [!code-csharp[math.atanx#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.atanx/CS/atan.cs#1)]
 [!code-vb[math.atanx#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.atanx/VB/atan.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BigMul">
      <MemberSignature Language="C#" Value="public static long BigMul (int a, int b);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 BigMul(int32 a, int32 b) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.BigMul(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BigMul (a As Integer, b As Integer) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long BigMul(int a, int b);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Int32" />
        <Parameter Name="b" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="a"><span data-ttu-id="69036-196">Первое число для умножения.</span><span class="sxs-lookup"><span data-stu-id="69036-196">The first number to multiply.</span></span></param>
        <param name="b"><span data-ttu-id="69036-197">Второе число для умножения.</span><span class="sxs-lookup"><span data-stu-id="69036-197">The second number to multiply.</span></span></param>
        <summary><span data-ttu-id="69036-198">Умножает два 32-битовых числа.</span><span class="sxs-lookup"><span data-stu-id="69036-198">Produces the full product of two 32-bit numbers.</span></span></summary>
        <returns><span data-ttu-id="69036-199">Число, являющееся произведением указанных чисел.</span><span class="sxs-lookup"><span data-stu-id="69036-199">The number containing the product of the specified numbers.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="69036-200">В следующем примере показано использование <xref:System.Math.BigMul%2A> метод для вычисления произведения двух целочисленных значений.</span><span class="sxs-lookup"><span data-stu-id="69036-200">The following example demonstrates the use of the <xref:System.Math.BigMul%2A> method to calculate the product of two integer values.</span></span>  
  
 [!code-cpp[math.bigmul#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.bigmul/CPP/bigmul.cpp#1)]
 [!code-csharp[math.bigmul#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.bigmul/CS/bigmul.cs#1)]
 [!code-vb[math.bigmul#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.bigmul/VB/bigmul.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Ceiling">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="69036-201">Возвращает наименьшее целое число, которое больше или равно указанному числу.</span><span class="sxs-lookup"><span data-stu-id="69036-201">Returns the smallest integral value greater than or equal to the specified number.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69036-202">Поведение данного метода соответствует стандарту IEEE-754, раздел 4.</span><span class="sxs-lookup"><span data-stu-id="69036-202">The behavior of this method follows IEEE Standard 754, section 4.</span></span> <span data-ttu-id="69036-203">Этот способ округления иногда называется округлением в сторону положительной бесконечности.</span><span class="sxs-lookup"><span data-stu-id="69036-203">This kind of rounding is sometimes called rounding toward positive infinity.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Ceiling">
      <MemberSignature Language="C#" Value="public static decimal Ceiling (decimal d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Ceiling(valuetype System.Decimal d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Ceiling(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Ceiling (d As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Ceiling(System::Decimal d);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="69036-204">Десятичное число.</span><span class="sxs-lookup"><span data-stu-id="69036-204">A decimal number.</span></span></param>
        <summary><span data-ttu-id="69036-205">Возвращает наименьшее целое число, которое больше или равно заданному десятичному числу.</span><span class="sxs-lookup"><span data-stu-id="69036-205">Returns the smallest integral value that is greater than or equal to the specified decimal number.</span></span></summary>
        <returns><span data-ttu-id="69036-206">Наименьшее целочисленное значение, которое больше или равно <paramref name="d" />.</span><span class="sxs-lookup"><span data-stu-id="69036-206">The smallest integral value that is greater than or equal to <paramref name="d" />.</span></span> <span data-ttu-id="69036-207">Обратите внимание, что данный метод возвращает не целочисленное значение, а значение типа <see cref="T:System.Decimal" />.</span><span class="sxs-lookup"><span data-stu-id="69036-207">Note that this method returns a <see cref="T:System.Decimal" /> instead of an integral type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69036-208">Поведение данного метода соответствует стандарту IEEE-754, раздел 4.</span><span class="sxs-lookup"><span data-stu-id="69036-208">The behavior of this method follows IEEE Standard 754, section 4.</span></span> <span data-ttu-id="69036-209">Этот способ округления иногда называется округлением в сторону положительной бесконечности.</span><span class="sxs-lookup"><span data-stu-id="69036-209">This kind of rounding is sometimes called rounding toward positive infinity.</span></span> <span data-ttu-id="69036-210">Другими словами Если `d` является положительным, наличие любого дробного компонента причины `d` до следующего наибольшего целого числа.</span><span class="sxs-lookup"><span data-stu-id="69036-210">In other words, if `d` is positive, the presence of any fractional component causes `d` to be rounded to the next highest integer.</span></span> <span data-ttu-id="69036-211">Если `d` является отрицательным, операция округления приводит любой дробная часть `d` будут отменены.</span><span class="sxs-lookup"><span data-stu-id="69036-211">If `d` is negative, the rounding operation causes any fractional component of `d` to be discarded.</span></span> <span data-ttu-id="69036-212">Операция этот метод отличается от <xref:System.Math.Floor%28System.Decimal%29> метод, который поддерживает округлением в сторону отрицательной бесконечности.</span><span class="sxs-lookup"><span data-stu-id="69036-212">The operation of this method differs from the <xref:System.Math.Floor%28System.Decimal%29> method, which supports rounding toward negative infinity.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="69036-213">В следующем примере демонстрируется <xref:System.Math.Ceiling%28System.Decimal%29?displayProperty=nameWithType> метод и производится сравнение его с <xref:System.Math.Floor%28System.Decimal%29> метод.</span><span class="sxs-lookup"><span data-stu-id="69036-213">The following example illustrates the <xref:System.Math.Ceiling%28System.Decimal%29?displayProperty=nameWithType> method and contrasts it with the <xref:System.Math.Floor%28System.Decimal%29> method.</span></span>  
  
 [!code-csharp[System.Math.Ceiling#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.Ceiling/cs/Ceiling1.cs#1)]
 [!code-vb[System.Math.Ceiling#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.Ceiling/vb/Ceiling1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Math.Round" />
        <altmember cref="M:System.Math.Floor(System.Decimal)" />
      </Docs>
    </Member>
    <Member MemberName="Ceiling">
      <MemberSignature Language="C#" Value="public static double Ceiling (double a);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Ceiling(float64 a) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Ceiling(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Ceiling (a As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Ceiling(double a);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="a"><span data-ttu-id="69036-214">Число двойной точности с плавающей запятой.</span><span class="sxs-lookup"><span data-stu-id="69036-214">A double-precision floating-point number.</span></span></param>
        <summary><span data-ttu-id="69036-215">Возвращает наименьшее целое число, которое больше или равно заданному числу с плавающей запятой двойной точности.</span><span class="sxs-lookup"><span data-stu-id="69036-215">Returns the smallest integral value that is greater than or equal to the specified double-precision floating-point number.</span></span></summary>
        <returns><span data-ttu-id="69036-216">Наименьшее целочисленное значение, которое больше или равно <paramref name="a" />.</span><span class="sxs-lookup"><span data-stu-id="69036-216">The smallest integral value that is greater than or equal to <paramref name="a" />.</span></span> <span data-ttu-id="69036-217">Если значение параметра <paramref name="a" /> равно  <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.NegativeInfinity" /> или <see cref="F:System.Double.PositiveInfinity" />, возвращается это значение.</span><span class="sxs-lookup"><span data-stu-id="69036-217">If <paramref name="a" /> is equal to <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.NegativeInfinity" />, or <see cref="F:System.Double.PositiveInfinity" />, that value is returned.</span></span> <span data-ttu-id="69036-218">Обратите внимание, что данный метод возвращает не целочисленное значение, а значение типа <see cref="T:System.Double" />.</span><span class="sxs-lookup"><span data-stu-id="69036-218">Note that this method returns a <see cref="T:System.Double" /> instead of an integral type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69036-219">Поведение данного метода соответствует стандарту IEEE-754, раздел 4.</span><span class="sxs-lookup"><span data-stu-id="69036-219">The behavior of this method follows IEEE Standard 754, section 4.</span></span> <span data-ttu-id="69036-220">Этот способ округления иногда называется округлением в сторону положительной бесконечности.</span><span class="sxs-lookup"><span data-stu-id="69036-220">This kind of rounding is sometimes called rounding toward positive infinity.</span></span> <span data-ttu-id="69036-221">Другими словами Если `a` является положительным, наличие любого дробного компонента причины `a` до следующего наибольшего целого числа.</span><span class="sxs-lookup"><span data-stu-id="69036-221">In other words, if `a` is positive, the presence of any fractional component causes `a` to be rounded to the next highest integer.</span></span> <span data-ttu-id="69036-222">Если `a` является отрицательным, операция округления приводит любой дробная часть `a` будут отменены.</span><span class="sxs-lookup"><span data-stu-id="69036-222">If `a` is negative, the rounding operation causes any fractional component of `a` to be discarded.</span></span> <span data-ttu-id="69036-223">Операция этот метод отличается от <xref:System.Math.Floor%28System.Double%29> метод, который поддерживает округлением в сторону отрицательной бесконечности.</span><span class="sxs-lookup"><span data-stu-id="69036-223">The operation of this method differs from the <xref:System.Math.Floor%28System.Double%29> method, which supports rounding toward negative infinity.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="69036-224">В следующем примере демонстрируется <xref:System.Math.Ceiling%28System.Double%29?displayProperty=nameWithType> метод и производится сравнение его с <xref:System.Math.Floor%28System.Double%29> метод.</span><span class="sxs-lookup"><span data-stu-id="69036-224">The following example illustrates the <xref:System.Math.Ceiling%28System.Double%29?displayProperty=nameWithType> method and contrasts it with the <xref:System.Math.Floor%28System.Double%29> method.</span></span>  
  
 [!code-csharp[System.Math.Ceiling#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.Ceiling/cs/Ceiling1.cs#2)]
 [!code-vb[System.Math.Ceiling#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.Ceiling/vb/Ceiling1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Math.Round" />
        <altmember cref="M:System.Math.Floor(System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="Clamp">
      <MemberSignature Language="C#" Value="public static byte Clamp (byte value, byte min, byte max);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8 Clamp(unsigned int8 value, unsigned int8 min, unsigned int8 max) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Clamp(System.Byte,System.Byte,System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Clamp (value As Byte, min As Byte, max As Byte) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Byte Clamp(System::Byte value, System::Byte min, System::Byte max);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte" />
        <Parameter Name="min" Type="System.Byte" />
        <Parameter Name="max" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="min">To be added.</param>
        <param name="max">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clamp">
      <MemberSignature Language="C#" Value="public static decimal Clamp (decimal value, decimal min, decimal max);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Clamp(valuetype System.Decimal value, valuetype System.Decimal min, valuetype System.Decimal max) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Clamp(System.Decimal,System.Decimal,System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Clamp (value As Decimal, min As Decimal, max As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Clamp(System::Decimal value, System::Decimal min, System::Decimal max);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
        <Parameter Name="min" Type="System.Decimal" />
        <Parameter Name="max" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="min">To be added.</param>
        <param name="max">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clamp">
      <MemberSignature Language="C#" Value="public static double Clamp (double value, double min, double max);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Clamp(float64 value, float64 min, float64 max) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Clamp(System.Double,System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Clamp (value As Double, min As Double, max As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Clamp(double value, double min, double max);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
        <Parameter Name="min" Type="System.Double" />
        <Parameter Name="max" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="min">To be added.</param>
        <param name="max">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clamp">
      <MemberSignature Language="C#" Value="public static short Clamp (short value, short min, short max);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 Clamp(int16 value, int16 min, int16 max) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Clamp(System.Int16,System.Int16,System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Clamp (value As Short, min As Short, max As Short) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short Clamp(short value, short min, short max);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int16" />
        <Parameter Name="min" Type="System.Int16" />
        <Parameter Name="max" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="min">To be added.</param>
        <param name="max">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clamp">
      <MemberSignature Language="C#" Value="public static int Clamp (int value, int min, int max);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Clamp(int32 value, int32 min, int32 max) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Clamp(System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Clamp (value As Integer, min As Integer, max As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Clamp(int value, int min, int max);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
        <Parameter Name="min" Type="System.Int32" />
        <Parameter Name="max" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="min">To be added.</param>
        <param name="max">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clamp">
      <MemberSignature Language="C#" Value="public static long Clamp (long value, long min, long max);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 Clamp(int64 value, int64 min, int64 max) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Clamp(System.Int64,System.Int64,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Clamp (value As Long, min As Long, max As Long) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long Clamp(long value, long min, long max);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
        <Parameter Name="min" Type="System.Int64" />
        <Parameter Name="max" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="min">To be added.</param>
        <param name="max">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clamp">
      <MemberSignature Language="C#" Value="public static sbyte Clamp (sbyte value, sbyte min, sbyte max);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int8 Clamp(int8 value, int8 min, int8 max) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Clamp(System.SByte,System.SByte,System.SByte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Clamp (value As SByte, min As SByte, max As SByte) As SByte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::SByte Clamp(System::SByte value, System::SByte min, System::SByte max);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.SByte" />
        <Parameter Name="min" Type="System.SByte" />
        <Parameter Name="max" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="min">To be added.</param>
        <param name="max">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clamp">
      <MemberSignature Language="C#" Value="public static float Clamp (float value, float min, float max);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 Clamp(float32 value, float32 min, float32 max) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Clamp(System.Single,System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Clamp (value As Single, min As Single, max As Single) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float Clamp(float value, float min, float max);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
        <Parameter Name="min" Type="System.Single" />
        <Parameter Name="max" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="min">To be added.</param>
        <param name="max">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clamp">
      <MemberSignature Language="C#" Value="public static ushort Clamp (ushort value, ushort min, ushort max);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int16 Clamp(unsigned int16 value, unsigned int16 min, unsigned int16 max) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Clamp(System.UInt16,System.UInt16,System.UInt16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Clamp (value As UShort, min As UShort, max As UShort) As UShort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt16 Clamp(System::UInt16 value, System::UInt16 min, System::UInt16 max);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt16" />
        <Parameter Name="min" Type="System.UInt16" />
        <Parameter Name="max" Type="System.UInt16" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="min">To be added.</param>
        <param name="max">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clamp">
      <MemberSignature Language="C#" Value="public static uint Clamp (uint value, uint min, uint max);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 Clamp(unsigned int32 value, unsigned int32 min, unsigned int32 max) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Clamp(System.UInt32,System.UInt32,System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Clamp (value As UInteger, min As UInteger, max As UInteger) As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt32 Clamp(System::UInt32 value, System::UInt32 min, System::UInt32 max);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
        <Parameter Name="min" Type="System.UInt32" />
        <Parameter Name="max" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="min">To be added.</param>
        <param name="max">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clamp">
      <MemberSignature Language="C#" Value="public static ulong Clamp (ulong value, ulong min, ulong max);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 Clamp(unsigned int64 value, unsigned int64 min, unsigned int64 max) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Clamp(System.UInt64,System.UInt64,System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Clamp (value As ULong, min As ULong, max As ULong) As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 Clamp(System::UInt64 value, System::UInt64 min, System::UInt64 max);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
        <Parameter Name="min" Type="System.UInt64" />
        <Parameter Name="max" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="min">To be added.</param>
        <param name="max">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Cos">
      <MemberSignature Language="C#" Value="public static double Cos (double d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Cos(float64 d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Cos(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Cos (d As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Cos(double d);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="69036-225">Угол, измеряемый в радианах.</span><span class="sxs-lookup"><span data-stu-id="69036-225">An angle, measured in radians.</span></span></param>
        <summary><span data-ttu-id="69036-226">Возвращает косинус указанного угла.</span><span class="sxs-lookup"><span data-stu-id="69036-226">Returns the cosine of the specified angle.</span></span></summary>
        <returns><span data-ttu-id="69036-227">Косинус <paramref name="d" />.</span><span class="sxs-lookup"><span data-stu-id="69036-227">The cosine of <paramref name="d" />.</span></span> <span data-ttu-id="69036-228">Если значение параметра <paramref name="d" /> равно <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.NegativeInfinity" /> или <see cref="F:System.Double.PositiveInfinity" />, то данный метод возвращает <see cref="F:System.Double.NaN" />.</span><span class="sxs-lookup"><span data-stu-id="69036-228">If <paramref name="d" /> is equal to <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.NegativeInfinity" />, or <see cref="F:System.Double.PositiveInfinity" />, this method returns <see cref="F:System.Double.NaN" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69036-229">Угол `d`, должны быть указаны в радианах.</span><span class="sxs-lookup"><span data-stu-id="69036-229">The angle, `d`, must be in radians.</span></span> <span data-ttu-id="69036-230">Умножить по <xref:System.Math.PI?displayProperty=nameWithType>/180 для преобразования градусов в радианы.</span><span class="sxs-lookup"><span data-stu-id="69036-230">Multiply by <xref:System.Math.PI?displayProperty=nameWithType>/180 to convert degrees to radians.</span></span>  
  
 <span data-ttu-id="69036-231">Допустимы значения `d` в диапазоне от приблизительно -9223372036854775295 до приблизительно 9223372036854775295.</span><span class="sxs-lookup"><span data-stu-id="69036-231">Acceptable values of `d` range from approximately -9223372036854775295 to approximately 9223372036854775295.</span></span> <span data-ttu-id="69036-232">Для значений за пределами этого диапазона <xref:System.Math.Cos%2A> возвращает `d` без изменений, а не вызывая исключение.</span><span class="sxs-lookup"><span data-stu-id="69036-232">For values outside this range, the <xref:System.Math.Cos%2A> method returns `d` unchanged rather than throwing an exception.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="69036-233">В следующем примере используется <xref:System.Math.Cos%2A> для вычисления определенных тригонометрических выражений для выбранных углов.</span><span class="sxs-lookup"><span data-stu-id="69036-233">The following example uses <xref:System.Math.Cos%2A> to evaluate certain trigonometric identities for selected angles.</span></span>  
  
 [!code-cpp[System.Math.SinCos#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Math.SinCos/CPP/sincos.cpp#1)]
 [!code-csharp[System.Math.SinCos#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.SinCos/CS/sincos.cs#1)]
 [!code-vb[System.Math.SinCos#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.SinCos/VB/sincos.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Cosh">
      <MemberSignature Language="C#" Value="public static double Cosh (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Cosh(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Cosh(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Cosh (value As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Cosh(double value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="69036-234">Угол, измеряемый в радианах.</span><span class="sxs-lookup"><span data-stu-id="69036-234">An angle, measured in radians.</span></span></param>
        <summary><span data-ttu-id="69036-235">Возвращает гиперболический косинус указанного угла.</span><span class="sxs-lookup"><span data-stu-id="69036-235">Returns the hyperbolic cosine of the specified angle.</span></span></summary>
        <returns><span data-ttu-id="69036-236">Гиперболический косинус <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="69036-236">The hyperbolic cosine of <paramref name="value" />.</span></span> <span data-ttu-id="69036-237">Если значение параметра <paramref name="value" /> равно <see cref="F:System.Double.NegativeInfinity" /> или <see cref="F:System.Double.PositiveInfinity" />, возвращается значение <see cref="F:System.Double.PositiveInfinity" />.</span><span class="sxs-lookup"><span data-stu-id="69036-237">If <paramref name="value" /> is equal to <see cref="F:System.Double.NegativeInfinity" /> or <see cref="F:System.Double.PositiveInfinity" />, <see cref="F:System.Double.PositiveInfinity" /> is returned.</span></span> <span data-ttu-id="69036-238">Если значение параметра <paramref name="value" /> равно <see cref="F:System.Double.NaN" />, возвращается значение <see cref="F:System.Double.NaN" />.</span><span class="sxs-lookup"><span data-stu-id="69036-238">If <paramref name="value" /> is equal to <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.NaN" /> is returned.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69036-239">Угол `value`, должны быть указаны в радианах.</span><span class="sxs-lookup"><span data-stu-id="69036-239">The angle, `value`, must be in radians.</span></span> <span data-ttu-id="69036-240">Умножить по <xref:System.Math.PI?displayProperty=nameWithType>/180 для преобразования градусов в радианы.</span><span class="sxs-lookup"><span data-stu-id="69036-240">Multiply by <xref:System.Math.PI?displayProperty=nameWithType>/180 to convert degrees to radians.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="69036-241">В следующем примере используется <xref:System.Math.Cosh%2A> для вычисления определенных гиперболический выражений для выбранных значений.</span><span class="sxs-lookup"><span data-stu-id="69036-241">The following example uses <xref:System.Math.Cosh%2A> to evaluate certain hyperbolic identities for selected values.</span></span>  
  
 [!code-cpp[System.Math.SinhCosh#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Math.SinhCosh/CPP/sinhcosh.cpp#1)]
 [!code-csharp[System.Math.SinhCosh#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.SinhCosh/CS/sinhcosh.cs#1)]
 [!code-vb[System.Math.SinhCosh#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.SinhCosh/VB/sinhcosh.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="DivRem">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="69036-242">Вычисляет частное двух чисел и возвращает остаток в выходном параметре.</span><span class="sxs-lookup"><span data-stu-id="69036-242">Calculates the quotient of two numbers and also returns the remainder in an output parameter.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DivRem">
      <MemberSignature Language="C#" Value="public static int DivRem (int a, int b, out int result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 DivRem(int32 a, int32 b, [out] int32&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.DivRem(System.Int32,System.Int32,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DivRem (a As Integer, b As Integer, ByRef result As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int DivRem(int a, int b, [Runtime::InteropServices::Out] int % result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Int32" />
        <Parameter Name="b" Type="System.Int32" />
        <Parameter Name="result" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="a"><span data-ttu-id="69036-243">Делимое.</span><span class="sxs-lookup"><span data-stu-id="69036-243">The dividend.</span></span></param>
        <param name="b"><span data-ttu-id="69036-244">Делитель.</span><span class="sxs-lookup"><span data-stu-id="69036-244">The divisor.</span></span></param>
        <param name="result"><span data-ttu-id="69036-245">Остаток.</span><span class="sxs-lookup"><span data-stu-id="69036-245">The remainder.</span></span></param>
        <summary><span data-ttu-id="69036-246">Вычисляет частное двух 32-битовых целых чисел со знаком и возвращает остаток в выходном параметре.</span><span class="sxs-lookup"><span data-stu-id="69036-246">Calculates the quotient of two 32-bit signed integers and also returns the remainder in an output parameter.</span></span></summary>
        <returns><span data-ttu-id="69036-247">Частное от деления указанных чисел.</span><span class="sxs-lookup"><span data-stu-id="69036-247">The quotient of the specified numbers.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69036-248">Остаток вычисляется с помощью операции модуля.</span><span class="sxs-lookup"><span data-stu-id="69036-248">The remainder is calculated by using the modulus operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="69036-249">В следующем примере демонстрируется <xref:System.Math.DivRem%28System.Int32%2CSystem.Int32%2CSystem.Int32%40%29> метод.</span><span class="sxs-lookup"><span data-stu-id="69036-249">The following example demonstrates the <xref:System.Math.DivRem%28System.Int32%2CSystem.Int32%2CSystem.Int32%40%29> method.</span></span>  
  
 [!code-csharp[System.Math.DivRem#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.divrem/cs/divrem1.cs#1)]
 [!code-vb[System.Math.DivRem#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.divrem/vb/divrem1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.DivideByZeroException">
          <span data-ttu-id="69036-250"><paramref name="b" /> равен нулю.</span><span class="sxs-lookup"><span data-stu-id="69036-250"><paramref name="b" /> is zero.</span></span></exception>
        <altmember cref="M:System.Math.IEEERemainder(System.Double,System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="DivRem">
      <MemberSignature Language="C#" Value="public static long DivRem (long a, long b, out long result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 DivRem(int64 a, int64 b, [out] int64&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.DivRem(System.Int64,System.Int64,System.Int64@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DivRem (a As Long, b As Long, ByRef result As Long) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long DivRem(long a, long b, [Runtime::InteropServices::Out] long % result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Int64" />
        <Parameter Name="b" Type="System.Int64" />
        <Parameter Name="result" Type="System.Int64&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="a"><span data-ttu-id="69036-251">Делимое.</span><span class="sxs-lookup"><span data-stu-id="69036-251">The dividend.</span></span></param>
        <param name="b"><span data-ttu-id="69036-252">Делитель.</span><span class="sxs-lookup"><span data-stu-id="69036-252">The divisor.</span></span></param>
        <param name="result"><span data-ttu-id="69036-253">Остаток.</span><span class="sxs-lookup"><span data-stu-id="69036-253">The remainder.</span></span></param>
        <summary><span data-ttu-id="69036-254">Вычисляет частное двух 64-битовых целых чисел со знаком и возвращает остаток в выходном параметре.</span><span class="sxs-lookup"><span data-stu-id="69036-254">Calculates the quotient of two 64-bit signed integers and also returns the remainder in an output parameter.</span></span></summary>
        <returns><span data-ttu-id="69036-255">Частное от деления указанных чисел.</span><span class="sxs-lookup"><span data-stu-id="69036-255">The quotient of the specified numbers.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69036-256">Остаток вычисляется с помощью операции модуля.</span><span class="sxs-lookup"><span data-stu-id="69036-256">The remainder is calculated by using the modulus operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="69036-257">В следующем примере демонстрируется <xref:System.Math.DivRem%28System.Int64%2CSystem.Int64%2CSystem.Int64%40%29> метод.</span><span class="sxs-lookup"><span data-stu-id="69036-257">The following example demonstrates the <xref:System.Math.DivRem%28System.Int64%2CSystem.Int64%2CSystem.Int64%40%29> method.</span></span>  
  
 [!code-csharp[System.Math.DivRem#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.divrem/cs/divrem2.cs#2)]
 [!code-vb[System.Math.DivRem#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.divrem/vb/divrem2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.DivideByZeroException">
          <span data-ttu-id="69036-258"><paramref name="b" /> равен нулю.</span><span class="sxs-lookup"><span data-stu-id="69036-258"><paramref name="b" /> is zero.</span></span></exception>
        <altmember cref="M:System.Math.IEEERemainder(System.Double,System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="E">
      <MemberSignature Language="C#" Value="public const double E = 2.71828182845905;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal float64 E = (2.71828182845905)" />
      <MemberSignature Language="DocId" Value="F:System.Math.E" />
      <MemberSignature Language="VB.NET" Value="Public Const E As Double  = 2.71828182845905" />
      <MemberSignature Language="C++ CLI" Value="public: double E = 2.71828182845905;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <MemberValue>2.71828182845905</MemberValue>
      <Docs>
        <summary><span data-ttu-id="69036-259">Представляет основание натурального логарифма, определяемое константой <see langword="e" />.</span><span class="sxs-lookup"><span data-stu-id="69036-259">Represents the natural logarithmic base, specified by the constant, <see langword="e" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69036-260">Значение этого поля равно 2,7182818284590452354.</span><span class="sxs-lookup"><span data-stu-id="69036-260">The value of this field is 2.7182818284590452354.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="69036-261">В следующем примере сравниваются <xref:System.Math.E> со значением, вычисленным из ряда питания.</span><span class="sxs-lookup"><span data-stu-id="69036-261">The following example compares <xref:System.Math.E> with the value calculated from a power series.</span></span>  
  
 [!code-cpp[System.Math.E#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Math.E/CPP/efield.cpp#1)]
 [!code-csharp[System.Math.E#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.E/CS/efield.cs#1)]
 [!code-vb[System.Math.E#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.E/VB/efield.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Exp">
      <MemberSignature Language="C#" Value="public static double Exp (double d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Exp(float64 d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Exp(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Exp (d As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Exp(double d);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="69036-262">Число, определяющее степень.</span><span class="sxs-lookup"><span data-stu-id="69036-262">A number specifying a power.</span></span></param>
        <summary><span data-ttu-id="69036-263">Возвращает значение <see langword="e" />, возведенное в указанную степень.</span><span class="sxs-lookup"><span data-stu-id="69036-263">Returns <see langword="e" /> raised to the specified power.</span></span></summary>
        <returns><span data-ttu-id="69036-264">Число <see langword="e" />, возведенное в степень <paramref name="d" />.</span><span class="sxs-lookup"><span data-stu-id="69036-264">The number <see langword="e" /> raised to the power <paramref name="d" />.</span></span> <span data-ttu-id="69036-265">Если значение параметра <paramref name="d" /> равно <see cref="F:System.Double.NaN" /> или <see cref="F:System.Double.PositiveInfinity" />, возвращается это значение.</span><span class="sxs-lookup"><span data-stu-id="69036-265">If <paramref name="d" /> equals <see cref="F:System.Double.NaN" /> or <see cref="F:System.Double.PositiveInfinity" />, that value is returned.</span></span> <span data-ttu-id="69036-266">Если значение параметра <paramref name="d" /> равно <see cref="F:System.Double.NegativeInfinity" />, возвращается значение 0.</span><span class="sxs-lookup"><span data-stu-id="69036-266">If <paramref name="d" /> equals <see cref="F:System.Double.NegativeInfinity" />, 0 is returned.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69036-267">`e` является Математическая константа, значение которого равно примерно 2,71828.</span><span class="sxs-lookup"><span data-stu-id="69036-267">`e` is a mathematical constant whose value is approximately 2.71828.</span></span>  
  
 <span data-ttu-id="69036-268">Используйте <xref:System.Math.Pow%2A> метод для вычисления других чисел.</span><span class="sxs-lookup"><span data-stu-id="69036-268">Use the <xref:System.Math.Pow%2A> method to calculate powers of other bases.</span></span>  
  
 <span data-ttu-id="69036-269"><xref:System.Math.Exp%2A> является обратным по отношению <xref:System.Math.Log%2A>.</span><span class="sxs-lookup"><span data-stu-id="69036-269"><xref:System.Math.Exp%2A> is the inverse of <xref:System.Math.Log%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="69036-270">В следующем примере используется <xref:System.Math.Exp%2A> для вычисления определенных экспоненциальных и логарифмических выражений для выбранных значений.</span><span class="sxs-lookup"><span data-stu-id="69036-270">The following example uses <xref:System.Math.Exp%2A> to evaluate certain exponential and logarithmic identities for selected values.</span></span>  
  
 [!code-cpp[System.Math.Exp#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Math.Exp/CPP/exp.cpp#1)]
 [!code-csharp[System.Math.Exp#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.Exp/CS/exp.cs#1)]
 [!code-vb[System.Math.Exp#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.Exp/VB/exp.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Math.E" />
        <altmember cref="M:System.Math.Pow(System.Double,System.Double)" />
        <altmember cref="M:System.Math.Log(System.Double)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Floor">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="69036-271">Возвращает наибольшее целое число, которое меньше или равно указанному числу.</span><span class="sxs-lookup"><span data-stu-id="69036-271">Returns the largest integral value less than or equal to the specified number.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69036-272">Поведение данного метода соответствует стандарту IEEE-754, раздел 4.</span><span class="sxs-lookup"><span data-stu-id="69036-272">The behavior of this method follows IEEE Standard 754, section 4.</span></span> <span data-ttu-id="69036-273">Этот способ округления иногда называется округлением в сторону отрицательной бесконечности.</span><span class="sxs-lookup"><span data-stu-id="69036-273">This kind of rounding is sometimes called rounding toward negative infinity.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Floor">
      <MemberSignature Language="C#" Value="public static decimal Floor (decimal d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Floor(valuetype System.Decimal d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Floor(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Floor (d As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Floor(System::Decimal d);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="69036-274">Десятичное число.</span><span class="sxs-lookup"><span data-stu-id="69036-274">A decimal number.</span></span></param>
        <summary><span data-ttu-id="69036-275">Возвращает наибольшее целое число, которое меньше или равно указанному десятичному числу.</span><span class="sxs-lookup"><span data-stu-id="69036-275">Returns the largest integral value less than or equal to the specified decimal number.</span></span></summary>
        <returns><span data-ttu-id="69036-276">Наибольшее целое число, которое меньше или равно <paramref name="d" />.</span><span class="sxs-lookup"><span data-stu-id="69036-276">The largest integral value less than or equal to <paramref name="d" />.</span></span>  <span data-ttu-id="69036-277">Обратите внимание, что этот метод возвращает целочисленное значение типа <see cref="T:System.Decimal" />.</span><span class="sxs-lookup"><span data-stu-id="69036-277">Note that the method returns an integral value of type <see cref="T:System.Decimal" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69036-278">Поведение данного метода соответствует стандарту IEEE-754, раздел 4.</span><span class="sxs-lookup"><span data-stu-id="69036-278">The behavior of this method follows IEEE Standard 754, section 4.</span></span> <span data-ttu-id="69036-279">Этот способ округления иногда называется округлением в сторону отрицательной бесконечности.</span><span class="sxs-lookup"><span data-stu-id="69036-279">This kind of rounding is sometimes called rounding toward negative infinity.</span></span> <span data-ttu-id="69036-280">Другими словами Если `d` является положительным, любой дробный компонент обрезается.</span><span class="sxs-lookup"><span data-stu-id="69036-280">In other words, if `d` is positive, any fractional component is truncated.</span></span> <span data-ttu-id="69036-281">Если `d` является отрицательным, наличие любого дробного компонента приводит к округляться до меньшего целого числа.</span><span class="sxs-lookup"><span data-stu-id="69036-281">If `d` is negative, the presence of any fractional component causes it to be rounded to the smaller integer.</span></span> <span data-ttu-id="69036-282">Операция этот метод отличается от <xref:System.Math.Ceiling%2A> метод, который поддерживает округлением в сторону положительной бесконечности.</span><span class="sxs-lookup"><span data-stu-id="69036-282">The operation of this method differs from the <xref:System.Math.Ceiling%2A> method, which supports rounding toward positive infinity.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="69036-283">В следующем примере демонстрируется <xref:System.Math.Floor%28System.Decimal%29?displayProperty=nameWithType> метод и производится сравнение его с <xref:System.Math.Ceiling%28System.Decimal%29> метод.</span><span class="sxs-lookup"><span data-stu-id="69036-283">The following example illustrates the <xref:System.Math.Floor%28System.Decimal%29?displayProperty=nameWithType> method and contrasts it with the <xref:System.Math.Ceiling%28System.Decimal%29> method.</span></span>  
  
 [!code-csharp[System.Math.Ceiling#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.Ceiling/cs/Ceiling1.cs#1)]
 [!code-vb[System.Math.Ceiling#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.Ceiling/vb/Ceiling1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Math.Round" />
        <altmember cref="M:System.Math.Ceiling(System.Decimal)" />
        <altmember cref="M:System.Decimal.Floor(System.Decimal)" />
      </Docs>
    </Member>
    <Member MemberName="Floor">
      <MemberSignature Language="C#" Value="public static double Floor (double d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Floor(float64 d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Floor(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Floor (d As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Floor(double d);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="69036-284">Число двойной точности с плавающей запятой.</span><span class="sxs-lookup"><span data-stu-id="69036-284">A double-precision floating-point number.</span></span></param>
        <summary><span data-ttu-id="69036-285">Возвращает наибольшее целое число, которое меньше или равно заданному числу с плавающей запятой двойной точности.</span><span class="sxs-lookup"><span data-stu-id="69036-285">Returns the largest integral value less than or equal to the specified double-precision floating-point number.</span></span></summary>
        <returns><span data-ttu-id="69036-286">Наибольшее целое число, которое меньше или равно <paramref name="d" />.</span><span class="sxs-lookup"><span data-stu-id="69036-286">The largest integral value less than or equal to <paramref name="d" />.</span></span> <span data-ttu-id="69036-287">Если значение параметра <paramref name="d" /> равно  <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.NegativeInfinity" /> или <see cref="F:System.Double.PositiveInfinity" />, возвращается это значение.</span><span class="sxs-lookup"><span data-stu-id="69036-287">If <paramref name="d" /> is equal to <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.NegativeInfinity" />, or <see cref="F:System.Double.PositiveInfinity" />, that value is returned.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69036-288">Поведение данного метода соответствует стандарту IEEE-754, раздел 4.</span><span class="sxs-lookup"><span data-stu-id="69036-288">The behavior of this method follows IEEE Standard 754, section 4.</span></span> <span data-ttu-id="69036-289">Этот способ округления иногда называется округлением в сторону отрицательной бесконечности.</span><span class="sxs-lookup"><span data-stu-id="69036-289">This kind of rounding is sometimes called rounding toward negative infinity.</span></span> <span data-ttu-id="69036-290">Другими словами Если `d` является положительным, любой дробный компонент обрезается.</span><span class="sxs-lookup"><span data-stu-id="69036-290">In other words, if `d` is positive, any fractional component is truncated.</span></span> <span data-ttu-id="69036-291">Если `d` является отрицательным, наличие любого дробного компонента приводит к округляться до меньшего целого числа.</span><span class="sxs-lookup"><span data-stu-id="69036-291">If `d` is negative, the presence of any fractional component causes it to be rounded to the smaller integer.</span></span> <span data-ttu-id="69036-292">Операция этот метод отличается от <xref:System.Math.Ceiling%2A> метод, который поддерживает округлением в сторону положительной бесконечности.</span><span class="sxs-lookup"><span data-stu-id="69036-292">The operation of this method differs from the <xref:System.Math.Ceiling%2A> method, which supports rounding toward positive infinity.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="69036-293">В следующем примере демонстрируется <xref:System.Math.Floor%28System.Double%29?displayProperty=nameWithType> метод и производится сравнение его с <xref:System.Math.Ceiling%28System.Double%29> метод.</span><span class="sxs-lookup"><span data-stu-id="69036-293">The following example illustrates the <xref:System.Math.Floor%28System.Double%29?displayProperty=nameWithType> method and contrasts it with the <xref:System.Math.Ceiling%28System.Double%29> method.</span></span>  
  
 [!code-csharp[System.Math.Ceiling#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.Ceiling/cs/Ceiling1.cs#2)]
 [!code-vb[System.Math.Ceiling#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.Ceiling/vb/Ceiling1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Math.Round" />
        <altmember cref="M:System.Math.Ceiling(System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="IEEERemainder">
      <MemberSignature Language="C#" Value="public static double IEEERemainder (double x, double y);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 IEEERemainder(float64 x, float64 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.IEEERemainder(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IEEERemainder (x As Double, y As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double IEEERemainder(double x, double y);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Double" />
        <Parameter Name="y" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="69036-294">Делимое.</span><span class="sxs-lookup"><span data-stu-id="69036-294">A dividend.</span></span></param>
        <param name="y"><span data-ttu-id="69036-295">Делитель.</span><span class="sxs-lookup"><span data-stu-id="69036-295">A divisor.</span></span></param>
        <summary><span data-ttu-id="69036-296">Возвращает остаток от деления одного указанного числа на другое указанное число.</span><span class="sxs-lookup"><span data-stu-id="69036-296">Returns the remainder resulting from the division of a specified number by another specified number.</span></span></summary>
        <returns><span data-ttu-id="69036-297">Число, равное <paramref name="x" /> – (<paramref name="y" /> Q), где Q является частным <paramref name="x" /> / <paramref name="y" />, округленным до ближайшего целого числа (если <paramref name="x" /> / <paramref name="y" /> находится на равном расстоянии от двух целых чисел, выбирается четное число).</span><span class="sxs-lookup"><span data-stu-id="69036-297">A number equal to <paramref name="x" /> - (<paramref name="y" /> Q), where Q is the quotient of <paramref name="x" /> / <paramref name="y" /> rounded to the nearest integer (if <paramref name="x" /> / <paramref name="y" /> falls halfway between two integers, the even integer is returned).</span></span>  
  
 <span data-ttu-id="69036-298">Если значение <paramref name="x" /> - (<paramref name="y" />Q) равно нулю, возвращается значение +0 при положительном <paramref name="x" /> или значение -0 при отрицательном <paramref name="x" />.</span><span class="sxs-lookup"><span data-stu-id="69036-298">If <paramref name="x" /> - (<paramref name="y" /> Q) is zero, the value +0 is returned if <paramref name="x" /> is positive, or -0 if <paramref name="x" /> is negative.</span></span>  
  
 <span data-ttu-id="69036-299">Если значение параметра <paramref name="y" /> равно 0, возвращается значение <see cref="F:System.Double.NaN" />.</span><span class="sxs-lookup"><span data-stu-id="69036-299">If <paramref name="y" /> = 0, <see cref="F:System.Double.NaN" /> is returned.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69036-300">Это операция выполняется в соответствии с рекомендациями, указанными в разделе 5.1 стандарта ANSI/IEEE Std 754-1985; Стандарт IEEE для двоичной арифметики с плавающей запятой; Институт электротехнике и электронике инженеров, Inc; 1985 г.</span><span class="sxs-lookup"><span data-stu-id="69036-300">This operation complies with the remainder operation defined in Section 5.1 of ANSI/IEEE Std 754-1985; IEEE Standard for Binary Floating-Point Arithmetic; Institute of Electrical and Electronics Engineers, Inc; 1985.</span></span>  
  
 <span data-ttu-id="69036-301"><xref:System.Math.IEEERemainder%2A> Метод не является таким же, как оператор остатка от деления.</span><span class="sxs-lookup"><span data-stu-id="69036-301">The <xref:System.Math.IEEERemainder%2A> method is not the same as the modulus operator.</span></span> <span data-ttu-id="69036-302">Хотя оба возвращают остаток после деления, формулы, которые они используют отличаются.</span><span class="sxs-lookup"><span data-stu-id="69036-302">Although both return the remainder after division, the formulas they use are different.</span></span> <span data-ttu-id="69036-303">Формула для <xref:System.Math.IEEERemainder%2A> является метод:</span><span class="sxs-lookup"><span data-stu-id="69036-303">The formula for the <xref:System.Math.IEEERemainder%2A> method is:</span></span>  
  
```  
IEEERemainder = dividend - (divisor * Math.Round(dividend / divisor))  
```  
  
 <span data-ttu-id="69036-304">В отличие от этого оператора модуля рассчитывается по формуле:</span><span class="sxs-lookup"><span data-stu-id="69036-304">In contrast, the formula for the modulus operator is:</span></span>  
  
```  
Modulus = (Math.Abs(dividend) - (Math.Abs(divisor) *   
          (Math.Floor(Math.Abs(dividend) / Math.Abs(divisor))))) *   
          Math.Sign(dividend)  
```  
  
   
  
## Examples  
 <span data-ttu-id="69036-305">Приведенный ниже противопоставляет остаток возвращенных <xref:System.Math.IEEERemainder%2A> метод к выполнению дальнейших возвращенный оператор деления модуля.</span><span class="sxs-lookup"><span data-stu-id="69036-305">The following example contrasts the remainder returned by the <xref:System.Math.IEEERemainder%2A> method with the remainder returned by the modulus division operator.</span></span>  
  
 [!code-csharp[System.Math.IEEERemainder#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.ieeeremainder/cs/ieeeremainder1.cs#1)]
 [!code-vb[System.Math.IEEERemainder#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.ieeeremainder/vb/ieeeremainder1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Log">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="69036-306">Возвращает логарифм указанного числа.</span><span class="sxs-lookup"><span data-stu-id="69036-306">Returns the logarithm of a specified number.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Log">
      <MemberSignature Language="C#" Value="public static double Log (double d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Log(float64 d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Log(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Log (d As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Log(double d);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="69036-307">Число, логарифм которого требуется найти.</span><span class="sxs-lookup"><span data-stu-id="69036-307">The number whose logarithm is to be found.</span></span></param>
        <summary><span data-ttu-id="69036-308">Возвращает натуральный логарифм (с основанием <see langword="e" />) указанного числа.</span><span class="sxs-lookup"><span data-stu-id="69036-308">Returns the natural (base <see langword="e" />) logarithm of a specified number.</span></span></summary>
        <returns><span data-ttu-id="69036-309">Одно из значений, перечисленных в следующей таблице.</span><span class="sxs-lookup"><span data-stu-id="69036-309">One of the values in the following table.</span></span>  
  
 <span data-ttu-id="69036-310"><list type="table"><listheader><term><paramref name="d" /> параметр</span><span class="sxs-lookup"><span data-stu-id="69036-310"><list type="table"><listheader><term><paramref name="d" /> parameter</span></span>  
  
 <span data-ttu-id="69036-311"></term><description> Возвращаемое значение</span><span class="sxs-lookup"><span data-stu-id="69036-311"></term><description> Return value</span></span>  
  
 <span data-ttu-id="69036-312"></description></listheader><item><term> Положительное число</span><span class="sxs-lookup"><span data-stu-id="69036-312"></description></listheader><item><term> Positive</span></span>  
  
 <span data-ttu-id="69036-313"></term><description> Натуральный логарифм <paramref name="d" />; то есть ln <paramref name="d" /> или log <paramref name="d" /></description></item><item><term> Нуль</span><span class="sxs-lookup"><span data-stu-id="69036-313"></term><description> The natural logarithm of <paramref name="d" />; that is, ln <paramref name="d" />, or log e <paramref name="d" /></description></item><item><term> Zero</span></span>  
  
 <span data-ttu-id="69036-314"></term><description><see cref="F:System.Double.NegativeInfinity" /></description></item><item><term> Отрицательное число</span><span class="sxs-lookup"><span data-stu-id="69036-314"></term><description><see cref="F:System.Double.NegativeInfinity" /></description></item><item><term> Negative</span></span>  
  
 <span data-ttu-id="69036-315"></term><description><see cref="F:System.Double.NaN" /></description></item><item><term> Равно <see cref="F:System.Double.NaN" /></term><description><see cref="F:System.Double.NaN" /></description></item><item><term> Равно <see cref="F:System.Double.PositiveInfinity" /></term><description><see cref="F:System.Double.PositiveInfinity" /></description></item></list></span><span class="sxs-lookup"><span data-stu-id="69036-315"></term><description><see cref="F:System.Double.NaN" /></description></item><item><term> Equal to <see cref="F:System.Double.NaN" /></term><description><see cref="F:System.Double.NaN" /></description></item><item><term> Equal to <see cref="F:System.Double.PositiveInfinity" /></term><description><see cref="F:System.Double.PositiveInfinity" /></description></item></list></span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69036-316">Параметр `d` указан как десятичное число.</span><span class="sxs-lookup"><span data-stu-id="69036-316">Parameter `d` is specified as a base 10 number.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="69036-317">В следующем примере демонстрируется <xref:System.Math.Log%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="69036-317">The following example illustrates the <xref:System.Math.Log%2A> method.</span></span>  
  
 [!code-csharp[System.Math.Log_Overloads#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.Log_Overloads/CS/log1.cs#2)]
 [!code-vb[System.Math.Log_Overloads#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.Log_Overloads/VB/log1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Math.E" />
        <altmember cref="M:System.Math.Exp(System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="Log">
      <MemberSignature Language="C#" Value="public static double Log (double a, double newBase);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Log(float64 a, float64 newBase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Log(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Log (a As Double, newBase As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Log(double a, double newBase);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Double" />
        <Parameter Name="newBase" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="a"><span data-ttu-id="69036-318">Число, логарифм которого требуется найти.</span><span class="sxs-lookup"><span data-stu-id="69036-318">The number whose logarithm is to be found.</span></span></param>
        <param name="newBase"><span data-ttu-id="69036-319">Основание логарифма.</span><span class="sxs-lookup"><span data-stu-id="69036-319">The base of the logarithm.</span></span></param>
        <summary><span data-ttu-id="69036-320">Возвращает логарифм указанного числа в системе счисления с указанным основанием.</span><span class="sxs-lookup"><span data-stu-id="69036-320">Returns the logarithm of a specified number in a specified base.</span></span></summary>
        <returns><span data-ttu-id="69036-321">Одно из значений, перечисленных в следующей таблице.</span><span class="sxs-lookup"><span data-stu-id="69036-321">One of the values in the following table.</span></span> <span data-ttu-id="69036-322">(+бесконечность обозначает <see cref="F:System.Double.PositiveInfinity" />, -бесконечность обозначает <see cref="F:System.Double.NegativeInfinity" />, а нечисловое значение обозначает <see cref="F:System.Double.NaN" />.)</span><span class="sxs-lookup"><span data-stu-id="69036-322">(+Infinity denotes <see cref="F:System.Double.PositiveInfinity" />, -Infinity denotes <see cref="F:System.Double.NegativeInfinity" />, and NaN denotes <see cref="F:System.Double.NaN" />.)</span></span>  
  
 <span data-ttu-id="69036-323"><list type="table"><listheader><term><paramref name="a" /></term><description><paramref name="newBase" /></description><description> Возвращаемое значение</span><span class="sxs-lookup"><span data-stu-id="69036-323"><list type="table"><listheader><term><paramref name="a" /></term><description><paramref name="newBase" /></description><description> Return value</span></span>  
  
 <span data-ttu-id="69036-324"></description></listheader><item><term><paramref name="a" />&gt; 0</span><span class="sxs-lookup"><span data-stu-id="69036-324"></description></listheader><item><term><paramref name="a" />&gt; 0</span></span>  
  
 <span data-ttu-id="69036-325"></term><description> (0 &lt;<paramref name="newBase" />&lt; 1) -или- (<paramref name="newBase" />&gt; 1)</span><span class="sxs-lookup"><span data-stu-id="69036-325"></term><description> (0 &lt;<paramref name="newBase" />&lt; 1) -or-(<paramref name="newBase" />&gt; 1)</span></span>  
  
 <span data-ttu-id="69036-326"></description><description> lognewBase(a)</span><span class="sxs-lookup"><span data-stu-id="69036-326"></description><description> lognewBase(a)</span></span>  
  
 <span data-ttu-id="69036-327"></description></item><item><term><paramref name="a" />&lt; 0</span><span class="sxs-lookup"><span data-stu-id="69036-327"></description></item><item><term><paramref name="a" />&lt; 0</span></span>  
  
 <span data-ttu-id="69036-328"></term><description> (любое значение)</span><span class="sxs-lookup"><span data-stu-id="69036-328"></term><description> (any value)</span></span>  
  
 <span data-ttu-id="69036-329"></description><description> Не число</span><span class="sxs-lookup"><span data-stu-id="69036-329"></description><description> NaN</span></span>  
  
 <span data-ttu-id="69036-330"></description></item><item><term> (любое значение)</span><span class="sxs-lookup"><span data-stu-id="69036-330"></description></item><item><term> (any value)</span></span>  
  
 <span data-ttu-id="69036-331"></term><description><paramref name="newBase" />&lt; 0</span><span class="sxs-lookup"><span data-stu-id="69036-331"></term><description><paramref name="newBase" />&lt; 0</span></span>  
  
 <span data-ttu-id="69036-332"></description><description> Не число</span><span class="sxs-lookup"><span data-stu-id="69036-332"></description><description> NaN</span></span>  
  
 <span data-ttu-id="69036-333"></description></item><item><term><paramref name="a" /> != 1</span><span class="sxs-lookup"><span data-stu-id="69036-333"></description></item><item><term><paramref name="a" /> != 1</span></span>  
  
 <span data-ttu-id="69036-334"></term><description><paramref name="newBase" /> = 0</span><span class="sxs-lookup"><span data-stu-id="69036-334"></term><description><paramref name="newBase" /> = 0</span></span>  
  
 <span data-ttu-id="69036-335"></description><description> Не число</span><span class="sxs-lookup"><span data-stu-id="69036-335"></description><description> NaN</span></span>  
  
 <span data-ttu-id="69036-336"></description></item><item><term><paramref name="a" /> != 1</span><span class="sxs-lookup"><span data-stu-id="69036-336"></description></item><item><term><paramref name="a" /> != 1</span></span>  
  
 <span data-ttu-id="69036-337"></term><description><paramref name="newBase" /> = +бесконечность</span><span class="sxs-lookup"><span data-stu-id="69036-337"></term><description><paramref name="newBase" /> = +Infinity</span></span>  
  
 <span data-ttu-id="69036-338"></description><description> Не число</span><span class="sxs-lookup"><span data-stu-id="69036-338"></description><description> NaN</span></span>  
  
 <span data-ttu-id="69036-339"></description></item><item><term><paramref name="a" /> = не число</span><span class="sxs-lookup"><span data-stu-id="69036-339"></description></item><item><term><paramref name="a" /> = NaN</span></span>  
  
 <span data-ttu-id="69036-340"></term><description> (любое значение)</span><span class="sxs-lookup"><span data-stu-id="69036-340"></term><description> (any value)</span></span>  
  
 <span data-ttu-id="69036-341"></description><description> Не число</span><span class="sxs-lookup"><span data-stu-id="69036-341"></description><description> NaN</span></span>  
  
 <span data-ttu-id="69036-342"></description></item><item><term> (любое значение)</span><span class="sxs-lookup"><span data-stu-id="69036-342"></description></item><item><term> (any value)</span></span>  
  
 <span data-ttu-id="69036-343"></term><description><paramref name="newBase" /> = не число</span><span class="sxs-lookup"><span data-stu-id="69036-343"></term><description><paramref name="newBase" /> = NaN</span></span>  
  
 <span data-ttu-id="69036-344"></description><description> Не число</span><span class="sxs-lookup"><span data-stu-id="69036-344"></description><description> NaN</span></span>  
  
 <span data-ttu-id="69036-345"></description></item><item><term> (любое значение)</span><span class="sxs-lookup"><span data-stu-id="69036-345"></description></item><item><term> (any value)</span></span>  
  
 <span data-ttu-id="69036-346"></term><description><paramref name="newBase" /> = 1</span><span class="sxs-lookup"><span data-stu-id="69036-346"></term><description><paramref name="newBase" /> = 1</span></span>  
  
 <span data-ttu-id="69036-347"></description><description> Не число</span><span class="sxs-lookup"><span data-stu-id="69036-347"></description><description> NaN</span></span>  
  
 <span data-ttu-id="69036-348"></description></item><item><term><paramref name="a" /> = 0</span><span class="sxs-lookup"><span data-stu-id="69036-348"></description></item><item><term><paramref name="a" /> = 0</span></span>  
  
 <span data-ttu-id="69036-349"></term><description> 0 &lt;<paramref name="newBase" />&lt; 1</span><span class="sxs-lookup"><span data-stu-id="69036-349"></term><description> 0 &lt;<paramref name="newBase" />&lt; 1</span></span>  
  
 <span data-ttu-id="69036-350"></description><description> +бесконечность</span><span class="sxs-lookup"><span data-stu-id="69036-350"></description><description> +Infinity</span></span>  
  
 <span data-ttu-id="69036-351"></description></item><item><term><paramref name="a" /> = 0</span><span class="sxs-lookup"><span data-stu-id="69036-351"></description></item><item><term><paramref name="a" /> = 0</span></span>  
  
 <span data-ttu-id="69036-352"></term><description><paramref name="newBase" />&gt; 1</span><span class="sxs-lookup"><span data-stu-id="69036-352"></term><description><paramref name="newBase" />&gt; 1</span></span>  
  
 <span data-ttu-id="69036-353"></description><description> -бесконечность</span><span class="sxs-lookup"><span data-stu-id="69036-353"></description><description> -Infinity</span></span>  
  
 <span data-ttu-id="69036-354"></description></item><item><term><paramref name="a" /> =  +бесконечность</span><span class="sxs-lookup"><span data-stu-id="69036-354"></description></item><item><term><paramref name="a" /> =  +Infinity</span></span>  
  
 <span data-ttu-id="69036-355"></term><description> 0 &lt;<paramref name="newBase" />&lt; 1</span><span class="sxs-lookup"><span data-stu-id="69036-355"></term><description> 0 &lt;<paramref name="newBase" />&lt; 1</span></span>  
  
 <span data-ttu-id="69036-356"></description><description> -бесконечность</span><span class="sxs-lookup"><span data-stu-id="69036-356"></description><description> -Infinity</span></span>  
  
 <span data-ttu-id="69036-357"></description></item><item><term><paramref name="a" /> = +бесконечность</span><span class="sxs-lookup"><span data-stu-id="69036-357"></description></item><item><term><paramref name="a" /> =  +Infinity</span></span>  
  
 <span data-ttu-id="69036-358"></term><description><paramref name="newBase" />&gt; 1</span><span class="sxs-lookup"><span data-stu-id="69036-358"></term><description><paramref name="newBase" />&gt; 1</span></span>  
  
 <span data-ttu-id="69036-359"></description><description> +бесконечность</span><span class="sxs-lookup"><span data-stu-id="69036-359"></description><description> +Infinity</span></span>  
  
 <span data-ttu-id="69036-360"></description></item><item><term><paramref name="a" /> = 1</span><span class="sxs-lookup"><span data-stu-id="69036-360"></description></item><item><term><paramref name="a" /> = 1</span></span>  
  
 <span data-ttu-id="69036-361"></term><description><paramref name="newBase" /> = 0</span><span class="sxs-lookup"><span data-stu-id="69036-361"></term><description><paramref name="newBase" /> = 0</span></span>  
  
 <span data-ttu-id="69036-362"></description><description> 0</span><span class="sxs-lookup"><span data-stu-id="69036-362"></description><description> 0</span></span>  
  
 <span data-ttu-id="69036-363"></description></item><item><term><paramref name="a" /> = 1</span><span class="sxs-lookup"><span data-stu-id="69036-363"></description></item><item><term><paramref name="a" /> = 1</span></span>  
  
 <span data-ttu-id="69036-364"></term><description><paramref name="newBase" /> = +бесконечность</span><span class="sxs-lookup"><span data-stu-id="69036-364"></term><description><paramref name="newBase" /> = +Infinity</span></span>  
  
 <span data-ttu-id="69036-365"></description><description> 0</span><span class="sxs-lookup"><span data-stu-id="69036-365"></description><description> 0</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="69036-366">В следующем примере используется <xref:System.Math.Log%2A> для вычисления определенных логарифмических выражений для выбранных значений.</span><span class="sxs-lookup"><span data-stu-id="69036-366">The following example uses <xref:System.Math.Log%2A> to evaluate certain logarithmic identities for selected values.</span></span>  
  
 [!code-cpp[System.Math.Log_Overloads#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Math.Log_Overloads/CPP/loggen.cpp#1)]
 [!code-csharp[System.Math.Log_Overloads#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.Log_Overloads/CS/loggen.cs#1)]
 [!code-vb[System.Math.Log_Overloads#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.Log_Overloads/VB/loggen.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Log10">
      <MemberSignature Language="C#" Value="public static double Log10 (double d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Log10(float64 d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Log10(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Log10 (d As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Log10(double d);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="69036-367">Число, логарифм которого должен быть найден.</span><span class="sxs-lookup"><span data-stu-id="69036-367">A number whose logarithm is to be found.</span></span></param>
        <summary><span data-ttu-id="69036-368">Возвращает логарифм с основанием 10 указанного числа.</span><span class="sxs-lookup"><span data-stu-id="69036-368">Returns the base 10 logarithm of a specified number.</span></span></summary>
        <returns><span data-ttu-id="69036-369">Одно из значений, перечисленных в следующей таблице.</span><span class="sxs-lookup"><span data-stu-id="69036-369">One of the values in the following table.</span></span>  
  
 <span data-ttu-id="69036-370"><list type="table"><listheader><term><paramref name="d" /> параметр</span><span class="sxs-lookup"><span data-stu-id="69036-370"><list type="table"><listheader><term><paramref name="d" /> parameter</span></span>  
  
 <span data-ttu-id="69036-371"></term><description> Возвращаемое значение</span><span class="sxs-lookup"><span data-stu-id="69036-371"></term><description> Return value</span></span>  
  
 <span data-ttu-id="69036-372"></description></listheader><item><term> Положительное число</span><span class="sxs-lookup"><span data-stu-id="69036-372"></description></listheader><item><term> Positive</span></span>  
  
 <span data-ttu-id="69036-373"></term><description>Основание 10 логарифма <paramref name="d" />; то есть log 10<paramref name="d" />.</span><span class="sxs-lookup"><span data-stu-id="69036-373"></term><description> The base 10 log of <paramref name="d" />; that is, log 10<paramref name="d" />.</span></span>  
  
 <span data-ttu-id="69036-374"></description></item><item><term> Нуль</span><span class="sxs-lookup"><span data-stu-id="69036-374"></description></item><item><term> Zero</span></span>  
  
 <span data-ttu-id="69036-375"></term><description><see cref="F:System.Double.NegativeInfinity" /></description></item><item><term> Отрицательное число</span><span class="sxs-lookup"><span data-stu-id="69036-375"></term><description><see cref="F:System.Double.NegativeInfinity" /></description></item><item><term> Negative</span></span>  
  
 <span data-ttu-id="69036-376"></term><description><see cref="F:System.Double.NaN" /></description></item><item><term> Равно <see cref="F:System.Double.NaN" /></term><description><see cref="F:System.Double.NaN" /></description></item><item><term> Равно <see cref="F:System.Double.PositiveInfinity" /></term><description><see cref="F:System.Double.PositiveInfinity" /></description></item></list></span><span class="sxs-lookup"><span data-stu-id="69036-376"></term><description><see cref="F:System.Double.NaN" /></description></item><item><term> Equal to <see cref="F:System.Double.NaN" /></term><description><see cref="F:System.Double.NaN" /></description></item><item><term> Equal to <see cref="F:System.Double.PositiveInfinity" /></term><description><see cref="F:System.Double.PositiveInfinity" /></description></item></list></span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69036-377">Параметр `d` указан как десятичное число.</span><span class="sxs-lookup"><span data-stu-id="69036-377">Parameter `d` is specified as a base 10 number.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="69036-378">В следующем примере используется <xref:System.Math.Log10%2A> метод для возврата логарифм с основанием 10 для выбранных значений.</span><span class="sxs-lookup"><span data-stu-id="69036-378">The following example uses the <xref:System.Math.Log10%2A> method to return the base 10 logarithm for selected values.</span></span>  
  
 [!code-csharp[System.Math.Log10#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.Log10/CS/log10.cs#1)]
 [!code-vb[System.Math.Log10#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.Log10/VB/log10.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Max">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="69036-379">Возвращает большее из двух указанных чисел.</span><span class="sxs-lookup"><span data-stu-id="69036-379">Returns the larger of two specified numbers.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Max">
      <MemberSignature Language="C#" Value="public static byte Max (byte val1, byte val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8 Max(unsigned int8 val1, unsigned int8 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Max(System.Byte,System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Max (val1 As Byte, val2 As Byte) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Byte Max(System::Byte val1, System::Byte val2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.Byte" />
        <Parameter Name="val2" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="val1"><span data-ttu-id="69036-380">Первое из двух сравниваемых 8-разрядных целых чисел без знака.</span><span class="sxs-lookup"><span data-stu-id="69036-380">The first of two 8-bit unsigned integers to compare.</span></span></param>
        <param name="val2"><span data-ttu-id="69036-381">Второе из двух сравниваемых 8-разрядных целых чисел без знака.</span><span class="sxs-lookup"><span data-stu-id="69036-381">The second of two 8-bit unsigned integers to compare.</span></span></param>
        <summary><span data-ttu-id="69036-382">Возвращает большее из двух 8-битовых целых чисел без знака.</span><span class="sxs-lookup"><span data-stu-id="69036-382">Returns the larger of two 8-bit unsigned integers.</span></span></summary>
        <returns><span data-ttu-id="69036-383">Большее из значений двух параметров, <paramref name="val1" /> или <paramref name="val2" />.</span><span class="sxs-lookup"><span data-stu-id="69036-383">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is larger.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="69036-384">В следующем примере демонстрируется использование <xref:System.Math.Max%2A> метод для определения и отображения большего из двух переменных.</span><span class="sxs-lookup"><span data-stu-id="69036-384">The following example demonstrates how to use the <xref:System.Math.Max%2A> method to return and display the greater of two variables.</span></span>  
  
 [!code-cpp[Math.Max#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.max/CPP/max.cpp#1)]
 [!code-csharp[Math.Max#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.max/CS/max.cs#1)]
 [!code-vb[Math.Max#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.max/VB/max.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Max">
      <MemberSignature Language="C#" Value="public static decimal Max (decimal val1, decimal val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Max(valuetype System.Decimal val1, valuetype System.Decimal val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Max(System.Decimal,System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Max (val1 As Decimal, val2 As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Max(System::Decimal val1, System::Decimal val2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.Decimal" />
        <Parameter Name="val2" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="val1"><span data-ttu-id="69036-385">Первое из двух сравниваемых десятичных чисел.</span><span class="sxs-lookup"><span data-stu-id="69036-385">The first of two decimal numbers to compare.</span></span></param>
        <param name="val2"><span data-ttu-id="69036-386">Второе из двух сравниваемых десятичных чисел.</span><span class="sxs-lookup"><span data-stu-id="69036-386">The second of two decimal numbers to compare.</span></span></param>
        <summary><span data-ttu-id="69036-387">Возвращает большее из двух десятичных чисел.</span><span class="sxs-lookup"><span data-stu-id="69036-387">Returns the larger of two decimal numbers.</span></span></summary>
        <returns><span data-ttu-id="69036-388">Большее из значений двух параметров, <paramref name="val1" /> или <paramref name="val2" />.</span><span class="sxs-lookup"><span data-stu-id="69036-388">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is larger.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="69036-389">В следующем примере демонстрируется использование <xref:System.Math.Max%2A> метод для определения и отображения большего из двух переменных.</span><span class="sxs-lookup"><span data-stu-id="69036-389">The following example demonstrates how to use the <xref:System.Math.Max%2A> method to return and display the greater of two variables.</span></span>  
  
 [!code-cpp[Math.Max#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.max/CPP/max.cpp#1)]
 [!code-csharp[Math.Max#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.max/CS/max.cs#1)]
 [!code-vb[Math.Max#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.max/VB/max.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Max">
      <MemberSignature Language="C#" Value="public static double Max (double val1, double val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Max(float64 val1, float64 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Max(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Max (val1 As Double, val2 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Max(double val1, double val2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.Double" />
        <Parameter Name="val2" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="val1"><span data-ttu-id="69036-390">Первое из двух сравниваемых чисел двойной точности с плавающей запятой.</span><span class="sxs-lookup"><span data-stu-id="69036-390">The first of two double-precision floating-point numbers to compare.</span></span></param>
        <param name="val2"><span data-ttu-id="69036-391">Второе из двух сравниваемых чисел двойной точности с плавающей запятой.</span><span class="sxs-lookup"><span data-stu-id="69036-391">The second of two double-precision floating-point numbers to compare.</span></span></param>
        <summary><span data-ttu-id="69036-392">Возвращает большее из двух чисел двойной точности с плавающей запятой.</span><span class="sxs-lookup"><span data-stu-id="69036-392">Returns the larger of two double-precision floating-point numbers.</span></span></summary>
        <returns><span data-ttu-id="69036-393">Большее из значений двух параметров, <paramref name="val1" /> или <paramref name="val2" />.</span><span class="sxs-lookup"><span data-stu-id="69036-393">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is larger.</span></span> <span data-ttu-id="69036-394">Если <paramref name="val1" />, <paramref name="val2" /> или оба параметра <paramref name="val1" /> и <paramref name="val2" /> равны <see cref="F:System.Double.NaN" />, возвращается значение <see cref="F:System.Double.NaN" />.</span><span class="sxs-lookup"><span data-stu-id="69036-394">If <paramref name="val1" />, <paramref name="val2" />, or both <paramref name="val1" /> and <paramref name="val2" /> are equal to <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.NaN" /> is returned.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="69036-395">В следующем примере демонстрируется использование <xref:System.Math.Max%2A> метод для определения и отображения большего из двух переменных.</span><span class="sxs-lookup"><span data-stu-id="69036-395">The following example demonstrates how to use the <xref:System.Math.Max%2A> method to return and display the greater of two variables.</span></span>  
  
 [!code-cpp[Math.Max#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.max/CPP/max.cpp#1)]
 [!code-csharp[Math.Max#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.max/CS/max.cs#1)]
 [!code-vb[Math.Max#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.max/VB/max.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Max">
      <MemberSignature Language="C#" Value="public static short Max (short val1, short val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 Max(int16 val1, int16 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Max(System.Int16,System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Max (val1 As Short, val2 As Short) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short Max(short val1, short val2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.Int16" />
        <Parameter Name="val2" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="val1"><span data-ttu-id="69036-396">Первое из двух сравниваемых 16-разрядных целых чисел со знаком.</span><span class="sxs-lookup"><span data-stu-id="69036-396">The first of two 16-bit signed integers to compare.</span></span></param>
        <param name="val2"><span data-ttu-id="69036-397">Второе из двух сравниваемых 16-разрядных целых чисел со знаком.</span><span class="sxs-lookup"><span data-stu-id="69036-397">The second of two 16-bit signed integers to compare.</span></span></param>
        <summary><span data-ttu-id="69036-398">Возвращает большее из двух 16-битовых целых чисел со знаком.</span><span class="sxs-lookup"><span data-stu-id="69036-398">Returns the larger of two 16-bit signed integers.</span></span></summary>
        <returns><span data-ttu-id="69036-399">Большее из значений двух параметров, <paramref name="val1" /> или <paramref name="val2" />.</span><span class="sxs-lookup"><span data-stu-id="69036-399">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is larger.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="69036-400">В следующем примере демонстрируется использование <xref:System.Math.Max%2A> метод для определения и отображения большего из двух переменных.</span><span class="sxs-lookup"><span data-stu-id="69036-400">The following example demonstrates how to use the <xref:System.Math.Max%2A> method to return and display the greater of two variables.</span></span>  
  
 [!code-cpp[Math.Max#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.max/CPP/max.cpp#1)]
 [!code-csharp[Math.Max#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.max/CS/max.cs#1)]
 [!code-vb[Math.Max#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.max/VB/max.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Max">
      <MemberSignature Language="C#" Value="public static int Max (int val1, int val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Max(int32 val1, int32 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Max(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Max (val1 As Integer, val2 As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Max(int val1, int val2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.Int32" />
        <Parameter Name="val2" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="val1"><span data-ttu-id="69036-401">Первое из двух сравниваемых 32-разрядных целых чисел со знаком.</span><span class="sxs-lookup"><span data-stu-id="69036-401">The first of two 32-bit signed integers to compare.</span></span></param>
        <param name="val2"><span data-ttu-id="69036-402">Второе из двух сравниваемых 32-разрядных целых чисел со знаком.</span><span class="sxs-lookup"><span data-stu-id="69036-402">The second of two 32-bit signed integers to compare.</span></span></param>
        <summary><span data-ttu-id="69036-403">Возвращает большее из двух 32-битовых целых чисел со знаком.</span><span class="sxs-lookup"><span data-stu-id="69036-403">Returns the larger of two 32-bit signed integers.</span></span></summary>
        <returns><span data-ttu-id="69036-404">Большее из значений двух параметров, <paramref name="val1" /> или <paramref name="val2" />.</span><span class="sxs-lookup"><span data-stu-id="69036-404">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is larger.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="69036-405">В следующем примере демонстрируется использование <xref:System.Math.Max%2A> метод для определения и отображения большего из двух переменных.</span><span class="sxs-lookup"><span data-stu-id="69036-405">The following example demonstrates how to use the <xref:System.Math.Max%2A> method to return and display the greater of two variables.</span></span>  
  
 [!code-cpp[Math.Max#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.max/CPP/max.cpp#1)]
 [!code-csharp[Math.Max#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.max/CS/max.cs#1)]
 [!code-vb[Math.Max#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.max/VB/max.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Max">
      <MemberSignature Language="C#" Value="public static long Max (long val1, long val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 Max(int64 val1, int64 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Max(System.Int64,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Max (val1 As Long, val2 As Long) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long Max(long val1, long val2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.Int64" />
        <Parameter Name="val2" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="val1"><span data-ttu-id="69036-406">Первое из двух сравниваемых 64-разрядных целых чисел со знаком.</span><span class="sxs-lookup"><span data-stu-id="69036-406">The first of two 64-bit signed integers to compare.</span></span></param>
        <param name="val2"><span data-ttu-id="69036-407">Второе из двух сравниваемых 64-разрядных целых чисел со знаком.</span><span class="sxs-lookup"><span data-stu-id="69036-407">The second of two 64-bit signed integers to compare.</span></span></param>
        <summary><span data-ttu-id="69036-408">Возвращает большее из двух 64-битовых целых чисел со знаком.</span><span class="sxs-lookup"><span data-stu-id="69036-408">Returns the larger of two 64-bit signed integers.</span></span></summary>
        <returns><span data-ttu-id="69036-409">Большее из значений двух параметров, <paramref name="val1" /> или <paramref name="val2" />.</span><span class="sxs-lookup"><span data-stu-id="69036-409">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is larger.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="69036-410">В следующем примере демонстрируется использование <xref:System.Math.Max%2A> метод для определения и отображения большего из двух переменных.</span><span class="sxs-lookup"><span data-stu-id="69036-410">The following example demonstrates how to use the <xref:System.Math.Max%2A> method to return and display the greater of two variables.</span></span>  
  
 [!code-cpp[Math.Max#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.max/CPP/max.cpp#1)]
 [!code-csharp[Math.Max#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.max/CS/max.cs#1)]
 [!code-vb[Math.Max#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.max/VB/max.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Max">
      <MemberSignature Language="C#" Value="public static sbyte Max (sbyte val1, sbyte val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int8 Max(int8 val1, int8 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Max(System.SByte,System.SByte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Max (val1 As SByte, val2 As SByte) As SByte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::SByte Max(System::SByte val1, System::SByte val2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.SByte" />
        <Parameter Name="val2" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="val1"><span data-ttu-id="69036-411">Первое из двух сравниваемых 8-разрядных целых чисел со знаком.</span><span class="sxs-lookup"><span data-stu-id="69036-411">The first of two 8-bit signed integers to compare.</span></span></param>
        <param name="val2"><span data-ttu-id="69036-412">Второе из двух сравниваемых 8-разрядных целых чисел со знаком.</span><span class="sxs-lookup"><span data-stu-id="69036-412">The second of two 8-bit signed integers to compare.</span></span></param>
        <summary><span data-ttu-id="69036-413">Возвращает большее из двух 8-битовых целых чисел со знаком.</span><span class="sxs-lookup"><span data-stu-id="69036-413">Returns the larger of two 8-bit signed integers.</span></span></summary>
        <returns><span data-ttu-id="69036-414">Большее из значений двух параметров, <paramref name="val1" /> или <paramref name="val2" />.</span><span class="sxs-lookup"><span data-stu-id="69036-414">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is larger.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="69036-415">В следующем примере демонстрируется использование <xref:System.Math.Max%2A> метод для определения и отображения большего из двух переменных.</span><span class="sxs-lookup"><span data-stu-id="69036-415">The following example demonstrates how to use the <xref:System.Math.Max%2A> method to return and display the greater of two variables.</span></span>  
  
 [!code-cpp[Math.Max#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.max/CPP/max.cpp#1)]
 [!code-csharp[Math.Max#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.max/CS/max.cs#1)]
 [!code-vb[Math.Max#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.max/VB/max.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Max">
      <MemberSignature Language="C#" Value="public static float Max (float val1, float val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 Max(float32 val1, float32 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Max(System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Max (val1 As Single, val2 As Single) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float Max(float val1, float val2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.Single" />
        <Parameter Name="val2" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="val1"><span data-ttu-id="69036-416">Первое из двух сравниваемых чисел одинарной точности с плавающей запятой.</span><span class="sxs-lookup"><span data-stu-id="69036-416">The first of two single-precision floating-point numbers to compare.</span></span></param>
        <param name="val2"><span data-ttu-id="69036-417">Второе из двух сравниваемых чисел одинарной точности с плавающей запятой.</span><span class="sxs-lookup"><span data-stu-id="69036-417">The second of two single-precision floating-point numbers to compare.</span></span></param>
        <summary><span data-ttu-id="69036-418">Возвращает большее из двух чисел одинарной точности с плавающей запятой.</span><span class="sxs-lookup"><span data-stu-id="69036-418">Returns the larger of two single-precision floating-point numbers.</span></span></summary>
        <returns><span data-ttu-id="69036-419">Большее из значений двух параметров, <paramref name="val1" /> или <paramref name="val2" />.</span><span class="sxs-lookup"><span data-stu-id="69036-419">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is larger.</span></span> <span data-ttu-id="69036-420">Если <paramref name="val1" />, <paramref name="val2" /> или оба параметра <paramref name="val1" /> и <paramref name="val2" /> равны <see cref="F:System.Single.NaN" />, возвращается значение <see cref="F:System.Single.NaN" />.</span><span class="sxs-lookup"><span data-stu-id="69036-420">If <paramref name="val1" />, or <paramref name="val2" />, or both <paramref name="val1" /> and <paramref name="val2" /> are equal to <see cref="F:System.Single.NaN" />, <see cref="F:System.Single.NaN" /> is returned.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="69036-421">В следующем примере демонстрируется использование <xref:System.Math.Max%2A> метод для определения и отображения большего из двух переменных.</span><span class="sxs-lookup"><span data-stu-id="69036-421">The following example demonstrates how to use the <xref:System.Math.Max%2A> method to return and display the greater of two variables.</span></span>  
  
 [!code-cpp[Math.Max#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.max/CPP/max.cpp#1)]
 [!code-csharp[Math.Max#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.max/CS/max.cs#1)]
 [!code-vb[Math.Max#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.max/VB/max.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Max">
      <MemberSignature Language="C#" Value="public static ushort Max (ushort val1, ushort val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int16 Max(unsigned int16 val1, unsigned int16 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Max(System.UInt16,System.UInt16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Max (val1 As UShort, val2 As UShort) As UShort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt16 Max(System::UInt16 val1, System::UInt16 val2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.UInt16" />
        <Parameter Name="val2" Type="System.UInt16" />
      </Parameters>
      <Docs>
        <param name="val1"><span data-ttu-id="69036-422">Первое из двух сравниваемых 16-разрядных целых чисел без знака.</span><span class="sxs-lookup"><span data-stu-id="69036-422">The first of two 16-bit unsigned integers to compare.</span></span></param>
        <param name="val2"><span data-ttu-id="69036-423">Второе из двух сравниваемых 16-разрядных целых чисел без знака.</span><span class="sxs-lookup"><span data-stu-id="69036-423">The second of two 16-bit unsigned integers to compare.</span></span></param>
        <summary><span data-ttu-id="69036-424">Возвращает большее из двух 16-битовых целых чисел без знака.</span><span class="sxs-lookup"><span data-stu-id="69036-424">Returns the larger of two 16-bit unsigned integers.</span></span></summary>
        <returns><span data-ttu-id="69036-425">Большее из значений двух параметров, <paramref name="val1" /> или <paramref name="val2" />.</span><span class="sxs-lookup"><span data-stu-id="69036-425">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is larger.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="69036-426">В следующем примере демонстрируется использование <xref:System.Math.Max%2A> метод для определения и отображения большего из двух переменных.</span><span class="sxs-lookup"><span data-stu-id="69036-426">The following example demonstrates how to use the <xref:System.Math.Max%2A> method to return and display the greater of two variables.</span></span>  
  
 [!code-cpp[Math.Max#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.max/CPP/max.cpp#1)]
 [!code-csharp[Math.Max#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.max/CS/max.cs#1)]
 [!code-vb[Math.Max#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.max/VB/max.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Max">
      <MemberSignature Language="C#" Value="public static uint Max (uint val1, uint val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 Max(unsigned int32 val1, unsigned int32 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Max(System.UInt32,System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Max (val1 As UInteger, val2 As UInteger) As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt32 Max(System::UInt32 val1, System::UInt32 val2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.UInt32" />
        <Parameter Name="val2" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="val1"><span data-ttu-id="69036-427">Первое из двух сравниваемых 32-разрядных целых чисел без знака.</span><span class="sxs-lookup"><span data-stu-id="69036-427">The first of two 32-bit unsigned integers to compare.</span></span></param>
        <param name="val2"><span data-ttu-id="69036-428">Второе из двух сравниваемых 32-разрядных целых чисел без знака.</span><span class="sxs-lookup"><span data-stu-id="69036-428">The second of two 32-bit unsigned integers to compare.</span></span></param>
        <summary><span data-ttu-id="69036-429">Возвращает большее из двух 32-битовых целых чисел без знака.</span><span class="sxs-lookup"><span data-stu-id="69036-429">Returns the larger of two 32-bit unsigned integers.</span></span></summary>
        <returns><span data-ttu-id="69036-430">Большее из значений двух параметров, <paramref name="val1" /> или <paramref name="val2" />.</span><span class="sxs-lookup"><span data-stu-id="69036-430">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is larger.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="69036-431">В следующем примере демонстрируется использование <xref:System.Math.Max%2A> метод для определения и отображения большего из двух переменных.</span><span class="sxs-lookup"><span data-stu-id="69036-431">The following example demonstrates how to use the <xref:System.Math.Max%2A> method to return and display the greater of two variables.</span></span>  
  
 [!code-cpp[Math.Max#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.max/CPP/max.cpp#1)]
 [!code-csharp[Math.Max#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.max/CS/max.cs#1)]
 [!code-vb[Math.Max#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.max/VB/max.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Max">
      <MemberSignature Language="C#" Value="public static ulong Max (ulong val1, ulong val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 Max(unsigned int64 val1, unsigned int64 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Max(System.UInt64,System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Max (val1 As ULong, val2 As ULong) As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 Max(System::UInt64 val1, System::UInt64 val2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.UInt64" />
        <Parameter Name="val2" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="val1"><span data-ttu-id="69036-432">Первое из двух сравниваемых 64-разрядных целых чисел без знака.</span><span class="sxs-lookup"><span data-stu-id="69036-432">The first of two 64-bit unsigned integers to compare.</span></span></param>
        <param name="val2"><span data-ttu-id="69036-433">Второе из двух сравниваемых 64-разрядных целых чисел без знака.</span><span class="sxs-lookup"><span data-stu-id="69036-433">The second of two 64-bit unsigned integers to compare.</span></span></param>
        <summary><span data-ttu-id="69036-434">Возвращает большее из двух 64-битовых целых чисел без знака.</span><span class="sxs-lookup"><span data-stu-id="69036-434">Returns the larger of two 64-bit unsigned integers.</span></span></summary>
        <returns><span data-ttu-id="69036-435">Большее из значений двух параметров, <paramref name="val1" /> или <paramref name="val2" />.</span><span class="sxs-lookup"><span data-stu-id="69036-435">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is larger.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="69036-436">В следующем примере демонстрируется использование <xref:System.Math.Max%2A> метод для определения и отображения большего из двух переменных.</span><span class="sxs-lookup"><span data-stu-id="69036-436">The following example demonstrates how to use the <xref:System.Math.Max%2A> method to return and display the greater of two variables.</span></span>  
  
 [!code-cpp[Math.Max#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.max/CPP/max.cpp#1)]
 [!code-csharp[Math.Max#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.max/CS/max.cs#1)]
 [!code-vb[Math.Max#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.max/VB/max.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Min">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="69036-437">Возвращает меньшее из двух чисел.</span><span class="sxs-lookup"><span data-stu-id="69036-437">Returns the smaller of two numbers.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Min">
      <MemberSignature Language="C#" Value="public static byte Min (byte val1, byte val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8 Min(unsigned int8 val1, unsigned int8 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Min(System.Byte,System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Min (val1 As Byte, val2 As Byte) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Byte Min(System::Byte val1, System::Byte val2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.Byte" />
        <Parameter Name="val2" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="val1"><span data-ttu-id="69036-438">Первое из двух сравниваемых 8-разрядных целых чисел без знака.</span><span class="sxs-lookup"><span data-stu-id="69036-438">The first of two 8-bit unsigned integers to compare.</span></span></param>
        <param name="val2"><span data-ttu-id="69036-439">Второе из двух сравниваемых 8-разрядных целых чисел без знака.</span><span class="sxs-lookup"><span data-stu-id="69036-439">The second of two 8-bit unsigned integers to compare.</span></span></param>
        <summary><span data-ttu-id="69036-440">Возвращает меньшее из двух 8-битовых целых чисел без знака.</span><span class="sxs-lookup"><span data-stu-id="69036-440">Returns the smaller of two 8-bit unsigned integers.</span></span></summary>
        <returns><span data-ttu-id="69036-441">Меньший из двух параметров, <paramref name="val1" /> или <paramref name="val2" />.</span><span class="sxs-lookup"><span data-stu-id="69036-441">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is smaller.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="69036-442">В следующем примере демонстрируется использование <xref:System.Math.Min%2A> метод для определения и отображения меньшего из двух переменных.</span><span class="sxs-lookup"><span data-stu-id="69036-442">The following example demonstrates how to use the <xref:System.Math.Min%2A> method to return and display the smaller of two variables.</span></span>  
  
 [!code-cpp[Math.Min#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.min/CPP/min.cpp#1)]
 [!code-csharp[Math.Min#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.min/CS/min.cs#1)]
 [!code-vb[Math.Min#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.min/VB/min.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Min">
      <MemberSignature Language="C#" Value="public static decimal Min (decimal val1, decimal val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Min(valuetype System.Decimal val1, valuetype System.Decimal val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Min(System.Decimal,System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Min (val1 As Decimal, val2 As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Min(System::Decimal val1, System::Decimal val2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.Decimal" />
        <Parameter Name="val2" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="val1"><span data-ttu-id="69036-443">Первое из двух сравниваемых десятичных чисел.</span><span class="sxs-lookup"><span data-stu-id="69036-443">The first of two decimal numbers to compare.</span></span></param>
        <param name="val2"><span data-ttu-id="69036-444">Второе из двух сравниваемых десятичных чисел.</span><span class="sxs-lookup"><span data-stu-id="69036-444">The second of two decimal numbers to compare.</span></span></param>
        <summary><span data-ttu-id="69036-445">Возвращает меньшее из двух десятичных чисел.</span><span class="sxs-lookup"><span data-stu-id="69036-445">Returns the smaller of two decimal numbers.</span></span></summary>
        <returns><span data-ttu-id="69036-446">Меньший из двух параметров, <paramref name="val1" /> или <paramref name="val2" />.</span><span class="sxs-lookup"><span data-stu-id="69036-446">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is smaller.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="69036-447">В следующем примере демонстрируется использование <xref:System.Math.Min%2A> метод для определения и отображения меньшего из двух переменных.</span><span class="sxs-lookup"><span data-stu-id="69036-447">The following example demonstrates how to use the <xref:System.Math.Min%2A> method to return and display the smaller of two variables.</span></span>  
  
 [!code-cpp[Math.Min#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.min/CPP/min.cpp#1)]
 [!code-csharp[Math.Min#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.min/CS/min.cs#1)]
 [!code-vb[Math.Min#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.min/VB/min.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Min">
      <MemberSignature Language="C#" Value="public static double Min (double val1, double val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Min(float64 val1, float64 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Min(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Min (val1 As Double, val2 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Min(double val1, double val2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.Double" />
        <Parameter Name="val2" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="val1"><span data-ttu-id="69036-448">Первое из двух сравниваемых чисел двойной точности с плавающей запятой.</span><span class="sxs-lookup"><span data-stu-id="69036-448">The first of two double-precision floating-point numbers to compare.</span></span></param>
        <param name="val2"><span data-ttu-id="69036-449">Второе из двух сравниваемых чисел двойной точности с плавающей запятой.</span><span class="sxs-lookup"><span data-stu-id="69036-449">The second of two double-precision floating-point numbers to compare.</span></span></param>
        <summary><span data-ttu-id="69036-450">Возвращает меньшее из двух чисел двойной точности с плавающей запятой.</span><span class="sxs-lookup"><span data-stu-id="69036-450">Returns the smaller of two double-precision floating-point numbers.</span></span></summary>
        <returns><span data-ttu-id="69036-451">Меньший из двух параметров, <paramref name="val1" /> или <paramref name="val2" />.</span><span class="sxs-lookup"><span data-stu-id="69036-451">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is smaller.</span></span> <span data-ttu-id="69036-452">Если <paramref name="val1" />, <paramref name="val2" /> или оба параметра <paramref name="val1" /> и <paramref name="val2" /> равны <see cref="F:System.Double.NaN" />, возвращается значение <see cref="F:System.Double.NaN" />.</span><span class="sxs-lookup"><span data-stu-id="69036-452">If <paramref name="val1" />, <paramref name="val2" />, or both <paramref name="val1" /> and <paramref name="val2" /> are equal to <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.NaN" /> is returned.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="69036-453">В следующем примере демонстрируется использование <xref:System.Math.Min%2A> метод для определения и отображения меньшего из двух переменных.</span><span class="sxs-lookup"><span data-stu-id="69036-453">The following example demonstrates how to use the <xref:System.Math.Min%2A> method to return and display the smaller of two variables.</span></span>  
  
 [!code-cpp[Math.Min#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.min/CPP/min.cpp#1)]
 [!code-csharp[Math.Min#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.min/CS/min.cs#1)]
 [!code-vb[Math.Min#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.min/VB/min.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Min">
      <MemberSignature Language="C#" Value="public static short Min (short val1, short val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 Min(int16 val1, int16 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Min(System.Int16,System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Min (val1 As Short, val2 As Short) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short Min(short val1, short val2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.Int16" />
        <Parameter Name="val2" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="val1"><span data-ttu-id="69036-454">Первое из двух сравниваемых 16-разрядных целых чисел со знаком.</span><span class="sxs-lookup"><span data-stu-id="69036-454">The first of two 16-bit signed integers to compare.</span></span></param>
        <param name="val2"><span data-ttu-id="69036-455">Второе из двух сравниваемых 16-разрядных целых чисел со знаком.</span><span class="sxs-lookup"><span data-stu-id="69036-455">The second of two 16-bit signed integers to compare.</span></span></param>
        <summary><span data-ttu-id="69036-456">Возвращает меньшее из двух 16-битовых целых чисел со знаком.</span><span class="sxs-lookup"><span data-stu-id="69036-456">Returns the smaller of two 16-bit signed integers.</span></span></summary>
        <returns><span data-ttu-id="69036-457">Меньший из двух параметров, <paramref name="val1" /> или <paramref name="val2" />.</span><span class="sxs-lookup"><span data-stu-id="69036-457">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is smaller.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="69036-458">В следующем примере демонстрируется использование <xref:System.Math.Min%2A> метод для определения и отображения меньшего из двух переменных.</span><span class="sxs-lookup"><span data-stu-id="69036-458">The following example demonstrates how to use the <xref:System.Math.Min%2A> method to return and display the smaller of two variables.</span></span>  
  
 [!code-cpp[Math.Min#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.min/CPP/min.cpp#1)]
 [!code-csharp[Math.Min#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.min/CS/min.cs#1)]
 [!code-vb[Math.Min#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.min/VB/min.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Min">
      <MemberSignature Language="C#" Value="public static int Min (int val1, int val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Min(int32 val1, int32 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Min(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Min (val1 As Integer, val2 As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Min(int val1, int val2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.Int32" />
        <Parameter Name="val2" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="val1"><span data-ttu-id="69036-459">Первое из двух сравниваемых 32-разрядных целых чисел со знаком.</span><span class="sxs-lookup"><span data-stu-id="69036-459">The first of two 32-bit signed integers to compare.</span></span></param>
        <param name="val2"><span data-ttu-id="69036-460">Второе из двух сравниваемых 32-разрядных целых чисел со знаком.</span><span class="sxs-lookup"><span data-stu-id="69036-460">The second of two 32-bit signed integers to compare.</span></span></param>
        <summary><span data-ttu-id="69036-461">Возвращает меньшее из двух 32-битовых целых чисел со знаком.</span><span class="sxs-lookup"><span data-stu-id="69036-461">Returns the smaller of two 32-bit signed integers.</span></span></summary>
        <returns><span data-ttu-id="69036-462">Меньший из двух параметров, <paramref name="val1" /> или <paramref name="val2" />.</span><span class="sxs-lookup"><span data-stu-id="69036-462">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is smaller.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="69036-463">В следующем примере демонстрируется использование <xref:System.Math.Min%2A> метод для определения и отображения меньшего из двух переменных.</span><span class="sxs-lookup"><span data-stu-id="69036-463">The following example demonstrates how to use the <xref:System.Math.Min%2A> method to return and display the smaller of two variables.</span></span>  
  
 [!code-cpp[Math.Min#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.min/CPP/min.cpp#1)]
 [!code-csharp[Math.Min#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.min/CS/min.cs#1)]
 [!code-vb[Math.Min#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.min/VB/min.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Min">
      <MemberSignature Language="C#" Value="public static long Min (long val1, long val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 Min(int64 val1, int64 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Min(System.Int64,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Min (val1 As Long, val2 As Long) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long Min(long val1, long val2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.Int64" />
        <Parameter Name="val2" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="val1"><span data-ttu-id="69036-464">Первое из двух сравниваемых 64-разрядных целых чисел со знаком.</span><span class="sxs-lookup"><span data-stu-id="69036-464">The first of two 64-bit signed integers to compare.</span></span></param>
        <param name="val2"><span data-ttu-id="69036-465">Второе из двух сравниваемых 64-разрядных целых чисел со знаком.</span><span class="sxs-lookup"><span data-stu-id="69036-465">The second of two 64-bit signed integers to compare.</span></span></param>
        <summary><span data-ttu-id="69036-466">Возвращает меньшее из двух 64-битовых целых чисел со знаком.</span><span class="sxs-lookup"><span data-stu-id="69036-466">Returns the smaller of two 64-bit signed integers.</span></span></summary>
        <returns><span data-ttu-id="69036-467">Меньший из двух параметров, <paramref name="val1" /> или <paramref name="val2" />.</span><span class="sxs-lookup"><span data-stu-id="69036-467">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is smaller.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="69036-468">В следующем примере демонстрируется использование <xref:System.Math.Min%2A> метод для определения и отображения меньшего из двух переменных.</span><span class="sxs-lookup"><span data-stu-id="69036-468">The following example demonstrates how to use the <xref:System.Math.Min%2A> method to return and display the smaller of two variables.</span></span>  
  
 [!code-cpp[Math.Min#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.min/CPP/min.cpp#1)]
 [!code-csharp[Math.Min#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.min/CS/min.cs#1)]
 [!code-vb[Math.Min#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.min/VB/min.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Min">
      <MemberSignature Language="C#" Value="public static sbyte Min (sbyte val1, sbyte val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int8 Min(int8 val1, int8 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Min(System.SByte,System.SByte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Min (val1 As SByte, val2 As SByte) As SByte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::SByte Min(System::SByte val1, System::SByte val2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.SByte" />
        <Parameter Name="val2" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="val1"><span data-ttu-id="69036-469">Первое из двух сравниваемых 8-разрядных целых чисел со знаком.</span><span class="sxs-lookup"><span data-stu-id="69036-469">The first of two 8-bit signed integers to compare.</span></span></param>
        <param name="val2"><span data-ttu-id="69036-470">Второе из двух сравниваемых 8-разрядных целых чисел со знаком.</span><span class="sxs-lookup"><span data-stu-id="69036-470">The second of two 8-bit signed integers to compare.</span></span></param>
        <summary><span data-ttu-id="69036-471">Возвращает меньшее из двух 8-битовых целых чисел со знаком.</span><span class="sxs-lookup"><span data-stu-id="69036-471">Returns the smaller of two 8-bit signed integers.</span></span></summary>
        <returns><span data-ttu-id="69036-472">Меньший из двух параметров, <paramref name="val1" /> или <paramref name="val2" />.</span><span class="sxs-lookup"><span data-stu-id="69036-472">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is smaller.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="69036-473">В следующем примере демонстрируется использование <xref:System.Math.Min%2A> метод для определения и отображения меньшего из двух переменных.</span><span class="sxs-lookup"><span data-stu-id="69036-473">The following example demonstrates how to use the <xref:System.Math.Min%2A> method to return and display the smaller of two variables.</span></span>  
  
 [!code-cpp[Math.Min#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.min/CPP/min.cpp#1)]
 [!code-csharp[Math.Min#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.min/CS/min.cs#1)]
 [!code-vb[Math.Min#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.min/VB/min.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Min">
      <MemberSignature Language="C#" Value="public static float Min (float val1, float val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 Min(float32 val1, float32 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Min(System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Min (val1 As Single, val2 As Single) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float Min(float val1, float val2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.Single" />
        <Parameter Name="val2" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="val1"><span data-ttu-id="69036-474">Первое из двух сравниваемых чисел одинарной точности с плавающей запятой.</span><span class="sxs-lookup"><span data-stu-id="69036-474">The first of two single-precision floating-point numbers to compare.</span></span></param>
        <param name="val2"><span data-ttu-id="69036-475">Второе из двух сравниваемых чисел одинарной точности с плавающей запятой.</span><span class="sxs-lookup"><span data-stu-id="69036-475">The second of two single-precision floating-point numbers to compare.</span></span></param>
        <summary><span data-ttu-id="69036-476">Возвращает меньшее из двух чисел одинарной точности с плавающей запятой.</span><span class="sxs-lookup"><span data-stu-id="69036-476">Returns the smaller of two single-precision floating-point numbers.</span></span></summary>
        <returns><span data-ttu-id="69036-477">Меньший из двух параметров, <paramref name="val1" /> или <paramref name="val2" />.</span><span class="sxs-lookup"><span data-stu-id="69036-477">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is smaller.</span></span> <span data-ttu-id="69036-478">Если <paramref name="val1" />, <paramref name="val2" /> или оба параметра <paramref name="val1" /> и <paramref name="val2" /> равны <see cref="F:System.Single.NaN" />, возвращается значение <see cref="F:System.Single.NaN" />.</span><span class="sxs-lookup"><span data-stu-id="69036-478">If <paramref name="val1" />, <paramref name="val2" />, or both <paramref name="val1" /> and <paramref name="val2" /> are equal to <see cref="F:System.Single.NaN" />, <see cref="F:System.Single.NaN" /> is returned.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="69036-479">В следующем примере демонстрируется использование <xref:System.Math.Min%2A> метод для определения и отображения меньшего из двух переменных.</span><span class="sxs-lookup"><span data-stu-id="69036-479">The following example demonstrates how to use the <xref:System.Math.Min%2A> method to return and display the smaller of two variables.</span></span>  
  
 [!code-cpp[Math.Min#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.min/CPP/min.cpp#1)]
 [!code-csharp[Math.Min#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.min/CS/min.cs#1)]
 [!code-vb[Math.Min#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.min/VB/min.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Min">
      <MemberSignature Language="C#" Value="public static ushort Min (ushort val1, ushort val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int16 Min(unsigned int16 val1, unsigned int16 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Min(System.UInt16,System.UInt16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Min (val1 As UShort, val2 As UShort) As UShort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt16 Min(System::UInt16 val1, System::UInt16 val2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.UInt16" />
        <Parameter Name="val2" Type="System.UInt16" />
      </Parameters>
      <Docs>
        <param name="val1"><span data-ttu-id="69036-480">Первое из двух сравниваемых 16-разрядных целых чисел без знака.</span><span class="sxs-lookup"><span data-stu-id="69036-480">The first of two 16-bit unsigned integers to compare.</span></span></param>
        <param name="val2"><span data-ttu-id="69036-481">Второе из двух сравниваемых 16-разрядных целых чисел без знака.</span><span class="sxs-lookup"><span data-stu-id="69036-481">The second of two 16-bit unsigned integers to compare.</span></span></param>
        <summary><span data-ttu-id="69036-482">Возвращает меньшее из двух 16-битовых целых чисел без знака.</span><span class="sxs-lookup"><span data-stu-id="69036-482">Returns the smaller of two 16-bit unsigned integers.</span></span></summary>
        <returns><span data-ttu-id="69036-483">Меньший из двух параметров, <paramref name="val1" /> или <paramref name="val2" />.</span><span class="sxs-lookup"><span data-stu-id="69036-483">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is smaller.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="69036-484">В следующем примере демонстрируется использование <xref:System.Math.Min%2A> метод для определения и отображения меньшего из двух переменных.</span><span class="sxs-lookup"><span data-stu-id="69036-484">The following example demonstrates how to use the <xref:System.Math.Min%2A> method to return and display the smaller of two variables.</span></span>  
  
 [!code-cpp[Math.Min#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.min/CPP/min.cpp#1)]
 [!code-csharp[Math.Min#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.min/CS/min.cs#1)]
 [!code-vb[Math.Min#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.min/VB/min.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Min">
      <MemberSignature Language="C#" Value="public static uint Min (uint val1, uint val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 Min(unsigned int32 val1, unsigned int32 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Min(System.UInt32,System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Min (val1 As UInteger, val2 As UInteger) As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt32 Min(System::UInt32 val1, System::UInt32 val2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.UInt32" />
        <Parameter Name="val2" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="val1"><span data-ttu-id="69036-485">Первое из двух сравниваемых 32-разрядных целых чисел без знака.</span><span class="sxs-lookup"><span data-stu-id="69036-485">The first of two 32-bit unsigned integers to compare.</span></span></param>
        <param name="val2"><span data-ttu-id="69036-486">Второе из двух сравниваемых 32-разрядных целых чисел без знака.</span><span class="sxs-lookup"><span data-stu-id="69036-486">The second of two 32-bit unsigned integers to compare.</span></span></param>
        <summary><span data-ttu-id="69036-487">Возвращает меньшее из двух 32-битовых целых чисел без знака.</span><span class="sxs-lookup"><span data-stu-id="69036-487">Returns the smaller of two 32-bit unsigned integers.</span></span></summary>
        <returns><span data-ttu-id="69036-488">Меньший из двух параметров, <paramref name="val1" /> или <paramref name="val2" />.</span><span class="sxs-lookup"><span data-stu-id="69036-488">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is smaller.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="69036-489">В следующем примере демонстрируется использование <xref:System.Math.Min%2A> метод для определения и отображения меньшего из двух переменных.</span><span class="sxs-lookup"><span data-stu-id="69036-489">The following example demonstrates how to use the <xref:System.Math.Min%2A> method to return and display the smaller of two variables.</span></span>  
  
 [!code-cpp[Math.Min#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.min/CPP/min.cpp#1)]
 [!code-csharp[Math.Min#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.min/CS/min.cs#1)]
 [!code-vb[Math.Min#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.min/VB/min.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Min">
      <MemberSignature Language="C#" Value="public static ulong Min (ulong val1, ulong val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 Min(unsigned int64 val1, unsigned int64 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Min(System.UInt64,System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Min (val1 As ULong, val2 As ULong) As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 Min(System::UInt64 val1, System::UInt64 val2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.UInt64" />
        <Parameter Name="val2" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="val1"><span data-ttu-id="69036-490">Первое из двух сравниваемых 64-разрядных целых чисел без знака.</span><span class="sxs-lookup"><span data-stu-id="69036-490">The first of two 64-bit unsigned integers to compare.</span></span></param>
        <param name="val2"><span data-ttu-id="69036-491">Второе из двух сравниваемых 64-разрядных целых чисел без знака.</span><span class="sxs-lookup"><span data-stu-id="69036-491">The second of two 64-bit unsigned integers to compare.</span></span></param>
        <summary><span data-ttu-id="69036-492">Возвращает меньшее из двух 64-битовых целых чисел без знака.</span><span class="sxs-lookup"><span data-stu-id="69036-492">Returns the smaller of two 64-bit unsigned integers.</span></span></summary>
        <returns><span data-ttu-id="69036-493">Меньший из двух параметров, <paramref name="val1" /> или <paramref name="val2" />.</span><span class="sxs-lookup"><span data-stu-id="69036-493">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is smaller.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="69036-494">В следующем примере демонстрируется использование <xref:System.Math.Min%2A> метод для определения и отображения меньшего из двух переменных.</span><span class="sxs-lookup"><span data-stu-id="69036-494">The following example demonstrates how to use the <xref:System.Math.Min%2A> method to return and display the smaller of two variables.</span></span>  
  
 [!code-cpp[Math.Min#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.min/CPP/min.cpp#1)]
 [!code-csharp[Math.Min#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.min/CS/min.cs#1)]
 [!code-vb[Math.Min#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.min/VB/min.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PI">
      <MemberSignature Language="C#" Value="public const double PI = 3.14159265358979;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal float64 PI = (3.14159265358979)" />
      <MemberSignature Language="DocId" Value="F:System.Math.PI" />
      <MemberSignature Language="VB.NET" Value="Public Const PI As Double  = 3.14159265358979" />
      <MemberSignature Language="C++ CLI" Value="public: double PI = 3.14159265358979;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <MemberValue>3.14159265358979</MemberValue>
      <Docs>
        <summary><span data-ttu-id="69036-495">Представляет отношение длины окружности к ее диаметру, определяемое константой π.</span><span class="sxs-lookup"><span data-stu-id="69036-495">Represents the ratio of the circumference of a circle to its diameter, specified by the constant, π.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69036-496">Значение этого поля равно 3,14159265358979323846.</span><span class="sxs-lookup"><span data-stu-id="69036-496">The value of this field is 3.14159265358979323846.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="69036-497">В следующем примере используется <xref:System.Math.PI> для при вычислении внутренних углов заданной трапеции.</span><span class="sxs-lookup"><span data-stu-id="69036-497">The following example uses <xref:System.Math.PI> to assist in the computation of the inner angles of a given trapezoid.</span></span>  
  
 [!code-cpp[MathSample#1](~/samples/snippets/cpp/VS_Snippets_CLR/MathSample/CPP/mathsample.cpp#1)]
 [!code-csharp[MathSample#1](~/samples/snippets/csharp/VS_Snippets_CLR/MathSample/CS/mathsample.cs#1)]
 [!code-vb[MathSample#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/MathSample/VB/mathsample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Pow">
      <MemberSignature Language="C#" Value="public static double Pow (double x, double y);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Pow(float64 x, float64 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Pow(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Pow (x As Double, y As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Pow(double x, double y);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Double" />
        <Parameter Name="y" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="69036-498">Число двойной точности с плавающей запятой, возводимое в степень.</span><span class="sxs-lookup"><span data-stu-id="69036-498">A double-precision floating-point number to be raised to a power.</span></span></param>
        <param name="y"><span data-ttu-id="69036-499">Число двойной точности с плавающей запятой, задающее степень.</span><span class="sxs-lookup"><span data-stu-id="69036-499">A double-precision floating-point number that specifies a power.</span></span></param>
        <summary><span data-ttu-id="69036-500">Возвращает указанное число, возведенное в указанную степень.</span><span class="sxs-lookup"><span data-stu-id="69036-500">Returns a specified number raised to the specified power.</span></span></summary>
        <returns><span data-ttu-id="69036-501">Число <paramref name="x" />, возведенное в степень <paramref name="y" />.</span><span class="sxs-lookup"><span data-stu-id="69036-501">The number <paramref name="x" /> raised to the power <paramref name="y" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69036-502">В следующей таблице показано возвращаемое значение, если указаны различные значения или диапазоны значений для `x` и `y` параметров.</span><span class="sxs-lookup"><span data-stu-id="69036-502">The following table indicates the return value when various values or ranges of values are specified for the `x` and `y` parameters.</span></span> <span data-ttu-id="69036-503">Дополнительные сведения см. в разделах <xref:System.Double.PositiveInfinity?displayProperty=nameWithType>, <xref:System.Double.NegativeInfinity?displayProperty=nameWithType> и <xref:System.Double.NaN?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="69036-503">For more information, see <xref:System.Double.PositiveInfinity?displayProperty=nameWithType>, <xref:System.Double.NegativeInfinity?displayProperty=nameWithType>, and <xref:System.Double.NaN?displayProperty=nameWithType>.</span></span>  
  
|<span data-ttu-id="69036-504">Параметры</span><span class="sxs-lookup"><span data-stu-id="69036-504">Parameters</span></span>|<span data-ttu-id="69036-505">Возвращаемое значение</span><span class="sxs-lookup"><span data-stu-id="69036-505">Return value</span></span>|  
|----------------|------------------|  
|<span data-ttu-id="69036-506">`x` или `y`  =  `NaN`.</span><span class="sxs-lookup"><span data-stu-id="69036-506">`x` or `y` = `NaN`.</span></span>|`NaN`|  
|<span data-ttu-id="69036-507">`x` = Любое значение, за исключением `NaN`; `y` = 0.</span><span class="sxs-lookup"><span data-stu-id="69036-507">`x` = Any value except `NaN`; `y` = 0.</span></span>|<span data-ttu-id="69036-508">1</span><span class="sxs-lookup"><span data-stu-id="69036-508">1</span></span>|  
|<span data-ttu-id="69036-509">`x` = `NegativeInfinity`; `y` < 0.</span><span class="sxs-lookup"><span data-stu-id="69036-509">`x` = `NegativeInfinity`; `y` < 0.</span></span>|<span data-ttu-id="69036-510">0</span><span class="sxs-lookup"><span data-stu-id="69036-510">0</span></span>|  
|<span data-ttu-id="69036-511">`x` = `NegativeInfinity`; `y` является нечетным положительным целым числом.</span><span class="sxs-lookup"><span data-stu-id="69036-511">`x` = `NegativeInfinity`; `y` is a positive odd integer.</span></span>|`NegativeInfinity`|  
|<span data-ttu-id="69036-512">`x` = `NegativeInfinity`; `y` является положительным, но не нечетным целым числом.</span><span class="sxs-lookup"><span data-stu-id="69036-512">`x` = `NegativeInfinity`; `y` is positive but not an odd integer.</span></span>|`PositiveInfinity`|  
|<span data-ttu-id="69036-513">`x` < 0, но не `NegativeInfinity`; `y` не является целым числом, `NegativeInfinity`, или `PositiveInfinity`.</span><span class="sxs-lookup"><span data-stu-id="69036-513">`x` < 0 but not `NegativeInfinity`; `y` is not an integer, `NegativeInfinity`, or `PositiveInfinity`.</span></span>|`NaN`|  
|<span data-ttu-id="69036-514">`x` = -1; `y` = `NegativeInfinity` or `PositiveInfinity`.</span><span class="sxs-lookup"><span data-stu-id="69036-514">`x` = -1; `y` = `NegativeInfinity` or `PositiveInfinity`.</span></span>|`NaN`|  
|<span data-ttu-id="69036-515">-1 < `x` < 1; `y` = `NegativeInfinity`.</span><span class="sxs-lookup"><span data-stu-id="69036-515">-1 < `x` < 1; `y` = `NegativeInfinity`.</span></span>|`PositiveInfinity`|  
|<span data-ttu-id="69036-516">-1 < `x` < 1; `y` = `PositiveInfinity`.</span><span class="sxs-lookup"><span data-stu-id="69036-516">-1 < `x` < 1; `y` = `PositiveInfinity`.</span></span>|<span data-ttu-id="69036-517">0</span><span class="sxs-lookup"><span data-stu-id="69036-517">0</span></span>|  
|<span data-ttu-id="69036-518">`x` < -1 или `x` > 1. `y` = `NegativeInfinity`.</span><span class="sxs-lookup"><span data-stu-id="69036-518">`x` < -1 or `x` > 1; `y` = `NegativeInfinity`.</span></span>|<span data-ttu-id="69036-519">0</span><span class="sxs-lookup"><span data-stu-id="69036-519">0</span></span>|  
|<span data-ttu-id="69036-520">`x` < -1 или `x` > 1. `y` = `PositiveInfinity`.</span><span class="sxs-lookup"><span data-stu-id="69036-520">`x` < -1 or `x` > 1; `y` = `PositiveInfinity`.</span></span>|`PositiveInfinity`|  
|<span data-ttu-id="69036-521">`x` = 0; `y` < 0.</span><span class="sxs-lookup"><span data-stu-id="69036-521">`x` = 0; `y` < 0.</span></span>|`PositiveInfinity`|  
|<span data-ttu-id="69036-522">`x` = 0; `y` > 0.</span><span class="sxs-lookup"><span data-stu-id="69036-522">`x` = 0; `y` > 0.</span></span>|<span data-ttu-id="69036-523">0</span><span class="sxs-lookup"><span data-stu-id="69036-523">0</span></span>|  
|<span data-ttu-id="69036-524">`x` = 1; `y` имеет любое значение, кроме `NaN`.</span><span class="sxs-lookup"><span data-stu-id="69036-524">`x` = 1; `y` is any value except `NaN`.</span></span>|<span data-ttu-id="69036-525">1</span><span class="sxs-lookup"><span data-stu-id="69036-525">1</span></span>|  
|<span data-ttu-id="69036-526">`x` = `PositiveInfinity`; `y` < 0.</span><span class="sxs-lookup"><span data-stu-id="69036-526">`x` = `PositiveInfinity`; `y` < 0.</span></span>|<span data-ttu-id="69036-527">0</span><span class="sxs-lookup"><span data-stu-id="69036-527">0</span></span>|  
|<span data-ttu-id="69036-528">`x` = `PositiveInfinity`; `y` > 0.</span><span class="sxs-lookup"><span data-stu-id="69036-528">`x` = `PositiveInfinity`; `y` > 0.</span></span>|`PositiveInfinity`|  
  
   
  
## Examples  
 <span data-ttu-id="69036-529">В следующем примере используется <xref:System.Math.Pow%2A> метод для вычисления значения, являющийся результатом возведения 2 в степень, в диапазоне от 0 до 32.</span><span class="sxs-lookup"><span data-stu-id="69036-529">The following example uses the <xref:System.Math.Pow%2A> method to calculate the value that results from raising 2 to a power ranging from 0 to 32.</span></span>  
  
 [!code-csharp[System.Math.Pow#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.pow/cs/pow1.cs#1)]
 [!code-vb[System.Math.Pow#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.pow/vb/pow1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Math.Sqrt(System.Double)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Round">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="69036-530">Округляет значение до ближайшего целого или указанного количества десятичных знаков.</span><span class="sxs-lookup"><span data-stu-id="69036-530">Rounds a value to the nearest integer or to the specified number of fractional digits.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69036-531">Содержание</span><span class="sxs-lookup"><span data-stu-id="69036-531">In this section:</span></span>  
  
 <span data-ttu-id="69036-532">[Синтаксис метода](#Syntax) </span><span class="sxs-lookup"><span data-stu-id="69036-532">[Overloaded method syntax](#Syntax) </span></span>  
 <span data-ttu-id="69036-533">[Параметры](#Params) </span><span class="sxs-lookup"><span data-stu-id="69036-533">[Parameters](#Params) </span></span>  
 <span data-ttu-id="69036-534">[Возвращаемое значение](#Returns) </span><span class="sxs-lookup"><span data-stu-id="69036-534">[Return value](#Returns) </span></span>  
 <span data-ttu-id="69036-535">[Исключения](#Exceptions) </span><span class="sxs-lookup"><span data-stu-id="69036-535">[Exceptions](#Exceptions) </span></span>  
 <span data-ttu-id="69036-536">[Какой метод нужно вызывать?](#Tasks) </span><span class="sxs-lookup"><span data-stu-id="69036-536">[Which method do I call?](#Tasks) </span></span>  
 <span data-ttu-id="69036-537">[Средние значения и округления соглашения](#Midpoint) </span><span class="sxs-lookup"><span data-stu-id="69036-537">[Midpoint values and rounding conventions](#Midpoint) </span></span>  
 <span data-ttu-id="69036-538">[Округление и точность](#Precision) </span><span class="sxs-lookup"><span data-stu-id="69036-538">[Rounding and precision](#Precision) </span></span>  
 <span data-ttu-id="69036-539">[Значения с плавающей запятой одиночной точности и округлением](#Single) </span><span class="sxs-lookup"><span data-stu-id="69036-539">[Rounding and single-precision floating-point values](#Single) </span></span>  
 <span data-ttu-id="69036-540">Примеры</span><span class="sxs-lookup"><span data-stu-id="69036-540">Examples:</span></span>   
 [<span data-ttu-id="69036-541">Math.Round(Decimal)</span><span class="sxs-lookup"><span data-stu-id="69036-541">Math.Round(Decimal)</span></span>](#Round1_Example)  
 [<span data-ttu-id="69036-542">Math.Round(Double)</span><span class="sxs-lookup"><span data-stu-id="69036-542">Math.Round(Double)</span></span>](#Round2_Example)  
 [<span data-ttu-id="69036-543">Math.Round(Decimal, Int32)</span><span class="sxs-lookup"><span data-stu-id="69036-543">Math.Round(Decimal, Int32)</span></span>](#Round3_Example)  
 [<span data-ttu-id="69036-544">Math.Round (Decimal, MidpointRounding)</span><span class="sxs-lookup"><span data-stu-id="69036-544">Math.Round(Decimal, MidpointRounding)</span></span>](#Round4_Example)  
 [<span data-ttu-id="69036-545">Math.Round(Double, Int32)</span><span class="sxs-lookup"><span data-stu-id="69036-545">Math.Round(Double, Int32)</span></span>](#Round5_Example)  
 [<span data-ttu-id="69036-546">Math.Round (Double MidpointRounding)</span><span class="sxs-lookup"><span data-stu-id="69036-546">Math.Round(Double, MidpointRounding)</span></span>](#Round6_Example)  
 [<span data-ttu-id="69036-547">Math.Round (Int32, Decimal MidpointRounding)</span><span class="sxs-lookup"><span data-stu-id="69036-547">Math.Round(Decimal, Int32, MidpointRounding)</span></span>](#Round7_Example)  
 [<span data-ttu-id="69036-548">Math.Round (Double, Int32, MidpointRounding)</span><span class="sxs-lookup"><span data-stu-id="69036-548">Math.Round(Double, Int32, MidpointRounding)</span></span>](#Round8_Example)  
[<span data-ttu-id="69036-549">Сведения о версии</span><span class="sxs-lookup"><span data-stu-id="69036-549">Version information</span></span>](#Round_Versions)  
  
<a name="Syntax"></a>   
## <a name="overloaded-method-syntax"></a><span data-ttu-id="69036-550">Синтаксис метода</span><span class="sxs-lookup"><span data-stu-id="69036-550">Overloaded method syntax</span></span>  
 <span data-ttu-id="69036-551">Дополнительные рекомендации по выбору перегрузку см. в разделе [какой метод обратиться?](#Tasks)</span><span class="sxs-lookup"><span data-stu-id="69036-551">For additional guidance on choosing an overload, see [Which method do I call?](#Tasks)</span></span>  
  
 <span data-ttu-id="69036-552">`Decimal Math.Round(Decimal` `d` `)`</span><span class="sxs-lookup"><span data-stu-id="69036-552">`Decimal Math.Round(Decimal` `d` `)`</span></span>  
 <span data-ttu-id="69036-553">Округляет десятичное значение до ближайшего целого и округляет средние значения до ближайшего четного числа ([пример](#Round1_Example)).</span><span class="sxs-lookup"><span data-stu-id="69036-553">Rounds a decimal value to the nearest integer, and rounds midpoint values to the nearest even number ([example](#Round1_Example)).</span></span>  
  
 <span data-ttu-id="69036-554">`Double Math.Round(Double` `a` `)`</span><span class="sxs-lookup"><span data-stu-id="69036-554">`Double Math.Round(Double` `a` `)`</span></span>  
 <span data-ttu-id="69036-555">Округляет значение двойной точности с плавающей запятой до ближайшего целого и округляет средние значения до ближайшего четного числа ([пример](#Round2_Example)).</span><span class="sxs-lookup"><span data-stu-id="69036-555">Rounds a double-precision floating-point value to the nearest integer, and rounds midpoint values to the nearest even number ([example](#Round2_Example)).</span></span>  
  
 <span data-ttu-id="69036-556">`Decimal Math.Round(Decimal` `d` `, Int32`  `decimals` `)`</span><span class="sxs-lookup"><span data-stu-id="69036-556">`Decimal Math.Round(Decimal` `d` `, Int32`  `decimals` `)`</span></span>  
 <span data-ttu-id="69036-557">Округляет десятичное значение до указанного числа дробных разрядов и округляет средние значения до ближайшего четного числа ([пример](#Round3_Example)).</span><span class="sxs-lookup"><span data-stu-id="69036-557">Rounds a decimal value to a specified number of fractional digits, and rounds midpoint values to the nearest even number ([example](#Round3_Example)).</span></span>  
  
 <span data-ttu-id="69036-558">`Double Math.Round(Double` `value` `, Int32`  `digits` `)`</span><span class="sxs-lookup"><span data-stu-id="69036-558">`Double Math.Round(Double` `value` `, Int32`  `digits` `)`</span></span>  
 <span data-ttu-id="69036-559">Округляет значение двойной точности с плавающей запятой для указанного числа дробных разрядов и округляет средние значения до ближайшего четного числа ([пример](#Round4_Example)).</span><span class="sxs-lookup"><span data-stu-id="69036-559">Rounds a double-precision floating-point value to a specified number of fractional digits, and rounds midpoint values to the nearest even number ([example](#Round4_Example)).</span></span>  
  
 <span data-ttu-id="69036-560">`Decimal Math.Round(Decimal` `d` `, MidpointRounding`  `mode` `)`</span><span class="sxs-lookup"><span data-stu-id="69036-560">`Decimal Math.Round(Decimal` `d` `, MidpointRounding`  `mode` `)`</span></span>  
 <span data-ttu-id="69036-561">Округляет десятичное значение до ближайшего целого числа и использует указанное соглашение округления для средние значения ([пример](#Round5_Example)).</span><span class="sxs-lookup"><span data-stu-id="69036-561">Rounds a decimal value to the nearest integer, and uses the specified rounding convention for midpoint values ([example](#Round5_Example)).</span></span>  
  
 <span data-ttu-id="69036-562">`Double Math.Round(Double` `value` `, MidpointRounding`  `mode` `)`</span><span class="sxs-lookup"><span data-stu-id="69036-562">`Double Math.Round(Double` `value` `, MidpointRounding`  `mode` `)`</span></span>  
 <span data-ttu-id="69036-563">Округляет значение двойной точности с плавающей запятой до ближайшего целого числа и использует указанное соглашение округления для средние значения ([пример](#Round6_Example)).</span><span class="sxs-lookup"><span data-stu-id="69036-563">Rounds a double-precision floating-point value to the nearest integer, and uses the specified rounding convention for midpoint values ([example](#Round6_Example)).</span></span>  
  
 <span data-ttu-id="69036-564">`Decimal Math.Round(Decimal` `d` `, Int32`  `decimals` `, MidpointRounding`  `mode` `)`</span><span class="sxs-lookup"><span data-stu-id="69036-564">`Decimal Math.Round(Decimal` `d` `, Int32`  `decimals` `, MidpointRounding`  `mode` `)`</span></span>  
 <span data-ttu-id="69036-565">Округляет десятичное значение до указанного числа дробных разрядов и использует указанное соглашение округления для средние значения ([пример](#Round7_Example)).</span><span class="sxs-lookup"><span data-stu-id="69036-565">Rounds a decimal value to a specified number of fractional digits, and uses the specified rounding convention for midpoint values ([example](#Round7_Example)).</span></span>  
  
 <span data-ttu-id="69036-566">`Double Math.Round(Double` `value` `, Int32`  `digits` `, MidpointRounding`  `mode` `)`</span><span class="sxs-lookup"><span data-stu-id="69036-566">`Double Math.Round(Double` `value` `, Int32`  `digits` `, MidpointRounding`  `mode` `)`</span></span>  
 <span data-ttu-id="69036-567">Округляет значение двойной точности с плавающей запятой на указанное число цифр дробной части и использует указанное соглашение округления для средние значения ([пример](#Round8_Example)).</span><span class="sxs-lookup"><span data-stu-id="69036-567">Rounds a double-precision floating-point value to a specified number of fractional digits, and uses the specified rounding convention for midpoint values ([example](#Round8_Example)).</span></span>  
  
<a name="Params"></a>   
## <a name="parameters"></a><span data-ttu-id="69036-568">Параметры</span><span class="sxs-lookup"><span data-stu-id="69036-568">Parameters</span></span>  
 <span data-ttu-id="69036-569">Полный список параметров для <xref:System.Math.Round%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="69036-569">This is a complete list of parameters for the <xref:System.Math.Round%2A> method.</span></span> <span data-ttu-id="69036-570">Параметры, используемые каждой перегрузке см. выше синтаксис перегрузки.</span><span class="sxs-lookup"><span data-stu-id="69036-570">For the parameters used by each overload, see the overload syntax above.</span></span>  
  
|<span data-ttu-id="69036-571">Параметр</span><span class="sxs-lookup"><span data-stu-id="69036-571">Parameter</span></span>|<span data-ttu-id="69036-572">Тип</span><span class="sxs-lookup"><span data-stu-id="69036-572">Type</span></span>|<span data-ttu-id="69036-573">Описание:</span><span class="sxs-lookup"><span data-stu-id="69036-573">Description</span></span>|  
|---------------|----------|-----------------|  
|`d`|<xref:System.Decimal>|<span data-ttu-id="69036-574">Округляемое число.</span><span class="sxs-lookup"><span data-stu-id="69036-574">A number to be rounded.</span></span>|  
|`a`<br /><br /> <span data-ttu-id="69036-575">- или -</span><span class="sxs-lookup"><span data-stu-id="69036-575">-or-</span></span><br /><br /> `value`|<xref:System.Double>|<span data-ttu-id="69036-576">Округляемое число двойной точности с плавающей запятой.</span><span class="sxs-lookup"><span data-stu-id="69036-576">A double-precision floating-point number to be rounded.</span></span>|  
|`decimals`<br /><br /> <span data-ttu-id="69036-577">- или -</span><span class="sxs-lookup"><span data-stu-id="69036-577">-or-</span></span><br /><br /> `digits`|<xref:System.Int32>|<span data-ttu-id="69036-578">Количество цифр дробной части в возвращаемом значении.</span><span class="sxs-lookup"><span data-stu-id="69036-578">The number of fractional digits in the return value.</span></span> <span data-ttu-id="69036-579">Для <xref:System.Decimal> , он может принимать значения от 0 до 28.</span><span class="sxs-lookup"><span data-stu-id="69036-579">For <xref:System.Decimal> values, it can range from 0 to 28.</span></span> <span data-ttu-id="69036-580">Для <xref:System.Double> , он может принимать значения от 0 до 15.</span><span class="sxs-lookup"><span data-stu-id="69036-580">For <xref:System.Double> values, it can range from 0 to 15.</span></span> <span data-ttu-id="69036-581">Обратите внимание, что 15 максимальное число целой и дробной части, поддерживаемые <xref:System.Double> тип.</span><span class="sxs-lookup"><span data-stu-id="69036-581">Note that 15 is the maximum number of integral and fractional digits supported by the <xref:System.Double> type.</span></span><br /><br /> <span data-ttu-id="69036-582">Значение по умолчанию: 0, то число округляется до целого числа</span><span class="sxs-lookup"><span data-stu-id="69036-582">Default value: 0, which rounds to an integer</span></span>|  
|`mode`|<xref:System.MidpointRounding>|<span data-ttu-id="69036-583">Флаг, указывающий соглашение для округления средние значения.</span><span class="sxs-lookup"><span data-stu-id="69036-583">A flag that specifies the convention to use for rounding midpoint values.</span></span> <span data-ttu-id="69036-584">В разделе [средние значения и округления соглашения](#Midpoint).</span><span class="sxs-lookup"><span data-stu-id="69036-584">See [Midpoint values and rounding conventions](#Midpoint).</span></span><br /><br /> <span data-ttu-id="69036-585">Значение по умолчанию: <xref:System.MidpointRounding.ToEven?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="69036-585">Default value: <xref:System.MidpointRounding.ToEven?displayProperty=nameWithType></span></span>|  
  
<a name="Returns"></a>   
## <a name="return-value"></a><span data-ttu-id="69036-586">Возвращаемое значение</span><span class="sxs-lookup"><span data-stu-id="69036-586">Return value</span></span>  
 <span data-ttu-id="69036-587">Тип: <xref:System.Decimal> или <xref:System.Double>, в зависимости от типа должно быть округлено значение.</span><span class="sxs-lookup"><span data-stu-id="69036-587">Type: <xref:System.Decimal> or <xref:System.Double>, depending on the type of the value to be rounded.</span></span>   
<span data-ttu-id="69036-588">Числовое значение того же типа, что `d`, `a`, или `value`, но округленное до целого или указанного количества десятичных цифр.</span><span class="sxs-lookup"><span data-stu-id="69036-588">A numeric value of the same type as `d`, `a`, or `value`, but rounded either to an integer or to the specified number of decimal digits.</span></span> <span data-ttu-id="69036-589">В разделе [средние значения и округления соглашения](#Midpoint) сведения о округления чисел с средние значения.</span><span class="sxs-lookup"><span data-stu-id="69036-589">See [Midpoint values and rounding conventions](#Midpoint) for information about rounding numbers with midpoint values.</span></span>  
  
> [!WARNING]
>  <span data-ttu-id="69036-590">При округлении средние значения, округления алгоритм выполняет проверку на равенство.</span><span class="sxs-lookup"><span data-stu-id="69036-590">When rounding midpoint values, the rounding algorithm performs an equality test.</span></span> <span data-ttu-id="69036-591">Из-за проблем двоичное представление и точности в формате с плавающей запятой может быть непредвиденное значение, возвращаемое методом.</span><span class="sxs-lookup"><span data-stu-id="69036-591">Because of problems of binary representation and precision in the floating-point format, the value returned by the method can be unexpected.</span></span> <span data-ttu-id="69036-592">Дополнительные сведения см. в разделе [округление и точностью](#Precision).</span><span class="sxs-lookup"><span data-stu-id="69036-592">For more information, see [Rounding and precision](#Precision).</span></span>  
  
 <span data-ttu-id="69036-593">Если перегруженную версию с <xref:System.Double> параметр вызывается с <xref:System.Double.NaN?displayProperty=nameWithType>, метод возвращает <xref:System.Double.NaN?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="69036-593">If an overload with a <xref:System.Double> parameter is called with <xref:System.Double.NaN?displayProperty=nameWithType>, the method returns <xref:System.Double.NaN?displayProperty=nameWithType>.</span></span> <span data-ttu-id="69036-594">Если вызывается с <xref:System.Double.PositiveInfinity?displayProperty=nameWithType> или <xref:System.Double.NegativeInfinity?displayProperty=nameWithType>, метод возвращает <xref:System.Double.PositiveInfinity?displayProperty=nameWithType> или <xref:System.Double.NegativeInfinity?displayProperty=nameWithType>соответственно.</span><span class="sxs-lookup"><span data-stu-id="69036-594">If it is called with <xref:System.Double.PositiveInfinity?displayProperty=nameWithType> or <xref:System.Double.NegativeInfinity?displayProperty=nameWithType>, the method returns <xref:System.Double.PositiveInfinity?displayProperty=nameWithType> or <xref:System.Double.NegativeInfinity?displayProperty=nameWithType>, respectively.</span></span>  
  
<a name="Exceptions"></a>   
## <a name="exceptions"></a><span data-ttu-id="69036-595">Исключения</span><span class="sxs-lookup"><span data-stu-id="69036-595">Exceptions</span></span>  
  
|<span data-ttu-id="69036-596">Исключение</span><span class="sxs-lookup"><span data-stu-id="69036-596">Exception</span></span>|<span data-ttu-id="69036-597">Условие</span><span class="sxs-lookup"><span data-stu-id="69036-597">Condition</span></span>|<span data-ttu-id="69036-598">Вызванное</span><span class="sxs-lookup"><span data-stu-id="69036-598">Thrown by</span></span>|  
|---------------|---------------|---------------|  
|<xref:System.OverflowException>|<span data-ttu-id="69036-599">Результат находится вне диапазона <xref:System.Decimal> типа.</span><span class="sxs-lookup"><span data-stu-id="69036-599">The result is outside the range of the <xref:System.Decimal> type.</span></span>|<xref:System.Math.Round%28System.Decimal%29><br /><br /> <xref:System.Math.Round%28System.Decimal%2CSystem.Int32%29><br /><br /> <xref:System.Math.Round%28System.Decimal%2CSystem.MidpointRounding%29><br /><br /> <xref:System.Math.Round%28System.Decimal%2CSystem.Int32%2CSystem.MidpointRounding%29>|  
|<xref:System.ArgumentOutOfRangeException>|<span data-ttu-id="69036-600">Параметр `decimals` имеет значение меньше 0 или больше 28.</span><span class="sxs-lookup"><span data-stu-id="69036-600">`decimals` is less than 0 or greater than 28.</span></span><br /><br /> <span data-ttu-id="69036-601">- или -</span><span class="sxs-lookup"><span data-stu-id="69036-601">-or-</span></span><br /><br /> <span data-ttu-id="69036-602">Параметр `digits` имеет значение меньше 0 или больше 15.</span><span class="sxs-lookup"><span data-stu-id="69036-602">`digits` is less than 0 or greater than 15.</span></span>|<xref:System.Math.Round%28System.Decimal%2CSystem.Int32%29><br /><br /> <xref:System.Math.Round%28System.Double%2CSystem.Int32%29><br /><br /> <xref:System.Math.Round%28System.Decimal%2CSystem.Int32%2CSystem.MidpointRounding%29><br /><br /> <xref:System.Math.Round%28System.Double%2CSystem.Int32%2CSystem.MidpointRounding%29>|  
|<xref:System.ArgumentException>|<span data-ttu-id="69036-603">Параметр `mode` не является допустимым значением объекта <xref:System.MidpointRounding>.</span><span class="sxs-lookup"><span data-stu-id="69036-603">`mode` is not a valid value of <xref:System.MidpointRounding>.</span></span>|<xref:System.Math.Round%28System.Decimal%2CSystem.MidpointRounding%29><br /><br /> <xref:System.Math.Round%28System.Double%2CSystem.MidpointRounding%29><br /><br /> <xref:System.Math.Round%28System.Decimal%2CSystem.Int32%2CSystem.MidpointRounding%29><br /><br /> <xref:System.Math.Round%28System.Double%2CSystem.Int32%2CSystem.MidpointRounding%29>|  
  
<a name="Tasks"></a>   
## <a name="which-method-do-i-call"></a><span data-ttu-id="69036-604">Какой метод нужно вызывать?</span><span class="sxs-lookup"><span data-stu-id="69036-604">Which method do I call?</span></span>  
  
|<span data-ttu-id="69036-605">Кому</span><span class="sxs-lookup"><span data-stu-id="69036-605">To</span></span>|<span data-ttu-id="69036-606">Call</span><span class="sxs-lookup"><span data-stu-id="69036-606">Call</span></span>|  
|--------|----------|  
|<span data-ttu-id="69036-607">Округлить число до целого с помощью округления до ближайшего соглашение.</span><span class="sxs-lookup"><span data-stu-id="69036-607">Round a number to an integer by using the rounding to nearest convention.</span></span>|<xref:System.Math.Round%28System.Decimal%29><br /><br /> <span data-ttu-id="69036-608">- или -</span><span class="sxs-lookup"><span data-stu-id="69036-608">-or-</span></span><br /><br /> <xref:System.Math.Round%28System.Double%29>|  
|<span data-ttu-id="69036-609">Округлить число до целого числа, используя указанную округления соглашение.</span><span class="sxs-lookup"><span data-stu-id="69036-609">Round a number to an integer by using a specified rounding convention.</span></span>|<xref:System.Math.Round%28System.Decimal%2CSystem.MidpointRounding%29><br /><br /> <span data-ttu-id="69036-610">- или -</span><span class="sxs-lookup"><span data-stu-id="69036-610">-or-</span></span><br /><br /> <xref:System.Math.Round%28System.Double%2CSystem.MidpointRounding%29>|  
|<span data-ttu-id="69036-611">Округлить число до указанного числа дробных разрядов с помощью округления до ближайшего соглашение.</span><span class="sxs-lookup"><span data-stu-id="69036-611">Round a number to a specified number of fractional digits by using the rounding to nearest convention.</span></span>|<xref:System.Math.Round%28System.Decimal%2CSystem.Int32%29><br /><br /> <span data-ttu-id="69036-612">- или -</span><span class="sxs-lookup"><span data-stu-id="69036-612">-or-</span></span><br /><br /> <xref:System.Math.Round%28System.Double%2CSystem.Int32%29>|  
|<span data-ttu-id="69036-613">Округлить число до указанного числа дробных разрядов, используя указанную округления соглашение.</span><span class="sxs-lookup"><span data-stu-id="69036-613">Round a number to a specified number of fractional digits by using a specified rounding convention.</span></span>|<xref:System.Math.Round%28System.Decimal%2CSystem.Int32%2CSystem.MidpointRounding%29><br /><br /> <span data-ttu-id="69036-614">- или -</span><span class="sxs-lookup"><span data-stu-id="69036-614">-or-</span></span><br /><br /> <xref:System.Math.Round%28System.Double%2CSystem.Int32%2CSystem.MidpointRounding%29>|  
|<span data-ttu-id="69036-615">Round <xref:System.Single> значение указанного количества десятичных знаков, с помощью указанного округления соглашение и минимизации потерь точности.</span><span class="sxs-lookup"><span data-stu-id="69036-615">Round a <xref:System.Single> value to a specified number of fractional digits by using a specified rounding convention and minimizing the loss of precision.</span></span>|<span data-ttu-id="69036-616">Преобразовать <xref:System.Single> для <xref:System.Decimal> и вызвать <xref:System.Math.Round%28System.Decimal%2CSystem.Int32%2CSystem.MidpointRounding%29>.</span><span class="sxs-lookup"><span data-stu-id="69036-616">Convert the <xref:System.Single> to a <xref:System.Decimal> and call <xref:System.Math.Round%28System.Decimal%2CSystem.Int32%2CSystem.MidpointRounding%29>.</span></span>|  
|<span data-ttu-id="69036-617">Округлить число до указанного числа дробных разрядов свести к минимуму проблемы точность округления средние значения.</span><span class="sxs-lookup"><span data-stu-id="69036-617">Round a number to a specified number of fractional digits while minimizing problems of precision in rounding midpoint values.</span></span>|<span data-ttu-id="69036-618">Вызовите метод округления, реализующий сравнение объектов «больше или равное примерно».</span><span class="sxs-lookup"><span data-stu-id="69036-618">Call a rounding method that implements a "greater than or approximately equal to" comparison.</span></span> <span data-ttu-id="69036-619">В разделе [округление и точностью](#Precision).</span><span class="sxs-lookup"><span data-stu-id="69036-619">See [Rounding and precision](#Precision).</span></span>|  
|<span data-ttu-id="69036-620">Round это дробное значение в целое число, больше, чем значение долей.</span><span class="sxs-lookup"><span data-stu-id="69036-620">Round a fractional value to an integer that is greater than the fractional value.</span></span> <span data-ttu-id="69036-621">Например округление 3.1 до 4.</span><span class="sxs-lookup"><span data-stu-id="69036-621">For example, round 3.1 to 4.</span></span>|<xref:System.Math.Ceiling%2A>|  
|<span data-ttu-id="69036-622">Round это дробное значение в целое число, меньше, чем значение долей.</span><span class="sxs-lookup"><span data-stu-id="69036-622">Round a fractional value to an integer that is less than the fractional value.</span></span> <span data-ttu-id="69036-623">Например округление 3.9 до 3.</span><span class="sxs-lookup"><span data-stu-id="69036-623">For example, round 3.9 to 3.</span></span>|<xref:System.Math.Floor%2A>|  
  
<a name="Midpoint"></a>   
## <a name="midpoint-values-and-rounding-conventions"></a><span data-ttu-id="69036-624">Средние значения и округления соглашения</span><span class="sxs-lookup"><span data-stu-id="69036-624">Midpoint values and rounding conventions</span></span>  
 <span data-ttu-id="69036-625">Округление подразумевает преобразование числовое значение с заданной точностью до ближайшего значения с меньшей точностью.</span><span class="sxs-lookup"><span data-stu-id="69036-625">Rounding involves converting a numeric value with a specified precision to the nearest value with less precision.</span></span> <span data-ttu-id="69036-626">Например, можно использовать <xref:System.Math.Round%28System.Double%29> метод для округления значения 3.0 3.4 и <xref:System.Math.Round%28System.Double%2CSystem.Int32%29> метод округляемое значение 3,579 для 3.58.</span><span class="sxs-lookup"><span data-stu-id="69036-626">For example, you can use the <xref:System.Math.Round%28System.Double%29> method to round a value of 3.4 to 3.0, and the <xref:System.Math.Round%28System.Double%2CSystem.Int32%29> method to round a value of 3.579 to 3.58.</span></span>  
  
 <span data-ttu-id="69036-627">Среднее значение значение после младших цифр в результате при точно посередине между двумя числами.</span><span class="sxs-lookup"><span data-stu-id="69036-627">In a midpoint value, the value after the least significant digit in the result is precisely half way between two numbers.</span></span> <span data-ttu-id="69036-628">Например 3.47500 — среднее значение, если она должна быть округляются двух знаков после запятой, и 7.500 является среднее значение, если это должно быть округлено в целое число.</span><span class="sxs-lookup"><span data-stu-id="69036-628">For example, 3.47500 is a midpoint value if it is to be rounded two decimal places, and 7.500 is a midpoint value if it is to be rounded to an integer.</span></span> <span data-ttu-id="69036-629">В этих случаях ближайшего значения нельзя определить легко без округления соглашение.</span><span class="sxs-lookup"><span data-stu-id="69036-629">In these cases, the nearest value can't be easily identified without a rounding convention.</span></span>  
  
 <span data-ttu-id="69036-630"><xref:System.Math.Round%2A> Метод поддерживает два округления соглашения для обработки средняя точка значений:</span><span class="sxs-lookup"><span data-stu-id="69036-630">The <xref:System.Math.Round%2A> method supports two rounding conventions for handling midpoint values:</span></span>  
  
 <span data-ttu-id="69036-631">**Назначено использование округления от нуля**</span><span class="sxs-lookup"><span data-stu-id="69036-631">**Rounding away from zero**</span></span>  
 <span data-ttu-id="69036-632">Средние значения округляются до следующего числа от нуля.</span><span class="sxs-lookup"><span data-stu-id="69036-632">Midpoint values are rounded to the next number away from zero.</span></span> <span data-ttu-id="69036-633">Например, 3,75 округляется до 3.8, 3.85 округление 3.9,-3.75 округляется до-3.8, и-3.85 округляется до-3.9.</span><span class="sxs-lookup"><span data-stu-id="69036-633">For example, 3.75 rounds to 3.8, 3.85 rounds to 3.9, -3.75 rounds to -3.8, and -3.85 rounds to -3.9.</span></span> <span data-ttu-id="69036-634">Эта форма Округления представленного <xref:System.MidpointRounding.AwayFromZero?displayProperty=nameWithType> член перечисления.</span><span class="sxs-lookup"><span data-stu-id="69036-634">This form of rounding is represented by the <xref:System.MidpointRounding.AwayFromZero?displayProperty=nameWithType> enumeration member.</span></span>  
  
 <span data-ttu-id="69036-635">Назначено использование округления от нуля — это наиболее широко известная Форма округления.</span><span class="sxs-lookup"><span data-stu-id="69036-635">Rounding away from zero is the most widely known form of rounding.</span></span>  
  
 <span data-ttu-id="69036-636">**Округление к ближайшему или банковское округление**</span><span class="sxs-lookup"><span data-stu-id="69036-636">**Rounding to nearest, or banker's rounding**</span></span>  
 <span data-ttu-id="69036-637">Средние значения округляются до ближайшего четного числа.</span><span class="sxs-lookup"><span data-stu-id="69036-637">Midpoint values are rounded to the nearest even number.</span></span> <span data-ttu-id="69036-638">Например 3,75 и 3,85 округление к 3.8 и-3.75 и-3.85 округление до-3.8.</span><span class="sxs-lookup"><span data-stu-id="69036-638">For example, both 3.75 and 3.85 round to 3.8, and both -3.75 and -3.85 round to -3.8.</span></span> <span data-ttu-id="69036-639">Эта форма Округления представленного <xref:System.MidpointRounding.ToEven?displayProperty=nameWithType> член перечисления.</span><span class="sxs-lookup"><span data-stu-id="69036-639">This form of rounding is represented by the <xref:System.MidpointRounding.ToEven?displayProperty=nameWithType> enumeration member.</span></span>  
  
 <span data-ttu-id="69036-640">Округление к ближайшему является стандартной формы округления используется в финансовых и статистических операций.</span><span class="sxs-lookup"><span data-stu-id="69036-640">Rounding to nearest is the standard form of rounding used in financial and statistical operations.</span></span> <span data-ttu-id="69036-641">Она соответствует стандарту IEEE-754, раздел 4.</span><span class="sxs-lookup"><span data-stu-id="69036-641">It conforms to IEEE Standard 754, section 4.</span></span> <span data-ttu-id="69036-642">При использовании в нескольких операций округления, он уменьшает погрешность округления, вызванное постоянного округления средние значения в одном направлении.</span><span class="sxs-lookup"><span data-stu-id="69036-642">When used in multiple rounding operations, it reduces the rounding error that is caused by consistently rounding midpoint values in a single direction.</span></span> <span data-ttu-id="69036-643">В некоторых случаях эта ошибка округления может оказаться значительным.</span><span class="sxs-lookup"><span data-stu-id="69036-643">In some cases, this rounding error can be significant.</span></span>  
  
 <span data-ttu-id="69036-644">В следующем примере демонстрируется смещение, которое может быть результатом постоянного округления средние значения в одном направлении.</span><span class="sxs-lookup"><span data-stu-id="69036-644">The following example illustrates the bias that can result from consistently rounding midpoint values in a single direction.</span></span> <span data-ttu-id="69036-645">В примере вычисляется среднее значение true, массив <xref:System.Decimal> значения, а затем вычисляет среднее, когда округление значений в массиве, с использованием двух правил.</span><span class="sxs-lookup"><span data-stu-id="69036-645">The example computes the true mean of an array of <xref:System.Decimal> values, and then computes the mean when the values in the array are rounded by using the two conventions.</span></span> <span data-ttu-id="69036-646">В этом примере значение true, среднее и среднее, происходящий, когда округление до ближайшего значения совпадают.</span><span class="sxs-lookup"><span data-stu-id="69036-646">In this example, the true mean and the mean that results when rounding to nearest are the same.</span></span> <span data-ttu-id="69036-647">Тем не менее означает, что результаты, если назначено использование округления от нуля отличается.05 (или 3.6%) от среднего значения true.</span><span class="sxs-lookup"><span data-stu-id="69036-647">However, the mean that results when rounding away from zero differs by .05 (or by 3.6%) from the true mean.</span></span>  
  
 [!code-csharp[System.Math.Round.Overload#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.round.overload/cs/mean1.cs#2)]
 [!code-vb[System.Math.Round.Overload#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.round.overload/vb/mean1.vb#2)]  
  
 <span data-ttu-id="69036-648">По умолчанию <xref:System.Math.Round%2A> используется метод округления до ближайшего соглашение.</span><span class="sxs-lookup"><span data-stu-id="69036-648">By default, the <xref:System.Math.Round%2A> method uses the rounding to nearest convention.</span></span> <span data-ttu-id="69036-649">В следующей таблице перечислены перегрузки <xref:System.Math.Round%2A> метод и округления соглашение о каждой используется.</span><span class="sxs-lookup"><span data-stu-id="69036-649">The following table lists the overloads of the <xref:System.Math.Round%2A> method and the rounding convention that each uses.</span></span>  
  
|<span data-ttu-id="69036-650">Перегрузка</span><span class="sxs-lookup"><span data-stu-id="69036-650">Overload</span></span>|<span data-ttu-id="69036-651">Округление соглашение</span><span class="sxs-lookup"><span data-stu-id="69036-651">Rounding convention</span></span>|  
|--------------|-------------------------|  
|<xref:System.Math.Round%28System.Decimal%29>|<xref:System.MidpointRounding.ToEven>|  
|<xref:System.Math.Round%28System.Double%29>|<xref:System.MidpointRounding.ToEven>|  
|<xref:System.Math.Round%28System.Decimal%2CSystem.Int32%29>|<xref:System.MidpointRounding.ToEven>|  
|<xref:System.Math.Round%28System.Double%2CSystem.Int32%29>|<xref:System.MidpointRounding.ToEven>|  
|<xref:System.Math.Round%28System.Decimal%2CSystem.MidpointRounding%29>|<span data-ttu-id="69036-652">Определяется `mode` параметра.</span><span class="sxs-lookup"><span data-stu-id="69036-652">Determined by `mode` parameter.</span></span>|  
|<xref:System.Math.Round%28System.Double%2CSystem.MidpointRounding%29>|<span data-ttu-id="69036-653">Определяется `mode` параметр</span><span class="sxs-lookup"><span data-stu-id="69036-653">Determined by `mode` parameter</span></span>|  
|<xref:System.Math.Round%28System.Decimal%2CSystem.Int32%2CSystem.MidpointRounding%29>|<span data-ttu-id="69036-654">Определяется `mode` параметр</span><span class="sxs-lookup"><span data-stu-id="69036-654">Determined by `mode` parameter</span></span>|  
|<xref:System.Math.Round%28System.Double%2CSystem.Int32%2CSystem.MidpointRounding%29>|<span data-ttu-id="69036-655">Определяется `mode` параметр</span><span class="sxs-lookup"><span data-stu-id="69036-655">Determined by `mode` parameter</span></span>|  
  
<a name="Precision"></a>   
## <a name="rounding-and-precision"></a><span data-ttu-id="69036-656">Округление и точность</span><span class="sxs-lookup"><span data-stu-id="69036-656">Rounding and precision</span></span>  
 <span data-ttu-id="69036-657">Чтобы определить, включает ли операции округления среднего значения <xref:System.Math.Round%2A> метод умножает исходное значение должно быть округлено в 10<sup>n</sup>, где *n* нужное число долей разрядов в возвращаемом значении, а затем определяет, является ли оставшиеся дробная часть значения больше или равно.5.</span><span class="sxs-lookup"><span data-stu-id="69036-657">In order to determine whether a rounding operation involves a midpoint value, the <xref:System.Math.Round%2A> method multiplies the original value to be rounded by 10<sup>n</sup>, where *n* is the desired number of fractional digits in the return value, and then determines whether the remaining fractional portion of the value is greater than or equal to .5.</span></span> <span data-ttu-id="69036-658">Это небольшое изменение на тесты для определения равенства и как отмечалось в разделе «Тестирование для проверки на равенство» <xref:System.Double> справочном разделе тесты на равенство значений с плавающей запятой, проблемы из-за проблем формата с плавающей запятой с двоичным файлом представление и точности.</span><span class="sxs-lookup"><span data-stu-id="69036-658">This is a slight variation on a test for equality, and as discussed in the "Testing for Equality" section of the <xref:System.Double> reference topic, tests for equality with floating-point values are problematic because of the floating-point format's issues with binary representation and precision.</span></span> <span data-ttu-id="69036-659">Это означает, что любой дробной части числа, немного меньше, чем.5 (из-за потери точности) не будет округляться вверх.</span><span class="sxs-lookup"><span data-stu-id="69036-659">This means that any fractional portion of a number that is slightly less than .5 (because of a loss of precision) will not be rounded upward.</span></span>  
  
 <span data-ttu-id="69036-660">В следующем примере показана эта проблема.</span><span class="sxs-lookup"><span data-stu-id="69036-660">The following example illustrates the problem.</span></span> <span data-ttu-id="69036-661">Несколько раз добавляет.1 для 11.0 и округляет результат до ближайшего целого.</span><span class="sxs-lookup"><span data-stu-id="69036-661">It repeatedly adds .1 to 11.0 and rounds the result to the nearest integer.</span></span> <span data-ttu-id="69036-662">Независимо от того, соглашение об округлении 11.5 округляются до 12.</span><span class="sxs-lookup"><span data-stu-id="69036-662">Regardless of the rounding convention, 11.5 should round to 12.</span></span> <span data-ttu-id="69036-663">Тем не менее как видно в результатах показано в примере, он не отвечает.</span><span class="sxs-lookup"><span data-stu-id="69036-663">However, as the output from the example shows, it does not.</span></span> <span data-ttu-id="69036-664">В этом примере «R» [строкой стандартного числового формата](~/docs/standard/base-types/standard-numeric-format-strings.md) для отображения с плавающей запятой полная точность значения и показывает, что значение должно быть округлено утрачивается точность во время повторного добавления и его значением является фактически 11.499999999999998.</span><span class="sxs-lookup"><span data-stu-id="69036-664">The example uses the "R" [standard numeric format string](~/docs/standard/base-types/standard-numeric-format-strings.md) to display the floating point value's full precision, and shows that the value to be rounded has lost precision during repeated additions, and its value is actually 11.499999999999998.</span></span> <span data-ttu-id="69036-665">Поскольку.499999999999998 меньше, чем.5, значения не округляется до следующего наибольшего целого числа.</span><span class="sxs-lookup"><span data-stu-id="69036-665">Because .499999999999998 is less than .5, the value is not rounded to the next highest integer.</span></span> <span data-ttu-id="69036-666">Как показано в примере, эта проблема не возникает, если мы просто назначить 11.5 постоянное значение для <xref:System.Double> переменной.</span><span class="sxs-lookup"><span data-stu-id="69036-666">As the example also shows, this problem does not occur if we simply assign the constant value 11.5 to a <xref:System.Double> variable.</span></span>  
  
 [!code-csharp[System.Math.Round.Overload#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.round.overload/cs/precision1.cs#7)]
 [!code-vb[System.Math.Round.Overload#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.round.overload/vb/precision1.vb#7)]  
  
 <span data-ttu-id="69036-667">Проблемы точность округления средние значения, скорее всего, возникают в следующих ситуациях:</span><span class="sxs-lookup"><span data-stu-id="69036-667">Problems of precision in rounding midpoint values are most likely to arise in the following conditions:</span></span>  
  
-   <span data-ttu-id="69036-668">Когда это дробное значение не может быть выражена точно двоичный формат типа с плавающей запятой.</span><span class="sxs-lookup"><span data-stu-id="69036-668">When a fractional value cannot be expressed precisely in the floating-point type's binary format.</span></span>  
  
-   <span data-ttu-id="69036-669">Если значение должно быть округлено вычисляется на основе одного или нескольких операций с плавающей запятой.</span><span class="sxs-lookup"><span data-stu-id="69036-669">When the value to be rounded is calculated from one or more floating-point operations.</span></span>  
  
-   <span data-ttu-id="69036-670">Если имеет значение должно быть округлено <xref:System.Single> вместо <xref:System.Double> или <xref:System.Decimal>.</span><span class="sxs-lookup"><span data-stu-id="69036-670">When the value to be rounded is a <xref:System.Single> rather than a <xref:System.Double> or <xref:System.Decimal>.</span></span> <span data-ttu-id="69036-671">Дополнительные сведения см. следующий раздел, [округление и значения с плавающей запятой одиночной точности](#Single).</span><span class="sxs-lookup"><span data-stu-id="69036-671">For more information, see the next section, [Rounding and single-precision floating-point values](#Single).</span></span>  
  
 <span data-ttu-id="69036-672">В случае отсутствия точность округления операций проблематичным можно сделать следующее:</span><span class="sxs-lookup"><span data-stu-id="69036-672">In cases where the lack of precision in rounding operations is problematic, you can do the following:</span></span>  
  
-   <span data-ttu-id="69036-673">Если операция округления вызывает перегрузку, которая округляет <xref:System.Double> значение, можно изменить <xref:System.Double> для <xref:System.Decimal> значение и вызвать перегрузку, которая округляет <xref:System.Decimal> вместо него применять значение.</span><span class="sxs-lookup"><span data-stu-id="69036-673">If the rounding operation calls an overload that rounds a <xref:System.Double> value, you can change the <xref:System.Double> to a <xref:System.Decimal> value and call an overload that rounds a <xref:System.Decimal> value instead.</span></span> <span data-ttu-id="69036-674">Несмотря на то что <xref:System.Decimal> тип данных имеет проблемы представление и потеря точности, этих проблем являются гораздо реже.</span><span class="sxs-lookup"><span data-stu-id="69036-674">Although the <xref:System.Decimal> data type also has problems of representation and loss of precision, these issues are far less common.</span></span>  
  
-   <span data-ttu-id="69036-675">Определение пользовательского алгоритма округления, выполняет проверку «почти равно» для определения, является ли значение должно быть округлено приемлемую близко к среднего значения.</span><span class="sxs-lookup"><span data-stu-id="69036-675">Define a custom rounding algorithm that performs a "nearly equal" test to determine whether the value to be rounded is acceptably close to a midpoint value.</span></span> <span data-ttu-id="69036-676">В следующем примере определяется `RoundApproximate` метод, который проверяет, является ли это дробное значение достаточно рядом должна применяться середины округления среднего значения.</span><span class="sxs-lookup"><span data-stu-id="69036-676">The following example defines a `RoundApproximate` method that examines whether a fractional value is sufficiently near to a midpoint value to be subject to midpoint rounding.</span></span> <span data-ttu-id="69036-677">Как показывают выходные данные примера, предназначен для устранения проблемы округления, показанный в предыдущем примере.</span><span class="sxs-lookup"><span data-stu-id="69036-677">As the output from the example shows, it corrects the rounding problem shown in the previous example.</span></span>  
  
     [!code-csharp[System.Math.Round.Overload#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.round.overload/cs/precision2.cs#8)]
     [!code-vb[System.Math.Round.Overload#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.round.overload/vb/precision2.vb#8)]  
  
<a name="Single"></a>   
## <a name="rounding-and-single-precision-floating-point-values"></a><span data-ttu-id="69036-678">Значения с плавающей запятой одиночной точности и округлением</span><span class="sxs-lookup"><span data-stu-id="69036-678">Rounding and single-precision floating-point values</span></span>  
 <span data-ttu-id="69036-679"><xref:System.Math.Round%2A> Метод включает перегрузки, принимающие аргументы типа <xref:System.Decimal> и <xref:System.Double>.</span><span class="sxs-lookup"><span data-stu-id="69036-679">The <xref:System.Math.Round%2A> method includes overloads that accept arguments of type <xref:System.Decimal> and <xref:System.Double>.</span></span> <span data-ttu-id="69036-680">Нет других методов, которые округления значения типа <xref:System.Single>.</span><span class="sxs-lookup"><span data-stu-id="69036-680">There are no methods that round values of type <xref:System.Single>.</span></span> <span data-ttu-id="69036-681">При передаче <xref:System.Single> значения одного из перегруженных версий <xref:System.Math.Round%2A> метод, его приведите (в C#) или преобразован (в Visual Basic) <xref:System.Double>и соответствующий <xref:System.Math.Round%2A> перегрузка с <xref:System.Double> именем параметра.</span><span class="sxs-lookup"><span data-stu-id="69036-681">If you pass a <xref:System.Single> value to one of the overloads of the <xref:System.Math.Round%2A> method, it is cast (in C#) or converted (in Visual Basic) to a <xref:System.Double>, and the corresponding <xref:System.Math.Round%2A> overload with a <xref:System.Double> parameter is called.</span></span> <span data-ttu-id="69036-682">Несмотря на то, что это расширяющее преобразование, он часто включает в себя потерю точности, как показано в следующем примере.</span><span class="sxs-lookup"><span data-stu-id="69036-682">Although this is a widening conversion, it often involves a loss of precision, as the following example illustrates.</span></span> <span data-ttu-id="69036-683">Когда <xref:System.Single> передается значение 16.325 <xref:System.Math.Round%2A> метод и с округлением до двух десятичных разрядов, используя метод округления до ближайшего соглашение, результатом является 16.32 16.33 и не ожидаемый результат.</span><span class="sxs-lookup"><span data-stu-id="69036-683">When a <xref:System.Single> value of 16.325 is passed to the <xref:System.Math.Round%2A> method and rounded to two decimal places using the rounding to nearest convention, the result is 16.33 and not the expected result of 16.32.</span></span>  
  
 [!code-csharp[System.Math.Round.Overload#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.round.overload/cs/single1.cs#1)]
 [!code-vb[System.Math.Round.Overload#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.round.overload/vb/single1.vb#1)]  
  
 <span data-ttu-id="69036-684">Это неожиданный результат из-за потери точности при преобразовании объекта <xref:System.Single> значение <xref:System.Double>.</span><span class="sxs-lookup"><span data-stu-id="69036-684">This unexpected result is due to a loss of precision in the conversion of the <xref:System.Single> value to a <xref:System.Double>.</span></span> <span data-ttu-id="69036-685">Так как результирующий <xref:System.Double> значение 16.325000762939453 не среднее значение и больше, чем 16.325, всегда округляется вверх.</span><span class="sxs-lookup"><span data-stu-id="69036-685">Because the resulting <xref:System.Double> value of 16.325000762939453 is not a midpoint value and is greater than 16.325, it is always rounded upward.</span></span>  
  
 <span data-ttu-id="69036-686">Во многих случаях, как показано в примере, потеря точности можно сворачивать и исключено приведение или преобразование <xref:System.Single> значение <xref:System.Decimal>.</span><span class="sxs-lookup"><span data-stu-id="69036-686">In many cases, as the example illustrates, the loss of precision can be minimized or eliminated by casting or converting the <xref:System.Single> value to a <xref:System.Decimal>.</span></span> <span data-ttu-id="69036-687">Обратите внимание, что, поскольку сужающее преобразование, с помощью оператора приведения или метод преобразования.</span><span class="sxs-lookup"><span data-stu-id="69036-687">Note that, because this is a narrowing conversion, it requires using a cast operator or calling a conversion method.</span></span>  
  
<a name="Round1_Example"></a>   
## <a name="mathrounddecimal-example"></a><span data-ttu-id="69036-688">Пример Math.Round(Decimal)</span><span class="sxs-lookup"><span data-stu-id="69036-688">Math.Round(Decimal) example</span></span>  
 <span data-ttu-id="69036-689">В следующем примере демонстрируется <xref:System.Math.Round%28System.Decimal%29> метод.</span><span class="sxs-lookup"><span data-stu-id="69036-689">The following example demonstrates the <xref:System.Math.Round%28System.Decimal%29> method.</span></span> <span data-ttu-id="69036-690">Обратите внимание, что <xref:System.Decimal> значение 4.5 округляет значение до 4, а не 5, так как эта перегрузка использует значение по умолчанию <xref:System.MidpointRounding.ToEven> соглашение.</span><span class="sxs-lookup"><span data-stu-id="69036-690">Note that the <xref:System.Decimal> value of 4.5 rounds to 4 rather than 5, because this overload uses the default <xref:System.MidpointRounding.ToEven> convention.</span></span>  
  
 [!code-csharp[System.Math.Round#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.round/cs/rounddecimal1.cs#6)]
 [!code-vb[System.Math.Round#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.round/vb/rounddecimal1.vb#6)]  
  
<a name="Round2_Example"></a>   
## <a name="mathrounddouble-example"></a><span data-ttu-id="69036-691">Пример Math.Round(Double)</span><span class="sxs-lookup"><span data-stu-id="69036-691">Math.Round(Double) example</span></span>  
 <span data-ttu-id="69036-692">В следующем примере показано округления до ближайшего целого значения.</span><span class="sxs-lookup"><span data-stu-id="69036-692">The following example demonstrates rounding to the nearest integer value.</span></span>  
  
 [!code-cpp[Classic Math.Round Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Math.Round Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Math.Round Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Math.Round Example/CS/source.cs#1)]
 [!code-vb[Classic Math.Round Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Math.Round Example/VB/source.vb#1)]  
  
<a name="Round3_Example"></a>   
## <a name="mathrounddecimal-int32-example"></a><span data-ttu-id="69036-693">Пример Math.Round (Decimal, Int32)</span><span class="sxs-lookup"><span data-stu-id="69036-693">Math.Round(Decimal, Int32) example</span></span>  
 <span data-ttu-id="69036-694">В следующем примере число десятичные значения с двух цифр дробной части, чтобы значения с одной цифрой дробной части.</span><span class="sxs-lookup"><span data-stu-id="69036-694">The following example rounds decimal values with two fractional digits to values that have a single fractional digit.</span></span>  
  
 [!code-csharp[System.Math.Round.Overload#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.round.overload/cs/source.cs#3)]
 [!code-vb[System.Math.Round.Overload#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.round.overload/vb/source.vb#3)]  
  
<a name="Round4_Example"></a>   
## <a name="mathrounddouble-int32-example"></a><span data-ttu-id="69036-695">Math.Round (Double Int32) пример</span><span class="sxs-lookup"><span data-stu-id="69036-695">Math.Round(Double, Int32) example</span></span>  
 <span data-ttu-id="69036-696">В следующем примере число значений типа double с двух цифр дробной части, чтобы иметь одной цифрой дробной части значений типа Double.</span><span class="sxs-lookup"><span data-stu-id="69036-696">The following example rounds double values with two fractional digits to doubles that have a single fractional digit.</span></span>  
  
 [!code-cpp[Classic Math.Round2 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Math.Round2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Math.Round2 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Math.Round2 Example/CS/source.cs#1)]
 [!code-vb[Classic Math.Round2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Math.Round2 Example/VB/source.vb#1)]  
  
<a name="Round5_Example"></a>   
## <a name="mathrounddecimal-midpointrounding-example"></a><span data-ttu-id="69036-697">Пример Math.Round (Decimal, MidpointRounding)</span><span class="sxs-lookup"><span data-stu-id="69036-697">Math.Round(Decimal, MidpointRounding) example</span></span>  
 <span data-ttu-id="69036-698">В следующем примере отображаются значения, возвращаемые методом <xref:System.Math.Round%28System.Decimal%29> метода <xref:System.Math.Round%28System.Decimal%2CSystem.MidpointRounding%29> метод с `mode` аргумент <xref:System.MidpointRounding.ToEven>и <xref:System.Math.Round%28System.Decimal%2CSystem.MidpointRounding%29> метод с `mode` аргумент <xref:System.MidpointRounding.AwayFromZero>.</span><span class="sxs-lookup"><span data-stu-id="69036-698">The following example displays values returned by the <xref:System.Math.Round%28System.Decimal%29> method, the <xref:System.Math.Round%28System.Decimal%2CSystem.MidpointRounding%29> method with a `mode` argument of <xref:System.MidpointRounding.ToEven>, and the <xref:System.Math.Round%28System.Decimal%2CSystem.MidpointRounding%29> method with a `mode` argument of <xref:System.MidpointRounding.AwayFromZero>.</span></span>  
  
 [!code-csharp[System.Math.Round.Overload#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.round.overload/cs/midpoint1.cs#5)]
 [!code-vb[System.Math.Round.Overload#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.round.overload/vb/midpoint1.vb#5)]  
  
<a name="Round6_Example"></a>   
## <a name="mathrounddouble-midpointrounding-example"></a><span data-ttu-id="69036-699">Math.Round (Double MidpointRounding) пример</span><span class="sxs-lookup"><span data-stu-id="69036-699">Math.Round(Double, MidpointRounding) example</span></span>  
 <span data-ttu-id="69036-700">В следующем примере отображаются значения, возвращаемые методом <xref:System.Math.Round%28System.Double%29> метода <xref:System.Math.Round%28System.Double%2CSystem.MidpointRounding%29> метод с `mode` аргумент <xref:System.MidpointRounding.ToEven>и <xref:System.Math.Round%28System.Double%2CSystem.MidpointRounding%29> метод с `mode` аргумент <xref:System.MidpointRounding.AwayFromZero>.</span><span class="sxs-lookup"><span data-stu-id="69036-700">The following example displays values returned by the <xref:System.Math.Round%28System.Double%29> method, the <xref:System.Math.Round%28System.Double%2CSystem.MidpointRounding%29> method with a `mode` argument of <xref:System.MidpointRounding.ToEven>, and the <xref:System.Math.Round%28System.Double%2CSystem.MidpointRounding%29> method with a `mode` argument of <xref:System.MidpointRounding.AwayFromZero>.</span></span>  
  
 [!code-csharp[System.Math.Round.Overload#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.round.overload/cs/midpoint2.cs#6)]
 [!code-vb[System.Math.Round.Overload#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.round.overload/vb/midpoint2.vb#6)]  
  
<a name="Round7_Example"></a>   
## <a name="mathrounddecimal-int32-midpointrounding-example"></a><span data-ttu-id="69036-701">Пример Math.Round (Int32, Decimal MidpointRounding)</span><span class="sxs-lookup"><span data-stu-id="69036-701">Math.Round(Decimal, Int32, MidpointRounding) example</span></span>  
 <span data-ttu-id="69036-702">В следующем примере демонстрируется использование <xref:System.Math.Round%2A> метод с <xref:System.MidpointRounding> перечисления.</span><span class="sxs-lookup"><span data-stu-id="69036-702">The following example demonstrates how to use the <xref:System.Math.Round%2A> method with the <xref:System.MidpointRounding> enumeration.</span></span>  
  
 [!code-cpp[math.midpointrounding#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.midpointrounding/cpp/mpr.cpp#1)]
 [!code-csharp[math.midpointrounding#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.midpointrounding/CS/mpr.cs#1)]
 [!code-vb[math.midpointrounding#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.midpointrounding/VB/mpr.vb#1)]  
  
<a name="Round8_Example"></a>   
## <a name="mathrounddouble-int32-midpointrounding-example"></a><span data-ttu-id="69036-703">Пример Math.Round (Double, Int32, MidpointRounding)</span><span class="sxs-lookup"><span data-stu-id="69036-703">Math.Round(Double, Int32, MidpointRounding) example</span></span>  
 <span data-ttu-id="69036-704">В следующем примере демонстрируется использование <xref:System.Math.Round%28System.Double%2CSystem.Int32%2CSystem.MidpointRounding%29> метод с <xref:System.MidpointRounding> перечисления.</span><span class="sxs-lookup"><span data-stu-id="69036-704">The following example demonstrates how to use the <xref:System.Math.Round%28System.Double%2CSystem.Int32%2CSystem.MidpointRounding%29> method with the <xref:System.MidpointRounding> enumeration.</span></span>  
  
 [!code-csharp[System.Math.Round.Overload#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.round.overload/cs/mpr.cs#4)]
 [!code-vb[System.Math.Round.Overload#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.round.overload/vb/mpr.vb#4)]  
  
<a name="Round_Versions"></a>   
## <a name="version-information"></a><span data-ttu-id="69036-705">Сведения о версии</span><span class="sxs-lookup"><span data-stu-id="69036-705">Version information</span></span>  
 <span data-ttu-id="69036-706">.NET Framework</span><span class="sxs-lookup"><span data-stu-id="69036-706">.NET Framework</span></span>  
 <span data-ttu-id="69036-707">Перегрузки без <xref:System.MidpointRounding> параметр поддерживаются в: 4.5, 4, 3.5, 3.0, 2.0, 1.1, 1.0</span><span class="sxs-lookup"><span data-stu-id="69036-707">Overloads without a <xref:System.MidpointRounding> parameter are supported in: 4.5, 4, 3.5, 3.0, 2.0, 1.1, 1.0</span></span>  
<span data-ttu-id="69036-708">Перегруженных версий метода с <xref:System.MidpointRounding> параметр поддерживаются в: 4.5, 4, 3.5, 3.0, 2.0</span><span class="sxs-lookup"><span data-stu-id="69036-708">Overloads with a <xref:System.MidpointRounding> parameter are supported in: 4.5, 4, 3.5, 3.0, 2.0</span></span>  
  
 <span data-ttu-id="69036-709">.NET Framework (клиентский профиль)</span><span class="sxs-lookup"><span data-stu-id="69036-709">.NET Framework Client Profile</span></span>  
 <span data-ttu-id="69036-710">Все перегрузки поддерживаются в: 4, 3.5 с пакетом обновления 1</span><span class="sxs-lookup"><span data-stu-id="69036-710">All overloads are supported in: 4, 3.5 SP1</span></span>  
  
 <span data-ttu-id="69036-711">Переносимая библиотека классов</span><span class="sxs-lookup"><span data-stu-id="69036-711">Portable Class Library</span></span>  
 <span data-ttu-id="69036-712">Поддерживаются все перегрузки</span><span class="sxs-lookup"><span data-stu-id="69036-712">All overloads are supported</span></span>  
  
 <span data-ttu-id="69036-713">.NET для приложений Магазина Windows</span><span class="sxs-lookup"><span data-stu-id="69036-713">.NET for Windows Store apps</span></span>  
 <span data-ttu-id="69036-714">Все перегрузки поддерживаются в: Windows 8</span><span class="sxs-lookup"><span data-stu-id="69036-714">All overloads are supported in: Windows 8</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Math.Ceiling(System.Decimal)" />
        <altmember cref="M:System.Math.Floor(System.Decimal)" />
        <altmember cref="M:System.Math.Truncate(System.Decimal)" />
        <altmember cref="M:System.Decimal.Round(System.Decimal)" />
      </Docs>
    </MemberGroup>
    <Member MemberName="Round">
      <MemberSignature Language="C#" Value="public static decimal Round (decimal d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Round(valuetype System.Decimal d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Round(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Round (d As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Round(System::Decimal d);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="69036-715">Округляемое десятичное число.</span><span class="sxs-lookup"><span data-stu-id="69036-715">A decimal number to be rounded.</span></span></param>
        <summary><span data-ttu-id="69036-716">Округляет десятичное значение до ближайшего целого.</span><span class="sxs-lookup"><span data-stu-id="69036-716">Rounds a decimal value to the nearest integral value.</span></span></summary>
        <returns><span data-ttu-id="69036-717">Целое число, ближайшее к значению параметра <paramref name="d" />.</span><span class="sxs-lookup"><span data-stu-id="69036-717">The integer nearest parameter <paramref name="d" />.</span></span> <span data-ttu-id="69036-718">Если дробная часть <paramref name="d" /> находится на равном расстоянии от двух целых чисел (четного и нечетного), возвращается четное число.</span><span class="sxs-lookup"><span data-stu-id="69036-718">If the fractional component of <paramref name="d" /> is halfway between two integers, one of which is even and the other odd, the even number is returned.</span></span> <span data-ttu-id="69036-719">Обратите внимание, что данный метод возвращает не целочисленное значение, а значение типа <see cref="T:System.Decimal" />.</span><span class="sxs-lookup"><span data-stu-id="69036-719">Note that this method returns a <see cref="T:System.Decimal" /> instead of an integral type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="69036-720">Примеры и полное использование сведения об этом и других перегрузок `Round` метода, в разделе <xref:System.Math.Round%2A> справочной странице.</span><span class="sxs-lookup"><span data-stu-id="69036-720">For examples and comprehensive usage information about this and other overloads of the `Round` method, see the <xref:System.Math.Round%2A> reference page.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="69036-721">Полученное значение находится вне допустимого диапазона типа <see cref="T:System.Decimal" />.</span><span class="sxs-lookup"><span data-stu-id="69036-721">The result is outside the range of a <see cref="T:System.Decimal" />.</span></span></exception>
        <altmember cref="M:System.Math.Ceiling(System.Double)" />
        <altmember cref="M:System.Math.Floor(System.Double)" />
        <altmember cref="M:System.Decimal.Round(System.Decimal)" />
      </Docs>
    </Member>
    <Member MemberName="Round">
      <MemberSignature Language="C#" Value="public static double Round (double a);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Round(float64 a) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Round(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Round (a As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Round(double a);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="a"><span data-ttu-id="69036-722">Округляемое число двойной точности с плавающей запятой.</span><span class="sxs-lookup"><span data-stu-id="69036-722">A double-precision floating-point number to be rounded.</span></span></param>
        <summary><span data-ttu-id="69036-723">Округляет заданное число с плавающей запятой двойной точности до ближайшего целого.</span><span class="sxs-lookup"><span data-stu-id="69036-723">Rounds a double-precision floating-point value to the nearest integral value.</span></span></summary>
        <returns><span data-ttu-id="69036-724">Целое число, ближайшее к значению параметра <paramref name="a" />.</span><span class="sxs-lookup"><span data-stu-id="69036-724">The integer nearest <paramref name="a" />.</span></span> <span data-ttu-id="69036-725">Если дробная часть <paramref name="a" /> находится на равном расстоянии от двух целых чисел (четного и нечетного), возвращается четное число.</span><span class="sxs-lookup"><span data-stu-id="69036-725">If the fractional component of <paramref name="a" /> is halfway between two integers, one of which is even and the other odd, then the even number is returned.</span></span> <span data-ttu-id="69036-726">Обратите внимание, что данный метод возвращает не целочисленное значение, а значение типа <see cref="T:System.Double" />.</span><span class="sxs-lookup"><span data-stu-id="69036-726">Note that this method returns a <see cref="T:System.Double" /> instead of an integral type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="69036-727">Примеры и полное использование сведения об этом и других перегрузок `Round` метода, в разделе <xref:System.Math.Round%2A> справочной странице.</span><span class="sxs-lookup"><span data-stu-id="69036-727">For examples and comprehensive usage information about this and other overloads of the `Round` method, see the <xref:System.Math.Round%2A> reference page.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage">
          <para><span data-ttu-id="69036-728">Из-за потери точности, который может быть результатом представляющих десятичные значения как числа с плавающей запятой или выполнении арифметических операций над значениями с плавающей запятой, в некоторых случаях <see cref="M:System.Math.Round(System.Double)" /> могут отсутствовать округления средние значения для метода ближайшего четного целого.</span><span class="sxs-lookup"><span data-stu-id="69036-728">Because of the loss of precision that can result from representing decimal values as floating-point numbers or performing arithmetic operations on floating-point values, in some cases the <see cref="M:System.Math.Round(System.Double)" /> method may not appear to round midpoint values to the nearest even integer.</span></span> <span data-ttu-id="69036-729">В следующем примере, так как значение с плавающей запятой.1 не имеет конечного двоичного представления, что первый вызов <see cref="M:System.Math.Round(System.Double)" /> метод со значением 11.5 возвращает 11 вместо 12.</span><span class="sxs-lookup"><span data-stu-id="69036-729">In the following example, because the floating-point value .1 has no finite binary representation, the first call to the <see cref="M:System.Math.Round(System.Double)" /> method with a value of 11.5 returns 11 instead of 12.</span></span>  
  
 [!code-csharp[System.Math.Round#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.round/cs/round2.cs#1)]
 [!code-vb[System.Math.Round#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.round/vb/round2.vb#1)]</para>
        </block>
        <altmember cref="M:System.Math.Ceiling(System.Double)" />
        <altmember cref="M:System.Math.Floor(System.Double)" />
        <altmember cref="M:System.Decimal.Round(System.Decimal)" />
      </Docs>
    </Member>
    <Member MemberName="Round">
      <MemberSignature Language="C#" Value="public static decimal Round (decimal d, int decimals);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Round(valuetype System.Decimal d, int32 decimals) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Round(System.Decimal,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Round (d As Decimal, decimals As Integer) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Round(System::Decimal d, int decimals);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" />
        <Parameter Name="decimals" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="69036-730">Округляемое десятичное число.</span><span class="sxs-lookup"><span data-stu-id="69036-730">A decimal number to be rounded.</span></span></param>
        <param name="decimals"><span data-ttu-id="69036-731">Количество десятичных разрядов в возвращаемом значении.</span><span class="sxs-lookup"><span data-stu-id="69036-731">The number of decimal places in the return value.</span></span></param>
        <summary><span data-ttu-id="69036-732">Округляет десятичное значение до указанного числа дробных разрядов.</span><span class="sxs-lookup"><span data-stu-id="69036-732">Rounds a decimal value to a specified number of fractional digits.</span></span></summary>
        <returns><span data-ttu-id="69036-733">Число, ближайшее к параметру <paramref name="d" />, количество цифр дробной части которого равно <paramref name="decimals" />.</span><span class="sxs-lookup"><span data-stu-id="69036-733">The number nearest to <paramref name="d" /> that contains a number of fractional digits equal to <paramref name="decimals" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="69036-734">Примеры и полное использование сведения об этом и других перегрузок `Round` метода, в разделе <xref:System.Math.Round%2A> справочной странице.</span><span class="sxs-lookup"><span data-stu-id="69036-734">For examples and comprehensive usage information about this and other overloads of the `Round` method, see the <xref:System.Math.Round%2A> reference page.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="69036-735">Параметр <paramref name="decimals" /> имеет значение меньше 0 или больше 28.</span><span class="sxs-lookup"><span data-stu-id="69036-735"><paramref name="decimals" /> is less than 0 or greater than 28.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="69036-736">Полученное значение находится вне допустимого диапазона типа <see cref="T:System.Decimal" />.</span><span class="sxs-lookup"><span data-stu-id="69036-736">The result is outside the range of a <see cref="T:System.Decimal" />.</span></span></exception>
        <altmember cref="M:System.Math.Ceiling(System.Double)" />
        <altmember cref="M:System.Math.Floor(System.Double)" />
        <altmember cref="M:System.Decimal.Round(System.Decimal,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Round">
      <MemberSignature Language="C#" Value="public static decimal Round (decimal d, MidpointRounding mode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Round(valuetype System.Decimal d, valuetype System.MidpointRounding mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Round(System.Decimal,System.MidpointRounding)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Round (d As Decimal, mode As MidpointRounding) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Round(System::Decimal d, MidpointRounding mode);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" />
        <Parameter Name="mode" Type="System.MidpointRounding" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="69036-737">Округляемое десятичное число.</span><span class="sxs-lookup"><span data-stu-id="69036-737">A decimal number to be rounded.</span></span></param>
        <param name="mode"><span data-ttu-id="69036-738">Значение, задающее правило округления параметра <c>d</c>, если его значение находится ровно посредине между двумя другими числами.</span><span class="sxs-lookup"><span data-stu-id="69036-738">Specification for how to round <c>d</c> if it is midway between two other numbers.</span></span></param>
        <summary><span data-ttu-id="69036-739">Округляет десятичное значение до ближайшего целого.</span><span class="sxs-lookup"><span data-stu-id="69036-739">Rounds a decimal value to the nearest integer.</span></span> <span data-ttu-id="69036-740">Параметр задает правило округления значения, если оно находится ровно посредине между двумя числами.</span><span class="sxs-lookup"><span data-stu-id="69036-740">A parameter specifies how to round the value if it is midway between two numbers.</span></span></summary>
        <returns><span data-ttu-id="69036-741">Целое число, ближайшее к значению параметра <paramref name="d" />.</span><span class="sxs-lookup"><span data-stu-id="69036-741">The integer nearest <paramref name="d" />.</span></span> <span data-ttu-id="69036-742">Если <paramref name="d" /> находится на равном расстоянии от двух чисел (четного и нечетного), то возвращаемое число определяется по значению параметра <paramref name="mode" />.</span><span class="sxs-lookup"><span data-stu-id="69036-742">If <paramref name="d" /> is halfway between two numbers, one of which is even and the other odd, then <paramref name="mode" /> determines which of the two is returned.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="69036-743">Примеры и полное использование сведения об этом и других перегрузок `Round` метода, в разделе <xref:System.Math.Round%2A> справочной странице.</span><span class="sxs-lookup"><span data-stu-id="69036-743">For examples and comprehensive usage information about this and other overloads of the `Round` method, see the <xref:System.Math.Round%2A> reference page.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="69036-744">Параметр <paramref name="mode" /> не является допустимым значением объекта <see cref="T:System.MidpointRounding" />.</span><span class="sxs-lookup"><span data-stu-id="69036-744"><paramref name="mode" /> is not a valid value of <see cref="T:System.MidpointRounding" />.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="69036-745">Полученное значение находится вне допустимого диапазона типа <see cref="T:System.Decimal" />.</span><span class="sxs-lookup"><span data-stu-id="69036-745">The result is outside the range of a <see cref="T:System.Decimal" />.</span></span></exception>
        <altmember cref="M:System.Math.Ceiling(System.Double)" />
        <altmember cref="M:System.Math.Floor(System.Double)" />
        <altmember cref="M:System.Decimal.Round(System.Decimal,System.MidpointRounding)" />
      </Docs>
    </Member>
    <Member MemberName="Round">
      <MemberSignature Language="C#" Value="public static double Round (double value, int digits);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Round(float64 value, int32 digits) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Round(System.Double,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Round (value As Double, digits As Integer) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Round(double value, int digits);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
        <Parameter Name="digits" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="69036-746">Округляемое число двойной точности с плавающей запятой.</span><span class="sxs-lookup"><span data-stu-id="69036-746">A double-precision floating-point number to be rounded.</span></span></param>
        <param name="digits"><span data-ttu-id="69036-747">Количество цифр дробной части в возвращаемом значении.</span><span class="sxs-lookup"><span data-stu-id="69036-747">The number of fractional digits in the return value.</span></span></param>
        <summary><span data-ttu-id="69036-748">Округляет значение двойной точности с плавающей запятой до заданного количества дробных разрядов.</span><span class="sxs-lookup"><span data-stu-id="69036-748">Rounds a double-precision floating-point value to a specified number of fractional digits.</span></span></summary>
        <returns><span data-ttu-id="69036-749">Число, ближайшее к параметру <paramref name="value" />, количество цифр дробной части которого равно <paramref name="digits" />.</span><span class="sxs-lookup"><span data-stu-id="69036-749">The number nearest to <paramref name="value" /> that contains a number of fractional digits equal to <paramref name="digits" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="69036-750">Примеры и полное использование сведения об этом и других перегрузок `Round` метода, в разделе <xref:System.Math.Round%2A> справочной странице.</span><span class="sxs-lookup"><span data-stu-id="69036-750">For examples and comprehensive usage information about this and other overloads of the `Round` method, see the <xref:System.Math.Round%2A> reference page.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="69036-751">Параметр <paramref name="digits" /> имеет значение меньше 0 или больше 15.</span><span class="sxs-lookup"><span data-stu-id="69036-751"><paramref name="digits" /> is less than 0 or greater than 15.</span></span></exception>
        <block subset="none" type="usage">
          <para><span data-ttu-id="69036-752">Из-за потери точности, который может быть результатом представляющих десятичные значения как числа с плавающей запятой или выполнении арифметических операций над значениями с плавающей запятой, в некоторых случаях <see cref="M:System.Math.Round(System.Double,System.Int32)" /> могут отсутствовать округления средние значения для метода ближайшее четное значение в <paramref name="digits" /> десятичный разряд.</span><span class="sxs-lookup"><span data-stu-id="69036-752">Because of the loss of precision that can result from representing decimal values as floating-point numbers or performing arithmetic operations on floating-point values, in some cases the <see cref="M:System.Math.Round(System.Double,System.Int32)" /> method may not appear to round midpoint values to the nearest even value in the <paramref name="digits" /> decimal position.</span></span> <span data-ttu-id="69036-753">Это показано в следующем примере, где 2.135 округляется до 2.13 вместо 2.14.</span><span class="sxs-lookup"><span data-stu-id="69036-753">This is illustrated in the following example, where 2.135 is rounded to 2.13 instead of 2.14.</span></span> <span data-ttu-id="69036-754">Это происходит потому, что внутри метода умножает <paramref name="value" /> на 10<sup>цифр</sup>, и операция умножения в этом случае страдает от потери точности.</span><span class="sxs-lookup"><span data-stu-id="69036-754">This occurs because internally the method multiplies <paramref name="value" /> by 10<sup>digits</sup>, and the multiplication operation in this case suffers from a loss of precision.</span></span>  
  
 [!code-csharp[System.Math.Round#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.round/cs/round3.cs#2)]
 [!code-vb[System.Math.Round#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.round/vb/round3.vb#2)]</para>
        </block>
        <altmember cref="M:System.Math.Ceiling(System.Double)" />
        <altmember cref="M:System.Math.Floor(System.Double)" />
        <altmember cref="M:System.Decimal.Round(System.Decimal,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Round">
      <MemberSignature Language="C#" Value="public static double Round (double value, MidpointRounding mode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Round(float64 value, valuetype System.MidpointRounding mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Round(System.Double,System.MidpointRounding)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Round (value As Double, mode As MidpointRounding) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Round(double value, MidpointRounding mode);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
        <Parameter Name="mode" Type="System.MidpointRounding" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="69036-755">Округляемое число двойной точности с плавающей запятой.</span><span class="sxs-lookup"><span data-stu-id="69036-755">A double-precision floating-point number to be rounded.</span></span></param>
        <param name="mode"><span data-ttu-id="69036-756">Значение, задающее правило округления параметра <c>value</c>, если его значение находится ровно посредине между двумя другими числами.</span><span class="sxs-lookup"><span data-stu-id="69036-756">Specification for how to round <c>value</c> if it is midway between two other numbers.</span></span></param>
        <summary><span data-ttu-id="69036-757">Округляет заданное значение число двойной точности с плавающей запятой до ближайшего целого.</span><span class="sxs-lookup"><span data-stu-id="69036-757">Rounds a double-precision floating-point value to the nearest integer.</span></span> <span data-ttu-id="69036-758">Параметр задает правило округления значения, если оно находится ровно посредине между двумя числами.</span><span class="sxs-lookup"><span data-stu-id="69036-758">A parameter specifies how to round the value if it is midway between two numbers.</span></span></summary>
        <returns><span data-ttu-id="69036-759">Целое число, ближайшее к значению параметра <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="69036-759">The integer nearest <paramref name="value" />.</span></span> <span data-ttu-id="69036-760">Если <paramref name="value" /> находится на равном расстоянии от двух целых чисел (четного и нечетного), то возвращаемое число определяется по значению параметра <paramref name="mode" />.</span><span class="sxs-lookup"><span data-stu-id="69036-760">If <paramref name="value" /> is halfway between two integers, one of which is even and the other odd, then <paramref name="mode" /> determines which of the two is returned.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="69036-761">Примеры и полное использование сведения об этом и других перегрузок `Round` метода, в разделе <xref:System.Math.Round%2A> справочной странице.</span><span class="sxs-lookup"><span data-stu-id="69036-761">For examples and comprehensive usage information about this and other overloads of the `Round` method, see the <xref:System.Math.Round%2A> reference page.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="69036-762">Параметр <paramref name="mode" /> не является допустимым значением объекта <see cref="T:System.MidpointRounding" />.</span><span class="sxs-lookup"><span data-stu-id="69036-762"><paramref name="mode" /> is not a valid value of <see cref="T:System.MidpointRounding" />.</span></span></exception>
        <block subset="none" type="usage">
          <para><span data-ttu-id="69036-763">Из-за потери точности, который может быть результатом представляющих десятичные значения как числа с плавающей запятой или выполнении арифметических операций над значениями с плавающей запятой, в некоторых случаях <see cref="M:System.Math.Round(System.Double,System.MidpointRounding)" /> могут отсутствовать округления средние значения для метода ближайшего четного целого.</span><span class="sxs-lookup"><span data-stu-id="69036-763">Because of the loss of precision that can result from representing decimal values as floating-point numbers or performing arithmetic operations on floating-point values, in some cases the <see cref="M:System.Math.Round(System.Double,System.MidpointRounding)" /> method may not appear to round midpoint values to the nearest even integer.</span></span> <span data-ttu-id="69036-764">В следующем примере, так как значение с плавающей запятой.1 не имеет конечного двоичного представления, что первый вызов <see cref="M:System.Math.Round(System.Double)" /> метод со значением 11.5 возвращает 11 вместо 12.</span><span class="sxs-lookup"><span data-stu-id="69036-764">In the following example, because the floating-point value .1 has no finite binary representation, the first call to the <see cref="M:System.Math.Round(System.Double)" /> method with a value of 11.5 returns 11 instead of 12.</span></span>  
  
 [!code-csharp[System.Math.Round#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.round/cs/round5.cs#4)]
 [!code-vb[System.Math.Round#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.round/vb/round5.vb#4)]</para>
        </block>
        <altmember cref="M:System.Math.Ceiling(System.Double)" />
        <altmember cref="M:System.Math.Floor(System.Double)" />
        <altmember cref="M:System.Decimal.Round(System.Decimal,System.MidpointRounding)" />
      </Docs>
    </Member>
    <Member MemberName="Round">
      <MemberSignature Language="C#" Value="public static decimal Round (decimal d, int decimals, MidpointRounding mode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Round(valuetype System.Decimal d, int32 decimals, valuetype System.MidpointRounding mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Round(System.Decimal,System.Int32,System.MidpointRounding)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Round (d As Decimal, decimals As Integer, mode As MidpointRounding) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Round(System::Decimal d, int decimals, MidpointRounding mode);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" />
        <Parameter Name="decimals" Type="System.Int32" />
        <Parameter Name="mode" Type="System.MidpointRounding" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="69036-765">Округляемое десятичное число.</span><span class="sxs-lookup"><span data-stu-id="69036-765">A decimal number to be rounded.</span></span></param>
        <param name="decimals"><span data-ttu-id="69036-766">Количество десятичных разрядов в возвращаемом значении.</span><span class="sxs-lookup"><span data-stu-id="69036-766">The number of decimal places in the return value.</span></span></param>
        <param name="mode"><span data-ttu-id="69036-767">Значение, задающее правило округления параметра <c>d</c>, если его значение находится ровно посредине между двумя другими числами.</span><span class="sxs-lookup"><span data-stu-id="69036-767">Specification for how to round <c>d</c> if it is midway between two other numbers.</span></span></param>
        <summary><span data-ttu-id="69036-768">Округляет десятичное значение до указанного числа дробных разрядов.</span><span class="sxs-lookup"><span data-stu-id="69036-768">Rounds a decimal value to a specified number of fractional digits.</span></span> <span data-ttu-id="69036-769">Параметр задает правило округления значения, если оно находится ровно посредине между двумя числами.</span><span class="sxs-lookup"><span data-stu-id="69036-769">A parameter specifies how to round the value if it is midway between two numbers.</span></span></summary>
        <returns><span data-ttu-id="69036-770">Число, ближайшее к параметру <paramref name="d" />, количество цифр дробной части которого равно <paramref name="decimals" />.</span><span class="sxs-lookup"><span data-stu-id="69036-770">The number nearest to <paramref name="d" /> that contains a number of fractional digits equal to <paramref name="decimals" />.</span></span> <span data-ttu-id="69036-771">Если <paramref name="d" /> имеет меньшее количество цифр дробной части, чем <paramref name="decimals" />, то <paramref name="d" /> возвращается без изменений.</span><span class="sxs-lookup"><span data-stu-id="69036-771">If <paramref name="d" /> has fewer fractional digits than <paramref name="decimals" />, <paramref name="d" /> is returned unchanged.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="69036-772">Примеры и полное использование сведения об этом и других перегрузок `Round` метода, в разделе <xref:System.Math.Round%2A> справочной странице.</span><span class="sxs-lookup"><span data-stu-id="69036-772">For examples and comprehensive usage information about this and other overloads of the `Round` method, see the <xref:System.Math.Round%2A> reference page.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="69036-773">Параметр <paramref name="decimals" /> имеет значение меньше 0 или больше 28.</span><span class="sxs-lookup"><span data-stu-id="69036-773"><paramref name="decimals" /> is less than 0 or greater than 28.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="69036-774">Параметр <paramref name="mode" /> не является допустимым значением объекта <see cref="T:System.MidpointRounding" />.</span><span class="sxs-lookup"><span data-stu-id="69036-774"><paramref name="mode" /> is not a valid value of <see cref="T:System.MidpointRounding" />.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="69036-775">Полученное значение находится вне допустимого диапазона типа <see cref="T:System.Decimal" />.</span><span class="sxs-lookup"><span data-stu-id="69036-775">The result is outside the range of a <see cref="T:System.Decimal" />.</span></span></exception>
        <altmember cref="M:System.Math.Ceiling(System.Double)" />
        <altmember cref="M:System.Math.Floor(System.Double)" />
        <altmember cref="M:System.Decimal.Round(System.Decimal,System.Int32,System.MidpointRounding)" />
      </Docs>
    </Member>
    <Member MemberName="Round">
      <MemberSignature Language="C#" Value="public static double Round (double value, int digits, MidpointRounding mode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Round(float64 value, int32 digits, valuetype System.MidpointRounding mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Round(System.Double,System.Int32,System.MidpointRounding)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Round (value As Double, digits As Integer, mode As MidpointRounding) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Round(double value, int digits, MidpointRounding mode);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
        <Parameter Name="digits" Type="System.Int32" />
        <Parameter Name="mode" Type="System.MidpointRounding" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="69036-776">Округляемое число двойной точности с плавающей запятой.</span><span class="sxs-lookup"><span data-stu-id="69036-776">A double-precision floating-point number to be rounded.</span></span></param>
        <param name="digits"><span data-ttu-id="69036-777">Количество цифр дробной части в возвращаемом значении.</span><span class="sxs-lookup"><span data-stu-id="69036-777">The number of fractional digits in the return value.</span></span></param>
        <param name="mode"><span data-ttu-id="69036-778">Значение, задающее правило округления параметра <c>value</c>, если его значение находится ровно посредине между двумя другими числами.</span><span class="sxs-lookup"><span data-stu-id="69036-778">Specification for how to round <c>value</c> if it is midway between two other numbers.</span></span></param>
        <summary><span data-ttu-id="69036-779">Округляет значение двойной точности с плавающей запятой до заданного количества дробных разрядов.</span><span class="sxs-lookup"><span data-stu-id="69036-779">Rounds a double-precision floating-point value to a specified number of fractional digits.</span></span> <span data-ttu-id="69036-780">Параметр задает правило округления значения, если оно находится ровно посредине между двумя числами.</span><span class="sxs-lookup"><span data-stu-id="69036-780">A parameter specifies how to round the value if it is midway between two numbers.</span></span></summary>
        <returns><span data-ttu-id="69036-781">Число, ближайшее к параметру <paramref name="value" />, количество цифр дробной части которого равно <paramref name="digits" />.</span><span class="sxs-lookup"><span data-stu-id="69036-781">The number nearest to <paramref name="value" /> that has a number of fractional digits equal to <paramref name="digits" />.</span></span> <span data-ttu-id="69036-782">Если <paramref name="value" /> имеет меньшее количество цифр дробной части, чем <paramref name="digits" />, то <paramref name="value" /> возвращается без изменений.</span><span class="sxs-lookup"><span data-stu-id="69036-782">If <paramref name="value" /> has fewer fractional digits than <paramref name="digits" />, <paramref name="value" /> is returned unchanged.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="69036-783">Примеры и полное использование сведения об этом и других перегрузок `Round` метода, в разделе <xref:System.Math.Round%2A> справочной странице.</span><span class="sxs-lookup"><span data-stu-id="69036-783">For examples and comprehensive usage information about this and other overloads of the `Round` method, see the <xref:System.Math.Round%2A> reference page.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="69036-784">Параметр <paramref name="digits" /> имеет значение меньше 0 или больше 15.</span><span class="sxs-lookup"><span data-stu-id="69036-784"><paramref name="digits" /> is less than 0 or greater than 15.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="69036-785">Параметр <paramref name="mode" /> не является допустимым значением объекта <see cref="T:System.MidpointRounding" />.</span><span class="sxs-lookup"><span data-stu-id="69036-785"><paramref name="mode" /> is not a valid value of <see cref="T:System.MidpointRounding" />.</span></span></exception>
        <block subset="none" type="usage">
          <para><span data-ttu-id="69036-786">Из-за потери точности, который может быть результатом представляющих десятичные значения как числа с плавающей запятой или выполнении арифметических операций над значениями с плавающей запятой, в некоторых случаях <see cref="M:System.Math.Round(System.Double,System.Int32,System.MidpointRounding)" /> метод могут отсутствовать округления средние значения, как указано по <paramref name="mode" /> параметр.</span><span class="sxs-lookup"><span data-stu-id="69036-786">Because of the loss of precision that can result from representing decimal values as floating-point numbers or performing arithmetic operations on floating-point values, in some cases the <see cref="M:System.Math.Round(System.Double,System.Int32,System.MidpointRounding)" /> method may not appear to round midpoint values as specified by the <paramref name="mode" /> parameter.</span></span> <span data-ttu-id="69036-787">Это показано в следующем примере, где 2.135 округляется до 2.13 вместо 2.14.</span><span class="sxs-lookup"><span data-stu-id="69036-787">This is illustrated in the following example, where 2.135 is rounded to 2.13 instead of 2.14.</span></span> <span data-ttu-id="69036-788">Это происходит потому, что внутри метода умножает <paramref name="value" /> на 10<sup>цифр</sup>, и операция умножения в этом случае страдает от потери точности.</span><span class="sxs-lookup"><span data-stu-id="69036-788">This occurs because internally the method multiplies <paramref name="value" /> by 10<sup>digits</sup>, and the multiplication operation in this case suffers from a loss of precision.</span></span>  
  
 [!code-csharp[System.Math.Round#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.round/cs/round4.cs#3)]
 [!code-vb[System.Math.Round#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.round/vb/round4.vb#3)]</para>
        </block>
        <altmember cref="M:System.Math.Ceiling(System.Double)" />
        <altmember cref="M:System.Math.Floor(System.Double)" />
        <altmember cref="M:System.Decimal.Round(System.Decimal,System.Int32,System.MidpointRounding)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Sign">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="69036-789">Возвращает целое число, указывающее знак числа.</span><span class="sxs-lookup"><span data-stu-id="69036-789">Returns an integer that indicates the sign of a number.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Sign">
      <MemberSignature Language="C#" Value="public static int Sign (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Sign(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Sign(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Sign (value As Decimal) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Sign(System::Decimal value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="69036-790">Десятичное число со знаком.</span><span class="sxs-lookup"><span data-stu-id="69036-790">A signed decimal number.</span></span></param>
        <summary><span data-ttu-id="69036-791">Возвращает целое число, указывающее знак десятичного числа.</span><span class="sxs-lookup"><span data-stu-id="69036-791">Returns an integer that indicates the sign of a decimal number.</span></span></summary>
        <returns><span data-ttu-id="69036-792">Число, которое указывает знак значения <paramref name="value" />, как показано в следующей таблице.</span><span class="sxs-lookup"><span data-stu-id="69036-792">A number that indicates the sign of <paramref name="value" />, as shown in the following table.</span></span>  
  
 <span data-ttu-id="69036-793"><list type="table"><listheader><term> Возвращаемое значение</span><span class="sxs-lookup"><span data-stu-id="69036-793"><list type="table"><listheader><term> Return value</span></span>  
  
 <span data-ttu-id="69036-794"></term><description> Описание</span><span class="sxs-lookup"><span data-stu-id="69036-794"></term><description> Meaning</span></span>  
  
 <span data-ttu-id="69036-795"></description></listheader><item><term> –1</span><span class="sxs-lookup"><span data-stu-id="69036-795"></description></listheader><item><term> -1</span></span>  
  
 <span data-ttu-id="69036-796"></term><description><paramref name="value" /> меньше нуля.</span><span class="sxs-lookup"><span data-stu-id="69036-796"></term><description><paramref name="value" /> is less than zero.</span></span>  
  
 <span data-ttu-id="69036-797"></description></item><item><term> 0</span><span class="sxs-lookup"><span data-stu-id="69036-797"></description></item><item><term> 0</span></span>  
  
 <span data-ttu-id="69036-798"></term><description><paramref name="value" /> равно нулю.</span><span class="sxs-lookup"><span data-stu-id="69036-798"></term><description><paramref name="value" /> is equal to zero.</span></span>  
  
 <span data-ttu-id="69036-799"></description></item><item><term> 1</span><span class="sxs-lookup"><span data-stu-id="69036-799"></description></item><item><term> 1</span></span>  
  
 <span data-ttu-id="69036-800"></term><description><paramref name="value" /> больше нуля.</span><span class="sxs-lookup"><span data-stu-id="69036-800"></term><description><paramref name="value" /> is greater than zero.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="69036-801">В следующем примере демонстрируется использование <xref:System.Math.Sign%28System.Decimal%29> метод, чтобы определить знак числа <xref:System.Decimal> значение и вывода на консоль.</span><span class="sxs-lookup"><span data-stu-id="69036-801">The following example demonstrates how to use the <xref:System.Math.Sign%28System.Decimal%29> method to determine the sign of a <xref:System.Decimal> value and display it to the console.</span></span>  
  
 [!code-cpp[Math.Sign#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.sign/CPP/sign.cpp#1)]
 [!code-csharp[Math.Sign#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.sign/CS/sign.cs#1)]
 [!code-vb[Math.Sign#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.sign/VB/sign.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Sign">
      <MemberSignature Language="C#" Value="public static int Sign (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Sign(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Sign(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Sign (value As Double) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Sign(double value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="69036-802">Число со знаком.</span><span class="sxs-lookup"><span data-stu-id="69036-802">A signed number.</span></span></param>
        <summary><span data-ttu-id="69036-803">Возвращает целое число, обозначающее знак числа двойной точности с плавающей запятой.</span><span class="sxs-lookup"><span data-stu-id="69036-803">Returns an integer that indicates the sign of a double-precision floating-point number.</span></span></summary>
        <returns><span data-ttu-id="69036-804">Число, которое указывает знак значения <paramref name="value" />, как показано в следующей таблице.</span><span class="sxs-lookup"><span data-stu-id="69036-804">A number that indicates the sign of <paramref name="value" />, as shown in the following table.</span></span>  
  
 <span data-ttu-id="69036-805"><list type="table"><listheader><term> Возвращаемое значение</span><span class="sxs-lookup"><span data-stu-id="69036-805"><list type="table"><listheader><term> Return value</span></span>  
  
 <span data-ttu-id="69036-806"></term><description> Описание</span><span class="sxs-lookup"><span data-stu-id="69036-806"></term><description> Meaning</span></span>  
  
 <span data-ttu-id="69036-807"></description></listheader><item><term> –1</span><span class="sxs-lookup"><span data-stu-id="69036-807"></description></listheader><item><term> -1</span></span>  
  
 <span data-ttu-id="69036-808"></term><description><paramref name="value" /> меньше нуля.</span><span class="sxs-lookup"><span data-stu-id="69036-808"></term><description><paramref name="value" /> is less than zero.</span></span>  
  
 <span data-ttu-id="69036-809"></description></item><item><term> 0</span><span class="sxs-lookup"><span data-stu-id="69036-809"></description></item><item><term> 0</span></span>  
  
 <span data-ttu-id="69036-810"></term><description><paramref name="value" /> равно нулю.</span><span class="sxs-lookup"><span data-stu-id="69036-810"></term><description><paramref name="value" /> is equal to zero.</span></span>  
  
 <span data-ttu-id="69036-811"></description></item><item><term> 1</span><span class="sxs-lookup"><span data-stu-id="69036-811"></description></item><item><term> 1</span></span>  
  
 <span data-ttu-id="69036-812"></term><description><paramref name="value" /> больше нуля.</span><span class="sxs-lookup"><span data-stu-id="69036-812"></term><description><paramref name="value" /> is greater than zero.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="69036-813">В следующем примере демонстрируется использование <xref:System.Math.Sign%28System.Double%29> метод, чтобы определить знак числа <xref:System.Double> значение и вывода на консоль.</span><span class="sxs-lookup"><span data-stu-id="69036-813">The following example demonstrates how to use the <xref:System.Math.Sign%28System.Double%29> method to determine the sign of a <xref:System.Double> value and display it to the console.</span></span>  
  
 [!code-cpp[Math.Sign#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.sign/CPP/sign.cpp#1)]
 [!code-csharp[Math.Sign#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.sign/CS/sign.cs#1)]
 [!code-vb[Math.Sign#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.sign/VB/sign.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArithmeticException">
          <span data-ttu-id="69036-814"><paramref name="value" /> равно <see cref="F:System.Double.NaN" />.</span><span class="sxs-lookup"><span data-stu-id="69036-814"><paramref name="value" /> is equal to <see cref="F:System.Double.NaN" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Sign">
      <MemberSignature Language="C#" Value="public static int Sign (short value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Sign(int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Sign(System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Sign (value As Short) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Sign(short value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="69036-815">Число со знаком.</span><span class="sxs-lookup"><span data-stu-id="69036-815">A signed number.</span></span></param>
        <summary><span data-ttu-id="69036-816">Возвращает целое число, указывающее знак 16-разрядного целого числа со знаком.</span><span class="sxs-lookup"><span data-stu-id="69036-816">Returns an integer that indicates the sign of a 16-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="69036-817">Число, которое указывает знак значения <paramref name="value" />, как показано в следующей таблице.</span><span class="sxs-lookup"><span data-stu-id="69036-817">A number that indicates the sign of <paramref name="value" />, as shown in the following table.</span></span>  
  
 <span data-ttu-id="69036-818"><list type="table"><listheader><term> Возвращаемое значение</span><span class="sxs-lookup"><span data-stu-id="69036-818"><list type="table"><listheader><term> Return value</span></span>  
  
 <span data-ttu-id="69036-819"></term><description> Описание</span><span class="sxs-lookup"><span data-stu-id="69036-819"></term><description> Meaning</span></span>  
  
 <span data-ttu-id="69036-820"></description></listheader><item><term> –1</span><span class="sxs-lookup"><span data-stu-id="69036-820"></description></listheader><item><term> -1</span></span>  
  
 <span data-ttu-id="69036-821"></term><description><paramref name="value" /> меньше нуля.</span><span class="sxs-lookup"><span data-stu-id="69036-821"></term><description><paramref name="value" /> is less than zero.</span></span>  
  
 <span data-ttu-id="69036-822"></description></item><item><term> 0</span><span class="sxs-lookup"><span data-stu-id="69036-822"></description></item><item><term> 0</span></span>  
  
 <span data-ttu-id="69036-823"></term><description><paramref name="value" /> равно нулю.</span><span class="sxs-lookup"><span data-stu-id="69036-823"></term><description><paramref name="value" /> is equal to zero.</span></span>  
  
 <span data-ttu-id="69036-824"></description></item><item><term> 1</span><span class="sxs-lookup"><span data-stu-id="69036-824"></description></item><item><term> 1</span></span>  
  
 <span data-ttu-id="69036-825"></term><description><paramref name="value" /> больше нуля.</span><span class="sxs-lookup"><span data-stu-id="69036-825"></term><description><paramref name="value" /> is greater than zero.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="69036-826">В следующем примере демонстрируется использование <xref:System.Math.Sign%28System.Int16%29> метод, чтобы определить знак числа <xref:System.Int16> значение и вывода на консоль.</span><span class="sxs-lookup"><span data-stu-id="69036-826">The following example demonstrates how to use the <xref:System.Math.Sign%28System.Int16%29> method to determine the sign of an <xref:System.Int16> value and display it to the console.</span></span>  
  
 [!code-cpp[Math.Sign#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.sign/CPP/sign.cpp#1)]
 [!code-csharp[Math.Sign#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.sign/CS/sign.cs#1)]
 [!code-vb[Math.Sign#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.sign/VB/sign.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Sign">
      <MemberSignature Language="C#" Value="public static int Sign (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Sign(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Sign(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Sign (value As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Sign(int value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="69036-827">Число со знаком.</span><span class="sxs-lookup"><span data-stu-id="69036-827">A signed number.</span></span></param>
        <summary><span data-ttu-id="69036-828">Возвращает целое число, указывающее знак 32-разрядного целого числа со знаком.</span><span class="sxs-lookup"><span data-stu-id="69036-828">Returns an integer that indicates the sign of a 32-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="69036-829">Число, которое указывает знак значения <paramref name="value" />, как показано в следующей таблице.</span><span class="sxs-lookup"><span data-stu-id="69036-829">A number that indicates the sign of <paramref name="value" />, as shown in the following table.</span></span>  
  
 <span data-ttu-id="69036-830"><list type="table"><listheader><term> Возвращаемое значение</span><span class="sxs-lookup"><span data-stu-id="69036-830"><list type="table"><listheader><term> Return value</span></span>  
  
 <span data-ttu-id="69036-831"></term><description> Описание</span><span class="sxs-lookup"><span data-stu-id="69036-831"></term><description> Meaning</span></span>  
  
 <span data-ttu-id="69036-832"></description></listheader><item><term> –1</span><span class="sxs-lookup"><span data-stu-id="69036-832"></description></listheader><item><term> -1</span></span>  
  
 <span data-ttu-id="69036-833"></term><description><paramref name="value" /> меньше нуля.</span><span class="sxs-lookup"><span data-stu-id="69036-833"></term><description><paramref name="value" /> is less than zero.</span></span>  
  
 <span data-ttu-id="69036-834"></description></item><item><term> 0</span><span class="sxs-lookup"><span data-stu-id="69036-834"></description></item><item><term> 0</span></span>  
  
 <span data-ttu-id="69036-835"></term><description><paramref name="value" /> равно нулю.</span><span class="sxs-lookup"><span data-stu-id="69036-835"></term><description><paramref name="value" /> is equal to zero.</span></span>  
  
 <span data-ttu-id="69036-836"></description></item><item><term> 1</span><span class="sxs-lookup"><span data-stu-id="69036-836"></description></item><item><term> 1</span></span>  
  
 <span data-ttu-id="69036-837"></term><description><paramref name="value" /> больше нуля.</span><span class="sxs-lookup"><span data-stu-id="69036-837"></term><description><paramref name="value" /> is greater than zero.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="69036-838">В следующем примере демонстрируется использование <xref:System.Math.Sign%28System.Int32%29> метод, чтобы определить знак числа <xref:System.Int32> значение и вывода на консоль.</span><span class="sxs-lookup"><span data-stu-id="69036-838">The following example demonstrates how to use the <xref:System.Math.Sign%28System.Int32%29> method to determine the sign of an <xref:System.Int32> value and display it to the console.</span></span>  
  
 [!code-cpp[Math.Sign#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.sign/CPP/sign.cpp#1)]
 [!code-csharp[Math.Sign#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.sign/CS/sign.cs#1)]
 [!code-vb[Math.Sign#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.sign/VB/sign.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Sign">
      <MemberSignature Language="C#" Value="public static int Sign (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Sign(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Sign(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Sign (value As Long) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Sign(long value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="69036-839">Число со знаком.</span><span class="sxs-lookup"><span data-stu-id="69036-839">A signed number.</span></span></param>
        <summary><span data-ttu-id="69036-840">Возвращает целое число, указывающее знак 64-разрядного целого числа со знаком.</span><span class="sxs-lookup"><span data-stu-id="69036-840">Returns an integer that indicates the sign of a 64-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="69036-841">Число, которое указывает знак значения <paramref name="value" />, как показано в следующей таблице.</span><span class="sxs-lookup"><span data-stu-id="69036-841">A number that indicates the sign of <paramref name="value" />, as shown in the following table.</span></span>  
  
 <span data-ttu-id="69036-842"><list type="table"><listheader><term> Возвращаемое значение</span><span class="sxs-lookup"><span data-stu-id="69036-842"><list type="table"><listheader><term> Return value</span></span>  
  
 <span data-ttu-id="69036-843"></term><description> Описание</span><span class="sxs-lookup"><span data-stu-id="69036-843"></term><description> Meaning</span></span>  
  
 <span data-ttu-id="69036-844"></description></listheader><item><term> –1</span><span class="sxs-lookup"><span data-stu-id="69036-844"></description></listheader><item><term> -1</span></span>  
  
 <span data-ttu-id="69036-845"></term><description><paramref name="value" /> меньше нуля.</span><span class="sxs-lookup"><span data-stu-id="69036-845"></term><description><paramref name="value" /> is less than zero.</span></span>  
  
 <span data-ttu-id="69036-846"></description></item><item><term> 0</span><span class="sxs-lookup"><span data-stu-id="69036-846"></description></item><item><term> 0</span></span>  
  
 <span data-ttu-id="69036-847"></term><description><paramref name="value" /> равно нулю.</span><span class="sxs-lookup"><span data-stu-id="69036-847"></term><description><paramref name="value" /> is equal to zero.</span></span>  
  
 <span data-ttu-id="69036-848"></description></item><item><term> 1</span><span class="sxs-lookup"><span data-stu-id="69036-848"></description></item><item><term> 1</span></span>  
  
 <span data-ttu-id="69036-849"></term><description><paramref name="value" /> больше нуля.</span><span class="sxs-lookup"><span data-stu-id="69036-849"></term><description><paramref name="value" /> is greater than zero.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="69036-850">В следующем примере демонстрируется использование <xref:System.Math.Sign%28System.Int64%29> метод, чтобы определить знак числа <xref:System.Int64> значение и вывода на консоль.</span><span class="sxs-lookup"><span data-stu-id="69036-850">The following example demonstrates how to use the <xref:System.Math.Sign%28System.Int64%29> method to determine the sign of an <xref:System.Int64> value and display it to the console.</span></span>  
  
 [!code-cpp[Math.Sign#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.sign/CPP/sign.cpp#1)]
 [!code-csharp[Math.Sign#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.sign/CS/sign.cs#1)]
 [!code-vb[Math.Sign#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.sign/VB/sign.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Sign">
      <MemberSignature Language="C#" Value="public static int Sign (sbyte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Sign(int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Sign(System.SByte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Sign (value As SByte) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Sign(System::SByte value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="69036-851">Число со знаком.</span><span class="sxs-lookup"><span data-stu-id="69036-851">A signed number.</span></span></param>
        <summary><span data-ttu-id="69036-852">Возвращает целое число, указывающее знак 8-разрядного целого числа со знаком.</span><span class="sxs-lookup"><span data-stu-id="69036-852">Returns an integer that indicates the sign of an 8-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="69036-853">Число, которое указывает знак значения <paramref name="value" />, как показано в следующей таблице.</span><span class="sxs-lookup"><span data-stu-id="69036-853">A number that indicates the sign of <paramref name="value" />, as shown in the following table.</span></span>  
  
 <span data-ttu-id="69036-854"><list type="table"><listheader><term> Возвращаемое значение</span><span class="sxs-lookup"><span data-stu-id="69036-854"><list type="table"><listheader><term> Return value</span></span>  
  
 <span data-ttu-id="69036-855"></term><description> Описание</span><span class="sxs-lookup"><span data-stu-id="69036-855"></term><description> Meaning</span></span>  
  
 <span data-ttu-id="69036-856"></description></listheader><item><term> –1</span><span class="sxs-lookup"><span data-stu-id="69036-856"></description></listheader><item><term> -1</span></span>  
  
 <span data-ttu-id="69036-857"></term><description><paramref name="value" /> меньше нуля.</span><span class="sxs-lookup"><span data-stu-id="69036-857"></term><description><paramref name="value" /> is less than zero.</span></span>  
  
 <span data-ttu-id="69036-858"></description></item><item><term> 0</span><span class="sxs-lookup"><span data-stu-id="69036-858"></description></item><item><term> 0</span></span>  
  
 <span data-ttu-id="69036-859"></term><description><paramref name="value" /> равно нулю.</span><span class="sxs-lookup"><span data-stu-id="69036-859"></term><description><paramref name="value" /> is equal to zero.</span></span>  
  
 <span data-ttu-id="69036-860"></description></item><item><term> 1</span><span class="sxs-lookup"><span data-stu-id="69036-860"></description></item><item><term> 1</span></span>  
  
 <span data-ttu-id="69036-861"></term><description><paramref name="value" /> больше нуля.</span><span class="sxs-lookup"><span data-stu-id="69036-861"></term><description><paramref name="value" /> is greater than zero.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="69036-862">В следующем примере демонстрируется использование <xref:System.Math.Sign%28System.SByte%29> метод, чтобы определить знак числа <xref:System.SByte> значение и вывода на консоль.</span><span class="sxs-lookup"><span data-stu-id="69036-862">The following example demonstrates how to use the <xref:System.Math.Sign%28System.SByte%29> method to determine the sign of an <xref:System.SByte> value and display it to the console.</span></span>  
  
 [!code-cpp[Math.Sign#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.sign/CPP/sign.cpp#1)]
 [!code-csharp[Math.Sign#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.sign/CS/sign.cs#1)]
 [!code-vb[Math.Sign#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.sign/VB/sign.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Sign">
      <MemberSignature Language="C#" Value="public static int Sign (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Sign(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Sign(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Sign (value As Single) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Sign(float value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="69036-863">Число со знаком.</span><span class="sxs-lookup"><span data-stu-id="69036-863">A signed number.</span></span></param>
        <summary><span data-ttu-id="69036-864">Возвращает целое число, обозначающее знак числа с плавающей запятой одиночной точности.</span><span class="sxs-lookup"><span data-stu-id="69036-864">Returns an integer that indicates the sign of a single-precision floating-point number.</span></span></summary>
        <returns><span data-ttu-id="69036-865">Число, которое указывает знак значения <paramref name="value" />, как показано в следующей таблице.</span><span class="sxs-lookup"><span data-stu-id="69036-865">A number that indicates the sign of <paramref name="value" />, as shown in the following table.</span></span>  
  
 <span data-ttu-id="69036-866"><list type="table"><listheader><term> Возвращаемое значение</span><span class="sxs-lookup"><span data-stu-id="69036-866"><list type="table"><listheader><term> Return value</span></span>  
  
 <span data-ttu-id="69036-867"></term><description> Описание</span><span class="sxs-lookup"><span data-stu-id="69036-867"></term><description> Meaning</span></span>  
  
 <span data-ttu-id="69036-868"></description></listheader><item><term> –1</span><span class="sxs-lookup"><span data-stu-id="69036-868"></description></listheader><item><term> -1</span></span>  
  
 <span data-ttu-id="69036-869"></term><description><paramref name="value" /> меньше нуля.</span><span class="sxs-lookup"><span data-stu-id="69036-869"></term><description><paramref name="value" /> is less than zero.</span></span>  
  
 <span data-ttu-id="69036-870"></description></item><item><term> 0</span><span class="sxs-lookup"><span data-stu-id="69036-870"></description></item><item><term> 0</span></span>  
  
 <span data-ttu-id="69036-871"></term><description><paramref name="value" /> равно нулю.</span><span class="sxs-lookup"><span data-stu-id="69036-871"></term><description><paramref name="value" /> is equal to zero.</span></span>  
  
 <span data-ttu-id="69036-872"></description></item><item><term> 1</span><span class="sxs-lookup"><span data-stu-id="69036-872"></description></item><item><term> 1</span></span>  
  
 <span data-ttu-id="69036-873"></term><description><paramref name="value" /> больше нуля.</span><span class="sxs-lookup"><span data-stu-id="69036-873"></term><description><paramref name="value" /> is greater than zero.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="69036-874">В следующем примере демонстрируется использование <xref:System.Math.Sign%28System.Single%29> метод, чтобы определить знак числа <xref:System.Single> значение и вывода на консоль.</span><span class="sxs-lookup"><span data-stu-id="69036-874">The following example demonstrates how to use the <xref:System.Math.Sign%28System.Single%29> method to determine the sign of a <xref:System.Single> value and display it to the console.</span></span>  
  
 [!code-cpp[Math.Sign#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.sign/CPP/sign.cpp#1)]
 [!code-csharp[Math.Sign#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.sign/CS/sign.cs#1)]
 [!code-vb[Math.Sign#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.sign/VB/sign.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArithmeticException">
          <span data-ttu-id="69036-875"><paramref name="value" /> равно <see cref="F:System.Single.NaN" />.</span><span class="sxs-lookup"><span data-stu-id="69036-875"><paramref name="value" /> is equal to <see cref="F:System.Single.NaN" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Sin">
      <MemberSignature Language="C#" Value="public static double Sin (double a);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Sin(float64 a) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Sin(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Sin (a As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Sin(double a);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="a"><span data-ttu-id="69036-876">Угол, измеряемый в радианах.</span><span class="sxs-lookup"><span data-stu-id="69036-876">An angle, measured in radians.</span></span></param>
        <summary><span data-ttu-id="69036-877">Возвращает синус указанного угла.</span><span class="sxs-lookup"><span data-stu-id="69036-877">Returns the sine of the specified angle.</span></span></summary>
        <returns><span data-ttu-id="69036-878">Синус <paramref name="a" />.</span><span class="sxs-lookup"><span data-stu-id="69036-878">The sine of <paramref name="a" />.</span></span> <span data-ttu-id="69036-879">Если значение параметра <paramref name="a" /> равно <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.NegativeInfinity" /> или <see cref="F:System.Double.PositiveInfinity" />, то данный метод возвращает <see cref="F:System.Double.NaN" />.</span><span class="sxs-lookup"><span data-stu-id="69036-879">If <paramref name="a" /> is equal to <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.NegativeInfinity" />, or <see cref="F:System.Double.PositiveInfinity" />, this method returns <see cref="F:System.Double.NaN" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69036-880">Угол `a`, должны быть указаны в радианах.</span><span class="sxs-lookup"><span data-stu-id="69036-880">The angle, `a`, must be in radians.</span></span> <span data-ttu-id="69036-881">Умножить по <xref:System.Math.PI?displayProperty=nameWithType>/180 для преобразования градусов в радианы.</span><span class="sxs-lookup"><span data-stu-id="69036-881">Multiply by <xref:System.Math.PI?displayProperty=nameWithType>/180 to convert degrees to radians.</span></span>  
  
 <span data-ttu-id="69036-882">Допустимы значения `a` в диапазоне от приблизительно -9223372036854775295 до приблизительно 9223372036854775295.</span><span class="sxs-lookup"><span data-stu-id="69036-882">Acceptable values of `a` range from approximately -9223372036854775295 to approximately 9223372036854775295.</span></span> <span data-ttu-id="69036-883">Для значений за пределами этого диапазона <xref:System.Math.Sin%2A> возвращает `a` без изменений, а не вызывая исключение.</span><span class="sxs-lookup"><span data-stu-id="69036-883">For values outside of this range, the <xref:System.Math.Sin%2A> method returns `a` unchanged rather than throwing an exception.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="69036-884">В следующем примере используется <xref:System.Math.Sin%2A> для вычисления определенных тригонометрических выражений для выбранных углов.</span><span class="sxs-lookup"><span data-stu-id="69036-884">The following example uses <xref:System.Math.Sin%2A> to evaluate certain trigonometric identities for selected angles.</span></span>  
  
 [!code-cpp[System.Math.SinCos#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Math.SinCos/CPP/sincos.cpp#1)]
 [!code-csharp[System.Math.SinCos#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.SinCos/CS/sincos.cs#1)]
 [!code-vb[System.Math.SinCos#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.SinCos/VB/sincos.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Sinh">
      <MemberSignature Language="C#" Value="public static double Sinh (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Sinh(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Sinh(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Sinh (value As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Sinh(double value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="69036-885">Угол, измеряемый в радианах.</span><span class="sxs-lookup"><span data-stu-id="69036-885">An angle, measured in radians.</span></span></param>
        <summary><span data-ttu-id="69036-886">Возвращает гиперболический синус указанного угла.</span><span class="sxs-lookup"><span data-stu-id="69036-886">Returns the hyperbolic sine of the specified angle.</span></span></summary>
        <returns><span data-ttu-id="69036-887">Гиперболический синус <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="69036-887">The hyperbolic sine of <paramref name="value" />.</span></span> <span data-ttu-id="69036-888">Если значение параметра <paramref name="value" /> равно <see cref="F:System.Double.NegativeInfinity" />, <see cref="F:System.Double.PositiveInfinity" /> или <see cref="F:System.Double.NaN" />, то этот метод возвращает значение <see cref="T:System.Double" />, равное <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="69036-888">If <paramref name="value" /> is equal to <see cref="F:System.Double.NegativeInfinity" />, <see cref="F:System.Double.PositiveInfinity" />, or <see cref="F:System.Double.NaN" />, this method returns a <see cref="T:System.Double" /> equal to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69036-889">Угол `value`, должны быть указаны в радианах.</span><span class="sxs-lookup"><span data-stu-id="69036-889">The angle, `value`, must be in radians.</span></span> <span data-ttu-id="69036-890">Умножить по <xref:System.Math.PI?displayProperty=nameWithType>/180 для преобразования градусов в радианы.</span><span class="sxs-lookup"><span data-stu-id="69036-890">Multiply by <xref:System.Math.PI?displayProperty=nameWithType>/180 to convert degrees to radians.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="69036-891">В следующем примере используется <xref:System.Math.Sinh%2A> для вычисления определенных гиперболический выражений для выбранных значений.</span><span class="sxs-lookup"><span data-stu-id="69036-891">The following example uses <xref:System.Math.Sinh%2A> to evaluate certain hyperbolic identities for selected values.</span></span>  
  
 [!code-cpp[System.Math.SinhCosh#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Math.SinhCosh/CPP/sinhcosh.cpp#1)]
 [!code-csharp[System.Math.SinhCosh#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.SinhCosh/CS/sinhcosh.cs#1)]
 [!code-vb[System.Math.SinhCosh#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.SinhCosh/VB/sinhcosh.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Sqrt">
      <MemberSignature Language="C#" Value="public static double Sqrt (double d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Sqrt(float64 d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Sqrt(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Sqrt (d As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Sqrt(double d);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="69036-892">Число, квадратный корень которого требуется найти.</span><span class="sxs-lookup"><span data-stu-id="69036-892">The number whose square root is to be found.</span></span></param>
        <summary><span data-ttu-id="69036-893">Возвращает квадратный корень из указанного числа.</span><span class="sxs-lookup"><span data-stu-id="69036-893">Returns the square root of a specified number.</span></span></summary>
        <returns><span data-ttu-id="69036-894">Одно из значений, перечисленных в следующей таблице.</span><span class="sxs-lookup"><span data-stu-id="69036-894">One of the values in the following table.</span></span>  
  
 <span data-ttu-id="69036-895"><list type="table"><listheader><term><paramref name="d" /> параметр</span><span class="sxs-lookup"><span data-stu-id="69036-895"><list type="table"><listheader><term><paramref name="d" /> parameter</span></span>  
  
 <span data-ttu-id="69036-896"></term><description> Возвращаемое значение</span><span class="sxs-lookup"><span data-stu-id="69036-896"></term><description> Return value</span></span>  
  
 <span data-ttu-id="69036-897"></description></listheader><item><term> Нуль или положительное число</span><span class="sxs-lookup"><span data-stu-id="69036-897"></description></listheader><item><term> Zero or positive</span></span>  
  
 <span data-ttu-id="69036-898"></term><description> Положительный квадратный корень из <paramref name="d" />.</span><span class="sxs-lookup"><span data-stu-id="69036-898"></term><description> The positive square root of <paramref name="d" />.</span></span>  
  
 <span data-ttu-id="69036-899"></description></item><item><term> Отрицательное число</span><span class="sxs-lookup"><span data-stu-id="69036-899"></description></item><item><term> Negative</span></span>  
  
 <span data-ttu-id="69036-900"></term><description><see cref="F:System.Double.NaN" /></description></item><item><term> Равно <see cref="F:System.Double.NaN" /></term><description><see cref="F:System.Double.NaN" /></description></item><item><term> Равно <see cref="F:System.Double.PositiveInfinity" /></term><description><see cref="F:System.Double.PositiveInfinity" /></description></item></list></span><span class="sxs-lookup"><span data-stu-id="69036-900"></term><description><see cref="F:System.Double.NaN" /></description></item><item><term> Equals <see cref="F:System.Double.NaN" /></term><description><see cref="F:System.Double.NaN" /></description></item><item><term> Equals <see cref="F:System.Double.PositiveInfinity" /></term><description><see cref="F:System.Double.PositiveInfinity" /></description></item></list></span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="69036-901">Квадратный корень из области квадрат представляет длину любой стороны прямоугольника.</span><span class="sxs-lookup"><span data-stu-id="69036-901">The square root of the area of a square represents the length of any side of the square.</span></span> <span data-ttu-id="69036-902">В следующем примере отображается та его область некоторые города в США и дает видеть, размер каждого города, если были представленный квадрат.</span><span class="sxs-lookup"><span data-stu-id="69036-902">The following example displays the area of some cities in the United States and gives an impression of each city's size if it were represented by a square.</span></span>  
  
 [!code-csharp[System.Math.Sqrt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.sqrt/cs/sqrt1.cs#1)]
 [!code-vb[System.Math.Sqrt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.sqrt/vb/sqrt1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Math.Pow(System.Double,System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="Tan">
      <MemberSignature Language="C#" Value="public static double Tan (double a);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Tan(float64 a) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Tan(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Tan (a As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Tan(double a);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="a"><span data-ttu-id="69036-903">Угол, измеряемый в радианах.</span><span class="sxs-lookup"><span data-stu-id="69036-903">An angle, measured in radians.</span></span></param>
        <summary><span data-ttu-id="69036-904">Возвращает тангенс указанного угла.</span><span class="sxs-lookup"><span data-stu-id="69036-904">Returns the tangent of the specified angle.</span></span></summary>
        <returns><span data-ttu-id="69036-905">Тангенс <paramref name="a" />.</span><span class="sxs-lookup"><span data-stu-id="69036-905">The tangent of <paramref name="a" />.</span></span> <span data-ttu-id="69036-906">Если значение параметра <paramref name="a" /> равно <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.NegativeInfinity" /> или <see cref="F:System.Double.PositiveInfinity" />, то данный метод возвращает <see cref="F:System.Double.NaN" />.</span><span class="sxs-lookup"><span data-stu-id="69036-906">If <paramref name="a" /> is equal to <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.NegativeInfinity" />, or <see cref="F:System.Double.PositiveInfinity" />, this method returns <see cref="F:System.Double.NaN" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69036-907">Угол `a`, должны быть указаны в радианах.</span><span class="sxs-lookup"><span data-stu-id="69036-907">The angle, `a`, must be in radians.</span></span> <span data-ttu-id="69036-908">Умножить по <xref:System.Math.PI?displayProperty=nameWithType>/180 для преобразования градусов в радианы.</span><span class="sxs-lookup"><span data-stu-id="69036-908">Multiply by <xref:System.Math.PI?displayProperty=nameWithType>/180 to convert degrees to radians.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="69036-909">Следующий пример демонстрирует вычисление тангенс угла и вывод на консоль.</span><span class="sxs-lookup"><span data-stu-id="69036-909">The following example demonstrates how to calculate the tangent of an angle and display it to the console.</span></span>  
  
 [!code-cpp[math.atanx#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.atanx/CPP/atan.cpp#1)]
 [!code-csharp[math.atanx#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.atanx/CS/atan.cs#1)]
 [!code-vb[math.atanx#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.atanx/VB/atan.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Tanh">
      <MemberSignature Language="C#" Value="public static double Tanh (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Tanh(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Tanh(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Tanh (value As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Tanh(double value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="69036-910">Угол, измеряемый в радианах.</span><span class="sxs-lookup"><span data-stu-id="69036-910">An angle, measured in radians.</span></span></param>
        <summary><span data-ttu-id="69036-911">Возвращает гиперболический тангенс указанного угла.</span><span class="sxs-lookup"><span data-stu-id="69036-911">Returns the hyperbolic tangent of the specified angle.</span></span></summary>
        <returns><span data-ttu-id="69036-912">Гиперболический тангенс <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="69036-912">The hyperbolic tangent of <paramref name="value" />.</span></span> <span data-ttu-id="69036-913">Если значение параметра <paramref name="value" /> равно <see cref="F:System.Double.NegativeInfinity" />, этот метод возвращает -1.</span><span class="sxs-lookup"><span data-stu-id="69036-913">If <paramref name="value" /> is equal to <see cref="F:System.Double.NegativeInfinity" />, this method returns -1.</span></span> <span data-ttu-id="69036-914">Если значение равно <see cref="F:System.Double.PositiveInfinity" />, этот метод возвращает 1.</span><span class="sxs-lookup"><span data-stu-id="69036-914">If value is equal to <see cref="F:System.Double.PositiveInfinity" />, this method returns 1.</span></span> <span data-ttu-id="69036-915">Если значение параметра <paramref name="value" /> равно <see cref="F:System.Double.NaN" />, этот метод возвращает <see cref="F:System.Double.NaN" />.</span><span class="sxs-lookup"><span data-stu-id="69036-915">If <paramref name="value" /> is equal to <see cref="F:System.Double.NaN" />, this method returns <see cref="F:System.Double.NaN" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69036-916">Угол `value`, должны быть указаны в радианах.</span><span class="sxs-lookup"><span data-stu-id="69036-916">The angle, `value`, must be in radians.</span></span> <span data-ttu-id="69036-917">Умножить по <xref:System.Math.PI?displayProperty=nameWithType>/180 для преобразования градусов в радианы.</span><span class="sxs-lookup"><span data-stu-id="69036-917">Multiply by <xref:System.Math.PI?displayProperty=nameWithType>/180 to convert degrees to radians.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="69036-918">В следующем примере используется <xref:System.Math.Tanh%2A> для вычисления определенных гиперболического тангенса выражений для выбранных значений.</span><span class="sxs-lookup"><span data-stu-id="69036-918">The following example uses <xref:System.Math.Tanh%2A> to evaluate certain hyperbolic tangent identities for selected values.</span></span>  
  
 [!code-cpp[System.Math.Tanh#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Math.Tanh/CPP/tanh.cpp#1)]
 [!code-csharp[System.Math.Tanh#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.Tanh/CS/tanh.cs#1)]
 [!code-vb[System.Math.Tanh#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.Tanh/VB/tanh.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Truncate">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="69036-919">Вычисляет целую часть числа.</span><span class="sxs-lookup"><span data-stu-id="69036-919">Calculates the integral part of a number.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69036-920">Число округляется до ближайшего целого в направлении нуля.</span><span class="sxs-lookup"><span data-stu-id="69036-920">The number is rounded to the nearest integer towards zero.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Truncate">
      <MemberSignature Language="C#" Value="public static decimal Truncate (decimal d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Truncate(valuetype System.Decimal d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Truncate(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Truncate (d As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Truncate(System::Decimal d);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="69036-921">Усекаемое число.</span><span class="sxs-lookup"><span data-stu-id="69036-921">A number to truncate.</span></span></param>
        <summary><span data-ttu-id="69036-922">Вычисляет целую часть заданного десятичного числа.</span><span class="sxs-lookup"><span data-stu-id="69036-922">Calculates the integral part of a specified decimal number.</span></span></summary>
        <returns><span data-ttu-id="69036-923">Целая часть <paramref name="d" />, то есть число, остающееся после отбрасывания дробной части.</span><span class="sxs-lookup"><span data-stu-id="69036-923">The integral part of <paramref name="d" />; that is, the number that remains after any fractional digits have been discarded.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69036-924"><xref:System.Math.Truncate%2A> Округляет `d` до ближайшего целого в направлении нуля.</span><span class="sxs-lookup"><span data-stu-id="69036-924"><xref:System.Math.Truncate%2A> rounds `d` to the nearest integer towards zero.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="69036-925">В следующем примере вызывается <xref:System.Math.Truncate%28System.Decimal%29> метод усечение положительного и отрицательного <xref:System.Decimal> значение.</span><span class="sxs-lookup"><span data-stu-id="69036-925">The following example calls the <xref:System.Math.Truncate%28System.Decimal%29> method to truncate both a positive and a negative <xref:System.Decimal> value.</span></span>  
  
 [!code-csharp[System.Math.Truncate#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.Truncate/cs/Truncate1.cs#2)]
 [!code-vb[System.Math.Truncate#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.Truncate/vb/Truncate1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Math.Round" />
        <altmember cref="M:System.Math.Ceiling(System.Decimal)" />
        <altmember cref="M:System.Math.Floor(System.Decimal)" />
      </Docs>
    </Member>
    <Member MemberName="Truncate">
      <MemberSignature Language="C#" Value="public static double Truncate (double d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Truncate(float64 d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Truncate(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Truncate (d As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Truncate(double d);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="69036-926">Усекаемое число.</span><span class="sxs-lookup"><span data-stu-id="69036-926">A number to truncate.</span></span></param>
        <summary><span data-ttu-id="69036-927">Вычисляет целую часть заданного числа двойной точности с плавающей запятой.</span><span class="sxs-lookup"><span data-stu-id="69036-927">Calculates the integral part of a specified double-precision floating-point number.</span></span></summary>
        <returns><span data-ttu-id="69036-928">Целая часть <paramref name="d" />, то есть число, которое остается после отбрасывания всех цифр дробной части, или одно из значений, перечисленных в следующей таблице.</span><span class="sxs-lookup"><span data-stu-id="69036-928">The integral part of <paramref name="d" />; that is, the number that remains after any fractional digits have been discarded, or one of the values listed in the following table.</span></span>  
  
 <span data-ttu-id="69036-929"><list type="table"><listheader><term><paramref name="d" /></term><description> Возвращаемое значение</span><span class="sxs-lookup"><span data-stu-id="69036-929"><list type="table"><listheader><term><paramref name="d" /></term><description> Return value</span></span>  
  
 </description></listheader><item><term><see cref="F:System.Double.NaN" /></term><description><see cref="F:System.Double.NaN" /></description></item><item><term><see cref="F:System.Double.NegativeInfinity" /></term><description><see cref="F:System.Double.NegativeInfinity" /></description></item><item><term><see cref="F:System.Double.PositiveInfinity" /></term><description><see cref="F:System.Double.PositiveInfinity" /></description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69036-930"><xref:System.Math.Truncate%2A> Округляет `d` до ближайшего целого в направлении нуля.</span><span class="sxs-lookup"><span data-stu-id="69036-930"><xref:System.Math.Truncate%2A> rounds `d` to the nearest integer towards zero.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="69036-931">В следующем примере вызывается <xref:System.Math.Truncate%28System.Double%29> метод усечение положительного и отрицательного <xref:System.Double> значение.</span><span class="sxs-lookup"><span data-stu-id="69036-931">The following example calls the <xref:System.Math.Truncate%28System.Double%29> method to truncate both a positive and a negative <xref:System.Double> value.</span></span>  
  
 [!code-csharp[System.Math.Truncate#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.Truncate/cs/Truncate1.cs#1)]
 [!code-vb[System.Math.Truncate#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.Truncate/vb/Truncate1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Math.Round" />
        <altmember cref="M:System.Math.Ceiling(System.Double)" />
        <altmember cref="M:System.Math.Floor(System.Double)" />
      </Docs>
    </Member>
  </Members>
</Type>