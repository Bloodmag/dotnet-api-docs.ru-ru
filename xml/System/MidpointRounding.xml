<Type Name="MidpointRounding" FullName="System.MidpointRounding">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b2852d41dcd00a78edfa1196c36ff46ff7b00a0e" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36430095" />
  </Metadata>
  <TypeSignature Language="C#" Value="public enum MidpointRounding" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed MidpointRounding extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.MidpointRounding" />
  <TypeSignature Language="VB.NET" Value="Public Enum MidpointRounding" />
  <TypeSignature Language="C++ CLI" Value="public enum class MidpointRounding" />
  <TypeSignature Language="F#" Value="type MidpointRounding = " />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Задает способ обработки чисел, которые равноудалены от двух соседних чисел, в математических методах округления.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте <xref:System.MidpointRounding> с соответствующей перегруженной версии <xref:System.Math.Round%2A?displayProperty=nameWithType> чтобы обеспечить больший контроль процесса округления.  
  
 Операция округления принимает исходное число с явно или неявно заданной точностью. проверяет следующей цифры, в точности плюс один; и возвращает до ближайшего числа, с той же точностью, как исходный номер. Для положительных чисел Если следующая цифра находится в диапазоне от 0 до 4, до ближайшего числа — направлении минус бесконечности. Если следующей цифры от 6 до 9, до ближайшего числа — в сторону положительной бесконечности. Для отрицательных чисел Если следующая цифра находится в диапазоне от 0 до 4, до ближайшего числа — сторону положительной бесконечности. Если следующей цифры от 6 до 9, до ближайшего числа — в направлении минус бесконечности.  
  
 В предыдущих случаев <xref:System.MidpointRounding> перечисления не влияет на результат операции округления. Тем не менее если далее цифра равна 5, который находится посредине между двумя возможными результатами и все остальные цифры равны нулю, или отсутствуют оставшиеся цифры, до ближайшего числа является неоднозначным. В этом случае <xref:System.MidpointRounding> перечисления позволяет указать, возвращает ли операция округления ближайшего числа от 0 или до ближайшего четного числа.  
  
 Следующая таблица демонстрирует результаты округления некоторые отрицательных и положительных чисел в сочетании со значениями <xref:System.MidpointRounding>. Точность, используемая для округления числа равен нулю, что означает число после десятичной запятой влияет на операции округления. Например для номера -2,5 цифр после десятичной запятой равно 5. Поскольку эта цифра находится посредине, можно использовать <xref:System.MidpointRounding> значение, чтобы определить результат округления. Если указано AwayFromZero -3 возвращается в том случае, так как это ближайшего числа от нуля с точностью, равной нулю. Если указано ToEven -2 возвращается в том случае, так как это до ближайшего четного числа с точностью, равной нулю.  
  
|Исходный номер|AwayFromZero|ToEven|  
|---------------------|------------------|------------|  
|3.5|4|4|  
|2.8|3|3|  
|2.5|3|2|  
|2.1|2|2|  
|-2.1|-2|-2|  
|-2.5|-3|-2|  
|-2.8|-3|-3|  
|-3.5|-4|-4|  
  
   
  
## Examples  
 В следующем примере кода показано <xref:System.Math.Round%2A> в сочетании с <xref:System.MidpointRounding.ToEven> перечисления.  
  
 [!code-cpp[math.midpointrounding#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.midpointrounding/cpp/mpr.cpp#1)]
 [!code-csharp[math.midpointrounding#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.midpointrounding/CS/mpr.cs#1)]
 [!code-vb[math.midpointrounding#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.midpointrounding/VB/mpr.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AwayFromZero">
      <MemberSignature Language="C#" Value="AwayFromZero" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.MidpointRounding AwayFromZero = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.MidpointRounding.AwayFromZero" />
      <MemberSignature Language="VB.NET" Value="AwayFromZero" />
      <MemberSignature Language="C++ CLI" Value="AwayFromZero" />
      <MemberSignature Language="F#" Value="AwayFromZero = 1" Usage="System.MidpointRounding.AwayFromZero" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.MidpointRounding</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>Когда число находится посредине между двумя другими числами, оно округляется до ближайшего числа дальше от нуля.</summary>
      </Docs>
    </Member>
    <Member MemberName="ToEven">
      <MemberSignature Language="C#" Value="ToEven" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.MidpointRounding ToEven = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.MidpointRounding.ToEven" />
      <MemberSignature Language="VB.NET" Value="ToEven" />
      <MemberSignature Language="C++ CLI" Value="ToEven" />
      <MemberSignature Language="F#" Value="ToEven = 0" Usage="System.MidpointRounding.ToEven" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.MidpointRounding</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>Когда число находится посредине между двумя другими числами, оно округляется до ближайшего четного числа.</summary>
      </Docs>
    </Member>
  </Members>
</Type>