<Type Name="NotSupportedException" FullName="System.NotSupportedException">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="8efb79e649d8ac96df50ccdc12c788e3be082c83" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30729988" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class NotSupportedException : SystemException" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit NotSupportedException extends System.SystemException" />
  <TypeSignature Language="DocId" Value="T:System.NotSupportedException" />
  <TypeSignature Language="VB.NET" Value="Public Class NotSupportedException&#xA;Inherits SystemException" />
  <TypeSignature Language="C++ CLI" Value="public ref class NotSupportedException : SystemException" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Exception</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-4.5">System.SystemException</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Исключение, которое выдается, если вызываемый метод не поддерживается, или при попытке чтения, поиска или записи в поток, который не поддерживает вызванную функцию.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.NotSupportedException> Указывает, что реализация не существует для вызываемого метода или свойства.  
  
 <xref:System.NotSupportedException> использует COR_E_NOTSUPPORTED HRESULT, который имеет значение 0x80131515.  
  
 Список начальных значений свойств для экземпляра <xref:System.NotSupportedException>, в разделе <xref:System.NotSupportedException.%23ctor%2A> конструкторы.  
  
## <a name="throwing-a-notsupportedexception-exception"></a>Вызывает исключение NotSupportedException  
 Рассмотрите возможность создания <xref:System.NotSupportedException> исключение в следующих случаях:  
  
-   Реализации универсального интерфейса и количество методы не имеют смысла реализации. Например, при создании даты и времени типом, реализующим <xref:System.IConvertible> вызывает интерфейс, <xref:System.NotSupportedException> исключение для большинства преобразований.  
  
-   Вы наследуете от абстрактного класса, который требует, переопределять несколько методов. Однако только вы готовы предоставить реализацию для подмножества этих. Для методов, которые вы решите не реализовывать, вы можете создавать <xref:System.NotSupportedException>.  
  
-   При определении универсального типа с состоянием, которое активирует условной операции. Например ваш тип может быть либо только для чтения или чтения и записи. В этом случае:  
  
    -   Если объект доступен только для чтения, попытка присвоения значений свойствам экземпляра и не вызывающие методы, изменяющие состояние экземпляра должен вызывать <xref:System.NotSupportedException> исключение.  
  
    -   Необходимо реализовать свойство, которое возвращает <xref:System.Boolean> значение, указывающее, доступен ли конкретной функции. Например, для типа, который можно использовать только для чтения или чтения и записи, вы можете реализовать `IsReadOnly` свойство, указывающее, является ли набор методов чтения и записи доступна или недоступна.  
  
## <a name="handling-a-notsupportedexception-exception"></a>Обрабатывает исключение NotSupportedException  
 <xref:System.NotSupportedException> Исключение указывает, что метод не имеет реализации и что не следует вызывать его.  Не следует обрабатывать исключение. Вместо этого вам следует зависит от причины исключения: ли реализация полностью отсутствует или вызова члена не согласуется с целью объекта (например, вызова <xref:System.IO.FileStream.Read%2A?displayProperty=nameWithType> метод только для чтения <xref:System.IO.FileStream> объекта .  
  
 **Реализация не была предоставлена, поскольку операция не может выполняться более удобным образом.**  
 Это общее исключение при вызове методов на объекте, который предоставляет реализации методов абстрактный базовый класс или, реализующий универсальный интерфейс, и метод не имеет смысла реализации.  
  
 Например <xref:System.Convert> класс реализует <xref:System.IConvertible> интерфейса, это означает, что он должен содержать метод для преобразования каждый тип-примитив каждый простой тип. Многие из этих преобразований, однако невозможны. В результате вызова <xref:System.Convert.ToBoolean%28System.DateTime%29?displayProperty=nameWithType> метод, например, создает <xref:System.NotSupportedException> исключение, так как нет возможности преобразования между <xref:System.DateTime> и <xref:System.Boolean> значение  
  
 Чтобы устранить исключение, следует удалить вызова метода.  
  
 **Получает состояние объекта не поддерживается вызов метода.**  
 Вы пытаетесь вызвать член, функциональные возможности которых недоступен из-за состояния объекта. Можно избежать исключений в одном из трех способов:  
  
-   Состояние объекта известно заранее, но были активированы неподдерживаемый метод или свойство. В этом случае вызова члена возникает ошибка, и вы можете устранить.  
  
-   Состояние объекта заранее известно (обычно из-за ваш код был создан его), но объект настроена неверно. Следующий пример иллюстрирует эту проблему. Создает доступный только для чтения <xref:System.IO.FileStream> объекта, а затем пытается в него запись.  
  
     [!code-csharp[System.NotSupportedException#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.NotSupportedException/cs/BadState1.cs#1)]
     [!code-vb[System.NotSupportedException#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.NotSupportedException/vb/BadState1.vb#1)]  
  
     Исключение экземпляра объекта поддерживает функциональность, которую вы намерены за счет того, можно исключить. В следующем примере рассматриваются проблемы только для чтения <xref:System.IO.FileStream> , указав правильные аргументы <xref:System.IO.FileStream.%23ctor%28System.String%2CSystem.IO.FileMode%2CSystem.IO.FileAccess%29?displayProperty=nameWithType> конструктор.  
  
-   Состояние объекта не знать заранее, а объект не поддерживает конкретной операции. В большинстве случаев следует объект, свойство или метод, который указывает, поддерживает ли он определенный набор операций. Исключение можно устранить путем проверки значения объекта и вызов члена только при необходимости.  
  
     В следующем примере определяется `DetectEncoding` метод, который создает <xref:System.NotSupportedException> исключение при попытке чтения с самого начала потока, который не поддерживает доступ для чтения.  
  
     [!code-csharp[System.NotSupportedException#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.NotSupportedException/cs/TestProp1.cs#3)]
     [!code-vb[System.NotSupportedException#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.NotSupportedException/vb/TestProp1.vb#3)]  
  
     Исключение можно устранить путем проверки значения <xref:System.IO.FileStream.CanRead%2A?displayProperty=nameWithType> свойство и выходу из метода, если поток доступен только для чтения.  
  
     [!code-csharp[System.NotSupportedException#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.NotSupportedException/cs/TestProp2.cs#4)]
     [!code-vb[System.NotSupportedException#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.NotSupportedException/vb/TestProp2.vb#4)]  
  
## <a name="related-exception-types"></a>Типы связанных исключений  
 <xref:System.NotSupportedException> Исключение тесно связана с двух других типов исключений;  
  
 <xref:System.NotImplementedException>.  
 Это исключение вызывается, когда метод может быть реализован, но не, так как член будет реализован в более поздней версии, член недоступен на определенной платформе, или элемент относится к абстрактному классу и производного класса необходимо указать обмена мгновенными сообщениями plementation.  
  
 <xref:System.InvalidOperationException>  
 Это исключение возникает в сценариях, в которых возможна обычно иногда объект для выполнения запрошенной операции и состояние объекта определяет, можно ли выполнить операцию.  
  
## <a name="net-compact-framework-notes"></a>Заметки о .NET compact Framework  
 При работе с [!INCLUDE[Compact](~/includes/compact-md.md)] и использовании P/Invoke для функций машинного кода это исключение может быть вызвано, если:  
  
-   объявление в управляемом коде неправильно;  
  
-   [!INCLUDE[Compact](~/includes/compact-md.md)] не поддерживает то, что пытается делать код;  
  
-   имена библиотек DLL не подходят для экспорта.  
  
 Если <xref:System.NotSupportedException.%23ctor%2A> исключения, проверьте:  
  
-   на наличие любых нарушений ограничений [!INCLUDE[Compact](~/includes/compact-md.md)] P/Invoke;  
  
-   на наличие любых аргументов, требующих предварительного выделения памяти. Если они существуют, следует передавать ссылку на существующую переменную;  
  
-   что имена экспортированных функций заданы верно. Это можно проверить с помощью [DumpBin.exe](https://msdn.microsoft.com/library/c1h23y6c.aspx).  
  
-   что нет попыток передачи слишком большого числа аргументов.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Exception" />
    <altmember cref="T:System.IO.FileStream" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.NotSupportedException" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NotSupportedException ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.NotSupportedException.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NotSupportedException();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.NotSupportedException" />, задавая в качестве значения свойства нового экземпляра <see cref="P:System.Exception.Message" /> системное сообщение с описанием ошибки. Это сообщение учитывает текущую культуру системы.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 В следующей таблице представлены исходные значения свойств экземпляра класса <xref:System.NotSupportedException>.  
  
|Свойство.|Значение|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|`null`.|  
|<xref:System.Exception.Message%2A>|Строка локализованного сообщения об ошибке.|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NotSupportedException (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.NotSupportedException.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NotSupportedException(System::String ^ message);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">Строка <see cref="T:System.String" />, описывающая ошибку. Содержимое параметра <c>message</c> должно быть понятным пользователю. Код, вызывающий этот конструктор, должен обеспечить локализацию данной строки в соответствии с текущим языком и региональными параметрами системы.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.NotSupportedException" /> с указанным сообщением об ошибке.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 В следующей таблице представлены исходные значения свойств экземпляра класса <xref:System.NotSupportedException>.  
  
|Свойство.|Значение|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|`null`.|  
|<xref:System.Exception.Message%2A>|Строка сообщения об ошибке.|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected NotSupportedException (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.NotSupportedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; NotSupportedException(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">Объект, содержащий сериализованные данные объекта.</param>
        <param name="context">Контекстные сведения об источнике или назначении.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.NotSupportedException" /> с сериализованными данными.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Данный конструктор вызывается в процессе десериализации для воссоздания объекта исключения, переданного в потоке. Дополнительные сведения см. в разделе [сериализации XML и SOAP](~/docs/standard/serialization/xml-and-soap-serialization.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NotSupportedException (string message, Exception innerException);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, class System.Exception innerException) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.NotSupportedException.#ctor(System.String,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String, innerException As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NotSupportedException(System::String ^ message, Exception ^ innerException);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="innerException" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="message">Сообщение об ошибке, указывающее причину создания исключения.</param>
        <param name="innerException">Исключение, которое является причиной текущего исключения. Если параметр <c>innerException</c> не является пустой ссылкой, текущее исключение возникает в блоке <see langword="catch" />, который обрабатывает внутреннее исключение.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.NotSupportedException" /> указанным сообщением об ошибке и ссылкой на внутреннее исключение, вызвавшее данное исключение.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Исключение, созданное как прямой результат предыдущего исключения, должно содержать в свойстве <xref:System.Exception.InnerException%2A> ссылку на предыдущее исключение. Свойство <xref:System.Exception.InnerException%2A> возвращает значение, переданное конструктору, или значение `null`, если свойство <xref:System.Exception.InnerException%2A> не передает конструктору значение внутреннего исключения.  
  
 В следующей таблице представлены исходные значения свойств экземпляра класса <xref:System.NotSupportedException>.  
  
|Свойство.|Значение|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|Ссылка на внутреннее исключение.|  
|<xref:System.Exception.Message%2A>|Строка сообщения об ошибке.|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Exception" />
      </Docs>
    </Member>
  </Members>
</Type>