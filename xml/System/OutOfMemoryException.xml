<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="OutOfMemoryException.xml" source-language="en-US" target-language="ru-RU">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5910934c01288ec01071b99b363ba0c0e473ede08.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">910934c01288ec01071b99b363ba0c0e473ede08</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.OutOfMemoryException">
          <source>The exception that is thrown when there is not enough memory to continue the execution of a program.</source>
          <target state="translated">Исключение, которое выбрасывается при недостаточном объеме памяти для выполнения программы.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OutOfMemoryException">
          <source>An <ph id="ph1">&lt;xref:System.OutOfMemoryException&gt;</ph> exception has two major causes:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.OutOfMemoryException&gt;</ph> Исключений имеет две основных причины:</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OutOfMemoryException">
          <source>You are attempting to expand a <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object beyond the length defined by its <ph id="ph2">&lt;xref:System.Text.StringBuilder.MaxCapacity%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">Вы пытаетесь развернуть <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> объекта за пределами определяется его <ph id="ph2">&lt;xref:System.Text.StringBuilder.MaxCapacity%2A?displayProperty=nameWithType&gt;</ph> свойство.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OutOfMemoryException">
          <source>The common language runtime cannot allocate enough contiguous memory to successfully perform an operation.</source>
          <target state="translated">Общеязыковая среда выполнения не удается выделить достаточно непрерывной памяти, для успешного выполнения операции.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OutOfMemoryException">
          <source>This exception can be thrown by any property assignment or method call that requires a memory allocation.</source>
          <target state="translated">Это исключение могут создаваться любое свойство назначения или вызов метода, требует выделения памяти.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OutOfMemoryException">
          <source>For more information on the cause of the <ph id="ph1">&lt;xref:System.OutOfMemoryException&gt;</ph> exception, see <bpt id="p1">[</bpt>"Out of Memory" Does Not Refer to Physical Memory<ept id="p1">](http://blogs.msdn.com/b/ericlippert/archive/2009/06/08/out-of-memory-does-not-refer-to-physical-memory.aspx)</ept>.</source>
          <target state="translated">Дополнительные сведения о причине <ph id="ph1">&lt;xref:System.OutOfMemoryException&gt;</ph> исключения, в разделе <bpt id="p1">[</bpt>«Out of Memory» не относится к физической памяти<ept id="p1">](http://blogs.msdn.com/b/ericlippert/archive/2009/06/08/out-of-memory-does-not-refer-to-physical-memory.aspx)</ept>.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OutOfMemoryException">
          <source>This type of <ph id="ph1">&lt;xref:System.OutOfMemoryException&gt;</ph> exception represents a catastrophic failure.</source>
          <target state="translated">Этот тип <ph id="ph1">&lt;xref:System.OutOfMemoryException&gt;</ph> исключение представляет разрушительного сбоя.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OutOfMemoryException">
          <source>If you choose to handle the exception, you should include a <ph id="ph1">`catch`</ph> block that calls the <ph id="ph2">&lt;xref:System.Environment.FailFast%2A?displayProperty=nameWithType&gt;</ph> method to terminate your app and add an entry to the system event log, as the following example does.</source>
          <target state="translated">Если вы решили обработки исключения, следует включить <ph id="ph1">`catch`</ph> блок, который вызывает <ph id="ph2">&lt;xref:System.Environment.FailFast%2A?displayProperty=nameWithType&gt;</ph> метод, чтобы завершить работу приложения и добавить запись в журнал событий системы, как и в следующем примере.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OutOfMemoryException">
          <source>Some of the conditions under which the exception is thrown and the actions you can take to eliminate it include the following:</source>
          <target state="translated">Некоторые условия, при которых выдается исключение и действия, которые можно предпринять, чтобы исключить ее включают следующее:</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OutOfMemoryException">
          <source>You are calling the <ph id="ph1">&lt;xref:System.Text.StringBuilder.Insert%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Вы вызываете <ph id="ph1">&lt;xref:System.Text.StringBuilder.Insert%2A?displayProperty=nameWithType&gt;</ph> метод.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OutOfMemoryException">
          <source>You are attempting to increase the length of a <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object beyond the size specified by its <ph id="ph2">&lt;xref:System.Text.StringBuilder.MaxCapacity%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">Попытка увеличить длину <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> объекта за пределами указанного размера его <ph id="ph2">&lt;xref:System.Text.StringBuilder.MaxCapacity%2A?displayProperty=nameWithType&gt;</ph> свойство.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OutOfMemoryException">
          <source>The following example illustrates the <ph id="ph1">&lt;xref:System.OutOfMemoryException&gt;</ph> exception thrown by a call to the <ph id="ph2">&lt;xref:System.Text.StringBuilder.Insert%28System.Int32%2CSystem.String%2CSystem.Int32%29?displayProperty=nameWithType&gt;</ph> method when the example tries to insert a string that would cause the object's <ph id="ph3">&lt;xref:System.Text.StringBuilder.Length%2A&gt;</ph> property to exceed its maximum capacity.</source>
          <target state="translated">В следующем примере демонстрируется <ph id="ph1">&lt;xref:System.OutOfMemoryException&gt;</ph> исключение, которое выдается при вызове <ph id="ph2">&lt;xref:System.Text.StringBuilder.Insert%28System.Int32%2CSystem.String%2CSystem.Int32%29?displayProperty=nameWithType&gt;</ph> метод, если предпринимается попытка вставить строку, которая используется для перевода объекта <ph id="ph3">&lt;xref:System.Text.StringBuilder.Length%2A&gt;</ph> свойство превышение максимальной емкости.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OutOfMemoryException">
          <source>You can do either of the following to address the error:</source>
          <target state="translated">Необходимо выполнить одно из следующих действий, чтобы устранить ошибку:</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OutOfMemoryException">
          <source>Replace the call to the <ph id="ph1">&lt;xref:System.Text.StringBuilder.%23ctor%28System.Int32%2CSystem.Int32%29?displayProperty=nameWithType&gt;</ph> constructor with a call any other <ph id="ph2">&lt;xref:System.Text.StringBuilder&gt;</ph> constructor overload.</source>
          <target state="translated">Замените вызов <ph id="ph1">&lt;xref:System.Text.StringBuilder.%23ctor%28System.Int32%2CSystem.Int32%29?displayProperty=nameWithType&gt;</ph> конструктор с помощью вызова любых других <ph id="ph2">&lt;xref:System.Text.StringBuilder&gt;</ph> перегрузку конструктора.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OutOfMemoryException">
          <source>The maximum capacity of your <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object will be set to its default value, which is <ph id="ph2">&lt;xref:System.Int32.MaxValue?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Максимальная емкость вашей <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> объекта будет присвоено значение по умолчанию, которое является <ph id="ph2">&lt;xref:System.Int32.MaxValue?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OutOfMemoryException">
          <source>Call the <ph id="ph1">&lt;xref:System.Text.StringBuilder.%23ctor%28System.Int32%2CSystem.Int32%29?displayProperty=nameWithType&gt;</ph> constructor with a <ph id="ph2">`maxCapacity`</ph> value that is large enough to accommodate any expansions to the <ph id="ph3">&lt;xref:System.Text.StringBuilder&gt;</ph> object.</source>
          <target state="translated">Вызовите <ph id="ph1">&lt;xref:System.Text.StringBuilder.%23ctor%28System.Int32%2CSystem.Int32%29?displayProperty=nameWithType&gt;</ph> конструктор с <ph id="ph2">`maxCapacity`</ph> значение, которое является достаточно большим, чтобы вместить все расширения для <ph id="ph3">&lt;xref:System.Text.StringBuilder&gt;</ph> объекта.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OutOfMemoryException">
          <source>Your app runs as a 32-bit process.</source>
          <target state="translated">Ваше приложение запускается в виде 32-разрядного процесса.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OutOfMemoryException">
          <source>32-bit processes can allocate a maximum of 2GB of virtual user-mode memory on 32-bit systems, and 4GB of virtual user-mode memory on 64-bit systems.</source>
          <target state="translated">32-разрядные процессы можно выделить более 2 ГБ памяти виртуальной пользовательского режима в 32-разрядных системах и 4 ГБ памяти виртуальной пользовательского режима в 64-разрядных системах.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OutOfMemoryException">
          <source>This can make it more difficult for the common language runtime to allocate sufficient contiguous memory when a large allocation is needed.</source>
          <target state="translated">Это можно сделать более сложным для CLR выделить достаточно непрерывной памяти, при необходимости выделении большого.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OutOfMemoryException">
          <source>In contrast, 64-bit processes can allocate up to 8TB of virtual memory.</source>
          <target state="translated">Напротив 64-разрядных процессов можно выделить до 8 ТБ виртуальной памяти.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OutOfMemoryException">
          <source>To address this exception, recompile your app to target a 64-bit platform.</source>
          <target state="translated">Чтобы устранить это исключение, перекомпилируйте приложение для 64-разрядной платформы.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OutOfMemoryException">
          <source>For information on targeting specific platforms in Visual Studio, see <bpt id="p1">[</bpt>How to: Configure Projects to Target Platforms<ept id="p1">](http://msdn.microsoft.com/library/845302fc-273d-4f81-820a-7296ce91bd76)</ept>.</source>
          <target state="translated">Сведения о предназначенных для конкретных платформ в Visual Studio см. в разделе <bpt id="p1">[</bpt>как: Настройка проекта для конкретной платформы<ept id="p1">](http://msdn.microsoft.com/library/845302fc-273d-4f81-820a-7296ce91bd76)</ept>.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OutOfMemoryException">
          <source>Your app is leaking unmanaged resources</source>
          <target state="translated">В приложении существует утечка неуправляемых ресурсов</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OutOfMemoryException">
          <source>Although the garbage collector is able to free memory allocated to managed types, it does not manage memory allocated to unmanaged resources such as operating system handles (including handles to files, memory-mapped files, pipes, registry keys, and wait handles) and memory blocks allocated directly by Windows API calls or by calls to memory allocation functions such as <ph id="ph1">`malloc`</ph>.</source>
          <target state="translated">Хотя сборщик мусора может освободить память, выделенная для управляемых типов, он не поддерживает управление память, выделенная для неуправляемых ресурсов, таких как операционная система обрабатывает (включая указатели на файлы, отображенные в память файлы, каналы, разделов реестра и дескрипторы ожидания) и блоки памяти, выделенные непосредственно с помощью вызовов Windows API или вызовы функций выделения памяти, такие как <ph id="ph1">`malloc`</ph>.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OutOfMemoryException">
          <source>Types that consume unmanaged resources implement the <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> interface.</source>
          <target state="translated">Типы, которые используют неуправляемые ресурсы реализовывать <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> интерфейса.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OutOfMemoryException">
          <source>If you are consuming a type that uses unmanaged resources, you should be sure to call its <ph id="ph1">&lt;xref:System.IDisposable.Dispose%2A?displayProperty=nameWithType&gt;</ph> method when you have finished using it.</source>
          <target state="translated">Если, используют тип, который использует неуправляемые ресурсы, следует убедиться, что вызывается его <ph id="ph1">&lt;xref:System.IDisposable.Dispose%2A?displayProperty=nameWithType&gt;</ph> метод после завершения его использования.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OutOfMemoryException">
          <source>(Some types also implement a <ph id="ph1">`Close`</ph> method that is identical in function to a <ph id="ph2">`Dispose`</ph> method.) For more information, see the <bpt id="p1">[</bpt>Using Objects That Implement IDisposable<ept id="p1">](~/docs/standard/garbage-collection/using-objects.md)</ept> topic.</source>
          <target state="translated">(Некоторые типы также реализуют <ph id="ph1">`Close`</ph> метод, идентичный функции <ph id="ph2">`Dispose`</ph> метод.) Дополнительные сведения см. в разделе <bpt id="p1">[</bpt>с помощью объектов, реализовывать IDisposable<ept id="p1">](~/docs/standard/garbage-collection/using-objects.md)</ept> раздела.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OutOfMemoryException">
          <source>If you have created a type that uses unmanaged resources, make sure that you have implemented the Dispose pattern and, if necessary, supplied a finalizer.</source>
          <target state="translated">Если созданный тип, который использует неуправляемые ресурсы, убедитесь, что реализации шаблона удаления и, при необходимости, предоставленный метод завершения.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OutOfMemoryException">
          <source>For more information, see the <bpt id="p1">[</bpt>Dispose Pattern<ept id="p1">](~/docs/standard/design-guidelines/dispose-pattern.md)</ept>, <bpt id="p2">[</bpt>Implementing a Dispose Method<ept id="p2">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>, and <ph id="ph1">&lt;xref:System.Object.Finalize%2A?displayProperty=nameWithType&gt;</ph> topics.</source>
          <target state="translated">Дополнительные сведения см. в разделе <bpt id="p1">[</bpt>шаблон Dispose<ept id="p1">](~/docs/standard/design-guidelines/dispose-pattern.md)</ept>, <bpt id="p2">[</bpt>метода<ept id="p2">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>, и <ph id="ph1">&lt;xref:System.Object.Finalize%2A?displayProperty=nameWithType&gt;</ph> разделы.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OutOfMemoryException">
          <source>You are attempting to create a large array in a 64-bit process.</source>
          <target state="translated">Вы пытаетесь создать большой массив в 64-разрядном процессе.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OutOfMemoryException">
          <source>By default, the common language runtime does not allow single objects whose size exceeds 2GB.</source>
          <target state="translated">По умолчанию общеязыковая среда выполнения не разрешают отдельных объектов, размер которых превышает 2 ГБ.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OutOfMemoryException">
          <source>To override this default, you can use the  configuration file setting to enable arrays whose total size exceeds 2 GB.</source>
          <target state="translated">Чтобы переопределить это поведение по умолчанию, можно использовать параметр файла конфигурации для включения массивов, общий размер которых превышает 2 ГБ.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OutOfMemoryException">
          <source>You are working with very large sets of data (such as arrays, collections, or database data sets) in memory.</source>
          <target state="translated">Вы работаете с очень большими наборами данных (например, массивы, коллекции или наборы данных для базы данных) в памяти.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OutOfMemoryException">
          <source>When data structures or data sets that reside in memory become so large that the common language runtime is unable to allocate enough contiguous memory for them, an <ph id="ph1">&lt;xref:System.OutOfMemoryException&gt;</ph> exception results.</source>
          <target state="translated">Если структуры данных или наборов данных, которые находятся в памяти увеличиться настолько, что общеязыковая среда выполнения не удалось выделить достаточно непрерывной памяти для их создания, <ph id="ph1">&lt;xref:System.OutOfMemoryException&gt;</ph> результаты исключения.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OutOfMemoryException">
          <source>To prevent the <ph id="ph1">&lt;xref:System.OutOfMemoryException&gt;</ph> exceptions, you must modify your application so that less data is resident in memory, or the data is divided into segments that require smaller memory allocations.</source>
          <target state="translated">Чтобы предотвратить <ph id="ph1">&lt;xref:System.OutOfMemoryException&gt;</ph> исключения, необходимо изменить приложение так, чтобы меньше данных, находящихся в памяти или данные разделяются на сегменты, которые требуется меньше операций выделения памяти.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OutOfMemoryException">
          <source>For example:</source>
          <target state="translated">Пример:</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OutOfMemoryException">
          <source>If you are retrieving all of the data from a database and then filtering it in your app to minimize trips to the server, you should modify your queries to return only the subset of data that your app needs.</source>
          <target state="translated">При получении данных из базы данных и их фильтрации в приложении, чтобы свести к минимуму обработки на сервере, следует изменить запросы, чтобы вернуть только подмножество данных, необходимый вашему приложению.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OutOfMemoryException">
          <source>When working with large tables, multiple queries are almost always more efficient than retrieving all of the data in a single table and then manipulating it.</source>
          <target state="translated">При работе с большими таблицами, несколько запросов почти всегда являются более эффективным, чем извлечение всех данных в одной таблице и затем обработка.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OutOfMemoryException">
          <source>If you are executing queries that users create dynamically, you should ensure that the number of records returned by the query is limited.</source>
          <target state="translated">При выполнении запросов, которые динамически создать пользователей, следует убедиться, что ограничено числом записей, возвращаемых запросом.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OutOfMemoryException">
          <source>If you are using large arrays or other collection objects whose size results in an <ph id="ph1">&lt;xref:System.OutOfMemoryException&gt;</ph> exception, you should modify your application to work the data in subsets rather than to work with it all at once.</source>
          <target state="translated">Если вы используете больших массивов или других коллекций объектов, результаты которого размер в <ph id="ph1">&lt;xref:System.OutOfMemoryException&gt;</ph> исключения, следует изменить приложения для работы в подмножеств данных, а не для работы с ней все сразу.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OutOfMemoryException">
          <source>The following example gets a array that consists of 200 million floating-point values and then calculates their mean.</source>
          <target state="translated">В следующем примере возвращается массив, который состоит из миллионов 200 значений с плавающей запятой, а затем вычисляет их среднее значение.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OutOfMemoryException">
          <source>The output from the example shows that, because the example stores the entire array in memory before it calculates the mean, an <ph id="ph1">&lt;xref:System.OutOfMemoryException&gt;</ph> is is thrown.</source>
          <target state="translated">Выходные данные примера показано, что, так как в примере сохраняется весь массив в памяти, прежде чем он вычисляет среднее <ph id="ph1">&lt;xref:System.OutOfMemoryException&gt;</ph> — создается исключение.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OutOfMemoryException">
          <source>The following example eliminates the <ph id="ph1">&lt;xref:System.OutOfMemoryException&gt;</ph> exception by processing the incoming data without storing the entire data set in memory, serializing the data to a file if necessary to permit further processing (these lines are commented out in the example, since in this case they produce a file whose size is greater than 1GB), and returning the calculated mean and the number of cases to the calling routine.</source>
          <target state="translated">Следующий пример исключает <ph id="ph1">&lt;xref:System.OutOfMemoryException&gt;</ph> исключение при обработке входящих данных без сохранения весь набор данных в памяти, сериализации данных в файл, если необходимо разрешить дальнейшей обработке (эти строки будут закомментированы в примере Поскольку в этом случае они создают файл, размер которого превышает 1 ГБ) и возвращает вычисляемые среднее и количество вариантов в вызывающую программу.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OutOfMemoryException">
          <source>You are repeatedly concatenating large strings.</source>
          <target state="translated">Несколько раз объединении больших строк.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OutOfMemoryException">
          <source>Because strings are immutable, each string concatenation operation creates a new string.</source>
          <target state="translated">Поскольку строки являются неизменяемыми, каждая строка операции объединения создает новую строку.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OutOfMemoryException">
          <source>The impact for small strings, or for a small number of concatenation operations, is negligible.</source>
          <target state="translated">Для коротких строк, или для небольшого числа операций объединения влияние незначительно.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OutOfMemoryException">
          <source>But for large strings or a very large number of concatenation operations, string concatenation can lead to a large number of memory allocations and memory fragmentation, poor performance, and possibly <ph id="ph1">&lt;xref:System.OutOfMemoryException&gt;</ph> exceptions.</source>
          <target state="translated">Но для больших строк или большое количество операций объединения, объединение строк может привести к большое число операций выделения памяти и фрагментации памяти, низкая производительность и, возможно, <ph id="ph1">&lt;xref:System.OutOfMemoryException&gt;</ph> исключения.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OutOfMemoryException">
          <source>When concatenating large strings or performing a large number of concatenation operations, you should use the <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> class instead of the <ph id="ph2">&lt;xref:System.String&gt;</ph> class.</source>
          <target state="translated">При объединении больших строк или выполнения большого количества операций объединения, следует использовать <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> вместо класса <ph id="ph2">&lt;xref:System.String&gt;</ph> класса.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OutOfMemoryException">
          <source>When you have finished manipulating the string, convert the <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> instance to a string by calling the <ph id="ph2">&lt;xref:System.Text.StringBuilder.ToString%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">После завершения обработки строки преобразовать <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> экземпляр в строку путем вызова <ph id="ph2">&lt;xref:System.Text.StringBuilder.ToString%2A?displayProperty=nameWithType&gt;</ph> метод.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OutOfMemoryException">
          <source>You pin a large number of objects in memory.</source>
          <target state="translated">Закрепить большое число объектов в памяти.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OutOfMemoryException">
          <source>Pinning a large number of objects in memory for long periods can make it difficult for the garbage collector to allocate contiguous blocks of memory.</source>
          <target state="translated">Закрепление большое число объектов в памяти для длительного может усложнить для сборщика мусора для выделения смежных блоков памяти.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OutOfMemoryException">
          <source>If you've pinned a large number of objects in memory, for example by using the <ph id="ph1">`fixed`</ph> statement in C# or by calling the <ph id="ph2">&lt;xref:System.Runtime.InteropServices.GCHandle.Alloc%28System.Object%2CSystem.Runtime.InteropServices.GCHandleType%29?displayProperty=nameWithType&gt;</ph> method with a handle type of <ph id="ph3">&lt;xref:System.Runtime.InteropServices.GCHandleType.Pinned?displayProperty=nameWithType&gt;</ph>, you can do the following to address the <ph id="ph4">&lt;xref:System.OutOfMemoryException&gt;</ph> exception.</source>
          <target state="translated">Если закрепленных большое число объектов в памяти, например с помощью <ph id="ph1">`fixed`</ph> инструкции на языке C#, или путем вызова <ph id="ph2">&lt;xref:System.Runtime.InteropServices.GCHandle.Alloc%28System.Object%2CSystem.Runtime.InteropServices.GCHandleType%29?displayProperty=nameWithType&gt;</ph> метода с типом дескриптор <ph id="ph3">&lt;xref:System.Runtime.InteropServices.GCHandleType.Pinned?displayProperty=nameWithType&gt;</ph>, необходимо выполнить следующую команду, чтобы адрес <ph id="ph4">&lt;xref:System.OutOfMemoryException&gt;</ph> исключение.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OutOfMemoryException">
          <source>Evaluate whether each object really needs to be pinned,</source>
          <target state="translated">Оценить, выполнен ли каждый объект нужно закрепить.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OutOfMemoryException">
          <source>Ensure that each object is unpinned as soon as possible.</source>
          <target state="translated">Убедитесь, что каждый объект Незакрепленным как можно быстрее.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OutOfMemoryException">
          <source>Make sure that each call to the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.GCHandle.Alloc%28System.Object%2CSystem.Runtime.InteropServices.GCHandleType%29?displayProperty=nameWithType&gt;</ph> method to pin memory has a corresponding call to the <ph id="ph2">&lt;xref:System.Runtime.InteropServices.GCHandle.Free%2A?displayProperty=nameWithType&gt;</ph> method to unpin that memory.</source>
          <target state="translated">Убедитесь, что при каждом вызове функции <ph id="ph1">&lt;xref:System.Runtime.InteropServices.GCHandle.Alloc%28System.Object%2CSystem.Runtime.InteropServices.GCHandleType%29?displayProperty=nameWithType&gt;</ph> метод память ПИН-код имеет соответствующий вызов <ph id="ph2">&lt;xref:System.Runtime.InteropServices.GCHandle.Free%2A?displayProperty=nameWithType&gt;</ph> метод, чтобы отменить закрепление этой памяти.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OutOfMemoryException">
          <source>The following Microsoft intermediate (MSIL) instructions throw an <ph id="ph1">&lt;xref:System.OutOfMemoryException&gt;</ph> exception:</source>
          <target state="translated">Корпорации Майкрософт, вызывать инструкции промежуточного (MSIL) <ph id="ph1">&lt;xref:System.OutOfMemoryException&gt;</ph> исключение:</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OutOfMemoryException">
          <source><bpt id="p1">[</bpt>box<ept id="p1">](http://msdn.microsoft.com/library/system.reflection.emit.opcodes.box.aspx)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>box<ept id="p1">](http://msdn.microsoft.com/library/system.reflection.emit.opcodes.box.aspx)</ept></target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OutOfMemoryException">
          <source><bpt id="p1">[</bpt>newarr<ept id="p1">](http://msdn.microsoft.com/library/system.reflection.emit.opcodes.newarr.aspx)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>newarr<ept id="p1">](http://msdn.microsoft.com/library/system.reflection.emit.opcodes.newarr.aspx)</ept></target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OutOfMemoryException">
          <source><bpt id="p1">[</bpt>newobj<ept id="p1">](http://msdn.microsoft.com/library/system.reflection.emit.opcodes.newobj.aspx)</ept>newobj</source>
          <target state="translated"><bpt id="p1">[</bpt>newobj<ept id="p1">](http://msdn.microsoft.com/library/system.reflection.emit.opcodes.newobj.aspx)</ept>newobj</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OutOfMemoryException">
          <source><ph id="ph1">&lt;xref:System.OutOfMemoryException&gt;</ph> uses the HRESULT <ph id="ph2">`COR_E_OUTOFMEMORY`</ph>, which has the value 0x8007000E.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.OutOfMemoryException&gt;</ph> использует значение HRESULT <ph id="ph2">`COR_E_OUTOFMEMORY`</ph>, который имеет значение 0x8007000E.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OutOfMemoryException">
          <source>For a list of initial property values for an instance of <ph id="ph1">&lt;xref:System.OutOfMemoryException&gt;</ph>, see the <ph id="ph2">&lt;xref:System.OutOfMemoryException.%23ctor%2A&gt;</ph> constructors.</source>
          <target state="translated">Список начальных значений свойств для экземпляра <ph id="ph1">&lt;xref:System.OutOfMemoryException&gt;</ph>, в разделе <ph id="ph2">&lt;xref:System.OutOfMemoryException.%23ctor%2A&gt;</ph> конструкторы.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OutOfMemoryException">
          <source>The value of the inherited <ph id="ph1">&lt;xref:System.Exception.Data%2A&gt;</ph> property is always <ph id="ph2">`null`</ph>.</source>
          <target state="translated">Значение наследуемого <ph id="ph1">&lt;xref:System.Exception.Data%2A&gt;</ph> свойство всегда имеет <ph id="ph2">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="T:System.OutOfMemoryException">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.OutOfMemoryException" /&gt;</ph> class.</source>
          <target state="translated">Инициализирует новый экземпляр класса <ph id="ph1">&lt;see cref="T:System.OutOfMemoryException" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.OutOfMemoryException.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.OutOfMemoryException" /&gt;</ph> class.</source>
          <target state="translated">Инициализирует новый экземпляр класса <ph id="ph1">&lt;see cref="T:System.OutOfMemoryException" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.OutOfMemoryException.#ctor">
          <source>This constructor initializes the <ph id="ph1">&lt;xref:System.Exception.Message%2A&gt;</ph> property of the new instance to a system-supplied message that describes the error, such as "There was not enough memory to continue the execution of the program."</source>
          <target state="translated">Этот конструктор инициализирует <ph id="ph1">&lt;xref:System.Exception.Message%2A&gt;</ph> свойств нового экземпляра системным сообщением, содержащим описание ошибки, такие как «Не было недостаточно памяти для продолжения выполнения программы.»</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.OutOfMemoryException.#ctor">
          <source>This message takes into account the current system culture.</source>
          <target state="translated">Это сообщение учитывает текущую культуру системы.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.OutOfMemoryException.#ctor">
          <source>The following table shows the initial property values for an instance of <ph id="ph1">&lt;xref:System.OutOfMemoryException&gt;</ph>.</source>
          <target state="translated">В следующей таблице представлены исходные значения свойств экземпляра класса <ph id="ph1">&lt;xref:System.OutOfMemoryException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.OutOfMemoryException.#ctor">
          <source>Property</source>
          <target state="translated">Свойство.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.OutOfMemoryException.#ctor">
          <source>Value</source>
          <target state="translated">Значение</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.OutOfMemoryException.#ctor">
          <source><ph id="ph1">`null`</ph>.</source>
          <target state="translated"><ph id="ph1">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.OutOfMemoryException.#ctor">
          <source>The localized error message string.</source>
          <target state="translated">Строка локализованного сообщения об ошибке.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.OutOfMemoryException.#ctor(System.String)">
          <source>The message that describes the error.</source>
          <target state="translated">Сообщение, описывающее ошибку.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.OutOfMemoryException.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.OutOfMemoryException" /&gt;</ph> class with a specified error message.</source>
          <target state="translated">Инициализирует новый экземпляр класса <ph id="ph1">&lt;see cref="T:System.OutOfMemoryException" /&gt;</ph> с указанным сообщением об ошибке.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.OutOfMemoryException.#ctor(System.String)">
          <source>The content of the <ph id="ph1">`message`</ph> parameter is intended to be understood by humans.</source>
          <target state="translated">Содержимое параметра <ph id="ph1">`message`</ph> должно быть понятно пользователям.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.OutOfMemoryException.#ctor(System.String)">
          <source>The caller of this constructor is required to ensure that this string has been localized for the current system culture.</source>
          <target state="translated">Код, вызывающий этот конструктор, должен обеспечить локализацию данной строки в соответствии с текущим языком и региональными параметрами системы.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.OutOfMemoryException.#ctor(System.String)">
          <source>The following table shows the initial property values for an instance of <ph id="ph1">&lt;xref:System.OutOfMemoryException&gt;</ph>.</source>
          <target state="translated">В следующей таблице представлены исходные значения свойств экземпляра класса <ph id="ph1">&lt;xref:System.OutOfMemoryException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.OutOfMemoryException.#ctor(System.String)">
          <source>Property</source>
          <target state="translated">Свойство.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.OutOfMemoryException.#ctor(System.String)">
          <source>Value</source>
          <target state="translated">Значение</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.OutOfMemoryException.#ctor(System.String)">
          <source>A null reference (<ph id="ph1">`Nothing`</ph> in Visual Basic).</source>
          <target state="translated">Пустая ссылка (<ph id="ph1">`Nothing`</ph> в Visual Basic).</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.OutOfMemoryException.#ctor(System.String)">
          <source>The error message string.</source>
          <target state="translated">Строка сообщения об ошибке.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.OutOfMemoryException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The object that holds the serialized object data.</source>
          <target state="translated">Объект, содержащий сериализованные данные объекта.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.OutOfMemoryException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The contextual information about the source or destination.</source>
          <target state="translated">Контекстные сведения об источнике или назначении.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.OutOfMemoryException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.OutOfMemoryException" /&gt;</ph> class with serialized data.</source>
          <target state="translated">Инициализирует новый экземпляр класса <ph id="ph1">&lt;see cref="T:System.OutOfMemoryException" /&gt;</ph> с сериализованными данными.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.OutOfMemoryException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>This constructor is called during deserialization to reconstitute the exception object transmitted over a stream.</source>
          <target state="translated">Данный конструктор вызывается в процессе десериализации для воссоздания объекта исключения, переданного в потоке.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.OutOfMemoryException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>For more information, see <bpt id="p1">[</bpt>XML and SOAP Serialization<ept id="p1">](~/docs/standard/serialization/xml-and-soap-serialization.md)</ept>.</source>
          <target state="translated">Дополнительные сведения см. в разделе <bpt id="p1">[</bpt>сериализации XML и SOAP<ept id="p1">](~/docs/standard/serialization/xml-and-soap-serialization.md)</ept>.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.OutOfMemoryException.#ctor(System.String,System.Exception)">
          <source>The error message that explains the reason for the exception.</source>
          <target state="translated">Сообщение об ошибке, указывающее причину создания исключения.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.OutOfMemoryException.#ctor(System.String,System.Exception)">
          <source>The exception that is the cause of the current exception.</source>
          <target state="translated">Исключение, которое является причиной текущего исключения.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.OutOfMemoryException.#ctor(System.String,System.Exception)">
          <source>If the <bpt id="p1">&lt;c&gt;</bpt>innerException<ept id="p1">&lt;/c&gt;</ept> parameter is not a null reference (<ph id="ph1">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic), the current exception is raised in a <ph id="ph2">&lt;see langword="catch" /&gt;</ph> block that handles the inner exception.</source>
          <target state="translated">Если параметр <bpt id="p1">&lt;c&gt;</bpt>innerException<ept id="p1">&lt;/c&gt;</ept> не является пустой ссылкой (<ph id="ph1">&lt;see langword="Nothing" /&gt;</ph> в Visual Basic), текущее исключение создается в блоке <ph id="ph2">&lt;see langword="catch" /&gt;</ph>, обрабатывающем внутреннее исключение.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.OutOfMemoryException.#ctor(System.String,System.Exception)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.OutOfMemoryException" /&gt;</ph> class with a specified error message and a reference to the inner exception that is the cause of this exception.</source>
          <target state="translated">Инициализирует новый экземпляр класса <ph id="ph1">&lt;see cref="T:System.OutOfMemoryException" /&gt;</ph> указанным сообщением об ошибке и ссылкой на внутреннее исключение, вызвавшее данное исключение.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.OutOfMemoryException.#ctor(System.String,System.Exception)">
          <source>An exception that is thrown as a direct result of a previous exception can include a reference to the previous exception in the <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property.</source>
          <target state="translated">Исключение, созданное как прямой результат предыдущего исключения, может содержать в свойстве <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> ссылку на предыдущее исключение.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.OutOfMemoryException.#ctor(System.String,System.Exception)">
          <source>The <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property returns the same value that is passed into the constructor, or a null reference (<ph id="ph2">`Nothing`</ph> in Visual Basic) if the <ph id="ph3">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property does not supply the inner exception value to the constructor.</source>
          <target state="translated">Свойство <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> возвращает то же значение, которое передается конструктору, или пустую ссылку (<ph id="ph2">`Nothing`</ph> в Visual Basic), если свойство <ph id="ph3">&lt;xref:System.Exception.InnerException%2A&gt;</ph> не предоставляет конструктору значение внутреннего исключения.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.OutOfMemoryException.#ctor(System.String,System.Exception)">
          <source>The following table shows the initial property values for an instance of <ph id="ph1">&lt;xref:System.OutOfMemoryException&gt;</ph>.</source>
          <target state="translated">В следующей таблице представлены исходные значения свойств экземпляра класса <ph id="ph1">&lt;xref:System.OutOfMemoryException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.OutOfMemoryException.#ctor(System.String,System.Exception)">
          <source>Property</source>
          <target state="translated">Свойство.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.OutOfMemoryException.#ctor(System.String,System.Exception)">
          <source>Value</source>
          <target state="translated">Значение</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.OutOfMemoryException.#ctor(System.String,System.Exception)">
          <source>The inner exception reference.</source>
          <target state="translated">Ссылка на внутреннее исключение.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.OutOfMemoryException.#ctor(System.String,System.Exception)">
          <source>The error message string.</source>
          <target state="translated">Строка сообщения об ошибке.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>