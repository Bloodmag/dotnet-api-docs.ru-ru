<Type Name="OutOfMemoryException" FullName="System.OutOfMemoryException">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a0dd6e3c72f6ed9dea74eaed1b13a4a33e73d0da" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36430865" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class OutOfMemoryException : SystemException" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit OutOfMemoryException extends System.SystemException" />
  <TypeSignature Language="DocId" Value="T:System.OutOfMemoryException" />
  <TypeSignature Language="VB.NET" Value="Public Class OutOfMemoryException&#xA;Inherits SystemException" />
  <TypeSignature Language="C++ CLI" Value="public ref class OutOfMemoryException : SystemException" />
  <TypeSignature Language="F#" Value="type OutOfMemoryException = class&#xA;    inherit SystemException" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Exception</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-4.5">System.SystemException</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Исключение, которое выбрасывается при недостаточном объеме памяти для выполнения программы.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.OutOfMemoryException> Исключений имеет две основных причины:  
  
-   Вы пытаетесь развернуть <xref:System.Text.StringBuilder> объекта за пределами определяется его <xref:System.Text.StringBuilder.MaxCapacity%2A?displayProperty=nameWithType> свойство.  
  
-   Общеязыковая среда выполнения не удается выделить достаточно непрерывной памяти, для успешного выполнения операции. Это исключение могут создаваться любое свойство назначения или вызов метода, требует выделения памяти. Дополнительные сведения о причине <xref:System.OutOfMemoryException> исключения, в разделе [«Out of Memory» не относится к физической памяти](http://blogs.msdn.com/b/ericlippert/archive/2009/06/08/out-of-memory-does-not-refer-to-physical-memory.aspx).  
  
     Этот тип <xref:System.OutOfMemoryException> исключение представляет разрушительного сбоя. Если вы решили обработки исключения, следует включить `catch` блок, который вызывает <xref:System.Environment.FailFast%2A?displayProperty=nameWithType> метод, чтобы завершить работу приложения и добавить запись в журнал событий системы, как и в следующем примере.  
  
     [!code-csharp[System.OutOfMemoryException#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.outofmemoryexception/cs/failfast1.cs#2)]
     [!code-vb[System.OutOfMemoryException#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.outofmemoryexception/vb/failfast1.vb#2)]  
  
 Некоторые условия, при которых выдается исключение и действия, которые можно предпринять, чтобы исключить ее включают следующее:  
  
 Вы вызываете <xref:System.Text.StringBuilder.Insert%2A?displayProperty=nameWithType> метод.  
 Попытка увеличить длину <xref:System.Text.StringBuilder> объекта за пределами указанного размера его <xref:System.Text.StringBuilder.MaxCapacity%2A?displayProperty=nameWithType> свойство. В следующем примере демонстрируется <xref:System.OutOfMemoryException> исключение, которое выдается при вызове <xref:System.Text.StringBuilder.Insert%28System.Int32%2CSystem.String%2CSystem.Int32%29?displayProperty=nameWithType> метод, если предпринимается попытка вставить строку, которая используется для перевода объекта <xref:System.Text.StringBuilder.Length%2A> свойство превышение максимальной емкости.  
  
 [!code-csharp[System.OutOfMemoryException#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.outofmemoryexception/cs/sb_example1.cs#1)]
 [!code-vb[System.OutOfMemoryException#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.outofmemoryexception/vb/sb_example1.vb#1)]  
  
 Необходимо выполнить одно из следующих действий, чтобы устранить ошибку:  
  
-   Замените вызов <xref:System.Text.StringBuilder.%23ctor%28System.Int32%2CSystem.Int32%29?displayProperty=nameWithType> конструктор с помощью вызова любых других <xref:System.Text.StringBuilder> перегрузку конструктора. Максимальная емкость вашей <xref:System.Text.StringBuilder> объекта будет присвоено значение по умолчанию, которое является <xref:System.Int32.MaxValue?displayProperty=nameWithType>.  
  
-   Вызовите <xref:System.Text.StringBuilder.%23ctor%28System.Int32%2CSystem.Int32%29?displayProperty=nameWithType> конструктор с `maxCapacity` значение, которое является достаточно большим, чтобы вместить все расширения для <xref:System.Text.StringBuilder> объекта.  
  
 Ваше приложение запускается в виде 32-разрядного процесса.  
 32-разрядные процессы можно выделить более 2 ГБ памяти виртуальной пользовательского режима в 32-разрядных системах и 4 ГБ памяти виртуальной пользовательского режима в 64-разрядных системах. Это можно сделать более сложным для CLR выделить достаточно непрерывной памяти, при необходимости выделении большого. Напротив 64-разрядных процессов можно выделить до 8 ТБ виртуальной памяти. Чтобы устранить это исключение, перекомпилируйте приложение для 64-разрядной платформы. Сведения о предназначенных для конкретных платформ в Visual Studio см. в разделе [как: Настройка проекта для конкретной платформы](http://msdn.microsoft.com/library/845302fc-273d-4f81-820a-7296ce91bd76).  
  
 В приложении существует утечка неуправляемых ресурсов  
 Хотя сборщик мусора может освободить память, выделенная для управляемых типов, он не поддерживает управление память, выделенная для неуправляемых ресурсов, таких как операционная система обрабатывает (включая указатели на файлы, отображенные в память файлы, каналы, разделов реестра и дескрипторы ожидания) и блоки памяти, выделенные непосредственно с помощью вызовов Windows API или вызовы функций выделения памяти, такие как `malloc`. Типы, которые используют неуправляемые ресурсы реализовывать <xref:System.IDisposable> интерфейса.  
  
 Если, используют тип, который использует неуправляемые ресурсы, следует убедиться, что вызывается его <xref:System.IDisposable.Dispose%2A?displayProperty=nameWithType> метод после завершения его использования. (Некоторые типы также реализуют `Close` метод, идентичный функции `Dispose` метод.) Дополнительные сведения см. в разделе [с помощью объектов, реализовывать IDisposable](~/docs/standard/garbage-collection/using-objects.md) раздела.  
  
 Если созданный тип, который использует неуправляемые ресурсы, убедитесь, что реализации шаблона удаления и, при необходимости, предоставленный метод завершения. Дополнительные сведения см. в разделе [шаблон Dispose](~/docs/standard/design-guidelines/dispose-pattern.md), [метода](~/docs/standard/garbage-collection/implementing-dispose.md), и <xref:System.Object.Finalize%2A?displayProperty=nameWithType> разделы.  
  
 Вы пытаетесь создать большой массив в 64-разрядном процессе.  
 По умолчанию общеязыковая среда выполнения не разрешают отдельных объектов, размер которых превышает 2 ГБ. Чтобы переопределить это поведение по умолчанию, можно использовать параметр файла конфигурации для включения массивов, общий размер которых превышает 2 ГБ.  
  
 Вы работаете с очень большими наборами данных (например, массивы, коллекции или наборы данных для базы данных) в памяти.  
 Если структуры данных или наборов данных, которые находятся в памяти увеличиться настолько, что общеязыковая среда выполнения не удалось выделить достаточно непрерывной памяти для их создания, <xref:System.OutOfMemoryException> результаты исключения.  
  
 Чтобы предотвратить <xref:System.OutOfMemoryException> исключения, необходимо изменить приложение так, чтобы меньше данных, находящихся в памяти или данные разделяются на сегменты, которые требуется меньше операций выделения памяти. Пример:  
  
-   При получении данных из базы данных и их фильтрации в приложении, чтобы свести к минимуму обработки на сервере, следует изменить запросы, чтобы вернуть только подмножество данных, необходимый вашему приложению. При работе с большими таблицами, несколько запросов почти всегда являются более эффективным, чем извлечение всех данных в одной таблице и затем обработка.  
  
-   При выполнении запросов, которые динамически создать пользователей, следует убедиться, что ограничено числом записей, возвращаемых запросом.  
  
-   Если вы используете больших массивов или других коллекций объектов, результаты которого размер в <xref:System.OutOfMemoryException> исключения, следует изменить приложения для работы в подмножеств данных, а не для работы с ней все сразу.  
  
 В следующем примере возвращается массив, который состоит из миллионов 200 значений с плавающей запятой, а затем вычисляет их среднее значение. Выходные данные примера показано, что, так как в примере сохраняется весь массив в памяти, прежде чем он вычисляет среднее <xref:System.OutOfMemoryException> — создается исключение.  
  
 [!code-csharp[System.OutOfMemoryException#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.outofmemoryexception/cs/data1.cs#3)]
 [!code-vb[System.OutOfMemoryException#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.outofmemoryexception/vb/data1.vb#3)]  
  
 Следующий пример исключает <xref:System.OutOfMemoryException> исключение при обработке входящих данных без сохранения весь набор данных в памяти, сериализации данных в файл, если необходимо разрешить дальнейшей обработке (эти строки будут закомментированы в примере Поскольку в этом случае они создают файл, размер которого превышает 1 ГБ) и возвращает вычисляемые среднее и количество вариантов в вызывающую программу.  
  
 [!code-csharp[System.OutOfMemoryException#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.outofmemoryexception/cs/data2.cs#4)]
 [!code-vb[System.OutOfMemoryException#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.outofmemoryexception/vb/data2.vb#4)]  
  
 Несколько раз объединении больших строк.  
 Поскольку строки являются неизменяемыми, каждая строка операции объединения создает новую строку. Для коротких строк, или для небольшого числа операций объединения влияние незначительно. Но для больших строк или большое количество операций объединения, объединение строк может привести к большое число операций выделения памяти и фрагментации памяти, низкая производительность и, возможно, <xref:System.OutOfMemoryException> исключения.  
  
 При объединении больших строк или выполнения большого количества операций объединения, следует использовать <xref:System.Text.StringBuilder> вместо класса <xref:System.String> класса. После завершения обработки строки преобразовать <xref:System.Text.StringBuilder> экземпляр в строку путем вызова <xref:System.Text.StringBuilder.ToString%2A?displayProperty=nameWithType> метод.  
  
 Закрепить большое число объектов в памяти.  
 Закрепление большое число объектов в памяти для длительного может усложнить для сборщика мусора для выделения смежных блоков памяти. Если закрепленных большое число объектов в памяти, например с помощью `fixed` инструкции на языке C#, или путем вызова <xref:System.Runtime.InteropServices.GCHandle.Alloc%28System.Object%2CSystem.Runtime.InteropServices.GCHandleType%29?displayProperty=nameWithType> метода с типом дескриптор <xref:System.Runtime.InteropServices.GCHandleType.Pinned?displayProperty=nameWithType>, необходимо выполнить следующую команду, чтобы адрес <xref:System.OutOfMemoryException> исключение.  
  
-   Оценить, выполнен ли каждый объект нужно закрепить.  
  
-   Убедитесь, что каждый объект Незакрепленным как можно быстрее.  
  
-   Убедитесь, что при каждом вызове функции <xref:System.Runtime.InteropServices.GCHandle.Alloc%28System.Object%2CSystem.Runtime.InteropServices.GCHandleType%29?displayProperty=nameWithType> метод память ПИН-код имеет соответствующий вызов <xref:System.Runtime.InteropServices.GCHandle.Free%2A?displayProperty=nameWithType> метод, чтобы отменить закрепление этой памяти.  
  
 Корпорации Майкрософт, вызывать инструкции промежуточного (MSIL) <xref:System.OutOfMemoryException> исключение:  
  
-   [Поле](http://msdn.microsoft.com/library/system.reflection.emit.opcodes.box.aspx)  
  
-   [newarr](http://msdn.microsoft.com/library/system.reflection.emit.opcodes.newarr.aspx)  
  
-   [newobj](http://msdn.microsoft.com/library/system.reflection.emit.opcodes.newobj.aspx)newobj  
  
 <xref:System.OutOfMemoryException> использует значение HRESULT `COR_E_OUTOFMEMORY`, который имеет значение 0x8007000E.  
  
 Список начальных значений свойств для экземпляра <xref:System.OutOfMemoryException>, в разделе <xref:System.OutOfMemoryException.%23ctor%2A> конструкторы.  
  
> [!NOTE]
>  Значение наследуемого <xref:System.Exception.Data%2A> свойство всегда имеет `null`.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Exception" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.OutOfMemoryException" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OutOfMemoryException ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.OutOfMemoryException.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OutOfMemoryException();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.OutOfMemoryException" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот конструктор инициализирует <xref:System.Exception.Message%2A> свойств нового экземпляра системным сообщением, содержащим описание ошибки, такие как «Не было недостаточно памяти для продолжения выполнения программы.» Это сообщение учитывает текущую культуру системы.  
  
 В следующей таблице представлены исходные значения свойств экземпляра класса <xref:System.OutOfMemoryException>.  
  
|Свойство.|Значение|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|`null`.|  
|<xref:System.Exception.Message%2A>|Строка локализованного сообщения об ошибке.|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OutOfMemoryException (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.OutOfMemoryException.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OutOfMemoryException(System::String ^ message);" />
      <MemberSignature Language="F#" Value="new OutOfMemoryException : string -&gt; OutOfMemoryException" Usage="new System.OutOfMemoryException message" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">Сообщение, описывающее ошибку.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.OutOfMemoryException" /> с указанным сообщением об ошибке.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Содержимое параметра `message` должно быть понятно пользователям. Код, вызывающий этот конструктор, должен обеспечить локализацию данной строки в соответствии с текущим языком и региональными параметрами системы.  
  
 В следующей таблице представлены исходные значения свойств экземпляра класса <xref:System.OutOfMemoryException>.  
  
|Свойство.|Значение|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|Пустая ссылка (`Nothing` в Visual Basic).|  
|<xref:System.Exception.Message%2A>|Строка сообщения об ошибке.|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected OutOfMemoryException (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.OutOfMemoryException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; OutOfMemoryException(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="new OutOfMemoryException : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; OutOfMemoryException" Usage="new System.OutOfMemoryException (info, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">Объект, содержащий сериализованные данные объекта.</param>
        <param name="context">Контекстные сведения об источнике или назначении.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.OutOfMemoryException" /> с сериализованными данными.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Данный конструктор вызывается в процессе десериализации для воссоздания объекта исключения, переданного в потоке. Дополнительные сведения см. в разделе [сериализации XML и SOAP](~/docs/standard/serialization/xml-and-soap-serialization.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OutOfMemoryException (string message, Exception innerException);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, class System.Exception innerException) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.OutOfMemoryException.#ctor(System.String,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String, innerException As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OutOfMemoryException(System::String ^ message, Exception ^ innerException);" />
      <MemberSignature Language="F#" Value="new OutOfMemoryException : string * Exception -&gt; OutOfMemoryException" Usage="new System.OutOfMemoryException (message, innerException)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="innerException" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="message">Сообщение об ошибке, указывающее причину создания исключения.</param>
        <param name="innerException">Исключение, которое является причиной текущего исключения. Если параметр <c>innerException</c> не является пустой ссылкой (<see langword="Nothing" /> в Visual Basic), текущее исключение создается в блоке <see langword="catch" />, обрабатывающем внутреннее исключение.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.OutOfMemoryException" /> указанным сообщением об ошибке и ссылкой на внутреннее исключение, вызвавшее данное исключение.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Исключение, созданное как прямой результат предыдущего исключения, может содержать в свойстве <xref:System.Exception.InnerException%2A> ссылку на предыдущее исключение. Свойство <xref:System.Exception.InnerException%2A> возвращает то же значение, которое передается конструктору, или пустую ссылку (`Nothing` в Visual Basic), если свойство <xref:System.Exception.InnerException%2A> не предоставляет конструктору значение внутреннего исключения.  
  
 В следующей таблице представлены исходные значения свойств экземпляра класса <xref:System.OutOfMemoryException>.  
  
|Свойство.|Значение|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|Ссылка на внутреннее исключение.|  
|<xref:System.Exception.Message%2A>|Строка сообщения об ошибке.|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Exception" />
      </Docs>
    </Member>
  </Members>
</Type>