<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="Predicate`1.xml" source-language="en-US" target-language="ru-RU">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac54d5c7551e524b5bca53c8809fe4a5d86b71bc330.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4d5c7551e524b5bca53c8809fe4a5d86b71bc330</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Predicate`1">
          <source>The type of the object to compare.</source>
          <target state="translated">Тип сравниваемого объекта.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Predicate`1">
          <source>The object to compare against the criteria defined within the method represented by this delegate.</source>
          <target state="translated">Объект, проверяемый на соответствие критериям, заданным в методе, который представлен его делегатом.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="T:System.Predicate`1">
          <source>Represents the method that defines a set of criteria and determines whether the specified object meets those criteria.</source>
          <target state="translated">Представляет метод, определяющий набор критериев и соответствие указанного объекта этим критериям.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="T:System.Predicate`1">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="obj" /&gt;</ph> meets the criteria defined within the method represented by this delegate; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Значение <ph id="ph1">&lt;see langword="true" /&gt;</ph>, если объект <ph id="ph2">&lt;paramref name="obj" /&gt;</ph> удовлетворяет критериям, заданным в методе, который представляет этот делегат; в противном случае — значение <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Predicate`1">
          <source>This delegate is used by several methods of the <ph id="ph1">&lt;xref:System.Array&gt;</ph> and <ph id="ph2">&lt;xref:System.Collections.Generic.List%601&gt;</ph> classes to search for elements in the collection.</source>
          <target state="translated">Этот делегат используется несколько методов <ph id="ph1">&lt;xref:System.Array&gt;</ph> и <ph id="ph2">&lt;xref:System.Collections.Generic.List%601&gt;</ph> классы для поиска элементов в коллекции.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Predicate`1">
          <source>Typically, the <ph id="ph1">&lt;xref:System.Predicate%601&gt;</ph> delegate is represented by a lambda expression.</source>
          <target state="translated">Как правило <ph id="ph1">&lt;xref:System.Predicate%601&gt;</ph> делегат представляется лямбда-выражением.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Predicate`1">
          <source>Because locally scoped variables are available to the lambda expression, it is easy to test for a condition that is not precisely known at compile time.</source>
          <target state="translated">Поскольку локально ограниченных переменные, доступные для лямбда-выражения, можно легко проверяемое условие, которое точно не известно во время компиляции.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Predicate`1">
          <source>This is simulated in the following example, which defines a <ph id="ph1">`HockeyTeam`</ph> class that contains information about a National Hockey League team and the year in which it was founded.</source>
          <target state="translated">Это моделируется в следующем примере, который определяет <ph id="ph1">`HockeyTeam`</ph> класс, который содержит сведения о команде национальной лиги хоккей и год, в котором она была основана.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Predicate`1">
          <source>The example defines an array of integer values that represent years, and randomly assigns one element of the array to <ph id="ph1">`foundedBeforeYear`</ph>, which is a variable that is locally scoped to the example's <ph id="ph2">`Main`</ph> method.</source>
          <target state="translated">В примере определяется массив целочисленных значений, представляющих лет и случайным образом назначается один элемент массива в <ph id="ph1">`foundedBeforeYear`</ph>, который является переменной, которая действует локально в примере <ph id="ph2">`Main`</ph> метод.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Predicate`1">
          <source>Because locally scoped variables are available to a lambda expression, the lambda expression passed to the <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.FindAll%2A?displayProperty=nameWithType&gt;</ph> method is able to return a <ph id="ph2">`HockeyTeam`</ph> object for each team founded on or before that year.</source>
          <target state="translated">Поскольку локально ограниченных переменные, доступные для лямбда-выражение, лямбда-выражения, передаваемые <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.FindAll%2A?displayProperty=nameWithType&gt;</ph> метод может возвращать <ph id="ph2">`HockeyTeam`</ph> объект для каждой команды, основанная на или до этот год.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Predicate`1">
          <source>The following code example uses a <ph id="ph1">&lt;xref:System.Predicate%601&gt;</ph> delegate with the <ph id="ph2">&lt;xref:System.Array.Find%2A?displayProperty=nameWithType&gt;</ph> method to search an array of <ph id="ph3">&lt;xref:System.Drawing.Point&gt;</ph> structures.</source>
          <target state="translated">Следующий пример кода использует <ph id="ph1">&lt;xref:System.Predicate%601&gt;</ph> делегат со <ph id="ph2">&lt;xref:System.Array.Find%2A?displayProperty=nameWithType&gt;</ph> метод для поиска массив <ph id="ph3">&lt;xref:System.Drawing.Point&gt;</ph> структуры.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Predicate`1">
          <source>The example explicitly defines a <ph id="ph1">&lt;xref:System.Predicate%601&gt;</ph> delegate named <ph id="ph2">`predicate`</ph> and assigns it a method named <ph id="ph3">`FindPoints`</ph> that returns <ph id="ph4">`true`</ph> if the product of the <ph id="ph5">&lt;xref:System.Drawing.Point.X%2A?displayProperty=nameWithType&gt;</ph> and <ph id="ph6">&lt;xref:System.Drawing.Point.Y%2A?displayProperty=nameWithType&gt;</ph> fields is greater than 100,000.</source>
          <target state="translated">В примере явным образом определяется <ph id="ph1">&lt;xref:System.Predicate%601&gt;</ph> делегат с именем <ph id="ph2">`predicate`</ph> и присваивает его метод с именем <ph id="ph3">`FindPoints`</ph> , возвращающий <ph id="ph4">`true`</ph> Если произведение <ph id="ph5">&lt;xref:System.Drawing.Point.X%2A?displayProperty=nameWithType&gt;</ph> и <ph id="ph6">&lt;xref:System.Drawing.Point.Y%2A?displayProperty=nameWithType&gt;</ph> поля превышает 100 000.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Predicate`1">
          <source>Note that it is customary to use a lambda expression rather than to explicitly define a delegate of type <ph id="ph1">&lt;xref:System.Predicate%601&gt;</ph>, as the second example illustrates.</source>
          <target state="translated">Обратите внимание, что обычно использовать лямбда-выражение, а не явно задать делегат типа <ph id="ph1">&lt;xref:System.Predicate%601&gt;</ph>, как показано во втором примере.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Predicate`1">
          <source>The following example is identical to the previous example, except that it uses a lambda expression to represent the <ph id="ph1">&lt;xref:System.Predicate%601&gt;</ph> delegate.</source>
          <target state="translated">Следующий пример идентичен предыдущему примеру, за исключением того, что лямбда-выражение используются для представления <ph id="ph1">&lt;xref:System.Predicate%601&gt;</ph> делегата.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Predicate`1">
          <source>Each element of the <ph id="ph1">`points`</ph> array is passed to the lambda expression until the expression finds an element that meets the search criteria.</source>
          <target state="translated">Каждый элемент <ph id="ph1">`points`</ph> массив передается лямбда-выражение, пока выражение выполняет поиск элемента, удовлетворяющего условиям поиска.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Predicate`1">
          <source>In this case, the lambda expression returns <ph id="ph1">`true`</ph> if the product of the X and Y fields is greater than 100,000.</source>
          <target state="translated">В этом случае лямбда-выражение возвращает <ph id="ph1">`true`</ph> Если произведение поля X и Y превышает 100 000.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>