<Type Name="Random" FullName="System.Random">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="4ad7a7caff000dc43adcd1a90679ce6c6f419bc0" />
    <Meta Name="ms.sourcegitcommit" Value="3907f9a5780957d9c85af2e54c0a5bc2a5bf19ab" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="06/14/2018" />
    <Meta Name="ms.locfileid" Value="34174130" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Random" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit Random extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Random" />
  <TypeSignature Language="VB.NET" Value="Public Class Random" />
  <TypeSignature Language="C++ CLI" Value="public ref class Random" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="ded38-101">Представляет генератор псевдослучайных чисел, то есть устройство, которое выдает последовательность чисел, отвечающую определенным статистическим критериям случайности.</span>
      <span class="sxs-lookup">
        <span data-stu-id="ded38-101">Represents a pseudo-random number generator, which is a device that produces a sequence of numbers that meet certain statistical requirements for randomness.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ded38-102">Псевдослучайные числа выбираются с равной вероятностью из конечного набора чисел.</span><span class="sxs-lookup"><span data-stu-id="ded38-102">Pseudo-random numbers are chosen with equal probability from a finite set of numbers.</span></span> <span data-ttu-id="ded38-103">Выбранные числа не являются строго случайными, так как математического алгоритма используется для выбора их, но они достаточно случайны практической точки зрения.</span><span class="sxs-lookup"><span data-stu-id="ded38-103">The chosen numbers are not completely random because a mathematical algorithm is used to select them, but they are sufficiently random for practical purposes.</span></span> <span data-ttu-id="ded38-104">Текущая реализация <xref:System.Random> класс основан на измененную версию Дональд E. Кнута субтрактивные алгоритма генерации случайных чисел.</span><span class="sxs-lookup"><span data-stu-id="ded38-104">The current implementation of the <xref:System.Random> class is based on a modified version of Donald E. Knuth's subtractive random number generator algorithm.</span></span> <span data-ttu-id="ded38-105">Дополнительные сведения см. в разделе E. г.</span><span class="sxs-lookup"><span data-stu-id="ded38-105">For more information, see D. E.</span></span> <span data-ttu-id="ded38-106">Кнута.</span><span class="sxs-lookup"><span data-stu-id="ded38-106">Knuth.</span></span> <span data-ttu-id="ded38-107">*Искусство программирования, том 2: искусство*.</span><span class="sxs-lookup"><span data-stu-id="ded38-107">*The Art of Computer Programming, Volume 2: Seminumerical Algorithms*.</span></span> <span data-ttu-id="ded38-108">Третье издание Addison-Wesley, чтение, MA, 1997.</span><span class="sxs-lookup"><span data-stu-id="ded38-108">Addison-Wesley, Reading, MA, third edition, 1997.</span></span>  
  
 <span data-ttu-id="ded38-109">Для создания криптографически надежного случайного числа такой, которая подходит для создания случайного пароля используйте <xref:System.Security.Cryptography.RNGCryptoServiceProvider> класса или являются производными от класса <xref:System.Security.Cryptography.RandomNumberGenerator?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="ded38-109">To generate a cryptographically secure random number, such as one that's suitable for creating a random password, use the <xref:System.Security.Cryptography.RNGCryptoServiceProvider> class or derive a class from <xref:System.Security.Cryptography.RandomNumberGenerator?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="ded38-110">В этом разделе.</span><span class="sxs-lookup"><span data-stu-id="ded38-110">In this topic:</span></span>  
  
 <span data-ttu-id="ded38-111">[При создании экземпляра генератора случайных чисел](#Instantiate) </span><span class="sxs-lookup"><span data-stu-id="ded38-111">[Instantiating the random number generator](#Instantiate) </span></span>  
 <span data-ttu-id="ded38-112">[Предотвращение несколько экземпляров](#Multiple) </span><span class="sxs-lookup"><span data-stu-id="ded38-112">[Avoiding multiple instantiations](#Multiple) </span></span>  
 <span data-ttu-id="ded38-113">[Безопасность потока и класс System.Random](#ThreadSafety) </span><span class="sxs-lookup"><span data-stu-id="ded38-113">[The System.Random class and thread safety](#ThreadSafety) </span></span>  
 <span data-ttu-id="ded38-114">[Создание разных типов случайных чисел](#Functionality) </span><span class="sxs-lookup"><span data-stu-id="ded38-114">[Generating different types of random numbers](#Functionality) </span></span>  
 <span data-ttu-id="ded38-115">[Подстановка собственный алгоритм](#Overriding) </span><span class="sxs-lookup"><span data-stu-id="ded38-115">[Substituting your own algorithm](#Overriding) </span></span>  
 <span data-ttu-id="ded38-116">[Как использовать System.Random для...](#Operations) </span><span class="sxs-lookup"><span data-stu-id="ded38-116">[How do you use System.Random to…](#Operations) </span></span>  
 [<span data-ttu-id="ded38-117">Получить одну и ту же последовательность случайных значений</span><span class="sxs-lookup"><span data-stu-id="ded38-117">Retrieve the same sequence of random values</span></span>](#Same)  
 [<span data-ttu-id="ded38-118">Получить уникальных последовательностей случайных значений</span><span class="sxs-lookup"><span data-stu-id="ded38-118">Retrieve unique sequences of random values</span></span>](#Unique)  
 [<span data-ttu-id="ded38-119">Получить целых чисел в указанном диапазоне</span><span class="sxs-lookup"><span data-stu-id="ded38-119">Retrieve integers in a specified range</span></span>](#Range)  
 [<span data-ttu-id="ded38-120">Получить целых чисел с указанным числом знаков</span><span class="sxs-lookup"><span data-stu-id="ded38-120">Retrieve integers with a specified number of digits</span></span>](#Digits)  
 [<span data-ttu-id="ded38-121">Получение значения с плавающей запятой в указанном диапазоне</span><span class="sxs-lookup"><span data-stu-id="ded38-121">Retrieve floating-point values in a specified range</span></span>](#Floats)  
 [<span data-ttu-id="ded38-122">Создание случайного логическими значениями</span><span class="sxs-lookup"><span data-stu-id="ded38-122">Generate random Boolean values</span></span>](#Boolean)  
 [<span data-ttu-id="ded38-123">Создание случайных 64-разрядных целых чисел.</span><span class="sxs-lookup"><span data-stu-id="ded38-123">Generate random 64-bit integers</span></span>](#Long)  
 [<span data-ttu-id="ded38-124">Получение байт в указанном диапазоне</span><span class="sxs-lookup"><span data-stu-id="ded38-124">Retrieve bytes in a specified range</span></span>](#Bytes)  
 [<span data-ttu-id="ded38-125">Получить элемент из массива или коллекции случайным образом</span><span class="sxs-lookup"><span data-stu-id="ded38-125">Retrieve an element from an array or collection at random</span></span>](#Array)  
 [<span data-ttu-id="ded38-126">Получить уникальный элемент из массива или коллекции</span><span class="sxs-lookup"><span data-stu-id="ded38-126">Retrieve a unique element from an array or collection</span></span>](#UniqueArray)  
  
<a name="Instantiate"></a>   
## <a name="instantiating-the-random-number-generator"></a><span data-ttu-id="ded38-127">При создании экземпляра генератора случайных чисел</span><span class="sxs-lookup"><span data-stu-id="ded38-127">Instantiating the random number generator</span></span>  
 <span data-ttu-id="ded38-128">Создать экземпляр генератора случайных чисел, предоставляя начальное значение (начальное значение для алгоритм генерации псевдослучайных чисел) для <xref:System.Random.%23ctor%2A> конструктора класса.</span><span class="sxs-lookup"><span data-stu-id="ded38-128">You instantiate the random number generator by providing a seed value (a starting value for the pseudo-random number generation algorithm) to a <xref:System.Random.%23ctor%2A> class constructor.</span></span>  <span data-ttu-id="ded38-129">Можно указать начальное значение, явно или неявно:</span><span class="sxs-lookup"><span data-stu-id="ded38-129">You can supply the seed value either explicitly or implicitly:</span></span>  
  
-   <span data-ttu-id="ded38-130"><xref:System.Random.%23ctor%28System.Int32%29> Конструктор использует явную начальное значение, указываемое.</span><span class="sxs-lookup"><span data-stu-id="ded38-130">The <xref:System.Random.%23ctor%28System.Int32%29> constructor uses an explicit seed value that you supply.</span></span>  
  
-   <span data-ttu-id="ded38-131"><xref:System.Random.%23ctor> Конструктор использует системные часы для обеспечения начального значения.</span><span class="sxs-lookup"><span data-stu-id="ded38-131">The <xref:System.Random.%23ctor> constructor uses the system clock to provide a seed value.</span></span> <span data-ttu-id="ded38-132">Это наиболее распространенным способом создания экземпляра генератора случайных чисел.</span><span class="sxs-lookup"><span data-stu-id="ded38-132">This is the most common way of instantiating the random number generator.</span></span>  
  
 <span data-ttu-id="ded38-133">Если же начальное значение используется для разных <xref:System.Random> объекты, они получат та же последовательность случайных чисел.</span><span class="sxs-lookup"><span data-stu-id="ded38-133">If the same seed is used for separate <xref:System.Random> objects, they will generate the same series of random numbers.</span></span> <span data-ttu-id="ded38-134">Это может быть полезно для создания набора тестов, который обрабатывает случайные значения или воспроизведения игры, которые являются производными свои данные от случайных чисел.</span><span class="sxs-lookup"><span data-stu-id="ded38-134">This can be useful for creating a test suite that processes random values, or for replaying games that derive their data from random numbers.</span></span> <span data-ttu-id="ded38-135">Тем не менее, обратите внимание, что <xref:System.Random> объекты в процессах, под управлением различных версий платформы .NET Framework могут возвращать разные наборы случайных чисел, даже если они могут быть экземпляр которого создается без одинаковые начальные значения.</span><span class="sxs-lookup"><span data-stu-id="ded38-135">However, note that <xref:System.Random> objects in processes running under different versions of the .NET Framework may return different series of random numbers even if they're instantiated with identical seed values.</span></span>  
  
 <span data-ttu-id="ded38-136">Для получения различных последовательностей случайных чисел, можно сделать начального значения зависят от времени, что позволяет создавать различные последовательности для каждого нового экземпляра <xref:System.Random>.</span><span class="sxs-lookup"><span data-stu-id="ded38-136">To produce different sequences of random numbers, you can make the seed value time-dependent, thereby producing a different series with each new instance of <xref:System.Random>.</span></span> <span data-ttu-id="ded38-137">Параметризованные <xref:System.Random.%23ctor%28System.Int32%29> конструктор может занять <xref:System.Int32> значение на основе количества тактов в текущее время, в то время как без параметров <xref:System.Random.%23ctor> конструктор использует системные часы для формирования начального значения.</span><span class="sxs-lookup"><span data-stu-id="ded38-137">The parameterized <xref:System.Random.%23ctor%28System.Int32%29> constructor can take an <xref:System.Int32> value based on the number of ticks in the current time, whereas the parameterless <xref:System.Random.%23ctor> constructor uses the system clock to generate its seed value.</span></span> <span data-ttu-id="ded38-138">Тем не менее, поскольку часы конечное решение, с помощью конструктора без параметров для создания различных <xref:System.Random> объекты в закрытой последовательности создаются генераторы случайных чисел, производящих идентичные последовательности случайных чисел.</span><span class="sxs-lookup"><span data-stu-id="ded38-138">However, because the clock has finite resolution, using the parameterless constructor to create different <xref:System.Random> objects in close succession creates random number generators that produce identical sequences of random numbers.</span></span> <span data-ttu-id="ded38-139">В следующем примере показано как два <xref:System.Random> объекты, экземпляры которых создаются в быстрой последовательности, создают идентичные наборы случайных чисел.</span><span class="sxs-lookup"><span data-stu-id="ded38-139">The following example illustrates how two <xref:System.Random> objects that are instantiated in close succession generate an identical series of random numbers.</span></span> <span data-ttu-id="ded38-140">В большинстве операционных систем <xref:System.Random> объекты, созданные в течение 15 миллисекунд друг от друга, скорее всего, имеют одинаковые начальные значения.</span><span class="sxs-lookup"><span data-stu-id="ded38-140">On most Windows systems, <xref:System.Random> objects created within 15 milliseconds of one another are likely to have identical seed values.</span></span>  
  
 [!code-cpp[System.Random#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random/cpp/random1.cpp#1)]
 [!code-csharp[System.Random#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random/cs/Random1.cs#1)]
 [!code-vb[System.Random#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random/vb/Random1.vb#1)]  
  
 <span data-ttu-id="ded38-141">Чтобы избежать этой проблемы, создайте один <xref:System.Random> объекта вместо нескольких объектов.</span><span class="sxs-lookup"><span data-stu-id="ded38-141">To avoid this problem, create a single <xref:System.Random> object instead of multiple objects.</span></span>  
  
<a name="Multiple"></a>   
## <a name="avoiding-multiple-instantiations"></a><span data-ttu-id="ded38-142">Предотвращение несколько экземпляров</span><span class="sxs-lookup"><span data-stu-id="ded38-142">Avoiding multiple instantiations</span></span>  
 <span data-ttu-id="ded38-143">Инициализация двух генераторов случайных чисел в непрерывном цикле или в течение короткого промежутка времени создает два генераторы случайных чисел, можно производить идентичные последовательности случайных чисел.</span><span class="sxs-lookup"><span data-stu-id="ded38-143">Initializing two random number generators in a tight loop or in rapid succession creates two random number generators that can produce identical sequences of random numbers.</span></span> <span data-ttu-id="ded38-144">В большинстве случаев это не намерения разработчика и может привести к проблем с производительностью, поскольку создание и инициализация генератора случайных чисел является процессом относительно требовательными к ресурсам.</span><span class="sxs-lookup"><span data-stu-id="ded38-144">In most cases, this is not the developer's intent and can lead to performance issues, because instantiating and initializing a random number generator is a relatively expensive process.</span></span>  
  
 <span data-ttu-id="ded38-145">Для повышения производительности и избежать случайного создания отдельных генераторы случайных чисел, формирующих идентичные числовой последовательности, рекомендуется создать один <xref:System.Random> объект для генерации множества случайных чисел с течением времени, вместо создания новый <xref:System.Random> объекты для каждого случайного числа.</span><span class="sxs-lookup"><span data-stu-id="ded38-145">Both to improve performance and to avoid inadvertently creating separate random number generators that generate identical numeric sequences, we recommend that you create one <xref:System.Random> object to generate many random numbers over time, instead of creating new <xref:System.Random> objects to generate one random number.</span></span>  
  
 <span data-ttu-id="ded38-146">Однако <xref:System.Random> класса не потокобезопасным.</span><span class="sxs-lookup"><span data-stu-id="ded38-146">However, the <xref:System.Random> class isn't thread safe.</span></span> <span data-ttu-id="ded38-147">При вызове метода <xref:System.Random> методы из различных потоков, следуйте рекомендациям, изложенным в следующем разделе.</span><span class="sxs-lookup"><span data-stu-id="ded38-147">If you call <xref:System.Random> methods from multiple threads, follow the guidelines discussed in the next section.</span></span>  
  
<a name="ThreadSafety"></a>   
## <a name="the-systemrandom-class-and-thread-safety"></a><span data-ttu-id="ded38-148">Безопасность потока и класс System.Random</span><span class="sxs-lookup"><span data-stu-id="ded38-148">The System.Random class and thread safety</span></span>  
 <span data-ttu-id="ded38-149">Вместо создания экземпляров отдельных <xref:System.Random> объектов, рекомендуется создавать отдельный <xref:System.Random> экземпляра для генерации случайных чисел, необходимых вашему приложению.</span><span class="sxs-lookup"><span data-stu-id="ded38-149">Instead of instantiating individual <xref:System.Random> objects, we recommend that you create a single <xref:System.Random> instance to generate all the random numbers needed by your app.</span></span> <span data-ttu-id="ded38-150">Тем не менее <xref:System.Random> объекты не являются потокобезопасными.</span><span class="sxs-lookup"><span data-stu-id="ded38-150">However, <xref:System.Random> objects are not thread safe.</span></span> <span data-ttu-id="ded38-151">Если приложение вызывает <xref:System.Random> методы из нескольких потоков, необходимо использовать объект синхронизации, только один поток может получить доступ к генератора случайных чисел одновременно.</span><span class="sxs-lookup"><span data-stu-id="ded38-151">If your app calls <xref:System.Random> methods from multiple threads, you must use a synchronization object to ensure that only one thread can access the random number generator at a time.</span></span> <span data-ttu-id="ded38-152">Если вы не убедитесь, что <xref:System.Random> получить доступ к объекту в потокобезопасным способом, вызовы методов, которые возвращают случайных чисел возвращает значение 0.</span><span class="sxs-lookup"><span data-stu-id="ded38-152">If you don't ensure that the <xref:System.Random> object is accessed in a thread-safe way, calls to methods that return random numbers return 0.</span></span>  
  
 <span data-ttu-id="ded38-153">В следующем примере C# [оператор lock](~/docs/csharp/language-reference/keywords/lock-statement.md) и Visual Basic [оператор SyncLock](~/docs/visual-basic/language-reference/statements/synclock-statement.md) чтобы убедиться, что один генератора случайных чисел, осуществляется с 11 потоков в потокобезопасным способом.</span><span class="sxs-lookup"><span data-stu-id="ded38-153">The following example uses the C# [lock Statement](~/docs/csharp/language-reference/keywords/lock-statement.md) and the Visual Basic [SyncLock statement](~/docs/visual-basic/language-reference/statements/synclock-statement.md) to ensure that a single random number generator is accessed by 11 threads in a thread-safe manner.</span></span> <span data-ttu-id="ded38-154">Каждый поток создает случайные числа 2 миллиона подсчитывает число случайных чисел и вычисляет их суммы и затем обновляет итоги для всех потоков после завершения выполнения.</span><span class="sxs-lookup"><span data-stu-id="ded38-154">Each thread generates 2 million random numbers, counts the number of random numbers generated and calculates their sum, and then updates the totals for all threads when it finishes executing.</span></span>  
  
 [!code-cpp[System.Random#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random/cpp/threadsafeex1.cpp#3)]
 [!code-csharp[System.Random#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random/cs/threadsafeex1.cs#3)]
 [!code-vb[System.Random#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random/vb/threadsafeex1.vb#3)]  
  
 <span data-ttu-id="ded38-155">В примере проверяется потокобезопасности одним из следующих способов:</span><span class="sxs-lookup"><span data-stu-id="ded38-155">The example ensures thread-safety in the following ways:</span></span>  
  
-   <span data-ttu-id="ded38-156"><xref:System.ThreadStaticAttribute> Атрибут используется для определения локальных для потока переменные, которые отслеживают общее число случайных чисел и их сумма для каждого потока.</span><span class="sxs-lookup"><span data-stu-id="ded38-156">The <xref:System.ThreadStaticAttribute> attribute is used to define thread-local variables that track the total number of random numbers generated and their sum for each thread.</span></span>  
  
-   <span data-ttu-id="ded38-157">Блокировка ( `lock` инструкции на языке C# и `SyncLock` инструкции на языке Visual Basic) защищает доступ к переменным, общее количество и сумма всех случайных чисел, созданные во всех потоках.</span><span class="sxs-lookup"><span data-stu-id="ded38-157">A lock (the `lock` statement in C# and the `SyncLock` statement in Visual Basic) protects access to the variables for the total count and sum of all random numbers generated on all threads.</span></span>  
  
-   <span data-ttu-id="ded38-158">Семафор ( <xref:System.Threading.CountdownEvent> объекта) позволяет убедиться, что основной поток блокируется до всех остальных потоков завершения выполнения.</span><span class="sxs-lookup"><span data-stu-id="ded38-158">A semaphore (the <xref:System.Threading.CountdownEvent> object) is used to ensure that the main thread blocks until all other threads complete execution.</span></span>  
  
-   <span data-ttu-id="ded38-159">В примере проверяется, является ли генератора случайных чисел поврежден, определяя ли два последовательных вызовов случайных чисел поколения методы возвращают значение 0.</span><span class="sxs-lookup"><span data-stu-id="ded38-159">The example checks whether the random number generator has become corrupted by determining whether two consecutive calls to random number generation methods return 0.</span></span> <span data-ttu-id="ded38-160">Если обнаружено повреждение в примере используется <xref:System.Threading.CancellationTokenSource> объект указывают, что все потоки должна быть отменена.</span><span class="sxs-lookup"><span data-stu-id="ded38-160">If corruption is detected, the example uses the <xref:System.Threading.CancellationTokenSource> object to signal that all threads should be canceled.</span></span>  
  
-   <span data-ttu-id="ded38-161">Перед созданием каждой случайное число, каждый поток для проверки состояния <xref:System.Threading.CancellationToken> объекта.</span><span class="sxs-lookup"><span data-stu-id="ded38-161">Before generating each random number, each thread checks the state of the <xref:System.Threading.CancellationToken> object.</span></span> <span data-ttu-id="ded38-162">Если запрос на отмену в примере вызывается <xref:System.Threading.CancellationToken.ThrowIfCancellationRequested%2A?displayProperty=nameWithType> метода для отмены потока.</span><span class="sxs-lookup"><span data-stu-id="ded38-162">If cancellation is requested, the example calls the <xref:System.Threading.CancellationToken.ThrowIfCancellationRequested%2A?displayProperty=nameWithType> method to cancel the thread.</span></span>  
  
 <span data-ttu-id="ded38-163">Следующий пример идентичен первому, за исключением того, что он использует <xref:System.Threading.Tasks.Task> объекта и лямбда-выражение, а не <xref:System.Threading.Thread> объектов.</span><span class="sxs-lookup"><span data-stu-id="ded38-163">The following example is identical to the first, except that it uses a <xref:System.Threading.Tasks.Task> object and a lambda expression instead of <xref:System.Threading.Thread> objects.</span></span>  
  
 [!code-csharp[System.Random#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random/cs/threadsafeex2.cs#4)]
 [!code-vb[System.Random#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random/vb/threadsafeex2.vb#4)]  
  
 <span data-ttu-id="ded38-164">Она отличается от первого примера, одним из следующих способов:</span><span class="sxs-lookup"><span data-stu-id="ded38-164">It differs from the first example in the following ways:</span></span>  
  
-   <span data-ttu-id="ded38-165">Переменные для отслеживания количества случайных чисел и их сумму в каждой задаче локальны для задачи, поэтому нет необходимости использовать <xref:System.ThreadStaticAttribute> атрибута.</span><span class="sxs-lookup"><span data-stu-id="ded38-165">The variables to keep track of the number of random numbers generated and their sum in each task are local to the task, so there is no need to use the <xref:System.ThreadStaticAttribute> attribute.</span></span>  
  
-   <span data-ttu-id="ded38-166">Статический <xref:System.Threading.Tasks.Task.WaitAll%2A?displayProperty=nameWithType> метод используется, чтобы убедиться, что основной поток не завершилось до завершения всех задач.</span><span class="sxs-lookup"><span data-stu-id="ded38-166">The static <xref:System.Threading.Tasks.Task.WaitAll%2A?displayProperty=nameWithType> method is used to ensure that the main thread doesn't complete before all tasks have finished.</span></span> <span data-ttu-id="ded38-167">Нет необходимости для <xref:System.Threading.CountdownEvent> объекта.</span><span class="sxs-lookup"><span data-stu-id="ded38-167">There is no need for the <xref:System.Threading.CountdownEvent> object.</span></span>  
  
-   <span data-ttu-id="ded38-168">Исключение, полученное в результате отмены задачи будет отображена в <xref:System.Threading.Tasks.Task.WaitAll%2A?displayProperty=nameWithType> метод.</span><span class="sxs-lookup"><span data-stu-id="ded38-168">The exception that results from task cancellation is surfaced in the <xref:System.Threading.Tasks.Task.WaitAll%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="ded38-169">В предыдущем примере он обрабатывается каждым потоком.</span><span class="sxs-lookup"><span data-stu-id="ded38-169">In the previous example, it is handled by each thread.</span></span>  
  
<a name="Functionality"></a>   
## <a name="generating-different-types-of-random-numbers"></a><span data-ttu-id="ded38-170">Создание разных типов случайных чисел</span><span class="sxs-lookup"><span data-stu-id="ded38-170">Generating different types of random numbers</span></span>  
 <span data-ttu-id="ded38-171">Генератор случайных чисел предоставляет методы, которые позволяют создавать следующие виды случайных чисел:</span><span class="sxs-lookup"><span data-stu-id="ded38-171">The random number generator provides methods that let you generate the following kinds of random numbers:</span></span>  
  
-   <span data-ttu-id="ded38-172">Ряд <xref:System.Byte> значения.</span><span class="sxs-lookup"><span data-stu-id="ded38-172">A series of <xref:System.Byte> values.</span></span> <span data-ttu-id="ded38-173">Определить количество байт, передавая массив присваивается количество элементов, метод для возврата <xref:System.Random.NextBytes%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="ded38-173">You determine the number of byte values by passing an array initialized to the number of elements you want the method to return to the <xref:System.Random.NextBytes%2A> method.</span></span> <span data-ttu-id="ded38-174">Следующий пример приводит к возникновению ошибки 20 байт.</span><span class="sxs-lookup"><span data-stu-id="ded38-174">The following example generates 20 bytes.</span></span>  
  
     [!code-cpp[System.Random#5](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random/cpp/nextbytes1.cpp#5)]
     [!code-csharp[System.Random#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random/cs/nextbytes1.cs#5)]
     [!code-vb[System.Random#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random/vb/nextbytes1.vb#5)]  
  
-   <span data-ttu-id="ded38-175">Целое число.</span><span class="sxs-lookup"><span data-stu-id="ded38-175">A single integer.</span></span> <span data-ttu-id="ded38-176">Можно выбрать, следует ли целое число от 0 до максимального значения (<xref:System.Int32.MaxValue?displayProperty=nameWithType> – 1) путем вызова <xref:System.Random.Next> метод, целое число от 0 до конкретного значения путем вызова <xref:System.Random.Next%28System.Int32%29> метода или целое число в пределах диапазона значений путем вызова <xref:System.Random.Next%28System.Int32%2CSystem.Int32%29>метод.</span><span class="sxs-lookup"><span data-stu-id="ded38-176">You can choose whether you want an integer from 0 to a maximum value (<xref:System.Int32.MaxValue?displayProperty=nameWithType> – 1) by calling the <xref:System.Random.Next> method, an integer between 0 and a specific value by calling the <xref:System.Random.Next%28System.Int32%29> method, or an integer within a range of values by calling the <xref:System.Random.Next%28System.Int32%2CSystem.Int32%29> method.</span></span> <span data-ttu-id="ded38-177">В параметризованных перегрузки указанным максимальным значением является исчерпывающим; Максимальное число созданных является один меньше, чем указанное значение.</span><span class="sxs-lookup"><span data-stu-id="ded38-177">In the parameterized overloads, the specified maximum value is exclusive; that is, the actual maximum number generated is one less than the specified value.</span></span>  
  
     <span data-ttu-id="ded38-178">В следующем примере вызывается <xref:System.Random.Next%28System.Int32%2CSystem.Int32%29> метод, чтобы создать 10 случайных чисел от -10 до 10.</span><span class="sxs-lookup"><span data-stu-id="ded38-178">The following example calls the <xref:System.Random.Next%28System.Int32%2CSystem.Int32%29> method to generate 10 random numbers between -10 and 10.</span></span> <span data-ttu-id="ded38-179">Обратите внимание, что второй аргумент метода задает эксклюзивную верхнюю границу диапазона случайных значений, возвращаемая этим методом.</span><span class="sxs-lookup"><span data-stu-id="ded38-179">Note that the second argument to the method specifies the exclusive upper bound of the range of random values returned by the method.</span></span> <span data-ttu-id="ded38-180">Другими словами наибольшее целое число, которое этот метод может возвращать одно — меньше, чем это значение.</span><span class="sxs-lookup"><span data-stu-id="ded38-180">In other words, the largest integer that the method can return is one less than this value.</span></span>  
  
     [!code-cpp[System.Random#6](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random/cpp/nextex1.cpp#6)]
     [!code-csharp[System.Random#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random/cs/nextex1.cs#6)]
     [!code-vb[System.Random#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random/vb/nextex1.vb#6)]  
  
-   <span data-ttu-id="ded38-181">Одного значения с плавающей запятой от 0,0 в меньше 1,0 путем вызова <xref:System.Random.NextDouble%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="ded38-181">A single floating-point value from 0.0 to less than 1.0 by calling the <xref:System.Random.NextDouble%2A> method.</span></span> <span data-ttu-id="ded38-182">Эксклюзивную верхнюю границу случайное число, возвращенное методом-1, поэтому его фактическое верхняя граница — 0.99999999999999978.</span><span class="sxs-lookup"><span data-stu-id="ded38-182">The exclusive upper bound of the random number returned by the method is 1, so its actual upper bound is 0.99999999999999978.</span></span> <span data-ttu-id="ded38-183">Следующий пример приводит к возникновению ошибки 10 случайных чисел с плавающей запятой.</span><span class="sxs-lookup"><span data-stu-id="ded38-183">The following example generates 10 random floating-point numbers.</span></span>  
  
     [!code-cpp[System.Random#7](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random/cpp/nextdoubleex1.cpp#7)]
     [!code-csharp[System.Random#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random/cs/nextdoubleex1.cs#7)]
     [!code-vb[System.Random#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random/vb/nextdoubleex1.vb#7)]  
  
> [!IMPORTANT]
>  <span data-ttu-id="ded38-184"><xref:System.Random.Next%28System.Int32%2CSystem.Int32%29> Метод позволяет указать диапазон возвращаемого случайного числа.</span><span class="sxs-lookup"><span data-stu-id="ded38-184">The <xref:System.Random.Next%28System.Int32%2CSystem.Int32%29> method allows you to specify the range of the returned random number.</span></span> <span data-ttu-id="ded38-185">Однако `maxValue` параметр, который задает верхний предел возвращаемое число является монопольной, не включительно, значение.</span><span class="sxs-lookup"><span data-stu-id="ded38-185">However, the `maxValue` parameter, which specifies the upper range returned number, is an exclusive, not an inclusive, value.</span></span> <span data-ttu-id="ded38-186">Это означает, что вызов метода `Next(0, 100)` возвращает значение от 0 до 99, а не в диапазоне от 0 до 100.</span><span class="sxs-lookup"><span data-stu-id="ded38-186">This means that the method call `Next(0, 100)` returns a value between 0 and 99, and not between 0 and 100.</span></span>  
  
 <span data-ttu-id="ded38-187">Можно также использовать <xref:System.Random> класс для таких задач, как создание [случайных значений T:System.Boolean](#Boolean), создающий [значения случайных чисел с плавающей запятой в диапазоне, отличного от 0 до 1](#Floats), создания [случайных 64-битовых целых чисел](#Long), и [случайным образом получение уникального элемента из массива или коллекции](#UniqueArray).</span><span class="sxs-lookup"><span data-stu-id="ded38-187">You can also use the <xref:System.Random> class for such tasks as generating [random T:System.Boolean values](#Boolean), generating [random floating point values with a range other than 0 to 1](#Floats), generating [random 64-bit integers](#Long), and [randomly retrieving a unique element from an array or collection](#UniqueArray).</span></span> <span data-ttu-id="ded38-188">Для этих и других общих задач в разделе [использование System.Random для...](#Operations)</span><span class="sxs-lookup"><span data-stu-id="ded38-188">For these and other common tasks, see the [How do you use System.Random to…](#Operations)</span></span> <span data-ttu-id="ded38-189">раздел.</span><span class="sxs-lookup"><span data-stu-id="ded38-189">section.</span></span>  
  
<a name="Overriding"></a>   
## <a name="substituting-your-own-algorithm"></a><span data-ttu-id="ded38-190">Подстановка собственный алгоритм</span><span class="sxs-lookup"><span data-stu-id="ded38-190">Substituting your own algorithm</span></span>  
 <span data-ttu-id="ded38-191">Можно реализовать путем наследования от случайного числа <xref:System.Random> класса и предоставление вашей алгоритм генерации случайных чисел.</span><span class="sxs-lookup"><span data-stu-id="ded38-191">You can implement your own random number generator by inheriting from the <xref:System.Random> class and supplying your random number generation algorithm.</span></span> <span data-ttu-id="ded38-192">Чтобы реализовать собственный алгоритм, необходимо переопределить <xref:System.Random.Sample%2A> метод, который реализует алгоритм генерации случайных чисел.</span><span class="sxs-lookup"><span data-stu-id="ded38-192">To supply your own algorithm, you must override the <xref:System.Random.Sample%2A> method, which implements the random number generation algorithm.</span></span> <span data-ttu-id="ded38-193">Следует также переопределить <xref:System.Random.Next>, <xref:System.Random.Next%28System.Int32%2CSystem.Int32%29>, и <xref:System.Random.NextBytes%2A> методов, чтобы гарантировать, что они вызывают переопределенном <xref:System.Random.Sample%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="ded38-193">You should also override the <xref:System.Random.Next>, <xref:System.Random.Next%28System.Int32%2CSystem.Int32%29>, and <xref:System.Random.NextBytes%2A> methods to ensure that they call your overridden <xref:System.Random.Sample%2A> method.</span></span> <span data-ttu-id="ded38-194">Не требуется переопределять <xref:System.Random.Next%28System.Int32%29> и <xref:System.Random.NextDouble%2A> методы.</span><span class="sxs-lookup"><span data-stu-id="ded38-194">You don't have to override the <xref:System.Random.Next%28System.Int32%29> and <xref:System.Random.NextDouble%2A> methods.</span></span>  
  
 <span data-ttu-id="ded38-195">Например, который является производным от <xref:System.Random> класса и изменяет его по умолчанию генератор псевдослучайных чисел, в разделе <xref:System.Random.Sample%2A> справочной странице.</span><span class="sxs-lookup"><span data-stu-id="ded38-195">For an example that derives from the <xref:System.Random> class and modifies its default pseudo-random number generator, see the <xref:System.Random.Sample%2A> reference page.</span></span>  
  
<a name="Operations"></a>   
## <a name="how-do-you-use-systemrandom-to"></a><span data-ttu-id="ded38-196">Как использовать System.Random для...</span><span class="sxs-lookup"><span data-stu-id="ded38-196">How do you use System.Random to…</span></span>  
 <span data-ttu-id="ded38-197">В следующих разделах рассматриваются и обсуждаются образцы кода для некоторые способы использования случайных чисел в приложении может потребоваться.</span><span class="sxs-lookup"><span data-stu-id="ded38-197">The following sections discuss and provide sample code for some of the ways you might want to use random numbers in your app.</span></span>  
  
<a name="Same"></a>   
### <a name="retrieve-the-same-sequence-of-random-values"></a><span data-ttu-id="ded38-198">Получить одну и ту же последовательность случайных значений</span><span class="sxs-lookup"><span data-stu-id="ded38-198">Retrieve the same sequence of random values</span></span>  
 <span data-ttu-id="ded38-199">Иногда требуется получать одинаковые последовательности случайных чисел, в сценариях тестирования программного обеспечения, а также в игры.</span><span class="sxs-lookup"><span data-stu-id="ded38-199">Sometimes you want to generate the same sequence of random numbers in software test scenarios and in game playing.</span></span> <span data-ttu-id="ded38-200">Тестирование с помощью того же последовательность случайных чисел дает возможность обнаружения регрессий и подтвердите исправления ошибок.</span><span class="sxs-lookup"><span data-stu-id="ded38-200">Testing with the same sequence of random numbers allows you to detect regressions and confirm bug fixes.</span></span> <span data-ttu-id="ded38-201">С помощью той же последовательности случайное число в играх позволяет воспроизводить предыдущих игры.</span><span class="sxs-lookup"><span data-stu-id="ded38-201">Using the same sequence of random number in games allows you to replay previous games.</span></span>  
  
 <span data-ttu-id="ded38-202">Можно создать одну и ту же последовательность случайных чисел, указав то же начальное значение для <xref:System.Random.%23ctor%28System.Int32%29> конструктор.</span><span class="sxs-lookup"><span data-stu-id="ded38-202">You can generate the same sequence of random numbers by providing the same seed value to the <xref:System.Random.%23ctor%28System.Int32%29> constructor.</span></span> <span data-ttu-id="ded38-203">Начальное значение обеспечивает начальное значение для алгоритм генерации псевдослучайных чисел.</span><span class="sxs-lookup"><span data-stu-id="ded38-203">The seed value provides a starting value for the pseudo-random number generation algorithm.</span></span> <span data-ttu-id="ded38-204">В следующем примере используется 100100 как произвольный начальное значение для создания экземпляра <xref:System.Random> объекта, отображает 20 случайных значений с плавающей запятой и сохраняет начального значения.</span><span class="sxs-lookup"><span data-stu-id="ded38-204">The following example uses 100100 as an arbitrary seed value to instantiate the <xref:System.Random> object, displays 20 random floating-point values, and persists the seed value.</span></span> <span data-ttu-id="ded38-205">Затем он восстанавливает начальное значение, создает новый генератор случайных чисел и отображает одинаковые значения 20 случайных чисел с плавающей запятой.</span><span class="sxs-lookup"><span data-stu-id="ded38-205">It then restores the seed value, instantiates a new random number generator, and displays the same 20 random floating-point values.</span></span>  <span data-ttu-id="ded38-206">Обратите внимание, что пример может давать различные последовательности случайных чисел при запуске в разных версиях платформы .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="ded38-206">Note that the example may produce different sequences of random numbers if run on different versions of the .NET Framework.</span></span>  
  
 [!code-cpp[System.Random#12](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random/cpp/same1.cpp#12)]
 [!code-csharp[System.Random#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random/cs/same1.cs#12)]
 [!code-vb[System.Random#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random/vb/same1.vb#12)]  
  
<a name="Unique"></a>   
### <a name="retrieve-unique-sequences-of-random-numbers"></a><span data-ttu-id="ded38-207">Получить уникальный последовательность случайных чисел</span><span class="sxs-lookup"><span data-stu-id="ded38-207">Retrieve unique sequences of random numbers</span></span>  
 <span data-ttu-id="ded38-208">Предоставление различных начальных значений для экземпляров <xref:System.Random> классу вызывает каждый генератора случайных чисел для создания различных последовательности значений.</span><span class="sxs-lookup"><span data-stu-id="ded38-208">Providing different seed values to instances of the <xref:System.Random> class causes each random number generator to produce a different sequence of values.</span></span> <span data-ttu-id="ded38-209">Укажите начальное значение явно с помощью вызова методов <xref:System.Random.%23ctor%28System.Int32%29> конструктор, или неявно путем вызова <xref:System.Random.%23ctor> конструктор.</span><span class="sxs-lookup"><span data-stu-id="ded38-209">You can provide a seed value either explicitly by calling the <xref:System.Random.%23ctor%28System.Int32%29> constructor, or implicitly by calling the <xref:System.Random.%23ctor> constructor.</span></span> <span data-ttu-id="ded38-210">Большинство разработчиков вызвать конструктор без параметров, который использует системные часы.</span><span class="sxs-lookup"><span data-stu-id="ded38-210">Most developers call the parameterless constructor, which uses the system clock.</span></span> <span data-ttu-id="ded38-211">В следующем примере этот подход используется для создания двух <xref:System.Random> экземпляров.</span><span class="sxs-lookup"><span data-stu-id="ded38-211">The following example uses this approach to instantiate two <xref:System.Random> instances.</span></span> <span data-ttu-id="ded38-212">Каждый экземпляр выводит ряд 10 случайных целых чисел.</span><span class="sxs-lookup"><span data-stu-id="ded38-212">Each instance displays a series of 10 random integers.</span></span>  
  
 [!code-cpp[System.Random#13](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random/cpp/unique.cpp#13)]
 [!code-csharp[System.Random#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random/cs/unique.cs#13)]
 [!code-vb[System.Random#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random/vb/unique.vb#13)]  
  
 <span data-ttu-id="ded38-213">Тем не менее из-за его конечное разрешения системных часов не может обнаружить разницу во времени, являющиеся приблизительно не превышает 15 миллисекунд.</span><span class="sxs-lookup"><span data-stu-id="ded38-213">However, because of its finite resolution, the system clock doesn't detect time differences that are less than approximately 15 milliseconds.</span></span> <span data-ttu-id="ded38-214">Таким образом Если код вызывает <xref:System.Random.%23ctor> перегрузку, чтобы создать два <xref:System.Random> объектов подряд, вы может случайно предоставлять объекты с одинаковые начальные значения.</span><span class="sxs-lookup"><span data-stu-id="ded38-214">Therefore, if your code calls the <xref:System.Random.%23ctor> overload to instantiate two <xref:System.Random> objects in succession, you might inadvertently be providing the objects with identical seed values.</span></span> <span data-ttu-id="ded38-215">Чтобы увидеть это в предыдущем примере, закомментируйте <xref:System.Threading.Thread.Sleep%2A?displayProperty=nameWithType> вызова метода и компиляции и снова запустите пример.</span><span class="sxs-lookup"><span data-stu-id="ded38-215">To see this in the previous example, comment out the <xref:System.Threading.Thread.Sleep%2A?displayProperty=nameWithType> method call, and compile and run the example again.</span></span>  
  
 <span data-ttu-id="ded38-216">Чтобы предотвратить возникновение этой ситуации, рекомендуется создать один экземпляр <xref:System.Random> объекта, а не несколько сеансов.</span><span class="sxs-lookup"><span data-stu-id="ded38-216">To prevent this from happening, we recommend that you instantiate a single <xref:System.Random> object rather than multiple ones.</span></span> <span data-ttu-id="ded38-217">Однако, поскольку <xref:System.Random> не потокобезопасным, некоторые синхронизации устройства необходимо использовать при доступе к <xref:System.Random> из нескольких потоков; Дополнительные сведения см. в разделе [случайных безопасности потока и класс](#ThreadSafety) ранее в этом раздел.</span><span class="sxs-lookup"><span data-stu-id="ded38-217">However, since <xref:System.Random> isn't thread safe, you must use some synchronization device if you access a <xref:System.Random> instance from multiple threads; for more information, see [The Random class and thread safety](#ThreadSafety) earlier in this topic.</span></span> <span data-ttu-id="ded38-218">Кроме того, можно использовать механизм задержки, такие как <xref:System.Threading.Thread.Sleep%2A> метод, используемый в предыдущем примере, чтобы избежать возникновения экземпляров превышает 15 миллисекунд друг от друга.</span><span class="sxs-lookup"><span data-stu-id="ded38-218">Alternately, you can use a delay mechanism, such as the <xref:System.Threading.Thread.Sleep%2A> method used in the previous example, to ensure that the instantiations occur more than 15 millisecond apart.</span></span>  
  
<a name="Range"></a>   
### <a name="retrieve-integers-in-a-specified-range"></a><span data-ttu-id="ded38-219">Получить целых чисел в указанном диапазоне</span><span class="sxs-lookup"><span data-stu-id="ded38-219">Retrieve integers in a specified range</span></span>  
 <span data-ttu-id="ded38-220">Целые числа в указанном диапазоне можно получить, вызвав <xref:System.Random.Next%28System.Int32%2CSystem.Int32%29> метод, который позволяет задавать нижнюю и верхнюю границу номера хотелось бы генератора случайных чисел для возврата.</span><span class="sxs-lookup"><span data-stu-id="ded38-220">You can retrieve integers in a specified range by calling the <xref:System.Random.Next%28System.Int32%2CSystem.Int32%29> method, which lets you specify both the lower and the upper bound of the numbers you'd like the random number generator to return.</span></span> <span data-ttu-id="ded38-221">Верхняя граница — монопольный, не включительно, значение.</span><span class="sxs-lookup"><span data-stu-id="ded38-221">The upper bound is an exclusive, not an inclusive, value.</span></span> <span data-ttu-id="ded38-222">То есть он не включен в диапазон значений, возвращаемая этим методом.</span><span class="sxs-lookup"><span data-stu-id="ded38-222">That is, it isn't included in the range of values returned by the method.</span></span> <span data-ttu-id="ded38-223">В следующем примере этот метод используется для формирования случайных целых чисел в диапазоне от -10 до 10.</span><span class="sxs-lookup"><span data-stu-id="ded38-223">The following example uses this method to generate random integers between -10 and 10.</span></span> <span data-ttu-id="ded38-224">Обратите внимание, что он указывает 11, равное одному больше нужное значение в качестве значения для `maxValue` аргумента в вызове метода.</span><span class="sxs-lookup"><span data-stu-id="ded38-224">Note that it specifies 11, which is one greater than the desired value, as the value of the `maxValue` argument in the method call.</span></span>  
  
 [!code-cpp[System.Random#15](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random/cpp/range1.cpp#15)]
 [!code-csharp[System.Random#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random/cs/range1.cs#15)]
 [!code-vb[System.Random#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random/vb/range1.vb#15)]  
  
<a name="Digits"></a>   
### <a name="retrieve-integers-with-a-specified-number-of-digits"></a><span data-ttu-id="ded38-225">Получить целых чисел с указанным числом знаков</span><span class="sxs-lookup"><span data-stu-id="ded38-225">Retrieve integers with a specified number of digits</span></span>  
 <span data-ttu-id="ded38-226">Можно вызвать <xref:System.Random.Next%28System.Int32%2CSystem.Int32%29> метод для извлечения значений и цифр с указанного количества десятичных разрядов.</span><span class="sxs-lookup"><span data-stu-id="ded38-226">You can call the <xref:System.Random.Next%28System.Int32%2CSystem.Int32%29> method to retrieve numbers with a specified number of digits.</span></span> <span data-ttu-id="ded38-227">Например, для получения цифры с четырьмя знаками (номера, в диапазоне от 1000 до 9999), следует вызвать <xref:System.Random.Next%28System.Int32%2CSystem.Int32%29> метод с `minValue` значение 1000 и `maxValue` значение 10000, как показано в следующем примере.</span><span class="sxs-lookup"><span data-stu-id="ded38-227">For example, to retrieve numbers with four digits (that is, numbers that range from 1000 to 9999), you call the <xref:System.Random.Next%28System.Int32%2CSystem.Int32%29> method with a `minValue` value of 1000 and a `maxValue` value of 10000, as the following example shows.</span></span>  
  
 [!code-cpp[System.Random#16](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random/cpp/range2.cpp#16)]
 [!code-csharp[System.Random#16](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random/cs/range2.cs#16)]
 [!code-vb[System.Random#16](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random/vb/range2.vb#16)]  
  
<a name="Floats"></a>   
### <a name="retrieve-floating-point-values-in-a-specified-range"></a><span data-ttu-id="ded38-228">Получение значения с плавающей запятой в указанном диапазоне</span><span class="sxs-lookup"><span data-stu-id="ded38-228">Retrieve floating-point values in a specified range</span></span>  
 <span data-ttu-id="ded38-229"><xref:System.Random.NextDouble%2A> Метод возвращает случайных значений с плавающей запятой, диапазон от 0 до меньше 1.</span><span class="sxs-lookup"><span data-stu-id="ded38-229">The <xref:System.Random.NextDouble%2A> method returns random floating-point values that range from 0 to less than 1.</span></span> <span data-ttu-id="ded38-230">Тем не менее часто необходимо создавать случайные значения в другого диапазона ячеек.</span><span class="sxs-lookup"><span data-stu-id="ded38-230">However, you'll often want to generate random values in some other range.</span></span>  
  
 <span data-ttu-id="ded38-231">Если интервал между минимальным и максимальным нужные значения 1, можно добавить к значению, возвращенному методом разницу между начальной необходимый интервал и 0 <xref:System.Random.NextDouble%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="ded38-231">If the interval between the minimum and maximum desired values is 1, you can add the difference between the desired starting interval and 0 to the number returned by the <xref:System.Random.NextDouble%2A> method.</span></span> <span data-ttu-id="ded38-232">В следующем примере выполняется этот параметр, чтобы создать 10 случайных чисел от -1 до 0.</span><span class="sxs-lookup"><span data-stu-id="ded38-232">The following example does this to generate 10 random numbers between -1 and 0.</span></span>  
  
 [!code-cpp[System.Random#17](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random/cpp/doublerange2.cpp#17)]
 [!code-csharp[System.Random#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random/cs/doublerange2.cs#17)]
 [!code-vb[System.Random#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random/vb/doublerange2.vb#17)]  
  
 <span data-ttu-id="ded38-233">Для генерации случайных чисел с плавающей запятой, нижняя граница — 0, но верхняя граница — больше, чем 1 (или, в случае отрицательных чисел, нижняя граница диапазона — меньше -1 и верхняя граница — 0), умножьте случайное число ненулевой границей.</span><span class="sxs-lookup"><span data-stu-id="ded38-233">To generate random floating-point numbers whose lower bound is 0 but upper bound is greater than 1 (or, in the case of negative numbers, whose lower bound is less than -1 and upper bound is 0), multiply the random number by the non-zero bound.</span></span> <span data-ttu-id="ded38-234">В следующем примере выполняется это для генерации случайных чисел с плавающей запятой 20 миллионов этого диапазона от 0 до <xref:System.Int64.MaxValue?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="ded38-234">The following example does this to generate 20 million random floating-point numbers that range from 0 to <xref:System.Int64.MaxValue?displayProperty=nameWithType>.</span></span> <span data-ttu-id="ded38-235">В также отображает распределение, случайных значений, созданной методом.</span><span class="sxs-lookup"><span data-stu-id="ded38-235">In also displays the distribution of the random values generated by the method.</span></span>  
  
 [!code-cpp[System.Random#18](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random/cpp/doublerange1.cpp#18)]
 [!code-csharp[System.Random#18](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random/cs/doublerange1.cs#18)]
 [!code-vb[System.Random#18](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random/vb/doublerange1.vb#18)]  
  
 <span data-ttu-id="ded38-236">Для генерации случайных чисел с плавающей запятой двух произвольных значений, таких как <xref:System.Random.Next%28System.Int32%2CSystem.Int32%29> метод не для целых чисел, используйте следующую формулу:</span><span class="sxs-lookup"><span data-stu-id="ded38-236">To generate random floating-point numbers between two arbitrary values, like the <xref:System.Random.Next%28System.Int32%2CSystem.Int32%29> method does for integers, use the following formula:</span></span>  
  
```csharp  
Random.NextDouble() * (maxValue – minValue) + minValue  
```  
  
 <span data-ttu-id="ded38-237">Следующий пример приводит к возникновению ошибки 1 миллион случайных чисел, начиная с версии 10.0 для 11.0 и отображает их распространения.</span><span class="sxs-lookup"><span data-stu-id="ded38-237">The following example generates 1 million random numbers that range from 10.0 to 11.0, and displays their distribution.</span></span>  
  
 [!code-cpp[System.Random#19](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random/cpp/doublerange3.cpp#19)]
 [!code-csharp[System.Random#19](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random/cs/doublerange3.cs#19)]
 [!code-vb[System.Random#19](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random/vb/doublerange3.vb#19)]  
  
<a name="Boolean"></a>   
### <a name="generate-random-boolean-values"></a><span data-ttu-id="ded38-238">Создание случайного логическими значениями</span><span class="sxs-lookup"><span data-stu-id="ded38-238">Generate random Boolean values</span></span>  
 <span data-ttu-id="ded38-239"><xref:System.Random> Класс не предоставляет методы, которые создают <xref:System.Boolean> значения.</span><span class="sxs-lookup"><span data-stu-id="ded38-239">The <xref:System.Random> class doesn't provide methods that generate <xref:System.Boolean> values.</span></span> <span data-ttu-id="ded38-240">Тем не менее можно определить собственный класс или метод для этого.</span><span class="sxs-lookup"><span data-stu-id="ded38-240">However, you can define your own class or method to do that.</span></span> <span data-ttu-id="ded38-241">В следующем примере определяется класс, `BooleanGenerator`, с одним методом `NextBoolean`.</span><span class="sxs-lookup"><span data-stu-id="ded38-241">The following example defines a class, `BooleanGenerator`, with a single method, `NextBoolean`.</span></span> <span data-ttu-id="ded38-242">`BooleanGenerator` Класса хранилищ <xref:System.Random> объект в качестве частной переменной.</span><span class="sxs-lookup"><span data-stu-id="ded38-242">The `BooleanGenerator` class stores a <xref:System.Random> object as a private variable.</span></span> <span data-ttu-id="ded38-243">`NextBoolean` Вызовы метода <xref:System.Random.Next%28System.Int32%2CSystem.Int32%29?displayProperty=nameWithType> метод и передает результат в <xref:System.Convert.ToBoolean%28System.Int32%29?displayProperty=nameWithType> метод.</span><span class="sxs-lookup"><span data-stu-id="ded38-243">The `NextBoolean` method calls the <xref:System.Random.Next%28System.Int32%2CSystem.Int32%29?displayProperty=nameWithType> method and passes the result to the <xref:System.Convert.ToBoolean%28System.Int32%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="ded38-244">Обратите внимание, что 2 используется в качестве аргумента для указания верхней границы случайного числа.</span><span class="sxs-lookup"><span data-stu-id="ded38-244">Note that 2 is used as the argument to specify the upper bound of the random number.</span></span> <span data-ttu-id="ded38-245">Так как это значение монопольный, этот метод возвращает значение 0 или 1.</span><span class="sxs-lookup"><span data-stu-id="ded38-245">Since this is an exclusive value, the method call returns either 0 or 1.</span></span>  
  
 [!code-cpp[System.Random#8](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random/cpp/booleans1.cpp#8)]
 [!code-csharp[System.Random#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random/cs/booleans1.cs#8)]
 [!code-vb[System.Random#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random/vb/booleans1.vb#8)]  
  
 <span data-ttu-id="ded38-246">Вместо того чтобы создавать отдельный класс для создания случайных <xref:System.Boolean> просто определенные значения в примере один метод.</span><span class="sxs-lookup"><span data-stu-id="ded38-246">Instead of creating a separate class to generate random <xref:System.Boolean> values, the example could simply have defined a single method.</span></span> <span data-ttu-id="ded38-247">В этом случае, однако <xref:System.Random> объект должен был определен как переменной уровня класса, чтобы избежать создания нового <xref:System.Random> экземпляра в каждом вызове метода.</span><span class="sxs-lookup"><span data-stu-id="ded38-247">In that case, however, the <xref:System.Random> object should have been defined as a class-level variable to avoid instantiating a new <xref:System.Random> instance in each method call.</span></span> <span data-ttu-id="ded38-248">В Visual Basic экземпляра Random может определяться как [статических](~/docs/visual-basic/language-reference/modifiers/static.md) переменных в `NextBoolean` метод.</span><span class="sxs-lookup"><span data-stu-id="ded38-248">In Visual Basic, the Random instance can be defined as a [Static](~/docs/visual-basic/language-reference/modifiers/static.md) variable in the `NextBoolean` method.</span></span>  <span data-ttu-id="ded38-249">Следующий пример предоставляет реализацию.</span><span class="sxs-lookup"><span data-stu-id="ded38-249">The following example provides an implementation.</span></span>  
  
 [!code-cpp[System.Random#20](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random/cpp/booleans2.cpp#20)]
 [!code-csharp[System.Random#20](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random/cs/booleans2.cs#20)]
 [!code-vb[System.Random#20](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random/vb/booleans2.vb#20)]  
  
<a name="Long"></a>   
### <a name="generate-random-64-bit-integers"></a><span data-ttu-id="ded38-250">Создание случайных 64-разрядных целых чисел.</span><span class="sxs-lookup"><span data-stu-id="ded38-250">Generate random 64-bit integers</span></span>  
 <span data-ttu-id="ded38-251">Перегруженные версии <xref:System.Random.Next%2A> метод возвращает 32-разрядных целых чисел.</span><span class="sxs-lookup"><span data-stu-id="ded38-251">The overloads of the <xref:System.Random.Next%2A> method return 32-bit integers.</span></span> <span data-ttu-id="ded38-252">Однако в некоторых случаях может потребоваться для работы с 64-разрядных целых чисел.</span><span class="sxs-lookup"><span data-stu-id="ded38-252">However, in some cases, you might want to work with 64-bit integers.</span></span> <span data-ttu-id="ded38-253">Это можно сделать следующим образом:</span><span class="sxs-lookup"><span data-stu-id="ded38-253">You can do this as follows:</span></span>  
  
1.  <span data-ttu-id="ded38-254">Вызовите <xref:System.Random.NextDouble%2A> метод для извлечения двойной точности с плавающей запятой.</span><span class="sxs-lookup"><span data-stu-id="ded38-254">Call the <xref:System.Random.NextDouble%2A> method to retrieve a double-precision floating point value.</span></span>  
  
2.  <span data-ttu-id="ded38-255">Умножьте это значение с <xref:System.Int64.MaxValue?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="ded38-255">Multiply that value by <xref:System.Int64.MaxValue?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="ded38-256">В следующем примере использует этот метод для создания 20 миллионов случайных длинных целых чисел и распределяет их в 10 равные группы.</span><span class="sxs-lookup"><span data-stu-id="ded38-256">The following example uses this technique to generate 20 million random long integers and categorizes them in 10 equal groups.</span></span> <span data-ttu-id="ded38-257">Затем вычисляет распределение, случайных чисел, сосчитав число в каждой группе от 0 до <xref:System.Int64.MaxValue?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="ded38-257">It then evaluates the distribution of the random numbers by counting the number in each group from 0 to <xref:System.Int64.MaxValue?displayProperty=nameWithType>.</span></span> <span data-ttu-id="ded38-258">Как показывают выходные данные примера, номера распространяются более или менее равномерно по диапазон типа данных long integer.</span><span class="sxs-lookup"><span data-stu-id="ded38-258">As the output from the example shows, the numbers are distributed more or less equally through the range of a long integer.</span></span>  
  
 [!code-cpp[System.Random#14](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random/cpp/long1.cpp#14)]
 [!code-csharp[System.Random#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random/cs/long1.cs#14)]
 [!code-vb[System.Random#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random/vb/long1.vb#14)]  
  
 <span data-ttu-id="ded38-259">Альтернативный метод, что использует поразрядные не создает действительно случайные числа.</span><span class="sxs-lookup"><span data-stu-id="ded38-259">An alternative technique that uses bit manipulation does not generate truly random numbers.</span></span> <span data-ttu-id="ded38-260">Этот метод вызывает <xref:System.Random.Next> для создания двух целых чисел, один по 32 сдвигает влево биты и схему или их вместе.</span><span class="sxs-lookup"><span data-stu-id="ded38-260">This technique calls <xref:System.Random.Next> to generate two integers, left-shifts one by 32 bits, and ORs them together.</span></span> <span data-ttu-id="ded38-261">Такой подход имеет два ограничения.</span><span class="sxs-lookup"><span data-stu-id="ded38-261">This technique has two limitations:</span></span>  
  
1.  <span data-ttu-id="ded38-262">Поскольку бит 31 бита знака, значение в бит 31 полученное значение типа long integer всегда равно 0.</span><span class="sxs-lookup"><span data-stu-id="ded38-262">Because bit 31 is the sign bit, the value in bit 31 of the resulting long integer is always 0.</span></span>  <span data-ttu-id="ded38-263">Это можно устранить путем формирования случайных 0 или 1, влево сдвигая 31 бита и настройке его с исходной случайных длинное целое число.</span><span class="sxs-lookup"><span data-stu-id="ded38-263">This can be addressed by generating a random 0 or 1, left-shifting it 31 bits, and ORing it with the original random long integer.</span></span>  
  
2.  <span data-ttu-id="ded38-264">Если серьезно поскольку вероятность того, что значение, возвращаемое <xref:System.Random.Next> будет иметь значение 0, будет небольшим количеством случайных чисел в диапазоне от 0x0 0x00000000FFFFFFFF.</span><span class="sxs-lookup"><span data-stu-id="ded38-264">More seriously, because the probability that the value returned by <xref:System.Random.Next> will be 0, there will be few if any random numbers in the range 0x0-0x00000000FFFFFFFF.</span></span>  
  
<a name="Bytes"></a>   
### <a name="retrieve-bytes-in-a-specified-range"></a><span data-ttu-id="ded38-265">Получение байт в указанном диапазоне</span><span class="sxs-lookup"><span data-stu-id="ded38-265">Retrieve bytes in a specified range</span></span>  
 <span data-ttu-id="ded38-266">Перегруженные версии <xref:System.Random.Next%2A> метода позволяют указать диапазон случайных чисел, но <xref:System.Random.NextBytes%2A> метод — нет.</span><span class="sxs-lookup"><span data-stu-id="ded38-266">The overloads of the <xref:System.Random.Next%2A> method allow you to specify the range of random numbers, but the <xref:System.Random.NextBytes%2A> method does not.</span></span> <span data-ttu-id="ded38-267">В следующем примере реализуется `NextBytes` метод, который позволяет указать диапазон байтов, возвращенных.</span><span class="sxs-lookup"><span data-stu-id="ded38-267">The following example implements a `NextBytes` method that lets you specify the range of the returned bytes.</span></span> <span data-ttu-id="ded38-268">Он определяет `Random2` класс, производный от <xref:System.Random> и перегружает его `NextBytes` метод.</span><span class="sxs-lookup"><span data-stu-id="ded38-268">It defines a `Random2` class that derives from <xref:System.Random> and overloads its `NextBytes` method.</span></span>  
  
 [!code-cpp[System.Random#9](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random/cpp/bytes1.cpp#9)]
 [!code-csharp[System.Random#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random/cs/bytes1.cs#9)]
 [!code-vb[System.Random#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random/vb/bytes1.vb#9)]  
  
 <span data-ttu-id="ded38-269">`NextBytes(Byte[], Byte, Byte)` Метод создает оболочку для вызова <xref:System.Random.Next%28System.Int32%2CSystem.Int32%29> метод и указывает минимальное значение и один больше, чем максимальное значение (в этом случае 0 и 101), мы должны возвращаться в массиве байтов.</span><span class="sxs-lookup"><span data-stu-id="ded38-269">The `NextBytes(Byte[], Byte, Byte)` method wraps a call to the <xref:System.Random.Next%28System.Int32%2CSystem.Int32%29> method and specifies the minimum value and one greater than the maximum value (in this case, 0 and 101) that we want returned in the byte array.</span></span> <span data-ttu-id="ded38-270">Так как мы уверены, что целочисленные значения, возвращает <xref:System.Random.Next%2A> метод находятся в диапазоне от <xref:System.Byte> тип данных можно безопасно привести их (в C#) или преобразовать их (в Visual Basic) из целых чисел в байты.</span><span class="sxs-lookup"><span data-stu-id="ded38-270">Because we are sure that the integer values returned by the <xref:System.Random.Next%2A> method are within the range of the <xref:System.Byte> data type, we can safely cast them (in C#) or convert them (in Visual Basic) from integers to bytes.</span></span>  
  
<a name="Array"></a>   
### <a name="retrieve-an-element-from-an-array-or-collection-at-random"></a><span data-ttu-id="ded38-271">Получить элемент из массива или коллекции случайным образом</span><span class="sxs-lookup"><span data-stu-id="ded38-271">Retrieve an element from an array or collection at random</span></span>  
 <span data-ttu-id="ded38-272">Случайные числа часто используются в качестве индексов для извлечения значений из массивы или коллекции.</span><span class="sxs-lookup"><span data-stu-id="ded38-272">Random numbers often serve as indexes to retrieve values from arrays or collections.</span></span> <span data-ttu-id="ded38-273">Для получения значения случайный индекс, можно вызвать <xref:System.Random.Next%28System.Int32%2CSystem.Int32%29> метод и использование, нижняя граница массива в качестве значения его `minValue` аргумент и на единицу больше, чем значение верхней границы массива в качестве значения его `maxValue` аргумент.</span><span class="sxs-lookup"><span data-stu-id="ded38-273">To retrieve a random index value, you can call the <xref:System.Random.Next%28System.Int32%2CSystem.Int32%29> method, and use the lower bound of the array as the value of its `minValue` argument and one greater than the upper bound of the array as the value of its `maxValue` argument.</span></span> <span data-ttu-id="ded38-274">Отсчитываемый от нуля массив, это эквивалентно его <xref:System.Array.Length%2A> свойства или единицу больше, чем значение, возвращаемое <xref:System.Array.GetUpperBound%2A?displayProperty=nameWithType> метод.</span><span class="sxs-lookup"><span data-stu-id="ded38-274">For a zero-based array, this is equivalent to its <xref:System.Array.Length%2A> property, or one greater than the value returned by the <xref:System.Array.GetUpperBound%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="ded38-275">В следующем примере случайным образом извлекается название города, в Соединенных Штатах из массив городов.</span><span class="sxs-lookup"><span data-stu-id="ded38-275">The following example randomly retrieves the name of a city in the United States from an array of cities.</span></span>  
  
 [!code-cpp[System.Random#10](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random/cpp/array1.cpp#10)]
 [!code-csharp[System.Random#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random/cs/array1.cs#10)]
 [!code-vb[System.Random#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random/vb/array1.vb#10)]  
  
<a name="UniqueArray"></a>   
### <a name="retrieve-a-unique-element-from-an-array-or-collection"></a><span data-ttu-id="ded38-276">Получить уникальный элемент из массива или коллекции</span><span class="sxs-lookup"><span data-stu-id="ded38-276">Retrieve a unique element from an array or collection</span></span>  
 <span data-ttu-id="ded38-277">Генератор случайных чисел, всегда можно вернуться повторяющиеся значения.</span><span class="sxs-lookup"><span data-stu-id="ded38-277">A random number generator can always return duplicate values.</span></span> <span data-ttu-id="ded38-278">Диапазон номеров уменьшается или число значения, создаваемые становится больше, увеличивается вероятность дубликатов.</span><span class="sxs-lookup"><span data-stu-id="ded38-278">As the range of numbers becomes smaller or the number of values generated becomes larger, the probability of duplicates grows.</span></span> <span data-ttu-id="ded38-279">Если случайные значения должны быть уникальными, дополнительные номера создаются для компенсации повторяющиеся значения, в результате чего все более низкую производительность.</span><span class="sxs-lookup"><span data-stu-id="ded38-279">If random values must be unique, more numbers are generated to compensate for duplicates, resulting in increasingly poor performance.</span></span>  
  
 <span data-ttu-id="ded38-280">Существует несколько способов для обработки этого сценария.</span><span class="sxs-lookup"><span data-stu-id="ded38-280">There are a number of techniques to handle this scenario.</span></span> <span data-ttu-id="ded38-281">Одно из распространенных решений является создание массива или коллекции, содержащей значения, которые нужно вернуть, а параллельный массив, который содержит случайных чисел с плавающей запятой.</span><span class="sxs-lookup"><span data-stu-id="ded38-281">One common solution is to create an array or collection that contains the values to be retrieved, and a parallel array that contains random floating-point numbers.</span></span> <span data-ttu-id="ded38-282">Второй массив заполняется случайных чисел во время создания первого массива, и <xref:System.Array.Sort%28System.Array%2CSystem.Array%29?displayProperty=nameWithType> метод используется для сортировки первый массив с помощью значения в массиве, parallel.</span><span class="sxs-lookup"><span data-stu-id="ded38-282">The second array is populated with random numbers at the time the first array is created, and the <xref:System.Array.Sort%28System.Array%2CSystem.Array%29?displayProperty=nameWithType> method is used to sort the first array by using the values in the parallel array.</span></span>  
  
 <span data-ttu-id="ded38-283">Например при разработке игры, необходимо убедиться, что каждая карта используется только один раз.</span><span class="sxs-lookup"><span data-stu-id="ded38-283">For example, if you're developing a Solitaire game, you want to ensure that each card is used only once.</span></span> <span data-ttu-id="ded38-284">Вместо создания случайных чисел для извлечения карту и отслеживания ли уже были обработаны этой карты, можно создать массив, параллельный массиву случайных чисел, который может использоваться для сортировки колоде в.</span><span class="sxs-lookup"><span data-stu-id="ded38-284">Instead of generating random numbers to retrieve a card and tracking whether that card has already been dealt, you can create a parallel array of random numbers that can be used to sort the deck.</span></span> <span data-ttu-id="ded38-285">После колоде отсортирован, приложение можно использовать указатель для указания индекса Далее карт в колоде.</span><span class="sxs-lookup"><span data-stu-id="ded38-285">Once the deck is sorted, your app can maintain a pointer to indicate the index of the next card on the deck.</span></span>  
  
 <span data-ttu-id="ded38-286">Этот подход показан в приведенном ниже примере.</span><span class="sxs-lookup"><span data-stu-id="ded38-286">The following example illustrates this approach.</span></span> <span data-ttu-id="ded38-287">Он определяет `Card` класс, представляющий игральной карты и их `Dealer` класс, который обрабатывает перемешать карт.</span><span class="sxs-lookup"><span data-stu-id="ded38-287">It defines a `Card` class that represents a playing card and a `Dealer` class that deals a deck of shuffled cards.</span></span> <span data-ttu-id="ded38-288">`Dealer` Конструктор класса заполняет два массива: `deck` массива, который имеет область видимости класса, которое представляет всех карт в колоде; и локальный `order` массив, который имеет то же число элементов, как `deck` массива и заполняется с помощью формируется случайным образом <xref:System.Double> значения.</span><span class="sxs-lookup"><span data-stu-id="ded38-288">The `Dealer` class constructor populates two arrays: a `deck` array that has class scope and that represents all the cards in the deck; and a local `order` array that has the same number of elements as the `deck` array and is populated with randomly generated <xref:System.Double> values.</span></span>  <span data-ttu-id="ded38-289"><xref:System.Array.Sort%28System.Array%2CSystem.Array%29?displayProperty=nameWithType> Для сортировки затем вызывается метод `deck` массива на основе значений в `order` массива.</span><span class="sxs-lookup"><span data-stu-id="ded38-289">The <xref:System.Array.Sort%28System.Array%2CSystem.Array%29?displayProperty=nameWithType> method is then called to sort the `deck` array based on the values in the `order` array.</span></span>  
  
 [!code-cpp[System.Random#11](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random/cpp/uniquearray1.cpp#11)]
 [!code-csharp[System.Random#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random/cs/uniquearray1.cs#11)]
 [!code-vb[System.Random#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random/vb/uniquearray1.vb#11)]  
  
   
  
## Examples  
 <span data-ttu-id="ded38-290">В следующем примере создается один генератора случайных чисел и вызывает его <xref:System.Random.NextBytes%2A>, <xref:System.Random.Next%2A>, и <xref:System.Random.NextDouble%2A> методов для автоматического создания последовательности случайных чисел в разных диапазонах.</span><span class="sxs-lookup"><span data-stu-id="ded38-290">The following example creates a single random number generator and calls its <xref:System.Random.NextBytes%2A>, <xref:System.Random.Next%2A>, and <xref:System.Random.NextDouble%2A> methods to generate sequences of random numbers within different ranges.</span></span>  
  
 [!code-cpp[System.Random#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random/cpp/random2.cpp#2)]
 [!code-csharp[System.Random#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random/cs/Random2.cs#2)]
 [!code-vb[System.Random#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random/vb/Random2.vb#2)]  
  
 <span data-ttu-id="ded38-291">Следующий пример приводит к возникновению ошибки случайное целое число, которое используется как индекс для получения строковое значение из массива.</span><span class="sxs-lookup"><span data-stu-id="ded38-291">The following example generates a random integer that it uses as an index to retrieve a string value from an array.</span></span>  
  
 [!code-cpp[System.Random.Next#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random.Next/CPP/next1.cpp#3)]
 [!code-csharp[System.Random.Next#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random.Next/CS/next1.cs#3)]
 [!code-vb[System.Random.Next#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random.Next/VB/next1.vb#3)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <span data-ttu-id="ded38-292">
        <para>В .NET Framework 1.0 и 1.1, минимальная реализация класса, производным от <see cref="T:System.Random" /> требовалось переопределение <see cref="M:System.Random.Sample" /> метод для определения новых или измененных алгоритм генерации случайных чисел. Производный класс может использовать реализацию базового класса <see cref="M:System.Random.Next" />, <see cref="M:System.Random.Next(System.Int32)" />, <see cref="M:System.Random.Next(System.Int32,System.Int32)" />, <see cref="M:System.Random.NextBytes(System.Byte[])" />, и <see cref="M:System.Random.NextDouble" /> методы для вызова реализации в производном классе <see cref="M:System.Random.Sample" /> метод.  В платформе .NET Framework 2.0 и более поздней версии, поведение <see cref="M:System.Random.Next" />, <see cref="M:System.Random.Next(System.Int32,System.Int32)" />, и <see cref="M:System.Random.NextBytes(System.Byte[])" /> методы были изменены, чтобы эти методы не обязательно вызывать реализации в производном классе <see cref="M:System.Random.Sample" /> метод. В результате классы, производные от <see cref="T:System.Random" /> , платформы .NET Framework 2.0 и более поздней версии, следует также переопределить эти три метода.</para>
      </span>
      <span class="sxs-lookup">
        <span data-stu-id="ded38-292">
          <para>In the .NET Framework 1.0 and 1.1, a minimum implementation of a class derived from <see cref="T:System.Random" /> required overriding the <see cref="M:System.Random.Sample" /> method to define a new or modified algorithm for generating random numbers. The derived class could then rely on the base class implementation of the <see cref="M:System.Random.Next" />, <see cref="M:System.Random.Next(System.Int32)" />, <see cref="M:System.Random.Next(System.Int32,System.Int32)" />, <see cref="M:System.Random.NextBytes(System.Byte[])" />, and <see cref="M:System.Random.NextDouble" /> methods to call the derived class implementation of the <see cref="M:System.Random.Sample" /> method.  In the .NET Framework 2.0 and later, the behavior of the <see cref="M:System.Random.Next" />, <see cref="M:System.Random.Next(System.Int32,System.Int32)" />, and <see cref="M:System.Random.NextBytes(System.Byte[])" /> methods have changed so that these methods do not necessarily call the derived class implementation of the <see cref="M:System.Random.Sample" /> method. As a result, classes derived from <see cref="T:System.Random" /> that target the .NET Framework 2.0 and later should also override these three methods.</para>
        </span>
      </span>
    </block>
    <block subset="none" type="usage">
      <span data-ttu-id="ded38-293">
        <para>Реализации генератора случайных чисел в <see cref="T:System.Random" /> класса не обязательно будет остаются неизменными в разных основных версий платформы .NET Framework. В результате не предполагается, что одинаковые начальные значения приведет к той же последовательности псевдослучайных чисел в различных версиях платформы .NET Framework.</para>
      </span>
      <span class="sxs-lookup">
        <span data-stu-id="ded38-293">
          <para>The implementation of the random number generator in the <see cref="T:System.Random" /> class isn't guaranteed to remain the same across major versions of the .NET Framework. As a result, you shouldn't assume that the same seed will result in the same pseudo-random sequence in different versions of the .NET Framework.</para>
        </span>
      </span>
    </block>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ded38-294">Инициализирует новый экземпляр класса <see cref="T:System.Random" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ded38-294">Initializes a new instance of the <see cref="T:System.Random" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Random ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Random.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Random();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ded38-295">Инициализирует новый экземпляр класса <see cref="T:System.Random" /> с помощью зависимого от времени начального значения по умолчанию.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ded38-295">Initializes a new instance of the <see cref="T:System.Random" /> class, using a time-dependent default seed value.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ded38-296">Начальное значение по умолчанию является производным от системных часов и конечное разрешением.</span><span class="sxs-lookup"><span data-stu-id="ded38-296">The default seed value is derived from the system clock and has finite resolution.</span></span> <span data-ttu-id="ded38-297">Таким образом, разные <xref:System.Random> объекты, создаваемые в закрытой последовательности путем вызова конструктора по умолчанию будут иметь одинаковые начальное значение по умолчанию и, таким образом, будут производить идентичные наборы случайных чисел.</span><span class="sxs-lookup"><span data-stu-id="ded38-297">As a result, different <xref:System.Random> objects that are created in close succession by a call to the default constructor will have identical default seed values and, therefore, will produce identical sets of random numbers.</span></span> <span data-ttu-id="ded38-298">Этой проблемы можно избежать, используя одну <xref:System.Random> объект для создания всех случайных чисел.</span><span class="sxs-lookup"><span data-stu-id="ded38-298">This problem can be avoided by using a single <xref:System.Random> object to generate all random numbers.</span></span> <span data-ttu-id="ded38-299">Можно также обойти его, изменив начальное значение, возвращенное методом системных часов и явно предоставив это новое начальное значение для <xref:System.Random.%23ctor%28System.Int32%29> конструктор.</span><span class="sxs-lookup"><span data-stu-id="ded38-299">You can also work around it by modifying the seed value returned by the system clock and then explicitly providing this new seed value to the <xref:System.Random.%23ctor%28System.Int32%29> constructor.</span></span> <span data-ttu-id="ded38-300">Дополнительные сведения см. в разделе <xref:System.Random.%23ctor%28System.Int32%29> конструктор.</span><span class="sxs-lookup"><span data-stu-id="ded38-300">For more information, see the <xref:System.Random.%23ctor%28System.Int32%29> constructor.</span></span>  
  
 <span data-ttu-id="ded38-301">Если требуется генератора случайных чисел для создания случайную последовательность чисел, вызов этого конструктора.</span><span class="sxs-lookup"><span data-stu-id="ded38-301">Call this constructor if you want your random number generator to generate a random sequence of numbers.</span></span> <span data-ttu-id="ded38-302">Для создания основных последовательность случайных чисел, который будет одинаковым для разных генераторов случайных чисел следует вызвать <xref:System.Random.%23ctor%28System.Int32%29> конструктор с предопределенной начальным значением.</span><span class="sxs-lookup"><span data-stu-id="ded38-302">To generate a fixed  sequence of random numbers that will be the same for different random number generators, call the <xref:System.Random.%23ctor%28System.Int32%29> constructor with a fixed seed value .</span></span> <span data-ttu-id="ded38-303">Это <xref:System.Random> перегрузку конструктора часто используется при тестировании приложений, использующих случайных чисел.</span><span class="sxs-lookup"><span data-stu-id="ded38-303">This <xref:System.Random> constructor overload is frequently used when testing apps that use random numbers.</span></span>  
  
 <span data-ttu-id="ded38-304">После создания экземпляра генератора случайных чисел вызове отдельных <xref:System.Random> методы, такие как <xref:System.Random.Next> или <xref:System.Random.NextDouble>, для генерации случайных чисел.</span><span class="sxs-lookup"><span data-stu-id="ded38-304">Once you've instantiated the random number generator, you call individual <xref:System.Random> methods, such as <xref:System.Random.Next> or <xref:System.Random.NextDouble>, to generate random numbers.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ded38-305">В следующем примере используется конструктор по умолчанию для создания экземпляра три <xref:System.Random> объектов и отображает последовательность случайных целых чисел.</span><span class="sxs-lookup"><span data-stu-id="ded38-305">The following example uses the default constructor to instantiate three <xref:System.Random> objects and displays a sequence of five random integers for each.</span></span> <span data-ttu-id="ded38-306">Так как первые две <xref:System.Random> объекты создаются в быстрой последовательности, их экземпляры создаются с помощью одинаковые начальные значения в зависимости от системных часов и, таким образом, они создают идентичную последовательность случайных чисел.</span><span class="sxs-lookup"><span data-stu-id="ded38-306">Because the first two <xref:System.Random> objects are created in close succession, they are instantiated using identical seed values based on the system clock and, therefore, they produce an identical sequence of random numbers.</span></span> <span data-ttu-id="ded38-307">С другой стороны, конструктор по умолчанию третьего <xref:System.Random> объект, называется задержкой 2 секунды, вызвать <xref:System.Threading.Thread.Sleep%2A?displayProperty=nameWithType> метод.</span><span class="sxs-lookup"><span data-stu-id="ded38-307">On the other hand, the default constructor of the third <xref:System.Random> object is called after a two-second delay caused by calling the <xref:System.Threading.Thread.Sleep%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="ded38-308">Так как это создает различные начальное значение для третьего <xref:System.Random> объекта, он создает различные последовательность случайных чисел.</span><span class="sxs-lookup"><span data-stu-id="ded38-308">Because this produces a different seed value for the third <xref:System.Random> object, it produces a different sequence of random numbers.</span></span>  
  
 [!code-csharp[System.Random.Ctor#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random.Ctor/CS/ctor1.cs#2)]
 [!code-vb[System.Random.Ctor#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random.Ctor/VB/ctor1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Random (int Seed);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 Seed) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Random.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (Seed As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Random(int Seed);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="Seed" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Seed">
          <span data-ttu-id="ded38-309">Число, используемое для вычисления начального значения последовательности псевдослучайных чисел.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ded38-309">A number used to calculate a starting value for the pseudo-random number sequence.</span>
          </span>
          <span data-ttu-id="ded38-310">Если задано отрицательное число, используется его абсолютное значение.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ded38-310">If a negative number is specified, the absolute value of the number is used.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ded38-311">Инициализирует новый экземпляр класса <see cref="T:System.Random" /> с помощью указанного начального значения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ded38-311">Initializes a new instance of the <see cref="T:System.Random" /> class, using the specified seed value.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ded38-312">Предоставление задать одинаковые начальные значения для разных <xref:System.Random> объектов вызывает все экземпляры будут производить идентичные последовательности случайных чисел.</span><span class="sxs-lookup"><span data-stu-id="ded38-312">Providing an identical seed value to different <xref:System.Random> objects causes each instance to produce identical sequences of random numbers.</span></span> <span data-ttu-id="ded38-313">Часто это делается при тестировании приложений, которые используют генераторы случайных чисел.</span><span class="sxs-lookup"><span data-stu-id="ded38-313">This is often done when testing apps that rely on random number generators.</span></span>  
  
 <span data-ttu-id="ded38-314">Если приложение требует различные последовательности случайных чисел, вызовите этот конструктор несколько раз с различными начальными значениями.</span><span class="sxs-lookup"><span data-stu-id="ded38-314">If your application requires different random number sequences, invoke this constructor repeatedly with different seed values.</span></span> <span data-ttu-id="ded38-315">Один из способов получения уникального исходного значения — позволить его зависимых от времени.</span><span class="sxs-lookup"><span data-stu-id="ded38-315">One way to produce a unique seed value is to make it time-dependent.</span></span> <span data-ttu-id="ded38-316">Например, извлекать его из системных часов, как <xref:System.Random.%23ctor> перегрузки.</span><span class="sxs-lookup"><span data-stu-id="ded38-316">For example, derive the seed value from the system clock, as the <xref:System.Random.%23ctor> overload does.</span></span> <span data-ttu-id="ded38-317">Однако системные часы не могут иметь достаточно разрешения для предоставления различных вызовов этот конструктор используется другое начальное значение.</span><span class="sxs-lookup"><span data-stu-id="ded38-317">However, the system clock might not have sufficient resolution to provide different invocations of this constructor with a different seed value.</span></span> <span data-ttu-id="ded38-318">Это приведет генераторы случайных чисел, формирующих идентичные последовательности псевдослучайных чисел, как показано в первых двух <xref:System.Random> объектов в следующем примере.</span><span class="sxs-lookup"><span data-stu-id="ded38-318">This results in random number generators that generate identical sequences of pseudo-random numbers, as illustrated by the first two <xref:System.Random> objects in the following example.</span></span> <span data-ttu-id="ded38-319">Чтобы избежать этого, применить алгоритм, изменяющий начальное значение в каждый вызов или вызов <xref:System.Threading.Thread.Sleep%2A?displayProperty=nameWithType> метод, чтобы предоставить другое начальное значение каждого конструктора.</span><span class="sxs-lookup"><span data-stu-id="ded38-319">To prevent this, apply an algorithm to differentiate the seed value in each invocation, or call the <xref:System.Threading.Thread.Sleep%2A?displayProperty=nameWithType> method to ensure that you provide each constructor with a different seed value.</span></span>  
  
 [!code-csharp[System.Random.Ctor#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random.Ctor/CS/ctor4.cs#4)]
 [!code-vb[System.Random.Ctor#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random.Ctor/VB/ctor4.vb#4)]  
  
 <span data-ttu-id="ded38-320">Другой вариант — создать один <xref:System.Random> , используется для формирования случайных чисел в приложении.</span><span class="sxs-lookup"><span data-stu-id="ded38-320">Another option is to instantiate a single <xref:System.Random> object that you use to generate all the random numbers in your application.</span></span> <span data-ttu-id="ded38-321">Это дает немного более высокую производительность, так как при создании экземпляра генератора случайных чисел является довольно дорогой.</span><span class="sxs-lookup"><span data-stu-id="ded38-321">This yields slightly better performance, since instantiating a random number generator is fairly expensive.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ded38-322">В следующем примере создается <xref:System.Random> объектов с помощью конструктора класса, которая принимает параметр начального значения и создает последовательность случайных целых чисел и чисел типа Double.</span><span class="sxs-lookup"><span data-stu-id="ded38-322">The following example creates <xref:System.Random> objects with the class constructor that takes a seed parameter and generates a sequence of random integers and doubles.</span></span> <span data-ttu-id="ded38-323">В примере показано, что и та же последовательность создается при <xref:System.Random> попытку создать объект с помощью конструктора и начальное значение параметра.</span><span class="sxs-lookup"><span data-stu-id="ded38-323">The example illustrates that the same sequence is generated when the <xref:System.Random> object is created again with the constructor and seed parameter.</span></span>  
  
 [!code-cpp[System.Random.Ctor#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random.Ctor/CPP/ctor.cpp#1)]
 [!code-csharp[System.Random.Ctor#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random.Ctor/CS/ctor.cs#1)]
 [!code-vb[System.Random.Ctor#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random.Ctor/VB/ctor.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Next">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ded38-324">Возвращает случайное целое число.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ded38-324">Returns a random integer.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Next">
      <MemberSignature Language="C#" Value="public virtual int Next ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Next() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Random.Next" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Next () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Next();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ded38-325">Возвращает неотрицательное случайное целое число.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ded38-325">Returns a non-negative random integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ded38-326">32-разрядное целое число со знаком, которое больше или равно нулю и меньше чем <see cref="F:System.Int32.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ded38-326">A 32-bit signed integer that is greater than or equal to 0 and less than <see cref="F:System.Int32.MaxValue" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ded38-327"><xref:System.Random.Next%2A?displayProperty=nameWithType> Создает случайное число в диапазоне от 0 до меньше, чем <xref:System.Int32.MaxValue?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="ded38-327"><xref:System.Random.Next%2A?displayProperty=nameWithType> generates a random number whose value ranges from 0 to less than <xref:System.Int32.MaxValue?displayProperty=nameWithType>.</span></span> <span data-ttu-id="ded38-328">Чтобы создать случайное число в диапазоне от 0 до других положительного числа, используйте <xref:System.Random.Next%28System.Int32%29?displayProperty=nameWithType> перегрузки метода.</span><span class="sxs-lookup"><span data-stu-id="ded38-328">To generate a random number whose value ranges from 0 to some other positive number, use the <xref:System.Random.Next%28System.Int32%29?displayProperty=nameWithType> method overload.</span></span> <span data-ttu-id="ded38-329">Чтобы создать случайное число в пределах другой диапазон, используйте <xref:System.Random.Next%28System.Int32%2CSystem.Int32%29?displayProperty=nameWithType> перегрузки метода.</span><span class="sxs-lookup"><span data-stu-id="ded38-329">To generate a random number within a different range, use the <xref:System.Random.Next%28System.Int32%2CSystem.Int32%29?displayProperty=nameWithType> method overload.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ded38-330">В следующем примере создается повторные вызовы <xref:System.Random.Next%2A> метод для создания определенного числа случайных чисел, заданного пользователем.</span><span class="sxs-lookup"><span data-stu-id="ded38-330">The following example makes repeated calls to the <xref:System.Random.Next%2A> method to generate a specific number of random numbers requested by the user.</span></span> <span data-ttu-id="ded38-331"><xref:System.Console.ReadLine%2A?displayProperty=nameWithType> Метод используется для получения входных данных клиента.</span><span class="sxs-lookup"><span data-stu-id="ded38-331">The <xref:System.Console.ReadLine%2A?displayProperty=nameWithType> method is used to get customer input.</span></span>  
  
 [!code-cpp[System.Random.Next#5](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random.Next/CPP/next3.cpp#5)]
 [!code-csharp[System.Random.Next#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random.Next/CS/next3.cs#5)]
 [!code-vb[System.Random.Next#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random.Next/VB/next3.vb#5)]  
  
 <span data-ttu-id="ded38-332">Следующий пример является производным от класса <xref:System.Random> для создания последовательности случайных чисел, распределение которых отличается от равномерного распределения, созданные <xref:System.Random.Sample%2A> метод базового класса.</span><span class="sxs-lookup"><span data-stu-id="ded38-332">The following example derives a class from <xref:System.Random> to generate a sequence of random numbers whose distribution differs from the uniform distribution generated by the <xref:System.Random.Sample%2A> method of the base class.</span></span> <span data-ttu-id="ded38-333">Он переопределяет <xref:System.Random.Sample%2A> способ предоставления распределения случайных чисел и переопределяет <xref:System.Random.Next%2A?displayProperty=nameWithType> метод, используемый последовательность случайных чисел.</span><span class="sxs-lookup"><span data-stu-id="ded38-333">It overrides the <xref:System.Random.Sample%2A> method to provide the distribution of random numbers, and overrides the <xref:System.Random.Next%2A?displayProperty=nameWithType> method to use series of random numbers.</span></span>  
  
 [!code-cpp[System.Random.Sample#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random.Sample/cpp/sampleex.cpp#1)]
 [!code-csharp[System.Random.Sample#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random.Sample/CS/sample.cs#1)]
 [!code-vb[System.Random.Sample#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random.Sample/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="ded38-334">
            <para>Начиная с .NET Framework версии 2.0, если производный класс <see cref="T:System.Random" /> и Переопределите <see cref="M:System.Random.Sample" /> метод, дистрибутив, предоставленный реализации в производном классе <see cref="M:System.Random.Sample" /> метода не используется в вызовах базового класса Реализация <see cref="M:System.Random.Next" /> метода. Вместо этого возвращается равномерного распределения базовыми <see cref="T:System.Random" /> используется класс. Это повышает общую производительность <see cref="T:System.Random" /> класса. Чтобы изменить это поведение, чтобы вызвать <see cref="M:System.Random.Sample" /> метод в производном классе, необходимо также переопределить <see cref="M:System.Random.Next" /> метод.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="ded38-334">
              <para>Starting with the .NET Framework version 2.0, if you derive a class from <see cref="T:System.Random" /> and override the <see cref="M:System.Random.Sample" /> method, the distribution provided by the derived class implementation of the <see cref="M:System.Random.Sample" /> method is not used in calls to the base class implementation of the <see cref="M:System.Random.Next" /> method. Instead, the uniform distribution returned by the base <see cref="T:System.Random" /> class is used. This behavior improves the overall performance of the <see cref="T:System.Random" /> class. To modify this behavior to call the <see cref="M:System.Random.Sample" /> method in the derived class, you must also override the <see cref="M:System.Random.Next" /> method.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.Int32" />
      </Docs>
    </Member>
    <Member MemberName="Next">
      <MemberSignature Language="C#" Value="public virtual int Next (int maxValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Next(int32 maxValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Random.Next(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Next (maxValue As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Next(int maxValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="maxValue" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="maxValue">
          <span data-ttu-id="ded38-335">Эксклюзивная верхняя граница создаваемого случайного числа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ded38-335">The exclusive upper bound of the random number to be generated.</span>
          </span>
          <span data-ttu-id="ded38-336">Значение <c>maxValue</c> должно быть больше или равно 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ded38-336">
              <c>maxValue</c> must be greater than or equal to 0.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ded38-337">Возвращает неотрицательное случайное целое число, которое меньше максимально допустимого значения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ded38-337">Returns a non-negative random integer that is less than the specified maximum.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ded38-338">32-разрядное целое число со знаком, большее или равное 0 и меньшее, чем <paramref name="maxValue" />. То есть диапазон возвращаемых значений включает в себя 0, но не включает <paramref name="maxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ded38-338">A 32-bit signed integer that is greater than or equal to 0, and less than <paramref name="maxValue" />; that is, the range of return values ordinarily includes 0 but not <paramref name="maxValue" />.</span>
          </span>
          <span data-ttu-id="ded38-339">Однако если значение параметра <paramref name="maxValue" /> равно нулю, возвращается значение <paramref name="maxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ded38-339">However, if <paramref name="maxValue" /> equals 0, <paramref name="maxValue" /> is returned.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ded38-340"><xref:System.Random.Next%28System.Int32%29> Перегрузка возвращает случайных целых чисел диапазона от 0 до `maxValue` – 1.</span><span class="sxs-lookup"><span data-stu-id="ded38-340">The <xref:System.Random.Next%28System.Int32%29> overload returns random integers that range from 0 to `maxValue` – 1.</span></span> <span data-ttu-id="ded38-341">Однако если `maxValue` равно 0, метод возвращает значение 0.</span><span class="sxs-lookup"><span data-stu-id="ded38-341">However, if `maxValue` is 0, the method returns 0.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ded38-342">Следующий пример приводит к возникновению случайных целых чисел с помощью перегрузок <xref:System.Random.Next%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="ded38-342">The following example generates random integers with various overloads of the <xref:System.Random.Next%2A> method.</span></span>  
  
 [!code-cpp[System.Random.Next#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random.Next/CPP/next.cpp#1)]
 [!code-csharp[System.Random.Next#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random.Next/CS/next.cs#1)]
 [!code-vb[System.Random.Next#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random.Next/VB/next.vb#1)]  
  
 <span data-ttu-id="ded38-343">Следующий пример приводит к возникновению ошибки случайное целое число, которое используется как индекс для получения строковое значение из массива.</span><span class="sxs-lookup"><span data-stu-id="ded38-343">The following example generates a random integer that it uses as an index to retrieve a string value from an array.</span></span> <span data-ttu-id="ded38-344">Поскольку наибольший индекс массива имеет один меньше его длину, то значение <xref:System.Array.Length%2A?displayProperty=nameWithType> свойство будет задано как `maxValue` параметр.</span><span class="sxs-lookup"><span data-stu-id="ded38-344">Because the highest index of the array is one less than its length, the value of the <xref:System.Array.Length%2A?displayProperty=nameWithType> property is supplied as a the `maxValue` parameter.</span></span>  
  
 [!code-cpp[System.Random.Next#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random.Next/CPP/next1.cpp#3)]
 [!code-csharp[System.Random.Next#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random.Next/CS/next1.cs#3)]
 [!code-vb[System.Random.Next#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random.Next/VB/next1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="ded38-345">Значение параметра <paramref name="maxValue" /> меньше 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ded38-345">
              <paramref name="maxValue" /> is less than 0.</span>
          </span>
        </exception>
        <altmember cref="T:System.Int32" />
      </Docs>
    </Member>
    <Member MemberName="Next">
      <MemberSignature Language="C#" Value="public virtual int Next (int minValue, int maxValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Next(int32 minValue, int32 maxValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Random.Next(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Next (minValue As Integer, maxValue As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Next(int minValue, int maxValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="minValue" Type="System.Int32" />
        <Parameter Name="maxValue" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="minValue">
          <span data-ttu-id="ded38-346">Включенной нижний предел возвращаемого случайного числа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ded38-346">The inclusive lower bound of the random number returned.</span>
          </span>
        </param>
        <param name="maxValue">
          <span data-ttu-id="ded38-347">Исключенный верхний предел возвращаемого случайного числа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ded38-347">The exclusive upper bound of the random number returned.</span>
          </span>
          <span data-ttu-id="ded38-348">Значение <c>maxValue</c> должно быть больше или равно <c>minValue</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ded38-348">
              <c>maxValue</c> must be greater than or equal to <c>minValue</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ded38-349">Возвращает случайное целое число в указанном диапазоне.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ded38-349">Returns a random integer that is within a specified range.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ded38-350">32-разрядное целое число со знаком большее или равное <paramref name="minValue" /> и меньше, чем <paramref name="maxValue" />; то есть, диапазон возвращаемого значения включает <paramref name="minValue" />, не включает <paramref name="maxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ded38-350">A 32-bit signed integer greater than or equal to <paramref name="minValue" /> and less than <paramref name="maxValue" />; that is, the range of return values includes <paramref name="minValue" /> but not <paramref name="maxValue" />.</span>
          </span>
          <span data-ttu-id="ded38-351">Если значение параметра <paramref name="minValue" /> равно значению параметра <paramref name="maxValue" />, то возвращается значение <paramref name="minValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ded38-351">If <paramref name="minValue" /> equals <paramref name="maxValue" />, <paramref name="minValue" /> is returned.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ded38-352"><xref:System.Random.Next%28System.Int32%2CSystem.Int32%29> Перегрузка возвращает случайных целых чисел из указанного диапазона `minValue` для `maxValue` – 1.</span><span class="sxs-lookup"><span data-stu-id="ded38-352">The <xref:System.Random.Next%28System.Int32%2CSystem.Int32%29> overload returns random integers that range from `minValue` to `maxValue` – 1.</span></span> <span data-ttu-id="ded38-353">Однако если `maxValue` равняется `minValue`, метод возвращает `minValue`.</span><span class="sxs-lookup"><span data-stu-id="ded38-353">However, if `maxValue` equals `minValue`, the method returns `minValue`.</span></span>  
  
 <span data-ttu-id="ded38-354">В отличие от других перегрузок <xref:System.Random.Next%2A> метод, который возвращает только неотрицательные значения, этот метод возвращает отрицательное случайное целое число.</span><span class="sxs-lookup"><span data-stu-id="ded38-354">Unlike the other overloads of the <xref:System.Random.Next%2A> method, which return only non-negative values, this method can return a negative random integer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ded38-355">В следующем примере используется <xref:System.Random.Next%28System.Int32%2CSystem.Int32%29?displayProperty=nameWithType> метод для создания случайных целых чисел с тремя различными диапазонами.</span><span class="sxs-lookup"><span data-stu-id="ded38-355">The following example uses the <xref:System.Random.Next%28System.Int32%2CSystem.Int32%29?displayProperty=nameWithType> method to generate random integers with three distinct ranges.</span></span> <span data-ttu-id="ded38-356">Обратите внимание, что точное выходные данные примера зависит от системным начальное значение, передаваемое <xref:System.Random> конструктора класса.</span><span class="sxs-lookup"><span data-stu-id="ded38-356">Note that the exact output from the example depends on the system-supplied seed value passed to the <xref:System.Random> class constructor.</span></span>  
  
 [!code-cpp[System.Random.Next#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random.Next/CPP/next2.cpp#2)]
 [!code-csharp[System.Random.Next#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random.Next/CS/Next2.cs#2)]
 [!code-vb[System.Random.Next#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random.Next/VB/next2.vb#2)]  
  
 <span data-ttu-id="ded38-357">Следующий пример приводит к возникновению ошибки случайное целое число, которое используется как индекс для получения строковое значение из массива.</span><span class="sxs-lookup"><span data-stu-id="ded38-357">The following example generates a random integer that it uses as an index to retrieve a string value from an array.</span></span> <span data-ttu-id="ded38-358">Поскольку наибольший индекс массива имеет один меньше его длину, то значение <xref:System.Array.Length%2A?displayProperty=nameWithType> свойство будет задано как `maxValue` параметр.</span><span class="sxs-lookup"><span data-stu-id="ded38-358">Because the highest index of the array is one less than its length, the value of the <xref:System.Array.Length%2A?displayProperty=nameWithType> property is supplied as a the `maxValue` parameter.</span></span>  
  
 [!code-cpp[System.Random.Next#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random.Next/CPP/next4.cpp#4)]
 [!code-csharp[System.Random.Next#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random.Next/CS/next4.cs#4)]
 [!code-vb[System.Random.Next#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random.Next/VB/next4.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="ded38-359">Значение <paramref name="minValue" /> больше значения <paramref name="maxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ded38-359">
              <paramref name="minValue" /> is greater than <paramref name="maxValue" />.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="ded38-360">
            <para>Начиная с .NET Framework версии 2.0, если производный класс <see cref="T:System.Random" /> и Переопределите <see cref="M:System.Random.Sample" /> метод, дистрибутив, предоставленный реализации в производном классе <see cref="M:System.Random.Sample" /> метода не используется в вызовах базового класса Реализация <see cref="M:System.Random.Next(System.Int32,System.Int32)" /> перегрузку метода, если разность <paramref name="minValue" /> и <paramref name="maxValue" /> параметров больше, чем <see cref="F:System.Int32.MaxValue" />. Вместо этого возвращается равномерного распределения базовыми <see cref="T:System.Random" /> используется класс. Это повышает общую производительность <see cref="T:System.Random" /> класса. Чтобы изменить это поведение, чтобы вызвать <see cref="M:System.Random.Sample" /> метод в производном классе, необходимо также переопределить <see cref="M:System.Random.Next(System.Int32,System.Int32)" /> перегрузки метода.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="ded38-360">
              <para>Starting with the .NET Framework version 2.0, if you derive a class from <see cref="T:System.Random" /> and override the <see cref="M:System.Random.Sample" /> method, the distribution provided by the derived class implementation of the <see cref="M:System.Random.Sample" /> method is not used in calls to the base class implementation of the <see cref="M:System.Random.Next(System.Int32,System.Int32)" /> method overload if the difference between the <paramref name="minValue" /> and <paramref name="maxValue" /> parameters is greater than <see cref="F:System.Int32.MaxValue" />. Instead, the uniform distribution returned by the base <see cref="T:System.Random" /> class is used. This behavior improves the overall performance of the <see cref="T:System.Random" /> class. To modify this behavior to call the <see cref="M:System.Random.Sample" /> method in the derived class, you must also override the <see cref="M:System.Random.Next(System.Int32,System.Int32)" /> method overload.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.Int32" />
      </Docs>
    </Member>
    <Member MemberName="NextBytes">
      <MemberSignature Language="C#" Value="public virtual void NextBytes (byte[] buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void NextBytes(unsigned int8[] buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Random.NextBytes(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub NextBytes (buffer As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void NextBytes(cli::array &lt;System::Byte&gt; ^ buffer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="ded38-361">Массив байтов, содержащий случайные числа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ded38-361">An array of bytes to contain random numbers.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ded38-362">Заполняет элементы указанного массива байтов случайными числами.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ded38-362">Fills the elements of a specified array of bytes with random numbers.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ded38-363">Каждый элемент массива байтов равно случайное число, больше или равно 0 и меньше или равно <xref:System.Byte.MaxValue>.</span><span class="sxs-lookup"><span data-stu-id="ded38-363">Each element of the array of bytes is set to a random number greater than or equal to 0, and less than or equal to <xref:System.Byte.MaxValue>.</span></span>  
  
 <span data-ttu-id="ded38-364">Например, для генерации криптографически защищенного случайного числа, подходит для создания случайного пароля, используйте метод например <xref:System.Security.Cryptography.RNGCryptoServiceProvider.GetBytes%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="ded38-364">For example, to generate a cryptographically secured random number suitable for creating a random password, use a method such as <xref:System.Security.Cryptography.RNGCryptoServiceProvider.GetBytes%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ded38-365">В следующем примере демонстрируется использование <xref:System.Random.NextBytes%2A> метод для заполнения массива байтов случайных байтовых значений.</span><span class="sxs-lookup"><span data-stu-id="ded38-365">The following example demonstrates how to use the <xref:System.Random.NextBytes%2A> method to fill an array of bytes with random byte values.</span></span>  
  
 [!code-cpp[Classic Random.NextBytes Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Random.NextBytes Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Random.NextBytes Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Random.NextBytes Example/CS/source.cs#1)]
 [!code-vb[Classic Random.NextBytes Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Random.NextBytes Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ded38-366">Свойство <paramref name="buffer" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ded38-366">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="ded38-367">
            <para>Начиная с .NET Framework версии 2.0, если производный класс <see cref="T:System.Random" /> и Переопределите <see cref="M:System.Random.Sample" /> метод, дистрибутив, предоставленный реализации в производном классе <see cref="M:System.Random.Sample" /> метода не используется в вызовах базового класса Реализация <see cref="M:System.Random.NextBytes(System.Byte[])" /> метода. Вместо этого возвращается равномерного распределения базовыми <see cref="T:System.Random" /> используется класс. Это повышает общую производительность <see cref="T:System.Random" /> класса. Чтобы изменить это поведение, чтобы вызвать <see cref="M:System.Random.Sample" /> метод в производном классе, необходимо также переопределить <see cref="M:System.Random.NextBytes(System.Byte[])" /> метод.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="ded38-367">
              <para>Starting with the .NET Framework version 2.0, if you derive a class from <see cref="T:System.Random" /> and override the <see cref="M:System.Random.Sample" /> method, the distribution provided by the derived class implementation of the <see cref="M:System.Random.Sample" /> method is not used in calls to the base class implementation of the <see cref="M:System.Random.NextBytes(System.Byte[])" /> method. Instead, the uniform distribution returned by the base <see cref="T:System.Random" /> class is used. This behavior improves the overall performance of the <see cref="T:System.Random" /> class. To modify this behavior to call the <see cref="M:System.Random.Sample" /> method in the derived class, you must also override the <see cref="M:System.Random.NextBytes(System.Byte[])" /> method.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.Byte" />
      </Docs>
    </Member>
    <Member MemberName="NextBytes">
      <MemberSignature Language="C#" Value="public virtual void NextBytes (Span&lt;byte&gt; buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void NextBytes(valuetype System.Span`1&lt;unsigned int8&gt; buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Random.NextBytes(System.Span{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub NextBytes (buffer As Span(Of Byte))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void NextBytes(Span&lt;System::Byte&gt; buffer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Span&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NextDouble">
      <MemberSignature Language="C#" Value="public virtual double NextDouble ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 NextDouble() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Random.NextDouble" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function NextDouble () As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual double NextDouble();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ded38-368">Возвращает случайное число с плавающей запятой, которое больше или равно 0,0 и меньше 1,0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ded38-368">Returns a random floating-point number that is greater than or equal to 0.0, and less than 1.0.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ded38-369">Число двойной точности с плавающей запятой, которое больше или равно 0,0, и меньше 1,0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ded38-369">A double-precision floating point number that is greater than or equal to 0.0, and less than 1.0.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ded38-370">Фактический верхней границы случайного числа, возвращаемого этим методом является 0.99999999999999978.</span><span class="sxs-lookup"><span data-stu-id="ded38-370">The actual upper bound of the random number returned by this method is 0.99999999999999978.</span></span>  
  
 <span data-ttu-id="ded38-371">Для получения случайных значений с плавающей запятой в диапазоне, отличные от 0,0 до 1,0, обратитесь к разделу «Получать значения с плавающей запятой в указанном диапазоне» <xref:System.Random> разделе, посвященном классу.</span><span class="sxs-lookup"><span data-stu-id="ded38-371">To retrieve random floating-point values within a range other than 0.0 and 1.0, see the "Retrieve floating-point values in a specified range" section of the <xref:System.Random> class topic.</span></span>  
  
 <span data-ttu-id="ded38-372">Этот метод является открытой версией защищенного метода <xref:System.Random.Sample%2A>.</span><span class="sxs-lookup"><span data-stu-id="ded38-372">This method is the public version of the protected method, <xref:System.Random.Sample%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ded38-373">В следующем примере используется <xref:System.Random.NextDouble%2A> метод для создания последовательности случайных чисел типа Double.</span><span class="sxs-lookup"><span data-stu-id="ded38-373">The following example uses the <xref:System.Random.NextDouble%2A> method to generate sequences of random doubles.</span></span>  
  
 [!code-cpp[System.Random.Ctor#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random.Ctor/CPP/ctor.cpp#1)]
 [!code-csharp[System.Random.Ctor#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random.Ctor/CS/ctor.cs#1)]
 [!code-vb[System.Random.Ctor#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random.Ctor/VB/ctor.vb#1)]  
  
 <span data-ttu-id="ded38-374">В следующем примере вызывается <xref:System.Random.NextDouble%2A> метод для создания 100 случайных чисел и отображает их частоту распределение.</span><span class="sxs-lookup"><span data-stu-id="ded38-374">The following example calls the <xref:System.Random.NextDouble%2A> method to generate 100 random numbers and displays their frequency distribution.</span></span>  
  
 [!code-csharp[System.Random.NextDouble#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.random.nextdouble/cs/nextdouble1.cs#2)]
 [!code-vb[System.Random.NextDouble#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.random.nextdouble/vb/nextdouble1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Sample">
      <MemberSignature Language="C#" Value="protected virtual double Sample ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance float64 Sample() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Random.Sample" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function Sample () As Double" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual double Sample();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ded38-375">Возвращает случайное число с плавающей запятой в диапазоне от 0,0 до 1,0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ded38-375">Returns a random floating-point number between 0.0 and 1.0.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ded38-376">Число двойной точности с плавающей запятой, которое больше или равно 0,0, и меньше 1,0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ded38-376">A double-precision floating point number that is greater than or equal to 0.0, and less than 1.0.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ded38-377">Для создания другого распределения случайных или различных случайных числа принцип генератора, создайте класс, производный от <xref:System.Random> класса и переопределить <xref:System.Random.Sample%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="ded38-377">To produce a different random distribution or a different random number generator principle, derive a class from the <xref:System.Random> class and override the <xref:System.Random.Sample%2A> method.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="ded38-378"><xref:System.Random.Sample%2A> Метод `protected`, что означает, что он доступен только в пределах <xref:System.Random> класс и его производные классы.</span><span class="sxs-lookup"><span data-stu-id="ded38-378">The <xref:System.Random.Sample%2A> method is `protected`, which means that it is accessible only within the <xref:System.Random> class and its derived classes.</span></span> <span data-ttu-id="ded38-379">Чтобы получить случайное число между 0 и 1 из <xref:System.Random> экземпляра, вызовите метод <xref:System.Random.NextDouble%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="ded38-379">To generate a random number between 0 and 1 from a <xref:System.Random> instance, call the <xref:System.Random.NextDouble%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ded38-380">Следующий пример является производным от класса <xref:System.Random> и переопределяет <xref:System.Random.Sample%2A> метод для создания распределения случайных чисел.</span><span class="sxs-lookup"><span data-stu-id="ded38-380">The following example derives a class from <xref:System.Random> and overrides the <xref:System.Random.Sample%2A> method to generate a distribution of random numbers.</span></span> <span data-ttu-id="ded38-381">Это распределение отличается от равномерного распределения, созданные <xref:System.Random.Sample%2A> метод базового класса.</span><span class="sxs-lookup"><span data-stu-id="ded38-381">This distribution is different than the uniform distribution generated by the <xref:System.Random.Sample%2A> method of the base class.</span></span>  
  
 [!code-cpp[System.Random.Sample#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Random.Sample/cpp/sampleex.cpp#1)]
 [!code-csharp[System.Random.Sample#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Random.Sample/CS/sample.cs#1)]
 [!code-vb[System.Random.Sample#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Random.Sample/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="ded38-382">
            <para>Начиная с .NET Framework версии 2.0, если производный класс <see cref="T:System.Random" /> и Переопределите <see cref="M:System.Random.Sample" /> метод, дистрибутив, предоставленный реализации в производном классе <see cref="M:System.Random.Sample" /> метода не используется в вызовах базового класса Реализация следующих методов: - <see cref="M:System.Random.NextBytes(System.Byte[])" /> метод.  - <see cref="M:System.Random.Next" /> Метод.  - <see cref="M:System.Random.Next(System.Int32,System.Int32)" /> Метод, если (<paramref name="maxValue" /> - <paramref name="minValue" />) больше, чем <see cref="F:System.Int32.MaxValue" />.  Вместо этого равномерного распределения, предоставляемые базовый <see cref="T:System.Random" /> используется класс. Это повышает общую производительность <see cref="T:System.Random" /> класса. Чтобы изменить это поведение, чтобы вызвать реализацию <see cref="M:System.Random.Sample" /> метод в производном классе, необходимо также переопределить поведение этих трех элементов. Иллюстрация приведена в примере.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="ded38-382">
              <para>Starting with the .NET Framework version 2.0, if you derive a class from <see cref="T:System.Random" /> and override the <see cref="M:System.Random.Sample" /> method, the distribution provided by the derived class implementation of the <see cref="M:System.Random.Sample" /> method is not used in calls to the base class implementation of the following methods:  -   The <see cref="M:System.Random.NextBytes(System.Byte[])" /> method.  -   The <see cref="M:System.Random.Next" /> method.  -   The <see cref="M:System.Random.Next(System.Int32,System.Int32)" /> method, if (<paramref name="maxValue" /> - <paramref name="minValue" />) is greater than <see cref="F:System.Int32.MaxValue" />.  Instead, the uniform distribution provided by the base <see cref="T:System.Random" /> class is used. This behavior improves the overall performance of the <see cref="T:System.Random" /> class. To modify this behavior to call the implementation of the <see cref="M:System.Random.Sample" /> method in the derived class, you must also override the behavior of these three members. The example provides an illustration.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Random.NextDouble" />
      </Docs>
    </Member>
  </Members>
</Type>