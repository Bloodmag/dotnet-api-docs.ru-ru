<Type Name="ReadOnlySpan&lt;T&gt;" FullName="System.ReadOnlySpan&lt;T&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="53c5acd9e5f3272ee9d312017693641b176a4aed" />
    <Meta Name="ms.sourcegitcommit" Value="9dda17222b9f7d3edf130133bfb1370d5b410a4b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="09/22/2018" />
    <Meta Name="ms.locfileid" Value="46649484" />
  </Metadata>
  <TypeSignature Language="C#" Value="public struct ReadOnlySpan&lt;T&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit ReadOnlySpan`1&lt;T&gt; extends System.ValueType" />
  <TypeSignature Language="DocId" Value="T:System.ReadOnlySpan`1" />
  <TypeSignature Language="VB.NET" Value="Public Structure ReadOnlySpan(Of T)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public value class ReadOnlySpan" />
  <TypeSignature Language="F#" Value="type ReadOnlySpan&lt;'T&gt; = struct" />
  <AssemblyInfo>
    <AssemblyName>System.Memory</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-2.1">
      <AttributeName>System.Runtime.CompilerServices.IsByRefLike</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netcore-2.1">
      <AttributeName>System.Runtime.CompilerServices.IsReadOnly</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="T">
      <span data-ttu-id="907a6-101">Тип элементов в <see cref="System.ReadOnlySpan`1" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="907a6-101">The type of items in the <see cref="System.ReadOnlySpan`1" />.</span>
      </span>
    </typeparam>
    <summary>
      <span data-ttu-id="907a6-102">Предоставляет типобезопасную и безопасную для памяти реализацию непрерывной области произвольной памяти только для чтения.</span>
      <span class="sxs-lookup">
        <span data-stu-id="907a6-102">Provides a type-safe and memory-safe read-only representation of a contiguous region of arbitrary memory.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[<span data-ttu-id="907a6-103">`ReadOnlySpan<T>` — [структура ссылки](~/docs/csharp/reference-semantics-with-value-types.md#ref-struct-type) , выделенной в стеке и никогда не могли переходить к управляемой куче.</span><span class="sxs-lookup"><span data-stu-id="907a6-103">`ReadOnlySpan<T>` is a [ref struct](~/docs/csharp/reference-semantics-with-value-types.md#ref-struct-type) that is allocated on the stack and can never escape to the managed heap.</span></span> <span data-ttu-id="907a6-104">Ref struct типы имеют ряд ограничений, чтобы убедиться, что они не может быть назначен управляемой куче, включая, что они не могут быть упакованы, записанную в лямбда-выражения, присваиваются переменным типа <xref:System.Object>, назначенной `dynamic` переменные, и в них нельзя реализовывать любой другой тип интерфейса.</span><span class="sxs-lookup"><span data-stu-id="907a6-104">Ref struct types have a number of restrictions to ensure that they cannot be promoted to the managed heap, including that they can't be boxed, captured in lambda expressions, assigned to variables of type <xref:System.Object>, assigned to `dynamic` variables, and they cannot implement any interface type.</span></span>

<span data-ttu-id="907a6-105">Объект `ReadOnlySpan<T>` экземпляр часто используется для ссылки на элементы массива или его части массива.</span><span class="sxs-lookup"><span data-stu-id="907a6-105">A `ReadOnlySpan<T>` instance is often used to reference the elements of an array or a portion of an array.</span></span> <span data-ttu-id="907a6-106">В отличие от массива, однако `ReadOnlySpan<T>` экземпляр может указывать на управляемую память, внутренней памяти или управляемых памяти в стеке.</span><span class="sxs-lookup"><span data-stu-id="907a6-106">Unlike an array, however, a `ReadOnlySpan<T>` instance can point to managed memory, native memory, or memory managed on the stack.</span></span>]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ReadOnlySpan (T[] array);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(!T[] array) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ReadOnlySpan`1.#ctor(`0[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (array As T())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ReadOnlySpan(cli::array &lt;T&gt; ^ array);" />
      <MemberSignature Language="F#" Value="new ReadOnlySpan&lt;'T&gt; : 'T[] -&gt; ReadOnlySpan&lt;'T&gt;" Usage="new System.ReadOnlySpan&lt;'T&gt; array" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="907a6-107">Массив, из которого создается объект <see cref="T:System.ReadOnlySpan`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="907a6-107">The array from which to create the <see cref="T:System.ReadOnlySpan`1" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="907a6-108">Создает новый объект <see cref="T:System.ReadOnlySpan`1" /> по всему указанному массиву.</span>
          <span class="sxs-lookup">
            <span data-stu-id="907a6-108">Creates a new <see cref="T:System.ReadOnlySpan`1" /> over the entirety of a specified array.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[<span data-ttu-id="907a6-109">Если массив имеет значение null, возвращает значение null, этот конструктор `ReadOnlySpan<T>`.</span><span class="sxs-lookup"><span data-stu-id="907a6-109">If the array is null, this constructor returns a null `ReadOnlySpan<T>`.</span></span>]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ReadOnlySpan (void* pointer, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(void* pointer, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ReadOnlySpan`1.#ctor(System.Void*,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ReadOnlySpan(void* pointer, int length);" />
      <MemberSignature Language="F#" Value="new ReadOnlySpan&lt;'T&gt; : nativeptr&lt;unit&gt; * int -&gt; ReadOnlySpan&lt;'T&gt;" Usage="new System.ReadOnlySpan&lt;'T&gt; (pointer, length)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="pointer" Type="System.Void*" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="pointer">
          <span data-ttu-id="907a6-110">Указатель на начальный адрес указанного числа объектов <paramref name="T" /> в памяти.</span>
          <span class="sxs-lookup">
            <span data-stu-id="907a6-110">A pointer to the starting address of a specified number of <paramref name="T" /> objects in memory.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="907a6-111">Количество включаемых объектов <paramref name="T" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="907a6-111">The number of <paramref name="T" /> objects to be included.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="907a6-112">Создает новый объект <see cref="T:System.ReadOnlySpan`1" /> из указанного числа байтов, начиная с указанного адреса памяти.</span>
          <span class="sxs-lookup">
            <span data-stu-id="907a6-112">Creates a new <see cref="T:System.ReadOnlySpan`1" /> from a specified number of bytes starting at a specified memory address.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[<span data-ttu-id="907a6-113">Этот конструктор следует использовать с осторожностью, поскольку при этом создается произвольно типизированные `T`s из блока памяти.</span><span class="sxs-lookup"><span data-stu-id="907a6-113">This constructor should be used with care, since it creates arbitrarily typed `T`s from a block of memory.</span></span>]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="907a6-114">
            <paramref name="T" /> является ссылочным типом или содержит ссылки и поэтому не может храниться в неуправляемой памяти.</span>
          <span class="sxs-lookup">
            <span data-stu-id="907a6-114">
              <paramref name="T" /> is a reference type or contains references and therefore cannot be stored in unmanaged memory.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="907a6-115">
            <paramref name="length" /> является отрицательным значением.</span>
          <span class="sxs-lookup">
            <span data-stu-id="907a6-115">
              <paramref name="length" /> is negative.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ReadOnlySpan (T[] array, int start);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(!T[] array, int32 start) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ReadOnlySpan`1.#ctor(`0[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (array As T(), start As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ReadOnlySpan(cli::array &lt;T&gt; ^ array, int start);" />
      <MemberSignature Language="F#" Value="new ReadOnlySpan&lt;'T&gt; : 'T[] * int -&gt; ReadOnlySpan&lt;'T&gt;" Usage="new System.ReadOnlySpan&lt;'T&gt; (array, start)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="start" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="907a6-116">Массив, из которого создается объект <see cref="T:System.ReadOnlySpan`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="907a6-116">The array from which to create the <see cref="T:System.ReadOnlySpan`1" />.</span>
          </span>
        </param>
        <param name="start">
          <span data-ttu-id="907a6-117">Начальный индекс, с которого начинается диапазон только для чтения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="907a6-117">The starting index from which to begin the read-only span.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="907a6-118">Создает новый объект <see cref="T:System.ReadOnlySpan`1" /> из массива, начиная с указанного индекса и до конца массива.</span>
          <span class="sxs-lookup">
            <span data-stu-id="907a6-118">Creates a new <see cref="T:System.ReadOnlySpan`1" /> from an array starting at the specified index and continuing until the end of the array.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="907a6-119">Значение параметра <paramref name="start" /> меньше 0 или больше длины массива.</span>
          <span class="sxs-lookup">
            <span data-stu-id="907a6-119">
              <paramref name="start" /> is less-than 0 or greater-than the length of the array.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="907a6-120">Параметр <paramref name="array" /> имеет значение null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="907a6-120">
              <paramref name="array" /> is null.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ReadOnlySpan (T[] array, int start, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(!T[] array, int32 start, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ReadOnlySpan`1.#ctor(`0[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (array As T(), start As Integer, length As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ReadOnlySpan(cli::array &lt;T&gt; ^ array, int start, int length);" />
      <MemberSignature Language="F#" Value="new ReadOnlySpan&lt;'T&gt; : 'T[] * int * int -&gt; ReadOnlySpan&lt;'T&gt;" Usage="new System.ReadOnlySpan&lt;'T&gt; (array, start, length)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="907a6-121">Массив, из которого создается объект <see cref="T:System.ReadOnlySpan`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="907a6-121">The array from which to create the <see cref="T:System.ReadOnlySpan`1" />.</span>
          </span>
        </param>
        <param name="start">
          <span data-ttu-id="907a6-122">Индекс первого включаемого элемента.</span>
          <span class="sxs-lookup">
            <span data-stu-id="907a6-122">The index of the first element to include.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="907a6-123">Число включаемых элементов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="907a6-123">The number of elements to include.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="907a6-124">Создает новый объект <see cref="T:System.ReadOnlySpan`1" />, который включает указанное число элементов массива, начиная с указанного индекса.</span>
          <span class="sxs-lookup">
            <span data-stu-id="907a6-124">Creates a new <see cref="T:System.ReadOnlySpan`1" /> that includes a specified number of elements of an array starting at a specified index.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="907a6-125">
            <paramref name="array" /> имеет значение <see langword="null" />, но <paramref name="start" /> или <paramref name="length" /> не равно нулю.</span>
          <span class="sxs-lookup">
            <span data-stu-id="907a6-125">
              <paramref name="array" /> is <see langword="null" />, but <paramref name="start" /> or <paramref name="length" /> is non-zero.</span>
          </span>
          <p />
          <span data-ttu-id="907a6-126">— или —</span>
          <span class="sxs-lookup">
            <span data-stu-id="907a6-126">--or--</span>
          </span>
          <p />
          <span data-ttu-id="907a6-127">
            <paramref name="start" /> выходит за пределы растрового массива.</span>
          <span class="sxs-lookup">
            <span data-stu-id="907a6-127">
              <paramref name="start" /> is outside the bounds of the array.</span>
          </span>
          <p />
          <span data-ttu-id="907a6-128">— или —</span>
          <span class="sxs-lookup">
            <span data-stu-id="907a6-128">--or--</span>
          </span>
          <p />
          <span data-ttu-id="907a6-129">
            <paramref name="start" /> и <paramref name="length" /> превышает количество элементов в массиве.</span>
          <span class="sxs-lookup">
            <span data-stu-id="907a6-129">
              <paramref name="start" /> and <paramref name="length" /> exceeds the number of elements in the array.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (Span&lt;T&gt; destination);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(valuetype System.Span`1&lt;!T&gt; destination) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ReadOnlySpan`1.CopyTo(System.Span{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (destination As Span(Of T))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(Span&lt;T&gt; destination);" />
      <MemberSignature Language="F#" Value="member this.CopyTo : Span&lt;'T&gt; -&gt; unit" Usage="readOnlySpan.CopyTo destination" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Span&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="destination">
          <span data-ttu-id="907a6-130">Диапазон для копирования элементов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="907a6-130">The span to copy items into.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="907a6-131">Копирует содержимое этого объекта <see cref="System.ReadOnlySpan`1" /> в назначение <see cref="System.Span`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="907a6-131">Copies the contents of this <see cref="System.ReadOnlySpan`1" /> into a destination <see cref="System.Span`1" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[<span data-ttu-id="907a6-132">Если `source` и `destination` перекрываются, полностью `source` обрабатывается так, как если бы он был скопирован во временное расположение, прежде чем он копируется в `destination`.</span><span class="sxs-lookup"><span data-stu-id="907a6-132">If the `source` and `destination` overlap, the entirety of `source` is handled as if it was copied to a temporary location before it is copied to `destination`.</span></span>]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="907a6-133">
            <paramref name="destination" /> короче, чем исходный <see cref="System.ReadOnlySpan`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="907a6-133">
              <paramref name="destination" /> is shorter than the source <see cref="System.ReadOnlySpan`1" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="DangerousCreate">
      <MemberSignature Language="C#" Value="public static ReadOnlySpan&lt;T&gt; DangerousCreate (object obj, ref T objectData, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.ReadOnlySpan`1&lt;!T&gt; DangerousCreate(object obj, !T&amp; objectData, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ReadOnlySpan`1.DangerousCreate(System.Object,`0@,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DangerousCreate (obj As Object, ByRef objectData As T, length As Integer) As ReadOnlySpan(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static ReadOnlySpan&lt;T&gt; DangerousCreate(System::Object ^ obj, T % objectData, int length);" />
      <MemberSignature Language="F#" Value="static member DangerousCreate : obj *  * int -&gt; ReadOnlySpan&lt;'T&gt;" Usage="System.ReadOnlySpan&lt;'T&gt;.DangerousCreate (obj, objectData, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ReadOnlySpan&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="objectData" Type="T" RefType="ref" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="907a6-134">Управляемый объект, содержащий данные, которые будут охвачены диапазоном.</span>
          <span class="sxs-lookup">
            <span data-stu-id="907a6-134">The managed object that contains the data the span will cover.</span>
          </span>
        </param>
        <param name="objectData">
          <span data-ttu-id="907a6-135">Ссылка на данные в объекте.</span>
          <span class="sxs-lookup">
            <span data-stu-id="907a6-135">A reference to data within the object.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="907a6-136">Количество заполняемых элементов <paramref name="T" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="907a6-136">The number of <paramref name="T" /> elements to span.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="907a6-137">Создает новый объект <see cref="T:System.ReadOnlySpan`1" /> над частью обыкновенного управляемого объекта.</span>
          <span class="sxs-lookup">
            <span data-stu-id="907a6-137">Creates a new <see cref="T:System.ReadOnlySpan`1" /> over a portion of a regular managed object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="907a6-138">Объект <see cref="T:System.ReadOnlySpan`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="907a6-138">A <see cref="T:System.ReadOnlySpan`1" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[<span data-ttu-id="907a6-139">Этот метод представляет опасность, так как его **не проверяет** для следующих условий ошибки:</span><span class="sxs-lookup"><span data-stu-id="907a6-139">This method is dangerous because it **does not check** for the following error conditions:</span></span>

- <span data-ttu-id="907a6-140">Параметр `length` является неверным.</span><span class="sxs-lookup"><span data-stu-id="907a6-140">The `length` parameter is incorrect.</span></span>
- <span data-ttu-id="907a6-141">Параметр `obj` имеет значение null.</span><span class="sxs-lookup"><span data-stu-id="907a6-141">The `obj` parameter is null.</span></span>
- <span data-ttu-id="907a6-142">Объекты `obj` точек может содержать необработанный указатель.</span><span class="sxs-lookup"><span data-stu-id="907a6-142">The objects `obj` points to may contain a raw pointer.</span></span>]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DangerousGetPinnableReference">
      <MemberSignature Language="C#" Value="public T DangerousGetPinnableReference ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !T DangerousGetPinnableReference() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ReadOnlySpan`1.DangerousGetPinnableReference" />
      <MemberSignature Language="VB.NET" Value="Public Function DangerousGetPinnableReference () As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; T % DangerousGetPinnableReference();" />
      <MemberSignature Language="F#" Value="member this.DangerousGetPinnableReference : unit -&gt; " Usage="readOnlySpan.DangerousGetPinnableReference " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T@</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="907a6-143">Возвращает ссылку на элемент <see cref="T:System.ReadOnlySpan`1" /> при нулевом индексе.</span>
          <span class="sxs-lookup">
            <span data-stu-id="907a6-143">Returns a reference to the element of the <see cref="T:System.ReadOnlySpan`1" /> at index zero.</span>
          </span>
          <span data-ttu-id="907a6-144">Если диапазон только для чтения пуст, возвращает ссылку на адрес в памяти, где хранился бы первый элемент.</span>
          <span class="sxs-lookup">
            <span data-stu-id="907a6-144">If the read-only span is empty, returns the reference to the memory location where the first element would have been stored.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="907a6-145">Ссылка на первый элемент <see cref="T:System.ReadOnlySpan`1" /> при нулевом индексе.</span>
          <span class="sxs-lookup">
            <span data-stu-id="907a6-145">A reference to the first element of the <see cref="T:System.ReadOnlySpan`1" /> at index zero.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[<span data-ttu-id="907a6-146">Этот метод возвращает [структура ссылки](~/docs/csharp/reference-semantics-with-value-types.md#ref-struct-type).</span><span class="sxs-lookup"><span data-stu-id="907a6-146">This method returns a [ref struct](~/docs/csharp/reference-semantics-with-value-types.md#ref-struct-type).</span></span> <span data-ttu-id="907a6-147">Он может использоваться для закрепления <xref:System.ReadOnlySpan`1> в памяти.</span><span class="sxs-lookup"><span data-stu-id="907a6-147">It can be used for pinning a <xref:System.ReadOnlySpan`1> in memory.</span></span> <span data-ttu-id="907a6-148">Она необходима для поддержки работы <xref:System.ReadOnlySpan`1> в [фиксированной](~/docs/csharp/language-reference/keywords/fixed-statement.md) инструкции.</span><span class="sxs-lookup"><span data-stu-id="907a6-148">It is required to support the use of a <xref:System.ReadOnlySpan`1> within a [fixed](~/docs/csharp/language-reference/keywords/fixed-statement.md) statement.</span></span>

<span data-ttu-id="907a6-149">Эта ссылка используется для закрепления и никогда не должно быть разыменование.</span><span class="sxs-lookup"><span data-stu-id="907a6-149">This reference is used for pinning and must never be dereferenced.</span></span>]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Empty">
      <MemberSignature Language="C#" Value="public static ReadOnlySpan&lt;T&gt; Empty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.ReadOnlySpan`1&lt;!T&gt; Empty" />
      <MemberSignature Language="DocId" Value="P:System.ReadOnlySpan`1.Empty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Empty As ReadOnlySpan(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property ReadOnlySpan&lt;T&gt; Empty { ReadOnlySpan&lt;T&gt; get(); };" />
      <MemberSignature Language="F#" Value="member this.Empty : ReadOnlySpan&lt;'T&gt;" Usage="System.ReadOnlySpan&lt;'T&gt;.Empty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ReadOnlySpan&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="907a6-150">Возвращает пустой массив <see cref="T:System.ReadOnlySpan`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="907a6-150">Returns an empty <see cref="T:System.ReadOnlySpan`1" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="907a6-151">Возвращает пустой массив <see cref="T:System.ReadOnlySpan`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="907a6-151">Returns an empty <see cref="T:System.ReadOnlySpan`1" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ReadOnlySpan`1.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="readOnlySpan.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1">
          <AttributeName>System.Obsolete("Equals() on ReadOnlySpan will always throw an exception. Use == instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="907a6-152">Не поддерживается.</span>
          <span class="sxs-lookup">
            <span data-stu-id="907a6-152">Not supported.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="907a6-153">Не поддерживается.</span>
          <span class="sxs-lookup">
            <span data-stu-id="907a6-153">Not supported.</span>
          </span>
          <span data-ttu-id="907a6-154">Создает исключение <see cref="T:System.NotSupportedException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="907a6-154">Throws a <see cref="T:System.NotSupportedException" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="907a6-155">Не поддерживается.</span>
          <span class="sxs-lookup">
            <span data-stu-id="907a6-155">Not supported.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[<span data-ttu-id="907a6-156">Не поддерживается.</span><span class="sxs-lookup"><span data-stu-id="907a6-156">Not supported.</span></span>]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="907a6-157">Всегда создается этим методом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="907a6-157">Always thrown by this method.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public ReadOnlySpan&lt;T&gt;.Enumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.ReadOnlySpan`1/Enumerator&lt;!T&gt; GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ReadOnlySpan`1.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As ReadOnlySpan(Of T).Enumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ReadOnlySpan&lt;T&gt;::Enumerator GetEnumerator();" />
      <MemberSignature Language="F#" Value="member this.GetEnumerator : unit -&gt; ReadOnlySpan&lt;'T&gt;.Enumerator" Usage="readOnlySpan.GetEnumerator " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ReadOnlySpan&lt;T&gt;+Enumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="907a6-158">Возвращает перечислитель для коллекции <see cref="T:System.ReadOnlySpan`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="907a6-158">Returns an enumerator for this <see cref="T:System.ReadOnlySpan`1" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="907a6-159">Перечислитель для этого диапазона только для чтения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="907a6-159">An enumerator for this read-only span.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[<span data-ttu-id="907a6-160">Вместо вызова метода <xref:System.ReadOnlySpan%601.GetEnumerator%2A> метод напрямую, можно использовать C# `foreach` и оператор Visual Basic `For Each`... `Next` конструкции для перечисления <xref:System.ReadOnlySpan%601>.</span><span class="sxs-lookup"><span data-stu-id="907a6-160">Instead of calling the <xref:System.ReadOnlySpan%601.GetEnumerator%2A> method directly, you can use the C# `foreach` statement and the Visual Basic `For Each`...`Next` construct to enumerate a <xref:System.ReadOnlySpan%601>.</span></span>]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ReadOnlySpan`1.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="readOnlySpan.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1">
          <AttributeName>System.Obsolete("GetHashCode() on ReadOnlySpan will always throw an exception.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="907a6-161">Не поддерживается.</span>
          <span class="sxs-lookup">
            <span data-stu-id="907a6-161">Not supported.</span>
          </span>
          <span data-ttu-id="907a6-162">Создает исключение <see cref="T:System.NotSupportedException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="907a6-162">Throws a <see cref="T:System.NotSupportedException" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="907a6-163">Не поддерживается.</span>
          <span class="sxs-lookup">
            <span data-stu-id="907a6-163">Not supported.</span>
          </span>
        </returns>
        <remarks>
          <span data-ttu-id="907a6-164">Не поддерживается.</span>
          <span class="sxs-lookup">
            <span data-stu-id="907a6-164">Not supported.</span>
          </span>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="907a6-165">Всегда создается этим методом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="907a6-165">Always thrown by this method.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsEmpty">
      <MemberSignature Language="C#" Value="public bool IsEmpty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEmpty" />
      <MemberSignature Language="DocId" Value="P:System.ReadOnlySpan`1.IsEmpty" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsEmpty As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsEmpty { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsEmpty : bool" Usage="System.ReadOnlySpan&lt;'T&gt;.IsEmpty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="907a6-166">Возвращает значение, указывающее на то, что текущий диапазон только для чтения пуст.</span>
          <span class="sxs-lookup">
            <span data-stu-id="907a6-166">Returns a value that indicates the current read-only span is empty.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="907a6-167">
            <see langword="true" /> Если текущий диапазон пуст; в противном случае <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="907a6-167">
              <see langword="true" /> when the current span is empty; otherwise <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public T&amp; this[int index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance T&amp; modreq(System.Runtime.InteropServices.InAttribute) Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.ReadOnlySpan`1.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(index As Integer) As T&amp;" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T&amp; ^ default[int] { T&amp; ^ get(int index); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : T&amp;" Usage="System.ReadOnlySpan&lt;'T&gt;.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.1">
          <AttributeName>System.Runtime.CompilerServices.IsReadOnly</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>T&amp;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="907a6-168">Индекс элемента (с нуля), который требуется получить.</span>
          <span class="sxs-lookup">
            <span data-stu-id="907a6-168">The zero-based index of the element to get.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="907a6-169">Возвращает элемент из диапазона только для чтения по начинающемуся с нуля индексу.</span>
          <span class="sxs-lookup">
            <span data-stu-id="907a6-169">Gets an item from the read-only span at the specified zero-based index.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="907a6-170">Элемент, из области только для чтения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="907a6-170">The element from the read-only span.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="907a6-171">
            <paramref name="index" /> меньше нуля либо больше или равен <see cref="P:System.ReadOnlySpan`1.Length" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="907a6-171">
              <paramref name="index" /> is less then zero or greater than or equal to <see cref="P:System.ReadOnlySpan`1.Length" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="C#" Value="public int Length { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Length" />
      <MemberSignature Language="DocId" Value="P:System.ReadOnlySpan`1.Length" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Length As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Length { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Length : int" Usage="System.ReadOnlySpan&lt;'T&gt;.Length" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="907a6-172">Количество элементов в диапазоне только для чтения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="907a6-172">The number of items in the read-only span.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="907a6-173">Количество элементов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="907a6-173">The number of items.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (ReadOnlySpan&lt;T&gt; left, ReadOnlySpan&lt;T&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.ReadOnlySpan`1&lt;!T&gt; left, valuetype System.ReadOnlySpan`1&lt;!T&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ReadOnlySpan`1.op_Equality(System.ReadOnlySpan{`0},System.ReadOnlySpan{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (left As ReadOnlySpan(Of T), right As ReadOnlySpan(Of T)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(ReadOnlySpan&lt;T&gt; left, ReadOnlySpan&lt;T&gt; right);" />
      <MemberSignature Language="F#" Value="static member ( = ) : ReadOnlySpan&lt;'T&gt; * ReadOnlySpan&lt;'T&gt; -&gt; bool" Usage="left = right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.ReadOnlySpan&lt;T&gt;" />
        <Parameter Name="right" Type="System.ReadOnlySpan&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="907a6-174">Первый диапазон для сравнения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="907a6-174">The first span to compare.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="907a6-175">Второй диапазон для сравнения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="907a6-175">The second span to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="907a6-176">Возвращает значение, указывающее, равны ли два экземпляра <see cref="T:System.ReadOnlySpan`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="907a6-176">Returns a value that indicates whether two <see cref="T:System.ReadOnlySpan`1" /> instances are equal.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="907a6-177">Значение <see langword="true" />, если два экземпляра <see cref="T:System.ReadOnlySpan`1" />равны; в противном случае — значение <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="907a6-177">
              <see langword="true" /> if the two <see cref="T:System.ReadOnlySpan`1" /> instances are equal; otherwise, <see langword="false" /></span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[<span data-ttu-id="907a6-178">Этот тест, если два <xref:System.ReadOnlySpan`1> экземпляров указывать на один и тот же начальный адрес памяти, а также имеют одинаковые <xref:System.ReadOnlySpan`1.Length> значения.</span><span class="sxs-lookup"><span data-stu-id="907a6-178">This tests if two <xref:System.ReadOnlySpan`1> instances point to the same starting memory location, and have the same <xref:System.ReadOnlySpan`1.Length> values.</span></span> <span data-ttu-id="907a6-179">Это не сравнивает содержимое двух <xref:System.ReadOnlySpan`1> экземпляров.</span><span class="sxs-lookup"><span data-stu-id="907a6-179">This does not compare the contents of two <xref:System.ReadOnlySpan`1> instances.</span></span>]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator ReadOnlySpan&lt;T&gt; (T[] array);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.ReadOnlySpan`1&lt;!T&gt; op_Implicit(!T[] array) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ReadOnlySpan`1.op_Implicit(`0[])~System.ReadOnlySpan{`0}" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (array As T()) As ReadOnlySpan(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator ReadOnlySpan&lt;T&gt;(cli::array &lt;T&gt; ^ array);" />
      <MemberSignature Language="F#" Value="static member op_Implicit : 'T[] -&gt; ReadOnlySpan&lt;'T&gt;" Usage="System.ReadOnlySpan&lt;'T&gt;.op_Implicit array" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ReadOnlySpan&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="907a6-180">Массив, который будет преобразован в <see cref="T:System.ReadOnlySpan`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="907a6-180">The array to convert to a <see cref="T:System.ReadOnlySpan`1" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="907a6-181">Определяет неявное преобразование массива в <see cref="T:System.ReadOnlySpan`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="907a6-181">Defines an implicit conversion of an array to a <see cref="T:System.ReadOnlySpan`1" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="907a6-182">Диапазон только для чтения, соответствующий параметру <paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="907a6-182">The read-only span that corresponds to <paramref name="array" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator ReadOnlySpan&lt;T&gt; (ArraySegment&lt;T&gt; arraySegment);" FrameworkAlternate="netcore-2.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.ReadOnlySpan`1&lt;!T&gt; op_Implicit(valuetype System.ArraySegment`1&lt;!T&gt; arraySegment) cil managed" FrameworkAlternate="netcore-2.0" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (arraySegment As ArraySegment(Of T)) As ReadOnlySpan(Of T)" FrameworkAlternate="netcore-2.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator ReadOnlySpan&lt;T&gt;(ArraySegment&lt;T&gt; arraySegment);" FrameworkAlternate="netcore-2.0" />
      <MemberSignature Language="C#" Value="public static implicit operator ReadOnlySpan&lt;T&gt; (ArraySegment&lt;T&gt; segment);" FrameworkAlternate="netcore-2.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.ReadOnlySpan`1&lt;!T&gt; op_Implicit(valuetype System.ArraySegment`1&lt;!T&gt; segment) cil managed" FrameworkAlternate="netcore-2.1" />
      <MemberSignature Language="DocId" Value="M:System.ReadOnlySpan`1.op_Implicit(System.ArraySegment{`0})~System.ReadOnlySpan{`0}" FrameworkAlternate="netcore-2.1;netcore-2.0" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (segment As ArraySegment(Of T)) As ReadOnlySpan(Of T)" FrameworkAlternate="netcore-2.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator ReadOnlySpan&lt;T&gt;(ArraySegment&lt;T&gt; segment);" FrameworkAlternate="netcore-2.1" />
      <MemberSignature Language="F#" Value="static member op_Implicit : ArraySegment&lt;'T&gt; -&gt; ReadOnlySpan&lt;'T&gt;" Usage="System.ReadOnlySpan&lt;'T&gt;.op_Implicit segment" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ReadOnlySpan&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arraySegment" Type="System.ArraySegment&lt;T&gt;" Index="0" FrameworkAlternate="netcore-2.0" />
        <Parameter Name="segment" Type="System.ArraySegment&lt;T&gt;" Index="0" FrameworkAlternate="netcore-2.1" />
      </Parameters>
      <Docs>
        <param name="arraySegment">
          <span data-ttu-id="907a6-183">Сегмент массива, который будет преобразован в <see cref="T:System.ReadOnlySpan`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="907a6-183">The array segment to be converted to a <see cref="T:System.ReadOnlySpan`1" />.</span>
          </span>
        </param>
        <param name="segment">
          <span data-ttu-id="907a6-184">Сегмент массива, который будет преобразован в <see cref="T:System.ReadOnlySpan`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="907a6-184">The array segment to be converted to a <see cref="T:System.ReadOnlySpan`1" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="907a6-185">Определяет неявное преобразование <see cref="T:System.ArraySegment`1" /> в <see cref="T:System.ReadOnlySpan`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="907a6-185">Defines an implicit conversion of an <see cref="T:System.ArraySegment`1" /> to a <see cref="T:System.ReadOnlySpan`1" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="907a6-186">Диапазон только для чтения, соответствующий сегменту массива.</span>
          <span class="sxs-lookup">
            <span data-stu-id="907a6-186">A read-only span that corresponds to the array segment.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (ReadOnlySpan&lt;T&gt; left, ReadOnlySpan&lt;T&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.ReadOnlySpan`1&lt;!T&gt; left, valuetype System.ReadOnlySpan`1&lt;!T&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ReadOnlySpan`1.op_Inequality(System.ReadOnlySpan{`0},System.ReadOnlySpan{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (left As ReadOnlySpan(Of T), right As ReadOnlySpan(Of T)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(ReadOnlySpan&lt;T&gt; left, ReadOnlySpan&lt;T&gt; right);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : ReadOnlySpan&lt;'T&gt; * ReadOnlySpan&lt;'T&gt; -&gt; bool" Usage="System.ReadOnlySpan&lt;'T&gt;.op_Inequality (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.ReadOnlySpan&lt;T&gt;" />
        <Parameter Name="right" Type="System.ReadOnlySpan&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="907a6-187">Первый доступный только для чтения диапазон для сравнения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="907a6-187">The first read-only span to compare.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="907a6-188">Второй доступный только для чтения диапазон для сравнения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="907a6-188">The second read-only span to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="907a6-189">Возвращает значение, указывающее, равны ли два экземпляра <see cref="T:System.ReadOnlySpan`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="907a6-189">Returns a value that indicates whether two <see cref="T:System.ReadOnlySpan`1" /> instances are not equal.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="907a6-190">Значение <see langword="true" /> если два экземпляра <see cref="T:System.ReadOnlySpan`1" /> не равны; в противном случае — значение <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="907a6-190">
              <see langword="true" /> if the two <see cref="T:System.ReadOnlySpan`1" /> instances are not equal; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[<span data-ttu-id="907a6-191">Два <xref:System.ReadOnlySpan%601> они не равны, если они имеют разные длины, или если соответствующие элементы `left` и `right` в другое положение.</span><span class="sxs-lookup"><span data-stu-id="907a6-191">Two <xref:System.ReadOnlySpan%601> instances are not equal if they have different lengths or if the corresponding elements of `left` and `right` point to different memory locations.</span></span>]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Slice">
      <MemberSignature Language="C#" Value="public ReadOnlySpan&lt;T&gt; Slice (int start);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.ReadOnlySpan`1&lt;!T&gt; Slice(int32 start) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ReadOnlySpan`1.Slice(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Slice (start As Integer) As ReadOnlySpan(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ReadOnlySpan&lt;T&gt; Slice(int start);" />
      <MemberSignature Language="F#" Value="member this.Slice : int -&gt; ReadOnlySpan&lt;'T&gt;" Usage="readOnlySpan.Slice start" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ReadOnlySpan&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="start" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="start">
          <span data-ttu-id="907a6-192">Индекс, с которого нужно начать срез.</span>
          <span class="sxs-lookup">
            <span data-stu-id="907a6-192">The index at which to begin the slice.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="907a6-193">Формирует срез вне текущего диапазона только для чтения, который начинается с указанного индекса.</span>
          <span class="sxs-lookup">
            <span data-stu-id="907a6-193">Forms a slice out of the current read-only span that begins at a specified index.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="907a6-194">Интервал, который состоит из всех элементов текущего диапазона от <paramref name="index" /> до конца диапазона.</span>
          <span class="sxs-lookup">
            <span data-stu-id="907a6-194">A span that consists of all elements of the current span from <paramref name="index" /> to the end of the span.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="907a6-195">Значение параметра <paramref name="start" /> больше числа элементов в диапазоне только для чтения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="907a6-195">
              <paramref name="start" /> is greater than the number of items in the read-only span.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Slice">
      <MemberSignature Language="C#" Value="public ReadOnlySpan&lt;T&gt; Slice (int start, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.ReadOnlySpan`1&lt;!T&gt; Slice(int32 start, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ReadOnlySpan`1.Slice(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Slice (start As Integer, length As Integer) As ReadOnlySpan(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ReadOnlySpan&lt;T&gt; Slice(int start, int length);" />
      <MemberSignature Language="F#" Value="member this.Slice : int * int -&gt; ReadOnlySpan&lt;'T&gt;" Usage="readOnlySpan.Slice (start, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ReadOnlySpan&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="start">
          <span data-ttu-id="907a6-196">Индекс, с которого нужно начать срез.</span>
          <span class="sxs-lookup">
            <span data-stu-id="907a6-196">The index at which to begin this slice.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="907a6-197">Требуемая длина для среза.</span>
          <span class="sxs-lookup">
            <span data-stu-id="907a6-197">The desired length for the slice.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="907a6-198">Формирует срез вне текущего диапазона только для чтения, начиная с указанного индекса до указанной длины.</span>
          <span class="sxs-lookup">
            <span data-stu-id="907a6-198">Forms a slice out of the current read-only span starting at a specified index for a specified length.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="907a6-199">Диапазон только для чтения, состоящий из элементов <paramref name="length" /> из текущего диапазона, начиная с <paramref name="index" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="907a6-199">A read-only span that consists of <paramref name="length" /> elements from the current span starting at <paramref name="index" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="907a6-200">
            <paramref name="start" /> меньше нуля либо больше или равен <see cref="T:System.Span`1.Length" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="907a6-200">
              <paramref name="start" /> is less than zero or greater than or equal to <see cref="T:System.Span`1.Length" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToArray">
      <MemberSignature Language="C#" Value="public T[] ToArray ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !T[] ToArray() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ReadOnlySpan`1.ToArray" />
      <MemberSignature Language="VB.NET" Value="Public Function ToArray () As T()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;T&gt; ^ ToArray();" />
      <MemberSignature Language="F#" Value="member this.ToArray : unit -&gt; 'T[]" Usage="readOnlySpan.ToArray " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="907a6-201">Копирует содержимое этого диапазона только для чтения в новый массив.</span>
          <span class="sxs-lookup">
            <span data-stu-id="907a6-201">Copies the contents of this read-only span into a new array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="907a6-202">Массив, содержащий данные в текущем диапазоне.</span>
          <span class="sxs-lookup">
            <span data-stu-id="907a6-202">An array containing the data in the current span.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[<span data-ttu-id="907a6-203">Этот метод выполняет копирование данные по выделению и кучи и таким образом, следует избегать, если это возможно.</span><span class="sxs-lookup"><span data-stu-id="907a6-203">This method performs a heap allocation and data copy, and therefore, should be avoided if possible.</span></span> <span data-ttu-id="907a6-204">Его он иногда необходимыми, когда API-интерфейсы, поддерживающие <xref:System.ReadOnlySpan%601> не доступны, но API-интерфейсы, которые работают с массивами.</span><span class="sxs-lookup"><span data-stu-id="907a6-204">It it sometimes necessary when APIs that support <xref:System.ReadOnlySpan%601> are not available, but APIs that work with arrays are.</span></span>]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ReadOnlySpan`1.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="readOnlySpan.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="907a6-205">Возвращает строковое представление объекта <see cref="T:System.ReadOnlySpan`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="907a6-205">Returns the string representation of this <see cref="T:System.ReadOnlySpan`1" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="907a6-206">Строковое представление данного экземпляра.</span>
          <span class="sxs-lookup">
            <span data-stu-id="907a6-206">The string representation of this instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[<span data-ttu-id="907a6-207">Для `ReadOnlySpan<Char>`, `ToString` возвращает метод <xref:System.String> , содержащий символы, на которые указывают диапазон.</span><span class="sxs-lookup"><span data-stu-id="907a6-207">For a `ReadOnlySpan<Char>`, the `ToString` method returns a <xref:System.String> that contains the characters pointed to by the span.</span></span> <span data-ttu-id="907a6-208">В противном случае возвращается <xref:System.String> с именем типа и количество элементов, содержащихся в диапазон.</span><span class="sxs-lookup"><span data-stu-id="907a6-208">Otherwise, it returns a <xref:System.String> with the name of the type and the number of elements that the span contains.</span></span>]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryCopyTo">
      <MemberSignature Language="C#" Value="public bool TryCopyTo (Span&lt;T&gt; destination);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryCopyTo(valuetype System.Span`1&lt;!T&gt; destination) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ReadOnlySpan`1.TryCopyTo(System.Span{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function TryCopyTo (destination As Span(Of T)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryCopyTo(Span&lt;T&gt; destination);" />
      <MemberSignature Language="F#" Value="member this.TryCopyTo : Span&lt;'T&gt; -&gt; bool" Usage="readOnlySpan.TryCopyTo destination" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Span&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="destination">
          <span data-ttu-id="907a6-209">Целевой объект операции копирования.</span>
          <span class="sxs-lookup">
            <span data-stu-id="907a6-209">The target of the copy operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="907a6-210">Пытается копировать содержимое этого объекта <see cref="System.ReadOnlySpan`1" /> в <see cref="System.Span`1" /> и возвращает значение, указывающее, была ли выполнена операция.</span>
          <span class="sxs-lookup">
            <span data-stu-id="907a6-210">Attempts to copy the contents of this <see cref="System.ReadOnlySpan`1" /> into a <see cref="System.Span`1" /> and returns a value to indicate whether or not the operation succeeded.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="907a6-211">Значение <see langword="true" />, если операция копирования выполнена успешно, в противном случае — значение <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="907a6-211">
              <see langword="true" /> if the copy operation succeeded; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[<span data-ttu-id="907a6-212">Если `source` и `destination` перекрываются, полностью `source` обрабатывается так, как если бы он был скопирован во временное расположение, прежде чем он копируется в `destination`.</span><span class="sxs-lookup"><span data-stu-id="907a6-212">If the `source` and `destination` overlap, the entirety of `source` is handled as if it was copied to a temporary location before it is copied to `destination`.</span></span>

<span data-ttu-id="907a6-213">Если `destination` длина не превышает `source`, элементы не копируются, а метод возвращает `false`.</span><span class="sxs-lookup"><span data-stu-id="907a6-213">If the `destination` length is shorter than `source`, no items are copied and the method returns `false`.</span></span>]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>