<Type Name="TimeZoneInfo+TransitionTime" FullName="System.TimeZoneInfo+TransitionTime">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="81dddef25ee4dee2eddd1f1de95cb86508ff77bf" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30729528" />
  </Metadata>
  <TypeSignature Language="C#" Value="public struct TimeZoneInfo.TransitionTime : IEquatable&lt;TimeZoneInfo.TransitionTime&gt;, System.Runtime.Serialization.IDeserializationCallback, System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class nested public sequential ansi serializable sealed beforefieldinit TimeZoneInfo/TransitionTime extends System.ValueType implements class System.IEquatable`1&lt;valuetype System.TimeZoneInfo/TransitionTime&gt;, class System.Runtime.Serialization.IDeserializationCallback, class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.TimeZoneInfo.TransitionTime" />
  <TypeSignature Language="VB.NET" Value="Public Structure TimeZoneInfo.TransitionTime&#xA;Implements IDeserializationCallback, IEquatable(Of TimeZoneInfo.TransitionTime), ISerializable" />
  <TypeSignature Language="C++ CLI" Value="public: value class TimeZoneInfo::TransitionTime : IEquatable&lt;TimeZoneInfo::TransitionTime&gt;, System::Runtime::Serialization::IDeserializationCallback, System::Runtime::Serialization::ISerializable" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.TimeZoneInfo+TransitionTime&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.IDeserializationCallback</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("System.Core, Version=3.5.0.0, Culture=Neutral, PublicKeyToken=b77a5c561934e089")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Предоставляет данные о конкретном изменении времени, например переходе с летнего времени на зимнее или наоборот, в заданном часовом поясе.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Можно использовать <xref:System.TimeZoneInfo.TransitionTime> структуры указывают, когда происходит переход со стандартного времени на летнее время и с летнего времени обратно в стандартное время. Эта структура поддерживает правила с фиксированной датой и плавающей датой. Использовать правила с фиксированной датой для перевода времени, происходящего в определенный день определенного месяца (например, 2:00:00. 3 ноября). Правила с плавающей датой следует использовать для перевода времени, происходящего в определенный день указанной недели определенного месяца (например, 2:00:00. в первое воскресенье ноября).  
  
 В следующей таблице сравниваются параметры, используемые фиксированной даты, переходит с плавающей датой:  
  
||Месяц.|Неделя|Day|Время|  
|-|-----------|----------|---------|----------|  
|Правило фиксированной даты|<xref:System.TimeZoneInfo.TransitionTime.Month%2A>|Н/Д|<xref:System.TimeZoneInfo.TransitionTime.Day%2A>|<xref:System.TimeZoneInfo.TransitionTime.TimeOfDay%2A>|  
|Правило с плавающей датой|<xref:System.TimeZoneInfo.TransitionTime.Month%2A>|<xref:System.TimeZoneInfo.TransitionTime.Week%2A>|<xref:System.TimeZoneInfo.TransitionTime.DayOfWeek%2A>|<xref:System.TimeZoneInfo.TransitionTime.TimeOfDay%2A>|  
  
 Для переходов с фиксированной датой и с плавающей датой <xref:System.TimeZoneInfo.TransitionTime.TimeOfDay%2A> свойство Возвращает время, когда происходит изменение времени. Для переходов со стандартного на летнее время это значение зимнего времени часового пояса. Для переходов с летнего на зимнее это значение часового пояса на летнее время. Это <xref:System.DateTime> значения которого компонент даты учитывается; его год, месяц и день значение всегда должно равняться 1.  
  
> [!NOTE]
>  Экземпляр <xref:System.TimeZoneInfo.TransitionTime> структуры является неизменяемым. После создания объекта его значение нельзя изменить.  
  
 Объект <xref:System.TimeZoneInfo.TransitionTime> объект может быть создан путем вызова `static` (`Shared` в Visual Basic) <xref:System.TimeZoneInfo.TransitionTime.CreateFixedDateRule%2A> и <xref:System.TimeZoneInfo.TransitionTime.CreateFloatingDateRule%2A> методы для создания правила фиксированной или плавающей датой, соответственно. Начальный и конечный <xref:System.TimeZoneInfo.TransitionTime> объекты затем передаются как параметры для <xref:System.TimeZoneInfo.AdjustmentRule.CreateAdjustmentRule%2A> метод, чтобы создать новое правило коррекции, включающий сведения о времени этот переход.  
  
 <xref:System.TimeZoneInfo.AdjustmentRule.DaylightTransitionStart%2A> И <xref:System.TimeZoneInfo.AdjustmentRule.DaylightTransitionEnd%2A> свойства <xref:System.TimeZoneInfo.AdjustmentRule> возвращаемого объекта <xref:System.TimeZoneInfo.TransitionTime> объекта.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="CreateFixedDateRule">
      <MemberSignature Language="C#" Value="public static TimeZoneInfo.TransitionTime CreateFixedDateRule (DateTime timeOfDay, int month, int day);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.TimeZoneInfo/TransitionTime CreateFixedDateRule(valuetype System.DateTime timeOfDay, int32 month, int32 day) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZoneInfo.TransitionTime.CreateFixedDateRule(System.DateTime,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateFixedDateRule (timeOfDay As DateTime, month As Integer, day As Integer) As TimeZoneInfo.TransitionTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static TimeZoneInfo::TransitionTime CreateFixedDateRule(DateTime timeOfDay, int month, int day);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeZoneInfo+TransitionTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeOfDay" Type="System.DateTime" />
        <Parameter Name="month" Type="System.Int32" />
        <Parameter Name="day" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="timeOfDay">Время, когда происходит изменение времени. Этот параметр соответствует свойству <see cref="P:System.TimeZoneInfo.TransitionTime.TimeOfDay" />.</param>
        <param name="month">Месяц, когда происходит изменение времени. Этот параметр соответствует свойству <see cref="P:System.TimeZoneInfo.TransitionTime.Month" />.</param>
        <param name="day">День месяца, в который происходит изменение времени. Этот параметр соответствует свойству <see cref="P:System.TimeZoneInfo.TransitionTime.Day" />.</param>
        <summary>Определяет изменение времени, производимое по правилу с фиксированной датой (то есть в указанный день определенного месяца).</summary>
        <returns>Сведения об изменении времени.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод создает правило фиксированной датой (то есть изменение времени, происходящее в определенный день определенного месяца). Например изменение времени, всегда происходит 28 ноября, следует правилу с фиксированной датой.  
  
 Для переходов со стандартного времени на летнее время `timeOfDay` аргумент представляет собой время перехода в стандартное время часового пояса. Для переходов с летнего времени на стандартное время оно представляет время перехода на зимнее время в часовом поясе. Обратите внимание, что это <xref:System.DateTime> значение которого год, месяц и значения дат необходимо все равно 1.  
  
   
  
## Examples  
 В следующем примере создается переходы часового пояса для воображаемого часового пояса с помощью правила фиксированной даты и правило с плавающей датой. Правило фиксированной датой определяет изменение часового пояса, который начинается в 2:00. 15 марта и оканчивается в 3:00 15 ноября 1900-1955 годы.  
  
 [!code-csharp[System.TimeZone2.TransitionTime.Class#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone2.TransitionTime.Class/cs/System.TimeZone2.TransitionTime.Class.cs#2)]
 [!code-vb[System.TimeZone2.TransitionTime.Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone2.TransitionTime.Class/vb/System.TimeZone2.TransitionTime.Class.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Параметр <paramref name="timeOfDay" /> имеет компонент даты, не являющийся используемым по умолчанию.  
  
 - или -  
  
 Параметр <paramref name="timeOfDay" /> имеет свойство <see cref="P:System.DateTime.Kind" />, не равное <see cref="F:System.DateTimeKind.Unspecified" />.  
  
 - или -  
  
 Параметр <paramref name="timeOfDay" /> не представляет целое число миллисекунд.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Параметр <paramref name="month" /> имеет значение меньше 1 или больше 12.  
  
 - или -  
  
 Параметр <paramref name="day" /> имеет значение меньше 1 или больше 31.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateFloatingDateRule">
      <MemberSignature Language="C#" Value="public static TimeZoneInfo.TransitionTime CreateFloatingDateRule (DateTime timeOfDay, int month, int week, DayOfWeek dayOfWeek);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.TimeZoneInfo/TransitionTime CreateFloatingDateRule(valuetype System.DateTime timeOfDay, int32 month, int32 week, valuetype System.DayOfWeek dayOfWeek) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZoneInfo.TransitionTime.CreateFloatingDateRule(System.DateTime,System.Int32,System.Int32,System.DayOfWeek)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static TimeZoneInfo::TransitionTime CreateFloatingDateRule(DateTime timeOfDay, int month, int week, DayOfWeek dayOfWeek);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeZoneInfo+TransitionTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeOfDay" Type="System.DateTime" />
        <Parameter Name="month" Type="System.Int32" />
        <Parameter Name="week" Type="System.Int32" />
        <Parameter Name="dayOfWeek" Type="System.DayOfWeek" />
      </Parameters>
      <Docs>
        <param name="timeOfDay">Время, когда происходит изменение времени. Этот параметр соответствует свойству <see cref="P:System.TimeZoneInfo.TransitionTime.TimeOfDay" />.</param>
        <param name="month">Месяц, когда происходит изменение времени. Этот параметр соответствует свойству <see cref="P:System.TimeZoneInfo.TransitionTime.Month" />.</param>
        <param name="week">Неделя месяца, в которую происходит изменение времени. Это значение находится в диапазоне от 1 до 5, где 5 представляет последнюю неделю месяца. Этот параметр соответствует свойству <see cref="P:System.TimeZoneInfo.TransitionTime.Week" />.</param>
        <param name="dayOfWeek">День недели, в который происходит изменение времени. Этот параметр соответствует свойству <see cref="P:System.TimeZoneInfo.TransitionTime.DayOfWeek" />.</param>
        <summary>Определяет изменение времени, производимое по правилу с плавающей датой (то есть изменение времени, происходящее в указанный день указанной недели определенного месяца).</summary>
        <returns>Сведения об изменении времени.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод создает правило с плавающей датой (то есть изменение времени, происходящее в определенный день указанной недели определенного месяца). Например изменение времени, происходящее в последнее воскресенье октября, следует правилу с плавающей датой.  
  
 Для переходов со стандартного времени на летнее время `timeOfDay` аргумент представляет собой время перехода в стандартное время часового пояса. Для переходов с летнего времени на стандартное время оно представляет время перехода на зимнее время в часовом поясе. Обратите внимание, что это <xref:System.DateTime> значение которого год, месяц и значения дат необходимо все равно 1.  
  
   
  
## Examples  
 В следующем примере создается переходы часового пояса для воображаемого часового пояса с помощью правила фиксированной даты и правило с плавающей датой. Правило с плавающей датой определяет изменение часового пояса, который начинается в 2:00. в последнее воскресенье марта и оканчивается в 3:00 в четвертое воскресенье октября с 1956 года.  
  
 [!code-csharp[System.TimeZone2.TransitionTime.Class#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone2.TransitionTime.Class/cs/System.TimeZone2.TransitionTime.Class.cs#2)]
 [!code-vb[System.TimeZone2.TransitionTime.Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone2.TransitionTime.Class/vb/System.TimeZone2.TransitionTime.Class.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Параметр <paramref name="timeOfDay" /> имеет компонент даты, не являющийся используемым по умолчанию.  
  
 - или -  
  
 Параметр <paramref name="timeOfDay" /> не представляет целое число миллисекунд.  
  
 - или -  
  
 Параметр <paramref name="timeOfDay" /> имеет свойство <see cref="P:System.DateTime.Kind" />, не равное <see cref="F:System.DateTimeKind.Unspecified" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          Параметр <paramref name="month" /> имеет значение меньше 1 или больше 12.  
  
 - или -  
  
 Параметр <paramref name="week" /> имеет значение меньше 1 или больше 5.  
  
 - или -  
  
 Параметр <paramref name="dayOfWeek" /> не является членом перечисления <see cref="T:System.DayOfWeek" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Day">
      <MemberSignature Language="C#" Value="public int Day { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Day" />
      <MemberSignature Language="DocId" Value="P:System.TimeZoneInfo.TransitionTime.Day" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Day As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Day { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает день, в который происходит изменение времени.</summary>
        <value>День, в который происходит изменение времени.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.TimeZoneInfo.TransitionTime.Day%2A> Свойство возвращает допустимое значение, только если <xref:System.TimeZoneInfo.TransitionTime.IsFixedDateRule%2A> свойство `true`.  
  
 <xref:System.TimeZoneInfo.TransitionTime.Day%2A> Значение свойства соответствует значению `day` параметр <xref:System.TimeZoneInfo.TransitionTime.CreateFixedDateRule%2A> метода. Если его значение больше, чем число дней в месяце перехода, переход происходит в последний день месяца.  
  
 <xref:System.TimeZoneInfo.TransitionTime.Day%2A> Указывает день месяца, к которому применяется правило фиксированной даты (например, 15 апреля). Напротив <xref:System.TimeZoneInfo.TransitionTime.DayOfWeek%2A> указывает день недели, к которому применяется правило с плавающей датой (например, второе воскресенье ноября).  
  
   
  
## Examples  
 В следующем примере выполняется перечисление часовых поясов, найденных на локальном компьютере и отображается информация о времени перехода для всех переходов с фиксированной датой. Эта информация включает день, в который происходит изменение времени.  
  
 [!code-csharp[System.TimeZone2.TransitionTime.Class#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone2.TransitionTime.Class/cs/System.TimeZone2.TransitionTime.Class.cs#3)]
 [!code-vb[System.TimeZone2.TransitionTime.Class#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone2.TransitionTime.Class/vb/System.TimeZone2.TransitionTime.Class.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DayOfWeek">
      <MemberSignature Language="C#" Value="public DayOfWeek DayOfWeek { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DayOfWeek DayOfWeek" />
      <MemberSignature Language="DocId" Value="P:System.TimeZoneInfo.TransitionTime.DayOfWeek" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DayOfWeek As DayOfWeek" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DayOfWeek DayOfWeek { DayOfWeek get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DayOfWeek</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает день недели, в который происходит изменение времени.</summary>
        <value>День недели, в который происходит изменение времени.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.TimeZoneInfo.TransitionTime.DayOfWeek%2A> Свойство возвращает допустимое значение, только если <xref:System.TimeZoneInfo.TransitionTime.IsFixedDateRule%2A> свойство `false`.  
  
 <xref:System.TimeZoneInfo.TransitionTime.DayOfWeek%2A> Указывает день недели, к которому применяется правило с плавающей датой (например, второе воскресенье ноября). Напротив <xref:System.TimeZoneInfo.TransitionTime.Day%2A> свойство указывает день месяца, к которому применяется правило фиксированной даты (например, 15 апреля).  
  
   
  
## Examples  
 В следующем примере выполняется перечисление часовых поясов, найденных на локальном компьютере и отображается информация о времени перехода для всех переходов с плавающей датой. Эта информация включает день недели, в который происходит изменение времени.  
  
 [!code-csharp[System.TimeZone2.TransitionTime.Class#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone2.TransitionTime.Class/cs/System.TimeZone2.TransitionTime.Class.cs#4)]
 [!code-vb[System.TimeZone2.TransitionTime.Class#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone2.TransitionTime.Class/vb/System.TimeZone2.TransitionTime.Class.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Определяет, идентичны ли значения двух указанных объектов <see cref="T:System.TimeZoneInfo.TransitionTime" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZoneInfo.TransitionTime.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">Объект, сравниваемый с текущим объектом <see cref="T:System.TimeZoneInfo.TransitionTime" />.</param>
        <summary>Определяет, имеет ли объект одинаковые значения с текущим объектом <see cref="T:System.TimeZoneInfo.TransitionTime" />.</summary>
        <returns>
          Значение <see langword="true" />, если эти два объекта равны; в противном случае — значение <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Равенство определяется следующим образом: `obj` параметр должен быть <xref:System.TimeZoneInfo.TransitionTime> объекта и идентичен текущего значения свойства должны быть <xref:System.TimeZoneInfo.TransitionTime> объекта.  
  
   
  
## Examples  
 В следующем примере демонстрируется вызовы <xref:System.TimeZoneInfo.TransitionTime.Equals%2A> метод.  
  
 [!code-csharp[System.TimeZone2.TransitionTime.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone2.TransitionTime.Class/cs/System.TimeZone2.TransitionTime.Class.cs#1)]
 [!code-vb[System.TimeZone2.TransitionTime.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone2.TransitionTime.Class/vb/System.TimeZone2.TransitionTime.Class.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (TimeZoneInfo.TransitionTime other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(valuetype System.TimeZoneInfo/TransitionTime other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZoneInfo.TransitionTime.Equals(System.TimeZoneInfo.TransitionTime)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As TimeZoneInfo.TransitionTime) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(TimeZoneInfo::TransitionTime other);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.TimeZoneInfo+TransitionTime" />
      </Parameters>
      <Docs>
        <param name="other">Объект, сравниваемый с текущим экземпляром.</param>
        <summary>Определяет, имеет ли текущий объект <see cref="T:System.TimeZoneInfo.TransitionTime" /> одинаковые значения со вторым объектом <see cref="T:System.TimeZoneInfo.TransitionTime" />.</summary>
        <returns>
          Значения <see langword="true" />, если оба объекта имеют одинаковые значения свойств; в противном случае значения <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Чтобы определить, является ли два <xref:System.TimeZoneInfo.TransitionTime> объекты равны, этот метод выполняет сравнение каждого свойства. Метод возвращает `true` только тогда, когда текущий <xref:System.TimeZoneInfo.TransitionTime> объекта и `other` объекта имеют одинаковые значения для каждого из <xref:System.TimeZoneInfo.TransitionTime> шести значений свойств объекта.  
  
   
  
## Examples  
 В следующем примере демонстрируется вызовы <xref:System.TimeZoneInfo.TransitionTime.Equals%2A> метод.  
  
 [!code-csharp[System.TimeZone2.TransitionTime.Class#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone2.TransitionTime.Class/cs/System.TimeZone2.TransitionTime.Class.cs#7)]
 [!code-vb[System.TimeZone2.TransitionTime.Class#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone2.TransitionTime.Class/vb/System.TimeZone2.TransitionTime.Class.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZoneInfo.TransitionTime.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Служит хэш-функцией для алгоритмов хэширования и таких структур данных, как хэш-таблицы.</summary>
        <returns>32-битовое целое число со знаком, выступающее в роли хэш-кода данного объекта <see cref="T:System.TimeZoneInfo.TransitionTime" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFixedDateRule">
      <MemberSignature Language="C#" Value="public bool IsFixedDateRule { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFixedDateRule" />
      <MemberSignature Language="DocId" Value="P:System.TimeZoneInfo.TransitionTime.IsFixedDateRule" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsFixedDateRule As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsFixedDateRule { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает значение, указывающее, происходит ли изменение времени в фиксированную дату и время (например, 1 ноября) или нефиксированную (например, в последнее воскресенье октября).</summary>
        <value>
          <see langword="true" />, если применяется правило изменения времени с фиксированной датой; <see langword="false" />, если применяется правило изменения времени с плавающей датой.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Правило фиксированной даты указывает, что переход происходит на же дата и время каждого года, к которому относится это правило коррекции. Например изменение времени, всегда происходящее 3 ноября, следует правилу с фиксированной датой. Правило с плавающей датой указывает, что переход происходит в определенный день указанной недели определенного месяца для каждого года, к которому применяется правило коррекции. Например изменение времени, происходящее в первое воскресенье ноября, следует правилу с плавающей датой.  
  
 Значение <xref:System.TimeZoneInfo.TransitionTime.IsFixedDateRule%2A> свойство определяет, какие свойства <xref:System.TimeZoneInfo.TransitionTime> объекта имеют допустимые значения. В этой таблице перечислены свойства, которые зависят от значения <xref:System.TimeZoneInfo.TransitionTime.IsFixedDateRule%2A> свойство.  
  
|Свойство TransitionTime|IsFixedDateRule = true|IsFixedDateRule = false|  
|-----------------------------|-----------------------------|------------------------------|  
|`Day`|Valid|Неиспользуемые|  
|`DayOfWeek`|Неиспользуемые|Valid|  
|`Week`|Неиспользуемые|Valid|  
|`Month`|Valid|Valid|  
|`TimeOfDay`|Valid|Valid|  
  
   
  
## Examples  
 В следующем примере перечислены значения времени перехода на и с летнего времени для всех часовых поясов, которые доступны в локальной системе. Для часовых поясов с правилами фиксированной даты, отображается информация о времени перехода из свойств <xref:System.TimeZoneInfo.TransitionTime> объекта. Для часовых поясов без правил фиксированной датой, он использует <xref:System.Globalization.Calendar> объект, представляющий текущий календарь системы, чтобы определить фактические даты начала и окончания перехода. В примере отображаются результаты на консоль.  
  
 [!code-csharp[System.TimeZone2.TransitionTime.Class#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone2.TransitionTime.Class/cs/example1.cs#5)]
 [!code-vb[System.TimeZone2.TransitionTime.Class#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone2.TransitionTime.Class/vb/example1.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Month">
      <MemberSignature Language="C#" Value="public int Month { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Month" />
      <MemberSignature Language="DocId" Value="P:System.TimeZoneInfo.TransitionTime.Month" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Month As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Month { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает месяц, когда происходит изменение времени.</summary>
        <value>Месяц, когда происходит изменение времени.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Допустимые значения для <xref:System.TimeZoneInfo.TransitionTime.Month%2A> свойства в диапазоне от 1 до 12.  
  
 <xref:System.TimeZoneInfo.TransitionTime.Month%2A> Свойство используется для правил фиксированной даты и с плавающей датой.  
  
   
  
## Examples  
 В следующем примере выполняется перечисление часовых поясов, найденных на локальном компьютере и отображается информация о времени перехода для всех переходов с плавающей датой. Эта информация включает месяц, в который происходит изменение времени.  
  
 [!code-csharp[System.TimeZone2.TransitionTime.Class#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone2.TransitionTime.Class/cs/System.TimeZone2.TransitionTime.Class.cs#4)]
 [!code-vb[System.TimeZone2.TransitionTime.Class#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone2.TransitionTime.Class/vb/System.TimeZone2.TransitionTime.Class.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (TimeZoneInfo.TransitionTime t1, TimeZoneInfo.TransitionTime t2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.TimeZoneInfo/TransitionTime t1, valuetype System.TimeZoneInfo/TransitionTime t2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZoneInfo.TransitionTime.op_Equality(System.TimeZoneInfo.TransitionTime,System.TimeZoneInfo.TransitionTime)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (t1 As TimeZoneInfo.TransitionTime, t2 As TimeZoneInfo.TransitionTime) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(TimeZoneInfo::TransitionTime t1, TimeZoneInfo::TransitionTime t2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="t1" Type="System.TimeZoneInfo+TransitionTime" />
        <Parameter Name="t2" Type="System.TimeZoneInfo+TransitionTime" />
      </Parameters>
      <Docs>
        <param name="t1">Первый из сравниваемых объектов.</param>
        <param name="t2">Второй из сравниваемых объектов.</param>
        <summary>Определение равенства двух заданных объектов <see cref="T:System.TimeZoneInfo.TransitionTime" />.</summary>
        <returns>
          Значение <see langword="true" />, если <paramref name="t1" /> и <paramref name="t2" /> имеют одинаковые значения; в противном случае значение <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Два <xref:System.TimeZoneInfo.TransitionTime> объекты равны, если они имеют одинаковые значения для каждого из шести свойствам. В противном случае они не равны.  
  
 Эквивалентный метод для этого оператора является <xref:System.TimeZoneInfo.TransitionTime.Equals%28System.TimeZoneInfo.TransitionTime%29?displayProperty=nameWithType>.]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (TimeZoneInfo.TransitionTime t1, TimeZoneInfo.TransitionTime t2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.TimeZoneInfo/TransitionTime t1, valuetype System.TimeZoneInfo/TransitionTime t2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZoneInfo.TransitionTime.op_Inequality(System.TimeZoneInfo.TransitionTime,System.TimeZoneInfo.TransitionTime)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (t1 As TimeZoneInfo.TransitionTime, t2 As TimeZoneInfo.TransitionTime) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(TimeZoneInfo::TransitionTime t1, TimeZoneInfo::TransitionTime t2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="t1" Type="System.TimeZoneInfo+TransitionTime" />
        <Parameter Name="t2" Type="System.TimeZoneInfo+TransitionTime" />
      </Parameters>
      <Docs>
        <param name="t1">Первый из сравниваемых объектов.</param>
        <param name="t2">Второй из сравниваемых объектов.</param>
        <summary>Определение неравенства двух заданных объектов <see cref="T:System.TimeZoneInfo.TransitionTime" />.</summary>
        <returns>
          <see langword="true" />, если <paramref name="t1" /> и <paramref name="t2" /> имеют различные значения членов; в противном случае — <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Два <xref:System.TimeZoneInfo.TransitionTime> объекты не равны, если у них разные значения для любого из их шесть свойств. В противном случае они равны.  
  
 Эквивалентный метод для этого оператора является <xref:System.TimeZoneInfo.TransitionTime.Equals%28System.TimeZoneInfo.TransitionTime%29?displayProperty=nameWithType>.]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.IDeserializationCallback.OnDeserialization">
      <MemberSignature Language="C#" Value="void IDeserializationCallback.OnDeserialization (object sender);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(object sender) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZoneInfo.TransitionTime.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub OnDeserialization (sender As Object) Implements IDeserializationCallback.OnDeserialization" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(System::Object ^ sender) = System::Runtime::Serialization::IDeserializationCallback::OnDeserialization;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="sender">Объект, который инициализирует обратный вызов. Данная функциональная возможность для этого параметра в настоящее время не реализуется.</param>
        <summary>Выполняется после завершения десериализации объекта.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.ISerializable.GetObjectData">
      <MemberSignature Language="C#" Value="void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.ISerializable.GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZoneInfo.TransitionTime.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Sub GetObjectData (info As SerializationInfo, context As StreamingContext) Implements ISerializable.GetObjectData" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.ISerializable.GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context) = System::Runtime::Serialization::ISerializable::GetObjectData;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">Объект, который требуется заполнить данными.</param>
        <param name="context">Конечный объект для этой сериализации (см. раздел, посвященный <see cref="T:System.Runtime.Serialization.StreamingContext" />).</param>
        <summary>Заполняет объект <see cref="T:System.Runtime.Serialization.SerializationInfo" /> данными, необходимыми для сериализации этого объекта.</summary>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">требуется полное доверие для непосредственно вызывающего метода. Этот член не может использоваться частично доверенным или прозрачным кодом.</permission>
      </Docs>
    </Member>
    <Member MemberName="TimeOfDay">
      <MemberSignature Language="C#" Value="public DateTime TimeOfDay { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime TimeOfDay" />
      <MemberSignature Language="DocId" Value="P:System.TimeZoneInfo.TransitionTime.TimeOfDay" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TimeOfDay As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime TimeOfDay { DateTime get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает час, минуту и секунду, когда происходит изменение времени.</summary>
        <value>Время суток, когда происходит изменение времени.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Для переходов со стандартного времени на летнее время <xref:System.TimeZoneInfo.TransitionTime.TimeOfDay%2A> значение представляет время перехода в стандартное время часового пояса. Для переходов с летнего времени на стандартное время оно представляет время перехода на зимнее время в часовом поясе.  
  
 <xref:System.TimeZoneInfo.TransitionTime.TimeOfDay%2A> Свойство определяет изменение времени, но не его даты только время. Дата определяется <xref:System.TimeZoneInfo.TransitionTime.Month%2A> и <xref:System.TimeZoneInfo.TransitionTime.Day%2A> свойства для изменения-правила, а также по <xref:System.TimeZoneInfo.TransitionTime.Month%2A>, <xref:System.TimeZoneInfo.TransitionTime.Week%2A>, и <xref:System.TimeZoneInfo.TransitionTime.DayOfWeek%2A> свойства для изменения плавающей правила. Компоненту даты этого <xref:System.DateTime> значение игнорируется; значение год, месяц и день всегда равно 1.  
  
 <xref:System.TimeZoneInfo.TransitionTime.TimeOfDay%2A> Свойство используется для переходов с фиксированной датой и с плавающей датой.  
  
   
  
## Examples  
 В следующем примере выполняется перечисление часовых поясов, найденных на локальном компьютере и отображается информация о времени перехода для этих часовых поясов с правилами коррекции. Эта информация включает время дня, когда происходит изменение времени.  
  
 [!code-csharp[System.TimeZone2.TransitionTime.Class#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone2.TransitionTime.Class/cs/System.TimeZone2.TransitionTime.Class.cs#6)]
 [!code-vb[System.TimeZone2.TransitionTime.Class#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone2.TransitionTime.Class/vb/System.TimeZone2.TransitionTime.Class.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Week">
      <MemberSignature Language="C#" Value="public int Week { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Week" />
      <MemberSignature Language="DocId" Value="P:System.TimeZoneInfo.TransitionTime.Week" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Week As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Week { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает неделю месяца, в которую происходит изменение времени.</summary>
        <value>Неделя месяца, в которую происходит изменение времени.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Значение <xref:System.TimeZoneInfo.TransitionTime.Week%2A> свойство используется только для изменения времени с плавающей датой. Допустимый диапазон значений: от 1 до 5.  
  
 <xref:System.TimeZoneInfo.TransitionTime.Month%2A> Свойство определяет месяц, в который происходит изменение времени. <xref:System.TimeZoneInfo.TransitionTime.Week%2A> Свойство определяет недели, в который происходит переход. <xref:System.TimeZoneInfo.TransitionTime.DayOfWeek%2A> Свойство определяет день недели, в который происходит переход. Значение <xref:System.TimeZoneInfo.TransitionTime.Week%2A> свойство определяется, как показано в следующей таблице.  
  
|Если значение свойства недели|Происходит переход на|  
|-----------------------------------|------------------------------|  
|1|Первое вхождение <xref:System.TimeZoneInfo.TransitionTime.DayOfWeek%2A> значение в <xref:System.TimeZoneInfo.TransitionTime.Month%2A>.|  
|2|Второе вхождение <xref:System.TimeZoneInfo.TransitionTime.DayOfWeek%2A> значение в <xref:System.TimeZoneInfo.TransitionTime.Month%2A>.|  
|3|Третьим повторением <xref:System.TimeZoneInfo.TransitionTime.DayOfWeek%2A> значение в <xref:System.TimeZoneInfo.TransitionTime.Month%2A>.|  
|4|Четвертый вхождения <xref:System.TimeZoneInfo.TransitionTime.DayOfWeek%2A> значение в <xref:System.TimeZoneInfo.TransitionTime.Month%2A>.|  
|5|Последнее вхождение <xref:System.TimeZoneInfo.TransitionTime.DayOfWeek%2A> значение в <xref:System.TimeZoneInfo.TransitionTime.Month%2A>.|  
  
 Например, если происходит переход на первое воскресенье марта, значение <xref:System.TimeZoneInfo.TransitionTime.Week%2A> свойства является 1. Если она возникает в последнее воскресенье марта, значение <xref:System.TimeZoneInfo.TransitionTime.Week%2A> свойства равно 5.  
  
   
  
## Examples  
 В следующем примере выполняется перечисление часовых поясов, найденных на локальном компьютере и отображается информация о времени перехода для всех переходов с плавающей датой. Эта информация включает неделю месяца, в который происходит изменение времени. В примере также определяется `WeekOfMonth` перечисления, чтобы отобразить строку, представляющую порядковый номер <xref:System.TimeZoneInfo.TransitionTime.Week%2A> свойства, а не является целым числом.  
  
 [!code-csharp[System.TimeZone2.TransitionTime.Class#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone2.TransitionTime.Class/cs/System.TimeZone2.TransitionTime.Class.cs#4)]
 [!code-vb[System.TimeZone2.TransitionTime.Class#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone2.TransitionTime.Class/vb/System.TimeZone2.TransitionTime.Class.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.TimeZoneInfo.TransitionTime.Day" />
        <altmember cref="P:System.TimeZoneInfo.TransitionTime.Month" />
      </Docs>
    </Member>
  </Members>
</Type>