<Type Name="Tuple&lt;T1,T2,T3&gt;" FullName="System.Tuple&lt;T1,T2,T3&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a892a759931a6c8c1129221f72863b69f099d998" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30729668" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Tuple&lt;T1,T2,T3&gt; : IComparable, System.Collections.IStructuralComparable, System.Collections.IStructuralEquatable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit Tuple`3&lt;T1, T2, T3&gt; extends System.Object implements class System.Collections.IStructuralComparable, class System.Collections.IStructuralEquatable, class System.IComparable" />
  <TypeSignature Language="DocId" Value="T:System.Tuple`3" />
  <TypeSignature Language="VB.NET" Value="Public Class Tuple(Of T1, T2, T3)&#xA;Implements IComparable, IStructuralComparable, IStructuralEquatable" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T1, typename T2, typename T3&gt;&#xA;public ref class Tuple : IComparable, System::Collections::IStructuralComparable, System::Collections::IStructuralEquatable" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T1" />
    <TypeParameter Name="T2" />
    <TypeParameter Name="T3" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IStructuralComparable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IStructuralEquatable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IComparable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="T1">Тип первого компонента кортежа.</typeparam>
    <typeparam name="T2">Тип второго компонента кортежа.</typeparam>
    <typeparam name="T3">Тип третьего компонента кортежа.</typeparam>
    <summary>Представляет кортеж из трех компонентов.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Кортеж — это структура данных, с определенным номером и последовательность значений. <xref:System.Tuple%603> Класс представляет кортежа или тройной, который является кортеж, который состоит из трех компонентов.  
  
 Можно создать экземпляр <xref:System.Tuple%603> объекта с помощью вызова <xref:System.Tuple%603.%23ctor%2A> конструктор или статические <xref:System.Tuple.Create%60%603%28%60%600%2C%60%601%2C%60%602%29?displayProperty=nameWithType> метод. Можно получить с помощью доступной только для чтения значения компонентов кортежа <xref:System.Tuple%603.Item1%2A>, <xref:System.Tuple%603.Item2%2A>, и <xref:System.Tuple%603.Item3%2A> свойства экземпляра.  
  
 Кортежи обычно используются четырьмя способами:  
  
-   Для представления одного набора данных. Например кортеж может представлять запись в базе данных, и его компоненты могут представлять отдельные поля записи.  
  
-   Чтобы предоставить доступ к функциям и его обработки набора данных. В следующем примере определяется массив <xref:System.Tuple%603> объекты, которые содержат имена учащихся, их средние тестовые оценки и число выполненных тестов. Массив передается `ComputeStatistics` метод, который вычисляет среднее и стандартное отклонение результатов тестирования.  
  
     [!code-csharp[System.Tuple\`3.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`3.class/cs/example1.cs#1)]
     [!code-vb[System.Tuple\`3.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`3.class/vb/example1.vb#1)]  
  
-   Для возврата нескольких значений из метода без использования `out` параметры (в C#) или `ByRef` (в Visual Basic). Например, предыдущий пример возвращает его Сводная Статистика теста в <xref:System.Tuple%603> объекта.  
  
-   Для передачи нескольких значений методу в составе одного параметра. Например <xref:System.Threading.Thread.Start%28System.Object%29?displayProperty=nameWithType> метод принимает один параметр, позволяющий предоставлять одно значение метода, который выполняется потоком во время запуска. При указании <xref:System.Tuple%603> объект как аргумент метода, можно просто указать процедуру запуска потока с тремя элементами данных.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Tuple" />
    <altmember cref="T:System.Tuple`1" />
    <altmember cref="T:System.Tuple`2" />
    <altmember cref="T:System.Tuple`4" />
    <altmember cref="T:System.Tuple`5" />
    <altmember cref="T:System.Tuple`6" />
    <altmember cref="T:System.Tuple`7" />
    <altmember cref="T:System.Tuple`8" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Tuple (T1 item1, T2 item2, T3 item3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(!T1 item1, !T2 item2, !T3 item3) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`3.#ctor(`0,`1,`2)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (item1 As T1, item2 As T2, item3 As T3)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Tuple(T1 item1, T2 item2, T3 item3);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="item1" Type="T1" />
        <Parameter Name="item2" Type="T2" />
        <Parameter Name="item3" Type="T3" />
      </Parameters>
      <Docs>
        <param name="item1">Значение первого компонента кортежа.</param>
        <param name="item2">Значение второго компонента кортежа.</param>
        <param name="item3">Значение третьего компонента кортежа.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Tuple`3" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Можно также использовать статический <xref:System.Tuple.Create%60%603%28%60%600%2C%60%601%2C%60%602%29?displayProperty=nameWithType> метод для создания объекта кортежа без явного указания типов его компонентов. В следующем примере используется <xref:System.Tuple.Create%60%603%28%60%600%2C%60%601%2C%60%602%29?displayProperty=nameWithType> метод для создания кортежа, компоненты которого имеют тип <xref:System.String>, <xref:System.Double>, и <xref:System.Double>.  
  
 [!code-csharp[System.Tuple.Create#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple.create/cs/create1.cs#5)]
 [!code-vb[System.Tuple.Create#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple.create/vb/create1.vb#5)]  
  
 Это эквивалентно следующий вызов <xref:System.Tuple%603.%23ctor%2A> конструктора класса.  
  
 [!code-csharp[System.Tuple.Create#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple.create/cs/create1.cs#6)]
 [!code-vb[System.Tuple.Create#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple.create/vb/create1.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`3.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">Объект, сравниваемый с данным экземпляром.</param>
        <summary>Возвращает значение, показывающее, равен ли текущий объект <see cref="T:System.Tuple`3" /> указанному объекту.</summary>
        <returns>
          Значение <see langword="true" />, если текущий экземпляр равен указанному объекту; в противном случае — <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `obj` Параметр считается равен текущему экземпляру при следующих условиях:  
  
-   Это <xref:System.Tuple%603> объекта.  
  
-   Его три компонента: совпадает с типом текущего экземпляра.  
  
-   Его три компонента равны текущего экземпляра. Равенство определяется компаратором равенства объектов по умолчанию для каждого компонента.  
  
   
  
## Examples  
 В следующем примере вызывается <xref:System.Tuple%603.Equals%28System.Object%29?displayProperty=nameWithType> метод, чтобы выяснить, какие объекты в массиве <xref:System.Tuple%603> объекты равны друг с другом. Выходные данные отражает тот факт, <xref:System.Tuple%603.Equals%28System.Object%29> возвращает `true` при сравнении <xref:System.Tuple%603> объектов, компоненты которого имеют одинаковые значения.  
  
 [!code-csharp[System.Tuple\`3.Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`3.equals/cs/equals1.cs#1)]
 [!code-vb[System.Tuple\`3.Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`3.equals/vb/equals1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`3.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Возвращает хэш-код для текущего объекта <see cref="T:System.Tuple`3" />.</summary>
        <returns>Хэш-код в виде 32-разрядного целого числа со знаком.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item1">
      <MemberSignature Language="C#" Value="public T1 Item1 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T1 Item1" />
      <MemberSignature Language="DocId" Value="P:System.Tuple`3.Item1" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Item1 As T1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T1 Item1 { T1 get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T1</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает значение первого компонента текущего объекта <see cref="T:System.Tuple`3" />.</summary>
        <value>Значение первого компонента текущего объекта <see cref="T:System.Tuple`3" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Можно динамически определить тип <xref:System.Tuple%603.Item1%2A> компонент одним из двух способов:  
  
-   Путем вызова `GetType` метода со значением, возвращается <xref:System.Tuple%603.Item1%2A> свойство.  
  
-   Путем получения <xref:System.Type> , представляющий <xref:System.Tuple%603> объекта и извлечении первый элемент из массива, который возвращается его <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> метод.  
  
   
  
## Examples  
 В следующем примере определяется массив <xref:System.Tuple%603> объекты, которые содержат имена учащихся, их средние тестовые оценки и число выполненных тестов. Массив передается `ComputeStatistics` метод, который вычисляет среднюю оценку, стандартное отклонение и количество вариантов, из которого рассчитывается Статистика. Эти значения хранятся в <xref:System.Tuple%603> объект, возвращаемый `ComputeStatistics` метод. <xref:System.Tuple%603.Item1%2A> Свойство содержит количество вариантов.  
  
 [!code-csharp[System.Tuple\`3.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`3.class/cs/example1.cs#1)]
 [!code-vb[System.Tuple\`3.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`3.class/vb/example1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item2">
      <MemberSignature Language="C#" Value="public T2 Item2 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T2 Item2" />
      <MemberSignature Language="DocId" Value="P:System.Tuple`3.Item2" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Item2 As T2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T2 Item2 { T2 get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T2</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает значение второго компонента текущего объекта <see cref="T:System.Tuple`3" />.</summary>
        <value>Значение второго компонента текущего объекта <see cref="T:System.Tuple`3" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Можно динамически определить тип <xref:System.Tuple%603.Item2%2A> компонент одним из двух способов:  
  
-   Путем вызова `GetType` метода со значением, возвращается <xref:System.Tuple%603.Item2%2A> свойство.  
  
-   Путем получения <xref:System.Type> , представляющий <xref:System.Tuple%603> объекта и извлечении второй элемент из массива, который возвращается его <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> метод.  
  
   
  
## Examples  
 В следующем примере определяется массив <xref:System.Tuple%603> объекты, которые содержат имена учащихся, их средние тестовые оценки и число выполненных тестов. Массив передается `ComputeStatistics` метод, который вычисляет среднюю оценку, стандартное отклонение и количество вариантов, из которого рассчитывается Статистика. Эти значения хранятся в <xref:System.Tuple%603> объект, возвращаемый `ComputeStatistics` метод. <xref:System.Tuple%603.Item2%2A> Свойство содержит среднего коэффициента теста.  
  
 [!code-csharp[System.Tuple\`3.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`3.class/cs/example1.cs#1)]
 [!code-vb[System.Tuple\`3.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`3.class/vb/example1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item3">
      <MemberSignature Language="C#" Value="public T3 Item3 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T3 Item3" />
      <MemberSignature Language="DocId" Value="P:System.Tuple`3.Item3" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Item3 As T3" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T3 Item3 { T3 get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T3</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает значение третьего компонента текущего объекта <see cref="T:System.Tuple`3" />.</summary>
        <value>Значение третьего компонента текущего объекта <see cref="T:System.Tuple`3" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Можно динамически определить тип <xref:System.Tuple%603.Item3%2A> компонент одним из двух способов:  
  
-   Путем вызова `GetType` метод на значение, возвращаемое <xref:System.Tuple%603.Item3%2A> свойство.  
  
-   Путем получения <xref:System.Type> , представляющий <xref:System.Tuple%603> объекта и извлечении третий элемент из массива, который возвращается его <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> метод.  
  
   
  
## Examples  
 В следующем примере определяется массив <xref:System.Tuple%603> объекты, которые содержат имена учащихся, их средние тестовые оценки и число выполненных тестов. Массив передается `ComputeStatistics` метод, который вычисляет среднюю оценку, стандартное отклонение и количество вариантов, из которого рассчитывается Статистика. Эти значения хранятся в <xref:System.Tuple%603> объект, возвращаемый `ComputeStatistics` метод. <xref:System.Tuple%603.Item3%2A> Свойство содержит стандартное отклонение.  
  
 [!code-csharp[System.Tuple\`3.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`3.class/cs/example1.cs#1)]
 [!code-vb[System.Tuple\`3.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`3.class/vb/example1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IStructuralComparable.CompareTo">
      <MemberSignature Language="C#" Value="int IStructuralComparable.CompareTo (object other, System.Collections.IComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IStructuralComparable.CompareTo(object other, class System.Collections.IComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`3.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)" />
      <MemberSignature Language="VB.NET" Value="Function CompareTo (other As Object, comparer As IComparer) As Integer Implements IStructuralComparable.CompareTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IStructuralComparable.CompareTo(System::Object ^ other, System::Collections::IComparer ^ comparer) = System::Collections::IStructuralComparable::CompareTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IStructuralComparable.CompareTo(System.Object,System.Collections.IComparer)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Object" />
        <Parameter Name="comparer" Type="System.Collections.IComparer" />
      </Parameters>
      <Docs>
        <param name="other">Объект для сравнения с текущим экземпляром.</param>
        <param name="comparer">Объект, предоставляющий настраиваемые правила для сравнения.</param>
        <summary>Сравнивает текущий объект <see cref="T:System.Tuple`3" /> с указанным объектом, используя заданный компаратор, и возвращает целое число, которое показывает положение текущего объекта относительно указанного объекта в порядке сортировки: перед объектом, после него или в той же позиции.</summary>
        <returns>Целое число со знаком, определяющее относительное положение экземпляра и параметра <paramref name="other" /> в порядке сортировки, как показано в следующей таблице.  
  
 <list type="table"><listheader><term> Значение  
  
 </term><description> Описание  
  
 </description></listheader><item><term> Отрицательное целое число  
  
 </term><description> Данный экземпляр предшествует параметру <paramref name="other" />.  
  
 </description></item><item><term> Нуль  
  
 </term><description> Данный экземпляр имеет ту же позицию в порядке сортировки, что и <paramref name="other" />.  
  
 </description></item><item><term> Положительное целое число  
  
 </term><description> Данный экземпляр следует за параметром <paramref name="other" />.  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот член представляет собой явную реализацию члена интерфейса. Он может использоваться, только если экземпляр <xref:System.Tuple%603> приведен к типу интерфейса <xref:System.Collections.IStructuralComparable>.  
  
 Несмотря на то, что этот метод может вызываться напрямую, он наиболее часто вызывается методами, которые включают сортировки коллекций <xref:System.Collections.IComparer> параметры для сортировки элементов в коллекции. Например, она вызвана <xref:System.Array.Sort%28System.Array%2CSystem.Collections.IComparer%29?displayProperty=nameWithType> метод и <xref:System.Collections.SortedList.Add%2A> метод <xref:System.Collections.SortedList> объекта, экземпляр которого создается с помощью <xref:System.Collections.SortedList.%23ctor%28System.Collections.IComparer%29?displayProperty=nameWithType> конструктор.  
  
> [!CAUTION]
>  <xref:System.Tuple%603.System%23Collections%23IStructuralComparable%23CompareTo%2A?displayProperty=nameWithType> Метод предназначен для использования в операции сортировки. Он не должен использоваться, при основной целью сравнения для определения равенства двух объектов. Чтобы определить, равны ли два объекта, вызовите <xref:System.Tuple%603.System%23Collections%23IStructuralEquatable%23Equals%2A?displayProperty=nameWithType> метод.  
  
   
  
## Examples  
 В следующем примере создается массив <xref:System.Tuple%603> объекты, которые состоят из имени, среднего коэффициента теста и сколько тестов Стьюдента. Компонент каждого кортежа отображается в массиве без сортировки, сортирует массив и затем вызывает метод <xref:System.Tuple%603.ToString%2A> для отображения значения каждого кортежа в отсортированном порядке. Для сортировки массива, в примере определяется универсальный `ScoreComparer` класс, реализующий <xref:System.Collections.IComparer> интерфейс и сортировки <xref:System.Tuple%603> объекты по возрастанию по значению их второй компонент, а не их первого компонента. Обратите внимание, что пример не вызывает непосредственно <xref:System.Tuple%603.System%23Collections%23IStructuralComparable%23CompareTo%2A?displayProperty=nameWithType> метод. Этот метод неявно вызывается <xref:System.Array.Sort%28System.Array%2CSystem.Collections.IComparer%29?displayProperty=nameWithType> метод для каждого элемента в массиве.  
  
 [!code-csharp[System.Tuple\`3.CompareTo#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`3.compareto/cs/compareto2.cs#2)]
 [!code-vb[System.Tuple\`3.CompareTo#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`3.compareto/vb/compareto2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="other" /> не является объектом <see cref="T:System.Tuple`3" />.</exception>
        <altmember cref="M:System.Tuple`3.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IStructuralEquatable.Equals">
      <MemberSignature Language="C#" Value="bool IStructuralEquatable.Equals (object other, System.Collections.IEqualityComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IStructuralEquatable.Equals(object other, class System.Collections.IEqualityComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`3.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)" />
      <MemberSignature Language="VB.NET" Value="Function Equals (other As Object, comparer As IEqualityComparer) As Boolean Implements IStructuralEquatable.Equals" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IStructuralEquatable.Equals(System::Object ^ other, System::Collections::IEqualityComparer ^ comparer) = System::Collections::IStructuralEquatable::Equals;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IStructuralEquatable.Equals(System.Object,System.Collections.IEqualityComparer)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Object" />
        <Parameter Name="comparer" Type="System.Collections.IEqualityComparer" />
      </Parameters>
      <Docs>
        <param name="other">Объект, сравниваемый с данным экземпляром.</param>
        <param name="comparer">Объект, который определяет метод, используемый для вычисления равенства двух объектов.</param>
        <summary>Возвращает значение, показывающее, равен ли текущий атрибут <see cref="T:System.Tuple`3" /> указанному объекту при использовании заданного метода сравнения.</summary>
        <returns>
          Значение <see langword="true" />, если текущий экземпляр равен указанному объекту; в противном случае — <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот член представляет собой явную реализацию члена интерфейса. Он может использоваться, только если экземпляр <xref:System.Tuple%603> приведен к типу интерфейса <xref:System.Collections.IStructuralEquatable>.  
  
 <xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=nameWithType> Реализация вызывается только в том случае, если `other` не `null`, и если его можно успешно приведите (в C#) или преобразован (в Visual Basic) <xref:System.Tuple%603> , компоненты которого совпадает с типом текущего экземпляра объекта. <xref:System.Tuple%603.System%23Collections%23IStructuralEquatable%23Equals%2A?displayProperty=nameWithType> Передает первый метод <xref:System.Tuple%603.Item1%2A> значения <xref:System.Tuple%603> объектов для сравнения с <xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=nameWithType> реализации. Если вызов этого метода возвращает `true`, повторный вызов метода и передается <xref:System.Tuple%603.Item2%2A> значения двух <xref:System.Tuple%603> объектов. Если вызов этого метода возвращает `true` еще раз, метод вызывается в третьем время и переданный <xref:System.Tuple%603.Item3%2A> значения двух <xref:System.Tuple%603> объектов.  
  
   
  
## Examples  
 В следующем примере определяется `Item2Comparer` класс, реализующий <xref:System.Collections.IEqualityComparer> интерфейс и изменяет способ, которым <xref:System.Tuple%603> объекты вычисляются на равенство. Этот метод всегда возвращает `true` при передаче <xref:System.Tuple%603.Item1%2A> значения свойств из двух <xref:System.Tuple%603> объектов, который вызывает <xref:System.Tuple%603.System%23Collections%23IStructuralEquatable%23Equals%2A?displayProperty=nameWithType> метод для оценки их <xref:System.Tuple%603.Item2%2A> значений свойств. Если вызов этого метода возвращает `true`, их <xref:System.Tuple%603.Item3%2A> значения свойства передаются в метод, который всегда возвращает `true`. В результате метод выполняет проверку равенства, основываясь только на значении <xref:System.Tuple%603.Item2%2A> свойство. Показан результат для набора данных <xref:System.Tuple%603> объекты, запишите имена, среднего коэффициента теста и сколько тестов студентов в классе.  
  
 [!code-csharp[System.Tuple\`3.Equals#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`3.equals/cs/equals2.cs#2)]
 [!code-vb[System.Tuple\`3.Equals#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`3.equals/vb/equals2.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IStructuralEquatable.GetHashCode">
      <MemberSignature Language="C#" Value="int IStructuralEquatable.GetHashCode (System.Collections.IEqualityComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IStructuralEquatable.GetHashCode(class System.Collections.IEqualityComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`3.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)" />
      <MemberSignature Language="VB.NET" Value="Function GetHashCode (comparer As IEqualityComparer) As Integer Implements IStructuralEquatable.GetHashCode" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IStructuralEquatable.GetHashCode(System::Collections::IEqualityComparer ^ comparer) = System::Collections::IStructuralEquatable::GetHashCode;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IStructuralEquatable.GetHashCode(System.Collections.IEqualityComparer)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="comparer" Type="System.Collections.IEqualityComparer" />
      </Parameters>
      <Docs>
        <param name="comparer">Объект, метод <see cref="M:System.Collections.IEqualityComparer.GetHashCode(System.Object)" /> которого вычисляет хэш-код текущего объекта <see cref="T:System.Tuple`3" />.</param>
        <summary>Вычисляет хэш-код для текущего объекта <see cref="T:System.Tuple`3" />, используя заданный метод вычисления.</summary>
        <returns>Хэш-код в виде 32-разрядного целого числа со знаком.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот член представляет собой явную реализацию члена интерфейса. Он может использоваться, только если экземпляр <xref:System.Tuple%603> приведен к типу интерфейса <xref:System.Collections.IStructuralEquatable>.  
  
 Этот метод просто создает оболочку вызова `comparer` объекта <xref:System.Collections.IEqualityComparer.GetHashCode%2A?displayProperty=nameWithType> реализации.  
  
 Алгоритм, используемый для вычисления хэш-код должен возвращать тот же хэш-код для двух <xref:System.Tuple%603> объекты, которые считаются равными.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IComparable.CompareTo">
      <MemberSignature Language="C#" Value="int IComparable.CompareTo (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.IComparable.CompareTo(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`3.System#IComparable#CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function CompareTo (obj As Object) As Integer Implements IComparable.CompareTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.IComparable.CompareTo(System::Object ^ obj) = IComparable::CompareTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">Объект для сравнения с текущим экземпляром.</param>
        <summary>Сравнивает текущий объект <see cref="T:System.Tuple`3" /> с заданным объектом и возвращает целое число, указывающее, находится ли текущий объект в той же позиции, что и указанный объект, после него или перед ним в порядке сортировки.</summary>
        <returns>Целое число со знаком, определяющее относительное положение экземпляра и параметра <paramref name="obj" /> в порядке сортировки, как показано в следующей таблице.  
  
 <list type="table"><listheader><term> Значение  
  
 </term><description> Описание  
  
 </description></listheader><item><term> Отрицательное целое число  
  
 </term><description> Данный экземпляр предшествует параметру <paramref name="obj" />.  
  
 </description></item><item><term> Нуль  
  
 </term><description> Данный экземпляр имеет ту же позицию в порядке сортировки, что и <paramref name="obj" />.  
  
 </description></item><item><term> Положительное целое число  
  
 </term><description> Данный экземпляр следует за параметром <paramref name="obj" />.  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот член представляет собой явную реализацию члена интерфейса. Он может использоваться, только если экземпляр <xref:System.Tuple%603> приведен к типу интерфейса <xref:System.IComparable>.  
  
 Этот метод обеспечивает <xref:System.IComparable.CompareTo%2A?displayProperty=nameWithType> реализацию <xref:System.Tuple%603> класса. Несмотря на то, что метод может вызываться напрямую, он наиболее часто вызывается перегрузок по умолчанию сортировка методы, такие как коллекции <xref:System.Array.Sort%28System.Array%29?displayProperty=nameWithType> и <xref:System.Collections.SortedList.Add%2A?displayProperty=nameWithType>, для сортировки элементов в коллекции.  
  
> [!CAUTION]
>  <xref:System.Tuple%603.System%23IComparable%23CompareTo%2A?displayProperty=nameWithType> Метод предназначен для использования в операции сортировки. Он не должен использоваться, при основной целью сравнения для определения равенства двух объектов. Чтобы определить, равны ли два объекта, вызовите <xref:System.Tuple%603.Equals%2A> метод.  
  
 <xref:System.Tuple%603.System%23IComparable%23CompareTo%2A?displayProperty=nameWithType> Метод использует функцию сравнения по умолчанию объект для сравнения каждого компонента.  
  
   
  
## Examples  
 В следующем примере создается массив <xref:System.Tuple%603> объектов, компоненты которого содержат Стьюдента имя среднего коэффициента теста и сколько тестов. Отображает компоненты каждого кортежа в массиве без сортировки, сортирует массив и затем вызывает метод <xref:System.Tuple%603.ToString%2A> для отображения каждого кортежа в отсортированном порядке. Выходные данные показывают, что массив был отсортирован по первому компоненту. Обратите внимание, что пример не вызывает непосредственно <xref:System.Tuple%603.System%23IComparable%23CompareTo%2A?displayProperty=nameWithType> метод. Этот метод неявно вызывается <xref:System.Array.Sort%28System.Array%29> метод для каждого элемента в массиве.  
  
 [!code-csharp[System.Tuple\`3.CompareTo#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`3.compareto/cs/compareto1.cs#1)]
 [!code-vb[System.Tuple\`3.CompareTo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`3.compareto/vb/compareto1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="obj" /> не является объектом <see cref="T:System.Tuple`3" />.</exception>
        <altmember cref="M:System.Tuple`3.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.CompilerServices.ITuple.Item">
      <MemberSignature Language="C#" Value="object System.Runtime.CompilerServices.ITuple.Item[int index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Runtime.CompilerServices.ITuple.Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Tuple`3.System#Runtime#CompilerServices#ITuple#Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Item(index As Integer) As Object Implements ITuple.Item" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.Runtime.CompilerServices.ITuple.Item[int] { System::Object ^ get(int index); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.CompilerServices.ITuple.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Индекс указанного элемента <see langword="Tuple" />. <c>index</c> может иметь значение в диапазоне от 0 до 2.</param>
        <summary>Получает значение указанного элемента <see langword="Tuple" />.</summary>
        <value>Значение элемента <see langword="Tuple" /> в заданной позиции.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Tuple%603.System%23Runtime%23CompilerServices%23ITuple%23Item%2A?displayProperty=nameWithType> Свойство является явной реализацией интерфейса. Будет вызывать его, необходимо привести или преобразовать <xref:System.Tuple%603> объект <xref:System.Runtime.CompilerServices.ITuple> объект интерфейса.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException">
          Параметр <paramref name="index" /> имеет значение меньше 0 или больше 2.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.CompilerServices.ITuple.Length">
      <MemberSignature Language="C#" Value="int System.Runtime.CompilerServices.ITuple.Length { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 System.Runtime.CompilerServices.ITuple.Length" />
      <MemberSignature Language="DocId" Value="P:System.Tuple`3.System#Runtime#CompilerServices#ITuple#Length" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Length As Integer Implements ITuple.Length" />
      <MemberSignature Language="C++ CLI" Value="property int System.Runtime.CompilerServices.ITuple.Length { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.CompilerServices.ITuple.Length</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает количество элементов в <see langword="Tuple" />.</summary>
        <value>3, количество элементов в объекте <see cref="T:System.Tuple`3" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Tuple%603.System%23Runtime%23CompilerServices%23ITuple%23Length%2A> Свойство является явной реализацией интерфейса. Будет вызывать его, необходимо привести или преобразовать <xref:System.Tuple%603> объект <xref:System.Runtime.CompilerServices.ITuple> объект интерфейса.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`3.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Возвращает строковое представление значения этого экземпляра <see cref="T:System.Tuple`3" />.</summary>
        <returns>Строковое представление конкретного объекта <see cref="T:System.Tuple`3" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Строка, возвращаемый этим методом принимает форму (*Item1*, *Item2*, *Item3*), где *Item1*, *Item2*, и *Item3* представляют значения <xref:System.Tuple%603.Item1%2A>, <xref:System.Tuple%603.Item2%2A>, и <xref:System.Tuple%603.Item3%2A> свойства, соответственно. Если какие-либо значения свойств `null`, оно представляется как <xref:System.String.Empty?displayProperty=nameWithType>.  
  
   
  
## Examples  
 В следующем примере демонстрируется <xref:System.Tuple%603.ToString%2A> метод.  
  
 [!code-csharp[System.Tuple\`3.ToString#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`3.tostring/cs/tostring1.cs#1)]
 [!code-vb[System.Tuple\`3.ToString#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`3.tostring/vb/tostring1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>