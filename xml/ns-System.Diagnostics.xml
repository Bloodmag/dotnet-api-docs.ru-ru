<Namespace Name="System.Diagnostics">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ef6aeaebe2981ce7e1b191a089dab9ae242e488a" />
    <Meta Name="ms.sourcegitcommit" Value="df6cf590aa3087f6c7c202712eee781c6a3c8f96" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="05/10/2018" />
    <Meta Name="ms.locfileid" Value="30734998" />
  </Metadata>
  <Docs>
    <summary>В пространстве имен <see cref="N:System.Diagnostics" /> предусмотрены классы, позволяющие осуществлять взаимодействие с системными процессами, журналами событий и счетчиками производительности.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
-   <xref:System.Diagnostics.EventLog> Компонент предоставляет функциональные возможности для записи в журнале событий, чтение и запись, создавать и удалять журналы событий и источников событий в сети. <xref:System.Diagnostics.EntryWrittenEventHandler> Предоставляет способ взаимодействия с журналами событий асинхронно. Вспомогательные классы предоставляют доступ к более тщательного контроля, включая: ограничения разрешений, а также для указания типов для журналов событий (контроль типов данных по умолчанию, записываемых в журнал событий) и прохода по коллекции журнала событий операции. Дополнительные сведения об этих задачах см. в разделе <xref:System.Diagnostics.EventLogPermission>, <xref:System.Diagnostics.EventLogEntryType>, и <xref:System.Diagnostics.EventLogEntryCollection> классы.  
  
-   <xref:System.Diagnostics.Process> Класс предоставляет функциональные возможности для наблюдения за системными процессами в сети, чтобы запускать и останавливать локальные системные процессы. В дополнение к получению списка запущенных процессов (путем указания компьютера, имя процесса и идентификатор процесса) или просмотра сведений о процессе, который в настоящее время имеет доступ к процессору, можно получить подробную информацию о потоках и модули обоих через <xref:System.Diagnostics.Process> сам класс и с <xref:System.Diagnostics.ProcessThread> и <xref:System.Diagnostics.ProcessModule> классы. <xref:System.Diagnostics.ProcessStartInfo> Позволяет указать различные элементы, с которого начинается новый процесс, например потоки ввода, вывода и ошибки, рабочие каталоги, команды командной строки и аргументы. Это позволяет контролировать поведение процессов. Другие классы позволяют задавать стили окон, процесс приоритеты потоков и взаимодействует с коллекциями потоков и модулей.  
  
-   <xref:System.Diagnostics.PerformanceCounter> Позволяет отслеживать производительность системы, пока <xref:System.Diagnostics.PerformanceCounterCategory> класс предоставляет способ создания новых пользовательских счетчиков и категорий. Можно записать в локальный пользовательский счетчик и чтение из локальных и удаленных счетчиков (система а также пользовательские). Можно произвести выборку счетчиков с помощью <xref:System.Diagnostics.PerformanceCounter> класса и вычисления результатов из последовательных счетчика производительности с помощью <xref:System.Diagnostics.CounterSample> класса. <xref:System.Diagnostics.CounterCreationData> Класс позволяет создавать несколько счетчиков в категории и указывать их типы. Другие классы, связанные с компонентом счетчика производительности предоставляют доступ к коллекциям, разрешение доступа к счетчику и типы счетчиков.  
  
 <xref:System.Diagnostics> Пространство имен также содержит классы для отладки приложений и трассировки выполнения кода. Дополнительные сведения см. в описаниях классов <xref:System.Diagnostics.Trace> и <xref:System.Diagnostics.Debug>.  
  
 ]]></format>
    </remarks>
  </Docs>
</Namespace>