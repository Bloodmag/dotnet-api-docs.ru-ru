<Namespace Name="System.Runtime.Remoting.Contexts">
  <Metadata><Meta Name="ms.openlocfilehash" Value="40aa51c114d4ab3b2669d4d437aa854fb9a8f8c4" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="08/24/2018" /><Meta Name="ms.locfileid" Value="30739328" /></Metadata><Docs>
    <summary><span data-ttu-id="1b2c4-101">Пространство имен <see cref="N:System.Runtime.Remoting.Contexts" /> содержит объекты, которые определяют контексты, в которых находятся все объекты.</span><span class="sxs-lookup"><span data-stu-id="1b2c4-101">The <see cref="N:System.Runtime.Remoting.Contexts" /> namespace contains objects that define the contexts all objects reside within.</span></span> <span data-ttu-id="1b2c4-102">Контекст — это упорядоченный набор свойств, определяющих среду для находящихся в ней объектов.</span><span class="sxs-lookup"><span data-stu-id="1b2c4-102">A context is an ordered sequence of properties that defines an environment for the objects within it.</span></span> <span data-ttu-id="1b2c4-103">Контексты создаются в процессе активации объектов, которым требуются определенные автоматические службы: синхронизации, транзакций, активации по требованию, безопасности и т. д.</span><span class="sxs-lookup"><span data-stu-id="1b2c4-103">Contexts are created during the activation process for objects that are configured to require certain automatic services such synchronization, transactions, just-in-time (JIT) activation, security, and so on.</span></span> <span data-ttu-id="1b2c4-104">Внутри контекста возможно существование многих объектов.</span><span class="sxs-lookup"><span data-stu-id="1b2c4-104">Multiple objects can live inside a context.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1b2c4-105">Каждый раз, когда создается новый объект, платформы.NET Framework находит совместимый контекст или создает новый контекст для объекта.</span><span class="sxs-lookup"><span data-stu-id="1b2c4-105">Whenever a new object is created, the.NET Framework finds a compatible context or creates a new context for the object.</span></span> <span data-ttu-id="1b2c4-106">После размещения в контексте объекта, он остается в нем срока службы.</span><span class="sxs-lookup"><span data-stu-id="1b2c4-106">After an object is placed in a context, it stays in it for life.</span></span> <span data-ttu-id="1b2c4-107">Классы, которые могут быть привязаны к контексту, называются контекстно-привязанными классами.</span><span class="sxs-lookup"><span data-stu-id="1b2c4-107">Classes that can be bound to a context are called context-bound classes.</span></span> <span data-ttu-id="1b2c4-108">Если доступ осуществляется из другого контекста, эти контекстно привязанные классы указываются непосредственно с помощью учетной записи-посредника.</span><span class="sxs-lookup"><span data-stu-id="1b2c4-108">When accessed from another context, these context-bound classes are referenced directly using a proxy.</span></span> <span data-ttu-id="1b2c4-109">Вызов из объекта в одном контексте к объекту в другом контексте проходит через прокси-контекст и будет применяться политика, реализуемый совокупностью контекстных свойств.</span><span class="sxs-lookup"><span data-stu-id="1b2c4-109">A call from an object in one context to an object in another context will go through a context proxy and be affected by the policy implemented by the combined context properties.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
</Namespace>