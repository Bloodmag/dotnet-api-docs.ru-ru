<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ServiceContractAttribute.xml" source-language="en-US" target-language="ru-RU">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-efd8310" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">73cd4428-9abd-4836-b1ef-ba70fe2e0b726217dbb0bd62f8478f36c978ef938a78b104b651.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6217dbb0bd62f8478f36c978ef938a78b104b651</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">cc0c87a2e12b0fb9ba9ecdd3d4950f0572524db8</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">05/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7.2,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.ServiceContractAttribute">
          <source>Indicates that an interface or a class defines a service contract in a Windows Communication Foundation (WCF) application.</source>
          <target state="translated">Показывает, что интерфейс или класс определяет контракт службы в приложении Windows Communication Foundation (WCF).</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceContractAttribute">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.ServiceContractAttribute&gt;</ph> attribute on an interface (or class) to define a service contract.</source>
          <target state="translated">Чтобы определить контракт службы, используйте атрибут <ph id="ph1">&lt;xref:System.ServiceModel.ServiceContractAttribute&gt;</ph> в интерфейсе (или в классе).</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceContractAttribute">
          <source>Then use the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute&gt;</ph> attribute on one or more of the class (or interface) methods to define the contract's service operations.</source>
          <target state="translated">Затем используйте атрибут <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute&gt;</ph> в одном или нескольких методах класса (или интерфейса), чтобы определить операции службы контракта.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceContractAttribute">
          <source>When the service contract is implemented and combined with a <bpt id="p1">[</bpt>Bindings<ept id="p1">](~/docs/framework/wcf/bindings.md)</ept> and an <ph id="ph1">&lt;xref:System.ServiceModel.EndpointAddress&gt;</ph> object, the service contract is exposed for use by clients.</source>
          <target state="translated">Если контракт службы реализуется и объединяется с <bpt id="p1">[</bpt>привязки<ept id="p1">](~/docs/framework/wcf/bindings.md)</ept> и <ph id="ph1">&lt;xref:System.ServiceModel.EndpointAddress&gt;</ph> объекта контракта службы предоставляется для использования клиентами.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceContractAttribute">
          <source>For an overview of the process using simple examples, see <bpt id="p1">[</bpt>Getting Started Tutorial<ept id="p1">](~/docs/framework/wcf/getting-started-tutorial.md)</ept>.</source>
          <target state="translated">Общие сведения о процессе и простые примеры см. в разделе <bpt id="p1">[</bpt>учебник по началу работы<ept id="p1">](~/docs/framework/wcf/getting-started-tutorial.md)</ept>.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceContractAttribute">
          <source>For more information about creating service contracts, see <bpt id="p1">[</bpt>Designing and Implementing Services<ept id="p1">](~/docs/framework/wcf/designing-and-implementing-services.md)</ept>.</source>
          <target state="translated">Дополнительные сведения о создании контрактов службы см. в разделе <bpt id="p1">[</bpt>проектирование и реализация служб<ept id="p1">](~/docs/framework/wcf/designing-and-implementing-services.md)</ept>.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceContractAttribute">
          <source>The information expressed by a <ph id="ph1">&lt;xref:System.ServiceModel.ServiceContractAttribute&gt;</ph> and its interface is loosely related to the Web Services Description Language (WSDL) <ph id="ph2">`&lt;portType&gt;`</ph> element.</source>
          <target state="translated">Данные, предоставляемые классом <ph id="ph1">&lt;xref:System.ServiceModel.ServiceContractAttribute&gt;</ph> и его интерфейсом, слабо связаны с элементом <ph id="ph2">`&lt;portType&gt;`</ph> языка описания служб (WSDL).</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceContractAttribute">
          <source>A service contract is used on the service side to specify what the service’s endpoint exposes to callers.</source>
          <target state="translated">Контракт службы используется на стороне службы для указания того, что предоставляет вызывающим сторонам конечная точка службы.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceContractAttribute">
          <source>It is also used on the client side to specify the contract of the endpoint with which the client communicates and, in the case of duplex contracts, to specify the callback contract (using the <ph id="ph1">&lt;xref:System.ServiceModel.ServiceContractAttribute.CallbackContract%2A&gt;</ph> property) that the client must implement in order to participate in a duplex conversation.</source>
          <target state="translated">Кроме того, он используется на стороне клиента для указания контракта конечной точки, с которой взаимодействует клиент, а в случае дуплексных контрактов — для указания контракта обратного вызова (с использованием свойства <ph id="ph1">&lt;xref:System.ServiceModel.ServiceContractAttribute.CallbackContract%2A&gt;</ph>), который должен реализовать клиент, чтобы принять участие в дуплексном диалоге.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceContractAttribute">
          <source>An interface or class that is decorated with <ph id="ph1">&lt;xref:System.ServiceModel.ServiceContractAttribute&gt;</ph> must also have at least one method marked with the <ph id="ph2">&lt;xref:System.ServiceModel.OperationContractAttribute&gt;</ph> attribute to expose any functionality.</source>
          <target state="translated">Интерфейс или класс, отмеченный атрибутом <ph id="ph1">&lt;xref:System.ServiceModel.ServiceContractAttribute&gt;</ph>, также должен иметь как минимум один метод, отмеченный атрибутом <ph id="ph2">&lt;xref:System.ServiceModel.OperationContractAttribute&gt;</ph>, для предоставления всех функциональных возможностей.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceContractAttribute">
          <source>See the Examples section for a code example of the simplest use of the two attributes to define and implement a service.</source>
          <target state="translated">Пример кода простейшего использования двух атрибутов для определения и реализации службы см. в разделе "Примеры".</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceContractAttribute">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.ServiceContractAttribute&gt;</ph> properties to modify the service contract.</source>
          <target state="translated">Чтобы изменить контракт службы, используйте свойства <ph id="ph1">&lt;xref:System.ServiceModel.ServiceContractAttribute&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceContractAttribute">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.ServiceContractAttribute.ConfigurationName%2A&gt;</ph> property specifies the name of the service element in the configuration file to use.</source>
          <target state="translated">Свойство <ph id="ph1">&lt;xref:System.ServiceModel.ServiceContractAttribute.ConfigurationName%2A&gt;</ph> определяет имя элемента службы в используемом файле конфигурации.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceContractAttribute">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.ServiceContractAttribute.Name%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.ServiceModel.ServiceContractAttribute.Namespace%2A&gt;</ph> properties control the name and namespace of the contract in the WSDL <ph id="ph3">`&lt;portType&gt;`</ph> element.</source>
          <target state="translated">Свойства <ph id="ph1">&lt;xref:System.ServiceModel.ServiceContractAttribute.Name%2A&gt;</ph> и <ph id="ph2">&lt;xref:System.ServiceModel.ServiceContractAttribute.Namespace%2A&gt;</ph> управляют именем и пространством имен контракта в элементе <ph id="ph3">`&lt;portType&gt;`</ph> языка WSDL.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceContractAttribute">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.ServiceContractAttribute.SessionMode%2A&gt;</ph> property specifies whether the contract requires a binding that supports sessions.</source>
          <target state="translated">Свойство <ph id="ph1">&lt;xref:System.ServiceModel.ServiceContractAttribute.SessionMode%2A&gt;</ph> определяет, требуется ли контракту привязка, поддерживающая сеансы.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceContractAttribute">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.ServiceContractAttribute.CallbackContract%2A&gt;</ph> property specifies the return contract in a two-way (duplex) conversation.</source>
          <target state="translated">Свойство <ph id="ph1">&lt;xref:System.ServiceModel.ServiceContractAttribute.CallbackContract%2A&gt;</ph> определяет возвращаемый контракт в двустороннем (дуплексном) диалоге.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceContractAttribute">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.ServiceContractAttribute.HasProtectionLevel%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.ServiceModel.ServiceContractAttribute.ProtectionLevel%2A&gt;</ph> properties indicate whether all messages supporting the contract have a explicit <ph id="ph3">&lt;xref:System.ServiceModel.ServiceContractAttribute.ProtectionLevel%2A&gt;</ph> value, and if so, what that level is.</source>
          <target state="translated">Свойства <ph id="ph1">&lt;xref:System.ServiceModel.ServiceContractAttribute.HasProtectionLevel%2A&gt;</ph> и <ph id="ph2">&lt;xref:System.ServiceModel.ServiceContractAttribute.ProtectionLevel%2A&gt;</ph> определяют, все ли сообщения, поддерживающие контракт, имеют явное значение <ph id="ph3">&lt;xref:System.ServiceModel.ServiceContractAttribute.ProtectionLevel%2A&gt;</ph>, и если да, на каком уровне.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceContractAttribute">
          <source>Services implement service contracts, which represent the data exchange that a service type supports.</source>
          <target state="translated">Службы реализуют контракты служб, представляющие обмен данными, поддерживаемый типом службы.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceContractAttribute">
          <source>A service class can implement a service contract (by implementing an interface marked with <ph id="ph1">&lt;xref:System.ServiceModel.ServiceContractAttribute&gt;</ph> that has methods marked with <ph id="ph2">&lt;xref:System.ServiceModel.OperationContractAttribute&gt;</ph>) or it can be marked with the <ph id="ph3">&lt;xref:System.ServiceModel.ServiceContractAttribute&gt;</ph> and apply the <ph id="ph4">&lt;xref:System.ServiceModel.OperationContractAttribute&gt;</ph> attribute to its own methods.</source>
          <target state="translated">Класс службы может реализовать контракт службы (путем реализации интерфейса, отмеченного атрибутом <ph id="ph1">&lt;xref:System.ServiceModel.ServiceContractAttribute&gt;</ph>, который содержит методы, отмеченные атрибутом <ph id="ph2">&lt;xref:System.ServiceModel.OperationContractAttribute&gt;</ph>) или может быть отмечен атрибутом <ph id="ph3">&lt;xref:System.ServiceModel.ServiceContractAttribute&gt;</ph> и применять атрибут <ph id="ph4">&lt;xref:System.ServiceModel.OperationContractAttribute&gt;</ph> к собственным методам.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceContractAttribute">
          <source>(If a class implements an interface marked with <ph id="ph1">&lt;xref:System.ServiceModel.ServiceContractAttribute&gt;</ph>, it cannot be itself marked with <ph id="ph2">&lt;xref:System.ServiceModel.ServiceContractAttribute&gt;</ph>.) Methods on service types that are marked with the <ph id="ph3">&lt;xref:System.ServiceModel.OperationContractAttribute&gt;</ph> are treated as part of a default service contract specified by the service type itself.</source>
          <target state="translated">(Если класс реализует интерфейс, отмеченный атрибутом <ph id="ph1">&lt;xref:System.ServiceModel.ServiceContractAttribute&gt;</ph>, сам он не может быть отмечен атрибутом <ph id="ph2">&lt;xref:System.ServiceModel.ServiceContractAttribute&gt;</ph>.) Методы в типах службы, отмеченные атрибутом <ph id="ph3">&lt;xref:System.ServiceModel.OperationContractAttribute&gt;</ph>, считаются частью контракта службы по умолчанию, заданного самим типом службы.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceContractAttribute">
          <source>For details about service operations, see <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute&gt;</ph>.</source>
          <target state="translated">Подробные сведения об операциях службы см. в разделе <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceContractAttribute">
          <source>By default, the <ph id="ph1">&lt;xref:System.ServiceModel.ServiceContractAttribute.Name%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.ServiceModel.ServiceContractAttribute.Namespace%2A&gt;</ph> properties are the name of the contract type and <ph id="ph3">`http://tempuri.org`</ph>, respectively, and <ph id="ph4">&lt;xref:System.ServiceModel.ServiceContractAttribute.ProtectionLevel%2A&gt;</ph> is <ph id="ph5">&lt;xref:System.Net.Security.ProtectionLevel.None?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">По умолчанию свойства <ph id="ph1">&lt;xref:System.ServiceModel.ServiceContractAttribute.Name%2A&gt;</ph> и <ph id="ph2">&lt;xref:System.ServiceModel.ServiceContractAttribute.Namespace%2A&gt;</ph> являются именем типа контракта и <ph id="ph3">`http://tempuri.org`</ph> соответственно, а уровень <ph id="ph4">&lt;xref:System.ServiceModel.ServiceContractAttribute.ProtectionLevel%2A&gt;</ph> является уровнем <ph id="ph5">&lt;xref:System.Net.Security.ProtectionLevel.None?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceContractAttribute">
          <source>It is recommended that service contracts explicitly set their names, namespaces, and protection levels using these properties.</source>
          <target state="translated">Рекомендуется, чтобы контракты службы явным образом задавали свои имена, пространства имен и уровни защиты с использованием этих свойств.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceContractAttribute">
          <source>Doing so accomplishes two goals.</source>
          <target state="translated">Это помогает достичь двух целей.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceContractAttribute">
          <source>First, it builds a contract that is not directly connected to the managed type information, enabling you to refactor your managed code and namespaces without breaking the contract as it is expressed in WSDL.</source>
          <target state="translated">Во-первых, создается контракт, не связанный напрямую со сведениями об управляемых типах, что позволяет выполнить рефакторинг управляемого кода и пространств имен без нарушения контракта, поскольку он выражен на языке WSDL.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceContractAttribute">
          <source>Second, explicitly requiring a certain level of protection on the contract itself enables the runtime to validate whether the binding configuration supports that level of security, preventing poor configuration from exposing sensitive information.</source>
          <target state="translated">Во-вторых, явная необходимость в определенном уровне защиты самого контракта позволяет среде выполнения проверять, поддерживает ли конфигурация привязки этот уровень безопасности, не допуская раскрытия конфиденциальных сведений неудовлетворительной конфигурацией.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceContractAttribute">
          <source>For more information about protection levels, see <bpt id="p1">[</bpt>Understanding Protection Level<ept id="p1">](~/docs/framework/wcf/understanding-protection-level.md)</ept>.</source>
          <target state="translated">Дополнительные сведения об уровнях защиты см. в разделе <bpt id="p1">[</bpt>уровень защиты основные сведения о<ept id="p1">](~/docs/framework/wcf/understanding-protection-level.md)</ept>.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceContractAttribute">
          <source>To expose a service for use by client applications, create a host application to register your service endpoint with <ph id="ph1">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph>.</source>
          <target state="translated">Чтобы предоставить службу для использования клиентскими приложениями, создайте ведущее приложение для регистрации конечной точки службы с помощью <ph id="ph1">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph>.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceContractAttribute">
          <source>You can host WCF services using Windows Activation Services (WAS), in console applications, Windows Service applications, ASP.NET applications, Windows Forms applications, or any other kind of application domain.</source>
          <target state="translated">Можно размещать службы WCF, с помощью службы активации Windows (WAS) в консольных приложений, служебных приложений Windows, приложений ASP.NET, приложениях Windows Forms или любого другого домена приложения.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceContractAttribute">
          <source>Hosting in the WAS is very similar to creating an ASP.NET application.</source>
          <target state="translated">Размещение в WAS очень похоже на создание приложения ASP.NET.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceContractAttribute">
          <source>For details, see <bpt id="p1">[</bpt>How to: Host a WCF Service in IIS<ept id="p1">](~/docs/framework/wcf/feature-details/how-to-host-a-wcf-service-in-iis.md)</ept>.</source>
          <target state="translated">Дополнительные сведения см. в разделе <bpt id="p1">[</bpt>как: размещение службы WCF в IIS<ept id="p1">](~/docs/framework/wcf/feature-details/how-to-host-a-wcf-service-in-iis.md)</ept>.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceContractAttribute">
          <source>Clients either use the service contract interface (the interface marked with <ph id="ph1">&lt;xref:System.ServiceModel.ServiceContractAttribute&gt;</ph>) to create a channel to the service or they use the client objects (which combine the type information of the service contract interface with the <ph id="ph2">&lt;xref:System.ServiceModel.ClientBase%601&gt;</ph> class) to communicate with your service.</source>
          <target state="translated">Клиенты либо используют интерфейс контракта службы (интерфейс, отмеченный атрибутом <ph id="ph1">&lt;xref:System.ServiceModel.ServiceContractAttribute&gt;</ph>) для создания канала к службе, либо используют объекты клиента (которые объединяют сведения о типе интерфейса контракта службы с классом <ph id="ph2">&lt;xref:System.ServiceModel.ClientBase%601&gt;</ph>) для взаимодействия со службой.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceContractAttribute">
          <source>For details on client channels to services, see the <ph id="ph1">&lt;xref:System.ServiceModel.ChannelFactory%601&gt;</ph> class and <bpt id="p1">[</bpt>WCF Client Overview<ept id="p1">](~/docs/framework/wcf/wcf-client-overview.md)</ept>.</source>
          <target state="translated">Дополнительные сведения о клиентских каналах к службам см. в разделе <ph id="ph1">&lt;xref:System.ServiceModel.ChannelFactory%601&gt;</ph> класса и <bpt id="p1">[</bpt>Общие сведения о клиенте WCF<ept id="p1">](~/docs/framework/wcf/wcf-client-overview.md)</ept>.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceContractAttribute">
          <source>Using a <ph id="ph1">&lt;xref:System.ServiceModel.ServiceContractAttribute&gt;</ph> class or interface to inherit from another <ph id="ph2">&lt;xref:System.ServiceModel.ServiceContractAttribute&gt;</ph> class or interface extends the parent contract.</source>
          <target state="translated">При использовании класса или интерфейса <ph id="ph1">&lt;xref:System.ServiceModel.ServiceContractAttribute&gt;</ph> для наследования от другого класса или интерфейса <ph id="ph2">&lt;xref:System.ServiceModel.ServiceContractAttribute&gt;</ph> расширяется родительский контракт.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceContractAttribute">
          <source>For example, if an <ph id="ph1">`IChildContract`</ph> interface is marked with <ph id="ph2">&lt;xref:System.ServiceModel.ServiceContractAttribute&gt;</ph> and inherited from another service contract interface, <ph id="ph3">`IParentContract`</ph>, the <ph id="ph4">`IChildContract`</ph> service contract contains the methods of both <ph id="ph5">`IParentContract`</ph> and <ph id="ph6">`IChildContract`</ph>.</source>
          <target state="translated">Например, если интерфейс <ph id="ph1">`IChildContract`</ph> отмечен атрибутом <ph id="ph2">&lt;xref:System.ServiceModel.ServiceContractAttribute&gt;</ph> и унаследован от другого интерфейса контракта службы, <ph id="ph3">`IParentContract`</ph>, контракт службы <ph id="ph4">`IChildContract`</ph> содержит методы как <ph id="ph5">`IParentContract`</ph>, так и <ph id="ph6">`IChildContract`</ph>.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceContractAttribute">
          <source>Extending contracts (whether on classes or interfaces) is very similar to extending managed classes and interfaces.</source>
          <target state="translated">Расширение контрактов (как в классах, так и в интерфейсах) очень похоже на расширение управляемых классов и интерфейсов.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceContractAttribute">
          <source>The most flexible approach to creating services is to define service contract interfaces first and then have your service class implement that interface.</source>
          <target state="translated">Самым гибким подходом к созданию служб является первоначальное определение интерфейсов контрактов службы и последующая реализация этого интерфейса классом службы.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceContractAttribute">
          <source>(This is also the simplest way to build your services if you must implement service contracts that have been defined by others.) Building services directly by marking a class with <ph id="ph1">&lt;xref:System.ServiceModel.ServiceContractAttribute&gt;</ph> and its methods with <ph id="ph2">&lt;xref:System.ServiceModel.OperationContractAttribute&gt;</ph> works when the service exposes only one contract (but that contract can be exposed by more than one endpoint).</source>
          <target state="translated">(Это также самый простой способ создать службы, если необходимо реализовать контракты службы, определенные другими пользователями.) Создавать службы напрямую, отметив класс атрибутом <ph id="ph1">&lt;xref:System.ServiceModel.ServiceContractAttribute&gt;</ph>, а его методы — атрибутом <ph id="ph2">&lt;xref:System.ServiceModel.OperationContractAttribute&gt;</ph>, можно, если служба предоставляет только один контракт (но этот контракт может быть предоставлен несколькими конечными точками).</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceContractAttribute">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.ServiceContractAttribute.CallbackContract%2A&gt;</ph> property to indicate another service contract that, when bound together with the original service contract, define a message exchange that can flow in two ways independently.</source>
          <target state="translated">Используйте <ph id="ph1">&lt;xref:System.ServiceModel.ServiceContractAttribute.CallbackContract%2A&gt;</ph> свойство, чтобы указать другой контракт службы, который, будучи связанным с исходным контрактом службы, определяет обмен сообщениями, который может осуществляться независимо друг от друга двумя способами.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceContractAttribute">
          <source>For details, see <ph id="ph1">&lt;xref:System.ServiceModel.ServiceContractAttribute.CallbackContract%2A&gt;</ph>.</source>
          <target state="translated">Дополнительные сведения см. в разделе <ph id="ph1">&lt;xref:System.ServiceModel.ServiceContractAttribute.CallbackContract%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceContractAttribute">
          <source>The following code example shows how to apply the <ph id="ph1">&lt;xref:System.ServiceModel.ServiceContractAttribute&gt;</ph> to an interface to define a service contract with one service method, indicated by the <ph id="ph2">&lt;xref:System.ServiceModel.OperationContractAttribute&gt;</ph>.</source>
          <target state="translated">В следующем примере кода показано, как применить атрибут <ph id="ph1">&lt;xref:System.ServiceModel.ServiceContractAttribute&gt;</ph> к интерфейсу, чтобы определить контракт службы с одним методом службы, указанным атрибутом <ph id="ph2">&lt;xref:System.ServiceModel.OperationContractAttribute&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceContractAttribute">
          <source>In this case, the protection level required of bindings for all messages is <ph id="ph1">&lt;xref:System.Net.Security.ProtectionLevel.EncryptAndSign?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">В этом случае уровень защиты, требуемый от привязок для всех сообщений, — <ph id="ph1">&lt;xref:System.Net.Security.ProtectionLevel.EncryptAndSign?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceContractAttribute">
          <source>The code example then implements that contract on the <ph id="ph1">`SampleService`</ph> class.</source>
          <target state="translated">Затем в примере кода этот контракт реализуется в классе <ph id="ph1">`SampleService`</ph>.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceContractAttribute">
          <source>The following code example shows a simple configuration file for the preceding service that creates one endpoint.</source>
          <target state="translated">В следующем примере кода показан простой файл конфигурации для указанной выше службы, создающей одну конечную точку.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceContractAttribute">
          <source>The following code example shows a simple client that invokes the preceding <ph id="ph1">`SampleService`</ph>.</source>
          <target state="translated">В следующем примере кода показан простой клиент, вызывающий приведенный выше класс <ph id="ph1">`SampleService`</ph>.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceContractAttribute.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.ServiceContractAttribute" /&gt;</ph> class.</source>
          <target state="translated">Инициализирует новый экземпляр класса <ph id="ph1">&lt;see cref="T:System.ServiceModel.ServiceContractAttribute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ServiceContractAttribute.#ctor">
          <source>The constructor creates an instance of the attribute with no session requirements, no callback contract, and the default name and namespace.</source>
          <target state="translated">Конструктор создает экземпляр атрибута без требований сеанса и без контракта обратного вызова, а также имя и пространство имен по умолчанию.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.ServiceContractAttribute.CallbackContract">
          <source>Gets or sets the type of callback contract when the contract is a duplex contract.</source>
          <target state="translated">Возвращает или задает тип контракта обратного вызова, если контракт является дуплексным.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceContractAttribute.CallbackContract">
          <source>A <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> that indicates the callback contract.</source>
          <target state="translated">Тип <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>, указывающий контракт обратного вызова.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceContractAttribute.CallbackContract">
          <source>The default is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Значение по умолчанию: <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceContractAttribute.CallbackContract">
          <source>Specify an interface in the <ph id="ph1">&lt;xref:System.ServiceModel.ServiceContractAttribute.CallbackContract%2A&gt;</ph> property that represents the required opposite contract in a two-way (or duplex) message exchange.</source>
          <target state="translated">Задает интерфейс в свойстве <ph id="ph1">&lt;xref:System.ServiceModel.ServiceContractAttribute.CallbackContract%2A&gt;</ph>, представляющем требуемый противоположный контракт при двустороннем (или дуплексном) обмене сообщениями.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceContractAttribute.CallbackContract">
          <source>This enables client applications to listen for inbound operation calls that the server-side service application can send independently of client activity.</source>
          <target state="translated">Это позволяет клиентским приложениям ожидать передачи данных для входящих вызовов операций, которые приложение службы на стороне сервера может отправлять независимо от действия клиента.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceContractAttribute.CallbackContract">
          <source>Callback contracts that have one-way operations represent calls from the service that the client can handle.</source>
          <target state="translated">Контракты обратного вызова, имеющие односторонние операции, представляют вызовы от службы, которые может обработать клиент.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceContractAttribute.CallbackContract">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.ServiceContractAttribute&gt;</ph> attribute is ignored on callback contracts.</source>
          <target state="translated">В контрактах обратного вызова атрибут <ph id="ph1">&lt;xref:System.ServiceModel.ServiceContractAttribute&gt;</ph> пропускается.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceContractAttribute.CallbackContract">
          <source>To configure runtime behavior of callback objects, use the <ph id="ph1">&lt;xref:System.ServiceModel.CallbackBehaviorAttribute?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Чтобы настроить поведение среды выполнения объектов обратного вызова, используйте атрибут <ph id="ph1">&lt;xref:System.ServiceModel.CallbackBehaviorAttribute?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceContractAttribute.CallbackContract">
          <source>The following code example shows a service that specifies a callback contract, which indicates that a service of type <ph id="ph1">`IDuplexHello`</ph> must have a correspondent that implements a service of type <ph id="ph2">`IHelloCallbackContract`</ph>.</source>
          <target state="translated">В следующем примере кода показана служба, которая задает контракт обратного вызова, указывающий, что служба, принадлежащая к типу <ph id="ph1">`IDuplexHello`</ph>, должна иметь корреспондент, который реализует службу, принадлежащую к типу <ph id="ph2">`IHelloCallbackContract`</ph>.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceContractAttribute.CallbackContract">
          <source>In addition, <ph id="ph1">`IHelloCallbackContract`</ph> implements a one-way callback method, enabling the service to call the client without waiting for a reply to support a distributed, event-driven client.</source>
          <target state="translated">Кроме того, <ph id="ph1">`IHelloCallbackContract`</ph> реализует односторонний метод обратного вызова, позволяющий службе вызывать клиент без ожидания ответа для поддержки распределенного клиента, управляемого событиями.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.ServiceContractAttribute.ConfigurationName">
          <source>Gets or sets the name used to locate the service in an application configuration file.</source>
          <target state="translated">Возвращает или задает имя, используемое для поиска службы в файле конфигурации приложения.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceContractAttribute.ConfigurationName">
          <source>The name used to locate the service element in an application configuration file.</source>
          <target state="translated">Имя, используемое для поиска элемента службы в файле конфигурации приложения.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceContractAttribute.ConfigurationName">
          <source>The default is the name of the service implementation class.</source>
          <target state="translated">По умолчанию — это имя класса реализации службы.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceContractAttribute.ConfigurationName">
          <source>To set the value by which the configuration system locates a contract value in the configuration file, see <ph id="ph1">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute.ConfigurationName%2A&gt;</ph>.</source>
          <target state="translated">Сведения о процедуре задания значения, с помощью которого система конфигурации выполняет поиск значения контракта в файле конфигурации, см. в разделе <ph id="ph1">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute.ConfigurationName%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.ServiceContractAttribute.ConfigurationName">
          <source>The value is null.</source>
          <target state="translated">Значение — null.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.ServiceContractAttribute.ConfigurationName">
          <source>The value is an empty string.</source>
          <target state="translated">Значением является пустая строка.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.ServiceContractAttribute.HasProtectionLevel">
          <source>Gets a value that indicates whether the member has a protection level assigned.</source>
          <target state="translated">Возвращает значение, указывающее, присвоен ли участнику уровень защиты.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceContractAttribute.HasProtectionLevel">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="P:System.ServiceModel.ServiceContractAttribute.ProtectionLevel" /&gt;</ph> property is not <ph id="ph3">&lt;see cref="F:System.Net.Security.ProtectionLevel.None" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, если свойство <ph id="ph2">&lt;see cref="P:System.ServiceModel.ServiceContractAttribute.ProtectionLevel" /&gt;</ph> не является <ph id="ph3">&lt;see cref="F:System.Net.Security.ProtectionLevel.None" /&gt;</ph>, в противном случае <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceContractAttribute.HasProtectionLevel">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Значение по умолчанию: <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceContractAttribute.HasProtectionLevel">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.ServiceContractAttribute.HasProtectionLevel%2A&gt;</ph> property indicates whether a protection level value other than <ph id="ph2">`false`</ph> has been set for the contract.</source>
          <target state="translated">Свойство <ph id="ph1">&lt;xref:System.ServiceModel.ServiceContractAttribute.HasProtectionLevel%2A&gt;</ph> указывает, присвоено ли контракту значение уровня защиты, отличное от <ph id="ph2">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.ServiceContractAttribute.Name">
          <source>Gets or sets the name for the <ph id="ph1">&lt;see langword="&amp;lt;portType&amp;gt;" /&gt;</ph> element in Web Services Description Language (WSDL).</source>
          <target state="translated">Получает или задает имя элемента <ph id="ph1">&lt;see langword="&amp;lt;portType&amp;gt;" /&gt;</ph> в языке WSDL.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceContractAttribute.Name">
          <source>The default value is the name of the class or interface to which the <ph id="ph1">&lt;see cref="T:System.ServiceModel.ServiceContractAttribute" /&gt;</ph> is applied.</source>
          <target state="translated">В качестве значения по умолчанию используется имя класса или интерфейса, к которому применен атрибут <ph id="ph1">&lt;see cref="T:System.ServiceModel.ServiceContractAttribute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceContractAttribute.Name">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.ServiceContractAttribute.Name%2A&gt;</ph> and the <ph id="ph2">&lt;xref:System.ServiceModel.ServiceContractAttribute.Namespace%2A&gt;</ph> properties to control the name and namespace of the <ph id="ph3">`&lt;portType&gt;`</ph> element in WSDL.</source>
          <target state="translated">Используйте свойства <ph id="ph1">&lt;xref:System.ServiceModel.ServiceContractAttribute.Name%2A&gt;</ph> и <ph id="ph2">&lt;xref:System.ServiceModel.ServiceContractAttribute.Namespace%2A&gt;</ph>, чтобы управлять именем и пространством имен элемента <ph id="ph3">`&lt;portType&gt;`</ph> в языке WSDL.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceContractAttribute.Name">
          <source>The following code example shows how to use the <ph id="ph1">&lt;xref:System.ServiceModel.ServiceContractAttribute.Name%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.ServiceModel.ServiceContractAttribute.Namespace%2A&gt;</ph> properties of the <ph id="ph3">&lt;xref:System.ServiceModel.ServiceContractAttribute&gt;</ph> to set the corresponding values in WSDL.</source>
          <target state="translated">В следующем примере кода показано, как использовать свойства <ph id="ph1">&lt;xref:System.ServiceModel.ServiceContractAttribute.Name%2A&gt;</ph> и <ph id="ph2">&lt;xref:System.ServiceModel.ServiceContractAttribute.Namespace%2A&gt;</ph> атрибута <ph id="ph3">&lt;xref:System.ServiceModel.ServiceContractAttribute&gt;</ph>, чтобы задать соответствующие значения в языке WSDL.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceContractAttribute.Name">
          <source>The following code example shows an <ph id="ph1">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> client for the preceding service that imported WSDL using the <bpt id="p1">[</bpt>ServiceModel Metadata Utility Tool (Svcutil.exe)<ept id="p1">](~/docs/framework/wcf/servicemodel-metadata-utility-tool-svcutil-exe.md)</ept>.</source>
          <target state="translated">В следующем примере кода показан <ph id="ph1">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> клиента для указанной выше службы, который импортировал WSDL с помощью <bpt id="p1">[</bpt>ServiceModel Metadata Utility Tool (Svcutil.exe)<ept id="p1">](~/docs/framework/wcf/servicemodel-metadata-utility-tool-svcutil-exe.md)</ept>.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceContractAttribute.Name">
          <source>This client uses a <ph id="ph1">`HelloWorldProxy`</ph> client rather than a <ph id="ph2">`SampleServiceProxy`</ph> client (as is the case with the sample in the Example section of <ph id="ph3">&lt;xref:System.ServiceModel.ServiceContractAttribute&gt;</ph>).</source>
          <target state="translated">Этот клиент использует клиент <ph id="ph1">`HelloWorldProxy`</ph>, а не клиент <ph id="ph2">`SampleServiceProxy`</ph> (как в случае с примером в подразделе "Пример" раздела <ph id="ph3">&lt;xref:System.ServiceModel.ServiceContractAttribute&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.ServiceContractAttribute.Name">
          <source>The value is null.</source>
          <target state="translated">Значение — null.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.ServiceContractAttribute.Name">
          <source>The value is an empty string.</source>
          <target state="translated">Значением является пустая строка.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.ServiceContractAttribute.Namespace">
          <source>Gets or sets the namespace of the <ph id="ph1">&lt;see langword="&amp;lt;portType&amp;gt;" /&gt;</ph> element in Web Services Description Language (WSDL).</source>
          <target state="translated">Получает или задает пространство имен элемента <ph id="ph1">&lt;see langword="&amp;lt;portType&amp;gt;" /&gt;</ph> в языке WSDL.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceContractAttribute.Namespace">
          <source>The WSDL namespace of the <ph id="ph1">&lt;see langword="&amp;lt;portType&amp;gt;" /&gt;</ph> element.</source>
          <target state="translated">Пространство имен WSDL элемента <ph id="ph1">&lt;see langword="&amp;lt;portType&amp;gt;" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceContractAttribute.Namespace">
          <source>The default value is "<ph id="ph1">http://tempuri.org</ph>".</source>
          <target state="translated">Значение по умолчанию — <ph id="ph1">http://tempuri.org</ph>.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceContractAttribute.Namespace">
          <source>The following code example shows how to use the <ph id="ph1">&lt;xref:System.ServiceModel.ServiceContractAttribute.Name%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.ServiceModel.ServiceContractAttribute.Namespace%2A&gt;</ph> properties of the <ph id="ph3">&lt;xref:System.ServiceModel.ServiceContractAttribute&gt;</ph> to set the corresponding values in WSDL.</source>
          <target state="translated">В следующем примере кода показано, как использовать свойства <ph id="ph1">&lt;xref:System.ServiceModel.ServiceContractAttribute.Name%2A&gt;</ph> и <ph id="ph2">&lt;xref:System.ServiceModel.ServiceContractAttribute.Namespace%2A&gt;</ph> атрибута <ph id="ph3">&lt;xref:System.ServiceModel.ServiceContractAttribute&gt;</ph>, чтобы задать соответствующие значения в языке WSDL.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceContractAttribute.Namespace">
          <source>The following code example shows an <ph id="ph1">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> client for the preceding service that imported WSDL using the <bpt id="p1">[</bpt>ServiceModel Metadata Utility Tool (Svcutil.exe)<ept id="p1">](~/docs/framework/wcf/servicemodel-metadata-utility-tool-svcutil-exe.md)</ept>.</source>
          <target state="translated">В следующем примере кода показан <ph id="ph1">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> клиента для указанной выше службы, который импортировал WSDL с помощью <bpt id="p1">[</bpt>ServiceModel Metadata Utility Tool (Svcutil.exe)<ept id="p1">](~/docs/framework/wcf/servicemodel-metadata-utility-tool-svcutil-exe.md)</ept>.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceContractAttribute.Namespace">
          <source>This client uses a <ph id="ph1">`HelloWorldClient`</ph> client rather than a <ph id="ph2">`SampleServiceClient`</ph> client (as is the case with the sample in the Example section of <ph id="ph3">&lt;xref:System.ServiceModel.ServiceContractAttribute&gt;</ph>).</source>
          <target state="translated">Этот клиент использует клиент <ph id="ph1">`HelloWorldClient`</ph>, а не клиент <ph id="ph2">`SampleServiceClient`</ph> (как в случае с примером в подразделе "Пример" раздела <ph id="ph3">&lt;xref:System.ServiceModel.ServiceContractAttribute&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.ServiceContractAttribute.ProtectionLevel">
          <source>Specifies whether the binding for the contract must support the value of the <ph id="ph1">&lt;see cref="P:System.ServiceModel.ServiceContractAttribute.ProtectionLevel" /&gt;</ph> property.</source>
          <target state="translated">Указывает, должна ли привязка для контракта поддерживать значение свойства <ph id="ph1">&lt;see cref="P:System.ServiceModel.ServiceContractAttribute.ProtectionLevel" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceContractAttribute.ProtectionLevel">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Net.Security.ProtectionLevel" /&gt;</ph> values.</source>
          <target state="translated">Одно из значений перечисления <ph id="ph1">&lt;see cref="T:System.Net.Security.ProtectionLevel" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceContractAttribute.ProtectionLevel">
          <source>The default is <ph id="ph1">&lt;see cref="F:System.Net.Security.ProtectionLevel.None" /&gt;</ph>.</source>
          <target state="translated">Значение по умолчанию: <ph id="ph1">&lt;see cref="F:System.Net.Security.ProtectionLevel.None" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceContractAttribute.ProtectionLevel">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.ServiceContractAttribute.ProtectionLevel%2A&gt;</ph> property to specify the degree to which the contract binding requires encryption, digital signatures, or both for endpoints that expose the contract.</source>
          <target state="translated">Используйте свойство <ph id="ph1">&lt;xref:System.ServiceModel.ServiceContractAttribute.ProtectionLevel%2A&gt;</ph>, чтобы задать для привязки степень необходимости в шифровании, цифровых сигнатурах или и в том, и в другом для конечных точек, предоставляющих контракт.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceContractAttribute.ProtectionLevel">
          <source>The value set here is the default value for all operation messages including faults.</source>
          <target state="translated">Заданное здесь значение является значением по умолчанию для всех сообщений операций, включая ошибки.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceContractAttribute.ProtectionLevel">
          <source>It is important to remember that the protection behavior at runtime is the combination of the protection-level values set on the following properties.</source>
          <target state="translated">Важно помнить, что поведение защиты в среде выполнения — это комбинация значений уровня защиты, заданных в следующих свойствах.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceContractAttribute.ProtectionLevel">
          <source>These properties have a hierarchical structure.</source>
          <target state="translated">Эти свойства имеют иерархическую структуру.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceContractAttribute.ProtectionLevel">
          <source>Setting the outermost value establishes the default setting for all narrower scopes unless a different value for a narrower scope is explicitly set.</source>
          <target state="translated">При задании внешнего значения устанавливается значение по умолчанию для всех более узких областей, если явно не задано другое значение для более узкой области.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceContractAttribute.ProtectionLevel">
          <source>In this case, the outer value remains the default for all narrower scopes with the exception of that specifically set.</source>
          <target state="translated">В этом случае внешнее значение остается значением по умолчанию для всех более узких областей за исключением тех областей, для которых задано иное значение.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceContractAttribute.ProtectionLevel">
          <source>For example, if <ph id="ph1">&lt;xref:System.ServiceModel.ServiceContractAttribute.ProtectionLevel%2A?displayProperty=nameWithType&gt;</ph> is set to <ph id="ph2">&lt;xref:System.Net.Security.ProtectionLevel.EncryptAndSign?displayProperty=nameWithType&gt;</ph> and no other narrower scopes have protection level settings, all messages in an operation contract are encrypted and signed.</source>
          <target state="translated">Например, если для уровня <ph id="ph1">&lt;xref:System.ServiceModel.ServiceContractAttribute.ProtectionLevel%2A?displayProperty=nameWithType&gt;</ph> задано значение <ph id="ph2">&lt;xref:System.Net.Security.ProtectionLevel.EncryptAndSign?displayProperty=nameWithType&gt;</ph> и другие более узкие области не имеют параметров уровня защиты, все сообщения в контракте операции шифруются и подписываются.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceContractAttribute.ProtectionLevel">
          <source>If, however, one of those operations has the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute&gt;</ph> set to <ph id="ph2">&lt;xref:System.Net.Security.ProtectionLevel.Sign?displayProperty=nameWithType&gt;</ph>, then the messages for that operation are signed but all other messages in the contract are encrypted and signed.</source>
          <target state="translated">Однако если атрибуту <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute&gt;</ph> одной из этих операций присвоено значение <ph id="ph2">&lt;xref:System.Net.Security.ProtectionLevel.Sign?displayProperty=nameWithType&gt;</ph>, сообщения для этой операции подписываются, а все другие сообщения в контракте шифруются и подписываются.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceContractAttribute.ProtectionLevel">
          <source>For details about protection levels and their assumptions and scopes, see <bpt id="p1">[</bpt>Understanding Protection Level<ept id="p1">](~/docs/framework/wcf/understanding-protection-level.md)</ept>.</source>
          <target state="translated">Дополнительные сведения об уровнях защиты и их предположения и областей см. в разделе <bpt id="p1">[</bpt>уровень защиты основные сведения о<ept id="p1">](~/docs/framework/wcf/understanding-protection-level.md)</ept>.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceContractAttribute.ProtectionLevel">
          <source>The scopes at which these values are set are:</source>
          <target state="translated">Ниже приводятся области, в которых заданы эти значения.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceContractAttribute.ProtectionLevel">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel%2A?displayProperty=nameWithType&gt;</ph> property on <ph id="ph2">&lt;xref:System.ServiceModel.MessageHeaderAttribute?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Свойство <ph id="ph1">&lt;xref:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel%2A?displayProperty=nameWithType&gt;</ph> атрибута <ph id="ph2">&lt;xref:System.ServiceModel.MessageHeaderAttribute?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceContractAttribute.ProtectionLevel">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel%2A?displayProperty=nameWithType&gt;</ph> property on <ph id="ph2">&lt;xref:System.ServiceModel.MessageBodyMemberAttribute?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Свойство <ph id="ph1">&lt;xref:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel%2A?displayProperty=nameWithType&gt;</ph> атрибута <ph id="ph2">&lt;xref:System.ServiceModel.MessageBodyMemberAttribute?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceContractAttribute.ProtectionLevel">
          <source>When there is no protection level explicitly specified on the contract and the underlying binding supports security (whether at the transport or message level), the effective protection level for the whole contract is <ph id="ph1">&lt;xref:System.Net.Security.ProtectionLevel.EncryptAndSign?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Если в контракте отсутствует явно заданный уровень защиты, а базовая привязка поддерживает безопасность (как на транспортном уровне, так и на уровне сообщений), эффективным уровнем защиты для всего контракта является <ph id="ph1">&lt;xref:System.Net.Security.ProtectionLevel.EncryptAndSign?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceContractAttribute.ProtectionLevel">
          <source>If the binding does not support security (such as <ph id="ph1">&lt;xref:System.ServiceModel.BasicHttpBinding&gt;</ph>), the effective <ph id="ph2">&lt;xref:System.Net.Security.ProtectionLevel?displayProperty=nameWithType&gt;</ph> is <ph id="ph3">&lt;xref:System.Net.Security.ProtectionLevel.None?displayProperty=nameWithType&gt;</ph> for the whole contract.</source>
          <target state="translated">Если привязка не поддерживает безопасность (например, <ph id="ph1">&lt;xref:System.ServiceModel.BasicHttpBinding&gt;</ph>), эффективным уровнем <ph id="ph2">&lt;xref:System.Net.Security.ProtectionLevel?displayProperty=nameWithType&gt;</ph> является <ph id="ph3">&lt;xref:System.Net.Security.ProtectionLevel.None?displayProperty=nameWithType&gt;</ph> для всего контракта.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceContractAttribute.ProtectionLevel">
          <source>The result is that depending upon the endpoint binding, clients can require different message or transport level security protection even when the contract specifies <ph id="ph1">&lt;xref:System.Net.Security.ProtectionLevel.None?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">В результате в зависимости от привязки конечной точки клиенты могут требовать разную степень защиты на уровне сообщений или транспортном уровне, даже если контракт задает <ph id="ph1">&lt;xref:System.Net.Security.ProtectionLevel.None?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.ServiceContractAttribute.ProtectionLevel">
          <source>The value is not one of the <ph id="ph1">&lt;see cref="T:System.Net.Security.ProtectionLevel" /&gt;</ph> values.</source>
          <target state="translated">Данное значение не является одним из значений <ph id="ph1">&lt;see cref="T:System.Net.Security.ProtectionLevel" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.ServiceContractAttribute.SessionMode">
          <source>Gets or sets whether sessions are allowed, not allowed or required.</source>
          <target state="translated">Возвращает или задает значение, указывающее, разрешены, запрещены или требуются ли сеансы.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceContractAttribute.SessionMode">
          <source>A <ph id="ph1">&lt;see cref="T:System.ServiceModel.SessionMode" /&gt;</ph> that indicates whether sessions are allowed, not allowed, or required.</source>
          <target state="translated">Режим <ph id="ph1">&lt;see cref="T:System.ServiceModel.SessionMode" /&gt;</ph> указывает, разрешены, запрещены или требуются ли сеансы.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceContractAttribute.SessionMode">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.ServiceContractAttribute.SessionMode%2A&gt;</ph> property to require bindings that support sessions between endpoints.</source>
          <target state="translated">Используйте свойство <ph id="ph1">&lt;xref:System.ServiceModel.ServiceContractAttribute.SessionMode%2A&gt;</ph>, чтобы потребовать привязки, поддерживающие сеансы между конечными точками.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceContractAttribute.SessionMode">
          <source>A session is a way of correlating a set of messages exchanged between two or more endpoints.</source>
          <target state="translated">Сеанс — это способ корреляции набора сообщений, обмен которыми выполняется между двумя или несколькими конечными точками.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceContractAttribute.SessionMode">
          <source>If your service supports channel sessions, you can then use the <ph id="ph1">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A&gt;</ph> property to specify the relationship between instances your service contract implementation and the channel session.</source>
          <target state="translated">Если служба поддерживает сеансы канала, можно использовать свойство <ph id="ph1">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A&gt;</ph>, чтобы указать отношение между экземплярами реализации контракта службы и сеансом канала.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceContractAttribute.SessionMode">
          <source>If a binding does not support sessions, an exception is thrown.</source>
          <target state="translated">Если привязка не поддерживает сеансы, выводится исключение.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceContractAttribute.SessionMode">
          <source>For example, if the <ph id="ph1">&lt;xref:System.ServiceModel.ServiceContractAttribute.SessionMode%2A&gt;</ph> property is set to <ph id="ph2">&lt;xref:System.ServiceModel.SessionMode.Required?displayProperty=nameWithType&gt;</ph> and the <ph id="ph3">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A&gt;</ph> property is set to <ph id="ph4">&lt;xref:System.ServiceModel.InstanceContextMode.PerSession&gt;</ph>, clients can use the same connection to make repeated calls to the same service object.</source>
          <target state="translated">Например, если свойству <ph id="ph1">&lt;xref:System.ServiceModel.ServiceContractAttribute.SessionMode%2A&gt;</ph> присвоено значение <ph id="ph2">&lt;xref:System.ServiceModel.SessionMode.Required?displayProperty=nameWithType&gt;</ph>, а свойству <ph id="ph3">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A&gt;</ph> присвоено значение <ph id="ph4">&lt;xref:System.ServiceModel.InstanceContextMode.PerSession&gt;</ph>, клиенты могут использовать одно и то же подключение для повторных вызовов одного и того же объекта службы.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceContractAttribute.SessionMode">
          <source>For more information about sessions and service instances, see <bpt id="p1">[</bpt>Using Sessions<ept id="p1">](~/docs/framework/wcf/using-sessions.md)</ept> and <bpt id="p2">[</bpt>Sessions, Instancing, and Concurrency<ept id="p2">](~/docs/framework/wcf/feature-details/sessions-instancing-and-concurrency.md)</ept>.</source>
          <target state="translated">Дополнительные сведения о сеансах и экземплярах службы см. в разделе <bpt id="p1">[</bpt>с использованием сеансов<ept id="p1">](~/docs/framework/wcf/using-sessions.md)</ept> и <bpt id="p2">[</bpt>сеансы, создания и параллелизм<ept id="p2">](~/docs/framework/wcf/feature-details/sessions-instancing-and-concurrency.md)</ept>.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceContractAttribute.SessionMode">
          <source>A channel that supports sessions supports the default association of a service instance with a particular session.</source>
          <target state="translated">Канал, поддерживающий сеансы, поддерживает ассоциацию экземпляра службы по умолчанию с определенным сеансом.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceContractAttribute.SessionMode">
          <source>However, different session implementations support different features in addition to session-based instancing control.</source>
          <target state="translated">Однако разные реализации сеанса поддерживают разные возможности помимо управления созданием экземпляров на основе сеанса.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceContractAttribute.SessionMode">
          <source>WCF provides four types of sessions that you can use to provide sessionful application behavior; each type of session provides additional behavior specific to the type of session it is.</source>
          <target state="translated">WCF предоставляет четыре типа сеансов, которые можно использовать для обеспечения поведения приложения сеанса; Каждый тип сеанса предоставляет дополнительное поведение, зависящее от типа сеанса, он не.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceContractAttribute.SessionMode">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Channels.SecurityBindingElement?displayProperty=nameWithType&gt;</ph> supports security sessions, in which both ends of communication have agreed upon an encryption and/or digital signature process; all messages are correlated with that specific secure conversation.</source>
          <target state="translated">Элемент <ph id="ph1">&lt;xref:System.ServiceModel.Channels.SecurityBindingElement?displayProperty=nameWithType&gt;</ph> поддерживает безопасные сеансы, в которых процесс шифрования и цифровой сигнатуры согласован для обеих взаимодействующих сторон. Все сообщения коррелируются с этим определенным безопасным диалогом.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceContractAttribute.SessionMode">
          <source>For more information, see <bpt id="p1">[</bpt>Securing Services<ept id="p1">](~/docs/framework/wcf/securing-services.md)</ept>.</source>
          <target state="translated">Дополнительные сведения см. в разделе <bpt id="p1">[</bpt>Защита служб<ept id="p1">](~/docs/framework/wcf/securing-services.md)</ept>.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceContractAttribute.SessionMode">
          <source>For example, the <ph id="ph1">&lt;xref:System.ServiceModel.WSHttpBinding?displayProperty=nameWithType&gt;</ph>, which contains support for both security sessions and reliable sessions, by default uses only a secure session which encrypts and digitally signs messages.</source>
          <target state="translated">Например, привязка <ph id="ph1">&lt;xref:System.ServiceModel.WSHttpBinding?displayProperty=nameWithType&gt;</ph>, содержащая поддержку как безопасных, так и надежных сеансов, по умолчанию использует только безопасный сеанс, в котором сообщения шифруются и защищаются цифровой подписью.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceContractAttribute.SessionMode">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.NetTcpBinding?displayProperty=nameWithType&gt;</ph> supports the sessions exposed by the TCP/IP connections to ensure that all messages are correlated by the connection session at the socket level.</source>
          <target state="translated">Привязка <ph id="ph1">&lt;xref:System.ServiceModel.NetTcpBinding?displayProperty=nameWithType&gt;</ph> поддерживает сеансы, предоставляемые подключениями TCP/IP, что обеспечивает корреляцию всех сообщений по сеансу подключения на уровне сокетов.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceContractAttribute.SessionMode">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Channels.ReliableSessionBindingElement?displayProperty=nameWithType&gt;</ph>, which implements the WS-ReliableMessaging specification, provides support for reliable sessions in which messages are delivered in order and exactly once, enabling confidence even when messages travel across multiple nodes during the conversation.</source>
          <target state="translated">Элемент <ph id="ph1">&lt;xref:System.ServiceModel.Channels.ReliableSessionBindingElement?displayProperty=nameWithType&gt;</ph>, реализующий спецификацию WS-ReliableMessaging, обеспечивает поддержку надежных сеансов, в которых сообщения доставляются по порядку и только один раз, что гарантирует достоверность даже при прохождении сообщений через несколько узлов во время диалога.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceContractAttribute.SessionMode">
          <source>For more information, see <bpt id="p1">[</bpt>Reliable Sessions<ept id="p1">](~/docs/framework/wcf/feature-details/reliable-sessions.md)</ept>.</source>
          <target state="translated">Дополнительные сведения см. в разделе <bpt id="p1">[</bpt>надежные сеансы<ept id="p1">](~/docs/framework/wcf/feature-details/reliable-sessions.md)</ept>.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceContractAttribute.SessionMode">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.NetMsmqBinding?displayProperty=nameWithType&gt;</ph> provides MSMQ datagram sessions.</source>
          <target state="translated">Привязка <ph id="ph1">&lt;xref:System.ServiceModel.NetMsmqBinding?displayProperty=nameWithType&gt;</ph> обеспечивает сеансы датаграммы MSMQ.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceContractAttribute.SessionMode">
          <source>For more information, see <bpt id="p1">[</bpt>Queues in WCF<ept id="p1">](~/docs/framework/wcf/feature-details/queues-in-wcf.md)</ept>.</source>
          <target state="translated">Дополнительные сведения см. в разделе <bpt id="p1">[</bpt>очереди в WCF<ept id="p1">](~/docs/framework/wcf/feature-details/queues-in-wcf.md)</ept>.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceContractAttribute.SessionMode">
          <source>Remember that setting the <ph id="ph1">&lt;xref:System.ServiceModel.ServiceContractAttribute.SessionMode%2A&gt;</ph> property does not specify the type of session the contract requires, only that it requires one.</source>
          <target state="translated">Помните, что задание свойства <ph id="ph1">&lt;xref:System.ServiceModel.ServiceContractAttribute.SessionMode%2A&gt;</ph> указывает только то, что для контракта требуется сеанс, но не задает тип этого сеанса.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceContractAttribute.SessionMode">
          <source>The following service contract requires that configured bindings use sessions when interacting with <ph id="ph1">`SampleDuplexHello`</ph> service implementations.</source>
          <target state="translated">Для следующего контракта службы требуется, чтобы настроенные привязки использовали сеансы при взаимодействии с реализациями службы <ph id="ph1">`SampleDuplexHello`</ph>.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.ServiceContractAttribute.SessionMode">
          <source>The value is not one of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.SessionMode" /&gt;</ph> values.</source>
          <target state="translated">Данное значение не является одним из значений <ph id="ph1">&lt;see cref="T:System.ServiceModel.SessionMode" /&gt;</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>